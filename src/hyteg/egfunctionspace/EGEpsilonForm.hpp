
/*
* Copyright (c) 2017-2022 Nils Kohl.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

# pragma once

# include "core/DataTypes.h"

# include "hyteg/dgfunctionspace/DGBasisInfo.hpp"
# include "hyteg/dgfunctionspace/DGForm.hpp"
# include "hyteg/dgfunctionspace/DGForm2D.hpp"
# include "hyteg/types/matrix.hpp"
# include "hyteg/types/pointnd.hpp"

# include "Eigen/Eigen"

namespace hyteg {
namespace dg{
namespace eg{

class EGEpsilonFormEP1_0 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormEP1_0( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id11 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502282*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.87382197101699555*p_affine_2_0, 0.063089014491502282*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.87382197101699555*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.50142650965817914*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.50142650965817914*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502227*p_affine_0_0 + 0.87382197101699555*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.063089014491502227*p_affine_0_1 + 0.87382197101699555*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.50142650965817914*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.50142650965817914*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id5 );
      Scalar_Variable_Coefficient_2D_mu( 0.87382197101699566*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.87382197101699566*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id6 );
      Scalar_Variable_Coefficient_2D_mu( 0.50142650965817914*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.50142650965817914*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id7 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id8 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id9 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id10 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id11 );

      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = 1.0 / (tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = 1.0*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = tmp_10*tmp_5 + tmp_4*tmp_8;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2*tmp_10 - 2*tmp_3*tmp_8;
      real_t tmp_14 = 0.5*tmp_7;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_17 = tmp_14*tmp_16;
      real_t tmp_18 = tmp_14*tmp_3;
      real_t tmp_19 = tmp_1*tmp_17 + tmp_15*tmp_5 + tmp_18*tmp_6 + tmp_18*tmp_9;
      real_t tmp_20 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_19;
      real_t tmp_21 = -4*tmp_15 - 4*tmp_17;
      real_t tmp_22 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_23 = 0.025422453185103409*tmp_22;
      real_t tmp_24 = tmp_11*tmp_13;
      real_t tmp_25 = tmp_19*tmp_21;
      real_t tmp_26 = 0.058393137863189684*tmp_22;
      real_t tmp_27 = 0.041425537809186785*tmp_22;
      real_t tmp_28 = 0.041425537809186785*tmp_22;
      real_t tmp_29 = 0.025422453185103409*tmp_22;
      real_t tmp_30 = 0.058393137863189684*tmp_22;
      real_t tmp_31 = 0.025422453185103409*tmp_22;
      real_t tmp_32 = 0.058393137863189684*tmp_22;
      real_t tmp_33 = 0.041425537809186785*tmp_22;
      real_t tmp_34 = 0.041425537809186785*tmp_22;
      real_t tmp_35 = 0.041425537809186785*tmp_22;
      real_t tmp_36 = 0.041425537809186785*tmp_22;
      real_t tmp_37 = 2.0*tmp_7;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_16*tmp_37;
      real_t tmp_40 = tmp_11*tmp_38;
      real_t tmp_41 = tmp_19*tmp_39;
      real_t tmp_42 = tmp_37*tmp_9;
      real_t tmp_43 = tmp_1*tmp_37;
      real_t tmp_44 = tmp_11*tmp_42;
      real_t tmp_45 = tmp_19*tmp_43;
      real_t a_0_0 = tmp_23*(tmp_12*tmp_13 + tmp_20*tmp_21) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_25) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_25) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_25) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_25) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_25) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_25) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_25) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_25) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_25);
      real_t a_0_1 = tmp_23*(tmp_12*tmp_38 + tmp_20*tmp_39) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_41) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_41) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_41) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_41) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_41) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_41) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_41);
      real_t a_0_2 = tmp_23*(tmp_12*tmp_42 + tmp_20*tmp_43) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_45) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_45) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_45) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_45) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_45) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_45) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_45) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_45) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_45) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_45) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_45);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = tmp_4*tmp_5;
      real_t tmp_7 = p_affine_2_0 + tmp_3;
      real_t tmp_8 = 1.0 / (-tmp_1*tmp_7 + tmp_6);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + tmp_0;
      real_t tmp_11 = tmp_8*(tmp_10 + 0.046910077030668018*tmp_9);
      real_t tmp_12 = tmp_11*tmp_2;
      real_t tmp_13 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_14 = p_affine_6_0 + tmp_3;
      real_t tmp_15 = tmp_8*(0.046910077030668018*tmp_13 + tmp_14);
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = tmp_12 + tmp_16;
      real_t tmp_18 = tmp_17 - 1.0/3.0;
      real_t tmp_19 = tmp_11*tmp_4;
      real_t tmp_20 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_21 = tmp_15*tmp_20;
      real_t tmp_22 = tmp_19 + tmp_21;
      real_t tmp_23 = tmp_22 - 1.0/3.0;
      real_t tmp_24 = p_affine_10_0*(tmp_1*tmp_18 + tmp_23*tmp_5);
      real_t tmp_25 = 0.5*tmp_8;
      real_t tmp_26 = tmp_25*tmp_4;
      real_t tmp_27 = tmp_2*tmp_25;
      real_t tmp_28 = -tmp_26 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_18*tmp_4 + tmp_23*tmp_7;
      real_t tmp_31 = 1.0*tmp_8;
      real_t tmp_32 = tmp_31*tmp_5;
      real_t tmp_33 = tmp_20*tmp_31;
      real_t tmp_34 = 0.5*p_affine_10_0*(-tmp_32 - tmp_33) + 0.5*p_affine_10_1*tmp_28;
      real_t tmp_35 = -tmp_12 - tmp_16 - tmp_19 - tmp_21 + 1;
      real_t tmp_36 = std::abs(std::pow((tmp_13*tmp_13) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_37 = 3/tmp_36;
      real_t tmp_38 = tmp_30*tmp_37;
      real_t tmp_39 = tmp_25*tmp_5;
      real_t tmp_40 = 0.5*p_affine_10_0*(tmp_31*tmp_6 + tmp_33*tmp_7) + 0.5*p_affine_10_1*(tmp_1*tmp_39 + tmp_20*tmp_39 + tmp_26*tmp_7 + tmp_27*tmp_4);
      real_t tmp_41 = 2*tmp_36;
      real_t tmp_42 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_41;
      real_t tmp_43 = tmp_8*(tmp_10 + 0.23076534494715845*tmp_9);
      real_t tmp_44 = tmp_2*tmp_43;
      real_t tmp_45 = tmp_8*(0.23076534494715845*tmp_13 + tmp_14);
      real_t tmp_46 = tmp_45*tmp_5;
      real_t tmp_47 = tmp_44 + tmp_46;
      real_t tmp_48 = tmp_47 - 1.0/3.0;
      real_t tmp_49 = tmp_4*tmp_43;
      real_t tmp_50 = tmp_20*tmp_45;
      real_t tmp_51 = tmp_49 + tmp_50;
      real_t tmp_52 = tmp_51 - 1.0/3.0;
      real_t tmp_53 = tmp_1*tmp_48 + tmp_5*tmp_52;
      real_t tmp_54 = p_affine_10_0*tmp_29;
      real_t tmp_55 = tmp_4*tmp_48 + tmp_52*tmp_7;
      real_t tmp_56 = -tmp_44 - tmp_46 - tmp_49 - tmp_50 + 1;
      real_t tmp_57 = tmp_37*tmp_55;
      real_t tmp_58 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41;
      real_t tmp_59 = tmp_8*(tmp_10 + 0.5*tmp_9);
      real_t tmp_60 = tmp_2*tmp_59;
      real_t tmp_61 = tmp_8*(0.5*tmp_13 + tmp_14);
      real_t tmp_62 = tmp_5*tmp_61;
      real_t tmp_63 = tmp_60 + tmp_62;
      real_t tmp_64 = tmp_63 - 1.0/3.0;
      real_t tmp_65 = tmp_4*tmp_59;
      real_t tmp_66 = tmp_20*tmp_61;
      real_t tmp_67 = tmp_65 + tmp_66;
      real_t tmp_68 = tmp_67 - 1.0/3.0;
      real_t tmp_69 = tmp_1*tmp_64 + tmp_5*tmp_68;
      real_t tmp_70 = tmp_4*tmp_64 + tmp_68*tmp_7;
      real_t tmp_71 = -tmp_60 - tmp_62 - tmp_65 - tmp_66 + 1;
      real_t tmp_72 = tmp_37*tmp_70;
      real_t tmp_73 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41;
      real_t tmp_74 = tmp_8*(tmp_10 + 0.7692346550528415*tmp_9);
      real_t tmp_75 = tmp_2*tmp_74;
      real_t tmp_76 = tmp_8*(0.7692346550528415*tmp_13 + tmp_14);
      real_t tmp_77 = tmp_5*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = tmp_78 - 1.0/3.0;
      real_t tmp_80 = tmp_4*tmp_74;
      real_t tmp_81 = tmp_20*tmp_76;
      real_t tmp_82 = tmp_80 + tmp_81;
      real_t tmp_83 = tmp_82 - 1.0/3.0;
      real_t tmp_84 = tmp_1*tmp_79 + tmp_5*tmp_83;
      real_t tmp_85 = tmp_4*tmp_79 + tmp_7*tmp_83;
      real_t tmp_86 = -tmp_75 - tmp_77 - tmp_80 - tmp_81 + 1;
      real_t tmp_87 = tmp_37*tmp_85;
      real_t tmp_88 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41;
      real_t tmp_89 = tmp_8*(tmp_10 + 0.95308992296933193*tmp_9);
      real_t tmp_90 = tmp_2*tmp_89;
      real_t tmp_91 = tmp_8*(0.95308992296933193*tmp_13 + tmp_14);
      real_t tmp_92 = tmp_5*tmp_91;
      real_t tmp_93 = tmp_90 + tmp_92;
      real_t tmp_94 = tmp_93 - 1.0/3.0;
      real_t tmp_95 = tmp_4*tmp_89;
      real_t tmp_96 = tmp_20*tmp_91;
      real_t tmp_97 = tmp_95 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/3.0;
      real_t tmp_99 = tmp_1*tmp_94 + tmp_5*tmp_98;
      real_t tmp_100 = tmp_4*tmp_94 + tmp_7*tmp_98;
      real_t tmp_101 = -tmp_90 - tmp_92 - tmp_95 - tmp_96 + 1;
      real_t tmp_102 = tmp_100*tmp_37;
      real_t tmp_103 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41;
      real_t tmp_104 = 0.25*tmp_8;
      real_t tmp_105 = tmp_104*tmp_2;
      real_t tmp_106 = 0.5*p_affine_10_0*tmp_32 + 0.5*p_affine_10_1*tmp_27;
      real_t tmp_107 = p_affine_10_0*tmp_105;
      real_t tmp_108 = tmp_104*tmp_4;
      real_t tmp_109 = 0.5*p_affine_10_0*tmp_33 + 0.5*p_affine_10_1*tmp_26;
      real_t tmp_110 = p_affine_10_0*tmp_108;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_34 + tmp_101*tmp_102 - tmp_101*tmp_40 - tmp_54*tmp_99) + tmp_42*(-tmp_24*tmp_29 - tmp_30*tmp_34 + tmp_35*tmp_38 - tmp_35*tmp_40) + tmp_58*(-tmp_34*tmp_55 - tmp_40*tmp_56 - tmp_53*tmp_54 + tmp_56*tmp_57) + tmp_73*(-tmp_34*tmp_70 - tmp_40*tmp_71 - tmp_54*tmp_69 + tmp_71*tmp_72) + tmp_88*(-tmp_34*tmp_85 - tmp_40*tmp_86 - tmp_54*tmp_84 + tmp_86*tmp_87);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_106 + tmp_102*tmp_93 - tmp_107*tmp_99 - tmp_40*tmp_93) + tmp_42*(-tmp_105*tmp_24 - tmp_106*tmp_30 + tmp_17*tmp_38 - tmp_17*tmp_40) + tmp_58*(-tmp_106*tmp_55 - tmp_107*tmp_53 - tmp_40*tmp_47 + tmp_47*tmp_57) + tmp_73*(-tmp_106*tmp_70 - tmp_107*tmp_69 - tmp_40*tmp_63 + tmp_63*tmp_72) + tmp_88*(-tmp_106*tmp_85 - tmp_107*tmp_84 - tmp_40*tmp_78 + tmp_78*tmp_87);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_109 + tmp_102*tmp_97 - tmp_110*tmp_99 - tmp_40*tmp_97) + tmp_42*(-tmp_108*tmp_24 - tmp_109*tmp_30 + tmp_22*tmp_38 - tmp_22*tmp_40) + tmp_58*(-tmp_109*tmp_55 - tmp_110*tmp_53 - tmp_40*tmp_51 + tmp_51*tmp_57) + tmp_73*(-tmp_109*tmp_70 - tmp_110*tmp_69 - tmp_40*tmp_67 + tmp_67*tmp_72) + tmp_88*(-tmp_109*tmp_85 - tmp_110*tmp_84 - tmp_40*tmp_82 + tmp_82*tmp_87);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = tmp_4*tmp_5;
      real_t tmp_7 = p_affine_2_0 + tmp_3;
      real_t tmp_8 = 1.0 / (-tmp_1*tmp_7 + tmp_6);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + 0.046910077030668018*tmp_9;
      real_t tmp_11 = tmp_8*(tmp_0 + tmp_10);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + 0.046910077030668018*tmp_12;
      real_t tmp_14 = tmp_8*(tmp_13 + tmp_3);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_5 - 1.0/3.0;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_11*tmp_4 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = p_affine_10_0*(tmp_1*tmp_15 + tmp_17*tmp_5);
      real_t tmp_19 = -p_affine_3_0;
      real_t tmp_20 = p_affine_4_0 + tmp_19;
      real_t tmp_21 = -p_affine_3_1;
      real_t tmp_22 = p_affine_5_1 + tmp_21;
      real_t tmp_23 = 1.0 / (tmp_20*tmp_22 - (p_affine_4_1 + tmp_21)*(p_affine_5_0 + tmp_19));
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = p_affine_3_0 - p_affine_5_0;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_25 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_15*tmp_4 + tmp_17*tmp_7;
      real_t tmp_31 = 1.0*tmp_23;
      real_t tmp_32 = tmp_22*tmp_31;
      real_t tmp_33 = p_affine_3_1 - p_affine_4_1;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = 0.5*p_affine_10_0*(-tmp_32 - tmp_34) + 0.5*p_affine_10_1*tmp_28;
      real_t tmp_36 = tmp_23*(tmp_10 + tmp_21);
      real_t tmp_37 = tmp_20*tmp_36;
      real_t tmp_38 = tmp_26*tmp_36;
      real_t tmp_39 = tmp_23*(tmp_13 + tmp_19);
      real_t tmp_40 = tmp_22*tmp_39;
      real_t tmp_41 = tmp_33*tmp_39;
      real_t tmp_42 = -tmp_37 - tmp_38 - tmp_40 - tmp_41 + 1;
      real_t tmp_43 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_44 = 3/tmp_43;
      real_t tmp_45 = tmp_30*tmp_44;
      real_t tmp_46 = 1.0*tmp_8;
      real_t tmp_47 = 0.5*tmp_8;
      real_t tmp_48 = tmp_4*tmp_47;
      real_t tmp_49 = tmp_47*tmp_5;
      real_t tmp_50 = 0.5*p_affine_10_0*(tmp_16*tmp_46*tmp_7 + tmp_46*tmp_6) + 0.5*p_affine_10_1*(tmp_1*tmp_49 + tmp_16*tmp_49 + tmp_2*tmp_48 + tmp_48*tmp_7);
      real_t tmp_51 = 2*tmp_43;
      real_t tmp_52 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_51;
      real_t tmp_53 = p_affine_6_1 + 0.23076534494715845*tmp_9;
      real_t tmp_54 = tmp_8*(tmp_0 + tmp_53);
      real_t tmp_55 = p_affine_6_0 + 0.23076534494715845*tmp_12;
      real_t tmp_56 = tmp_8*(tmp_3 + tmp_55);
      real_t tmp_57 = tmp_2*tmp_54 + tmp_5*tmp_56 - 1.0/3.0;
      real_t tmp_58 = tmp_16*tmp_56 + tmp_4*tmp_54 - 1.0/3.0;
      real_t tmp_59 = tmp_1*tmp_57 + tmp_5*tmp_58;
      real_t tmp_60 = p_affine_10_0*tmp_29;
      real_t tmp_61 = tmp_4*tmp_57 + tmp_58*tmp_7;
      real_t tmp_62 = tmp_23*(tmp_21 + tmp_53);
      real_t tmp_63 = tmp_20*tmp_62;
      real_t tmp_64 = tmp_26*tmp_62;
      real_t tmp_65 = tmp_23*(tmp_19 + tmp_55);
      real_t tmp_66 = tmp_22*tmp_65;
      real_t tmp_67 = tmp_33*tmp_65;
      real_t tmp_68 = -tmp_63 - tmp_64 - tmp_66 - tmp_67 + 1;
      real_t tmp_69 = tmp_44*tmp_61;
      real_t tmp_70 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51;
      real_t tmp_71 = p_affine_6_1 + 0.5*tmp_9;
      real_t tmp_72 = tmp_8*(tmp_0 + tmp_71);
      real_t tmp_73 = p_affine_6_0 + 0.5*tmp_12;
      real_t tmp_74 = tmp_8*(tmp_3 + tmp_73);
      real_t tmp_75 = tmp_2*tmp_72 + tmp_5*tmp_74 - 1.0/3.0;
      real_t tmp_76 = tmp_16*tmp_74 + tmp_4*tmp_72 - 1.0/3.0;
      real_t tmp_77 = tmp_1*tmp_75 + tmp_5*tmp_76;
      real_t tmp_78 = tmp_4*tmp_75 + tmp_7*tmp_76;
      real_t tmp_79 = tmp_23*(tmp_21 + tmp_71);
      real_t tmp_80 = tmp_20*tmp_79;
      real_t tmp_81 = tmp_26*tmp_79;
      real_t tmp_82 = tmp_23*(tmp_19 + tmp_73);
      real_t tmp_83 = tmp_22*tmp_82;
      real_t tmp_84 = tmp_33*tmp_82;
      real_t tmp_85 = -tmp_80 - tmp_81 - tmp_83 - tmp_84 + 1;
      real_t tmp_86 = tmp_44*tmp_78;
      real_t tmp_87 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51;
      real_t tmp_88 = p_affine_6_1 + 0.7692346550528415*tmp_9;
      real_t tmp_89 = tmp_8*(tmp_0 + tmp_88);
      real_t tmp_90 = p_affine_6_0 + 0.7692346550528415*tmp_12;
      real_t tmp_91 = tmp_8*(tmp_3 + tmp_90);
      real_t tmp_92 = tmp_2*tmp_89 + tmp_5*tmp_91 - 1.0/3.0;
      real_t tmp_93 = tmp_16*tmp_91 + tmp_4*tmp_89 - 1.0/3.0;
      real_t tmp_94 = tmp_1*tmp_92 + tmp_5*tmp_93;
      real_t tmp_95 = tmp_4*tmp_92 + tmp_7*tmp_93;
      real_t tmp_96 = tmp_23*(tmp_21 + tmp_88);
      real_t tmp_97 = tmp_20*tmp_96;
      real_t tmp_98 = tmp_26*tmp_96;
      real_t tmp_99 = tmp_23*(tmp_19 + tmp_90);
      real_t tmp_100 = tmp_22*tmp_99;
      real_t tmp_101 = tmp_33*tmp_99;
      real_t tmp_102 = -tmp_100 - tmp_101 - tmp_97 - tmp_98 + 1;
      real_t tmp_103 = tmp_44*tmp_95;
      real_t tmp_104 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_51;
      real_t tmp_105 = p_affine_6_1 + 0.95308992296933193*tmp_9;
      real_t tmp_106 = tmp_8*(tmp_0 + tmp_105);
      real_t tmp_107 = p_affine_6_0 + 0.95308992296933193*tmp_12;
      real_t tmp_108 = tmp_8*(tmp_107 + tmp_3);
      real_t tmp_109 = tmp_106*tmp_2 + tmp_108*tmp_5 - 1.0/3.0;
      real_t tmp_110 = tmp_106*tmp_4 + tmp_108*tmp_16 - 1.0/3.0;
      real_t tmp_111 = tmp_1*tmp_109 + tmp_110*tmp_5;
      real_t tmp_112 = tmp_109*tmp_4 + tmp_110*tmp_7;
      real_t tmp_113 = tmp_23*(tmp_105 + tmp_21);
      real_t tmp_114 = tmp_113*tmp_20;
      real_t tmp_115 = tmp_113*tmp_26;
      real_t tmp_116 = tmp_23*(tmp_107 + tmp_19);
      real_t tmp_117 = tmp_116*tmp_22;
      real_t tmp_118 = tmp_116*tmp_33;
      real_t tmp_119 = -tmp_114 - tmp_115 - tmp_117 - tmp_118 + 1;
      real_t tmp_120 = tmp_112*tmp_44;
      real_t tmp_121 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_51;
      real_t tmp_122 = 0.25*tmp_23;
      real_t tmp_123 = tmp_122*tmp_26;
      real_t tmp_124 = 0.5*p_affine_10_0*tmp_32 + 0.5*p_affine_10_1*tmp_27;
      real_t tmp_125 = tmp_38 + tmp_40;
      real_t tmp_126 = p_affine_10_0*tmp_123;
      real_t tmp_127 = tmp_64 + tmp_66;
      real_t tmp_128 = tmp_81 + tmp_83;
      real_t tmp_129 = tmp_100 + tmp_98;
      real_t tmp_130 = tmp_115 + tmp_117;
      real_t tmp_131 = tmp_122*tmp_20;
      real_t tmp_132 = 0.5*p_affine_10_0*tmp_34 + 0.5*p_affine_10_1*tmp_25;
      real_t tmp_133 = tmp_37 + tmp_41;
      real_t tmp_134 = p_affine_10_0*tmp_131;
      real_t tmp_135 = tmp_63 + tmp_67;
      real_t tmp_136 = tmp_80 + tmp_84;
      real_t tmp_137 = tmp_101 + tmp_97;
      real_t tmp_138 = tmp_114 + tmp_118;
      real_t a_0_0 = tmp_104*(-tmp_102*tmp_103 + tmp_102*tmp_50 - tmp_35*tmp_95 - tmp_60*tmp_94) + tmp_121*(-tmp_111*tmp_60 - tmp_112*tmp_35 - tmp_119*tmp_120 + tmp_119*tmp_50) + tmp_52*(-tmp_18*tmp_29 - tmp_30*tmp_35 - tmp_42*tmp_45 + tmp_42*tmp_50) + tmp_70*(-tmp_35*tmp_61 + tmp_50*tmp_68 - tmp_59*tmp_60 - tmp_68*tmp_69) + tmp_87*(-tmp_35*tmp_78 + tmp_50*tmp_85 - tmp_60*tmp_77 - tmp_85*tmp_86);
      real_t a_0_1 = tmp_104*(-tmp_103*tmp_129 - tmp_124*tmp_95 - tmp_126*tmp_94 + tmp_129*tmp_50) + tmp_121*(-tmp_111*tmp_126 - tmp_112*tmp_124 - tmp_120*tmp_130 + tmp_130*tmp_50) + tmp_52*(-tmp_123*tmp_18 - tmp_124*tmp_30 - tmp_125*tmp_45 + tmp_125*tmp_50) + tmp_70*(-tmp_124*tmp_61 - tmp_126*tmp_59 + tmp_127*tmp_50 - tmp_127*tmp_69) + tmp_87*(-tmp_124*tmp_78 - tmp_126*tmp_77 + tmp_128*tmp_50 - tmp_128*tmp_86);
      real_t a_0_2 = tmp_104*(-tmp_103*tmp_137 - tmp_132*tmp_95 - tmp_134*tmp_94 + tmp_137*tmp_50) + tmp_121*(-tmp_111*tmp_134 - tmp_112*tmp_132 - tmp_120*tmp_138 + tmp_138*tmp_50) + tmp_52*(-tmp_131*tmp_18 - tmp_132*tmp_30 - tmp_133*tmp_45 + tmp_133*tmp_50) + tmp_70*(-tmp_132*tmp_61 - tmp_134*tmp_59 + tmp_135*tmp_50 - tmp_135*tmp_69) + tmp_87*(-tmp_132*tmp_78 - tmp_134*tmp_77 + tmp_136*tmp_50 - tmp_136*tmp_86);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_2_0 + tmp_3;
      real_t tmp_7 = 1.0 / (-tmp_1*tmp_6 + tmp_4*tmp_5);
      real_t tmp_8 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_9 = p_affine_6_1 + tmp_0;
      real_t tmp_10 = tmp_7*(0.046910077030668018*tmp_8 + tmp_9);
      real_t tmp_11 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_12 = p_affine_6_0 + tmp_3;
      real_t tmp_13 = tmp_7*(0.046910077030668018*tmp_11 + tmp_12);
      real_t tmp_14 = tmp_10*tmp_2 + tmp_13*tmp_5 - 1.0/3.0;
      real_t tmp_15 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_16 = tmp_10*tmp_4 + tmp_13*tmp_15 - 1.0/3.0;
      real_t tmp_17 = tmp_1*tmp_14 + tmp_16*tmp_5;
      real_t tmp_18 = 0.5*tmp_7;
      real_t tmp_19 = tmp_18*tmp_4;
      real_t tmp_20 = tmp_18*tmp_2;
      real_t tmp_21 = -tmp_19 - tmp_20;
      real_t tmp_22 = p_affine_10_0*tmp_21;
      real_t tmp_23 = 1.0*tmp_7;
      real_t tmp_24 = tmp_23*tmp_5;
      real_t tmp_25 = tmp_15*tmp_23;
      real_t tmp_26 = p_affine_10_0*(-tmp_24 - tmp_25) + p_affine_10_1*tmp_21;
      real_t tmp_27 = tmp_14*tmp_4 + tmp_16*tmp_6;
      real_t tmp_28 = 2*std::abs(std::pow((tmp_11*tmp_11) + (tmp_8*tmp_8), 1.0/2.0));
      real_t tmp_29 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_28;
      real_t tmp_30 = tmp_7*(0.23076534494715845*tmp_8 + tmp_9);
      real_t tmp_31 = tmp_7*(0.23076534494715845*tmp_11 + tmp_12);
      real_t tmp_32 = tmp_2*tmp_30 + tmp_31*tmp_5 - 1.0/3.0;
      real_t tmp_33 = tmp_15*tmp_31 + tmp_30*tmp_4 - 1.0/3.0;
      real_t tmp_34 = tmp_1*tmp_32 + tmp_33*tmp_5;
      real_t tmp_35 = tmp_32*tmp_4 + tmp_33*tmp_6;
      real_t tmp_36 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_28;
      real_t tmp_37 = tmp_7*(0.5*tmp_8 + tmp_9);
      real_t tmp_38 = tmp_7*(0.5*tmp_11 + tmp_12);
      real_t tmp_39 = tmp_2*tmp_37 + tmp_38*tmp_5 - 1.0/3.0;
      real_t tmp_40 = tmp_15*tmp_38 + tmp_37*tmp_4 - 1.0/3.0;
      real_t tmp_41 = tmp_1*tmp_39 + tmp_40*tmp_5;
      real_t tmp_42 = tmp_39*tmp_4 + tmp_40*tmp_6;
      real_t tmp_43 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_28;
      real_t tmp_44 = tmp_7*(0.7692346550528415*tmp_8 + tmp_9);
      real_t tmp_45 = tmp_7*(0.7692346550528415*tmp_11 + tmp_12);
      real_t tmp_46 = tmp_2*tmp_44 + tmp_45*tmp_5 - 1.0/3.0;
      real_t tmp_47 = tmp_15*tmp_45 + tmp_4*tmp_44 - 1.0/3.0;
      real_t tmp_48 = tmp_1*tmp_46 + tmp_47*tmp_5;
      real_t tmp_49 = tmp_4*tmp_46 + tmp_47*tmp_6;
      real_t tmp_50 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_28;
      real_t tmp_51 = tmp_7*(0.95308992296933193*tmp_8 + tmp_9);
      real_t tmp_52 = tmp_7*(0.95308992296933193*tmp_11 + tmp_12);
      real_t tmp_53 = tmp_2*tmp_51 + tmp_5*tmp_52 - 1.0/3.0;
      real_t tmp_54 = tmp_15*tmp_52 + tmp_4*tmp_51 - 1.0/3.0;
      real_t tmp_55 = tmp_1*tmp_53 + tmp_5*tmp_54;
      real_t tmp_56 = tmp_4*tmp_53 + tmp_54*tmp_6;
      real_t tmp_57 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_28;
      real_t tmp_58 = p_affine_10_0*tmp_20;
      real_t tmp_59 = p_affine_10_0*tmp_24 + p_affine_10_1*tmp_20;
      real_t tmp_60 = p_affine_10_0*tmp_19;
      real_t tmp_61 = p_affine_10_0*tmp_25 + p_affine_10_1*tmp_19;
      real_t a_0_0 = tmp_29*(-tmp_17*tmp_22 - tmp_26*tmp_27) + tmp_36*(-tmp_22*tmp_34 - tmp_26*tmp_35) + tmp_43*(-tmp_22*tmp_41 - tmp_26*tmp_42) + tmp_50*(-tmp_22*tmp_48 - tmp_26*tmp_49) + tmp_57*(-tmp_22*tmp_55 - tmp_26*tmp_56);
      real_t a_0_1 = tmp_29*(-tmp_17*tmp_58 - tmp_27*tmp_59) + tmp_36*(-tmp_34*tmp_58 - tmp_35*tmp_59) + tmp_43*(-tmp_41*tmp_58 - tmp_42*tmp_59) + tmp_50*(-tmp_48*tmp_58 - tmp_49*tmp_59) + tmp_57*(-tmp_55*tmp_58 - tmp_56*tmp_59);
      real_t a_0_2 = tmp_29*(-tmp_17*tmp_60 - tmp_27*tmp_61) + tmp_36*(-tmp_34*tmp_60 - tmp_35*tmp_61) + tmp_43*(-tmp_41*tmp_60 - tmp_42*tmp_61) + tmp_50*(-tmp_48*tmp_60 - tmp_49*tmp_61) + tmp_57*(-tmp_55*tmp_60 - tmp_56*tmp_61);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = -p_affine_0_2;
      real_t tmp_5 = p_affine_3_2 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_3_1 + tmp_2;
      real_t tmp_8 = p_affine_2_2 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_0;
      real_t tmp_12 = p_affine_1_2 + tmp_4;
      real_t tmp_13 = tmp_12*tmp_7;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = p_affine_1_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_8;
      real_t tmp_17 = tmp_15*tmp_5;
      real_t tmp_18 = tmp_12*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_17 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_13 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_16 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_23 + tmp_14*tmp_25;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = tmp_1*tmp_3 - tmp_11*tmp_15;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = -tmp_1*tmp_7 + tmp_14*tmp_15;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = tmp_11*tmp_7 - tmp_14*tmp_3;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_34 + tmp_12*tmp_37 + tmp_14*tmp_32 + tmp_38*tmp_8 + tmp_39*tmp_5;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = -tmp_1*tmp_8 + tmp_11*tmp_12;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = tmp_1*tmp_5 - tmp_12*tmp_14;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = -tmp_11*tmp_5 + tmp_14*tmp_8;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_45 + tmp_14*tmp_43 + tmp_15*tmp_37 + tmp_3*tmp_38 + tmp_39*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_0_1 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_0_2 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_0_3 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = p_affine_3_1 + tmp_0;
      real_t tmp_5 = p_affine_3_0 + tmp_2;
      real_t tmp_6 = p_affine_2_1 + tmp_0;
      real_t tmp_7 = tmp_3*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = p_affine_1_0 + tmp_2;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = tmp_10*tmp_6;
      real_t tmp_12 = p_affine_1_2 + tmp_9;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_1*tmp_10;
      real_t tmp_18 = tmp_12*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_11*tmp_8 + tmp_13*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_8 - tmp_17*tmp_3 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_9;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_0;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_11 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_2;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_5 - tmp_4*tmp_8;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_8 - tmp_12*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_13 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = -tmp_1*tmp_3 + tmp_6*tmp_8;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = tmp_12*tmp_3 - tmp_14*tmp_8;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_52*tmp_59;
      real_t tmp_61 = tmp_44*tmp_59;
      real_t tmp_62 = tmp_26*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_0;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_10*tmp_57 + tmp_12*tmp_41 + tmp_14*tmp_49;
      real_t tmp_67 = tmp_50*tmp_59;
      real_t tmp_68 = tmp_42*tmp_59;
      real_t tmp_69 = tmp_59*tmp_7;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_3*tmp_49 + tmp_41*tmp_8 + tmp_5*tmp_57;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_54*tmp_73;
      real_t tmp_75 = tmp_46*tmp_73;
      real_t tmp_76 = tmp_33*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*(-tmp_74 - tmp_75 - tmp_76) + 0.5*p_affine_13_1*tmp_63 + 0.5*p_affine_13_2*tmp_70;
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_33*tmp_59;
      real_t tmp_86 = tmp_46*tmp_59;
      real_t tmp_87 = tmp_54*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_3*tmp_75 + tmp_5*tmp_74 + tmp_76*tmp_8) + 0.5*p_affine_13_1*(tmp_1*tmp_85 + tmp_3*tmp_61 + tmp_4*tmp_87 + tmp_5*tmp_60 + tmp_6*tmp_86 + tmp_62*tmp_8) + 0.5*p_affine_13_2*(tmp_10*tmp_87 + tmp_12*tmp_85 + tmp_14*tmp_86 + tmp_3*tmp_68 + tmp_5*tmp_67 + tmp_69*tmp_8);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_6 + tmp_108*tmp_4;
      real_t tmp_110 = tmp_10*tmp_108 + tmp_103*tmp_14 + tmp_12*tmp_98;
      real_t tmp_111 = tmp_103*tmp_3 + tmp_108*tmp_5 + tmp_8*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_134 = tmp_10*tmp_132 + tmp_12*tmp_122 + tmp_127*tmp_14;
      real_t tmp_135 = tmp_122*tmp_8 + tmp_127*tmp_3 + tmp_132*tmp_5;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_158 = tmp_10*tmp_156 + tmp_12*tmp_146 + tmp_14*tmp_151;
      real_t tmp_159 = tmp_146*tmp_8 + tmp_151*tmp_3 + tmp_156*tmp_5;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_182 = tmp_10*tmp_180 + tmp_12*tmp_170 + tmp_14*tmp_175;
      real_t tmp_183 = tmp_170*tmp_8 + tmp_175*tmp_3 + tmp_180*tmp_5;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_206 = tmp_10*tmp_204 + tmp_12*tmp_194 + tmp_14*tmp_199;
      real_t tmp_207 = tmp_194*tmp_8 + tmp_199*tmp_3 + tmp_204*tmp_5;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_230 = tmp_10*tmp_228 + tmp_12*tmp_218 + tmp_14*tmp_223;
      real_t tmp_231 = tmp_218*tmp_8 + tmp_223*tmp_3 + tmp_228*tmp_5;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_254 = tmp_10*tmp_252 + tmp_12*tmp_242 + tmp_14*tmp_247;
      real_t tmp_255 = tmp_242*tmp_8 + tmp_247*tmp_3 + tmp_252*tmp_5;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_278 = tmp_10*tmp_276 + tmp_12*tmp_266 + tmp_14*tmp_271;
      real_t tmp_279 = tmp_266*tmp_8 + tmp_271*tmp_3 + tmp_276*tmp_5;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_302 = tmp_10*tmp_300 + tmp_12*tmp_290 + tmp_14*tmp_295;
      real_t tmp_303 = tmp_290*tmp_8 + tmp_295*tmp_3 + tmp_300*tmp_5;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_326 = tmp_10*tmp_324 + tmp_12*tmp_314 + tmp_14*tmp_319;
      real_t tmp_327 = tmp_3*tmp_319 + tmp_314*tmp_8 + tmp_324*tmp_5;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_350 = tmp_10*tmp_348 + tmp_12*tmp_338 + tmp_14*tmp_343;
      real_t tmp_351 = tmp_3*tmp_343 + tmp_338*tmp_8 + tmp_348*tmp_5;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_374 = tmp_10*tmp_372 + tmp_12*tmp_362 + tmp_14*tmp_367;
      real_t tmp_375 = tmp_3*tmp_367 + tmp_362*tmp_8 + tmp_372*tmp_5;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_398 = tmp_10*tmp_396 + tmp_12*tmp_386 + tmp_14*tmp_391;
      real_t tmp_399 = tmp_3*tmp_391 + tmp_386*tmp_8 + tmp_396*tmp_5;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_422 = tmp_10*tmp_420 + tmp_12*tmp_410 + tmp_14*tmp_415;
      real_t tmp_423 = tmp_3*tmp_415 + tmp_410*tmp_8 + tmp_420*tmp_5;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_446 = tmp_10*tmp_444 + tmp_12*tmp_434 + tmp_14*tmp_439;
      real_t tmp_447 = tmp_3*tmp_439 + tmp_434*tmp_8 + tmp_444*tmp_5;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_470 = tmp_10*tmp_468 + tmp_12*tmp_458 + tmp_14*tmp_463;
      real_t tmp_471 = tmp_3*tmp_463 + tmp_458*tmp_8 + tmp_468*tmp_5;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_494 = tmp_10*tmp_492 + tmp_12*tmp_482 + tmp_14*tmp_487;
      real_t tmp_495 = tmp_3*tmp_487 + tmp_482*tmp_8 + tmp_492*tmp_5;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_518 = tmp_10*tmp_516 + tmp_12*tmp_506 + tmp_14*tmp_511;
      real_t tmp_519 = tmp_3*tmp_511 + tmp_5*tmp_516 + tmp_506*tmp_8;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_542 = tmp_10*tmp_540 + tmp_12*tmp_530 + tmp_14*tmp_535;
      real_t tmp_543 = tmp_3*tmp_535 + tmp_5*tmp_540 + tmp_530*tmp_8;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_566 = tmp_10*tmp_564 + tmp_12*tmp_554 + tmp_14*tmp_559;
      real_t tmp_567 = tmp_3*tmp_559 + tmp_5*tmp_564 + tmp_554*tmp_8;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_0*tmp_19;
      real_t tmp_572 = tmp_571*tmp_7;
      real_t tmp_573 = tmp_26*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*tmp_62 + 0.5*p_affine_13_2*tmp_69;
      real_t tmp_575 = tmp_42*tmp_571;
      real_t tmp_576 = tmp_44*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_61 + 0.5*p_affine_13_2*tmp_68;
      real_t tmp_578 = tmp_50*tmp_571;
      real_t tmp_579 = tmp_52*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_74 + 0.5*p_affine_13_1*tmp_60 + 0.5*p_affine_13_2*tmp_67;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_0_1 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_0_2 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_0_3 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = p_affine_3_1 + tmp_0;
      real_t tmp_5 = p_affine_3_0 + tmp_2;
      real_t tmp_6 = p_affine_2_1 + tmp_0;
      real_t tmp_7 = tmp_3*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = p_affine_1_0 + tmp_2;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = tmp_10*tmp_6;
      real_t tmp_12 = p_affine_1_2 + tmp_9;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_1*tmp_10;
      real_t tmp_18 = tmp_12*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_11*tmp_8 + tmp_13*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_8 - tmp_17*tmp_3 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = 0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22;
      real_t tmp_24 = p_affine_8_2 + tmp_9;
      real_t tmp_25 = tmp_19*(tmp_23 + tmp_24);
      real_t tmp_26 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = 0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29;
      real_t tmp_31 = p_affine_8_1 + tmp_0;
      real_t tmp_32 = tmp_19*(tmp_30 + tmp_31);
      real_t tmp_33 = tmp_11 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = 0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36;
      real_t tmp_38 = p_affine_8_0 + tmp_2;
      real_t tmp_39 = tmp_19*(tmp_37 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_7 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = tmp_1*tmp_5 - tmp_4*tmp_8;
      real_t tmp_42 = tmp_10*tmp_8 - tmp_12*tmp_5;
      real_t tmp_43 = tmp_13 - tmp_17;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = -tmp_1*tmp_3 + tmp_6*tmp_8;
      real_t tmp_46 = tmp_12*tmp_3 - tmp_14*tmp_8;
      real_t tmp_47 = tmp_15 - tmp_18;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_6;
      real_t tmp_50 = -p_affine_4_0;
      real_t tmp_51 = p_affine_6_0 + tmp_50;
      real_t tmp_52 = -p_affine_4_2;
      real_t tmp_53 = p_affine_5_2 + tmp_52;
      real_t tmp_54 = tmp_51*tmp_53;
      real_t tmp_55 = p_affine_5_0 + tmp_50;
      real_t tmp_56 = p_affine_6_2 + tmp_52;
      real_t tmp_57 = tmp_54 - tmp_55*tmp_56;
      real_t tmp_58 = p_affine_7_2 + tmp_52;
      real_t tmp_59 = -p_affine_4_1;
      real_t tmp_60 = p_affine_6_1 + tmp_59;
      real_t tmp_61 = tmp_55*tmp_60;
      real_t tmp_62 = p_affine_7_1 + tmp_59;
      real_t tmp_63 = p_affine_7_0 + tmp_50;
      real_t tmp_64 = p_affine_5_1 + tmp_59;
      real_t tmp_65 = tmp_56*tmp_64;
      real_t tmp_66 = tmp_55*tmp_62;
      real_t tmp_67 = tmp_51*tmp_64;
      real_t tmp_68 = tmp_53*tmp_63;
      real_t tmp_69 = 1.0 / (tmp_54*tmp_62 - tmp_56*tmp_66 + tmp_58*tmp_61 - tmp_58*tmp_67 - tmp_60*tmp_68 + tmp_63*tmp_65);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_57*tmp_70;
      real_t tmp_72 = tmp_55*tmp_58 - tmp_68;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = -tmp_51*tmp_58 + tmp_56*tmp_63;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_0;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_10*tmp_48 + tmp_12*tmp_40 + tmp_14*tmp_44;
      real_t tmp_80 = tmp_61 - tmp_67;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = tmp_63*tmp_64 - tmp_66;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = tmp_51*tmp_62 - tmp_60*tmp_63;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_3*tmp_44 + tmp_40*tmp_8 + tmp_48*tmp_5;
      real_t tmp_89 = -tmp_53*tmp_60 + tmp_65;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = tmp_53*tmp_62 - tmp_58*tmp_64;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = -tmp_56*tmp_62 + tmp_58*tmp_60;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*(-tmp_91 - tmp_93 - tmp_95) + 0.5*p_affine_13_1*tmp_76 + 0.5*p_affine_13_2*tmp_86;
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_23 + tmp_97);
      real_t tmp_99 = tmp_80*tmp_98;
      real_t tmp_100 = tmp_82*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_59;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_30);
      real_t tmp_103 = tmp_102*tmp_57;
      real_t tmp_104 = tmp_102*tmp_72;
      real_t tmp_105 = tmp_84*tmp_98;
      real_t tmp_106 = tmp_102*tmp_74;
      real_t tmp_107 = p_affine_8_0 + tmp_50;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_37);
      real_t tmp_109 = tmp_108*tmp_89;
      real_t tmp_110 = tmp_108*tmp_92;
      real_t tmp_111 = tmp_108*tmp_94;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)*std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)) + (std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)*std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)) + (std::abs(tmp_114*tmp_22 - tmp_115*tmp_36)*std::abs(tmp_114*tmp_22 - tmp_115*tmp_36));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_120*tmp_8;
      real_t tmp_122 = tmp_120*tmp_3;
      real_t tmp_123 = tmp_120*tmp_5;
      real_t tmp_124 = tmp_120*tmp_33;
      real_t tmp_125 = tmp_120*tmp_43;
      real_t tmp_126 = tmp_120*tmp_47;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_119*tmp_3*tmp_43 + tmp_119*tmp_33*tmp_8 + tmp_119*tmp_47*tmp_5) + 0.5*p_affine_13_1*(tmp_1*tmp_124 + tmp_121*tmp_26 + tmp_122*tmp_42 + tmp_123*tmp_46 + tmp_125*tmp_6 + tmp_126*tmp_4) + 0.5*p_affine_13_2*(tmp_10*tmp_126 + tmp_12*tmp_124 + tmp_121*tmp_7 + tmp_122*tmp_41 + tmp_123*tmp_45 + tmp_125*tmp_14);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_24);
      real_t tmp_132 = 0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_31);
      real_t tmp_134 = 0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_38);
      real_t tmp_136 = tmp_131*tmp_7 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_6 + tmp_138*tmp_4;
      real_t tmp_140 = tmp_10*tmp_138 + tmp_12*tmp_136 + tmp_137*tmp_14;
      real_t tmp_141 = tmp_136*tmp_8 + tmp_137*tmp_3 + tmp_138*tmp_5;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_80;
      real_t tmp_144 = tmp_142*tmp_82;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_57;
      real_t tmp_147 = tmp_145*tmp_72;
      real_t tmp_148 = tmp_142*tmp_84;
      real_t tmp_149 = tmp_145*tmp_74;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_89;
      real_t tmp_152 = tmp_150*tmp_92;
      real_t tmp_153 = tmp_150*tmp_94;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_24);
      real_t tmp_159 = 0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_31);
      real_t tmp_161 = 0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_38);
      real_t tmp_163 = tmp_158*tmp_7 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_6 + tmp_165*tmp_4;
      real_t tmp_167 = tmp_10*tmp_165 + tmp_12*tmp_163 + tmp_14*tmp_164;
      real_t tmp_168 = tmp_163*tmp_8 + tmp_164*tmp_3 + tmp_165*tmp_5;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_80;
      real_t tmp_171 = tmp_169*tmp_82;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_57;
      real_t tmp_174 = tmp_172*tmp_72;
      real_t tmp_175 = tmp_169*tmp_84;
      real_t tmp_176 = tmp_172*tmp_74;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_89;
      real_t tmp_179 = tmp_177*tmp_92;
      real_t tmp_180 = tmp_177*tmp_94;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_24);
      real_t tmp_186 = 0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_31);
      real_t tmp_188 = 0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_38);
      real_t tmp_190 = tmp_185*tmp_7 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_6 + tmp_192*tmp_4;
      real_t tmp_194 = tmp_10*tmp_192 + tmp_12*tmp_190 + tmp_14*tmp_191;
      real_t tmp_195 = tmp_190*tmp_8 + tmp_191*tmp_3 + tmp_192*tmp_5;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_80;
      real_t tmp_198 = tmp_196*tmp_82;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_57;
      real_t tmp_201 = tmp_199*tmp_72;
      real_t tmp_202 = tmp_196*tmp_84;
      real_t tmp_203 = tmp_199*tmp_74;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_89;
      real_t tmp_206 = tmp_204*tmp_92;
      real_t tmp_207 = tmp_204*tmp_94;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22;
      real_t tmp_212 = tmp_19*(tmp_211 + tmp_24);
      real_t tmp_213 = 0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_31);
      real_t tmp_215 = 0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_38);
      real_t tmp_217 = tmp_212*tmp_7 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_218*tmp_6 + tmp_219*tmp_4;
      real_t tmp_221 = tmp_10*tmp_219 + tmp_12*tmp_217 + tmp_14*tmp_218;
      real_t tmp_222 = tmp_217*tmp_8 + tmp_218*tmp_3 + tmp_219*tmp_5;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_80;
      real_t tmp_225 = tmp_223*tmp_82;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_57;
      real_t tmp_228 = tmp_226*tmp_72;
      real_t tmp_229 = tmp_223*tmp_84;
      real_t tmp_230 = tmp_226*tmp_74;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_89;
      real_t tmp_233 = tmp_231*tmp_92;
      real_t tmp_234 = tmp_231*tmp_94;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_239 = tmp_19*(tmp_238 + tmp_24);
      real_t tmp_240 = 0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_31);
      real_t tmp_242 = 0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_38);
      real_t tmp_244 = tmp_239*tmp_7 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_245*tmp_6 + tmp_246*tmp_4;
      real_t tmp_248 = tmp_10*tmp_246 + tmp_12*tmp_244 + tmp_14*tmp_245;
      real_t tmp_249 = tmp_244*tmp_8 + tmp_245*tmp_3 + tmp_246*tmp_5;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_80;
      real_t tmp_252 = tmp_250*tmp_82;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_57;
      real_t tmp_255 = tmp_253*tmp_72;
      real_t tmp_256 = tmp_250*tmp_84;
      real_t tmp_257 = tmp_253*tmp_74;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_89;
      real_t tmp_260 = tmp_258*tmp_92;
      real_t tmp_261 = tmp_258*tmp_94;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_266 = tmp_19*(tmp_24 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_31);
      real_t tmp_269 = 0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_38);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_7 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_272*tmp_6 + tmp_273*tmp_4;
      real_t tmp_275 = tmp_10*tmp_273 + tmp_12*tmp_271 + tmp_14*tmp_272;
      real_t tmp_276 = tmp_271*tmp_8 + tmp_272*tmp_3 + tmp_273*tmp_5;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_80;
      real_t tmp_279 = tmp_277*tmp_82;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_57;
      real_t tmp_282 = tmp_280*tmp_72;
      real_t tmp_283 = tmp_277*tmp_84;
      real_t tmp_284 = tmp_280*tmp_74;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_89;
      real_t tmp_287 = tmp_285*tmp_92;
      real_t tmp_288 = tmp_285*tmp_94;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_293 = tmp_19*(tmp_24 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_295 = tmp_19*(tmp_294 + tmp_31);
      real_t tmp_296 = 0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_38);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_7 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_299*tmp_6 + tmp_300*tmp_4;
      real_t tmp_302 = tmp_10*tmp_300 + tmp_12*tmp_298 + tmp_14*tmp_299;
      real_t tmp_303 = tmp_298*tmp_8 + tmp_299*tmp_3 + tmp_300*tmp_5;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_80;
      real_t tmp_306 = tmp_304*tmp_82;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_57;
      real_t tmp_309 = tmp_307*tmp_72;
      real_t tmp_310 = tmp_304*tmp_84;
      real_t tmp_311 = tmp_307*tmp_74;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_89;
      real_t tmp_314 = tmp_312*tmp_92;
      real_t tmp_315 = tmp_312*tmp_94;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_320 = tmp_19*(tmp_24 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_322 = tmp_19*(tmp_31 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_38);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_7 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_326*tmp_6 + tmp_327*tmp_4;
      real_t tmp_329 = tmp_10*tmp_327 + tmp_12*tmp_325 + tmp_14*tmp_326;
      real_t tmp_330 = tmp_3*tmp_326 + tmp_325*tmp_8 + tmp_327*tmp_5;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_80;
      real_t tmp_333 = tmp_331*tmp_82;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_57;
      real_t tmp_336 = tmp_334*tmp_72;
      real_t tmp_337 = tmp_331*tmp_84;
      real_t tmp_338 = tmp_334*tmp_74;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_89;
      real_t tmp_341 = tmp_339*tmp_92;
      real_t tmp_342 = tmp_339*tmp_94;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_347 = tmp_19*(tmp_24 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_349 = tmp_19*(tmp_31 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_351 = tmp_19*(tmp_350 + tmp_38);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_7 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_353*tmp_6 + tmp_354*tmp_4;
      real_t tmp_356 = tmp_10*tmp_354 + tmp_12*tmp_352 + tmp_14*tmp_353;
      real_t tmp_357 = tmp_3*tmp_353 + tmp_352*tmp_8 + tmp_354*tmp_5;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_80;
      real_t tmp_360 = tmp_358*tmp_82;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_57;
      real_t tmp_363 = tmp_361*tmp_72;
      real_t tmp_364 = tmp_358*tmp_84;
      real_t tmp_365 = tmp_361*tmp_74;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_89;
      real_t tmp_368 = tmp_366*tmp_92;
      real_t tmp_369 = tmp_366*tmp_94;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_374 = tmp_19*(tmp_24 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_376 = tmp_19*(tmp_31 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_378 = tmp_19*(tmp_377 + tmp_38);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_7 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_380*tmp_6 + tmp_381*tmp_4;
      real_t tmp_383 = tmp_10*tmp_381 + tmp_12*tmp_379 + tmp_14*tmp_380;
      real_t tmp_384 = tmp_3*tmp_380 + tmp_379*tmp_8 + tmp_381*tmp_5;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_80;
      real_t tmp_387 = tmp_385*tmp_82;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_57;
      real_t tmp_390 = tmp_388*tmp_72;
      real_t tmp_391 = tmp_385*tmp_84;
      real_t tmp_392 = tmp_388*tmp_74;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_89;
      real_t tmp_395 = tmp_393*tmp_92;
      real_t tmp_396 = tmp_393*tmp_94;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_401 = tmp_19*(tmp_24 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_403 = tmp_19*(tmp_31 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_405 = tmp_19*(tmp_38 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_7 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_6;
      real_t tmp_410 = tmp_10*tmp_408 + tmp_12*tmp_406 + tmp_14*tmp_407;
      real_t tmp_411 = tmp_3*tmp_407 + tmp_406*tmp_8 + tmp_408*tmp_5;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_80;
      real_t tmp_414 = tmp_412*tmp_82;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_57;
      real_t tmp_417 = tmp_415*tmp_72;
      real_t tmp_418 = tmp_412*tmp_84;
      real_t tmp_419 = tmp_415*tmp_74;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_89;
      real_t tmp_422 = tmp_420*tmp_92;
      real_t tmp_423 = tmp_420*tmp_94;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_428 = tmp_19*(tmp_24 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_430 = tmp_19*(tmp_31 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_432 = tmp_19*(tmp_38 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_7 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_6;
      real_t tmp_437 = tmp_10*tmp_435 + tmp_12*tmp_433 + tmp_14*tmp_434;
      real_t tmp_438 = tmp_3*tmp_434 + tmp_433*tmp_8 + tmp_435*tmp_5;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_80;
      real_t tmp_441 = tmp_439*tmp_82;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_57;
      real_t tmp_444 = tmp_442*tmp_72;
      real_t tmp_445 = tmp_439*tmp_84;
      real_t tmp_446 = tmp_442*tmp_74;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_89;
      real_t tmp_449 = tmp_447*tmp_92;
      real_t tmp_450 = tmp_447*tmp_94;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_455 = tmp_19*(tmp_24 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_457 = tmp_19*(tmp_31 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_459 = tmp_19*(tmp_38 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_7 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_6;
      real_t tmp_464 = tmp_10*tmp_462 + tmp_12*tmp_460 + tmp_14*tmp_461;
      real_t tmp_465 = tmp_3*tmp_461 + tmp_460*tmp_8 + tmp_462*tmp_5;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_80;
      real_t tmp_468 = tmp_466*tmp_82;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_57;
      real_t tmp_471 = tmp_469*tmp_72;
      real_t tmp_472 = tmp_466*tmp_84;
      real_t tmp_473 = tmp_469*tmp_74;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_89;
      real_t tmp_476 = tmp_474*tmp_92;
      real_t tmp_477 = tmp_474*tmp_94;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_482 = tmp_19*(tmp_24 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_484 = tmp_19*(tmp_31 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_486 = tmp_19*(tmp_38 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_7 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_6;
      real_t tmp_491 = tmp_10*tmp_489 + tmp_12*tmp_487 + tmp_14*tmp_488;
      real_t tmp_492 = tmp_3*tmp_488 + tmp_487*tmp_8 + tmp_489*tmp_5;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_80;
      real_t tmp_495 = tmp_493*tmp_82;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_57;
      real_t tmp_498 = tmp_496*tmp_72;
      real_t tmp_499 = tmp_493*tmp_84;
      real_t tmp_500 = tmp_496*tmp_74;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_89;
      real_t tmp_503 = tmp_501*tmp_92;
      real_t tmp_504 = tmp_501*tmp_94;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_509 = tmp_19*(tmp_24 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_511 = tmp_19*(tmp_31 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_513 = tmp_19*(tmp_38 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_7 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_6;
      real_t tmp_518 = tmp_10*tmp_516 + tmp_12*tmp_514 + tmp_14*tmp_515;
      real_t tmp_519 = tmp_3*tmp_515 + tmp_5*tmp_516 + tmp_514*tmp_8;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_80;
      real_t tmp_522 = tmp_520*tmp_82;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_57;
      real_t tmp_525 = tmp_523*tmp_72;
      real_t tmp_526 = tmp_520*tmp_84;
      real_t tmp_527 = tmp_523*tmp_74;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_89;
      real_t tmp_530 = tmp_528*tmp_92;
      real_t tmp_531 = tmp_528*tmp_94;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_536 = tmp_19*(tmp_24 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_538 = tmp_19*(tmp_31 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_540 = tmp_19*(tmp_38 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_7 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_6;
      real_t tmp_545 = tmp_10*tmp_543 + tmp_12*tmp_541 + tmp_14*tmp_542;
      real_t tmp_546 = tmp_3*tmp_542 + tmp_5*tmp_543 + tmp_541*tmp_8;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_80;
      real_t tmp_549 = tmp_547*tmp_82;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_57;
      real_t tmp_552 = tmp_550*tmp_72;
      real_t tmp_553 = tmp_547*tmp_84;
      real_t tmp_554 = tmp_550*tmp_74;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_89;
      real_t tmp_557 = tmp_555*tmp_92;
      real_t tmp_558 = tmp_555*tmp_94;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_563 = tmp_19*(tmp_24 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_565 = tmp_19*(tmp_31 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_567 = tmp_19*(tmp_38 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_7 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_6;
      real_t tmp_572 = tmp_10*tmp_570 + tmp_12*tmp_568 + tmp_14*tmp_569;
      real_t tmp_573 = tmp_3*tmp_569 + tmp_5*tmp_570 + tmp_568*tmp_8;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_80;
      real_t tmp_576 = tmp_574*tmp_82;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_57*tmp_577;
      real_t tmp_579 = tmp_577*tmp_72;
      real_t tmp_580 = tmp_574*tmp_84;
      real_t tmp_581 = tmp_577*tmp_74;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_582*tmp_89;
      real_t tmp_584 = tmp_582*tmp_92;
      real_t tmp_585 = tmp_582*tmp_94;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_590 = tmp_19*(tmp_24 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_592 = tmp_19*(tmp_31 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_594 = tmp_19*(tmp_38 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_7 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_6;
      real_t tmp_599 = tmp_10*tmp_597 + tmp_12*tmp_595 + tmp_14*tmp_596;
      real_t tmp_600 = tmp_3*tmp_596 + tmp_5*tmp_597 + tmp_595*tmp_8;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_80;
      real_t tmp_603 = tmp_601*tmp_82;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_57*tmp_604;
      real_t tmp_606 = tmp_604*tmp_72;
      real_t tmp_607 = tmp_601*tmp_84;
      real_t tmp_608 = tmp_604*tmp_74;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_609*tmp_89;
      real_t tmp_611 = tmp_609*tmp_92;
      real_t tmp_612 = tmp_609*tmp_94;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_617 = tmp_19*(tmp_24 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_619 = tmp_19*(tmp_31 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_621 = tmp_19*(tmp_38 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_7 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_4*tmp_624 + tmp_6*tmp_623;
      real_t tmp_626 = tmp_10*tmp_624 + tmp_12*tmp_622 + tmp_14*tmp_623;
      real_t tmp_627 = tmp_3*tmp_623 + tmp_5*tmp_624 + tmp_622*tmp_8;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_80;
      real_t tmp_630 = tmp_628*tmp_82;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_57*tmp_631;
      real_t tmp_633 = tmp_631*tmp_72;
      real_t tmp_634 = tmp_628*tmp_84;
      real_t tmp_635 = tmp_631*tmp_74;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_636*tmp_89;
      real_t tmp_638 = tmp_636*tmp_92;
      real_t tmp_639 = tmp_636*tmp_94;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_644 = tmp_19*(tmp_24 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_646 = tmp_19*(tmp_31 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_648 = tmp_19*(tmp_38 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_7 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_4*tmp_651 + tmp_6*tmp_650;
      real_t tmp_653 = tmp_10*tmp_651 + tmp_12*tmp_649 + tmp_14*tmp_650;
      real_t tmp_654 = tmp_3*tmp_650 + tmp_5*tmp_651 + tmp_649*tmp_8;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_80;
      real_t tmp_657 = tmp_655*tmp_82;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_57*tmp_658;
      real_t tmp_660 = tmp_658*tmp_72;
      real_t tmp_661 = tmp_655*tmp_84;
      real_t tmp_662 = tmp_658*tmp_74;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_663*tmp_89;
      real_t tmp_665 = tmp_663*tmp_92;
      real_t tmp_666 = tmp_663*tmp_94;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_0*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_95 + 0.5*p_affine_13_1*tmp_75 + 0.5*p_affine_13_2*tmp_85;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_93 + 0.5*p_affine_13_1*tmp_73 + 0.5*p_affine_13_2*tmp_83;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_57*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_91 + 0.5*p_affine_13_1*tmp_71 + 0.5*p_affine_13_2*tmp_81;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 + tmp_112*tmp_127 - tmp_49*tmp_78 - tmp_79*tmp_87 - tmp_88*tmp_96) + tmp_156*(tmp_127*tmp_154 - tmp_139*tmp_78 - tmp_140*tmp_87 - tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(tmp_127*tmp_181 - tmp_166*tmp_78 - tmp_167*tmp_87 - tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(tmp_127*tmp_208 - tmp_193*tmp_78 - tmp_194*tmp_87 - tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(tmp_127*tmp_235 - tmp_220*tmp_78 - tmp_221*tmp_87 - tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(tmp_127*tmp_262 - tmp_247*tmp_78 - tmp_248*tmp_87 - tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(tmp_127*tmp_289 - tmp_274*tmp_78 - tmp_275*tmp_87 - tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(tmp_127*tmp_316 - tmp_301*tmp_78 - tmp_302*tmp_87 - tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(tmp_127*tmp_343 - tmp_328*tmp_78 - tmp_329*tmp_87 - tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(tmp_127*tmp_370 - tmp_355*tmp_78 - tmp_356*tmp_87 - tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(tmp_127*tmp_397 - tmp_382*tmp_78 - tmp_383*tmp_87 - tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(tmp_127*tmp_424 - tmp_409*tmp_78 - tmp_410*tmp_87 - tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(tmp_127*tmp_451 - tmp_436*tmp_78 - tmp_437*tmp_87 - tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(tmp_127*tmp_478 - tmp_463*tmp_78 - tmp_464*tmp_87 - tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(tmp_127*tmp_505 - tmp_490*tmp_78 - tmp_491*tmp_87 - tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(tmp_127*tmp_532 - tmp_517*tmp_78 - tmp_518*tmp_87 - tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(tmp_127*tmp_559 - tmp_544*tmp_78 - tmp_545*tmp_87 - tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(tmp_127*tmp_586 - tmp_571*tmp_78 - tmp_572*tmp_87 - tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(tmp_127*tmp_613 - tmp_598*tmp_78 - tmp_599*tmp_87 - tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(tmp_127*tmp_640 - tmp_625*tmp_78 - tmp_626*tmp_87 - tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(tmp_127*tmp_667 - tmp_652*tmp_78 - tmp_653*tmp_87 - tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_0_1 = tmp_129*(-tmp_118*tmp_674 + tmp_127*tmp_674 - tmp_49*tmp_672 - tmp_671*tmp_79 - tmp_673*tmp_88) + tmp_156*(tmp_127*tmp_675 - tmp_139*tmp_672 - tmp_140*tmp_671 - tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(tmp_127*tmp_676 - tmp_166*tmp_672 - tmp_167*tmp_671 - tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(tmp_127*tmp_677 - tmp_193*tmp_672 - tmp_194*tmp_671 - tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(tmp_127*tmp_678 - tmp_220*tmp_672 - tmp_221*tmp_671 - tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(tmp_127*tmp_679 - tmp_247*tmp_672 - tmp_248*tmp_671 - tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(tmp_127*tmp_680 - tmp_274*tmp_672 - tmp_275*tmp_671 - tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(tmp_127*tmp_681 - tmp_301*tmp_672 - tmp_302*tmp_671 - tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(tmp_127*tmp_682 - tmp_328*tmp_672 - tmp_329*tmp_671 - tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(tmp_127*tmp_683 - tmp_355*tmp_672 - tmp_356*tmp_671 - tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(tmp_127*tmp_684 - tmp_382*tmp_672 - tmp_383*tmp_671 - tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(tmp_127*tmp_685 - tmp_409*tmp_672 - tmp_410*tmp_671 - tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(tmp_127*tmp_686 - tmp_436*tmp_672 - tmp_437*tmp_671 - tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(tmp_127*tmp_687 - tmp_463*tmp_672 - tmp_464*tmp_671 - tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(tmp_127*tmp_688 - tmp_490*tmp_672 - tmp_491*tmp_671 - tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(tmp_127*tmp_689 - tmp_517*tmp_672 - tmp_518*tmp_671 - tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(tmp_127*tmp_690 - tmp_544*tmp_672 - tmp_545*tmp_671 - tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(tmp_127*tmp_691 - tmp_571*tmp_672 - tmp_572*tmp_671 - tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(tmp_127*tmp_692 - tmp_598*tmp_672 - tmp_599*tmp_671 - tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(tmp_127*tmp_693 - tmp_625*tmp_672 - tmp_626*tmp_671 - tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(tmp_127*tmp_694 - tmp_652*tmp_672 - tmp_653*tmp_671 - tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_0_2 = tmp_129*(-tmp_118*tmp_698 + tmp_127*tmp_698 - tmp_49*tmp_696 - tmp_695*tmp_79 - tmp_697*tmp_88) + tmp_156*(tmp_127*tmp_699 - tmp_139*tmp_696 - tmp_140*tmp_695 - tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(tmp_127*tmp_700 - tmp_166*tmp_696 - tmp_167*tmp_695 - tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(tmp_127*tmp_701 - tmp_193*tmp_696 - tmp_194*tmp_695 - tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(tmp_127*tmp_702 - tmp_220*tmp_696 - tmp_221*tmp_695 - tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(tmp_127*tmp_703 - tmp_247*tmp_696 - tmp_248*tmp_695 - tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(tmp_127*tmp_704 - tmp_274*tmp_696 - tmp_275*tmp_695 - tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(tmp_127*tmp_705 - tmp_301*tmp_696 - tmp_302*tmp_695 - tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(tmp_127*tmp_706 - tmp_328*tmp_696 - tmp_329*tmp_695 - tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(tmp_127*tmp_707 - tmp_355*tmp_696 - tmp_356*tmp_695 - tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(tmp_127*tmp_708 - tmp_382*tmp_696 - tmp_383*tmp_695 - tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(tmp_127*tmp_709 - tmp_409*tmp_696 - tmp_410*tmp_695 - tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(tmp_127*tmp_710 - tmp_436*tmp_696 - tmp_437*tmp_695 - tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(tmp_127*tmp_711 - tmp_463*tmp_696 - tmp_464*tmp_695 - tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(tmp_127*tmp_712 - tmp_490*tmp_696 - tmp_491*tmp_695 - tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(tmp_127*tmp_713 - tmp_517*tmp_696 - tmp_518*tmp_695 - tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(tmp_127*tmp_714 - tmp_544*tmp_696 - tmp_545*tmp_695 - tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(tmp_127*tmp_715 - tmp_571*tmp_696 - tmp_572*tmp_695 - tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(tmp_127*tmp_716 - tmp_598*tmp_696 - tmp_599*tmp_695 - tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(tmp_127*tmp_717 - tmp_625*tmp_696 - tmp_626*tmp_695 - tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(tmp_127*tmp_718 - tmp_652*tmp_696 - tmp_653*tmp_695 - tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_0_3 = tmp_129*(-tmp_118*tmp_722 + tmp_127*tmp_722 - tmp_49*tmp_720 - tmp_719*tmp_79 - tmp_721*tmp_88) + tmp_156*(tmp_127*tmp_723 - tmp_139*tmp_720 - tmp_140*tmp_719 - tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(tmp_127*tmp_724 - tmp_166*tmp_720 - tmp_167*tmp_719 - tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(tmp_127*tmp_725 - tmp_193*tmp_720 - tmp_194*tmp_719 - tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(tmp_127*tmp_726 - tmp_220*tmp_720 - tmp_221*tmp_719 - tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(tmp_127*tmp_727 - tmp_247*tmp_720 - tmp_248*tmp_719 - tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(tmp_127*tmp_728 - tmp_274*tmp_720 - tmp_275*tmp_719 - tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(tmp_127*tmp_729 - tmp_301*tmp_720 - tmp_302*tmp_719 - tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(tmp_127*tmp_730 - tmp_328*tmp_720 - tmp_329*tmp_719 - tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(tmp_127*tmp_731 - tmp_355*tmp_720 - tmp_356*tmp_719 - tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(tmp_127*tmp_732 - tmp_382*tmp_720 - tmp_383*tmp_719 - tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(tmp_127*tmp_733 - tmp_409*tmp_720 - tmp_410*tmp_719 - tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(tmp_127*tmp_734 - tmp_436*tmp_720 - tmp_437*tmp_719 - tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(tmp_127*tmp_735 - tmp_463*tmp_720 - tmp_464*tmp_719 - tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(tmp_127*tmp_736 - tmp_490*tmp_720 - tmp_491*tmp_719 - tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(tmp_127*tmp_737 - tmp_517*tmp_720 - tmp_518*tmp_719 - tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(tmp_127*tmp_738 - tmp_544*tmp_720 - tmp_545*tmp_719 - tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(tmp_127*tmp_739 - tmp_571*tmp_720 - tmp_572*tmp_719 - tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(tmp_127*tmp_740 - tmp_598*tmp_720 - tmp_599*tmp_719 - tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(tmp_127*tmp_741 - tmp_625*tmp_720 - tmp_626*tmp_719 - tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(tmp_127*tmp_742 - tmp_652*tmp_720 - tmp_653*tmp_719 - tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = p_affine_3_1 + tmp_0;
      real_t tmp_5 = p_affine_3_0 + tmp_2;
      real_t tmp_6 = p_affine_2_1 + tmp_0;
      real_t tmp_7 = tmp_3*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = p_affine_1_0 + tmp_2;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = tmp_10*tmp_6;
      real_t tmp_12 = p_affine_1_2 + tmp_9;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_1*tmp_10;
      real_t tmp_18 = tmp_12*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_11*tmp_8 + tmp_13*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_8 - tmp_17*tmp_3 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_9;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_26 = -p_affine_8_1;
      real_t tmp_27 = p_affine_9_1 + tmp_26;
      real_t tmp_28 = p_affine_10_1 + tmp_26;
      real_t tmp_29 = p_affine_8_1 + tmp_0;
      real_t tmp_30 = tmp_19*(0.031405749086161582*tmp_27 + 0.93718850182767688*tmp_28 + tmp_29);
      real_t tmp_31 = tmp_11 - tmp_16;
      real_t tmp_32 = -p_affine_8_0;
      real_t tmp_33 = p_affine_9_0 + tmp_32;
      real_t tmp_34 = p_affine_10_0 + tmp_32;
      real_t tmp_35 = p_affine_8_0 + tmp_2;
      real_t tmp_36 = tmp_19*(0.031405749086161582*tmp_33 + 0.93718850182767688*tmp_34 + tmp_35);
      real_t tmp_37 = tmp_24*tmp_7 + tmp_25*tmp_30 + tmp_31*tmp_36 - 1.0/4.0;
      real_t tmp_38 = tmp_1*tmp_5 - tmp_4*tmp_8;
      real_t tmp_39 = tmp_10*tmp_8 - tmp_12*tmp_5;
      real_t tmp_40 = tmp_13 - tmp_17;
      real_t tmp_41 = tmp_24*tmp_38 + tmp_30*tmp_39 + tmp_36*tmp_40 - 1.0/4.0;
      real_t tmp_42 = -tmp_1*tmp_3 + tmp_6*tmp_8;
      real_t tmp_43 = tmp_12*tmp_3 - tmp_14*tmp_8;
      real_t tmp_44 = tmp_15 - tmp_18;
      real_t tmp_45 = tmp_24*tmp_42 + tmp_30*tmp_43 + tmp_36*tmp_44 - 1.0/4.0;
      real_t tmp_46 = tmp_1*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_6;
      real_t tmp_47 = 0.5*tmp_19;
      real_t tmp_48 = tmp_43*tmp_47;
      real_t tmp_49 = tmp_39*tmp_47;
      real_t tmp_50 = tmp_25*tmp_47;
      real_t tmp_51 = -tmp_48 - tmp_49 - tmp_50;
      real_t tmp_52 = p_affine_13_0*tmp_51;
      real_t tmp_53 = tmp_10*tmp_45 + tmp_12*tmp_37 + tmp_14*tmp_41;
      real_t tmp_54 = tmp_42*tmp_47;
      real_t tmp_55 = tmp_38*tmp_47;
      real_t tmp_56 = tmp_47*tmp_7;
      real_t tmp_57 = -tmp_54 - tmp_55 - tmp_56;
      real_t tmp_58 = p_affine_13_0*tmp_57;
      real_t tmp_59 = 1.0*tmp_19;
      real_t tmp_60 = tmp_44*tmp_59;
      real_t tmp_61 = tmp_40*tmp_59;
      real_t tmp_62 = tmp_31*tmp_59;
      real_t tmp_63 = p_affine_13_0*(-tmp_60 - tmp_61 - tmp_62) + p_affine_13_1*tmp_51 + p_affine_13_2*tmp_57;
      real_t tmp_64 = tmp_3*tmp_41 + tmp_37*tmp_8 + tmp_45*tmp_5;
      real_t tmp_65 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_66 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_67 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_68 = 2.0*std::pow((std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)*std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)) + (std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)*std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)) + (std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)*std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)), 1.0/2.0);
      real_t tmp_69 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_68;
      real_t tmp_70 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_71 = tmp_19*(0.19601935860219369*tmp_27 + 0.60796128279561268*tmp_28 + tmp_29);
      real_t tmp_72 = tmp_19*(0.19601935860219369*tmp_33 + 0.60796128279561268*tmp_34 + tmp_35);
      real_t tmp_73 = tmp_25*tmp_71 + tmp_31*tmp_72 + tmp_7*tmp_70 - 1.0/4.0;
      real_t tmp_74 = tmp_38*tmp_70 + tmp_39*tmp_71 + tmp_40*tmp_72 - 1.0/4.0;
      real_t tmp_75 = tmp_42*tmp_70 + tmp_43*tmp_71 + tmp_44*tmp_72 - 1.0/4.0;
      real_t tmp_76 = tmp_1*tmp_73 + tmp_4*tmp_75 + tmp_6*tmp_74;
      real_t tmp_77 = tmp_10*tmp_75 + tmp_12*tmp_73 + tmp_14*tmp_74;
      real_t tmp_78 = tmp_3*tmp_74 + tmp_5*tmp_75 + tmp_73*tmp_8;
      real_t tmp_79 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_68;
      real_t tmp_80 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_81 = tmp_19*(0.37605877282253791*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_82 = tmp_19*(0.37605877282253791*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_83 = tmp_25*tmp_81 + tmp_31*tmp_82 + tmp_7*tmp_80 - 1.0/4.0;
      real_t tmp_84 = tmp_38*tmp_80 + tmp_39*tmp_81 + tmp_40*tmp_82 - 1.0/4.0;
      real_t tmp_85 = tmp_42*tmp_80 + tmp_43*tmp_81 + tmp_44*tmp_82 - 1.0/4.0;
      real_t tmp_86 = tmp_1*tmp_83 + tmp_4*tmp_85 + tmp_6*tmp_84;
      real_t tmp_87 = tmp_10*tmp_85 + tmp_12*tmp_83 + tmp_14*tmp_84;
      real_t tmp_88 = tmp_3*tmp_84 + tmp_5*tmp_85 + tmp_8*tmp_83;
      real_t tmp_89 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_68;
      real_t tmp_90 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_91 = tmp_19*(0.041227165399737475*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_93 = tmp_25*tmp_91 + tmp_31*tmp_92 + tmp_7*tmp_90 - 1.0/4.0;
      real_t tmp_94 = tmp_38*tmp_90 + tmp_39*tmp_91 + tmp_40*tmp_92 - 1.0/4.0;
      real_t tmp_95 = tmp_42*tmp_90 + tmp_43*tmp_91 + tmp_44*tmp_92 - 1.0/4.0;
      real_t tmp_96 = tmp_1*tmp_93 + tmp_4*tmp_95 + tmp_6*tmp_94;
      real_t tmp_97 = tmp_10*tmp_95 + tmp_12*tmp_93 + tmp_14*tmp_94;
      real_t tmp_98 = tmp_3*tmp_94 + tmp_5*tmp_95 + tmp_8*tmp_93;
      real_t tmp_99 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_68;
      real_t tmp_100 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_101 = tmp_19*(0.40446199974765351*tmp_27 + 0.19107600050469298*tmp_28 + tmp_29);
      real_t tmp_102 = tmp_19*(0.40446199974765351*tmp_33 + 0.19107600050469298*tmp_34 + tmp_35);
      real_t tmp_103 = tmp_100*tmp_7 + tmp_101*tmp_25 + tmp_102*tmp_31 - 1.0/4.0;
      real_t tmp_104 = tmp_100*tmp_38 + tmp_101*tmp_39 + tmp_102*tmp_40 - 1.0/4.0;
      real_t tmp_105 = tmp_100*tmp_42 + tmp_101*tmp_43 + tmp_102*tmp_44 - 1.0/4.0;
      real_t tmp_106 = tmp_1*tmp_103 + tmp_104*tmp_6 + tmp_105*tmp_4;
      real_t tmp_107 = tmp_10*tmp_105 + tmp_103*tmp_12 + tmp_104*tmp_14;
      real_t tmp_108 = tmp_103*tmp_8 + tmp_104*tmp_3 + tmp_105*tmp_5;
      real_t tmp_109 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_68;
      real_t tmp_110 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_111 = tmp_19*(0.039308471900058539*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_112 = tmp_19*(0.039308471900058539*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_113 = tmp_110*tmp_7 + tmp_111*tmp_25 + tmp_112*tmp_31 - 1.0/4.0;
      real_t tmp_114 = tmp_110*tmp_38 + tmp_111*tmp_39 + tmp_112*tmp_40 - 1.0/4.0;
      real_t tmp_115 = tmp_110*tmp_42 + tmp_111*tmp_43 + tmp_112*tmp_44 - 1.0/4.0;
      real_t tmp_116 = tmp_1*tmp_113 + tmp_114*tmp_6 + tmp_115*tmp_4;
      real_t tmp_117 = tmp_10*tmp_115 + tmp_113*tmp_12 + tmp_114*tmp_14;
      real_t tmp_118 = tmp_113*tmp_8 + tmp_114*tmp_3 + tmp_115*tmp_5;
      real_t tmp_119 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_68;
      real_t tmp_120 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_121 = tmp_19*(0.93718850182767688*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_122 = tmp_19*(0.93718850182767688*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_123 = tmp_120*tmp_7 + tmp_121*tmp_25 + tmp_122*tmp_31 - 1.0/4.0;
      real_t tmp_124 = tmp_120*tmp_38 + tmp_121*tmp_39 + tmp_122*tmp_40 - 1.0/4.0;
      real_t tmp_125 = tmp_120*tmp_42 + tmp_121*tmp_43 + tmp_122*tmp_44 - 1.0/4.0;
      real_t tmp_126 = tmp_1*tmp_123 + tmp_124*tmp_6 + tmp_125*tmp_4;
      real_t tmp_127 = tmp_10*tmp_125 + tmp_12*tmp_123 + tmp_124*tmp_14;
      real_t tmp_128 = tmp_123*tmp_8 + tmp_124*tmp_3 + tmp_125*tmp_5;
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_68;
      real_t tmp_130 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_131 = tmp_19*(0.60796128279561268*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_132 = tmp_19*(0.60796128279561268*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_133 = tmp_130*tmp_7 + tmp_131*tmp_25 + tmp_132*tmp_31 - 1.0/4.0;
      real_t tmp_134 = tmp_130*tmp_38 + tmp_131*tmp_39 + tmp_132*tmp_40 - 1.0/4.0;
      real_t tmp_135 = tmp_130*tmp_42 + tmp_131*tmp_43 + tmp_132*tmp_44 - 1.0/4.0;
      real_t tmp_136 = tmp_1*tmp_133 + tmp_134*tmp_6 + tmp_135*tmp_4;
      real_t tmp_137 = tmp_10*tmp_135 + tmp_12*tmp_133 + tmp_134*tmp_14;
      real_t tmp_138 = tmp_133*tmp_8 + tmp_134*tmp_3 + tmp_135*tmp_5;
      real_t tmp_139 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_68;
      real_t tmp_140 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_19*(0.19107600050469298*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_142 = tmp_19*(0.19107600050469298*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_143 = tmp_140*tmp_7 + tmp_141*tmp_25 + tmp_142*tmp_31 - 1.0/4.0;
      real_t tmp_144 = tmp_140*tmp_38 + tmp_141*tmp_39 + tmp_142*tmp_40 - 1.0/4.0;
      real_t tmp_145 = tmp_140*tmp_42 + tmp_141*tmp_43 + tmp_142*tmp_44 - 1.0/4.0;
      real_t tmp_146 = tmp_1*tmp_143 + tmp_144*tmp_6 + tmp_145*tmp_4;
      real_t tmp_147 = tmp_10*tmp_145 + tmp_12*tmp_143 + tmp_14*tmp_144;
      real_t tmp_148 = tmp_143*tmp_8 + tmp_144*tmp_3 + tmp_145*tmp_5;
      real_t tmp_149 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_68;
      real_t tmp_150 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_151 = tmp_19*(0.031405749086161582*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_152 = tmp_19*(0.031405749086161582*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_153 = tmp_150*tmp_7 + tmp_151*tmp_25 + tmp_152*tmp_31 - 1.0/4.0;
      real_t tmp_154 = tmp_150*tmp_38 + tmp_151*tmp_39 + tmp_152*tmp_40 - 1.0/4.0;
      real_t tmp_155 = tmp_150*tmp_42 + tmp_151*tmp_43 + tmp_152*tmp_44 - 1.0/4.0;
      real_t tmp_156 = tmp_1*tmp_153 + tmp_154*tmp_6 + tmp_155*tmp_4;
      real_t tmp_157 = tmp_10*tmp_155 + tmp_12*tmp_153 + tmp_14*tmp_154;
      real_t tmp_158 = tmp_153*tmp_8 + tmp_154*tmp_3 + tmp_155*tmp_5;
      real_t tmp_159 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_68;
      real_t tmp_160 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_161 = tmp_19*(0.19601935860219369*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_162 = tmp_19*(0.19601935860219369*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_163 = tmp_160*tmp_7 + tmp_161*tmp_25 + tmp_162*tmp_31 - 1.0/4.0;
      real_t tmp_164 = tmp_160*tmp_38 + tmp_161*tmp_39 + tmp_162*tmp_40 - 1.0/4.0;
      real_t tmp_165 = tmp_160*tmp_42 + tmp_161*tmp_43 + tmp_162*tmp_44 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_6 + tmp_165*tmp_4;
      real_t tmp_167 = tmp_10*tmp_165 + tmp_12*tmp_163 + tmp_14*tmp_164;
      real_t tmp_168 = tmp_163*tmp_8 + tmp_164*tmp_3 + tmp_165*tmp_5;
      real_t tmp_169 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_68;
      real_t tmp_170 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_171 = tmp_19*(0.40446199974765351*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_172 = tmp_19*(0.40446199974765351*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_173 = tmp_170*tmp_7 + tmp_171*tmp_25 + tmp_172*tmp_31 - 1.0/4.0;
      real_t tmp_174 = tmp_170*tmp_38 + tmp_171*tmp_39 + tmp_172*tmp_40 - 1.0/4.0;
      real_t tmp_175 = tmp_170*tmp_42 + tmp_171*tmp_43 + tmp_172*tmp_44 - 1.0/4.0;
      real_t tmp_176 = tmp_1*tmp_173 + tmp_174*tmp_6 + tmp_175*tmp_4;
      real_t tmp_177 = tmp_10*tmp_175 + tmp_12*tmp_173 + tmp_14*tmp_174;
      real_t tmp_178 = tmp_173*tmp_8 + tmp_174*tmp_3 + tmp_175*tmp_5;
      real_t tmp_179 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_68;
      real_t tmp_180 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_181 = tmp_19*(0.37605877282253791*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_182 = tmp_19*(0.37605877282253791*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_183 = tmp_180*tmp_7 + tmp_181*tmp_25 + tmp_182*tmp_31 - 1.0/4.0;
      real_t tmp_184 = tmp_180*tmp_38 + tmp_181*tmp_39 + tmp_182*tmp_40 - 1.0/4.0;
      real_t tmp_185 = tmp_180*tmp_42 + tmp_181*tmp_43 + tmp_182*tmp_44 - 1.0/4.0;
      real_t tmp_186 = tmp_1*tmp_183 + tmp_184*tmp_6 + tmp_185*tmp_4;
      real_t tmp_187 = tmp_10*tmp_185 + tmp_12*tmp_183 + tmp_14*tmp_184;
      real_t tmp_188 = tmp_183*tmp_8 + tmp_184*tmp_3 + tmp_185*tmp_5;
      real_t tmp_189 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_68;
      real_t tmp_190 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_191 = tmp_19*(0.1711304259088916*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_192 = tmp_19*(0.1711304259088916*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_193 = tmp_190*tmp_7 + tmp_191*tmp_25 + tmp_192*tmp_31 - 1.0/4.0;
      real_t tmp_194 = tmp_190*tmp_38 + tmp_191*tmp_39 + tmp_192*tmp_40 - 1.0/4.0;
      real_t tmp_195 = tmp_190*tmp_42 + tmp_191*tmp_43 + tmp_192*tmp_44 - 1.0/4.0;
      real_t tmp_196 = tmp_1*tmp_193 + tmp_194*tmp_6 + tmp_195*tmp_4;
      real_t tmp_197 = tmp_10*tmp_195 + tmp_12*tmp_193 + tmp_14*tmp_194;
      real_t tmp_198 = tmp_193*tmp_8 + tmp_194*tmp_3 + tmp_195*tmp_5;
      real_t tmp_199 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_68;
      real_t tmp_200 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_201 = tmp_19*(0.78764240869137092*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_202 = tmp_19*(0.78764240869137092*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_203 = tmp_200*tmp_7 + tmp_201*tmp_25 + tmp_202*tmp_31 - 1.0/4.0;
      real_t tmp_204 = tmp_200*tmp_38 + tmp_201*tmp_39 + tmp_202*tmp_40 - 1.0/4.0;
      real_t tmp_205 = tmp_200*tmp_42 + tmp_201*tmp_43 + tmp_202*tmp_44 - 1.0/4.0;
      real_t tmp_206 = tmp_1*tmp_203 + tmp_204*tmp_6 + tmp_205*tmp_4;
      real_t tmp_207 = tmp_10*tmp_205 + tmp_12*tmp_203 + tmp_14*tmp_204;
      real_t tmp_208 = tmp_203*tmp_8 + tmp_204*tmp_3 + tmp_205*tmp_5;
      real_t tmp_209 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_68;
      real_t tmp_210 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_211 = tmp_19*(0.58463275527740355*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_212 = tmp_19*(0.58463275527740355*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_213 = tmp_210*tmp_7 + tmp_211*tmp_25 + tmp_212*tmp_31 - 1.0/4.0;
      real_t tmp_214 = tmp_210*tmp_38 + tmp_211*tmp_39 + tmp_212*tmp_40 - 1.0/4.0;
      real_t tmp_215 = tmp_210*tmp_42 + tmp_211*tmp_43 + tmp_212*tmp_44 - 1.0/4.0;
      real_t tmp_216 = tmp_1*tmp_213 + tmp_214*tmp_6 + tmp_215*tmp_4;
      real_t tmp_217 = tmp_10*tmp_215 + tmp_12*tmp_213 + tmp_14*tmp_214;
      real_t tmp_218 = tmp_213*tmp_8 + tmp_214*tmp_3 + tmp_215*tmp_5;
      real_t tmp_219 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_68;
      real_t tmp_220 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_19*(0.041227165399737475*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_222 = tmp_19*(0.041227165399737475*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_223 = tmp_220*tmp_7 + tmp_221*tmp_25 + tmp_222*tmp_31 - 1.0/4.0;
      real_t tmp_224 = tmp_220*tmp_38 + tmp_221*tmp_39 + tmp_222*tmp_40 - 1.0/4.0;
      real_t tmp_225 = tmp_220*tmp_42 + tmp_221*tmp_43 + tmp_222*tmp_44 - 1.0/4.0;
      real_t tmp_226 = tmp_1*tmp_223 + tmp_224*tmp_6 + tmp_225*tmp_4;
      real_t tmp_227 = tmp_10*tmp_225 + tmp_12*tmp_223 + tmp_14*tmp_224;
      real_t tmp_228 = tmp_223*tmp_8 + tmp_224*tmp_3 + tmp_225*tmp_5;
      real_t tmp_229 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_68;
      real_t tmp_230 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_231 = tmp_19*(0.039308471900058539*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_232 = tmp_19*(0.039308471900058539*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_233 = tmp_230*tmp_7 + tmp_231*tmp_25 + tmp_232*tmp_31 - 1.0/4.0;
      real_t tmp_234 = tmp_230*tmp_38 + tmp_231*tmp_39 + tmp_232*tmp_40 - 1.0/4.0;
      real_t tmp_235 = tmp_230*tmp_42 + tmp_231*tmp_43 + tmp_232*tmp_44 - 1.0/4.0;
      real_t tmp_236 = tmp_1*tmp_233 + tmp_234*tmp_6 + tmp_235*tmp_4;
      real_t tmp_237 = tmp_10*tmp_235 + tmp_12*tmp_233 + tmp_14*tmp_234;
      real_t tmp_238 = tmp_233*tmp_8 + tmp_234*tmp_3 + tmp_235*tmp_5;
      real_t tmp_239 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_68;
      real_t tmp_240 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_241 = tmp_19*(0.78764240869137092*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_242 = tmp_19*(0.78764240869137092*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_243 = tmp_240*tmp_7 + tmp_241*tmp_25 + tmp_242*tmp_31 - 1.0/4.0;
      real_t tmp_244 = tmp_240*tmp_38 + tmp_241*tmp_39 + tmp_242*tmp_40 - 1.0/4.0;
      real_t tmp_245 = tmp_240*tmp_42 + tmp_241*tmp_43 + tmp_242*tmp_44 - 1.0/4.0;
      real_t tmp_246 = tmp_1*tmp_243 + tmp_244*tmp_6 + tmp_245*tmp_4;
      real_t tmp_247 = tmp_10*tmp_245 + tmp_12*tmp_243 + tmp_14*tmp_244;
      real_t tmp_248 = tmp_243*tmp_8 + tmp_244*tmp_3 + tmp_245*tmp_5;
      real_t tmp_249 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_68;
      real_t tmp_250 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_251 = tmp_19*(0.58463275527740355*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_252 = tmp_19*(0.58463275527740355*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_253 = tmp_25*tmp_251 + tmp_250*tmp_7 + tmp_252*tmp_31 - 1.0/4.0;
      real_t tmp_254 = tmp_250*tmp_38 + tmp_251*tmp_39 + tmp_252*tmp_40 - 1.0/4.0;
      real_t tmp_255 = tmp_250*tmp_42 + tmp_251*tmp_43 + tmp_252*tmp_44 - 1.0/4.0;
      real_t tmp_256 = tmp_1*tmp_253 + tmp_254*tmp_6 + tmp_255*tmp_4;
      real_t tmp_257 = tmp_10*tmp_255 + tmp_12*tmp_253 + tmp_14*tmp_254;
      real_t tmp_258 = tmp_253*tmp_8 + tmp_254*tmp_3 + tmp_255*tmp_5;
      real_t tmp_259 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_68;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_261 = tmp_19*(0.1711304259088916*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_262 = tmp_19*(0.1711304259088916*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_263 = tmp_25*tmp_261 + tmp_260*tmp_7 + tmp_262*tmp_31 - 1.0/4.0;
      real_t tmp_264 = tmp_260*tmp_38 + tmp_261*tmp_39 + tmp_262*tmp_40 - 1.0/4.0;
      real_t tmp_265 = tmp_260*tmp_42 + tmp_261*tmp_43 + tmp_262*tmp_44 - 1.0/4.0;
      real_t tmp_266 = tmp_1*tmp_263 + tmp_264*tmp_6 + tmp_265*tmp_4;
      real_t tmp_267 = tmp_10*tmp_265 + tmp_12*tmp_263 + tmp_14*tmp_264;
      real_t tmp_268 = tmp_263*tmp_8 + tmp_264*tmp_3 + tmp_265*tmp_5;
      real_t tmp_269 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_68;
      real_t tmp_270 = p_affine_13_0*tmp_56;
      real_t tmp_271 = p_affine_13_0*tmp_50;
      real_t tmp_272 = p_affine_13_0*tmp_62 + p_affine_13_1*tmp_50 + p_affine_13_2*tmp_56;
      real_t tmp_273 = p_affine_13_0*tmp_55;
      real_t tmp_274 = p_affine_13_0*tmp_49;
      real_t tmp_275 = p_affine_13_0*tmp_61 + p_affine_13_1*tmp_49 + p_affine_13_2*tmp_55;
      real_t tmp_276 = p_affine_13_0*tmp_54;
      real_t tmp_277 = p_affine_13_0*tmp_48;
      real_t tmp_278 = p_affine_13_0*tmp_60 + p_affine_13_1*tmp_48 + p_affine_13_2*tmp_54;
      real_t a_0_0 = tmp_109*(-tmp_106*tmp_52 - tmp_107*tmp_58 - tmp_108*tmp_63) + tmp_119*(-tmp_116*tmp_52 - tmp_117*tmp_58 - tmp_118*tmp_63) + tmp_129*(-tmp_126*tmp_52 - tmp_127*tmp_58 - tmp_128*tmp_63) + tmp_139*(-tmp_136*tmp_52 - tmp_137*tmp_58 - tmp_138*tmp_63) + tmp_149*(-tmp_146*tmp_52 - tmp_147*tmp_58 - tmp_148*tmp_63) + tmp_159*(-tmp_156*tmp_52 - tmp_157*tmp_58 - tmp_158*tmp_63) + tmp_169*(-tmp_166*tmp_52 - tmp_167*tmp_58 - tmp_168*tmp_63) + tmp_179*(-tmp_176*tmp_52 - tmp_177*tmp_58 - tmp_178*tmp_63) + tmp_189*(-tmp_186*tmp_52 - tmp_187*tmp_58 - tmp_188*tmp_63) + tmp_199*(-tmp_196*tmp_52 - tmp_197*tmp_58 - tmp_198*tmp_63) + tmp_209*(-tmp_206*tmp_52 - tmp_207*tmp_58 - tmp_208*tmp_63) + tmp_219*(-tmp_216*tmp_52 - tmp_217*tmp_58 - tmp_218*tmp_63) + tmp_229*(-tmp_226*tmp_52 - tmp_227*tmp_58 - tmp_228*tmp_63) + tmp_239*(-tmp_236*tmp_52 - tmp_237*tmp_58 - tmp_238*tmp_63) + tmp_249*(-tmp_246*tmp_52 - tmp_247*tmp_58 - tmp_248*tmp_63) + tmp_259*(-tmp_256*tmp_52 - tmp_257*tmp_58 - tmp_258*tmp_63) + tmp_269*(-tmp_266*tmp_52 - tmp_267*tmp_58 - tmp_268*tmp_63) + tmp_69*(-tmp_46*tmp_52 - tmp_53*tmp_58 - tmp_63*tmp_64) + tmp_79*(-tmp_52*tmp_76 - tmp_58*tmp_77 - tmp_63*tmp_78) + tmp_89*(-tmp_52*tmp_86 - tmp_58*tmp_87 - tmp_63*tmp_88) + tmp_99*(-tmp_52*tmp_96 - tmp_58*tmp_97 - tmp_63*tmp_98);
      real_t a_0_1 = tmp_109*(-tmp_106*tmp_271 - tmp_107*tmp_270 - tmp_108*tmp_272) + tmp_119*(-tmp_116*tmp_271 - tmp_117*tmp_270 - tmp_118*tmp_272) + tmp_129*(-tmp_126*tmp_271 - tmp_127*tmp_270 - tmp_128*tmp_272) + tmp_139*(-tmp_136*tmp_271 - tmp_137*tmp_270 - tmp_138*tmp_272) + tmp_149*(-tmp_146*tmp_271 - tmp_147*tmp_270 - tmp_148*tmp_272) + tmp_159*(-tmp_156*tmp_271 - tmp_157*tmp_270 - tmp_158*tmp_272) + tmp_169*(-tmp_166*tmp_271 - tmp_167*tmp_270 - tmp_168*tmp_272) + tmp_179*(-tmp_176*tmp_271 - tmp_177*tmp_270 - tmp_178*tmp_272) + tmp_189*(-tmp_186*tmp_271 - tmp_187*tmp_270 - tmp_188*tmp_272) + tmp_199*(-tmp_196*tmp_271 - tmp_197*tmp_270 - tmp_198*tmp_272) + tmp_209*(-tmp_206*tmp_271 - tmp_207*tmp_270 - tmp_208*tmp_272) + tmp_219*(-tmp_216*tmp_271 - tmp_217*tmp_270 - tmp_218*tmp_272) + tmp_229*(-tmp_226*tmp_271 - tmp_227*tmp_270 - tmp_228*tmp_272) + tmp_239*(-tmp_236*tmp_271 - tmp_237*tmp_270 - tmp_238*tmp_272) + tmp_249*(-tmp_246*tmp_271 - tmp_247*tmp_270 - tmp_248*tmp_272) + tmp_259*(-tmp_256*tmp_271 - tmp_257*tmp_270 - tmp_258*tmp_272) + tmp_269*(-tmp_266*tmp_271 - tmp_267*tmp_270 - tmp_268*tmp_272) + tmp_69*(-tmp_270*tmp_53 - tmp_271*tmp_46 - tmp_272*tmp_64) + tmp_79*(-tmp_270*tmp_77 - tmp_271*tmp_76 - tmp_272*tmp_78) + tmp_89*(-tmp_270*tmp_87 - tmp_271*tmp_86 - tmp_272*tmp_88) + tmp_99*(-tmp_270*tmp_97 - tmp_271*tmp_96 - tmp_272*tmp_98);
      real_t a_0_2 = tmp_109*(-tmp_106*tmp_274 - tmp_107*tmp_273 - tmp_108*tmp_275) + tmp_119*(-tmp_116*tmp_274 - tmp_117*tmp_273 - tmp_118*tmp_275) + tmp_129*(-tmp_126*tmp_274 - tmp_127*tmp_273 - tmp_128*tmp_275) + tmp_139*(-tmp_136*tmp_274 - tmp_137*tmp_273 - tmp_138*tmp_275) + tmp_149*(-tmp_146*tmp_274 - tmp_147*tmp_273 - tmp_148*tmp_275) + tmp_159*(-tmp_156*tmp_274 - tmp_157*tmp_273 - tmp_158*tmp_275) + tmp_169*(-tmp_166*tmp_274 - tmp_167*tmp_273 - tmp_168*tmp_275) + tmp_179*(-tmp_176*tmp_274 - tmp_177*tmp_273 - tmp_178*tmp_275) + tmp_189*(-tmp_186*tmp_274 - tmp_187*tmp_273 - tmp_188*tmp_275) + tmp_199*(-tmp_196*tmp_274 - tmp_197*tmp_273 - tmp_198*tmp_275) + tmp_209*(-tmp_206*tmp_274 - tmp_207*tmp_273 - tmp_208*tmp_275) + tmp_219*(-tmp_216*tmp_274 - tmp_217*tmp_273 - tmp_218*tmp_275) + tmp_229*(-tmp_226*tmp_274 - tmp_227*tmp_273 - tmp_228*tmp_275) + tmp_239*(-tmp_236*tmp_274 - tmp_237*tmp_273 - tmp_238*tmp_275) + tmp_249*(-tmp_246*tmp_274 - tmp_247*tmp_273 - tmp_248*tmp_275) + tmp_259*(-tmp_256*tmp_274 - tmp_257*tmp_273 - tmp_258*tmp_275) + tmp_269*(-tmp_266*tmp_274 - tmp_267*tmp_273 - tmp_268*tmp_275) + tmp_69*(-tmp_273*tmp_53 - tmp_274*tmp_46 - tmp_275*tmp_64) + tmp_79*(-tmp_273*tmp_77 - tmp_274*tmp_76 - tmp_275*tmp_78) + tmp_89*(-tmp_273*tmp_87 - tmp_274*tmp_86 - tmp_275*tmp_88) + tmp_99*(-tmp_273*tmp_97 - tmp_274*tmp_96 - tmp_275*tmp_98);
      real_t a_0_3 = tmp_109*(-tmp_106*tmp_277 - tmp_107*tmp_276 - tmp_108*tmp_278) + tmp_119*(-tmp_116*tmp_277 - tmp_117*tmp_276 - tmp_118*tmp_278) + tmp_129*(-tmp_126*tmp_277 - tmp_127*tmp_276 - tmp_128*tmp_278) + tmp_139*(-tmp_136*tmp_277 - tmp_137*tmp_276 - tmp_138*tmp_278) + tmp_149*(-tmp_146*tmp_277 - tmp_147*tmp_276 - tmp_148*tmp_278) + tmp_159*(-tmp_156*tmp_277 - tmp_157*tmp_276 - tmp_158*tmp_278) + tmp_169*(-tmp_166*tmp_277 - tmp_167*tmp_276 - tmp_168*tmp_278) + tmp_179*(-tmp_176*tmp_277 - tmp_177*tmp_276 - tmp_178*tmp_278) + tmp_189*(-tmp_186*tmp_277 - tmp_187*tmp_276 - tmp_188*tmp_278) + tmp_199*(-tmp_196*tmp_277 - tmp_197*tmp_276 - tmp_198*tmp_278) + tmp_209*(-tmp_206*tmp_277 - tmp_207*tmp_276 - tmp_208*tmp_278) + tmp_219*(-tmp_216*tmp_277 - tmp_217*tmp_276 - tmp_218*tmp_278) + tmp_229*(-tmp_226*tmp_277 - tmp_227*tmp_276 - tmp_228*tmp_278) + tmp_239*(-tmp_236*tmp_277 - tmp_237*tmp_276 - tmp_238*tmp_278) + tmp_249*(-tmp_246*tmp_277 - tmp_247*tmp_276 - tmp_248*tmp_278) + tmp_259*(-tmp_256*tmp_277 - tmp_257*tmp_276 - tmp_258*tmp_278) + tmp_269*(-tmp_266*tmp_277 - tmp_267*tmp_276 - tmp_268*tmp_278) + tmp_69*(-tmp_276*tmp_53 - tmp_277*tmp_46 - tmp_278*tmp_64) + tmp_79*(-tmp_276*tmp_77 - tmp_277*tmp_76 - tmp_278*tmp_78) + tmp_89*(-tmp_276*tmp_87 - tmp_277*tmp_86 - tmp_278*tmp_88) + tmp_99*(-tmp_276*tmp_97 - tmp_277*tmp_96 - tmp_278*tmp_98);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormP1E_0 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormP1E_0( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id11 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502282*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.87382197101699555*p_affine_2_0, 0.063089014491502282*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.87382197101699555*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.50142650965817914*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.50142650965817914*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502227*p_affine_0_0 + 0.87382197101699555*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.063089014491502227*p_affine_0_1 + 0.87382197101699555*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.50142650965817914*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.50142650965817914*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id5 );
      Scalar_Variable_Coefficient_2D_mu( 0.87382197101699566*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.87382197101699566*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id6 );
      Scalar_Variable_Coefficient_2D_mu( 0.50142650965817914*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.50142650965817914*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id7 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id8 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id9 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id10 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id11 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = 1.0 / (tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = 1.0*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = tmp_10*tmp_5 + tmp_4*tmp_8;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2*tmp_10 - 2*tmp_3*tmp_8;
      real_t tmp_14 = 0.5*tmp_7;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_17 = tmp_14*tmp_16;
      real_t tmp_18 = tmp_14*tmp_3;
      real_t tmp_19 = tmp_1*tmp_17 + tmp_15*tmp_5 + tmp_18*tmp_6 + tmp_18*tmp_9;
      real_t tmp_20 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_19;
      real_t tmp_21 = -4*tmp_15 - 4*tmp_17;
      real_t tmp_22 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_23 = 0.025422453185103409*tmp_22;
      real_t tmp_24 = tmp_11*tmp_13;
      real_t tmp_25 = tmp_19*tmp_21;
      real_t tmp_26 = 0.058393137863189684*tmp_22;
      real_t tmp_27 = 0.041425537809186785*tmp_22;
      real_t tmp_28 = 0.041425537809186785*tmp_22;
      real_t tmp_29 = 0.025422453185103409*tmp_22;
      real_t tmp_30 = 0.058393137863189684*tmp_22;
      real_t tmp_31 = 0.025422453185103409*tmp_22;
      real_t tmp_32 = 0.058393137863189684*tmp_22;
      real_t tmp_33 = 0.041425537809186785*tmp_22;
      real_t tmp_34 = 0.041425537809186785*tmp_22;
      real_t tmp_35 = 0.041425537809186785*tmp_22;
      real_t tmp_36 = 0.041425537809186785*tmp_22;
      real_t tmp_37 = 2.0*tmp_7;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_16*tmp_37;
      real_t tmp_40 = tmp_11*tmp_38;
      real_t tmp_41 = tmp_19*tmp_39;
      real_t tmp_42 = tmp_37*tmp_9;
      real_t tmp_43 = tmp_1*tmp_37;
      real_t tmp_44 = tmp_11*tmp_42;
      real_t tmp_45 = tmp_19*tmp_43;
      real_t a_0_0 = tmp_23*(tmp_12*tmp_13 + tmp_20*tmp_21) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_25) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_25) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_25) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_25) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_25) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_25) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_25) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_25) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_25);
      real_t a_1_0 = tmp_23*(tmp_12*tmp_38 + tmp_20*tmp_39) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_41) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_41) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_41) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_41) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_41) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_41) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_41);
      real_t a_2_0 = tmp_23*(tmp_12*tmp_42 + tmp_20*tmp_43) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_45) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_45) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_45) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_45) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_45) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_45) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_45) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_45) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_45) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_45) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_45);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = tmp_4*tmp_5;
      real_t tmp_7 = p_affine_2_0 + tmp_3;
      real_t tmp_8 = 1.0 / (-tmp_1*tmp_7 + tmp_6);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + tmp_0;
      real_t tmp_11 = tmp_8*(tmp_10 + 0.046910077030668018*tmp_9);
      real_t tmp_12 = tmp_11*tmp_2;
      real_t tmp_13 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_14 = p_affine_6_0 + tmp_3;
      real_t tmp_15 = tmp_8*(0.046910077030668018*tmp_13 + tmp_14);
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = tmp_12 + tmp_16;
      real_t tmp_18 = tmp_17 - 1.0/3.0;
      real_t tmp_19 = tmp_11*tmp_4;
      real_t tmp_20 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_21 = tmp_15*tmp_20;
      real_t tmp_22 = tmp_19 + tmp_21;
      real_t tmp_23 = tmp_22 - 1.0/3.0;
      real_t tmp_24 = p_affine_10_0*(tmp_1*tmp_18 + tmp_23*tmp_5);
      real_t tmp_25 = 0.5*tmp_8;
      real_t tmp_26 = tmp_25*tmp_4;
      real_t tmp_27 = tmp_2*tmp_25;
      real_t tmp_28 = -tmp_26 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_18*tmp_4 + tmp_23*tmp_7;
      real_t tmp_31 = 1.0*tmp_8;
      real_t tmp_32 = tmp_31*tmp_5;
      real_t tmp_33 = tmp_20*tmp_31;
      real_t tmp_34 = 0.5*p_affine_10_0*(-tmp_32 - tmp_33) + 0.5*p_affine_10_1*tmp_28;
      real_t tmp_35 = -tmp_12 - tmp_16 - tmp_19 - tmp_21 + 1;
      real_t tmp_36 = std::abs(std::pow((tmp_13*tmp_13) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_37 = 3/tmp_36;
      real_t tmp_38 = tmp_30*tmp_37;
      real_t tmp_39 = tmp_25*tmp_5;
      real_t tmp_40 = 0.5*p_affine_10_0*(tmp_31*tmp_6 + tmp_33*tmp_7) + 0.5*p_affine_10_1*(tmp_1*tmp_39 + tmp_20*tmp_39 + tmp_26*tmp_7 + tmp_27*tmp_4);
      real_t tmp_41 = 2*tmp_36;
      real_t tmp_42 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_41;
      real_t tmp_43 = tmp_8*(tmp_10 + 0.23076534494715845*tmp_9);
      real_t tmp_44 = tmp_2*tmp_43;
      real_t tmp_45 = tmp_8*(0.23076534494715845*tmp_13 + tmp_14);
      real_t tmp_46 = tmp_45*tmp_5;
      real_t tmp_47 = tmp_44 + tmp_46;
      real_t tmp_48 = tmp_47 - 1.0/3.0;
      real_t tmp_49 = tmp_4*tmp_43;
      real_t tmp_50 = tmp_20*tmp_45;
      real_t tmp_51 = tmp_49 + tmp_50;
      real_t tmp_52 = tmp_51 - 1.0/3.0;
      real_t tmp_53 = tmp_1*tmp_48 + tmp_5*tmp_52;
      real_t tmp_54 = p_affine_10_0*tmp_29;
      real_t tmp_55 = tmp_4*tmp_48 + tmp_52*tmp_7;
      real_t tmp_56 = -tmp_44 - tmp_46 - tmp_49 - tmp_50 + 1;
      real_t tmp_57 = tmp_37*tmp_55;
      real_t tmp_58 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41;
      real_t tmp_59 = tmp_8*(tmp_10 + 0.5*tmp_9);
      real_t tmp_60 = tmp_2*tmp_59;
      real_t tmp_61 = tmp_8*(0.5*tmp_13 + tmp_14);
      real_t tmp_62 = tmp_5*tmp_61;
      real_t tmp_63 = tmp_60 + tmp_62;
      real_t tmp_64 = tmp_63 - 1.0/3.0;
      real_t tmp_65 = tmp_4*tmp_59;
      real_t tmp_66 = tmp_20*tmp_61;
      real_t tmp_67 = tmp_65 + tmp_66;
      real_t tmp_68 = tmp_67 - 1.0/3.0;
      real_t tmp_69 = tmp_1*tmp_64 + tmp_5*tmp_68;
      real_t tmp_70 = tmp_4*tmp_64 + tmp_68*tmp_7;
      real_t tmp_71 = -tmp_60 - tmp_62 - tmp_65 - tmp_66 + 1;
      real_t tmp_72 = tmp_37*tmp_70;
      real_t tmp_73 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41;
      real_t tmp_74 = tmp_8*(tmp_10 + 0.7692346550528415*tmp_9);
      real_t tmp_75 = tmp_2*tmp_74;
      real_t tmp_76 = tmp_8*(0.7692346550528415*tmp_13 + tmp_14);
      real_t tmp_77 = tmp_5*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = tmp_78 - 1.0/3.0;
      real_t tmp_80 = tmp_4*tmp_74;
      real_t tmp_81 = tmp_20*tmp_76;
      real_t tmp_82 = tmp_80 + tmp_81;
      real_t tmp_83 = tmp_82 - 1.0/3.0;
      real_t tmp_84 = tmp_1*tmp_79 + tmp_5*tmp_83;
      real_t tmp_85 = tmp_4*tmp_79 + tmp_7*tmp_83;
      real_t tmp_86 = -tmp_75 - tmp_77 - tmp_80 - tmp_81 + 1;
      real_t tmp_87 = tmp_37*tmp_85;
      real_t tmp_88 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41;
      real_t tmp_89 = tmp_8*(tmp_10 + 0.95308992296933193*tmp_9);
      real_t tmp_90 = tmp_2*tmp_89;
      real_t tmp_91 = tmp_8*(0.95308992296933193*tmp_13 + tmp_14);
      real_t tmp_92 = tmp_5*tmp_91;
      real_t tmp_93 = tmp_90 + tmp_92;
      real_t tmp_94 = tmp_93 - 1.0/3.0;
      real_t tmp_95 = tmp_4*tmp_89;
      real_t tmp_96 = tmp_20*tmp_91;
      real_t tmp_97 = tmp_95 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/3.0;
      real_t tmp_99 = tmp_1*tmp_94 + tmp_5*tmp_98;
      real_t tmp_100 = tmp_4*tmp_94 + tmp_7*tmp_98;
      real_t tmp_101 = -tmp_90 - tmp_92 - tmp_95 - tmp_96 + 1;
      real_t tmp_102 = tmp_100*tmp_37;
      real_t tmp_103 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41;
      real_t tmp_104 = 0.25*tmp_8;
      real_t tmp_105 = tmp_104*tmp_2;
      real_t tmp_106 = 0.5*p_affine_10_0*tmp_32 + 0.5*p_affine_10_1*tmp_27;
      real_t tmp_107 = p_affine_10_0*tmp_105;
      real_t tmp_108 = tmp_104*tmp_4;
      real_t tmp_109 = 0.5*p_affine_10_0*tmp_33 + 0.5*p_affine_10_1*tmp_26;
      real_t tmp_110 = p_affine_10_0*tmp_108;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_34 + tmp_101*tmp_102 - tmp_101*tmp_40 - tmp_54*tmp_99) + tmp_42*(-tmp_24*tmp_29 - tmp_30*tmp_34 + tmp_35*tmp_38 - tmp_35*tmp_40) + tmp_58*(-tmp_34*tmp_55 - tmp_40*tmp_56 - tmp_53*tmp_54 + tmp_56*tmp_57) + tmp_73*(-tmp_34*tmp_70 - tmp_40*tmp_71 - tmp_54*tmp_69 + tmp_71*tmp_72) + tmp_88*(-tmp_34*tmp_85 - tmp_40*tmp_86 - tmp_54*tmp_84 + tmp_86*tmp_87);
      real_t a_1_0 = tmp_103*(-tmp_100*tmp_106 + tmp_102*tmp_93 - tmp_107*tmp_99 - tmp_40*tmp_93) + tmp_42*(-tmp_105*tmp_24 - tmp_106*tmp_30 + tmp_17*tmp_38 - tmp_17*tmp_40) + tmp_58*(-tmp_106*tmp_55 - tmp_107*tmp_53 - tmp_40*tmp_47 + tmp_47*tmp_57) + tmp_73*(-tmp_106*tmp_70 - tmp_107*tmp_69 - tmp_40*tmp_63 + tmp_63*tmp_72) + tmp_88*(-tmp_106*tmp_85 - tmp_107*tmp_84 - tmp_40*tmp_78 + tmp_78*tmp_87);
      real_t a_2_0 = tmp_103*(-tmp_100*tmp_109 + tmp_102*tmp_97 - tmp_110*tmp_99 - tmp_40*tmp_97) + tmp_42*(-tmp_108*tmp_24 - tmp_109*tmp_30 + tmp_22*tmp_38 - tmp_22*tmp_40) + tmp_58*(-tmp_109*tmp_55 - tmp_110*tmp_53 - tmp_40*tmp_51 + tmp_51*tmp_57) + tmp_73*(-tmp_109*tmp_70 - tmp_110*tmp_69 - tmp_40*tmp_67 + tmp_67*tmp_72) + tmp_88*(-tmp_109*tmp_85 - tmp_110*tmp_84 - tmp_40*tmp_82 + tmp_82*tmp_87);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_3_1;
      real_t tmp_1 = p_affine_4_1 + tmp_0;
      real_t tmp_2 = p_affine_3_0 - p_affine_5_0;
      real_t tmp_3 = -p_affine_3_0;
      real_t tmp_4 = p_affine_4_0 + tmp_3;
      real_t tmp_5 = p_affine_5_1 + tmp_0;
      real_t tmp_6 = tmp_4*tmp_5;
      real_t tmp_7 = p_affine_5_0 + tmp_3;
      real_t tmp_8 = 1.0 / (-tmp_1*tmp_7 + tmp_6);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + 0.046910077030668018*tmp_9;
      real_t tmp_11 = tmp_8*(tmp_0 + tmp_10);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + 0.046910077030668018*tmp_12;
      real_t tmp_14 = tmp_8*(tmp_13 + tmp_3);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_5 - 1.0/3.0;
      real_t tmp_16 = p_affine_3_1 - p_affine_4_1;
      real_t tmp_17 = tmp_11*tmp_4 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = p_affine_10_0*(tmp_1*tmp_15 + tmp_17*tmp_5);
      real_t tmp_19 = -p_affine_0_0;
      real_t tmp_20 = p_affine_1_0 + tmp_19;
      real_t tmp_21 = -p_affine_0_1;
      real_t tmp_22 = p_affine_2_1 + tmp_21;
      real_t tmp_23 = 1.0 / (tmp_20*tmp_22 - (p_affine_1_1 + tmp_21)*(p_affine_2_0 + tmp_19));
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_25 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_15*tmp_4 + tmp_17*tmp_7;
      real_t tmp_31 = 1.0*tmp_23;
      real_t tmp_32 = tmp_22*tmp_31;
      real_t tmp_33 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = 0.5*p_affine_10_0*(-tmp_32 - tmp_34) + 0.5*p_affine_10_1*tmp_28;
      real_t tmp_36 = tmp_23*(tmp_10 + tmp_21);
      real_t tmp_37 = tmp_20*tmp_36;
      real_t tmp_38 = tmp_26*tmp_36;
      real_t tmp_39 = tmp_23*(tmp_13 + tmp_19);
      real_t tmp_40 = tmp_22*tmp_39;
      real_t tmp_41 = tmp_33*tmp_39;
      real_t tmp_42 = -tmp_37 - tmp_38 - tmp_40 - tmp_41 + 1;
      real_t tmp_43 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_44 = 3/tmp_43;
      real_t tmp_45 = tmp_30*tmp_44;
      real_t tmp_46 = 1.0*tmp_8;
      real_t tmp_47 = 0.5*tmp_8;
      real_t tmp_48 = tmp_4*tmp_47;
      real_t tmp_49 = tmp_47*tmp_5;
      real_t tmp_50 = 0.5*p_affine_10_0*(tmp_16*tmp_46*tmp_7 + tmp_46*tmp_6) + 0.5*p_affine_10_1*(tmp_1*tmp_49 + tmp_16*tmp_49 + tmp_2*tmp_48 + tmp_48*tmp_7);
      real_t tmp_51 = 2*tmp_43;
      real_t tmp_52 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_51;
      real_t tmp_53 = p_affine_6_1 + 0.23076534494715845*tmp_9;
      real_t tmp_54 = tmp_8*(tmp_0 + tmp_53);
      real_t tmp_55 = p_affine_6_0 + 0.23076534494715845*tmp_12;
      real_t tmp_56 = tmp_8*(tmp_3 + tmp_55);
      real_t tmp_57 = tmp_2*tmp_54 + tmp_5*tmp_56 - 1.0/3.0;
      real_t tmp_58 = tmp_16*tmp_56 + tmp_4*tmp_54 - 1.0/3.0;
      real_t tmp_59 = tmp_1*tmp_57 + tmp_5*tmp_58;
      real_t tmp_60 = p_affine_10_0*tmp_29;
      real_t tmp_61 = tmp_4*tmp_57 + tmp_58*tmp_7;
      real_t tmp_62 = tmp_23*(tmp_21 + tmp_53);
      real_t tmp_63 = tmp_20*tmp_62;
      real_t tmp_64 = tmp_26*tmp_62;
      real_t tmp_65 = tmp_23*(tmp_19 + tmp_55);
      real_t tmp_66 = tmp_22*tmp_65;
      real_t tmp_67 = tmp_33*tmp_65;
      real_t tmp_68 = -tmp_63 - tmp_64 - tmp_66 - tmp_67 + 1;
      real_t tmp_69 = tmp_44*tmp_61;
      real_t tmp_70 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51;
      real_t tmp_71 = p_affine_6_1 + 0.5*tmp_9;
      real_t tmp_72 = tmp_8*(tmp_0 + tmp_71);
      real_t tmp_73 = p_affine_6_0 + 0.5*tmp_12;
      real_t tmp_74 = tmp_8*(tmp_3 + tmp_73);
      real_t tmp_75 = tmp_2*tmp_72 + tmp_5*tmp_74 - 1.0/3.0;
      real_t tmp_76 = tmp_16*tmp_74 + tmp_4*tmp_72 - 1.0/3.0;
      real_t tmp_77 = tmp_1*tmp_75 + tmp_5*tmp_76;
      real_t tmp_78 = tmp_4*tmp_75 + tmp_7*tmp_76;
      real_t tmp_79 = tmp_23*(tmp_21 + tmp_71);
      real_t tmp_80 = tmp_20*tmp_79;
      real_t tmp_81 = tmp_26*tmp_79;
      real_t tmp_82 = tmp_23*(tmp_19 + tmp_73);
      real_t tmp_83 = tmp_22*tmp_82;
      real_t tmp_84 = tmp_33*tmp_82;
      real_t tmp_85 = -tmp_80 - tmp_81 - tmp_83 - tmp_84 + 1;
      real_t tmp_86 = tmp_44*tmp_78;
      real_t tmp_87 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51;
      real_t tmp_88 = p_affine_6_1 + 0.7692346550528415*tmp_9;
      real_t tmp_89 = tmp_8*(tmp_0 + tmp_88);
      real_t tmp_90 = p_affine_6_0 + 0.7692346550528415*tmp_12;
      real_t tmp_91 = tmp_8*(tmp_3 + tmp_90);
      real_t tmp_92 = tmp_2*tmp_89 + tmp_5*tmp_91 - 1.0/3.0;
      real_t tmp_93 = tmp_16*tmp_91 + tmp_4*tmp_89 - 1.0/3.0;
      real_t tmp_94 = tmp_1*tmp_92 + tmp_5*tmp_93;
      real_t tmp_95 = tmp_4*tmp_92 + tmp_7*tmp_93;
      real_t tmp_96 = tmp_23*(tmp_21 + tmp_88);
      real_t tmp_97 = tmp_20*tmp_96;
      real_t tmp_98 = tmp_26*tmp_96;
      real_t tmp_99 = tmp_23*(tmp_19 + tmp_90);
      real_t tmp_100 = tmp_22*tmp_99;
      real_t tmp_101 = tmp_33*tmp_99;
      real_t tmp_102 = -tmp_100 - tmp_101 - tmp_97 - tmp_98 + 1;
      real_t tmp_103 = tmp_44*tmp_95;
      real_t tmp_104 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_51;
      real_t tmp_105 = p_affine_6_1 + 0.95308992296933193*tmp_9;
      real_t tmp_106 = tmp_8*(tmp_0 + tmp_105);
      real_t tmp_107 = p_affine_6_0 + 0.95308992296933193*tmp_12;
      real_t tmp_108 = tmp_8*(tmp_107 + tmp_3);
      real_t tmp_109 = tmp_106*tmp_2 + tmp_108*tmp_5 - 1.0/3.0;
      real_t tmp_110 = tmp_106*tmp_4 + tmp_108*tmp_16 - 1.0/3.0;
      real_t tmp_111 = tmp_1*tmp_109 + tmp_110*tmp_5;
      real_t tmp_112 = tmp_109*tmp_4 + tmp_110*tmp_7;
      real_t tmp_113 = tmp_23*(tmp_105 + tmp_21);
      real_t tmp_114 = tmp_113*tmp_20;
      real_t tmp_115 = tmp_113*tmp_26;
      real_t tmp_116 = tmp_23*(tmp_107 + tmp_19);
      real_t tmp_117 = tmp_116*tmp_22;
      real_t tmp_118 = tmp_116*tmp_33;
      real_t tmp_119 = -tmp_114 - tmp_115 - tmp_117 - tmp_118 + 1;
      real_t tmp_120 = tmp_112*tmp_44;
      real_t tmp_121 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_51;
      real_t tmp_122 = 0.25*tmp_23;
      real_t tmp_123 = tmp_122*tmp_26;
      real_t tmp_124 = 0.5*p_affine_10_0*tmp_32 + 0.5*p_affine_10_1*tmp_27;
      real_t tmp_125 = tmp_38 + tmp_40;
      real_t tmp_126 = p_affine_10_0*tmp_123;
      real_t tmp_127 = tmp_64 + tmp_66;
      real_t tmp_128 = tmp_81 + tmp_83;
      real_t tmp_129 = tmp_100 + tmp_98;
      real_t tmp_130 = tmp_115 + tmp_117;
      real_t tmp_131 = tmp_122*tmp_20;
      real_t tmp_132 = 0.5*p_affine_10_0*tmp_34 + 0.5*p_affine_10_1*tmp_25;
      real_t tmp_133 = tmp_37 + tmp_41;
      real_t tmp_134 = p_affine_10_0*tmp_131;
      real_t tmp_135 = tmp_63 + tmp_67;
      real_t tmp_136 = tmp_80 + tmp_84;
      real_t tmp_137 = tmp_101 + tmp_97;
      real_t tmp_138 = tmp_114 + tmp_118;
      real_t a_0_0 = tmp_104*(-tmp_102*tmp_103 - tmp_102*tmp_50 + tmp_35*tmp_95 + tmp_60*tmp_94) + tmp_121*(tmp_111*tmp_60 + tmp_112*tmp_35 - tmp_119*tmp_120 - tmp_119*tmp_50) + tmp_52*(tmp_18*tmp_29 + tmp_30*tmp_35 - tmp_42*tmp_45 - tmp_42*tmp_50) + tmp_70*(tmp_35*tmp_61 - tmp_50*tmp_68 + tmp_59*tmp_60 - tmp_68*tmp_69) + tmp_87*(tmp_35*tmp_78 - tmp_50*tmp_85 + tmp_60*tmp_77 - tmp_85*tmp_86);
      real_t a_1_0 = tmp_104*(-tmp_103*tmp_129 + tmp_124*tmp_95 + tmp_126*tmp_94 - tmp_129*tmp_50) + tmp_121*(tmp_111*tmp_126 + tmp_112*tmp_124 - tmp_120*tmp_130 - tmp_130*tmp_50) + tmp_52*(tmp_123*tmp_18 + tmp_124*tmp_30 - tmp_125*tmp_45 - tmp_125*tmp_50) + tmp_70*(tmp_124*tmp_61 + tmp_126*tmp_59 - tmp_127*tmp_50 - tmp_127*tmp_69) + tmp_87*(tmp_124*tmp_78 + tmp_126*tmp_77 - tmp_128*tmp_50 - tmp_128*tmp_86);
      real_t a_2_0 = tmp_104*(-tmp_103*tmp_137 + tmp_132*tmp_95 + tmp_134*tmp_94 - tmp_137*tmp_50) + tmp_121*(tmp_111*tmp_134 + tmp_112*tmp_132 - tmp_120*tmp_138 - tmp_138*tmp_50) + tmp_52*(tmp_131*tmp_18 + tmp_132*tmp_30 - tmp_133*tmp_45 - tmp_133*tmp_50) + tmp_70*(tmp_132*tmp_61 + tmp_134*tmp_59 - tmp_135*tmp_50 - tmp_135*tmp_69) + tmp_87*(tmp_132*tmp_78 + tmp_134*tmp_77 - tmp_136*tmp_50 - tmp_136*tmp_86);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = 1.0 / (tmp_1*tmp_3 - tmp_4*(p_affine_1_1 + tmp_2));
      real_t tmp_6 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_7 = p_affine_6_1 + tmp_2;
      real_t tmp_8 = tmp_5*(0.046910077030668018*tmp_6 + tmp_7);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + tmp_0;
      real_t tmp_14 = tmp_5*(0.046910077030668018*tmp_12 + tmp_13);
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_14*tmp_16;
      real_t tmp_18 = tmp_11 + tmp_15;
      real_t tmp_19 = tmp_17 + tmp_9;
      real_t tmp_20 = 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id0*(tmp_1*(tmp_18 - 1.0/3.0) + tmp_4*(tmp_19 - 1.0/3.0));
      real_t tmp_21 = tmp_5*(0.23076534494715845*tmp_6 + tmp_7);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_10*tmp_21;
      real_t tmp_24 = tmp_5*(0.23076534494715845*tmp_12 + tmp_13);
      real_t tmp_25 = tmp_24*tmp_3;
      real_t tmp_26 = tmp_16*tmp_24;
      real_t tmp_27 = tmp_23 + tmp_25;
      real_t tmp_28 = tmp_22 + tmp_26;
      real_t tmp_29 = 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id1*(tmp_1*(tmp_27 - 1.0/3.0) + tmp_4*(tmp_28 - 1.0/3.0));
      real_t tmp_30 = tmp_5*(0.5*tmp_6 + tmp_7);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_10*tmp_30;
      real_t tmp_33 = tmp_5*(0.5*tmp_12 + tmp_13);
      real_t tmp_34 = tmp_3*tmp_33;
      real_t tmp_35 = tmp_16*tmp_33;
      real_t tmp_36 = tmp_32 + tmp_34;
      real_t tmp_37 = tmp_31 + tmp_35;
      real_t tmp_38 = 1.706666666666667*Scalar_Variable_Coefficient_2D_mu_out0_id2*(tmp_1*(tmp_36 - 1.0/3.0) + tmp_4*(tmp_37 - 1.0/3.0));
      real_t tmp_39 = tmp_5*(0.7692346550528415*tmp_6 + tmp_7);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_5*(0.7692346550528415*tmp_12 + tmp_13);
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_16*tmp_42;
      real_t tmp_45 = tmp_41 + tmp_43;
      real_t tmp_46 = tmp_40 + tmp_44;
      real_t tmp_47 = 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id3*(tmp_1*(tmp_45 - 1.0/3.0) + tmp_4*(tmp_46 - 1.0/3.0));
      real_t tmp_48 = tmp_5*(0.95308992296933193*tmp_6 + tmp_7);
      real_t tmp_49 = tmp_1*tmp_48;
      real_t tmp_50 = tmp_10*tmp_48;
      real_t tmp_51 = tmp_5*(0.95308992296933193*tmp_12 + tmp_13);
      real_t tmp_52 = tmp_3*tmp_51;
      real_t tmp_53 = tmp_16*tmp_51;
      real_t tmp_54 = tmp_50 + tmp_52;
      real_t tmp_55 = tmp_49 + tmp_53;
      real_t tmp_56 = 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id4*(tmp_1*(tmp_54 - 1.0/3.0) + tmp_4*(tmp_55 - 1.0/3.0));
      real_t a_0_0 = tmp_20*(-tmp_11 - tmp_15 - tmp_17 - tmp_9 + 1) + tmp_29*(-tmp_22 - tmp_23 - tmp_25 - tmp_26 + 1) + tmp_38*(-tmp_31 - tmp_32 - tmp_34 - tmp_35 + 1) + tmp_47*(-tmp_40 - tmp_41 - tmp_43 - tmp_44 + 1) + tmp_56*(-tmp_49 - tmp_50 - tmp_52 - tmp_53 + 1);
      real_t a_1_0 = tmp_18*tmp_20 + tmp_27*tmp_29 + tmp_36*tmp_38 + tmp_45*tmp_47 + tmp_54*tmp_56;
      real_t a_2_0 = tmp_19*tmp_20 + tmp_28*tmp_29 + tmp_37*tmp_38 + tmp_46*tmp_47 + tmp_55*tmp_56;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = -p_affine_0_2;
      real_t tmp_5 = p_affine_3_2 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_3_1 + tmp_2;
      real_t tmp_8 = p_affine_2_2 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_0;
      real_t tmp_12 = p_affine_1_2 + tmp_4;
      real_t tmp_13 = tmp_12*tmp_7;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = p_affine_1_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_8;
      real_t tmp_17 = tmp_15*tmp_5;
      real_t tmp_18 = tmp_12*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_17 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_13 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_16 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_23 + tmp_14*tmp_25;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = tmp_1*tmp_3 - tmp_11*tmp_15;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = -tmp_1*tmp_7 + tmp_14*tmp_15;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = tmp_11*tmp_7 - tmp_14*tmp_3;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_34 + tmp_12*tmp_37 + tmp_14*tmp_32 + tmp_38*tmp_8 + tmp_39*tmp_5;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = -tmp_1*tmp_8 + tmp_11*tmp_12;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = tmp_1*tmp_5 - tmp_12*tmp_14;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = -tmp_11*tmp_5 + tmp_14*tmp_8;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_45 + tmp_14*tmp_43 + tmp_15*tmp_37 + tmp_3*tmp_38 + tmp_39*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_1_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_2_0 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_3_0 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = p_affine_3_1 + tmp_0;
      real_t tmp_5 = p_affine_3_0 + tmp_2;
      real_t tmp_6 = p_affine_2_1 + tmp_0;
      real_t tmp_7 = tmp_3*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = p_affine_1_0 + tmp_2;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = tmp_10*tmp_6;
      real_t tmp_12 = p_affine_1_2 + tmp_9;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_1*tmp_10;
      real_t tmp_18 = tmp_12*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_11*tmp_8 + tmp_13*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_8 - tmp_17*tmp_3 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_9;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_0;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_11 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_2;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_5 - tmp_4*tmp_8;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_8 - tmp_12*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_13 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = -tmp_1*tmp_3 + tmp_6*tmp_8;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = tmp_12*tmp_3 - tmp_14*tmp_8;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_52*tmp_59;
      real_t tmp_61 = tmp_44*tmp_59;
      real_t tmp_62 = tmp_26*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_0;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_10*tmp_57 + tmp_12*tmp_41 + tmp_14*tmp_49;
      real_t tmp_67 = tmp_50*tmp_59;
      real_t tmp_68 = tmp_42*tmp_59;
      real_t tmp_69 = tmp_59*tmp_7;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_3*tmp_49 + tmp_41*tmp_8 + tmp_5*tmp_57;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_54*tmp_73;
      real_t tmp_75 = tmp_46*tmp_73;
      real_t tmp_76 = tmp_33*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*(-tmp_74 - tmp_75 - tmp_76) + 0.5*p_affine_13_1*tmp_63 + 0.5*p_affine_13_2*tmp_70;
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_33*tmp_59;
      real_t tmp_86 = tmp_46*tmp_59;
      real_t tmp_87 = tmp_54*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_3*tmp_75 + tmp_5*tmp_74 + tmp_76*tmp_8) + 0.5*p_affine_13_1*(tmp_1*tmp_85 + tmp_3*tmp_61 + tmp_4*tmp_87 + tmp_5*tmp_60 + tmp_6*tmp_86 + tmp_62*tmp_8) + 0.5*p_affine_13_2*(tmp_10*tmp_87 + tmp_12*tmp_85 + tmp_14*tmp_86 + tmp_3*tmp_68 + tmp_5*tmp_67 + tmp_69*tmp_8);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_6 + tmp_108*tmp_4;
      real_t tmp_110 = tmp_10*tmp_108 + tmp_103*tmp_14 + tmp_12*tmp_98;
      real_t tmp_111 = tmp_103*tmp_3 + tmp_108*tmp_5 + tmp_8*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_134 = tmp_10*tmp_132 + tmp_12*tmp_122 + tmp_127*tmp_14;
      real_t tmp_135 = tmp_122*tmp_8 + tmp_127*tmp_3 + tmp_132*tmp_5;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_158 = tmp_10*tmp_156 + tmp_12*tmp_146 + tmp_14*tmp_151;
      real_t tmp_159 = tmp_146*tmp_8 + tmp_151*tmp_3 + tmp_156*tmp_5;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_182 = tmp_10*tmp_180 + tmp_12*tmp_170 + tmp_14*tmp_175;
      real_t tmp_183 = tmp_170*tmp_8 + tmp_175*tmp_3 + tmp_180*tmp_5;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_206 = tmp_10*tmp_204 + tmp_12*tmp_194 + tmp_14*tmp_199;
      real_t tmp_207 = tmp_194*tmp_8 + tmp_199*tmp_3 + tmp_204*tmp_5;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_230 = tmp_10*tmp_228 + tmp_12*tmp_218 + tmp_14*tmp_223;
      real_t tmp_231 = tmp_218*tmp_8 + tmp_223*tmp_3 + tmp_228*tmp_5;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_254 = tmp_10*tmp_252 + tmp_12*tmp_242 + tmp_14*tmp_247;
      real_t tmp_255 = tmp_242*tmp_8 + tmp_247*tmp_3 + tmp_252*tmp_5;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_278 = tmp_10*tmp_276 + tmp_12*tmp_266 + tmp_14*tmp_271;
      real_t tmp_279 = tmp_266*tmp_8 + tmp_271*tmp_3 + tmp_276*tmp_5;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_302 = tmp_10*tmp_300 + tmp_12*tmp_290 + tmp_14*tmp_295;
      real_t tmp_303 = tmp_290*tmp_8 + tmp_295*tmp_3 + tmp_300*tmp_5;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_326 = tmp_10*tmp_324 + tmp_12*tmp_314 + tmp_14*tmp_319;
      real_t tmp_327 = tmp_3*tmp_319 + tmp_314*tmp_8 + tmp_324*tmp_5;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_350 = tmp_10*tmp_348 + tmp_12*tmp_338 + tmp_14*tmp_343;
      real_t tmp_351 = tmp_3*tmp_343 + tmp_338*tmp_8 + tmp_348*tmp_5;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_374 = tmp_10*tmp_372 + tmp_12*tmp_362 + tmp_14*tmp_367;
      real_t tmp_375 = tmp_3*tmp_367 + tmp_362*tmp_8 + tmp_372*tmp_5;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_398 = tmp_10*tmp_396 + tmp_12*tmp_386 + tmp_14*tmp_391;
      real_t tmp_399 = tmp_3*tmp_391 + tmp_386*tmp_8 + tmp_396*tmp_5;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_422 = tmp_10*tmp_420 + tmp_12*tmp_410 + tmp_14*tmp_415;
      real_t tmp_423 = tmp_3*tmp_415 + tmp_410*tmp_8 + tmp_420*tmp_5;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_446 = tmp_10*tmp_444 + tmp_12*tmp_434 + tmp_14*tmp_439;
      real_t tmp_447 = tmp_3*tmp_439 + tmp_434*tmp_8 + tmp_444*tmp_5;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_470 = tmp_10*tmp_468 + tmp_12*tmp_458 + tmp_14*tmp_463;
      real_t tmp_471 = tmp_3*tmp_463 + tmp_458*tmp_8 + tmp_468*tmp_5;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_494 = tmp_10*tmp_492 + tmp_12*tmp_482 + tmp_14*tmp_487;
      real_t tmp_495 = tmp_3*tmp_487 + tmp_482*tmp_8 + tmp_492*tmp_5;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_518 = tmp_10*tmp_516 + tmp_12*tmp_506 + tmp_14*tmp_511;
      real_t tmp_519 = tmp_3*tmp_511 + tmp_5*tmp_516 + tmp_506*tmp_8;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_542 = tmp_10*tmp_540 + tmp_12*tmp_530 + tmp_14*tmp_535;
      real_t tmp_543 = tmp_3*tmp_535 + tmp_5*tmp_540 + tmp_530*tmp_8;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_566 = tmp_10*tmp_564 + tmp_12*tmp_554 + tmp_14*tmp_559;
      real_t tmp_567 = tmp_3*tmp_559 + tmp_5*tmp_564 + tmp_554*tmp_8;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_0*tmp_19;
      real_t tmp_572 = tmp_571*tmp_7;
      real_t tmp_573 = tmp_26*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*tmp_62 + 0.5*p_affine_13_2*tmp_69;
      real_t tmp_575 = tmp_42*tmp_571;
      real_t tmp_576 = tmp_44*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_61 + 0.5*p_affine_13_2*tmp_68;
      real_t tmp_578 = tmp_50*tmp_571;
      real_t tmp_579 = tmp_52*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_74 + 0.5*p_affine_13_1*tmp_60 + 0.5*p_affine_13_2*tmp_67;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_1_0 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_2_0 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_3_0 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_4_1;
      real_t tmp_1 = p_affine_5_1 + tmp_0;
      real_t tmp_2 = -p_affine_4_0;
      real_t tmp_3 = p_affine_6_0 + tmp_2;
      real_t tmp_4 = p_affine_7_1 + tmp_0;
      real_t tmp_5 = tmp_3*tmp_4;
      real_t tmp_6 = p_affine_7_0 + tmp_2;
      real_t tmp_7 = p_affine_6_1 + tmp_0;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = p_affine_5_0 + tmp_2;
      real_t tmp_11 = -p_affine_4_2;
      real_t tmp_12 = p_affine_7_2 + tmp_11;
      real_t tmp_13 = tmp_12*tmp_7;
      real_t tmp_14 = p_affine_5_2 + tmp_11;
      real_t tmp_15 = p_affine_6_2 + tmp_11;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_12*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_16 - tmp_1*tmp_18 + tmp_10*tmp_13 - tmp_10*tmp_17 + tmp_14*tmp_5 - tmp_14*tmp_8);
      real_t tmp_20 = p_affine_8_2 + tmp_11;
      real_t tmp_21 = -p_affine_8_2;
      real_t tmp_22 = p_affine_9_2 + tmp_21;
      real_t tmp_23 = p_affine_10_2 + tmp_21;
      real_t tmp_24 = 0.031405749086161582*tmp_22 + 0.93718850182767688*tmp_23;
      real_t tmp_25 = tmp_19*(tmp_20 + tmp_24);
      real_t tmp_26 = tmp_16 - tmp_18;
      real_t tmp_27 = p_affine_8_1 + tmp_0;
      real_t tmp_28 = -p_affine_8_1;
      real_t tmp_29 = p_affine_9_1 + tmp_28;
      real_t tmp_30 = p_affine_10_1 + tmp_28;
      real_t tmp_31 = 0.031405749086161582*tmp_29 + 0.93718850182767688*tmp_30;
      real_t tmp_32 = tmp_19*(tmp_27 + tmp_31);
      real_t tmp_33 = tmp_13 - tmp_17;
      real_t tmp_34 = p_affine_8_0 + tmp_2;
      real_t tmp_35 = -p_affine_8_0;
      real_t tmp_36 = p_affine_9_0 + tmp_35;
      real_t tmp_37 = p_affine_10_0 + tmp_35;
      real_t tmp_38 = 0.031405749086161582*tmp_36 + 0.93718850182767688*tmp_37;
      real_t tmp_39 = tmp_19*(tmp_34 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_9 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = tmp_1*tmp_6 - tmp_10*tmp_4;
      real_t tmp_42 = tmp_10*tmp_12 - tmp_14*tmp_6;
      real_t tmp_43 = -tmp_1*tmp_12 + tmp_14*tmp_4;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = -tmp_1*tmp_3 + tmp_10*tmp_7;
      real_t tmp_46 = -tmp_10*tmp_15 + tmp_14*tmp_3;
      real_t tmp_47 = tmp_1*tmp_15 - tmp_14*tmp_7;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_7;
      real_t tmp_50 = -p_affine_0_0;
      real_t tmp_51 = p_affine_2_0 + tmp_50;
      real_t tmp_52 = -p_affine_0_2;
      real_t tmp_53 = p_affine_1_2 + tmp_52;
      real_t tmp_54 = p_affine_1_0 + tmp_50;
      real_t tmp_55 = p_affine_2_2 + tmp_52;
      real_t tmp_56 = tmp_51*tmp_53 - tmp_54*tmp_55;
      real_t tmp_57 = -p_affine_0_1;
      real_t tmp_58 = p_affine_2_1 + tmp_57;
      real_t tmp_59 = p_affine_3_2 + tmp_52;
      real_t tmp_60 = tmp_58*tmp_59;
      real_t tmp_61 = p_affine_3_1 + tmp_57;
      real_t tmp_62 = tmp_53*tmp_61;
      real_t tmp_63 = p_affine_3_0 + tmp_50;
      real_t tmp_64 = p_affine_1_1 + tmp_57;
      real_t tmp_65 = tmp_55*tmp_64;
      real_t tmp_66 = tmp_55*tmp_61;
      real_t tmp_67 = tmp_59*tmp_64;
      real_t tmp_68 = tmp_53*tmp_58;
      real_t tmp_69 = 1.0 / (tmp_51*tmp_62 - tmp_51*tmp_67 + tmp_54*tmp_60 - tmp_54*tmp_66 + tmp_63*tmp_65 - tmp_63*tmp_68);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_56*tmp_70;
      real_t tmp_72 = -tmp_53*tmp_63 + tmp_54*tmp_59;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = -tmp_51*tmp_59 + tmp_55*tmp_63;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_0;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_12*tmp_48 + tmp_14*tmp_40 + tmp_15*tmp_44;
      real_t tmp_80 = -tmp_51*tmp_64 + tmp_54*tmp_58;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = -tmp_54*tmp_61 + tmp_63*tmp_64;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = tmp_51*tmp_61 - tmp_58*tmp_63;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_10*tmp_40 + tmp_3*tmp_44 + tmp_48*tmp_6;
      real_t tmp_89 = tmp_65 - tmp_68;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = tmp_62 - tmp_67;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = tmp_60 - tmp_66;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*(-tmp_91 - tmp_93 - tmp_95) + 0.5*p_affine_13_1*tmp_76 + 0.5*p_affine_13_2*tmp_86;
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_24 + tmp_97);
      real_t tmp_99 = tmp_80*tmp_98;
      real_t tmp_100 = tmp_82*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_57;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_31);
      real_t tmp_103 = tmp_102*tmp_56;
      real_t tmp_104 = tmp_102*tmp_72;
      real_t tmp_105 = tmp_84*tmp_98;
      real_t tmp_106 = tmp_102*tmp_74;
      real_t tmp_107 = p_affine_8_0 + tmp_50;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_38);
      real_t tmp_109 = tmp_108*tmp_89;
      real_t tmp_110 = tmp_108*tmp_92;
      real_t tmp_111 = tmp_108*tmp_94;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)*std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)) + (std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)*std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)) + (std::abs(tmp_114*tmp_23 - tmp_115*tmp_37)*std::abs(tmp_114*tmp_23 - tmp_115*tmp_37));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_10*tmp_120;
      real_t tmp_122 = tmp_120*tmp_3;
      real_t tmp_123 = tmp_120*tmp_6;
      real_t tmp_124 = tmp_120*tmp_33;
      real_t tmp_125 = tmp_120*tmp_43;
      real_t tmp_126 = tmp_120*tmp_47;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_10*tmp_119*tmp_33 + tmp_119*tmp_3*tmp_43 + tmp_119*tmp_47*tmp_6) + 0.5*p_affine_13_1*(tmp_1*tmp_124 + tmp_121*tmp_26 + tmp_122*tmp_42 + tmp_123*tmp_46 + tmp_125*tmp_7 + tmp_126*tmp_4) + 0.5*p_affine_13_2*(tmp_12*tmp_126 + tmp_121*tmp_9 + tmp_122*tmp_41 + tmp_123*tmp_45 + tmp_124*tmp_14 + tmp_125*tmp_15);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_22 + 0.60796128279561268*tmp_23;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_20);
      real_t tmp_132 = 0.19601935860219369*tmp_29 + 0.60796128279561268*tmp_30;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_27);
      real_t tmp_134 = 0.19601935860219369*tmp_36 + 0.60796128279561268*tmp_37;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_34);
      real_t tmp_136 = tmp_131*tmp_9 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_7 + tmp_138*tmp_4;
      real_t tmp_140 = tmp_12*tmp_138 + tmp_136*tmp_14 + tmp_137*tmp_15;
      real_t tmp_141 = tmp_10*tmp_136 + tmp_137*tmp_3 + tmp_138*tmp_6;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_80;
      real_t tmp_144 = tmp_142*tmp_82;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_56;
      real_t tmp_147 = tmp_145*tmp_72;
      real_t tmp_148 = tmp_142*tmp_84;
      real_t tmp_149 = tmp_145*tmp_74;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_89;
      real_t tmp_152 = tmp_150*tmp_92;
      real_t tmp_153 = tmp_150*tmp_94;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_20);
      real_t tmp_159 = 0.37605877282253791*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_27);
      real_t tmp_161 = 0.37605877282253791*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_34);
      real_t tmp_163 = tmp_158*tmp_9 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_7 + tmp_165*tmp_4;
      real_t tmp_167 = tmp_12*tmp_165 + tmp_14*tmp_163 + tmp_15*tmp_164;
      real_t tmp_168 = tmp_10*tmp_163 + tmp_164*tmp_3 + tmp_165*tmp_6;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_80;
      real_t tmp_171 = tmp_169*tmp_82;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_56;
      real_t tmp_174 = tmp_172*tmp_72;
      real_t tmp_175 = tmp_169*tmp_84;
      real_t tmp_176 = tmp_172*tmp_74;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_89;
      real_t tmp_179 = tmp_177*tmp_92;
      real_t tmp_180 = tmp_177*tmp_94;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_20);
      real_t tmp_186 = 0.041227165399737475*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_27);
      real_t tmp_188 = 0.041227165399737475*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_34);
      real_t tmp_190 = tmp_185*tmp_9 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_7 + tmp_192*tmp_4;
      real_t tmp_194 = tmp_12*tmp_192 + tmp_14*tmp_190 + tmp_15*tmp_191;
      real_t tmp_195 = tmp_10*tmp_190 + tmp_191*tmp_3 + tmp_192*tmp_6;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_80;
      real_t tmp_198 = tmp_196*tmp_82;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_56;
      real_t tmp_201 = tmp_199*tmp_72;
      real_t tmp_202 = tmp_196*tmp_84;
      real_t tmp_203 = tmp_199*tmp_74;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_89;
      real_t tmp_206 = tmp_204*tmp_92;
      real_t tmp_207 = tmp_204*tmp_94;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_22 + 0.19107600050469298*tmp_23;
      real_t tmp_212 = tmp_19*(tmp_20 + tmp_211);
      real_t tmp_213 = 0.40446199974765351*tmp_29 + 0.19107600050469298*tmp_30;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_27);
      real_t tmp_215 = 0.40446199974765351*tmp_36 + 0.19107600050469298*tmp_37;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_34);
      real_t tmp_217 = tmp_212*tmp_9 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_218*tmp_7 + tmp_219*tmp_4;
      real_t tmp_221 = tmp_12*tmp_219 + tmp_14*tmp_217 + tmp_15*tmp_218;
      real_t tmp_222 = tmp_10*tmp_217 + tmp_218*tmp_3 + tmp_219*tmp_6;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_80;
      real_t tmp_225 = tmp_223*tmp_82;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_56;
      real_t tmp_228 = tmp_226*tmp_72;
      real_t tmp_229 = tmp_223*tmp_84;
      real_t tmp_230 = tmp_226*tmp_74;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_89;
      real_t tmp_233 = tmp_231*tmp_92;
      real_t tmp_234 = tmp_231*tmp_94;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_239 = tmp_19*(tmp_20 + tmp_238);
      real_t tmp_240 = 0.039308471900058539*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_27);
      real_t tmp_242 = 0.039308471900058539*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_34);
      real_t tmp_244 = tmp_239*tmp_9 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_245*tmp_7 + tmp_246*tmp_4;
      real_t tmp_248 = tmp_12*tmp_246 + tmp_14*tmp_244 + tmp_15*tmp_245;
      real_t tmp_249 = tmp_10*tmp_244 + tmp_245*tmp_3 + tmp_246*tmp_6;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_80;
      real_t tmp_252 = tmp_250*tmp_82;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_56;
      real_t tmp_255 = tmp_253*tmp_72;
      real_t tmp_256 = tmp_250*tmp_84;
      real_t tmp_257 = tmp_253*tmp_74;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_89;
      real_t tmp_260 = tmp_258*tmp_92;
      real_t tmp_261 = tmp_258*tmp_94;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_266 = tmp_19*(tmp_20 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_27);
      real_t tmp_269 = 0.93718850182767688*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_34);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_9 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_272*tmp_7 + tmp_273*tmp_4;
      real_t tmp_275 = tmp_12*tmp_273 + tmp_14*tmp_271 + tmp_15*tmp_272;
      real_t tmp_276 = tmp_10*tmp_271 + tmp_272*tmp_3 + tmp_273*tmp_6;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_80;
      real_t tmp_279 = tmp_277*tmp_82;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_56;
      real_t tmp_282 = tmp_280*tmp_72;
      real_t tmp_283 = tmp_277*tmp_84;
      real_t tmp_284 = tmp_280*tmp_74;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_89;
      real_t tmp_287 = tmp_285*tmp_92;
      real_t tmp_288 = tmp_285*tmp_94;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_293 = tmp_19*(tmp_20 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_295 = tmp_19*(tmp_27 + tmp_294);
      real_t tmp_296 = 0.60796128279561268*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_34);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_9 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_299*tmp_7 + tmp_300*tmp_4;
      real_t tmp_302 = tmp_12*tmp_300 + tmp_14*tmp_298 + tmp_15*tmp_299;
      real_t tmp_303 = tmp_10*tmp_298 + tmp_299*tmp_3 + tmp_300*tmp_6;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_80;
      real_t tmp_306 = tmp_304*tmp_82;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_56;
      real_t tmp_309 = tmp_307*tmp_72;
      real_t tmp_310 = tmp_304*tmp_84;
      real_t tmp_311 = tmp_307*tmp_74;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_89;
      real_t tmp_314 = tmp_312*tmp_92;
      real_t tmp_315 = tmp_312*tmp_94;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_320 = tmp_19*(tmp_20 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_322 = tmp_19*(tmp_27 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_34);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_9 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_326*tmp_7 + tmp_327*tmp_4;
      real_t tmp_329 = tmp_12*tmp_327 + tmp_14*tmp_325 + tmp_15*tmp_326;
      real_t tmp_330 = tmp_10*tmp_325 + tmp_3*tmp_326 + tmp_327*tmp_6;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_80;
      real_t tmp_333 = tmp_331*tmp_82;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_56;
      real_t tmp_336 = tmp_334*tmp_72;
      real_t tmp_337 = tmp_331*tmp_84;
      real_t tmp_338 = tmp_334*tmp_74;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_89;
      real_t tmp_341 = tmp_339*tmp_92;
      real_t tmp_342 = tmp_339*tmp_94;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_347 = tmp_19*(tmp_20 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_349 = tmp_19*(tmp_27 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_351 = tmp_19*(tmp_34 + tmp_350);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_9 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_353*tmp_7 + tmp_354*tmp_4;
      real_t tmp_356 = tmp_12*tmp_354 + tmp_14*tmp_352 + tmp_15*tmp_353;
      real_t tmp_357 = tmp_10*tmp_352 + tmp_3*tmp_353 + tmp_354*tmp_6;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_80;
      real_t tmp_360 = tmp_358*tmp_82;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_56;
      real_t tmp_363 = tmp_361*tmp_72;
      real_t tmp_364 = tmp_358*tmp_84;
      real_t tmp_365 = tmp_361*tmp_74;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_89;
      real_t tmp_368 = tmp_366*tmp_92;
      real_t tmp_369 = tmp_366*tmp_94;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_374 = tmp_19*(tmp_20 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_376 = tmp_19*(tmp_27 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_378 = tmp_19*(tmp_34 + tmp_377);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_9 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_380*tmp_7 + tmp_381*tmp_4;
      real_t tmp_383 = tmp_12*tmp_381 + tmp_14*tmp_379 + tmp_15*tmp_380;
      real_t tmp_384 = tmp_10*tmp_379 + tmp_3*tmp_380 + tmp_381*tmp_6;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_80;
      real_t tmp_387 = tmp_385*tmp_82;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_56;
      real_t tmp_390 = tmp_388*tmp_72;
      real_t tmp_391 = tmp_385*tmp_84;
      real_t tmp_392 = tmp_388*tmp_74;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_89;
      real_t tmp_395 = tmp_393*tmp_92;
      real_t tmp_396 = tmp_393*tmp_94;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_401 = tmp_19*(tmp_20 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_403 = tmp_19*(tmp_27 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_405 = tmp_19*(tmp_34 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_9 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_7;
      real_t tmp_410 = tmp_12*tmp_408 + tmp_14*tmp_406 + tmp_15*tmp_407;
      real_t tmp_411 = tmp_10*tmp_406 + tmp_3*tmp_407 + tmp_408*tmp_6;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_80;
      real_t tmp_414 = tmp_412*tmp_82;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_56;
      real_t tmp_417 = tmp_415*tmp_72;
      real_t tmp_418 = tmp_412*tmp_84;
      real_t tmp_419 = tmp_415*tmp_74;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_89;
      real_t tmp_422 = tmp_420*tmp_92;
      real_t tmp_423 = tmp_420*tmp_94;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_428 = tmp_19*(tmp_20 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_430 = tmp_19*(tmp_27 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_432 = tmp_19*(tmp_34 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_9 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_7;
      real_t tmp_437 = tmp_12*tmp_435 + tmp_14*tmp_433 + tmp_15*tmp_434;
      real_t tmp_438 = tmp_10*tmp_433 + tmp_3*tmp_434 + tmp_435*tmp_6;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_80;
      real_t tmp_441 = tmp_439*tmp_82;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_56;
      real_t tmp_444 = tmp_442*tmp_72;
      real_t tmp_445 = tmp_439*tmp_84;
      real_t tmp_446 = tmp_442*tmp_74;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_89;
      real_t tmp_449 = tmp_447*tmp_92;
      real_t tmp_450 = tmp_447*tmp_94;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_455 = tmp_19*(tmp_20 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_457 = tmp_19*(tmp_27 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_459 = tmp_19*(tmp_34 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_9 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_7;
      real_t tmp_464 = tmp_12*tmp_462 + tmp_14*tmp_460 + tmp_15*tmp_461;
      real_t tmp_465 = tmp_10*tmp_460 + tmp_3*tmp_461 + tmp_462*tmp_6;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_80;
      real_t tmp_468 = tmp_466*tmp_82;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_56;
      real_t tmp_471 = tmp_469*tmp_72;
      real_t tmp_472 = tmp_466*tmp_84;
      real_t tmp_473 = tmp_469*tmp_74;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_89;
      real_t tmp_476 = tmp_474*tmp_92;
      real_t tmp_477 = tmp_474*tmp_94;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_482 = tmp_19*(tmp_20 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_484 = tmp_19*(tmp_27 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_486 = tmp_19*(tmp_34 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_9 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_7;
      real_t tmp_491 = tmp_12*tmp_489 + tmp_14*tmp_487 + tmp_15*tmp_488;
      real_t tmp_492 = tmp_10*tmp_487 + tmp_3*tmp_488 + tmp_489*tmp_6;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_80;
      real_t tmp_495 = tmp_493*tmp_82;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_56;
      real_t tmp_498 = tmp_496*tmp_72;
      real_t tmp_499 = tmp_493*tmp_84;
      real_t tmp_500 = tmp_496*tmp_74;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_89;
      real_t tmp_503 = tmp_501*tmp_92;
      real_t tmp_504 = tmp_501*tmp_94;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_509 = tmp_19*(tmp_20 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_511 = tmp_19*(tmp_27 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_513 = tmp_19*(tmp_34 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_9 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_7;
      real_t tmp_518 = tmp_12*tmp_516 + tmp_14*tmp_514 + tmp_15*tmp_515;
      real_t tmp_519 = tmp_10*tmp_514 + tmp_3*tmp_515 + tmp_516*tmp_6;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_80;
      real_t tmp_522 = tmp_520*tmp_82;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_56;
      real_t tmp_525 = tmp_523*tmp_72;
      real_t tmp_526 = tmp_520*tmp_84;
      real_t tmp_527 = tmp_523*tmp_74;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_89;
      real_t tmp_530 = tmp_528*tmp_92;
      real_t tmp_531 = tmp_528*tmp_94;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_536 = tmp_19*(tmp_20 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_538 = tmp_19*(tmp_27 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_540 = tmp_19*(tmp_34 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_9 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_7;
      real_t tmp_545 = tmp_12*tmp_543 + tmp_14*tmp_541 + tmp_15*tmp_542;
      real_t tmp_546 = tmp_10*tmp_541 + tmp_3*tmp_542 + tmp_543*tmp_6;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_80;
      real_t tmp_549 = tmp_547*tmp_82;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_56;
      real_t tmp_552 = tmp_550*tmp_72;
      real_t tmp_553 = tmp_547*tmp_84;
      real_t tmp_554 = tmp_550*tmp_74;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_89;
      real_t tmp_557 = tmp_555*tmp_92;
      real_t tmp_558 = tmp_555*tmp_94;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_563 = tmp_19*(tmp_20 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_565 = tmp_19*(tmp_27 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_567 = tmp_19*(tmp_34 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_9 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_7;
      real_t tmp_572 = tmp_12*tmp_570 + tmp_14*tmp_568 + tmp_15*tmp_569;
      real_t tmp_573 = tmp_10*tmp_568 + tmp_3*tmp_569 + tmp_570*tmp_6;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_80;
      real_t tmp_576 = tmp_574*tmp_82;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_56*tmp_577;
      real_t tmp_579 = tmp_577*tmp_72;
      real_t tmp_580 = tmp_574*tmp_84;
      real_t tmp_581 = tmp_577*tmp_74;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_582*tmp_89;
      real_t tmp_584 = tmp_582*tmp_92;
      real_t tmp_585 = tmp_582*tmp_94;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_590 = tmp_19*(tmp_20 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_592 = tmp_19*(tmp_27 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_594 = tmp_19*(tmp_34 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_9 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_7;
      real_t tmp_599 = tmp_12*tmp_597 + tmp_14*tmp_595 + tmp_15*tmp_596;
      real_t tmp_600 = tmp_10*tmp_595 + tmp_3*tmp_596 + tmp_597*tmp_6;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_80;
      real_t tmp_603 = tmp_601*tmp_82;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_56*tmp_604;
      real_t tmp_606 = tmp_604*tmp_72;
      real_t tmp_607 = tmp_601*tmp_84;
      real_t tmp_608 = tmp_604*tmp_74;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_609*tmp_89;
      real_t tmp_611 = tmp_609*tmp_92;
      real_t tmp_612 = tmp_609*tmp_94;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_617 = tmp_19*(tmp_20 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_619 = tmp_19*(tmp_27 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_621 = tmp_19*(tmp_34 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_9 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_4*tmp_624 + tmp_623*tmp_7;
      real_t tmp_626 = tmp_12*tmp_624 + tmp_14*tmp_622 + tmp_15*tmp_623;
      real_t tmp_627 = tmp_10*tmp_622 + tmp_3*tmp_623 + tmp_6*tmp_624;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_80;
      real_t tmp_630 = tmp_628*tmp_82;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_56*tmp_631;
      real_t tmp_633 = tmp_631*tmp_72;
      real_t tmp_634 = tmp_628*tmp_84;
      real_t tmp_635 = tmp_631*tmp_74;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_636*tmp_89;
      real_t tmp_638 = tmp_636*tmp_92;
      real_t tmp_639 = tmp_636*tmp_94;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_644 = tmp_19*(tmp_20 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_646 = tmp_19*(tmp_27 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_648 = tmp_19*(tmp_34 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_9 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_4*tmp_651 + tmp_650*tmp_7;
      real_t tmp_653 = tmp_12*tmp_651 + tmp_14*tmp_649 + tmp_15*tmp_650;
      real_t tmp_654 = tmp_10*tmp_649 + tmp_3*tmp_650 + tmp_6*tmp_651;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_80;
      real_t tmp_657 = tmp_655*tmp_82;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_56*tmp_658;
      real_t tmp_660 = tmp_658*tmp_72;
      real_t tmp_661 = tmp_655*tmp_84;
      real_t tmp_662 = tmp_658*tmp_74;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_663*tmp_89;
      real_t tmp_665 = tmp_663*tmp_92;
      real_t tmp_666 = tmp_663*tmp_94;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_0*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_95 + 0.5*p_affine_13_1*tmp_75 + 0.5*p_affine_13_2*tmp_85;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_93 + 0.5*p_affine_13_1*tmp_73 + 0.5*p_affine_13_2*tmp_83;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_56*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_91 + 0.5*p_affine_13_1*tmp_71 + 0.5*p_affine_13_2*tmp_81;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 - tmp_112*tmp_127 + tmp_49*tmp_78 + tmp_79*tmp_87 + tmp_88*tmp_96) + tmp_156*(-tmp_127*tmp_154 + tmp_139*tmp_78 + tmp_140*tmp_87 + tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(-tmp_127*tmp_181 + tmp_166*tmp_78 + tmp_167*tmp_87 + tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(-tmp_127*tmp_208 + tmp_193*tmp_78 + tmp_194*tmp_87 + tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(-tmp_127*tmp_235 + tmp_220*tmp_78 + tmp_221*tmp_87 + tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(-tmp_127*tmp_262 + tmp_247*tmp_78 + tmp_248*tmp_87 + tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(-tmp_127*tmp_289 + tmp_274*tmp_78 + tmp_275*tmp_87 + tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(-tmp_127*tmp_316 + tmp_301*tmp_78 + tmp_302*tmp_87 + tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(-tmp_127*tmp_343 + tmp_328*tmp_78 + tmp_329*tmp_87 + tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(-tmp_127*tmp_370 + tmp_355*tmp_78 + tmp_356*tmp_87 + tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(-tmp_127*tmp_397 + tmp_382*tmp_78 + tmp_383*tmp_87 + tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(-tmp_127*tmp_424 + tmp_409*tmp_78 + tmp_410*tmp_87 + tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(-tmp_127*tmp_451 + tmp_436*tmp_78 + tmp_437*tmp_87 + tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(-tmp_127*tmp_478 + tmp_463*tmp_78 + tmp_464*tmp_87 + tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(-tmp_127*tmp_505 + tmp_490*tmp_78 + tmp_491*tmp_87 + tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(-tmp_127*tmp_532 + tmp_517*tmp_78 + tmp_518*tmp_87 + tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(-tmp_127*tmp_559 + tmp_544*tmp_78 + tmp_545*tmp_87 + tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(-tmp_127*tmp_586 + tmp_571*tmp_78 + tmp_572*tmp_87 + tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(-tmp_127*tmp_613 + tmp_598*tmp_78 + tmp_599*tmp_87 + tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(-tmp_127*tmp_640 + tmp_625*tmp_78 + tmp_626*tmp_87 + tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(-tmp_127*tmp_667 + tmp_652*tmp_78 + tmp_653*tmp_87 + tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_1_0 = tmp_129*(-tmp_118*tmp_674 - tmp_127*tmp_674 + tmp_49*tmp_672 + tmp_671*tmp_79 + tmp_673*tmp_88) + tmp_156*(-tmp_127*tmp_675 + tmp_139*tmp_672 + tmp_140*tmp_671 + tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(-tmp_127*tmp_676 + tmp_166*tmp_672 + tmp_167*tmp_671 + tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(-tmp_127*tmp_677 + tmp_193*tmp_672 + tmp_194*tmp_671 + tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(-tmp_127*tmp_678 + tmp_220*tmp_672 + tmp_221*tmp_671 + tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(-tmp_127*tmp_679 + tmp_247*tmp_672 + tmp_248*tmp_671 + tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(-tmp_127*tmp_680 + tmp_274*tmp_672 + tmp_275*tmp_671 + tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(-tmp_127*tmp_681 + tmp_301*tmp_672 + tmp_302*tmp_671 + tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(-tmp_127*tmp_682 + tmp_328*tmp_672 + tmp_329*tmp_671 + tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(-tmp_127*tmp_683 + tmp_355*tmp_672 + tmp_356*tmp_671 + tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(-tmp_127*tmp_684 + tmp_382*tmp_672 + tmp_383*tmp_671 + tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(-tmp_127*tmp_685 + tmp_409*tmp_672 + tmp_410*tmp_671 + tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(-tmp_127*tmp_686 + tmp_436*tmp_672 + tmp_437*tmp_671 + tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(-tmp_127*tmp_687 + tmp_463*tmp_672 + tmp_464*tmp_671 + tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(-tmp_127*tmp_688 + tmp_490*tmp_672 + tmp_491*tmp_671 + tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(-tmp_127*tmp_689 + tmp_517*tmp_672 + tmp_518*tmp_671 + tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(-tmp_127*tmp_690 + tmp_544*tmp_672 + tmp_545*tmp_671 + tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(-tmp_127*tmp_691 + tmp_571*tmp_672 + tmp_572*tmp_671 + tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(-tmp_127*tmp_692 + tmp_598*tmp_672 + tmp_599*tmp_671 + tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(-tmp_127*tmp_693 + tmp_625*tmp_672 + tmp_626*tmp_671 + tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(-tmp_127*tmp_694 + tmp_652*tmp_672 + tmp_653*tmp_671 + tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_2_0 = tmp_129*(-tmp_118*tmp_698 - tmp_127*tmp_698 + tmp_49*tmp_696 + tmp_695*tmp_79 + tmp_697*tmp_88) + tmp_156*(-tmp_127*tmp_699 + tmp_139*tmp_696 + tmp_140*tmp_695 + tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(-tmp_127*tmp_700 + tmp_166*tmp_696 + tmp_167*tmp_695 + tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(-tmp_127*tmp_701 + tmp_193*tmp_696 + tmp_194*tmp_695 + tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(-tmp_127*tmp_702 + tmp_220*tmp_696 + tmp_221*tmp_695 + tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(-tmp_127*tmp_703 + tmp_247*tmp_696 + tmp_248*tmp_695 + tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(-tmp_127*tmp_704 + tmp_274*tmp_696 + tmp_275*tmp_695 + tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(-tmp_127*tmp_705 + tmp_301*tmp_696 + tmp_302*tmp_695 + tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(-tmp_127*tmp_706 + tmp_328*tmp_696 + tmp_329*tmp_695 + tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(-tmp_127*tmp_707 + tmp_355*tmp_696 + tmp_356*tmp_695 + tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(-tmp_127*tmp_708 + tmp_382*tmp_696 + tmp_383*tmp_695 + tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(-tmp_127*tmp_709 + tmp_409*tmp_696 + tmp_410*tmp_695 + tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(-tmp_127*tmp_710 + tmp_436*tmp_696 + tmp_437*tmp_695 + tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(-tmp_127*tmp_711 + tmp_463*tmp_696 + tmp_464*tmp_695 + tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(-tmp_127*tmp_712 + tmp_490*tmp_696 + tmp_491*tmp_695 + tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(-tmp_127*tmp_713 + tmp_517*tmp_696 + tmp_518*tmp_695 + tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(-tmp_127*tmp_714 + tmp_544*tmp_696 + tmp_545*tmp_695 + tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(-tmp_127*tmp_715 + tmp_571*tmp_696 + tmp_572*tmp_695 + tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(-tmp_127*tmp_716 + tmp_598*tmp_696 + tmp_599*tmp_695 + tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(-tmp_127*tmp_717 + tmp_625*tmp_696 + tmp_626*tmp_695 + tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(-tmp_127*tmp_718 + tmp_652*tmp_696 + tmp_653*tmp_695 + tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_3_0 = tmp_129*(-tmp_118*tmp_722 - tmp_127*tmp_722 + tmp_49*tmp_720 + tmp_719*tmp_79 + tmp_721*tmp_88) + tmp_156*(-tmp_127*tmp_723 + tmp_139*tmp_720 + tmp_140*tmp_719 + tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(-tmp_127*tmp_724 + tmp_166*tmp_720 + tmp_167*tmp_719 + tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(-tmp_127*tmp_725 + tmp_193*tmp_720 + tmp_194*tmp_719 + tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(-tmp_127*tmp_726 + tmp_220*tmp_720 + tmp_221*tmp_719 + tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(-tmp_127*tmp_727 + tmp_247*tmp_720 + tmp_248*tmp_719 + tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(-tmp_127*tmp_728 + tmp_274*tmp_720 + tmp_275*tmp_719 + tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(-tmp_127*tmp_729 + tmp_301*tmp_720 + tmp_302*tmp_719 + tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(-tmp_127*tmp_730 + tmp_328*tmp_720 + tmp_329*tmp_719 + tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(-tmp_127*tmp_731 + tmp_355*tmp_720 + tmp_356*tmp_719 + tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(-tmp_127*tmp_732 + tmp_382*tmp_720 + tmp_383*tmp_719 + tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(-tmp_127*tmp_733 + tmp_409*tmp_720 + tmp_410*tmp_719 + tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(-tmp_127*tmp_734 + tmp_436*tmp_720 + tmp_437*tmp_719 + tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(-tmp_127*tmp_735 + tmp_463*tmp_720 + tmp_464*tmp_719 + tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(-tmp_127*tmp_736 + tmp_490*tmp_720 + tmp_491*tmp_719 + tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(-tmp_127*tmp_737 + tmp_517*tmp_720 + tmp_518*tmp_719 + tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(-tmp_127*tmp_738 + tmp_544*tmp_720 + tmp_545*tmp_719 + tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(-tmp_127*tmp_739 + tmp_571*tmp_720 + tmp_572*tmp_719 + tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(-tmp_127*tmp_740 + tmp_598*tmp_720 + tmp_599*tmp_719 + tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(-tmp_127*tmp_741 + tmp_625*tmp_720 + tmp_626*tmp_719 + tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(-tmp_127*tmp_742 + tmp_652*tmp_720 + tmp_653*tmp_719 + tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_7;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_13*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_15*tmp_5 - tmp_17*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_7;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_11 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_10*tmp_4;
      real_t tmp_29 = -p_affine_8_1;
      real_t tmp_30 = p_affine_9_1 + tmp_29;
      real_t tmp_31 = p_affine_10_1 + tmp_29;
      real_t tmp_32 = p_affine_8_1 + tmp_2;
      real_t tmp_33 = tmp_19*(0.031405749086161582*tmp_30 + 0.93718850182767688*tmp_31 + tmp_32);
      real_t tmp_34 = tmp_28*tmp_33;
      real_t tmp_35 = tmp_1*tmp_8 - tmp_10*tmp_13;
      real_t tmp_36 = tmp_33*tmp_35;
      real_t tmp_37 = tmp_12 - tmp_18;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_15 - tmp_17;
      real_t tmp_40 = tmp_33*tmp_39;
      real_t tmp_41 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_42 = -p_affine_8_0;
      real_t tmp_43 = p_affine_9_0 + tmp_42;
      real_t tmp_44 = p_affine_10_0 + tmp_42;
      real_t tmp_45 = p_affine_8_0 + tmp_0;
      real_t tmp_46 = tmp_19*(0.031405749086161582*tmp_43 + 0.93718850182767688*tmp_44 + tmp_45);
      real_t tmp_47 = tmp_41*tmp_46;
      real_t tmp_48 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_49 = tmp_46*tmp_48;
      real_t tmp_50 = -tmp_16 + tmp_9;
      real_t tmp_51 = tmp_46*tmp_50;
      real_t tmp_52 = tmp_38 + tmp_40 + tmp_51;
      real_t tmp_53 = tmp_27 + tmp_36 + tmp_49;
      real_t tmp_54 = tmp_25 + tmp_34 + tmp_47;
      real_t tmp_55 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_56 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_57 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_58 = 6.0*std::pow((std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)*std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)) + (std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)*std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)) + (std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)*std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)), 0.25);
      real_t tmp_59 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58*(tmp_1*(tmp_52 - 1.0/4.0) + tmp_13*(tmp_54 - 1.0/4.0) + tmp_4*(tmp_53 - 1.0/4.0));
      real_t tmp_60 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_19*(0.19601935860219369*tmp_30 + 0.60796128279561268*tmp_31 + tmp_32);
      real_t tmp_64 = tmp_28*tmp_63;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = tmp_37*tmp_60;
      real_t tmp_67 = tmp_39*tmp_63;
      real_t tmp_68 = tmp_19*(0.19601935860219369*tmp_43 + 0.60796128279561268*tmp_44 + tmp_45);
      real_t tmp_69 = tmp_41*tmp_68;
      real_t tmp_70 = tmp_48*tmp_68;
      real_t tmp_71 = tmp_50*tmp_68;
      real_t tmp_72 = tmp_66 + tmp_67 + tmp_71;
      real_t tmp_73 = tmp_62 + tmp_65 + tmp_70;
      real_t tmp_74 = tmp_61 + tmp_64 + tmp_69;
      real_t tmp_75 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58*(tmp_1*(tmp_72 - 1.0/4.0) + tmp_13*(tmp_74 - 1.0/4.0) + tmp_4*(tmp_73 - 1.0/4.0));
      real_t tmp_76 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_77 = tmp_6*tmp_76;
      real_t tmp_78 = tmp_26*tmp_76;
      real_t tmp_79 = tmp_19*(0.37605877282253791*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_80 = tmp_28*tmp_79;
      real_t tmp_81 = tmp_35*tmp_79;
      real_t tmp_82 = tmp_37*tmp_76;
      real_t tmp_83 = tmp_39*tmp_79;
      real_t tmp_84 = tmp_19*(0.37605877282253791*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_85 = tmp_41*tmp_84;
      real_t tmp_86 = tmp_48*tmp_84;
      real_t tmp_87 = tmp_50*tmp_84;
      real_t tmp_88 = tmp_82 + tmp_83 + tmp_87;
      real_t tmp_89 = tmp_78 + tmp_81 + tmp_86;
      real_t tmp_90 = tmp_77 + tmp_80 + tmp_85;
      real_t tmp_91 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_58*(tmp_1*(tmp_88 - 1.0/4.0) + tmp_13*(tmp_90 - 1.0/4.0) + tmp_4*(tmp_89 - 1.0/4.0));
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_93 = tmp_6*tmp_92;
      real_t tmp_94 = tmp_26*tmp_92;
      real_t tmp_95 = tmp_19*(0.041227165399737475*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_96 = tmp_28*tmp_95;
      real_t tmp_97 = tmp_35*tmp_95;
      real_t tmp_98 = tmp_37*tmp_92;
      real_t tmp_99 = tmp_39*tmp_95;
      real_t tmp_100 = tmp_19*(0.041227165399737475*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_101 = tmp_100*tmp_41;
      real_t tmp_102 = tmp_100*tmp_48;
      real_t tmp_103 = tmp_100*tmp_50;
      real_t tmp_104 = tmp_103 + tmp_98 + tmp_99;
      real_t tmp_105 = tmp_102 + tmp_94 + tmp_97;
      real_t tmp_106 = tmp_101 + tmp_93 + tmp_96;
      real_t tmp_107 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_58*(tmp_1*(tmp_104 - 1.0/4.0) + tmp_13*(tmp_106 - 1.0/4.0) + tmp_4*(tmp_105 - 1.0/4.0));
      real_t tmp_108 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_19*(0.40446199974765351*tmp_30 + 0.19107600050469298*tmp_31 + tmp_32);
      real_t tmp_112 = tmp_111*tmp_28;
      real_t tmp_113 = tmp_111*tmp_35;
      real_t tmp_114 = tmp_108*tmp_37;
      real_t tmp_115 = tmp_111*tmp_39;
      real_t tmp_116 = tmp_19*(0.40446199974765351*tmp_43 + 0.19107600050469298*tmp_44 + tmp_45);
      real_t tmp_117 = tmp_116*tmp_41;
      real_t tmp_118 = tmp_116*tmp_48;
      real_t tmp_119 = tmp_116*tmp_50;
      real_t tmp_120 = tmp_114 + tmp_115 + tmp_119;
      real_t tmp_121 = tmp_110 + tmp_113 + tmp_118;
      real_t tmp_122 = tmp_109 + tmp_112 + tmp_117;
      real_t tmp_123 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_58*(tmp_1*(tmp_120 - 1.0/4.0) + tmp_13*(tmp_122 - 1.0/4.0) + tmp_4*(tmp_121 - 1.0/4.0));
      real_t tmp_124 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_125 = tmp_124*tmp_6;
      real_t tmp_126 = tmp_124*tmp_26;
      real_t tmp_127 = tmp_19*(0.039308471900058539*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_128 = tmp_127*tmp_28;
      real_t tmp_129 = tmp_127*tmp_35;
      real_t tmp_130 = tmp_124*tmp_37;
      real_t tmp_131 = tmp_127*tmp_39;
      real_t tmp_132 = tmp_19*(0.039308471900058539*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_133 = tmp_132*tmp_41;
      real_t tmp_134 = tmp_132*tmp_48;
      real_t tmp_135 = tmp_132*tmp_50;
      real_t tmp_136 = tmp_130 + tmp_131 + tmp_135;
      real_t tmp_137 = tmp_126 + tmp_129 + tmp_134;
      real_t tmp_138 = tmp_125 + tmp_128 + tmp_133;
      real_t tmp_139 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_58*(tmp_1*(tmp_136 - 1.0/4.0) + tmp_13*(tmp_138 - 1.0/4.0) + tmp_4*(tmp_137 - 1.0/4.0));
      real_t tmp_140 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_140*tmp_26;
      real_t tmp_143 = tmp_19*(0.93718850182767688*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_144 = tmp_143*tmp_28;
      real_t tmp_145 = tmp_143*tmp_35;
      real_t tmp_146 = tmp_140*tmp_37;
      real_t tmp_147 = tmp_143*tmp_39;
      real_t tmp_148 = tmp_19*(0.93718850182767688*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_149 = tmp_148*tmp_41;
      real_t tmp_150 = tmp_148*tmp_48;
      real_t tmp_151 = tmp_148*tmp_50;
      real_t tmp_152 = tmp_146 + tmp_147 + tmp_151;
      real_t tmp_153 = tmp_142 + tmp_145 + tmp_150;
      real_t tmp_154 = tmp_141 + tmp_144 + tmp_149;
      real_t tmp_155 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_58*(tmp_1*(tmp_152 - 1.0/4.0) + tmp_13*(tmp_154 - 1.0/4.0) + tmp_4*(tmp_153 - 1.0/4.0));
      real_t tmp_156 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_156*tmp_26;
      real_t tmp_159 = tmp_19*(0.60796128279561268*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_160 = tmp_159*tmp_28;
      real_t tmp_161 = tmp_159*tmp_35;
      real_t tmp_162 = tmp_156*tmp_37;
      real_t tmp_163 = tmp_159*tmp_39;
      real_t tmp_164 = tmp_19*(0.60796128279561268*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_165 = tmp_164*tmp_41;
      real_t tmp_166 = tmp_164*tmp_48;
      real_t tmp_167 = tmp_164*tmp_50;
      real_t tmp_168 = tmp_162 + tmp_163 + tmp_167;
      real_t tmp_169 = tmp_158 + tmp_161 + tmp_166;
      real_t tmp_170 = tmp_157 + tmp_160 + tmp_165;
      real_t tmp_171 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_58*(tmp_1*(tmp_168 - 1.0/4.0) + tmp_13*(tmp_170 - 1.0/4.0) + tmp_4*(tmp_169 - 1.0/4.0));
      real_t tmp_172 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_172*tmp_26;
      real_t tmp_175 = tmp_19*(0.19107600050469298*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_176 = tmp_175*tmp_28;
      real_t tmp_177 = tmp_175*tmp_35;
      real_t tmp_178 = tmp_172*tmp_37;
      real_t tmp_179 = tmp_175*tmp_39;
      real_t tmp_180 = tmp_19*(0.19107600050469298*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_181 = tmp_180*tmp_41;
      real_t tmp_182 = tmp_180*tmp_48;
      real_t tmp_183 = tmp_180*tmp_50;
      real_t tmp_184 = tmp_178 + tmp_179 + tmp_183;
      real_t tmp_185 = tmp_174 + tmp_177 + tmp_182;
      real_t tmp_186 = tmp_173 + tmp_176 + tmp_181;
      real_t tmp_187 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_58*(tmp_1*(tmp_184 - 1.0/4.0) + tmp_13*(tmp_186 - 1.0/4.0) + tmp_4*(tmp_185 - 1.0/4.0));
      real_t tmp_188 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_188*tmp_26;
      real_t tmp_191 = tmp_19*(0.031405749086161582*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_192 = tmp_191*tmp_28;
      real_t tmp_193 = tmp_191*tmp_35;
      real_t tmp_194 = tmp_188*tmp_37;
      real_t tmp_195 = tmp_191*tmp_39;
      real_t tmp_196 = tmp_19*(0.031405749086161582*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_197 = tmp_196*tmp_41;
      real_t tmp_198 = tmp_196*tmp_48;
      real_t tmp_199 = tmp_196*tmp_50;
      real_t tmp_200 = tmp_194 + tmp_195 + tmp_199;
      real_t tmp_201 = tmp_190 + tmp_193 + tmp_198;
      real_t tmp_202 = tmp_189 + tmp_192 + tmp_197;
      real_t tmp_203 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_58*(tmp_1*(tmp_200 - 1.0/4.0) + tmp_13*(tmp_202 - 1.0/4.0) + tmp_4*(tmp_201 - 1.0/4.0));
      real_t tmp_204 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_205 = tmp_204*tmp_6;
      real_t tmp_206 = tmp_204*tmp_26;
      real_t tmp_207 = tmp_19*(0.19601935860219369*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_208 = tmp_207*tmp_28;
      real_t tmp_209 = tmp_207*tmp_35;
      real_t tmp_210 = tmp_204*tmp_37;
      real_t tmp_211 = tmp_207*tmp_39;
      real_t tmp_212 = tmp_19*(0.19601935860219369*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_213 = tmp_212*tmp_41;
      real_t tmp_214 = tmp_212*tmp_48;
      real_t tmp_215 = tmp_212*tmp_50;
      real_t tmp_216 = tmp_210 + tmp_211 + tmp_215;
      real_t tmp_217 = tmp_206 + tmp_209 + tmp_214;
      real_t tmp_218 = tmp_205 + tmp_208 + tmp_213;
      real_t tmp_219 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_58*(tmp_1*(tmp_216 - 1.0/4.0) + tmp_13*(tmp_218 - 1.0/4.0) + tmp_4*(tmp_217 - 1.0/4.0));
      real_t tmp_220 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = tmp_220*tmp_26;
      real_t tmp_223 = tmp_19*(0.40446199974765351*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_224 = tmp_223*tmp_28;
      real_t tmp_225 = tmp_223*tmp_35;
      real_t tmp_226 = tmp_220*tmp_37;
      real_t tmp_227 = tmp_223*tmp_39;
      real_t tmp_228 = tmp_19*(0.40446199974765351*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_229 = tmp_228*tmp_41;
      real_t tmp_230 = tmp_228*tmp_48;
      real_t tmp_231 = tmp_228*tmp_50;
      real_t tmp_232 = tmp_226 + tmp_227 + tmp_231;
      real_t tmp_233 = tmp_222 + tmp_225 + tmp_230;
      real_t tmp_234 = tmp_221 + tmp_224 + tmp_229;
      real_t tmp_235 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_58*(tmp_1*(tmp_232 - 1.0/4.0) + tmp_13*(tmp_234 - 1.0/4.0) + tmp_4*(tmp_233 - 1.0/4.0));
      real_t tmp_236 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_237 = tmp_236*tmp_6;
      real_t tmp_238 = tmp_236*tmp_26;
      real_t tmp_239 = tmp_19*(0.37605877282253791*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_240 = tmp_239*tmp_28;
      real_t tmp_241 = tmp_239*tmp_35;
      real_t tmp_242 = tmp_236*tmp_37;
      real_t tmp_243 = tmp_239*tmp_39;
      real_t tmp_244 = tmp_19*(0.37605877282253791*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_245 = tmp_244*tmp_41;
      real_t tmp_246 = tmp_244*tmp_48;
      real_t tmp_247 = tmp_244*tmp_50;
      real_t tmp_248 = tmp_242 + tmp_243 + tmp_247;
      real_t tmp_249 = tmp_238 + tmp_241 + tmp_246;
      real_t tmp_250 = tmp_237 + tmp_240 + tmp_245;
      real_t tmp_251 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58*(tmp_1*(tmp_248 - 1.0/4.0) + tmp_13*(tmp_250 - 1.0/4.0) + tmp_4*(tmp_249 - 1.0/4.0));
      real_t tmp_252 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_253 = tmp_252*tmp_6;
      real_t tmp_254 = tmp_252*tmp_26;
      real_t tmp_255 = tmp_19*(0.1711304259088916*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_256 = tmp_255*tmp_28;
      real_t tmp_257 = tmp_255*tmp_35;
      real_t tmp_258 = tmp_252*tmp_37;
      real_t tmp_259 = tmp_255*tmp_39;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_261 = tmp_260*tmp_41;
      real_t tmp_262 = tmp_260*tmp_48;
      real_t tmp_263 = tmp_260*tmp_50;
      real_t tmp_264 = tmp_258 + tmp_259 + tmp_263;
      real_t tmp_265 = tmp_254 + tmp_257 + tmp_262;
      real_t tmp_266 = tmp_253 + tmp_256 + tmp_261;
      real_t tmp_267 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_58*(tmp_1*(tmp_264 - 1.0/4.0) + tmp_13*(tmp_266 - 1.0/4.0) + tmp_4*(tmp_265 - 1.0/4.0));
      real_t tmp_268 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_269 = tmp_268*tmp_6;
      real_t tmp_270 = tmp_26*tmp_268;
      real_t tmp_271 = tmp_19*(0.78764240869137092*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_272 = tmp_271*tmp_28;
      real_t tmp_273 = tmp_271*tmp_35;
      real_t tmp_274 = tmp_268*tmp_37;
      real_t tmp_275 = tmp_271*tmp_39;
      real_t tmp_276 = tmp_19*(0.78764240869137092*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_277 = tmp_276*tmp_41;
      real_t tmp_278 = tmp_276*tmp_48;
      real_t tmp_279 = tmp_276*tmp_50;
      real_t tmp_280 = tmp_274 + tmp_275 + tmp_279;
      real_t tmp_281 = tmp_270 + tmp_273 + tmp_278;
      real_t tmp_282 = tmp_269 + tmp_272 + tmp_277;
      real_t tmp_283 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58*(tmp_1*(tmp_280 - 1.0/4.0) + tmp_13*(tmp_282 - 1.0/4.0) + tmp_4*(tmp_281 - 1.0/4.0));
      real_t tmp_284 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_285 = tmp_284*tmp_6;
      real_t tmp_286 = tmp_26*tmp_284;
      real_t tmp_287 = tmp_19*(0.58463275527740355*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_288 = tmp_28*tmp_287;
      real_t tmp_289 = tmp_287*tmp_35;
      real_t tmp_290 = tmp_284*tmp_37;
      real_t tmp_291 = tmp_287*tmp_39;
      real_t tmp_292 = tmp_19*(0.58463275527740355*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_293 = tmp_292*tmp_41;
      real_t tmp_294 = tmp_292*tmp_48;
      real_t tmp_295 = tmp_292*tmp_50;
      real_t tmp_296 = tmp_290 + tmp_291 + tmp_295;
      real_t tmp_297 = tmp_286 + tmp_289 + tmp_294;
      real_t tmp_298 = tmp_285 + tmp_288 + tmp_293;
      real_t tmp_299 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_58*(tmp_1*(tmp_296 - 1.0/4.0) + tmp_13*(tmp_298 - 1.0/4.0) + tmp_4*(tmp_297 - 1.0/4.0));
      real_t tmp_300 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_301 = tmp_300*tmp_6;
      real_t tmp_302 = tmp_26*tmp_300;
      real_t tmp_303 = tmp_19*(0.041227165399737475*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_304 = tmp_28*tmp_303;
      real_t tmp_305 = tmp_303*tmp_35;
      real_t tmp_306 = tmp_300*tmp_37;
      real_t tmp_307 = tmp_303*tmp_39;
      real_t tmp_308 = tmp_19*(0.041227165399737475*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_309 = tmp_308*tmp_41;
      real_t tmp_310 = tmp_308*tmp_48;
      real_t tmp_311 = tmp_308*tmp_50;
      real_t tmp_312 = tmp_306 + tmp_307 + tmp_311;
      real_t tmp_313 = tmp_302 + tmp_305 + tmp_310;
      real_t tmp_314 = tmp_301 + tmp_304 + tmp_309;
      real_t tmp_315 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_58*(tmp_1*(tmp_312 - 1.0/4.0) + tmp_13*(tmp_314 - 1.0/4.0) + tmp_4*(tmp_313 - 1.0/4.0));
      real_t tmp_316 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_317 = tmp_316*tmp_6;
      real_t tmp_318 = tmp_26*tmp_316;
      real_t tmp_319 = tmp_19*(0.039308471900058539*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_320 = tmp_28*tmp_319;
      real_t tmp_321 = tmp_319*tmp_35;
      real_t tmp_322 = tmp_316*tmp_37;
      real_t tmp_323 = tmp_319*tmp_39;
      real_t tmp_324 = tmp_19*(0.039308471900058539*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_325 = tmp_324*tmp_41;
      real_t tmp_326 = tmp_324*tmp_48;
      real_t tmp_327 = tmp_324*tmp_50;
      real_t tmp_328 = tmp_322 + tmp_323 + tmp_327;
      real_t tmp_329 = tmp_318 + tmp_321 + tmp_326;
      real_t tmp_330 = tmp_317 + tmp_320 + tmp_325;
      real_t tmp_331 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_58*(tmp_1*(tmp_328 - 1.0/4.0) + tmp_13*(tmp_330 - 1.0/4.0) + tmp_4*(tmp_329 - 1.0/4.0));
      real_t tmp_332 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_333 = tmp_332*tmp_6;
      real_t tmp_334 = tmp_26*tmp_332;
      real_t tmp_335 = tmp_19*(0.78764240869137092*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_336 = tmp_28*tmp_335;
      real_t tmp_337 = tmp_335*tmp_35;
      real_t tmp_338 = tmp_332*tmp_37;
      real_t tmp_339 = tmp_335*tmp_39;
      real_t tmp_340 = tmp_19*(0.78764240869137092*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_341 = tmp_340*tmp_41;
      real_t tmp_342 = tmp_340*tmp_48;
      real_t tmp_343 = tmp_340*tmp_50;
      real_t tmp_344 = tmp_338 + tmp_339 + tmp_343;
      real_t tmp_345 = tmp_334 + tmp_337 + tmp_342;
      real_t tmp_346 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_347 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_58*(tmp_1*(tmp_344 - 1.0/4.0) + tmp_13*(tmp_346 - 1.0/4.0) + tmp_4*(tmp_345 - 1.0/4.0));
      real_t tmp_348 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_349 = tmp_348*tmp_6;
      real_t tmp_350 = tmp_26*tmp_348;
      real_t tmp_351 = tmp_19*(0.58463275527740355*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_352 = tmp_28*tmp_351;
      real_t tmp_353 = tmp_35*tmp_351;
      real_t tmp_354 = tmp_348*tmp_37;
      real_t tmp_355 = tmp_351*tmp_39;
      real_t tmp_356 = tmp_19*(0.58463275527740355*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_357 = tmp_356*tmp_41;
      real_t tmp_358 = tmp_356*tmp_48;
      real_t tmp_359 = tmp_356*tmp_50;
      real_t tmp_360 = tmp_354 + tmp_355 + tmp_359;
      real_t tmp_361 = tmp_350 + tmp_353 + tmp_358;
      real_t tmp_362 = tmp_349 + tmp_352 + tmp_357;
      real_t tmp_363 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_58*(tmp_1*(tmp_360 - 1.0/4.0) + tmp_13*(tmp_362 - 1.0/4.0) + tmp_4*(tmp_361 - 1.0/4.0));
      real_t tmp_364 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_365 = tmp_364*tmp_6;
      real_t tmp_366 = tmp_26*tmp_364;
      real_t tmp_367 = tmp_19*(0.1711304259088916*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_368 = tmp_28*tmp_367;
      real_t tmp_369 = tmp_35*tmp_367;
      real_t tmp_370 = tmp_364*tmp_37;
      real_t tmp_371 = tmp_367*tmp_39;
      real_t tmp_372 = tmp_19*(0.1711304259088916*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_373 = tmp_372*tmp_41;
      real_t tmp_374 = tmp_372*tmp_48;
      real_t tmp_375 = tmp_372*tmp_50;
      real_t tmp_376 = tmp_370 + tmp_371 + tmp_375;
      real_t tmp_377 = tmp_366 + tmp_369 + tmp_374;
      real_t tmp_378 = tmp_365 + tmp_368 + tmp_373;
      real_t tmp_379 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_58*(tmp_1*(tmp_376 - 1.0/4.0) + tmp_13*(tmp_378 - 1.0/4.0) + tmp_4*(tmp_377 - 1.0/4.0));
      real_t a_0_0 = tmp_107*(-tmp_101 - tmp_102 - tmp_103 - tmp_93 - tmp_94 - tmp_96 - tmp_97 - tmp_98 - tmp_99 + 1) + tmp_123*(-tmp_109 - tmp_110 - tmp_112 - tmp_113 - tmp_114 - tmp_115 - tmp_117 - tmp_118 - tmp_119 + 1) + tmp_139*(-tmp_125 - tmp_126 - tmp_128 - tmp_129 - tmp_130 - tmp_131 - tmp_133 - tmp_134 - tmp_135 + 1) + tmp_155*(-tmp_141 - tmp_142 - tmp_144 - tmp_145 - tmp_146 - tmp_147 - tmp_149 - tmp_150 - tmp_151 + 1) + tmp_171*(-tmp_157 - tmp_158 - tmp_160 - tmp_161 - tmp_162 - tmp_163 - tmp_165 - tmp_166 - tmp_167 + 1) + tmp_187*(-tmp_173 - tmp_174 - tmp_176 - tmp_177 - tmp_178 - tmp_179 - tmp_181 - tmp_182 - tmp_183 + 1) + tmp_203*(-tmp_189 - tmp_190 - tmp_192 - tmp_193 - tmp_194 - tmp_195 - tmp_197 - tmp_198 - tmp_199 + 1) + tmp_219*(-tmp_205 - tmp_206 - tmp_208 - tmp_209 - tmp_210 - tmp_211 - tmp_213 - tmp_214 - tmp_215 + 1) + tmp_235*(-tmp_221 - tmp_222 - tmp_224 - tmp_225 - tmp_226 - tmp_227 - tmp_229 - tmp_230 - tmp_231 + 1) + tmp_251*(-tmp_237 - tmp_238 - tmp_240 - tmp_241 - tmp_242 - tmp_243 - tmp_245 - tmp_246 - tmp_247 + 1) + tmp_267*(-tmp_253 - tmp_254 - tmp_256 - tmp_257 - tmp_258 - tmp_259 - tmp_261 - tmp_262 - tmp_263 + 1) + tmp_283*(-tmp_269 - tmp_270 - tmp_272 - tmp_273 - tmp_274 - tmp_275 - tmp_277 - tmp_278 - tmp_279 + 1) + tmp_299*(-tmp_285 - tmp_286 - tmp_288 - tmp_289 - tmp_290 - tmp_291 - tmp_293 - tmp_294 - tmp_295 + 1) + tmp_315*(-tmp_301 - tmp_302 - tmp_304 - tmp_305 - tmp_306 - tmp_307 - tmp_309 - tmp_310 - tmp_311 + 1) + tmp_331*(-tmp_317 - tmp_318 - tmp_320 - tmp_321 - tmp_322 - tmp_323 - tmp_325 - tmp_326 - tmp_327 + 1) + tmp_347*(-tmp_333 - tmp_334 - tmp_336 - tmp_337 - tmp_338 - tmp_339 - tmp_341 - tmp_342 - tmp_343 + 1) + tmp_363*(-tmp_349 - tmp_350 - tmp_352 - tmp_353 - tmp_354 - tmp_355 - tmp_357 - tmp_358 - tmp_359 + 1) + tmp_379*(-tmp_365 - tmp_366 - tmp_368 - tmp_369 - tmp_370 - tmp_371 - tmp_373 - tmp_374 - tmp_375 + 1) + tmp_59*(-tmp_25 - tmp_27 - tmp_34 - tmp_36 - tmp_38 - tmp_40 - tmp_47 - tmp_49 - tmp_51 + 1) + tmp_75*(-tmp_61 - tmp_62 - tmp_64 - tmp_65 - tmp_66 - tmp_67 - tmp_69 - tmp_70 - tmp_71 + 1) + tmp_91*(-tmp_77 - tmp_78 - tmp_80 - tmp_81 - tmp_82 - tmp_83 - tmp_85 - tmp_86 - tmp_87 + 1);
      real_t a_1_0 = tmp_104*tmp_107 + tmp_120*tmp_123 + tmp_136*tmp_139 + tmp_152*tmp_155 + tmp_168*tmp_171 + tmp_184*tmp_187 + tmp_200*tmp_203 + tmp_216*tmp_219 + tmp_232*tmp_235 + tmp_248*tmp_251 + tmp_264*tmp_267 + tmp_280*tmp_283 + tmp_296*tmp_299 + tmp_312*tmp_315 + tmp_328*tmp_331 + tmp_344*tmp_347 + tmp_360*tmp_363 + tmp_376*tmp_379 + tmp_52*tmp_59 + tmp_72*tmp_75 + tmp_88*tmp_91;
      real_t a_2_0 = tmp_105*tmp_107 + tmp_121*tmp_123 + tmp_137*tmp_139 + tmp_153*tmp_155 + tmp_169*tmp_171 + tmp_185*tmp_187 + tmp_201*tmp_203 + tmp_217*tmp_219 + tmp_233*tmp_235 + tmp_249*tmp_251 + tmp_265*tmp_267 + tmp_281*tmp_283 + tmp_297*tmp_299 + tmp_313*tmp_315 + tmp_329*tmp_331 + tmp_345*tmp_347 + tmp_361*tmp_363 + tmp_377*tmp_379 + tmp_53*tmp_59 + tmp_73*tmp_75 + tmp_89*tmp_91;
      real_t a_3_0 = tmp_106*tmp_107 + tmp_122*tmp_123 + tmp_138*tmp_139 + tmp_154*tmp_155 + tmp_170*tmp_171 + tmp_186*tmp_187 + tmp_202*tmp_203 + tmp_218*tmp_219 + tmp_234*tmp_235 + tmp_250*tmp_251 + tmp_266*tmp_267 + tmp_282*tmp_283 + tmp_298*tmp_299 + tmp_314*tmp_315 + tmp_330*tmp_331 + tmp_346*tmp_347 + tmp_362*tmp_363 + tmp_378*tmp_379 + tmp_54*tmp_59 + tmp_74*tmp_75 + tmp_90*tmp_91;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormEP1_1 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormEP1_1( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id11 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502282*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.87382197101699555*p_affine_2_0, 0.063089014491502282*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.87382197101699555*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.50142650965817914*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.50142650965817914*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502227*p_affine_0_0 + 0.87382197101699555*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.063089014491502227*p_affine_0_1 + 0.87382197101699555*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.50142650965817914*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.50142650965817914*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id5 );
      Scalar_Variable_Coefficient_2D_mu( 0.87382197101699566*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.87382197101699566*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id6 );
      Scalar_Variable_Coefficient_2D_mu( 0.50142650965817914*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.50142650965817914*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id7 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id8 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id9 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id10 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id11 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = 1.0 / (tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = 1.0*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = tmp_10*tmp_6 + tmp_4*tmp_8;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2*tmp_1*tmp_8 - 2*tmp_10;
      real_t tmp_14 = 0.5*tmp_7;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_3;
      real_t tmp_17 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_18 = tmp_14*tmp_17;
      real_t tmp_19 = tmp_15*tmp_5 + tmp_15*tmp_9 + tmp_16*tmp_6 + tmp_18*tmp_3;
      real_t tmp_20 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_19;
      real_t tmp_21 = -4*tmp_16 - 4*tmp_18;
      real_t tmp_22 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_23 = 0.025422453185103409*tmp_22;
      real_t tmp_24 = tmp_11*tmp_13;
      real_t tmp_25 = tmp_19*tmp_21;
      real_t tmp_26 = 0.058393137863189684*tmp_22;
      real_t tmp_27 = 0.041425537809186785*tmp_22;
      real_t tmp_28 = 0.041425537809186785*tmp_22;
      real_t tmp_29 = 0.025422453185103409*tmp_22;
      real_t tmp_30 = 0.058393137863189684*tmp_22;
      real_t tmp_31 = 0.025422453185103409*tmp_22;
      real_t tmp_32 = 0.058393137863189684*tmp_22;
      real_t tmp_33 = 0.041425537809186785*tmp_22;
      real_t tmp_34 = 0.041425537809186785*tmp_22;
      real_t tmp_35 = 0.041425537809186785*tmp_22;
      real_t tmp_36 = 0.041425537809186785*tmp_22;
      real_t tmp_37 = 2.0*tmp_7;
      real_t tmp_38 = tmp_37*tmp_9;
      real_t tmp_39 = tmp_3*tmp_37;
      real_t tmp_40 = tmp_11*tmp_38;
      real_t tmp_41 = tmp_19*tmp_39;
      real_t tmp_42 = tmp_1*tmp_37;
      real_t tmp_43 = tmp_17*tmp_37;
      real_t tmp_44 = tmp_11*tmp_42;
      real_t tmp_45 = tmp_19*tmp_43;
      real_t a_0_0 = tmp_23*(tmp_12*tmp_13 + tmp_20*tmp_21) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_25) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_25) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_25) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_25) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_25) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_25) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_25) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_25) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_25);
      real_t a_0_1 = tmp_23*(tmp_12*tmp_38 + tmp_20*tmp_39) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_41) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_41) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_41) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_41) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_41) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_41) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_41);
      real_t a_0_2 = tmp_23*(tmp_12*tmp_42 + tmp_20*tmp_43) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_45) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_45) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_45) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_45) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_45) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_45) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_45) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_45) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_45) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_45) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_45);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_2_0 + tmp_0;
      real_t tmp_7 = p_affine_1_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + tmp_3;
      real_t tmp_11 = tmp_8*(tmp_10 + 0.046910077030668018*tmp_9);
      real_t tmp_12 = tmp_11*tmp_2;
      real_t tmp_13 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_14 = p_affine_6_0 + tmp_0;
      real_t tmp_15 = tmp_8*(0.046910077030668018*tmp_13 + tmp_14);
      real_t tmp_16 = tmp_15*tmp_4;
      real_t tmp_17 = tmp_12 + tmp_16;
      real_t tmp_18 = tmp_17 - 1.0/3.0;
      real_t tmp_19 = tmp_1*tmp_11;
      real_t tmp_20 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_21 = tmp_15*tmp_20;
      real_t tmp_22 = tmp_19 + tmp_21;
      real_t tmp_23 = tmp_22 - 1.0/3.0;
      real_t tmp_24 = p_affine_10_1*(tmp_1*tmp_18 + tmp_23*tmp_6);
      real_t tmp_25 = 0.5*tmp_8;
      real_t tmp_26 = tmp_25*tmp_4;
      real_t tmp_27 = tmp_20*tmp_25;
      real_t tmp_28 = -tmp_26 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_18*tmp_7 + tmp_23*tmp_4;
      real_t tmp_31 = 1.0*tmp_8;
      real_t tmp_32 = tmp_1*tmp_31;
      real_t tmp_33 = tmp_2*tmp_31;
      real_t tmp_34 = 0.5*p_affine_10_0*tmp_28 + 0.5*p_affine_10_1*(-tmp_32 - tmp_33);
      real_t tmp_35 = -tmp_12 - tmp_16 - tmp_19 - tmp_21 + 1;
      real_t tmp_36 = std::abs(std::pow((tmp_13*tmp_13) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_37 = 3/tmp_36;
      real_t tmp_38 = tmp_30*tmp_37;
      real_t tmp_39 = tmp_1*tmp_25;
      real_t tmp_40 = 0.5*p_affine_10_0*(tmp_2*tmp_39 + tmp_26*tmp_7 + tmp_27*tmp_4 + tmp_39*tmp_6) + 0.5*p_affine_10_1*(tmp_31*tmp_5 + tmp_33*tmp_7);
      real_t tmp_41 = 2*tmp_36;
      real_t tmp_42 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_41;
      real_t tmp_43 = tmp_8*(tmp_10 + 0.23076534494715845*tmp_9);
      real_t tmp_44 = tmp_2*tmp_43;
      real_t tmp_45 = tmp_8*(0.23076534494715845*tmp_13 + tmp_14);
      real_t tmp_46 = tmp_4*tmp_45;
      real_t tmp_47 = tmp_44 + tmp_46;
      real_t tmp_48 = tmp_47 - 1.0/3.0;
      real_t tmp_49 = tmp_1*tmp_43;
      real_t tmp_50 = tmp_20*tmp_45;
      real_t tmp_51 = tmp_49 + tmp_50;
      real_t tmp_52 = tmp_51 - 1.0/3.0;
      real_t tmp_53 = tmp_1*tmp_48 + tmp_52*tmp_6;
      real_t tmp_54 = p_affine_10_1*tmp_29;
      real_t tmp_55 = tmp_4*tmp_52 + tmp_48*tmp_7;
      real_t tmp_56 = -tmp_44 - tmp_46 - tmp_49 - tmp_50 + 1;
      real_t tmp_57 = tmp_37*tmp_55;
      real_t tmp_58 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41;
      real_t tmp_59 = tmp_8*(tmp_10 + 0.5*tmp_9);
      real_t tmp_60 = tmp_2*tmp_59;
      real_t tmp_61 = tmp_8*(0.5*tmp_13 + tmp_14);
      real_t tmp_62 = tmp_4*tmp_61;
      real_t tmp_63 = tmp_60 + tmp_62;
      real_t tmp_64 = tmp_63 - 1.0/3.0;
      real_t tmp_65 = tmp_1*tmp_59;
      real_t tmp_66 = tmp_20*tmp_61;
      real_t tmp_67 = tmp_65 + tmp_66;
      real_t tmp_68 = tmp_67 - 1.0/3.0;
      real_t tmp_69 = tmp_1*tmp_64 + tmp_6*tmp_68;
      real_t tmp_70 = tmp_4*tmp_68 + tmp_64*tmp_7;
      real_t tmp_71 = -tmp_60 - tmp_62 - tmp_65 - tmp_66 + 1;
      real_t tmp_72 = tmp_37*tmp_70;
      real_t tmp_73 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41;
      real_t tmp_74 = tmp_8*(tmp_10 + 0.7692346550528415*tmp_9);
      real_t tmp_75 = tmp_2*tmp_74;
      real_t tmp_76 = tmp_8*(0.7692346550528415*tmp_13 + tmp_14);
      real_t tmp_77 = tmp_4*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = tmp_78 - 1.0/3.0;
      real_t tmp_80 = tmp_1*tmp_74;
      real_t tmp_81 = tmp_20*tmp_76;
      real_t tmp_82 = tmp_80 + tmp_81;
      real_t tmp_83 = tmp_82 - 1.0/3.0;
      real_t tmp_84 = tmp_1*tmp_79 + tmp_6*tmp_83;
      real_t tmp_85 = tmp_4*tmp_83 + tmp_7*tmp_79;
      real_t tmp_86 = -tmp_75 - tmp_77 - tmp_80 - tmp_81 + 1;
      real_t tmp_87 = tmp_37*tmp_85;
      real_t tmp_88 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41;
      real_t tmp_89 = tmp_8*(tmp_10 + 0.95308992296933193*tmp_9);
      real_t tmp_90 = tmp_2*tmp_89;
      real_t tmp_91 = tmp_8*(0.95308992296933193*tmp_13 + tmp_14);
      real_t tmp_92 = tmp_4*tmp_91;
      real_t tmp_93 = tmp_90 + tmp_92;
      real_t tmp_94 = tmp_93 - 1.0/3.0;
      real_t tmp_95 = tmp_1*tmp_89;
      real_t tmp_96 = tmp_20*tmp_91;
      real_t tmp_97 = tmp_95 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/3.0;
      real_t tmp_99 = tmp_1*tmp_94 + tmp_6*tmp_98;
      real_t tmp_100 = tmp_4*tmp_98 + tmp_7*tmp_94;
      real_t tmp_101 = -tmp_90 - tmp_92 - tmp_95 - tmp_96 + 1;
      real_t tmp_102 = tmp_100*tmp_37;
      real_t tmp_103 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41;
      real_t tmp_104 = 0.25*tmp_8;
      real_t tmp_105 = tmp_104*tmp_4;
      real_t tmp_106 = 0.5*p_affine_10_0*tmp_26 + 0.5*p_affine_10_1*tmp_33;
      real_t tmp_107 = p_affine_10_1*tmp_105;
      real_t tmp_108 = tmp_104*tmp_20;
      real_t tmp_109 = 0.5*p_affine_10_0*tmp_27 + 0.5*p_affine_10_1*tmp_32;
      real_t tmp_110 = p_affine_10_1*tmp_108;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_34 + tmp_101*tmp_102 - tmp_101*tmp_40 - tmp_54*tmp_99) + tmp_42*(-tmp_24*tmp_29 - tmp_30*tmp_34 + tmp_35*tmp_38 - tmp_35*tmp_40) + tmp_58*(-tmp_34*tmp_55 - tmp_40*tmp_56 - tmp_53*tmp_54 + tmp_56*tmp_57) + tmp_73*(-tmp_34*tmp_70 - tmp_40*tmp_71 - tmp_54*tmp_69 + tmp_71*tmp_72) + tmp_88*(-tmp_34*tmp_85 - tmp_40*tmp_86 - tmp_54*tmp_84 + tmp_86*tmp_87);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_106 + tmp_102*tmp_93 - tmp_107*tmp_99 - tmp_40*tmp_93) + tmp_42*(-tmp_105*tmp_24 - tmp_106*tmp_30 + tmp_17*tmp_38 - tmp_17*tmp_40) + tmp_58*(-tmp_106*tmp_55 - tmp_107*tmp_53 - tmp_40*tmp_47 + tmp_47*tmp_57) + tmp_73*(-tmp_106*tmp_70 - tmp_107*tmp_69 - tmp_40*tmp_63 + tmp_63*tmp_72) + tmp_88*(-tmp_106*tmp_85 - tmp_107*tmp_84 - tmp_40*tmp_78 + tmp_78*tmp_87);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_109 + tmp_102*tmp_97 - tmp_110*tmp_99 - tmp_40*tmp_97) + tmp_42*(-tmp_108*tmp_24 - tmp_109*tmp_30 + tmp_22*tmp_38 - tmp_22*tmp_40) + tmp_58*(-tmp_109*tmp_55 - tmp_110*tmp_53 - tmp_40*tmp_51 + tmp_51*tmp_57) + tmp_73*(-tmp_109*tmp_70 - tmp_110*tmp_69 - tmp_40*tmp_67 + tmp_67*tmp_72) + tmp_88*(-tmp_109*tmp_85 - tmp_110*tmp_84 - tmp_40*tmp_82 + tmp_82*tmp_87);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_2_0 + tmp_0;
      real_t tmp_7 = p_affine_1_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + 0.046910077030668018*tmp_9;
      real_t tmp_11 = tmp_8*(tmp_10 + tmp_3);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + 0.046910077030668018*tmp_12;
      real_t tmp_14 = tmp_8*(tmp_0 + tmp_13);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_4 - 1.0/3.0;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_1*tmp_11 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = p_affine_10_1*(tmp_1*tmp_15 + tmp_17*tmp_6);
      real_t tmp_19 = -p_affine_3_1;
      real_t tmp_20 = p_affine_5_1 + tmp_19;
      real_t tmp_21 = -p_affine_3_0;
      real_t tmp_22 = p_affine_4_0 + tmp_21;
      real_t tmp_23 = 1.0 / (tmp_20*tmp_22 - (p_affine_4_1 + tmp_19)*(p_affine_5_0 + tmp_21));
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = p_affine_3_1 - p_affine_4_1;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_25 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_15*tmp_7 + tmp_17*tmp_4;
      real_t tmp_31 = 1.0*tmp_23;
      real_t tmp_32 = tmp_22*tmp_31;
      real_t tmp_33 = p_affine_3_0 - p_affine_5_0;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = 0.5*p_affine_10_0*tmp_28 + 0.5*p_affine_10_1*(-tmp_32 - tmp_34);
      real_t tmp_36 = tmp_23*(tmp_10 + tmp_19);
      real_t tmp_37 = tmp_22*tmp_36;
      real_t tmp_38 = tmp_33*tmp_36;
      real_t tmp_39 = tmp_23*(tmp_13 + tmp_21);
      real_t tmp_40 = tmp_20*tmp_39;
      real_t tmp_41 = tmp_26*tmp_39;
      real_t tmp_42 = -tmp_37 - tmp_38 - tmp_40 - tmp_41 + 1;
      real_t tmp_43 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_44 = 3/tmp_43;
      real_t tmp_45 = tmp_30*tmp_44;
      real_t tmp_46 = 1.0*tmp_8;
      real_t tmp_47 = 0.5*tmp_8;
      real_t tmp_48 = tmp_1*tmp_47;
      real_t tmp_49 = tmp_4*tmp_47;
      real_t tmp_50 = 0.5*p_affine_10_0*(tmp_16*tmp_49 + tmp_2*tmp_48 + tmp_48*tmp_6 + tmp_49*tmp_7) + 0.5*p_affine_10_1*(tmp_2*tmp_46*tmp_7 + tmp_46*tmp_5);
      real_t tmp_51 = 2*tmp_43;
      real_t tmp_52 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_51;
      real_t tmp_53 = p_affine_6_1 + 0.23076534494715845*tmp_9;
      real_t tmp_54 = tmp_8*(tmp_3 + tmp_53);
      real_t tmp_55 = p_affine_6_0 + 0.23076534494715845*tmp_12;
      real_t tmp_56 = tmp_8*(tmp_0 + tmp_55);
      real_t tmp_57 = tmp_2*tmp_54 + tmp_4*tmp_56 - 1.0/3.0;
      real_t tmp_58 = tmp_1*tmp_54 + tmp_16*tmp_56 - 1.0/3.0;
      real_t tmp_59 = tmp_1*tmp_57 + tmp_58*tmp_6;
      real_t tmp_60 = p_affine_10_1*tmp_29;
      real_t tmp_61 = tmp_4*tmp_58 + tmp_57*tmp_7;
      real_t tmp_62 = tmp_23*(tmp_19 + tmp_53);
      real_t tmp_63 = tmp_22*tmp_62;
      real_t tmp_64 = tmp_33*tmp_62;
      real_t tmp_65 = tmp_23*(tmp_21 + tmp_55);
      real_t tmp_66 = tmp_20*tmp_65;
      real_t tmp_67 = tmp_26*tmp_65;
      real_t tmp_68 = -tmp_63 - tmp_64 - tmp_66 - tmp_67 + 1;
      real_t tmp_69 = tmp_44*tmp_61;
      real_t tmp_70 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51;
      real_t tmp_71 = p_affine_6_1 + 0.5*tmp_9;
      real_t tmp_72 = tmp_8*(tmp_3 + tmp_71);
      real_t tmp_73 = p_affine_6_0 + 0.5*tmp_12;
      real_t tmp_74 = tmp_8*(tmp_0 + tmp_73);
      real_t tmp_75 = tmp_2*tmp_72 + tmp_4*tmp_74 - 1.0/3.0;
      real_t tmp_76 = tmp_1*tmp_72 + tmp_16*tmp_74 - 1.0/3.0;
      real_t tmp_77 = tmp_1*tmp_75 + tmp_6*tmp_76;
      real_t tmp_78 = tmp_4*tmp_76 + tmp_7*tmp_75;
      real_t tmp_79 = tmp_23*(tmp_19 + tmp_71);
      real_t tmp_80 = tmp_22*tmp_79;
      real_t tmp_81 = tmp_33*tmp_79;
      real_t tmp_82 = tmp_23*(tmp_21 + tmp_73);
      real_t tmp_83 = tmp_20*tmp_82;
      real_t tmp_84 = tmp_26*tmp_82;
      real_t tmp_85 = -tmp_80 - tmp_81 - tmp_83 - tmp_84 + 1;
      real_t tmp_86 = tmp_44*tmp_78;
      real_t tmp_87 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51;
      real_t tmp_88 = p_affine_6_1 + 0.7692346550528415*tmp_9;
      real_t tmp_89 = tmp_8*(tmp_3 + tmp_88);
      real_t tmp_90 = p_affine_6_0 + 0.7692346550528415*tmp_12;
      real_t tmp_91 = tmp_8*(tmp_0 + tmp_90);
      real_t tmp_92 = tmp_2*tmp_89 + tmp_4*tmp_91 - 1.0/3.0;
      real_t tmp_93 = tmp_1*tmp_89 + tmp_16*tmp_91 - 1.0/3.0;
      real_t tmp_94 = tmp_1*tmp_92 + tmp_6*tmp_93;
      real_t tmp_95 = tmp_4*tmp_93 + tmp_7*tmp_92;
      real_t tmp_96 = tmp_23*(tmp_19 + tmp_88);
      real_t tmp_97 = tmp_22*tmp_96;
      real_t tmp_98 = tmp_33*tmp_96;
      real_t tmp_99 = tmp_23*(tmp_21 + tmp_90);
      real_t tmp_100 = tmp_20*tmp_99;
      real_t tmp_101 = tmp_26*tmp_99;
      real_t tmp_102 = -tmp_100 - tmp_101 - tmp_97 - tmp_98 + 1;
      real_t tmp_103 = tmp_44*tmp_95;
      real_t tmp_104 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_51;
      real_t tmp_105 = p_affine_6_1 + 0.95308992296933193*tmp_9;
      real_t tmp_106 = tmp_8*(tmp_105 + tmp_3);
      real_t tmp_107 = p_affine_6_0 + 0.95308992296933193*tmp_12;
      real_t tmp_108 = tmp_8*(tmp_0 + tmp_107);
      real_t tmp_109 = tmp_106*tmp_2 + tmp_108*tmp_4 - 1.0/3.0;
      real_t tmp_110 = tmp_1*tmp_106 + tmp_108*tmp_16 - 1.0/3.0;
      real_t tmp_111 = tmp_1*tmp_109 + tmp_110*tmp_6;
      real_t tmp_112 = tmp_109*tmp_7 + tmp_110*tmp_4;
      real_t tmp_113 = tmp_23*(tmp_105 + tmp_19);
      real_t tmp_114 = tmp_113*tmp_22;
      real_t tmp_115 = tmp_113*tmp_33;
      real_t tmp_116 = tmp_23*(tmp_107 + tmp_21);
      real_t tmp_117 = tmp_116*tmp_20;
      real_t tmp_118 = tmp_116*tmp_26;
      real_t tmp_119 = -tmp_114 - tmp_115 - tmp_117 - tmp_118 + 1;
      real_t tmp_120 = tmp_112*tmp_44;
      real_t tmp_121 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_51;
      real_t tmp_122 = 0.25*tmp_23;
      real_t tmp_123 = tmp_122*tmp_20;
      real_t tmp_124 = 0.5*p_affine_10_0*tmp_25 + 0.5*p_affine_10_1*tmp_34;
      real_t tmp_125 = tmp_38 + tmp_40;
      real_t tmp_126 = p_affine_10_1*tmp_123;
      real_t tmp_127 = tmp_64 + tmp_66;
      real_t tmp_128 = tmp_81 + tmp_83;
      real_t tmp_129 = tmp_100 + tmp_98;
      real_t tmp_130 = tmp_115 + tmp_117;
      real_t tmp_131 = tmp_122*tmp_26;
      real_t tmp_132 = 0.5*p_affine_10_0*tmp_27 + 0.5*p_affine_10_1*tmp_32;
      real_t tmp_133 = tmp_37 + tmp_41;
      real_t tmp_134 = p_affine_10_1*tmp_131;
      real_t tmp_135 = tmp_63 + tmp_67;
      real_t tmp_136 = tmp_80 + tmp_84;
      real_t tmp_137 = tmp_101 + tmp_97;
      real_t tmp_138 = tmp_114 + tmp_118;
      real_t a_0_0 = tmp_104*(-tmp_102*tmp_103 + tmp_102*tmp_50 - tmp_35*tmp_95 - tmp_60*tmp_94) + tmp_121*(-tmp_111*tmp_60 - tmp_112*tmp_35 - tmp_119*tmp_120 + tmp_119*tmp_50) + tmp_52*(-tmp_18*tmp_29 - tmp_30*tmp_35 - tmp_42*tmp_45 + tmp_42*tmp_50) + tmp_70*(-tmp_35*tmp_61 + tmp_50*tmp_68 - tmp_59*tmp_60 - tmp_68*tmp_69) + tmp_87*(-tmp_35*tmp_78 + tmp_50*tmp_85 - tmp_60*tmp_77 - tmp_85*tmp_86);
      real_t a_0_1 = tmp_104*(-tmp_103*tmp_129 - tmp_124*tmp_95 - tmp_126*tmp_94 + tmp_129*tmp_50) + tmp_121*(-tmp_111*tmp_126 - tmp_112*tmp_124 - tmp_120*tmp_130 + tmp_130*tmp_50) + tmp_52*(-tmp_123*tmp_18 - tmp_124*tmp_30 - tmp_125*tmp_45 + tmp_125*tmp_50) + tmp_70*(-tmp_124*tmp_61 - tmp_126*tmp_59 + tmp_127*tmp_50 - tmp_127*tmp_69) + tmp_87*(-tmp_124*tmp_78 - tmp_126*tmp_77 + tmp_128*tmp_50 - tmp_128*tmp_86);
      real_t a_0_2 = tmp_104*(-tmp_103*tmp_137 - tmp_132*tmp_95 - tmp_134*tmp_94 + tmp_137*tmp_50) + tmp_121*(-tmp_111*tmp_134 - tmp_112*tmp_132 - tmp_120*tmp_138 + tmp_138*tmp_50) + tmp_52*(-tmp_131*tmp_18 - tmp_132*tmp_30 - tmp_133*tmp_45 + tmp_133*tmp_50) + tmp_70*(-tmp_132*tmp_61 - tmp_134*tmp_59 + tmp_135*tmp_50 - tmp_135*tmp_69) + tmp_87*(-tmp_132*tmp_78 - tmp_134*tmp_77 + tmp_136*tmp_50 - tmp_136*tmp_86);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_3;
      real_t tmp_7 = 1.0 / (tmp_1*tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_9 = p_affine_6_1 + tmp_3;
      real_t tmp_10 = tmp_7*(0.046910077030668018*tmp_8 + tmp_9);
      real_t tmp_11 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_12 = p_affine_6_0 + tmp_0;
      real_t tmp_13 = tmp_7*(0.046910077030668018*tmp_11 + tmp_12);
      real_t tmp_14 = tmp_10*tmp_2 + tmp_13*tmp_4 - 1.0/3.0;
      real_t tmp_15 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_16 = tmp_1*tmp_10 + tmp_13*tmp_15 - 1.0/3.0;
      real_t tmp_17 = tmp_1*tmp_14 + tmp_16*tmp_5;
      real_t tmp_18 = 0.5*tmp_7;
      real_t tmp_19 = tmp_18*tmp_4;
      real_t tmp_20 = tmp_15*tmp_18;
      real_t tmp_21 = -tmp_19 - tmp_20;
      real_t tmp_22 = p_affine_10_1*tmp_21;
      real_t tmp_23 = 1.0*tmp_7;
      real_t tmp_24 = tmp_1*tmp_23;
      real_t tmp_25 = tmp_2*tmp_23;
      real_t tmp_26 = p_affine_10_0*tmp_21 + p_affine_10_1*(-tmp_24 - tmp_25);
      real_t tmp_27 = tmp_14*tmp_6 + tmp_16*tmp_4;
      real_t tmp_28 = 2*std::abs(std::pow((tmp_11*tmp_11) + (tmp_8*tmp_8), 1.0/2.0));
      real_t tmp_29 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_28;
      real_t tmp_30 = tmp_7*(0.23076534494715845*tmp_8 + tmp_9);
      real_t tmp_31 = tmp_7*(0.23076534494715845*tmp_11 + tmp_12);
      real_t tmp_32 = tmp_2*tmp_30 + tmp_31*tmp_4 - 1.0/3.0;
      real_t tmp_33 = tmp_1*tmp_30 + tmp_15*tmp_31 - 1.0/3.0;
      real_t tmp_34 = tmp_1*tmp_32 + tmp_33*tmp_5;
      real_t tmp_35 = tmp_32*tmp_6 + tmp_33*tmp_4;
      real_t tmp_36 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_28;
      real_t tmp_37 = tmp_7*(0.5*tmp_8 + tmp_9);
      real_t tmp_38 = tmp_7*(0.5*tmp_11 + tmp_12);
      real_t tmp_39 = tmp_2*tmp_37 + tmp_38*tmp_4 - 1.0/3.0;
      real_t tmp_40 = tmp_1*tmp_37 + tmp_15*tmp_38 - 1.0/3.0;
      real_t tmp_41 = tmp_1*tmp_39 + tmp_40*tmp_5;
      real_t tmp_42 = tmp_39*tmp_6 + tmp_4*tmp_40;
      real_t tmp_43 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_28;
      real_t tmp_44 = tmp_7*(0.7692346550528415*tmp_8 + tmp_9);
      real_t tmp_45 = tmp_7*(0.7692346550528415*tmp_11 + tmp_12);
      real_t tmp_46 = tmp_2*tmp_44 + tmp_4*tmp_45 - 1.0/3.0;
      real_t tmp_47 = tmp_1*tmp_44 + tmp_15*tmp_45 - 1.0/3.0;
      real_t tmp_48 = tmp_1*tmp_46 + tmp_47*tmp_5;
      real_t tmp_49 = tmp_4*tmp_47 + tmp_46*tmp_6;
      real_t tmp_50 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_28;
      real_t tmp_51 = tmp_7*(0.95308992296933193*tmp_8 + tmp_9);
      real_t tmp_52 = tmp_7*(0.95308992296933193*tmp_11 + tmp_12);
      real_t tmp_53 = tmp_2*tmp_51 + tmp_4*tmp_52 - 1.0/3.0;
      real_t tmp_54 = tmp_1*tmp_51 + tmp_15*tmp_52 - 1.0/3.0;
      real_t tmp_55 = tmp_1*tmp_53 + tmp_5*tmp_54;
      real_t tmp_56 = tmp_4*tmp_54 + tmp_53*tmp_6;
      real_t tmp_57 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_28;
      real_t tmp_58 = p_affine_10_1*tmp_19;
      real_t tmp_59 = p_affine_10_0*tmp_19 + p_affine_10_1*tmp_25;
      real_t tmp_60 = p_affine_10_1*tmp_20;
      real_t tmp_61 = p_affine_10_0*tmp_20 + p_affine_10_1*tmp_24;
      real_t a_0_0 = tmp_29*(-tmp_17*tmp_22 - tmp_26*tmp_27) + tmp_36*(-tmp_22*tmp_34 - tmp_26*tmp_35) + tmp_43*(-tmp_22*tmp_41 - tmp_26*tmp_42) + tmp_50*(-tmp_22*tmp_48 - tmp_26*tmp_49) + tmp_57*(-tmp_22*tmp_55 - tmp_26*tmp_56);
      real_t a_0_1 = tmp_29*(-tmp_17*tmp_58 - tmp_27*tmp_59) + tmp_36*(-tmp_34*tmp_58 - tmp_35*tmp_59) + tmp_43*(-tmp_41*tmp_58 - tmp_42*tmp_59) + tmp_50*(-tmp_48*tmp_58 - tmp_49*tmp_59) + tmp_57*(-tmp_55*tmp_58 - tmp_56*tmp_59);
      real_t a_0_2 = tmp_29*(-tmp_17*tmp_60 - tmp_27*tmp_61) + tmp_36*(-tmp_34*tmp_60 - tmp_35*tmp_61) + tmp_43*(-tmp_41*tmp_60 - tmp_42*tmp_61) + tmp_50*(-tmp_48*tmp_60 - tmp_49*tmp_61) + tmp_57*(-tmp_55*tmp_60 - tmp_56*tmp_61);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_3_0 + tmp_2;
      real_t tmp_4 = -p_affine_0_2;
      real_t tmp_5 = p_affine_2_2 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_2_0 + tmp_2;
      real_t tmp_8 = p_affine_3_2 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_2_1 + tmp_0;
      real_t tmp_12 = p_affine_1_0 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_8;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = p_affine_1_2 + tmp_4;
      real_t tmp_16 = tmp_15*tmp_7;
      real_t tmp_17 = tmp_12*tmp_5;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_13 - tmp_18;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_16 - tmp_17;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_23 + tmp_14*tmp_25;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = -tmp_1*tmp_7 + tmp_11*tmp_12;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = tmp_1*tmp_3 - tmp_12*tmp_14;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_3 + tmp_14*tmp_7;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_34 + tmp_14*tmp_32 + tmp_15*tmp_37 + tmp_38*tmp_5 + tmp_39*tmp_8;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = tmp_1*tmp_5 - tmp_11*tmp_15;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = -tmp_1*tmp_8 + tmp_14*tmp_15;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_11*tmp_8 - tmp_14*tmp_5;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_45 + tmp_12*tmp_37 + tmp_14*tmp_43 + tmp_3*tmp_39 + tmp_38*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_0_1 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_0_2 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_0_3 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_3;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_0;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_12 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_2*tmp_49 + tmp_5*tmp_57;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_54*tmp_59;
      real_t tmp_61 = tmp_46*tmp_59;
      real_t tmp_62 = tmp_33*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_1;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_11*tmp_41 + tmp_14*tmp_49 + tmp_57*tmp_9;
      real_t tmp_67 = tmp_50*tmp_59;
      real_t tmp_68 = tmp_42*tmp_59;
      real_t tmp_69 = tmp_59*tmp_7;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_13*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_52*tmp_73;
      real_t tmp_75 = tmp_44*tmp_73;
      real_t tmp_76 = tmp_26*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*tmp_63 + 0.5*p_affine_13_1*(-tmp_74 - tmp_75 - tmp_76) + 0.5*p_affine_13_2*tmp_70;
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_26*tmp_59;
      real_t tmp_86 = tmp_44*tmp_59;
      real_t tmp_87 = tmp_52*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_1*tmp_85 + tmp_13*tmp_62 + tmp_2*tmp_86 + tmp_4*tmp_60 + tmp_5*tmp_87 + tmp_6*tmp_61) + 0.5*p_affine_13_1*(tmp_13*tmp_76 + tmp_4*tmp_74 + tmp_6*tmp_75) + 0.5*p_affine_13_2*(tmp_11*tmp_85 + tmp_13*tmp_69 + tmp_14*tmp_86 + tmp_4*tmp_67 + tmp_6*tmp_68 + tmp_87*tmp_9);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_2 + tmp_108*tmp_5;
      real_t tmp_110 = tmp_103*tmp_14 + tmp_108*tmp_9 + tmp_11*tmp_98;
      real_t tmp_111 = tmp_103*tmp_6 + tmp_108*tmp_4 + tmp_13*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_2 + tmp_132*tmp_5;
      real_t tmp_134 = tmp_11*tmp_122 + tmp_127*tmp_14 + tmp_132*tmp_9;
      real_t tmp_135 = tmp_122*tmp_13 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_2 + tmp_156*tmp_5;
      real_t tmp_158 = tmp_11*tmp_146 + tmp_14*tmp_151 + tmp_156*tmp_9;
      real_t tmp_159 = tmp_13*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_2 + tmp_180*tmp_5;
      real_t tmp_182 = tmp_11*tmp_170 + tmp_14*tmp_175 + tmp_180*tmp_9;
      real_t tmp_183 = tmp_13*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_2 + tmp_204*tmp_5;
      real_t tmp_206 = tmp_11*tmp_194 + tmp_14*tmp_199 + tmp_204*tmp_9;
      real_t tmp_207 = tmp_13*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_2*tmp_223 + tmp_228*tmp_5;
      real_t tmp_230 = tmp_11*tmp_218 + tmp_14*tmp_223 + tmp_228*tmp_9;
      real_t tmp_231 = tmp_13*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_2*tmp_247 + tmp_252*tmp_5;
      real_t tmp_254 = tmp_11*tmp_242 + tmp_14*tmp_247 + tmp_252*tmp_9;
      real_t tmp_255 = tmp_13*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_2*tmp_271 + tmp_276*tmp_5;
      real_t tmp_278 = tmp_11*tmp_266 + tmp_14*tmp_271 + tmp_276*tmp_9;
      real_t tmp_279 = tmp_13*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_2*tmp_295 + tmp_300*tmp_5;
      real_t tmp_302 = tmp_11*tmp_290 + tmp_14*tmp_295 + tmp_300*tmp_9;
      real_t tmp_303 = tmp_13*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_2*tmp_319 + tmp_324*tmp_5;
      real_t tmp_326 = tmp_11*tmp_314 + tmp_14*tmp_319 + tmp_324*tmp_9;
      real_t tmp_327 = tmp_13*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_2*tmp_343 + tmp_348*tmp_5;
      real_t tmp_350 = tmp_11*tmp_338 + tmp_14*tmp_343 + tmp_348*tmp_9;
      real_t tmp_351 = tmp_13*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_2*tmp_367 + tmp_372*tmp_5;
      real_t tmp_374 = tmp_11*tmp_362 + tmp_14*tmp_367 + tmp_372*tmp_9;
      real_t tmp_375 = tmp_13*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_2*tmp_391 + tmp_396*tmp_5;
      real_t tmp_398 = tmp_11*tmp_386 + tmp_14*tmp_391 + tmp_396*tmp_9;
      real_t tmp_399 = tmp_13*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_2*tmp_415 + tmp_420*tmp_5;
      real_t tmp_422 = tmp_11*tmp_410 + tmp_14*tmp_415 + tmp_420*tmp_9;
      real_t tmp_423 = tmp_13*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_2*tmp_439 + tmp_444*tmp_5;
      real_t tmp_446 = tmp_11*tmp_434 + tmp_14*tmp_439 + tmp_444*tmp_9;
      real_t tmp_447 = tmp_13*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_2*tmp_463 + tmp_468*tmp_5;
      real_t tmp_470 = tmp_11*tmp_458 + tmp_14*tmp_463 + tmp_468*tmp_9;
      real_t tmp_471 = tmp_13*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_2*tmp_487 + tmp_492*tmp_5;
      real_t tmp_494 = tmp_11*tmp_482 + tmp_14*tmp_487 + tmp_492*tmp_9;
      real_t tmp_495 = tmp_13*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_2*tmp_511 + tmp_5*tmp_516;
      real_t tmp_518 = tmp_11*tmp_506 + tmp_14*tmp_511 + tmp_516*tmp_9;
      real_t tmp_519 = tmp_13*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_2*tmp_535 + tmp_5*tmp_540;
      real_t tmp_542 = tmp_11*tmp_530 + tmp_14*tmp_535 + tmp_540*tmp_9;
      real_t tmp_543 = tmp_13*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_2*tmp_559 + tmp_5*tmp_564;
      real_t tmp_566 = tmp_11*tmp_554 + tmp_14*tmp_559 + tmp_564*tmp_9;
      real_t tmp_567 = tmp_13*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_1*tmp_19;
      real_t tmp_572 = tmp_571*tmp_7;
      real_t tmp_573 = tmp_33*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_62 + 0.5*p_affine_13_1*tmp_76 + 0.5*p_affine_13_2*tmp_69;
      real_t tmp_575 = tmp_42*tmp_571;
      real_t tmp_576 = tmp_46*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_61 + 0.5*p_affine_13_1*tmp_75 + 0.5*p_affine_13_2*tmp_68;
      real_t tmp_578 = tmp_50*tmp_571;
      real_t tmp_579 = tmp_54*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_60 + 0.5*p_affine_13_1*tmp_74 + 0.5*p_affine_13_2*tmp_67;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_0_1 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_0_2 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_0_3 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_2*tmp_9;
      real_t tmp_18 = tmp_11*tmp_5;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_13*tmp_15 - tmp_13*tmp_17 - tmp_18*tmp_6);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = 0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22;
      real_t tmp_24 = p_affine_8_2 + tmp_8;
      real_t tmp_25 = tmp_19*(tmp_23 + tmp_24);
      real_t tmp_26 = tmp_15 - tmp_17;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = 0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29;
      real_t tmp_31 = p_affine_8_1 + tmp_3;
      real_t tmp_32 = tmp_19*(tmp_30 + tmp_31);
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = 0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36;
      real_t tmp_38 = p_affine_8_0 + tmp_0;
      real_t tmp_39 = tmp_19*(tmp_37 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_7 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_42 = tmp_1*tmp_9 - tmp_18;
      real_t tmp_43 = tmp_12 - tmp_13*tmp_9;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_46 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_47 = -tmp_11*tmp_6 + tmp_13*tmp_14;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_2*tmp_44 + tmp_48*tmp_5;
      real_t tmp_50 = -p_affine_4_1;
      real_t tmp_51 = p_affine_5_1 + tmp_50;
      real_t tmp_52 = -p_affine_4_2;
      real_t tmp_53 = p_affine_6_2 + tmp_52;
      real_t tmp_54 = tmp_51*tmp_53;
      real_t tmp_55 = p_affine_6_1 + tmp_50;
      real_t tmp_56 = p_affine_5_2 + tmp_52;
      real_t tmp_57 = tmp_54 - tmp_55*tmp_56;
      real_t tmp_58 = p_affine_7_2 + tmp_52;
      real_t tmp_59 = -p_affine_4_0;
      real_t tmp_60 = p_affine_5_0 + tmp_59;
      real_t tmp_61 = tmp_55*tmp_60;
      real_t tmp_62 = p_affine_7_1 + tmp_50;
      real_t tmp_63 = p_affine_6_0 + tmp_59;
      real_t tmp_64 = tmp_56*tmp_63;
      real_t tmp_65 = p_affine_7_0 + tmp_59;
      real_t tmp_66 = tmp_60*tmp_62;
      real_t tmp_67 = tmp_51*tmp_63;
      real_t tmp_68 = tmp_56*tmp_65;
      real_t tmp_69 = 1.0 / (-tmp_53*tmp_66 + tmp_54*tmp_65 - tmp_55*tmp_68 + tmp_58*tmp_61 - tmp_58*tmp_67 + tmp_62*tmp_64);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_57*tmp_70;
      real_t tmp_72 = -tmp_51*tmp_58 + tmp_56*tmp_62;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = -tmp_53*tmp_62 + tmp_55*tmp_58;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_1;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_11*tmp_40 + tmp_14*tmp_44 + tmp_48*tmp_9;
      real_t tmp_80 = tmp_61 - tmp_67;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = tmp_51*tmp_65 - tmp_66;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = -tmp_55*tmp_65 + tmp_62*tmp_63;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_13*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_6;
      real_t tmp_89 = -tmp_53*tmp_60 + tmp_64;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = tmp_58*tmp_60 - tmp_68;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = tmp_53*tmp_65 - tmp_58*tmp_63;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*(-tmp_91 - tmp_93 - tmp_95) + 0.5*p_affine_13_2*tmp_86;
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_23 + tmp_97);
      real_t tmp_99 = tmp_80*tmp_98;
      real_t tmp_100 = tmp_82*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_50;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_30);
      real_t tmp_103 = tmp_102*tmp_89;
      real_t tmp_104 = tmp_102*tmp_92;
      real_t tmp_105 = tmp_84*tmp_98;
      real_t tmp_106 = tmp_102*tmp_94;
      real_t tmp_107 = p_affine_8_0 + tmp_59;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_37);
      real_t tmp_109 = tmp_108*tmp_57;
      real_t tmp_110 = tmp_108*tmp_72;
      real_t tmp_111 = tmp_108*tmp_74;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)*std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)) + (std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)*std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)) + (std::abs(tmp_114*tmp_22 - tmp_115*tmp_36)*std::abs(tmp_114*tmp_22 - tmp_115*tmp_36));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_120*tmp_26;
      real_t tmp_122 = tmp_120*tmp_42;
      real_t tmp_123 = tmp_120*tmp_46;
      real_t tmp_124 = tmp_120*tmp_13;
      real_t tmp_125 = tmp_120*tmp_6;
      real_t tmp_126 = tmp_120*tmp_4;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_1*tmp_121 + tmp_122*tmp_2 + tmp_123*tmp_5 + tmp_124*tmp_33 + tmp_125*tmp_43 + tmp_126*tmp_47) + 0.5*p_affine_13_1*(tmp_119*tmp_13*tmp_26 + tmp_119*tmp_4*tmp_46 + tmp_119*tmp_42*tmp_6) + 0.5*p_affine_13_2*(tmp_11*tmp_121 + tmp_122*tmp_14 + tmp_123*tmp_9 + tmp_124*tmp_7 + tmp_125*tmp_41 + tmp_126*tmp_45);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_24);
      real_t tmp_132 = 0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_31);
      real_t tmp_134 = 0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_38);
      real_t tmp_136 = tmp_131*tmp_7 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_2 + tmp_138*tmp_5;
      real_t tmp_140 = tmp_11*tmp_136 + tmp_137*tmp_14 + tmp_138*tmp_9;
      real_t tmp_141 = tmp_13*tmp_136 + tmp_137*tmp_6 + tmp_138*tmp_4;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_80;
      real_t tmp_144 = tmp_142*tmp_82;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_89;
      real_t tmp_147 = tmp_145*tmp_92;
      real_t tmp_148 = tmp_142*tmp_84;
      real_t tmp_149 = tmp_145*tmp_94;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_57;
      real_t tmp_152 = tmp_150*tmp_72;
      real_t tmp_153 = tmp_150*tmp_74;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_24);
      real_t tmp_159 = 0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_31);
      real_t tmp_161 = 0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_38);
      real_t tmp_163 = tmp_158*tmp_7 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_5;
      real_t tmp_167 = tmp_11*tmp_163 + tmp_14*tmp_164 + tmp_165*tmp_9;
      real_t tmp_168 = tmp_13*tmp_163 + tmp_164*tmp_6 + tmp_165*tmp_4;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_80;
      real_t tmp_171 = tmp_169*tmp_82;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_89;
      real_t tmp_174 = tmp_172*tmp_92;
      real_t tmp_175 = tmp_169*tmp_84;
      real_t tmp_176 = tmp_172*tmp_94;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_57;
      real_t tmp_179 = tmp_177*tmp_72;
      real_t tmp_180 = tmp_177*tmp_74;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_24);
      real_t tmp_186 = 0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_31);
      real_t tmp_188 = 0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_38);
      real_t tmp_190 = tmp_185*tmp_7 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_2 + tmp_192*tmp_5;
      real_t tmp_194 = tmp_11*tmp_190 + tmp_14*tmp_191 + tmp_192*tmp_9;
      real_t tmp_195 = tmp_13*tmp_190 + tmp_191*tmp_6 + tmp_192*tmp_4;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_80;
      real_t tmp_198 = tmp_196*tmp_82;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_89;
      real_t tmp_201 = tmp_199*tmp_92;
      real_t tmp_202 = tmp_196*tmp_84;
      real_t tmp_203 = tmp_199*tmp_94;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_57;
      real_t tmp_206 = tmp_204*tmp_72;
      real_t tmp_207 = tmp_204*tmp_74;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22;
      real_t tmp_212 = tmp_19*(tmp_211 + tmp_24);
      real_t tmp_213 = 0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_31);
      real_t tmp_215 = 0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_38);
      real_t tmp_217 = tmp_212*tmp_7 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_2*tmp_218 + tmp_219*tmp_5;
      real_t tmp_221 = tmp_11*tmp_217 + tmp_14*tmp_218 + tmp_219*tmp_9;
      real_t tmp_222 = tmp_13*tmp_217 + tmp_218*tmp_6 + tmp_219*tmp_4;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_80;
      real_t tmp_225 = tmp_223*tmp_82;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_89;
      real_t tmp_228 = tmp_226*tmp_92;
      real_t tmp_229 = tmp_223*tmp_84;
      real_t tmp_230 = tmp_226*tmp_94;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_57;
      real_t tmp_233 = tmp_231*tmp_72;
      real_t tmp_234 = tmp_231*tmp_74;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_239 = tmp_19*(tmp_238 + tmp_24);
      real_t tmp_240 = 0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_31);
      real_t tmp_242 = 0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_38);
      real_t tmp_244 = tmp_239*tmp_7 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_2*tmp_245 + tmp_246*tmp_5;
      real_t tmp_248 = tmp_11*tmp_244 + tmp_14*tmp_245 + tmp_246*tmp_9;
      real_t tmp_249 = tmp_13*tmp_244 + tmp_245*tmp_6 + tmp_246*tmp_4;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_80;
      real_t tmp_252 = tmp_250*tmp_82;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_89;
      real_t tmp_255 = tmp_253*tmp_92;
      real_t tmp_256 = tmp_250*tmp_84;
      real_t tmp_257 = tmp_253*tmp_94;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_57;
      real_t tmp_260 = tmp_258*tmp_72;
      real_t tmp_261 = tmp_258*tmp_74;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_266 = tmp_19*(tmp_24 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_31);
      real_t tmp_269 = 0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_38);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_7 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_2*tmp_272 + tmp_273*tmp_5;
      real_t tmp_275 = tmp_11*tmp_271 + tmp_14*tmp_272 + tmp_273*tmp_9;
      real_t tmp_276 = tmp_13*tmp_271 + tmp_272*tmp_6 + tmp_273*tmp_4;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_80;
      real_t tmp_279 = tmp_277*tmp_82;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_89;
      real_t tmp_282 = tmp_280*tmp_92;
      real_t tmp_283 = tmp_277*tmp_84;
      real_t tmp_284 = tmp_280*tmp_94;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_57;
      real_t tmp_287 = tmp_285*tmp_72;
      real_t tmp_288 = tmp_285*tmp_74;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_293 = tmp_19*(tmp_24 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_295 = tmp_19*(tmp_294 + tmp_31);
      real_t tmp_296 = 0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_38);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_7 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_2*tmp_299 + tmp_300*tmp_5;
      real_t tmp_302 = tmp_11*tmp_298 + tmp_14*tmp_299 + tmp_300*tmp_9;
      real_t tmp_303 = tmp_13*tmp_298 + tmp_299*tmp_6 + tmp_300*tmp_4;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_80;
      real_t tmp_306 = tmp_304*tmp_82;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_89;
      real_t tmp_309 = tmp_307*tmp_92;
      real_t tmp_310 = tmp_304*tmp_84;
      real_t tmp_311 = tmp_307*tmp_94;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_57;
      real_t tmp_314 = tmp_312*tmp_72;
      real_t tmp_315 = tmp_312*tmp_74;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_320 = tmp_19*(tmp_24 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_322 = tmp_19*(tmp_31 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_38);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_7 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_2*tmp_326 + tmp_327*tmp_5;
      real_t tmp_329 = tmp_11*tmp_325 + tmp_14*tmp_326 + tmp_327*tmp_9;
      real_t tmp_330 = tmp_13*tmp_325 + tmp_326*tmp_6 + tmp_327*tmp_4;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_80;
      real_t tmp_333 = tmp_331*tmp_82;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_89;
      real_t tmp_336 = tmp_334*tmp_92;
      real_t tmp_337 = tmp_331*tmp_84;
      real_t tmp_338 = tmp_334*tmp_94;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_57;
      real_t tmp_341 = tmp_339*tmp_72;
      real_t tmp_342 = tmp_339*tmp_74;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_347 = tmp_19*(tmp_24 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_349 = tmp_19*(tmp_31 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_351 = tmp_19*(tmp_350 + tmp_38);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_7 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_2*tmp_353 + tmp_354*tmp_5;
      real_t tmp_356 = tmp_11*tmp_352 + tmp_14*tmp_353 + tmp_354*tmp_9;
      real_t tmp_357 = tmp_13*tmp_352 + tmp_353*tmp_6 + tmp_354*tmp_4;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_80;
      real_t tmp_360 = tmp_358*tmp_82;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_89;
      real_t tmp_363 = tmp_361*tmp_92;
      real_t tmp_364 = tmp_358*tmp_84;
      real_t tmp_365 = tmp_361*tmp_94;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_57;
      real_t tmp_368 = tmp_366*tmp_72;
      real_t tmp_369 = tmp_366*tmp_74;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_374 = tmp_19*(tmp_24 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_376 = tmp_19*(tmp_31 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_378 = tmp_19*(tmp_377 + tmp_38);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_7 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_2*tmp_380 + tmp_381*tmp_5;
      real_t tmp_383 = tmp_11*tmp_379 + tmp_14*tmp_380 + tmp_381*tmp_9;
      real_t tmp_384 = tmp_13*tmp_379 + tmp_380*tmp_6 + tmp_381*tmp_4;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_80;
      real_t tmp_387 = tmp_385*tmp_82;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_89;
      real_t tmp_390 = tmp_388*tmp_92;
      real_t tmp_391 = tmp_385*tmp_84;
      real_t tmp_392 = tmp_388*tmp_94;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_57;
      real_t tmp_395 = tmp_393*tmp_72;
      real_t tmp_396 = tmp_393*tmp_74;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_401 = tmp_19*(tmp_24 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_403 = tmp_19*(tmp_31 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_405 = tmp_19*(tmp_38 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_7 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_2*tmp_407 + tmp_408*tmp_5;
      real_t tmp_410 = tmp_11*tmp_406 + tmp_14*tmp_407 + tmp_408*tmp_9;
      real_t tmp_411 = tmp_13*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_6;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_80;
      real_t tmp_414 = tmp_412*tmp_82;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_89;
      real_t tmp_417 = tmp_415*tmp_92;
      real_t tmp_418 = tmp_412*tmp_84;
      real_t tmp_419 = tmp_415*tmp_94;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_57;
      real_t tmp_422 = tmp_420*tmp_72;
      real_t tmp_423 = tmp_420*tmp_74;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_428 = tmp_19*(tmp_24 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_430 = tmp_19*(tmp_31 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_432 = tmp_19*(tmp_38 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_7 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_2*tmp_434 + tmp_435*tmp_5;
      real_t tmp_437 = tmp_11*tmp_433 + tmp_14*tmp_434 + tmp_435*tmp_9;
      real_t tmp_438 = tmp_13*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_6;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_80;
      real_t tmp_441 = tmp_439*tmp_82;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_89;
      real_t tmp_444 = tmp_442*tmp_92;
      real_t tmp_445 = tmp_439*tmp_84;
      real_t tmp_446 = tmp_442*tmp_94;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_57;
      real_t tmp_449 = tmp_447*tmp_72;
      real_t tmp_450 = tmp_447*tmp_74;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_455 = tmp_19*(tmp_24 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_457 = tmp_19*(tmp_31 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_459 = tmp_19*(tmp_38 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_7 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_2*tmp_461 + tmp_462*tmp_5;
      real_t tmp_464 = tmp_11*tmp_460 + tmp_14*tmp_461 + tmp_462*tmp_9;
      real_t tmp_465 = tmp_13*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_6;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_80;
      real_t tmp_468 = tmp_466*tmp_82;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_89;
      real_t tmp_471 = tmp_469*tmp_92;
      real_t tmp_472 = tmp_466*tmp_84;
      real_t tmp_473 = tmp_469*tmp_94;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_57;
      real_t tmp_476 = tmp_474*tmp_72;
      real_t tmp_477 = tmp_474*tmp_74;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_482 = tmp_19*(tmp_24 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_484 = tmp_19*(tmp_31 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_486 = tmp_19*(tmp_38 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_7 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_2*tmp_488 + tmp_489*tmp_5;
      real_t tmp_491 = tmp_11*tmp_487 + tmp_14*tmp_488 + tmp_489*tmp_9;
      real_t tmp_492 = tmp_13*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_6;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_80;
      real_t tmp_495 = tmp_493*tmp_82;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_89;
      real_t tmp_498 = tmp_496*tmp_92;
      real_t tmp_499 = tmp_493*tmp_84;
      real_t tmp_500 = tmp_496*tmp_94;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_57;
      real_t tmp_503 = tmp_501*tmp_72;
      real_t tmp_504 = tmp_501*tmp_74;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_509 = tmp_19*(tmp_24 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_511 = tmp_19*(tmp_31 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_513 = tmp_19*(tmp_38 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_7 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_2*tmp_515 + tmp_5*tmp_516;
      real_t tmp_518 = tmp_11*tmp_514 + tmp_14*tmp_515 + tmp_516*tmp_9;
      real_t tmp_519 = tmp_13*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_6;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_80;
      real_t tmp_522 = tmp_520*tmp_82;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_89;
      real_t tmp_525 = tmp_523*tmp_92;
      real_t tmp_526 = tmp_520*tmp_84;
      real_t tmp_527 = tmp_523*tmp_94;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_57;
      real_t tmp_530 = tmp_528*tmp_72;
      real_t tmp_531 = tmp_528*tmp_74;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_536 = tmp_19*(tmp_24 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_538 = tmp_19*(tmp_31 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_540 = tmp_19*(tmp_38 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_7 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_2*tmp_542 + tmp_5*tmp_543;
      real_t tmp_545 = tmp_11*tmp_541 + tmp_14*tmp_542 + tmp_543*tmp_9;
      real_t tmp_546 = tmp_13*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_6;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_80;
      real_t tmp_549 = tmp_547*tmp_82;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_89;
      real_t tmp_552 = tmp_550*tmp_92;
      real_t tmp_553 = tmp_547*tmp_84;
      real_t tmp_554 = tmp_550*tmp_94;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_57;
      real_t tmp_557 = tmp_555*tmp_72;
      real_t tmp_558 = tmp_555*tmp_74;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_563 = tmp_19*(tmp_24 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_565 = tmp_19*(tmp_31 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_567 = tmp_19*(tmp_38 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_7 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_2*tmp_569 + tmp_5*tmp_570;
      real_t tmp_572 = tmp_11*tmp_568 + tmp_14*tmp_569 + tmp_570*tmp_9;
      real_t tmp_573 = tmp_13*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_6;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_80;
      real_t tmp_576 = tmp_574*tmp_82;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_577*tmp_89;
      real_t tmp_579 = tmp_577*tmp_92;
      real_t tmp_580 = tmp_574*tmp_84;
      real_t tmp_581 = tmp_577*tmp_94;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_57*tmp_582;
      real_t tmp_584 = tmp_582*tmp_72;
      real_t tmp_585 = tmp_582*tmp_74;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_590 = tmp_19*(tmp_24 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_592 = tmp_19*(tmp_31 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_594 = tmp_19*(tmp_38 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_7 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_2*tmp_596 + tmp_5*tmp_597;
      real_t tmp_599 = tmp_11*tmp_595 + tmp_14*tmp_596 + tmp_597*tmp_9;
      real_t tmp_600 = tmp_13*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_6;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_80;
      real_t tmp_603 = tmp_601*tmp_82;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_604*tmp_89;
      real_t tmp_606 = tmp_604*tmp_92;
      real_t tmp_607 = tmp_601*tmp_84;
      real_t tmp_608 = tmp_604*tmp_94;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_57*tmp_609;
      real_t tmp_611 = tmp_609*tmp_72;
      real_t tmp_612 = tmp_609*tmp_74;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_617 = tmp_19*(tmp_24 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_619 = tmp_19*(tmp_31 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_621 = tmp_19*(tmp_38 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_7 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_2*tmp_623 + tmp_5*tmp_624;
      real_t tmp_626 = tmp_11*tmp_622 + tmp_14*tmp_623 + tmp_624*tmp_9;
      real_t tmp_627 = tmp_13*tmp_622 + tmp_4*tmp_624 + tmp_6*tmp_623;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_80;
      real_t tmp_630 = tmp_628*tmp_82;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_631*tmp_89;
      real_t tmp_633 = tmp_631*tmp_92;
      real_t tmp_634 = tmp_628*tmp_84;
      real_t tmp_635 = tmp_631*tmp_94;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_57*tmp_636;
      real_t tmp_638 = tmp_636*tmp_72;
      real_t tmp_639 = tmp_636*tmp_74;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_644 = tmp_19*(tmp_24 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_646 = tmp_19*(tmp_31 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_648 = tmp_19*(tmp_38 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_7 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_2*tmp_650 + tmp_5*tmp_651;
      real_t tmp_653 = tmp_11*tmp_649 + tmp_14*tmp_650 + tmp_651*tmp_9;
      real_t tmp_654 = tmp_13*tmp_649 + tmp_4*tmp_651 + tmp_6*tmp_650;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_80;
      real_t tmp_657 = tmp_655*tmp_82;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_658*tmp_89;
      real_t tmp_660 = tmp_658*tmp_92;
      real_t tmp_661 = tmp_655*tmp_84;
      real_t tmp_662 = tmp_658*tmp_94;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_57*tmp_663;
      real_t tmp_665 = tmp_663*tmp_72;
      real_t tmp_666 = tmp_663*tmp_74;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_1*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_95 + 0.5*p_affine_13_2*tmp_85;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_73 + 0.5*p_affine_13_1*tmp_93 + 0.5*p_affine_13_2*tmp_83;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_57*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_71 + 0.5*p_affine_13_1*tmp_91 + 0.5*p_affine_13_2*tmp_81;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 + tmp_112*tmp_127 - tmp_49*tmp_78 - tmp_79*tmp_87 - tmp_88*tmp_96) + tmp_156*(tmp_127*tmp_154 - tmp_139*tmp_78 - tmp_140*tmp_87 - tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(tmp_127*tmp_181 - tmp_166*tmp_78 - tmp_167*tmp_87 - tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(tmp_127*tmp_208 - tmp_193*tmp_78 - tmp_194*tmp_87 - tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(tmp_127*tmp_235 - tmp_220*tmp_78 - tmp_221*tmp_87 - tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(tmp_127*tmp_262 - tmp_247*tmp_78 - tmp_248*tmp_87 - tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(tmp_127*tmp_289 - tmp_274*tmp_78 - tmp_275*tmp_87 - tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(tmp_127*tmp_316 - tmp_301*tmp_78 - tmp_302*tmp_87 - tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(tmp_127*tmp_343 - tmp_328*tmp_78 - tmp_329*tmp_87 - tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(tmp_127*tmp_370 - tmp_355*tmp_78 - tmp_356*tmp_87 - tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(tmp_127*tmp_397 - tmp_382*tmp_78 - tmp_383*tmp_87 - tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(tmp_127*tmp_424 - tmp_409*tmp_78 - tmp_410*tmp_87 - tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(tmp_127*tmp_451 - tmp_436*tmp_78 - tmp_437*tmp_87 - tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(tmp_127*tmp_478 - tmp_463*tmp_78 - tmp_464*tmp_87 - tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(tmp_127*tmp_505 - tmp_490*tmp_78 - tmp_491*tmp_87 - tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(tmp_127*tmp_532 - tmp_517*tmp_78 - tmp_518*tmp_87 - tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(tmp_127*tmp_559 - tmp_544*tmp_78 - tmp_545*tmp_87 - tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(tmp_127*tmp_586 - tmp_571*tmp_78 - tmp_572*tmp_87 - tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(tmp_127*tmp_613 - tmp_598*tmp_78 - tmp_599*tmp_87 - tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(tmp_127*tmp_640 - tmp_625*tmp_78 - tmp_626*tmp_87 - tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(tmp_127*tmp_667 - tmp_652*tmp_78 - tmp_653*tmp_87 - tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_0_1 = tmp_129*(-tmp_118*tmp_674 + tmp_127*tmp_674 - tmp_49*tmp_672 - tmp_671*tmp_79 - tmp_673*tmp_88) + tmp_156*(tmp_127*tmp_675 - tmp_139*tmp_672 - tmp_140*tmp_671 - tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(tmp_127*tmp_676 - tmp_166*tmp_672 - tmp_167*tmp_671 - tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(tmp_127*tmp_677 - tmp_193*tmp_672 - tmp_194*tmp_671 - tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(tmp_127*tmp_678 - tmp_220*tmp_672 - tmp_221*tmp_671 - tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(tmp_127*tmp_679 - tmp_247*tmp_672 - tmp_248*tmp_671 - tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(tmp_127*tmp_680 - tmp_274*tmp_672 - tmp_275*tmp_671 - tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(tmp_127*tmp_681 - tmp_301*tmp_672 - tmp_302*tmp_671 - tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(tmp_127*tmp_682 - tmp_328*tmp_672 - tmp_329*tmp_671 - tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(tmp_127*tmp_683 - tmp_355*tmp_672 - tmp_356*tmp_671 - tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(tmp_127*tmp_684 - tmp_382*tmp_672 - tmp_383*tmp_671 - tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(tmp_127*tmp_685 - tmp_409*tmp_672 - tmp_410*tmp_671 - tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(tmp_127*tmp_686 - tmp_436*tmp_672 - tmp_437*tmp_671 - tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(tmp_127*tmp_687 - tmp_463*tmp_672 - tmp_464*tmp_671 - tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(tmp_127*tmp_688 - tmp_490*tmp_672 - tmp_491*tmp_671 - tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(tmp_127*tmp_689 - tmp_517*tmp_672 - tmp_518*tmp_671 - tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(tmp_127*tmp_690 - tmp_544*tmp_672 - tmp_545*tmp_671 - tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(tmp_127*tmp_691 - tmp_571*tmp_672 - tmp_572*tmp_671 - tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(tmp_127*tmp_692 - tmp_598*tmp_672 - tmp_599*tmp_671 - tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(tmp_127*tmp_693 - tmp_625*tmp_672 - tmp_626*tmp_671 - tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(tmp_127*tmp_694 - tmp_652*tmp_672 - tmp_653*tmp_671 - tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_0_2 = tmp_129*(-tmp_118*tmp_698 + tmp_127*tmp_698 - tmp_49*tmp_696 - tmp_695*tmp_79 - tmp_697*tmp_88) + tmp_156*(tmp_127*tmp_699 - tmp_139*tmp_696 - tmp_140*tmp_695 - tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(tmp_127*tmp_700 - tmp_166*tmp_696 - tmp_167*tmp_695 - tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(tmp_127*tmp_701 - tmp_193*tmp_696 - tmp_194*tmp_695 - tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(tmp_127*tmp_702 - tmp_220*tmp_696 - tmp_221*tmp_695 - tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(tmp_127*tmp_703 - tmp_247*tmp_696 - tmp_248*tmp_695 - tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(tmp_127*tmp_704 - tmp_274*tmp_696 - tmp_275*tmp_695 - tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(tmp_127*tmp_705 - tmp_301*tmp_696 - tmp_302*tmp_695 - tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(tmp_127*tmp_706 - tmp_328*tmp_696 - tmp_329*tmp_695 - tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(tmp_127*tmp_707 - tmp_355*tmp_696 - tmp_356*tmp_695 - tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(tmp_127*tmp_708 - tmp_382*tmp_696 - tmp_383*tmp_695 - tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(tmp_127*tmp_709 - tmp_409*tmp_696 - tmp_410*tmp_695 - tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(tmp_127*tmp_710 - tmp_436*tmp_696 - tmp_437*tmp_695 - tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(tmp_127*tmp_711 - tmp_463*tmp_696 - tmp_464*tmp_695 - tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(tmp_127*tmp_712 - tmp_490*tmp_696 - tmp_491*tmp_695 - tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(tmp_127*tmp_713 - tmp_517*tmp_696 - tmp_518*tmp_695 - tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(tmp_127*tmp_714 - tmp_544*tmp_696 - tmp_545*tmp_695 - tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(tmp_127*tmp_715 - tmp_571*tmp_696 - tmp_572*tmp_695 - tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(tmp_127*tmp_716 - tmp_598*tmp_696 - tmp_599*tmp_695 - tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(tmp_127*tmp_717 - tmp_625*tmp_696 - tmp_626*tmp_695 - tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(tmp_127*tmp_718 - tmp_652*tmp_696 - tmp_653*tmp_695 - tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_0_3 = tmp_129*(-tmp_118*tmp_722 + tmp_127*tmp_722 - tmp_49*tmp_720 - tmp_719*tmp_79 - tmp_721*tmp_88) + tmp_156*(tmp_127*tmp_723 - tmp_139*tmp_720 - tmp_140*tmp_719 - tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(tmp_127*tmp_724 - tmp_166*tmp_720 - tmp_167*tmp_719 - tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(tmp_127*tmp_725 - tmp_193*tmp_720 - tmp_194*tmp_719 - tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(tmp_127*tmp_726 - tmp_220*tmp_720 - tmp_221*tmp_719 - tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(tmp_127*tmp_727 - tmp_247*tmp_720 - tmp_248*tmp_719 - tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(tmp_127*tmp_728 - tmp_274*tmp_720 - tmp_275*tmp_719 - tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(tmp_127*tmp_729 - tmp_301*tmp_720 - tmp_302*tmp_719 - tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(tmp_127*tmp_730 - tmp_328*tmp_720 - tmp_329*tmp_719 - tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(tmp_127*tmp_731 - tmp_355*tmp_720 - tmp_356*tmp_719 - tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(tmp_127*tmp_732 - tmp_382*tmp_720 - tmp_383*tmp_719 - tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(tmp_127*tmp_733 - tmp_409*tmp_720 - tmp_410*tmp_719 - tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(tmp_127*tmp_734 - tmp_436*tmp_720 - tmp_437*tmp_719 - tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(tmp_127*tmp_735 - tmp_463*tmp_720 - tmp_464*tmp_719 - tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(tmp_127*tmp_736 - tmp_490*tmp_720 - tmp_491*tmp_719 - tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(tmp_127*tmp_737 - tmp_517*tmp_720 - tmp_518*tmp_719 - tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(tmp_127*tmp_738 - tmp_544*tmp_720 - tmp_545*tmp_719 - tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(tmp_127*tmp_739 - tmp_571*tmp_720 - tmp_572*tmp_719 - tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(tmp_127*tmp_740 - tmp_598*tmp_720 - tmp_599*tmp_719 - tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(tmp_127*tmp_741 - tmp_625*tmp_720 - tmp_626*tmp_719 - tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(tmp_127*tmp_742 - tmp_652*tmp_720 - tmp_653*tmp_719 - tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_26 = -p_affine_8_1;
      real_t tmp_27 = p_affine_9_1 + tmp_26;
      real_t tmp_28 = p_affine_10_1 + tmp_26;
      real_t tmp_29 = p_affine_8_1 + tmp_3;
      real_t tmp_30 = tmp_19*(0.031405749086161582*tmp_27 + 0.93718850182767688*tmp_28 + tmp_29);
      real_t tmp_31 = tmp_10 - tmp_16;
      real_t tmp_32 = -p_affine_8_0;
      real_t tmp_33 = p_affine_9_0 + tmp_32;
      real_t tmp_34 = p_affine_10_0 + tmp_32;
      real_t tmp_35 = p_affine_8_0 + tmp_0;
      real_t tmp_36 = tmp_19*(0.031405749086161582*tmp_33 + 0.93718850182767688*tmp_34 + tmp_35);
      real_t tmp_37 = tmp_24*tmp_7 + tmp_25*tmp_30 + tmp_31*tmp_36 - 1.0/4.0;
      real_t tmp_38 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_39 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_40 = tmp_12 - tmp_17;
      real_t tmp_41 = tmp_24*tmp_38 + tmp_30*tmp_39 + tmp_36*tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_43 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_44 = tmp_15 - tmp_18;
      real_t tmp_45 = tmp_24*tmp_42 + tmp_30*tmp_43 + tmp_36*tmp_44 - 1.0/4.0;
      real_t tmp_46 = tmp_1*tmp_37 + tmp_2*tmp_41 + tmp_45*tmp_5;
      real_t tmp_47 = 0.5*tmp_19;
      real_t tmp_48 = tmp_44*tmp_47;
      real_t tmp_49 = tmp_40*tmp_47;
      real_t tmp_50 = tmp_31*tmp_47;
      real_t tmp_51 = -tmp_48 - tmp_49 - tmp_50;
      real_t tmp_52 = p_affine_13_1*tmp_51;
      real_t tmp_53 = tmp_11*tmp_37 + tmp_14*tmp_41 + tmp_45*tmp_9;
      real_t tmp_54 = tmp_42*tmp_47;
      real_t tmp_55 = tmp_38*tmp_47;
      real_t tmp_56 = tmp_47*tmp_7;
      real_t tmp_57 = -tmp_54 - tmp_55 - tmp_56;
      real_t tmp_58 = p_affine_13_1*tmp_57;
      real_t tmp_59 = 1.0*tmp_19;
      real_t tmp_60 = tmp_43*tmp_59;
      real_t tmp_61 = tmp_39*tmp_59;
      real_t tmp_62 = tmp_25*tmp_59;
      real_t tmp_63 = p_affine_13_0*tmp_51 + p_affine_13_1*(-tmp_60 - tmp_61 - tmp_62) + p_affine_13_2*tmp_57;
      real_t tmp_64 = tmp_13*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_6;
      real_t tmp_65 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_66 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_67 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_68 = 2.0*std::pow((std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)*std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)) + (std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)*std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)) + (std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)*std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)), 1.0/2.0);
      real_t tmp_69 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_68;
      real_t tmp_70 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_71 = tmp_19*(0.19601935860219369*tmp_27 + 0.60796128279561268*tmp_28 + tmp_29);
      real_t tmp_72 = tmp_19*(0.19601935860219369*tmp_33 + 0.60796128279561268*tmp_34 + tmp_35);
      real_t tmp_73 = tmp_25*tmp_71 + tmp_31*tmp_72 + tmp_7*tmp_70 - 1.0/4.0;
      real_t tmp_74 = tmp_38*tmp_70 + tmp_39*tmp_71 + tmp_40*tmp_72 - 1.0/4.0;
      real_t tmp_75 = tmp_42*tmp_70 + tmp_43*tmp_71 + tmp_44*tmp_72 - 1.0/4.0;
      real_t tmp_76 = tmp_1*tmp_73 + tmp_2*tmp_74 + tmp_5*tmp_75;
      real_t tmp_77 = tmp_11*tmp_73 + tmp_14*tmp_74 + tmp_75*tmp_9;
      real_t tmp_78 = tmp_13*tmp_73 + tmp_4*tmp_75 + tmp_6*tmp_74;
      real_t tmp_79 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_68;
      real_t tmp_80 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_81 = tmp_19*(0.37605877282253791*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_82 = tmp_19*(0.37605877282253791*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_83 = tmp_25*tmp_81 + tmp_31*tmp_82 + tmp_7*tmp_80 - 1.0/4.0;
      real_t tmp_84 = tmp_38*tmp_80 + tmp_39*tmp_81 + tmp_40*tmp_82 - 1.0/4.0;
      real_t tmp_85 = tmp_42*tmp_80 + tmp_43*tmp_81 + tmp_44*tmp_82 - 1.0/4.0;
      real_t tmp_86 = tmp_1*tmp_83 + tmp_2*tmp_84 + tmp_5*tmp_85;
      real_t tmp_87 = tmp_11*tmp_83 + tmp_14*tmp_84 + tmp_85*tmp_9;
      real_t tmp_88 = tmp_13*tmp_83 + tmp_4*tmp_85 + tmp_6*tmp_84;
      real_t tmp_89 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_68;
      real_t tmp_90 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_91 = tmp_19*(0.041227165399737475*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_93 = tmp_25*tmp_91 + tmp_31*tmp_92 + tmp_7*tmp_90 - 1.0/4.0;
      real_t tmp_94 = tmp_38*tmp_90 + tmp_39*tmp_91 + tmp_40*tmp_92 - 1.0/4.0;
      real_t tmp_95 = tmp_42*tmp_90 + tmp_43*tmp_91 + tmp_44*tmp_92 - 1.0/4.0;
      real_t tmp_96 = tmp_1*tmp_93 + tmp_2*tmp_94 + tmp_5*tmp_95;
      real_t tmp_97 = tmp_11*tmp_93 + tmp_14*tmp_94 + tmp_9*tmp_95;
      real_t tmp_98 = tmp_13*tmp_93 + tmp_4*tmp_95 + tmp_6*tmp_94;
      real_t tmp_99 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_68;
      real_t tmp_100 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_101 = tmp_19*(0.40446199974765351*tmp_27 + 0.19107600050469298*tmp_28 + tmp_29);
      real_t tmp_102 = tmp_19*(0.40446199974765351*tmp_33 + 0.19107600050469298*tmp_34 + tmp_35);
      real_t tmp_103 = tmp_100*tmp_7 + tmp_101*tmp_25 + tmp_102*tmp_31 - 1.0/4.0;
      real_t tmp_104 = tmp_100*tmp_38 + tmp_101*tmp_39 + tmp_102*tmp_40 - 1.0/4.0;
      real_t tmp_105 = tmp_100*tmp_42 + tmp_101*tmp_43 + tmp_102*tmp_44 - 1.0/4.0;
      real_t tmp_106 = tmp_1*tmp_103 + tmp_104*tmp_2 + tmp_105*tmp_5;
      real_t tmp_107 = tmp_103*tmp_11 + tmp_104*tmp_14 + tmp_105*tmp_9;
      real_t tmp_108 = tmp_103*tmp_13 + tmp_104*tmp_6 + tmp_105*tmp_4;
      real_t tmp_109 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_68;
      real_t tmp_110 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_111 = tmp_19*(0.039308471900058539*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_112 = tmp_19*(0.039308471900058539*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_113 = tmp_110*tmp_7 + tmp_111*tmp_25 + tmp_112*tmp_31 - 1.0/4.0;
      real_t tmp_114 = tmp_110*tmp_38 + tmp_111*tmp_39 + tmp_112*tmp_40 - 1.0/4.0;
      real_t tmp_115 = tmp_110*tmp_42 + tmp_111*tmp_43 + tmp_112*tmp_44 - 1.0/4.0;
      real_t tmp_116 = tmp_1*tmp_113 + tmp_114*tmp_2 + tmp_115*tmp_5;
      real_t tmp_117 = tmp_11*tmp_113 + tmp_114*tmp_14 + tmp_115*tmp_9;
      real_t tmp_118 = tmp_113*tmp_13 + tmp_114*tmp_6 + tmp_115*tmp_4;
      real_t tmp_119 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_68;
      real_t tmp_120 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_121 = tmp_19*(0.93718850182767688*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_122 = tmp_19*(0.93718850182767688*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_123 = tmp_120*tmp_7 + tmp_121*tmp_25 + tmp_122*tmp_31 - 1.0/4.0;
      real_t tmp_124 = tmp_120*tmp_38 + tmp_121*tmp_39 + tmp_122*tmp_40 - 1.0/4.0;
      real_t tmp_125 = tmp_120*tmp_42 + tmp_121*tmp_43 + tmp_122*tmp_44 - 1.0/4.0;
      real_t tmp_126 = tmp_1*tmp_123 + tmp_124*tmp_2 + tmp_125*tmp_5;
      real_t tmp_127 = tmp_11*tmp_123 + tmp_124*tmp_14 + tmp_125*tmp_9;
      real_t tmp_128 = tmp_123*tmp_13 + tmp_124*tmp_6 + tmp_125*tmp_4;
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_68;
      real_t tmp_130 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_131 = tmp_19*(0.60796128279561268*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_132 = tmp_19*(0.60796128279561268*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_133 = tmp_130*tmp_7 + tmp_131*tmp_25 + tmp_132*tmp_31 - 1.0/4.0;
      real_t tmp_134 = tmp_130*tmp_38 + tmp_131*tmp_39 + tmp_132*tmp_40 - 1.0/4.0;
      real_t tmp_135 = tmp_130*tmp_42 + tmp_131*tmp_43 + tmp_132*tmp_44 - 1.0/4.0;
      real_t tmp_136 = tmp_1*tmp_133 + tmp_134*tmp_2 + tmp_135*tmp_5;
      real_t tmp_137 = tmp_11*tmp_133 + tmp_134*tmp_14 + tmp_135*tmp_9;
      real_t tmp_138 = tmp_13*tmp_133 + tmp_134*tmp_6 + tmp_135*tmp_4;
      real_t tmp_139 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_68;
      real_t tmp_140 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_19*(0.19107600050469298*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_142 = tmp_19*(0.19107600050469298*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_143 = tmp_140*tmp_7 + tmp_141*tmp_25 + tmp_142*tmp_31 - 1.0/4.0;
      real_t tmp_144 = tmp_140*tmp_38 + tmp_141*tmp_39 + tmp_142*tmp_40 - 1.0/4.0;
      real_t tmp_145 = tmp_140*tmp_42 + tmp_141*tmp_43 + tmp_142*tmp_44 - 1.0/4.0;
      real_t tmp_146 = tmp_1*tmp_143 + tmp_144*tmp_2 + tmp_145*tmp_5;
      real_t tmp_147 = tmp_11*tmp_143 + tmp_14*tmp_144 + tmp_145*tmp_9;
      real_t tmp_148 = tmp_13*tmp_143 + tmp_144*tmp_6 + tmp_145*tmp_4;
      real_t tmp_149 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_68;
      real_t tmp_150 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_151 = tmp_19*(0.031405749086161582*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_152 = tmp_19*(0.031405749086161582*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_153 = tmp_150*tmp_7 + tmp_151*tmp_25 + tmp_152*tmp_31 - 1.0/4.0;
      real_t tmp_154 = tmp_150*tmp_38 + tmp_151*tmp_39 + tmp_152*tmp_40 - 1.0/4.0;
      real_t tmp_155 = tmp_150*tmp_42 + tmp_151*tmp_43 + tmp_152*tmp_44 - 1.0/4.0;
      real_t tmp_156 = tmp_1*tmp_153 + tmp_154*tmp_2 + tmp_155*tmp_5;
      real_t tmp_157 = tmp_11*tmp_153 + tmp_14*tmp_154 + tmp_155*tmp_9;
      real_t tmp_158 = tmp_13*tmp_153 + tmp_154*tmp_6 + tmp_155*tmp_4;
      real_t tmp_159 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_68;
      real_t tmp_160 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_161 = tmp_19*(0.19601935860219369*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_162 = tmp_19*(0.19601935860219369*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_163 = tmp_160*tmp_7 + tmp_161*tmp_25 + tmp_162*tmp_31 - 1.0/4.0;
      real_t tmp_164 = tmp_160*tmp_38 + tmp_161*tmp_39 + tmp_162*tmp_40 - 1.0/4.0;
      real_t tmp_165 = tmp_160*tmp_42 + tmp_161*tmp_43 + tmp_162*tmp_44 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_5;
      real_t tmp_167 = tmp_11*tmp_163 + tmp_14*tmp_164 + tmp_165*tmp_9;
      real_t tmp_168 = tmp_13*tmp_163 + tmp_164*tmp_6 + tmp_165*tmp_4;
      real_t tmp_169 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_68;
      real_t tmp_170 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_171 = tmp_19*(0.40446199974765351*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_172 = tmp_19*(0.40446199974765351*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_173 = tmp_170*tmp_7 + tmp_171*tmp_25 + tmp_172*tmp_31 - 1.0/4.0;
      real_t tmp_174 = tmp_170*tmp_38 + tmp_171*tmp_39 + tmp_172*tmp_40 - 1.0/4.0;
      real_t tmp_175 = tmp_170*tmp_42 + tmp_171*tmp_43 + tmp_172*tmp_44 - 1.0/4.0;
      real_t tmp_176 = tmp_1*tmp_173 + tmp_174*tmp_2 + tmp_175*tmp_5;
      real_t tmp_177 = tmp_11*tmp_173 + tmp_14*tmp_174 + tmp_175*tmp_9;
      real_t tmp_178 = tmp_13*tmp_173 + tmp_174*tmp_6 + tmp_175*tmp_4;
      real_t tmp_179 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_68;
      real_t tmp_180 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_181 = tmp_19*(0.37605877282253791*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_182 = tmp_19*(0.37605877282253791*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_183 = tmp_180*tmp_7 + tmp_181*tmp_25 + tmp_182*tmp_31 - 1.0/4.0;
      real_t tmp_184 = tmp_180*tmp_38 + tmp_181*tmp_39 + tmp_182*tmp_40 - 1.0/4.0;
      real_t tmp_185 = tmp_180*tmp_42 + tmp_181*tmp_43 + tmp_182*tmp_44 - 1.0/4.0;
      real_t tmp_186 = tmp_1*tmp_183 + tmp_184*tmp_2 + tmp_185*tmp_5;
      real_t tmp_187 = tmp_11*tmp_183 + tmp_14*tmp_184 + tmp_185*tmp_9;
      real_t tmp_188 = tmp_13*tmp_183 + tmp_184*tmp_6 + tmp_185*tmp_4;
      real_t tmp_189 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_68;
      real_t tmp_190 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_191 = tmp_19*(0.1711304259088916*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_192 = tmp_19*(0.1711304259088916*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_193 = tmp_190*tmp_7 + tmp_191*tmp_25 + tmp_192*tmp_31 - 1.0/4.0;
      real_t tmp_194 = tmp_190*tmp_38 + tmp_191*tmp_39 + tmp_192*tmp_40 - 1.0/4.0;
      real_t tmp_195 = tmp_190*tmp_42 + tmp_191*tmp_43 + tmp_192*tmp_44 - 1.0/4.0;
      real_t tmp_196 = tmp_1*tmp_193 + tmp_194*tmp_2 + tmp_195*tmp_5;
      real_t tmp_197 = tmp_11*tmp_193 + tmp_14*tmp_194 + tmp_195*tmp_9;
      real_t tmp_198 = tmp_13*tmp_193 + tmp_194*tmp_6 + tmp_195*tmp_4;
      real_t tmp_199 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_68;
      real_t tmp_200 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_201 = tmp_19*(0.78764240869137092*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_202 = tmp_19*(0.78764240869137092*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_203 = tmp_200*tmp_7 + tmp_201*tmp_25 + tmp_202*tmp_31 - 1.0/4.0;
      real_t tmp_204 = tmp_200*tmp_38 + tmp_201*tmp_39 + tmp_202*tmp_40 - 1.0/4.0;
      real_t tmp_205 = tmp_200*tmp_42 + tmp_201*tmp_43 + tmp_202*tmp_44 - 1.0/4.0;
      real_t tmp_206 = tmp_1*tmp_203 + tmp_2*tmp_204 + tmp_205*tmp_5;
      real_t tmp_207 = tmp_11*tmp_203 + tmp_14*tmp_204 + tmp_205*tmp_9;
      real_t tmp_208 = tmp_13*tmp_203 + tmp_204*tmp_6 + tmp_205*tmp_4;
      real_t tmp_209 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_68;
      real_t tmp_210 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_211 = tmp_19*(0.58463275527740355*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_212 = tmp_19*(0.58463275527740355*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_213 = tmp_210*tmp_7 + tmp_211*tmp_25 + tmp_212*tmp_31 - 1.0/4.0;
      real_t tmp_214 = tmp_210*tmp_38 + tmp_211*tmp_39 + tmp_212*tmp_40 - 1.0/4.0;
      real_t tmp_215 = tmp_210*tmp_42 + tmp_211*tmp_43 + tmp_212*tmp_44 - 1.0/4.0;
      real_t tmp_216 = tmp_1*tmp_213 + tmp_2*tmp_214 + tmp_215*tmp_5;
      real_t tmp_217 = tmp_11*tmp_213 + tmp_14*tmp_214 + tmp_215*tmp_9;
      real_t tmp_218 = tmp_13*tmp_213 + tmp_214*tmp_6 + tmp_215*tmp_4;
      real_t tmp_219 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_68;
      real_t tmp_220 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_19*(0.041227165399737475*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_222 = tmp_19*(0.041227165399737475*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_223 = tmp_220*tmp_7 + tmp_221*tmp_25 + tmp_222*tmp_31 - 1.0/4.0;
      real_t tmp_224 = tmp_220*tmp_38 + tmp_221*tmp_39 + tmp_222*tmp_40 - 1.0/4.0;
      real_t tmp_225 = tmp_220*tmp_42 + tmp_221*tmp_43 + tmp_222*tmp_44 - 1.0/4.0;
      real_t tmp_226 = tmp_1*tmp_223 + tmp_2*tmp_224 + tmp_225*tmp_5;
      real_t tmp_227 = tmp_11*tmp_223 + tmp_14*tmp_224 + tmp_225*tmp_9;
      real_t tmp_228 = tmp_13*tmp_223 + tmp_224*tmp_6 + tmp_225*tmp_4;
      real_t tmp_229 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_68;
      real_t tmp_230 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_231 = tmp_19*(0.039308471900058539*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_232 = tmp_19*(0.039308471900058539*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_233 = tmp_230*tmp_7 + tmp_231*tmp_25 + tmp_232*tmp_31 - 1.0/4.0;
      real_t tmp_234 = tmp_230*tmp_38 + tmp_231*tmp_39 + tmp_232*tmp_40 - 1.0/4.0;
      real_t tmp_235 = tmp_230*tmp_42 + tmp_231*tmp_43 + tmp_232*tmp_44 - 1.0/4.0;
      real_t tmp_236 = tmp_1*tmp_233 + tmp_2*tmp_234 + tmp_235*tmp_5;
      real_t tmp_237 = tmp_11*tmp_233 + tmp_14*tmp_234 + tmp_235*tmp_9;
      real_t tmp_238 = tmp_13*tmp_233 + tmp_234*tmp_6 + tmp_235*tmp_4;
      real_t tmp_239 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_68;
      real_t tmp_240 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_241 = tmp_19*(0.78764240869137092*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_242 = tmp_19*(0.78764240869137092*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_243 = tmp_240*tmp_7 + tmp_241*tmp_25 + tmp_242*tmp_31 - 1.0/4.0;
      real_t tmp_244 = tmp_240*tmp_38 + tmp_241*tmp_39 + tmp_242*tmp_40 - 1.0/4.0;
      real_t tmp_245 = tmp_240*tmp_42 + tmp_241*tmp_43 + tmp_242*tmp_44 - 1.0/4.0;
      real_t tmp_246 = tmp_1*tmp_243 + tmp_2*tmp_244 + tmp_245*tmp_5;
      real_t tmp_247 = tmp_11*tmp_243 + tmp_14*tmp_244 + tmp_245*tmp_9;
      real_t tmp_248 = tmp_13*tmp_243 + tmp_244*tmp_6 + tmp_245*tmp_4;
      real_t tmp_249 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_68;
      real_t tmp_250 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_251 = tmp_19*(0.58463275527740355*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_252 = tmp_19*(0.58463275527740355*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_253 = tmp_25*tmp_251 + tmp_250*tmp_7 + tmp_252*tmp_31 - 1.0/4.0;
      real_t tmp_254 = tmp_250*tmp_38 + tmp_251*tmp_39 + tmp_252*tmp_40 - 1.0/4.0;
      real_t tmp_255 = tmp_250*tmp_42 + tmp_251*tmp_43 + tmp_252*tmp_44 - 1.0/4.0;
      real_t tmp_256 = tmp_1*tmp_253 + tmp_2*tmp_254 + tmp_255*tmp_5;
      real_t tmp_257 = tmp_11*tmp_253 + tmp_14*tmp_254 + tmp_255*tmp_9;
      real_t tmp_258 = tmp_13*tmp_253 + tmp_254*tmp_6 + tmp_255*tmp_4;
      real_t tmp_259 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_68;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_261 = tmp_19*(0.1711304259088916*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_262 = tmp_19*(0.1711304259088916*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_263 = tmp_25*tmp_261 + tmp_260*tmp_7 + tmp_262*tmp_31 - 1.0/4.0;
      real_t tmp_264 = tmp_260*tmp_38 + tmp_261*tmp_39 + tmp_262*tmp_40 - 1.0/4.0;
      real_t tmp_265 = tmp_260*tmp_42 + tmp_261*tmp_43 + tmp_262*tmp_44 - 1.0/4.0;
      real_t tmp_266 = tmp_1*tmp_263 + tmp_2*tmp_264 + tmp_265*tmp_5;
      real_t tmp_267 = tmp_11*tmp_263 + tmp_14*tmp_264 + tmp_265*tmp_9;
      real_t tmp_268 = tmp_13*tmp_263 + tmp_264*tmp_6 + tmp_265*tmp_4;
      real_t tmp_269 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_68;
      real_t tmp_270 = p_affine_13_1*tmp_56;
      real_t tmp_271 = p_affine_13_1*tmp_50;
      real_t tmp_272 = p_affine_13_0*tmp_50 + p_affine_13_1*tmp_62 + p_affine_13_2*tmp_56;
      real_t tmp_273 = p_affine_13_1*tmp_55;
      real_t tmp_274 = p_affine_13_1*tmp_49;
      real_t tmp_275 = p_affine_13_0*tmp_49 + p_affine_13_1*tmp_61 + p_affine_13_2*tmp_55;
      real_t tmp_276 = p_affine_13_1*tmp_54;
      real_t tmp_277 = p_affine_13_1*tmp_48;
      real_t tmp_278 = p_affine_13_0*tmp_48 + p_affine_13_1*tmp_60 + p_affine_13_2*tmp_54;
      real_t a_0_0 = tmp_109*(-tmp_106*tmp_52 - tmp_107*tmp_58 - tmp_108*tmp_63) + tmp_119*(-tmp_116*tmp_52 - tmp_117*tmp_58 - tmp_118*tmp_63) + tmp_129*(-tmp_126*tmp_52 - tmp_127*tmp_58 - tmp_128*tmp_63) + tmp_139*(-tmp_136*tmp_52 - tmp_137*tmp_58 - tmp_138*tmp_63) + tmp_149*(-tmp_146*tmp_52 - tmp_147*tmp_58 - tmp_148*tmp_63) + tmp_159*(-tmp_156*tmp_52 - tmp_157*tmp_58 - tmp_158*tmp_63) + tmp_169*(-tmp_166*tmp_52 - tmp_167*tmp_58 - tmp_168*tmp_63) + tmp_179*(-tmp_176*tmp_52 - tmp_177*tmp_58 - tmp_178*tmp_63) + tmp_189*(-tmp_186*tmp_52 - tmp_187*tmp_58 - tmp_188*tmp_63) + tmp_199*(-tmp_196*tmp_52 - tmp_197*tmp_58 - tmp_198*tmp_63) + tmp_209*(-tmp_206*tmp_52 - tmp_207*tmp_58 - tmp_208*tmp_63) + tmp_219*(-tmp_216*tmp_52 - tmp_217*tmp_58 - tmp_218*tmp_63) + tmp_229*(-tmp_226*tmp_52 - tmp_227*tmp_58 - tmp_228*tmp_63) + tmp_239*(-tmp_236*tmp_52 - tmp_237*tmp_58 - tmp_238*tmp_63) + tmp_249*(-tmp_246*tmp_52 - tmp_247*tmp_58 - tmp_248*tmp_63) + tmp_259*(-tmp_256*tmp_52 - tmp_257*tmp_58 - tmp_258*tmp_63) + tmp_269*(-tmp_266*tmp_52 - tmp_267*tmp_58 - tmp_268*tmp_63) + tmp_69*(-tmp_46*tmp_52 - tmp_53*tmp_58 - tmp_63*tmp_64) + tmp_79*(-tmp_52*tmp_76 - tmp_58*tmp_77 - tmp_63*tmp_78) + tmp_89*(-tmp_52*tmp_86 - tmp_58*tmp_87 - tmp_63*tmp_88) + tmp_99*(-tmp_52*tmp_96 - tmp_58*tmp_97 - tmp_63*tmp_98);
      real_t a_0_1 = tmp_109*(-tmp_106*tmp_271 - tmp_107*tmp_270 - tmp_108*tmp_272) + tmp_119*(-tmp_116*tmp_271 - tmp_117*tmp_270 - tmp_118*tmp_272) + tmp_129*(-tmp_126*tmp_271 - tmp_127*tmp_270 - tmp_128*tmp_272) + tmp_139*(-tmp_136*tmp_271 - tmp_137*tmp_270 - tmp_138*tmp_272) + tmp_149*(-tmp_146*tmp_271 - tmp_147*tmp_270 - tmp_148*tmp_272) + tmp_159*(-tmp_156*tmp_271 - tmp_157*tmp_270 - tmp_158*tmp_272) + tmp_169*(-tmp_166*tmp_271 - tmp_167*tmp_270 - tmp_168*tmp_272) + tmp_179*(-tmp_176*tmp_271 - tmp_177*tmp_270 - tmp_178*tmp_272) + tmp_189*(-tmp_186*tmp_271 - tmp_187*tmp_270 - tmp_188*tmp_272) + tmp_199*(-tmp_196*tmp_271 - tmp_197*tmp_270 - tmp_198*tmp_272) + tmp_209*(-tmp_206*tmp_271 - tmp_207*tmp_270 - tmp_208*tmp_272) + tmp_219*(-tmp_216*tmp_271 - tmp_217*tmp_270 - tmp_218*tmp_272) + tmp_229*(-tmp_226*tmp_271 - tmp_227*tmp_270 - tmp_228*tmp_272) + tmp_239*(-tmp_236*tmp_271 - tmp_237*tmp_270 - tmp_238*tmp_272) + tmp_249*(-tmp_246*tmp_271 - tmp_247*tmp_270 - tmp_248*tmp_272) + tmp_259*(-tmp_256*tmp_271 - tmp_257*tmp_270 - tmp_258*tmp_272) + tmp_269*(-tmp_266*tmp_271 - tmp_267*tmp_270 - tmp_268*tmp_272) + tmp_69*(-tmp_270*tmp_53 - tmp_271*tmp_46 - tmp_272*tmp_64) + tmp_79*(-tmp_270*tmp_77 - tmp_271*tmp_76 - tmp_272*tmp_78) + tmp_89*(-tmp_270*tmp_87 - tmp_271*tmp_86 - tmp_272*tmp_88) + tmp_99*(-tmp_270*tmp_97 - tmp_271*tmp_96 - tmp_272*tmp_98);
      real_t a_0_2 = tmp_109*(-tmp_106*tmp_274 - tmp_107*tmp_273 - tmp_108*tmp_275) + tmp_119*(-tmp_116*tmp_274 - tmp_117*tmp_273 - tmp_118*tmp_275) + tmp_129*(-tmp_126*tmp_274 - tmp_127*tmp_273 - tmp_128*tmp_275) + tmp_139*(-tmp_136*tmp_274 - tmp_137*tmp_273 - tmp_138*tmp_275) + tmp_149*(-tmp_146*tmp_274 - tmp_147*tmp_273 - tmp_148*tmp_275) + tmp_159*(-tmp_156*tmp_274 - tmp_157*tmp_273 - tmp_158*tmp_275) + tmp_169*(-tmp_166*tmp_274 - tmp_167*tmp_273 - tmp_168*tmp_275) + tmp_179*(-tmp_176*tmp_274 - tmp_177*tmp_273 - tmp_178*tmp_275) + tmp_189*(-tmp_186*tmp_274 - tmp_187*tmp_273 - tmp_188*tmp_275) + tmp_199*(-tmp_196*tmp_274 - tmp_197*tmp_273 - tmp_198*tmp_275) + tmp_209*(-tmp_206*tmp_274 - tmp_207*tmp_273 - tmp_208*tmp_275) + tmp_219*(-tmp_216*tmp_274 - tmp_217*tmp_273 - tmp_218*tmp_275) + tmp_229*(-tmp_226*tmp_274 - tmp_227*tmp_273 - tmp_228*tmp_275) + tmp_239*(-tmp_236*tmp_274 - tmp_237*tmp_273 - tmp_238*tmp_275) + tmp_249*(-tmp_246*tmp_274 - tmp_247*tmp_273 - tmp_248*tmp_275) + tmp_259*(-tmp_256*tmp_274 - tmp_257*tmp_273 - tmp_258*tmp_275) + tmp_269*(-tmp_266*tmp_274 - tmp_267*tmp_273 - tmp_268*tmp_275) + tmp_69*(-tmp_273*tmp_53 - tmp_274*tmp_46 - tmp_275*tmp_64) + tmp_79*(-tmp_273*tmp_77 - tmp_274*tmp_76 - tmp_275*tmp_78) + tmp_89*(-tmp_273*tmp_87 - tmp_274*tmp_86 - tmp_275*tmp_88) + tmp_99*(-tmp_273*tmp_97 - tmp_274*tmp_96 - tmp_275*tmp_98);
      real_t a_0_3 = tmp_109*(-tmp_106*tmp_277 - tmp_107*tmp_276 - tmp_108*tmp_278) + tmp_119*(-tmp_116*tmp_277 - tmp_117*tmp_276 - tmp_118*tmp_278) + tmp_129*(-tmp_126*tmp_277 - tmp_127*tmp_276 - tmp_128*tmp_278) + tmp_139*(-tmp_136*tmp_277 - tmp_137*tmp_276 - tmp_138*tmp_278) + tmp_149*(-tmp_146*tmp_277 - tmp_147*tmp_276 - tmp_148*tmp_278) + tmp_159*(-tmp_156*tmp_277 - tmp_157*tmp_276 - tmp_158*tmp_278) + tmp_169*(-tmp_166*tmp_277 - tmp_167*tmp_276 - tmp_168*tmp_278) + tmp_179*(-tmp_176*tmp_277 - tmp_177*tmp_276 - tmp_178*tmp_278) + tmp_189*(-tmp_186*tmp_277 - tmp_187*tmp_276 - tmp_188*tmp_278) + tmp_199*(-tmp_196*tmp_277 - tmp_197*tmp_276 - tmp_198*tmp_278) + tmp_209*(-tmp_206*tmp_277 - tmp_207*tmp_276 - tmp_208*tmp_278) + tmp_219*(-tmp_216*tmp_277 - tmp_217*tmp_276 - tmp_218*tmp_278) + tmp_229*(-tmp_226*tmp_277 - tmp_227*tmp_276 - tmp_228*tmp_278) + tmp_239*(-tmp_236*tmp_277 - tmp_237*tmp_276 - tmp_238*tmp_278) + tmp_249*(-tmp_246*tmp_277 - tmp_247*tmp_276 - tmp_248*tmp_278) + tmp_259*(-tmp_256*tmp_277 - tmp_257*tmp_276 - tmp_258*tmp_278) + tmp_269*(-tmp_266*tmp_277 - tmp_267*tmp_276 - tmp_268*tmp_278) + tmp_69*(-tmp_276*tmp_53 - tmp_277*tmp_46 - tmp_278*tmp_64) + tmp_79*(-tmp_276*tmp_77 - tmp_277*tmp_76 - tmp_278*tmp_78) + tmp_89*(-tmp_276*tmp_87 - tmp_277*tmp_86 - tmp_278*tmp_88) + tmp_99*(-tmp_276*tmp_97 - tmp_277*tmp_96 - tmp_278*tmp_98);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormP1E_1 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormP1E_1( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id11 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502282*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.87382197101699555*p_affine_2_0, 0.063089014491502282*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.87382197101699555*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.50142650965817914*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.50142650965817914*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502227*p_affine_0_0 + 0.87382197101699555*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.063089014491502227*p_affine_0_1 + 0.87382197101699555*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.50142650965817914*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.50142650965817914*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id5 );
      Scalar_Variable_Coefficient_2D_mu( 0.87382197101699566*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.87382197101699566*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id6 );
      Scalar_Variable_Coefficient_2D_mu( 0.50142650965817914*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.50142650965817914*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id7 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id8 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id9 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id10 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id11 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = 1.0 / (tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = 1.0*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = tmp_10*tmp_6 + tmp_4*tmp_8;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2*tmp_1*tmp_8 - 2*tmp_10;
      real_t tmp_14 = 0.5*tmp_7;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_14*tmp_3;
      real_t tmp_17 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_18 = tmp_14*tmp_17;
      real_t tmp_19 = tmp_15*tmp_5 + tmp_15*tmp_9 + tmp_16*tmp_6 + tmp_18*tmp_3;
      real_t tmp_20 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_19;
      real_t tmp_21 = -4*tmp_16 - 4*tmp_18;
      real_t tmp_22 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_23 = 0.025422453185103409*tmp_22;
      real_t tmp_24 = tmp_11*tmp_13;
      real_t tmp_25 = tmp_19*tmp_21;
      real_t tmp_26 = 0.058393137863189684*tmp_22;
      real_t tmp_27 = 0.041425537809186785*tmp_22;
      real_t tmp_28 = 0.041425537809186785*tmp_22;
      real_t tmp_29 = 0.025422453185103409*tmp_22;
      real_t tmp_30 = 0.058393137863189684*tmp_22;
      real_t tmp_31 = 0.025422453185103409*tmp_22;
      real_t tmp_32 = 0.058393137863189684*tmp_22;
      real_t tmp_33 = 0.041425537809186785*tmp_22;
      real_t tmp_34 = 0.041425537809186785*tmp_22;
      real_t tmp_35 = 0.041425537809186785*tmp_22;
      real_t tmp_36 = 0.041425537809186785*tmp_22;
      real_t tmp_37 = 2.0*tmp_7;
      real_t tmp_38 = tmp_37*tmp_9;
      real_t tmp_39 = tmp_3*tmp_37;
      real_t tmp_40 = tmp_11*tmp_38;
      real_t tmp_41 = tmp_19*tmp_39;
      real_t tmp_42 = tmp_1*tmp_37;
      real_t tmp_43 = tmp_17*tmp_37;
      real_t tmp_44 = tmp_11*tmp_42;
      real_t tmp_45 = tmp_19*tmp_43;
      real_t a_0_0 = tmp_23*(tmp_12*tmp_13 + tmp_20*tmp_21) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_25) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_25) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_25) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_25) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_25) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_25) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_25) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_25) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_24 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_25);
      real_t a_1_0 = tmp_23*(tmp_12*tmp_38 + tmp_20*tmp_39) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_41) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_41) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_41) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_41) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_41) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_41) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_40 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_41);
      real_t a_2_0 = tmp_23*(tmp_12*tmp_42 + tmp_20*tmp_43) + tmp_26*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_45) + tmp_27*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_45) + tmp_28*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_45) + tmp_29*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_45) + tmp_30*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_45) + tmp_31*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_45) + tmp_32*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_45) + tmp_33*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_45) + tmp_34*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_45) + tmp_35*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_45) + tmp_36*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_44 + Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_45);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_2_0 + tmp_0;
      real_t tmp_7 = p_affine_1_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + tmp_3;
      real_t tmp_11 = tmp_8*(tmp_10 + 0.046910077030668018*tmp_9);
      real_t tmp_12 = tmp_11*tmp_2;
      real_t tmp_13 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_14 = p_affine_6_0 + tmp_0;
      real_t tmp_15 = tmp_8*(0.046910077030668018*tmp_13 + tmp_14);
      real_t tmp_16 = tmp_15*tmp_4;
      real_t tmp_17 = tmp_12 + tmp_16;
      real_t tmp_18 = tmp_17 - 1.0/3.0;
      real_t tmp_19 = tmp_1*tmp_11;
      real_t tmp_20 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_21 = tmp_15*tmp_20;
      real_t tmp_22 = tmp_19 + tmp_21;
      real_t tmp_23 = tmp_22 - 1.0/3.0;
      real_t tmp_24 = p_affine_10_1*(tmp_1*tmp_18 + tmp_23*tmp_6);
      real_t tmp_25 = 0.5*tmp_8;
      real_t tmp_26 = tmp_25*tmp_4;
      real_t tmp_27 = tmp_20*tmp_25;
      real_t tmp_28 = -tmp_26 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_18*tmp_7 + tmp_23*tmp_4;
      real_t tmp_31 = 1.0*tmp_8;
      real_t tmp_32 = tmp_1*tmp_31;
      real_t tmp_33 = tmp_2*tmp_31;
      real_t tmp_34 = 0.5*p_affine_10_0*tmp_28 + 0.5*p_affine_10_1*(-tmp_32 - tmp_33);
      real_t tmp_35 = -tmp_12 - tmp_16 - tmp_19 - tmp_21 + 1;
      real_t tmp_36 = std::abs(std::pow((tmp_13*tmp_13) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_37 = 3/tmp_36;
      real_t tmp_38 = tmp_30*tmp_37;
      real_t tmp_39 = tmp_1*tmp_25;
      real_t tmp_40 = 0.5*p_affine_10_0*(tmp_2*tmp_39 + tmp_26*tmp_7 + tmp_27*tmp_4 + tmp_39*tmp_6) + 0.5*p_affine_10_1*(tmp_31*tmp_5 + tmp_33*tmp_7);
      real_t tmp_41 = 2*tmp_36;
      real_t tmp_42 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_41;
      real_t tmp_43 = tmp_8*(tmp_10 + 0.23076534494715845*tmp_9);
      real_t tmp_44 = tmp_2*tmp_43;
      real_t tmp_45 = tmp_8*(0.23076534494715845*tmp_13 + tmp_14);
      real_t tmp_46 = tmp_4*tmp_45;
      real_t tmp_47 = tmp_44 + tmp_46;
      real_t tmp_48 = tmp_47 - 1.0/3.0;
      real_t tmp_49 = tmp_1*tmp_43;
      real_t tmp_50 = tmp_20*tmp_45;
      real_t tmp_51 = tmp_49 + tmp_50;
      real_t tmp_52 = tmp_51 - 1.0/3.0;
      real_t tmp_53 = tmp_1*tmp_48 + tmp_52*tmp_6;
      real_t tmp_54 = p_affine_10_1*tmp_29;
      real_t tmp_55 = tmp_4*tmp_52 + tmp_48*tmp_7;
      real_t tmp_56 = -tmp_44 - tmp_46 - tmp_49 - tmp_50 + 1;
      real_t tmp_57 = tmp_37*tmp_55;
      real_t tmp_58 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_41;
      real_t tmp_59 = tmp_8*(tmp_10 + 0.5*tmp_9);
      real_t tmp_60 = tmp_2*tmp_59;
      real_t tmp_61 = tmp_8*(0.5*tmp_13 + tmp_14);
      real_t tmp_62 = tmp_4*tmp_61;
      real_t tmp_63 = tmp_60 + tmp_62;
      real_t tmp_64 = tmp_63 - 1.0/3.0;
      real_t tmp_65 = tmp_1*tmp_59;
      real_t tmp_66 = tmp_20*tmp_61;
      real_t tmp_67 = tmp_65 + tmp_66;
      real_t tmp_68 = tmp_67 - 1.0/3.0;
      real_t tmp_69 = tmp_1*tmp_64 + tmp_6*tmp_68;
      real_t tmp_70 = tmp_4*tmp_68 + tmp_64*tmp_7;
      real_t tmp_71 = -tmp_60 - tmp_62 - tmp_65 - tmp_66 + 1;
      real_t tmp_72 = tmp_37*tmp_70;
      real_t tmp_73 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_41;
      real_t tmp_74 = tmp_8*(tmp_10 + 0.7692346550528415*tmp_9);
      real_t tmp_75 = tmp_2*tmp_74;
      real_t tmp_76 = tmp_8*(0.7692346550528415*tmp_13 + tmp_14);
      real_t tmp_77 = tmp_4*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = tmp_78 - 1.0/3.0;
      real_t tmp_80 = tmp_1*tmp_74;
      real_t tmp_81 = tmp_20*tmp_76;
      real_t tmp_82 = tmp_80 + tmp_81;
      real_t tmp_83 = tmp_82 - 1.0/3.0;
      real_t tmp_84 = tmp_1*tmp_79 + tmp_6*tmp_83;
      real_t tmp_85 = tmp_4*tmp_83 + tmp_7*tmp_79;
      real_t tmp_86 = -tmp_75 - tmp_77 - tmp_80 - tmp_81 + 1;
      real_t tmp_87 = tmp_37*tmp_85;
      real_t tmp_88 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_41;
      real_t tmp_89 = tmp_8*(tmp_10 + 0.95308992296933193*tmp_9);
      real_t tmp_90 = tmp_2*tmp_89;
      real_t tmp_91 = tmp_8*(0.95308992296933193*tmp_13 + tmp_14);
      real_t tmp_92 = tmp_4*tmp_91;
      real_t tmp_93 = tmp_90 + tmp_92;
      real_t tmp_94 = tmp_93 - 1.0/3.0;
      real_t tmp_95 = tmp_1*tmp_89;
      real_t tmp_96 = tmp_20*tmp_91;
      real_t tmp_97 = tmp_95 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/3.0;
      real_t tmp_99 = tmp_1*tmp_94 + tmp_6*tmp_98;
      real_t tmp_100 = tmp_4*tmp_98 + tmp_7*tmp_94;
      real_t tmp_101 = -tmp_90 - tmp_92 - tmp_95 - tmp_96 + 1;
      real_t tmp_102 = tmp_100*tmp_37;
      real_t tmp_103 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_41;
      real_t tmp_104 = 0.25*tmp_8;
      real_t tmp_105 = tmp_104*tmp_4;
      real_t tmp_106 = 0.5*p_affine_10_0*tmp_26 + 0.5*p_affine_10_1*tmp_33;
      real_t tmp_107 = p_affine_10_1*tmp_105;
      real_t tmp_108 = tmp_104*tmp_20;
      real_t tmp_109 = 0.5*p_affine_10_0*tmp_27 + 0.5*p_affine_10_1*tmp_32;
      real_t tmp_110 = p_affine_10_1*tmp_108;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_34 + tmp_101*tmp_102 - tmp_101*tmp_40 - tmp_54*tmp_99) + tmp_42*(-tmp_24*tmp_29 - tmp_30*tmp_34 + tmp_35*tmp_38 - tmp_35*tmp_40) + tmp_58*(-tmp_34*tmp_55 - tmp_40*tmp_56 - tmp_53*tmp_54 + tmp_56*tmp_57) + tmp_73*(-tmp_34*tmp_70 - tmp_40*tmp_71 - tmp_54*tmp_69 + tmp_71*tmp_72) + tmp_88*(-tmp_34*tmp_85 - tmp_40*tmp_86 - tmp_54*tmp_84 + tmp_86*tmp_87);
      real_t a_1_0 = tmp_103*(-tmp_100*tmp_106 + tmp_102*tmp_93 - tmp_107*tmp_99 - tmp_40*tmp_93) + tmp_42*(-tmp_105*tmp_24 - tmp_106*tmp_30 + tmp_17*tmp_38 - tmp_17*tmp_40) + tmp_58*(-tmp_106*tmp_55 - tmp_107*tmp_53 - tmp_40*tmp_47 + tmp_47*tmp_57) + tmp_73*(-tmp_106*tmp_70 - tmp_107*tmp_69 - tmp_40*tmp_63 + tmp_63*tmp_72) + tmp_88*(-tmp_106*tmp_85 - tmp_107*tmp_84 - tmp_40*tmp_78 + tmp_78*tmp_87);
      real_t a_2_0 = tmp_103*(-tmp_100*tmp_109 + tmp_102*tmp_97 - tmp_110*tmp_99 - tmp_40*tmp_97) + tmp_42*(-tmp_108*tmp_24 - tmp_109*tmp_30 + tmp_22*tmp_38 - tmp_22*tmp_40) + tmp_58*(-tmp_109*tmp_55 - tmp_110*tmp_53 - tmp_40*tmp_51 + tmp_51*tmp_57) + tmp_73*(-tmp_109*tmp_70 - tmp_110*tmp_69 - tmp_40*tmp_67 + tmp_67*tmp_72) + tmp_88*(-tmp_109*tmp_85 - tmp_110*tmp_84 - tmp_40*tmp_82 + tmp_82*tmp_87);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_3_0;
      real_t tmp_1 = p_affine_4_0 + tmp_0;
      real_t tmp_2 = p_affine_3_0 - p_affine_5_0;
      real_t tmp_3 = -p_affine_3_1;
      real_t tmp_4 = p_affine_5_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_5_0 + tmp_0;
      real_t tmp_7 = p_affine_4_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + 0.046910077030668018*tmp_9;
      real_t tmp_11 = tmp_8*(tmp_10 + tmp_3);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + 0.046910077030668018*tmp_12;
      real_t tmp_14 = tmp_8*(tmp_0 + tmp_13);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_4 - 1.0/3.0;
      real_t tmp_16 = p_affine_3_1 - p_affine_4_1;
      real_t tmp_17 = tmp_1*tmp_11 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = p_affine_10_1*(tmp_1*tmp_15 + tmp_17*tmp_6);
      real_t tmp_19 = -p_affine_0_1;
      real_t tmp_20 = p_affine_2_1 + tmp_19;
      real_t tmp_21 = -p_affine_0_0;
      real_t tmp_22 = p_affine_1_0 + tmp_21;
      real_t tmp_23 = 1.0 / (tmp_20*tmp_22 - (p_affine_1_1 + tmp_19)*(p_affine_2_0 + tmp_21));
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_25 - tmp_27;
      real_t tmp_29 = 0.5*tmp_28;
      real_t tmp_30 = tmp_15*tmp_7 + tmp_17*tmp_4;
      real_t tmp_31 = 1.0*tmp_23;
      real_t tmp_32 = tmp_22*tmp_31;
      real_t tmp_33 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = 0.5*p_affine_10_0*tmp_28 + 0.5*p_affine_10_1*(-tmp_32 - tmp_34);
      real_t tmp_36 = tmp_23*(tmp_10 + tmp_19);
      real_t tmp_37 = tmp_22*tmp_36;
      real_t tmp_38 = tmp_33*tmp_36;
      real_t tmp_39 = tmp_23*(tmp_13 + tmp_21);
      real_t tmp_40 = tmp_20*tmp_39;
      real_t tmp_41 = tmp_26*tmp_39;
      real_t tmp_42 = -tmp_37 - tmp_38 - tmp_40 - tmp_41 + 1;
      real_t tmp_43 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_44 = 3/tmp_43;
      real_t tmp_45 = tmp_30*tmp_44;
      real_t tmp_46 = 1.0*tmp_8;
      real_t tmp_47 = 0.5*tmp_8;
      real_t tmp_48 = tmp_1*tmp_47;
      real_t tmp_49 = tmp_4*tmp_47;
      real_t tmp_50 = 0.5*p_affine_10_0*(tmp_16*tmp_49 + tmp_2*tmp_48 + tmp_48*tmp_6 + tmp_49*tmp_7) + 0.5*p_affine_10_1*(tmp_2*tmp_46*tmp_7 + tmp_46*tmp_5);
      real_t tmp_51 = 2*tmp_43;
      real_t tmp_52 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_51;
      real_t tmp_53 = p_affine_6_1 + 0.23076534494715845*tmp_9;
      real_t tmp_54 = tmp_8*(tmp_3 + tmp_53);
      real_t tmp_55 = p_affine_6_0 + 0.23076534494715845*tmp_12;
      real_t tmp_56 = tmp_8*(tmp_0 + tmp_55);
      real_t tmp_57 = tmp_2*tmp_54 + tmp_4*tmp_56 - 1.0/3.0;
      real_t tmp_58 = tmp_1*tmp_54 + tmp_16*tmp_56 - 1.0/3.0;
      real_t tmp_59 = tmp_1*tmp_57 + tmp_58*tmp_6;
      real_t tmp_60 = p_affine_10_1*tmp_29;
      real_t tmp_61 = tmp_4*tmp_58 + tmp_57*tmp_7;
      real_t tmp_62 = tmp_23*(tmp_19 + tmp_53);
      real_t tmp_63 = tmp_22*tmp_62;
      real_t tmp_64 = tmp_33*tmp_62;
      real_t tmp_65 = tmp_23*(tmp_21 + tmp_55);
      real_t tmp_66 = tmp_20*tmp_65;
      real_t tmp_67 = tmp_26*tmp_65;
      real_t tmp_68 = -tmp_63 - tmp_64 - tmp_66 - tmp_67 + 1;
      real_t tmp_69 = tmp_44*tmp_61;
      real_t tmp_70 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51;
      real_t tmp_71 = p_affine_6_1 + 0.5*tmp_9;
      real_t tmp_72 = tmp_8*(tmp_3 + tmp_71);
      real_t tmp_73 = p_affine_6_0 + 0.5*tmp_12;
      real_t tmp_74 = tmp_8*(tmp_0 + tmp_73);
      real_t tmp_75 = tmp_2*tmp_72 + tmp_4*tmp_74 - 1.0/3.0;
      real_t tmp_76 = tmp_1*tmp_72 + tmp_16*tmp_74 - 1.0/3.0;
      real_t tmp_77 = tmp_1*tmp_75 + tmp_6*tmp_76;
      real_t tmp_78 = tmp_4*tmp_76 + tmp_7*tmp_75;
      real_t tmp_79 = tmp_23*(tmp_19 + tmp_71);
      real_t tmp_80 = tmp_22*tmp_79;
      real_t tmp_81 = tmp_33*tmp_79;
      real_t tmp_82 = tmp_23*(tmp_21 + tmp_73);
      real_t tmp_83 = tmp_20*tmp_82;
      real_t tmp_84 = tmp_26*tmp_82;
      real_t tmp_85 = -tmp_80 - tmp_81 - tmp_83 - tmp_84 + 1;
      real_t tmp_86 = tmp_44*tmp_78;
      real_t tmp_87 = 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51;
      real_t tmp_88 = p_affine_6_1 + 0.7692346550528415*tmp_9;
      real_t tmp_89 = tmp_8*(tmp_3 + tmp_88);
      real_t tmp_90 = p_affine_6_0 + 0.7692346550528415*tmp_12;
      real_t tmp_91 = tmp_8*(tmp_0 + tmp_90);
      real_t tmp_92 = tmp_2*tmp_89 + tmp_4*tmp_91 - 1.0/3.0;
      real_t tmp_93 = tmp_1*tmp_89 + tmp_16*tmp_91 - 1.0/3.0;
      real_t tmp_94 = tmp_1*tmp_92 + tmp_6*tmp_93;
      real_t tmp_95 = tmp_4*tmp_93 + tmp_7*tmp_92;
      real_t tmp_96 = tmp_23*(tmp_19 + tmp_88);
      real_t tmp_97 = tmp_22*tmp_96;
      real_t tmp_98 = tmp_33*tmp_96;
      real_t tmp_99 = tmp_23*(tmp_21 + tmp_90);
      real_t tmp_100 = tmp_20*tmp_99;
      real_t tmp_101 = tmp_26*tmp_99;
      real_t tmp_102 = -tmp_100 - tmp_101 - tmp_97 - tmp_98 + 1;
      real_t tmp_103 = tmp_44*tmp_95;
      real_t tmp_104 = 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_51;
      real_t tmp_105 = p_affine_6_1 + 0.95308992296933193*tmp_9;
      real_t tmp_106 = tmp_8*(tmp_105 + tmp_3);
      real_t tmp_107 = p_affine_6_0 + 0.95308992296933193*tmp_12;
      real_t tmp_108 = tmp_8*(tmp_0 + tmp_107);
      real_t tmp_109 = tmp_106*tmp_2 + tmp_108*tmp_4 - 1.0/3.0;
      real_t tmp_110 = tmp_1*tmp_106 + tmp_108*tmp_16 - 1.0/3.0;
      real_t tmp_111 = tmp_1*tmp_109 + tmp_110*tmp_6;
      real_t tmp_112 = tmp_109*tmp_7 + tmp_110*tmp_4;
      real_t tmp_113 = tmp_23*(tmp_105 + tmp_19);
      real_t tmp_114 = tmp_113*tmp_22;
      real_t tmp_115 = tmp_113*tmp_33;
      real_t tmp_116 = tmp_23*(tmp_107 + tmp_21);
      real_t tmp_117 = tmp_116*tmp_20;
      real_t tmp_118 = tmp_116*tmp_26;
      real_t tmp_119 = -tmp_114 - tmp_115 - tmp_117 - tmp_118 + 1;
      real_t tmp_120 = tmp_112*tmp_44;
      real_t tmp_121 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_51;
      real_t tmp_122 = 0.25*tmp_23;
      real_t tmp_123 = tmp_122*tmp_20;
      real_t tmp_124 = 0.5*p_affine_10_0*tmp_25 + 0.5*p_affine_10_1*tmp_34;
      real_t tmp_125 = tmp_38 + tmp_40;
      real_t tmp_126 = p_affine_10_1*tmp_123;
      real_t tmp_127 = tmp_64 + tmp_66;
      real_t tmp_128 = tmp_81 + tmp_83;
      real_t tmp_129 = tmp_100 + tmp_98;
      real_t tmp_130 = tmp_115 + tmp_117;
      real_t tmp_131 = tmp_122*tmp_26;
      real_t tmp_132 = 0.5*p_affine_10_0*tmp_27 + 0.5*p_affine_10_1*tmp_32;
      real_t tmp_133 = tmp_37 + tmp_41;
      real_t tmp_134 = p_affine_10_1*tmp_131;
      real_t tmp_135 = tmp_63 + tmp_67;
      real_t tmp_136 = tmp_80 + tmp_84;
      real_t tmp_137 = tmp_101 + tmp_97;
      real_t tmp_138 = tmp_114 + tmp_118;
      real_t a_0_0 = tmp_104*(-tmp_102*tmp_103 - tmp_102*tmp_50 + tmp_35*tmp_95 + tmp_60*tmp_94) + tmp_121*(tmp_111*tmp_60 + tmp_112*tmp_35 - tmp_119*tmp_120 - tmp_119*tmp_50) + tmp_52*(tmp_18*tmp_29 + tmp_30*tmp_35 - tmp_42*tmp_45 - tmp_42*tmp_50) + tmp_70*(tmp_35*tmp_61 - tmp_50*tmp_68 + tmp_59*tmp_60 - tmp_68*tmp_69) + tmp_87*(tmp_35*tmp_78 - tmp_50*tmp_85 + tmp_60*tmp_77 - tmp_85*tmp_86);
      real_t a_1_0 = tmp_104*(-tmp_103*tmp_129 + tmp_124*tmp_95 + tmp_126*tmp_94 - tmp_129*tmp_50) + tmp_121*(tmp_111*tmp_126 + tmp_112*tmp_124 - tmp_120*tmp_130 - tmp_130*tmp_50) + tmp_52*(tmp_123*tmp_18 + tmp_124*tmp_30 - tmp_125*tmp_45 - tmp_125*tmp_50) + tmp_70*(tmp_124*tmp_61 + tmp_126*tmp_59 - tmp_127*tmp_50 - tmp_127*tmp_69) + tmp_87*(tmp_124*tmp_78 + tmp_126*tmp_77 - tmp_128*tmp_50 - tmp_128*tmp_86);
      real_t a_2_0 = tmp_104*(-tmp_103*tmp_137 + tmp_132*tmp_95 + tmp_134*tmp_94 - tmp_137*tmp_50) + tmp_121*(tmp_111*tmp_134 + tmp_112*tmp_132 - tmp_120*tmp_138 - tmp_138*tmp_50) + tmp_52*(tmp_131*tmp_18 + tmp_132*tmp_30 - tmp_133*tmp_45 - tmp_133*tmp_50) + tmp_70*(tmp_132*tmp_61 + tmp_134*tmp_59 - tmp_135*tmp_50 - tmp_135*tmp_69) + tmp_87*(tmp_132*tmp_78 + tmp_134*tmp_77 - tmp_136*tmp_50 - tmp_136*tmp_86);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_1_1 + tmp_2;
      real_t tmp_5 = 1.0 / (tmp_1*tmp_3 - tmp_4*(p_affine_2_0 + tmp_0));
      real_t tmp_6 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_7 = p_affine_6_1 + tmp_2;
      real_t tmp_8 = tmp_5*(0.046910077030668018*tmp_6 + tmp_7);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + tmp_0;
      real_t tmp_14 = tmp_5*(0.046910077030668018*tmp_12 + tmp_13);
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_14*tmp_16;
      real_t tmp_18 = tmp_11 + tmp_15;
      real_t tmp_19 = tmp_17 + tmp_9;
      real_t tmp_20 = 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id0*(tmp_3*(tmp_19 - 1.0/3.0) + tmp_4*(tmp_18 - 1.0/3.0));
      real_t tmp_21 = tmp_5*(0.23076534494715845*tmp_6 + tmp_7);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_10*tmp_21;
      real_t tmp_24 = tmp_5*(0.23076534494715845*tmp_12 + tmp_13);
      real_t tmp_25 = tmp_24*tmp_3;
      real_t tmp_26 = tmp_16*tmp_24;
      real_t tmp_27 = tmp_23 + tmp_25;
      real_t tmp_28 = tmp_22 + tmp_26;
      real_t tmp_29 = 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id1*(tmp_3*(tmp_28 - 1.0/3.0) + tmp_4*(tmp_27 - 1.0/3.0));
      real_t tmp_30 = tmp_5*(0.5*tmp_6 + tmp_7);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_10*tmp_30;
      real_t tmp_33 = tmp_5*(0.5*tmp_12 + tmp_13);
      real_t tmp_34 = tmp_3*tmp_33;
      real_t tmp_35 = tmp_16*tmp_33;
      real_t tmp_36 = tmp_32 + tmp_34;
      real_t tmp_37 = tmp_31 + tmp_35;
      real_t tmp_38 = 1.706666666666667*Scalar_Variable_Coefficient_2D_mu_out0_id2*(tmp_3*(tmp_37 - 1.0/3.0) + tmp_4*(tmp_36 - 1.0/3.0));
      real_t tmp_39 = tmp_5*(0.7692346550528415*tmp_6 + tmp_7);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_5*(0.7692346550528415*tmp_12 + tmp_13);
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_16*tmp_42;
      real_t tmp_45 = tmp_41 + tmp_43;
      real_t tmp_46 = tmp_40 + tmp_44;
      real_t tmp_47 = 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id3*(tmp_3*(tmp_46 - 1.0/3.0) + tmp_4*(tmp_45 - 1.0/3.0));
      real_t tmp_48 = tmp_5*(0.95308992296933193*tmp_6 + tmp_7);
      real_t tmp_49 = tmp_1*tmp_48;
      real_t tmp_50 = tmp_10*tmp_48;
      real_t tmp_51 = tmp_5*(0.95308992296933193*tmp_12 + tmp_13);
      real_t tmp_52 = tmp_3*tmp_51;
      real_t tmp_53 = tmp_16*tmp_51;
      real_t tmp_54 = tmp_50 + tmp_52;
      real_t tmp_55 = tmp_49 + tmp_53;
      real_t tmp_56 = 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id4*(tmp_3*(tmp_55 - 1.0/3.0) + tmp_4*(tmp_54 - 1.0/3.0));
      real_t a_0_0 = tmp_20*(-tmp_11 - tmp_15 - tmp_17 - tmp_9 + 1) + tmp_29*(-tmp_22 - tmp_23 - tmp_25 - tmp_26 + 1) + tmp_38*(-tmp_31 - tmp_32 - tmp_34 - tmp_35 + 1) + tmp_47*(-tmp_40 - tmp_41 - tmp_43 - tmp_44 + 1) + tmp_56*(-tmp_49 - tmp_50 - tmp_52 - tmp_53 + 1);
      real_t a_1_0 = tmp_18*tmp_20 + tmp_27*tmp_29 + tmp_36*tmp_38 + tmp_45*tmp_47 + tmp_54*tmp_56;
      real_t a_2_0 = tmp_19*tmp_20 + tmp_28*tmp_29 + tmp_37*tmp_38 + tmp_46*tmp_47 + tmp_55*tmp_56;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_3_0 + tmp_2;
      real_t tmp_4 = -p_affine_0_2;
      real_t tmp_5 = p_affine_2_2 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_2_0 + tmp_2;
      real_t tmp_8 = p_affine_3_2 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_2_1 + tmp_0;
      real_t tmp_12 = p_affine_1_0 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_8;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = p_affine_1_2 + tmp_4;
      real_t tmp_16 = tmp_15*tmp_7;
      real_t tmp_17 = tmp_12*tmp_5;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_13 - tmp_18;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_16 - tmp_17;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_23 + tmp_14*tmp_25;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = -tmp_1*tmp_7 + tmp_11*tmp_12;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = tmp_1*tmp_3 - tmp_12*tmp_14;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_3 + tmp_14*tmp_7;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_34 + tmp_14*tmp_32 + tmp_15*tmp_37 + tmp_38*tmp_5 + tmp_39*tmp_8;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = tmp_1*tmp_5 - tmp_11*tmp_15;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = -tmp_1*tmp_8 + tmp_14*tmp_15;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_11*tmp_8 - tmp_14*tmp_5;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_45 + tmp_12*tmp_37 + tmp_14*tmp_43 + tmp_3*tmp_39 + tmp_38*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_1_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_2_0 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_3_0 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_3;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_0;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_12 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_2*tmp_49 + tmp_5*tmp_57;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_54*tmp_59;
      real_t tmp_61 = tmp_46*tmp_59;
      real_t tmp_62 = tmp_33*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_1;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_11*tmp_41 + tmp_14*tmp_49 + tmp_57*tmp_9;
      real_t tmp_67 = tmp_50*tmp_59;
      real_t tmp_68 = tmp_42*tmp_59;
      real_t tmp_69 = tmp_59*tmp_7;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_13*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_52*tmp_73;
      real_t tmp_75 = tmp_44*tmp_73;
      real_t tmp_76 = tmp_26*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*tmp_63 + 0.5*p_affine_13_1*(-tmp_74 - tmp_75 - tmp_76) + 0.5*p_affine_13_2*tmp_70;
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_26*tmp_59;
      real_t tmp_86 = tmp_44*tmp_59;
      real_t tmp_87 = tmp_52*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_1*tmp_85 + tmp_13*tmp_62 + tmp_2*tmp_86 + tmp_4*tmp_60 + tmp_5*tmp_87 + tmp_6*tmp_61) + 0.5*p_affine_13_1*(tmp_13*tmp_76 + tmp_4*tmp_74 + tmp_6*tmp_75) + 0.5*p_affine_13_2*(tmp_11*tmp_85 + tmp_13*tmp_69 + tmp_14*tmp_86 + tmp_4*tmp_67 + tmp_6*tmp_68 + tmp_87*tmp_9);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_2 + tmp_108*tmp_5;
      real_t tmp_110 = tmp_103*tmp_14 + tmp_108*tmp_9 + tmp_11*tmp_98;
      real_t tmp_111 = tmp_103*tmp_6 + tmp_108*tmp_4 + tmp_13*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_2 + tmp_132*tmp_5;
      real_t tmp_134 = tmp_11*tmp_122 + tmp_127*tmp_14 + tmp_132*tmp_9;
      real_t tmp_135 = tmp_122*tmp_13 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_2 + tmp_156*tmp_5;
      real_t tmp_158 = tmp_11*tmp_146 + tmp_14*tmp_151 + tmp_156*tmp_9;
      real_t tmp_159 = tmp_13*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_2 + tmp_180*tmp_5;
      real_t tmp_182 = tmp_11*tmp_170 + tmp_14*tmp_175 + tmp_180*tmp_9;
      real_t tmp_183 = tmp_13*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_2 + tmp_204*tmp_5;
      real_t tmp_206 = tmp_11*tmp_194 + tmp_14*tmp_199 + tmp_204*tmp_9;
      real_t tmp_207 = tmp_13*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_2*tmp_223 + tmp_228*tmp_5;
      real_t tmp_230 = tmp_11*tmp_218 + tmp_14*tmp_223 + tmp_228*tmp_9;
      real_t tmp_231 = tmp_13*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_2*tmp_247 + tmp_252*tmp_5;
      real_t tmp_254 = tmp_11*tmp_242 + tmp_14*tmp_247 + tmp_252*tmp_9;
      real_t tmp_255 = tmp_13*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_2*tmp_271 + tmp_276*tmp_5;
      real_t tmp_278 = tmp_11*tmp_266 + tmp_14*tmp_271 + tmp_276*tmp_9;
      real_t tmp_279 = tmp_13*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_2*tmp_295 + tmp_300*tmp_5;
      real_t tmp_302 = tmp_11*tmp_290 + tmp_14*tmp_295 + tmp_300*tmp_9;
      real_t tmp_303 = tmp_13*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_2*tmp_319 + tmp_324*tmp_5;
      real_t tmp_326 = tmp_11*tmp_314 + tmp_14*tmp_319 + tmp_324*tmp_9;
      real_t tmp_327 = tmp_13*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_2*tmp_343 + tmp_348*tmp_5;
      real_t tmp_350 = tmp_11*tmp_338 + tmp_14*tmp_343 + tmp_348*tmp_9;
      real_t tmp_351 = tmp_13*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_2*tmp_367 + tmp_372*tmp_5;
      real_t tmp_374 = tmp_11*tmp_362 + tmp_14*tmp_367 + tmp_372*tmp_9;
      real_t tmp_375 = tmp_13*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_2*tmp_391 + tmp_396*tmp_5;
      real_t tmp_398 = tmp_11*tmp_386 + tmp_14*tmp_391 + tmp_396*tmp_9;
      real_t tmp_399 = tmp_13*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_2*tmp_415 + tmp_420*tmp_5;
      real_t tmp_422 = tmp_11*tmp_410 + tmp_14*tmp_415 + tmp_420*tmp_9;
      real_t tmp_423 = tmp_13*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_2*tmp_439 + tmp_444*tmp_5;
      real_t tmp_446 = tmp_11*tmp_434 + tmp_14*tmp_439 + tmp_444*tmp_9;
      real_t tmp_447 = tmp_13*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_2*tmp_463 + tmp_468*tmp_5;
      real_t tmp_470 = tmp_11*tmp_458 + tmp_14*tmp_463 + tmp_468*tmp_9;
      real_t tmp_471 = tmp_13*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_2*tmp_487 + tmp_492*tmp_5;
      real_t tmp_494 = tmp_11*tmp_482 + tmp_14*tmp_487 + tmp_492*tmp_9;
      real_t tmp_495 = tmp_13*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_2*tmp_511 + tmp_5*tmp_516;
      real_t tmp_518 = tmp_11*tmp_506 + tmp_14*tmp_511 + tmp_516*tmp_9;
      real_t tmp_519 = tmp_13*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_2*tmp_535 + tmp_5*tmp_540;
      real_t tmp_542 = tmp_11*tmp_530 + tmp_14*tmp_535 + tmp_540*tmp_9;
      real_t tmp_543 = tmp_13*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_2*tmp_559 + tmp_5*tmp_564;
      real_t tmp_566 = tmp_11*tmp_554 + tmp_14*tmp_559 + tmp_564*tmp_9;
      real_t tmp_567 = tmp_13*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_1*tmp_19;
      real_t tmp_572 = tmp_571*tmp_7;
      real_t tmp_573 = tmp_33*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_62 + 0.5*p_affine_13_1*tmp_76 + 0.5*p_affine_13_2*tmp_69;
      real_t tmp_575 = tmp_42*tmp_571;
      real_t tmp_576 = tmp_46*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_61 + 0.5*p_affine_13_1*tmp_75 + 0.5*p_affine_13_2*tmp_68;
      real_t tmp_578 = tmp_50*tmp_571;
      real_t tmp_579 = tmp_54*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_60 + 0.5*p_affine_13_1*tmp_74 + 0.5*p_affine_13_2*tmp_67;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_1_0 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_2_0 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_3_0 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_4_0;
      real_t tmp_1 = p_affine_5_0 + tmp_0;
      real_t tmp_2 = p_affine_6_0 + tmp_0;
      real_t tmp_3 = -p_affine_4_1;
      real_t tmp_4 = p_affine_7_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_7_0 + tmp_0;
      real_t tmp_7 = p_affine_6_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_4_2;
      real_t tmp_11 = p_affine_7_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_5_2 + tmp_10;
      real_t tmp_14 = p_affine_5_1 + tmp_3;
      real_t tmp_15 = p_affine_6_2 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_11*tmp_2;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = p_affine_8_2 + tmp_10;
      real_t tmp_21 = -p_affine_8_2;
      real_t tmp_22 = p_affine_9_2 + tmp_21;
      real_t tmp_23 = p_affine_10_2 + tmp_21;
      real_t tmp_24 = 0.031405749086161582*tmp_22 + 0.93718850182767688*tmp_23;
      real_t tmp_25 = tmp_19*(tmp_20 + tmp_24);
      real_t tmp_26 = tmp_16 - tmp_18;
      real_t tmp_27 = p_affine_8_1 + tmp_3;
      real_t tmp_28 = -p_affine_8_1;
      real_t tmp_29 = p_affine_9_1 + tmp_28;
      real_t tmp_30 = p_affine_10_1 + tmp_28;
      real_t tmp_31 = 0.031405749086161582*tmp_29 + 0.93718850182767688*tmp_30;
      real_t tmp_32 = tmp_19*(tmp_27 + tmp_31);
      real_t tmp_33 = tmp_12 - tmp_17;
      real_t tmp_34 = p_affine_8_0 + tmp_0;
      real_t tmp_35 = -p_affine_8_0;
      real_t tmp_36 = p_affine_9_0 + tmp_35;
      real_t tmp_37 = p_affine_10_0 + tmp_35;
      real_t tmp_38 = 0.031405749086161582*tmp_36 + 0.93718850182767688*tmp_37;
      real_t tmp_39 = tmp_19*(tmp_34 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_9 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = -tmp_1*tmp_4 + tmp_14*tmp_6;
      real_t tmp_42 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = -tmp_11*tmp_14 + tmp_13*tmp_4;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = tmp_1*tmp_7 - tmp_14*tmp_2;
      real_t tmp_46 = -tmp_1*tmp_15 + tmp_13*tmp_2;
      real_t tmp_47 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_2*tmp_44 + tmp_48*tmp_6;
      real_t tmp_50 = -p_affine_0_1;
      real_t tmp_51 = p_affine_1_1 + tmp_50;
      real_t tmp_52 = -p_affine_0_2;
      real_t tmp_53 = p_affine_2_2 + tmp_52;
      real_t tmp_54 = tmp_51*tmp_53;
      real_t tmp_55 = p_affine_2_1 + tmp_50;
      real_t tmp_56 = p_affine_1_2 + tmp_52;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = tmp_54 - tmp_57;
      real_t tmp_59 = -p_affine_0_0;
      real_t tmp_60 = p_affine_1_0 + tmp_59;
      real_t tmp_61 = p_affine_3_2 + tmp_52;
      real_t tmp_62 = tmp_55*tmp_61;
      real_t tmp_63 = p_affine_2_0 + tmp_59;
      real_t tmp_64 = p_affine_3_1 + tmp_50;
      real_t tmp_65 = tmp_56*tmp_64;
      real_t tmp_66 = p_affine_3_0 + tmp_59;
      real_t tmp_67 = tmp_53*tmp_64;
      real_t tmp_68 = tmp_51*tmp_61;
      real_t tmp_69 = 1.0 / (tmp_54*tmp_66 - tmp_57*tmp_66 + tmp_60*tmp_62 - tmp_60*tmp_67 + tmp_63*tmp_65 - tmp_63*tmp_68);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_58*tmp_70;
      real_t tmp_72 = tmp_65 - tmp_68;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = tmp_62 - tmp_67;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_1;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_11*tmp_48 + tmp_13*tmp_40 + tmp_15*tmp_44;
      real_t tmp_80 = -tmp_51*tmp_63 + tmp_55*tmp_60;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = tmp_51*tmp_66 - tmp_60*tmp_64;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = -tmp_55*tmp_66 + tmp_63*tmp_64;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_14*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_7;
      real_t tmp_89 = -tmp_53*tmp_60 + tmp_56*tmp_63;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = -tmp_56*tmp_66 + tmp_60*tmp_61;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = tmp_53*tmp_66 - tmp_61*tmp_63;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*(-tmp_91 - tmp_93 - tmp_95) + 0.5*p_affine_13_2*tmp_86;
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_24 + tmp_97);
      real_t tmp_99 = tmp_80*tmp_98;
      real_t tmp_100 = tmp_82*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_50;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_31);
      real_t tmp_103 = tmp_102*tmp_89;
      real_t tmp_104 = tmp_102*tmp_92;
      real_t tmp_105 = tmp_84*tmp_98;
      real_t tmp_106 = tmp_102*tmp_94;
      real_t tmp_107 = p_affine_8_0 + tmp_59;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_38);
      real_t tmp_109 = tmp_108*tmp_58;
      real_t tmp_110 = tmp_108*tmp_72;
      real_t tmp_111 = tmp_108*tmp_74;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)*std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)) + (std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)*std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)) + (std::abs(tmp_114*tmp_23 - tmp_115*tmp_37)*std::abs(tmp_114*tmp_23 - tmp_115*tmp_37));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_120*tmp_26;
      real_t tmp_122 = tmp_120*tmp_42;
      real_t tmp_123 = tmp_120*tmp_46;
      real_t tmp_124 = tmp_120*tmp_14;
      real_t tmp_125 = tmp_120*tmp_7;
      real_t tmp_126 = tmp_120*tmp_4;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_1*tmp_121 + tmp_122*tmp_2 + tmp_123*tmp_6 + tmp_124*tmp_33 + tmp_125*tmp_43 + tmp_126*tmp_47) + 0.5*p_affine_13_1*(tmp_119*tmp_14*tmp_26 + tmp_119*tmp_4*tmp_46 + tmp_119*tmp_42*tmp_7) + 0.5*p_affine_13_2*(tmp_11*tmp_123 + tmp_121*tmp_13 + tmp_122*tmp_15 + tmp_124*tmp_9 + tmp_125*tmp_41 + tmp_126*tmp_45);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_22 + 0.60796128279561268*tmp_23;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_20);
      real_t tmp_132 = 0.19601935860219369*tmp_29 + 0.60796128279561268*tmp_30;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_27);
      real_t tmp_134 = 0.19601935860219369*tmp_36 + 0.60796128279561268*tmp_37;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_34);
      real_t tmp_136 = tmp_131*tmp_9 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_2 + tmp_138*tmp_6;
      real_t tmp_140 = tmp_11*tmp_138 + tmp_13*tmp_136 + tmp_137*tmp_15;
      real_t tmp_141 = tmp_136*tmp_14 + tmp_137*tmp_7 + tmp_138*tmp_4;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_80;
      real_t tmp_144 = tmp_142*tmp_82;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_89;
      real_t tmp_147 = tmp_145*tmp_92;
      real_t tmp_148 = tmp_142*tmp_84;
      real_t tmp_149 = tmp_145*tmp_94;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_58;
      real_t tmp_152 = tmp_150*tmp_72;
      real_t tmp_153 = tmp_150*tmp_74;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_20);
      real_t tmp_159 = 0.37605877282253791*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_27);
      real_t tmp_161 = 0.37605877282253791*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_34);
      real_t tmp_163 = tmp_158*tmp_9 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_6;
      real_t tmp_167 = tmp_11*tmp_165 + tmp_13*tmp_163 + tmp_15*tmp_164;
      real_t tmp_168 = tmp_14*tmp_163 + tmp_164*tmp_7 + tmp_165*tmp_4;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_80;
      real_t tmp_171 = tmp_169*tmp_82;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_89;
      real_t tmp_174 = tmp_172*tmp_92;
      real_t tmp_175 = tmp_169*tmp_84;
      real_t tmp_176 = tmp_172*tmp_94;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_58;
      real_t tmp_179 = tmp_177*tmp_72;
      real_t tmp_180 = tmp_177*tmp_74;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_20);
      real_t tmp_186 = 0.041227165399737475*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_27);
      real_t tmp_188 = 0.041227165399737475*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_34);
      real_t tmp_190 = tmp_185*tmp_9 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_2 + tmp_192*tmp_6;
      real_t tmp_194 = tmp_11*tmp_192 + tmp_13*tmp_190 + tmp_15*tmp_191;
      real_t tmp_195 = tmp_14*tmp_190 + tmp_191*tmp_7 + tmp_192*tmp_4;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_80;
      real_t tmp_198 = tmp_196*tmp_82;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_89;
      real_t tmp_201 = tmp_199*tmp_92;
      real_t tmp_202 = tmp_196*tmp_84;
      real_t tmp_203 = tmp_199*tmp_94;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_58;
      real_t tmp_206 = tmp_204*tmp_72;
      real_t tmp_207 = tmp_204*tmp_74;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_22 + 0.19107600050469298*tmp_23;
      real_t tmp_212 = tmp_19*(tmp_20 + tmp_211);
      real_t tmp_213 = 0.40446199974765351*tmp_29 + 0.19107600050469298*tmp_30;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_27);
      real_t tmp_215 = 0.40446199974765351*tmp_36 + 0.19107600050469298*tmp_37;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_34);
      real_t tmp_217 = tmp_212*tmp_9 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_2*tmp_218 + tmp_219*tmp_6;
      real_t tmp_221 = tmp_11*tmp_219 + tmp_13*tmp_217 + tmp_15*tmp_218;
      real_t tmp_222 = tmp_14*tmp_217 + tmp_218*tmp_7 + tmp_219*tmp_4;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_80;
      real_t tmp_225 = tmp_223*tmp_82;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_89;
      real_t tmp_228 = tmp_226*tmp_92;
      real_t tmp_229 = tmp_223*tmp_84;
      real_t tmp_230 = tmp_226*tmp_94;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_58;
      real_t tmp_233 = tmp_231*tmp_72;
      real_t tmp_234 = tmp_231*tmp_74;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_239 = tmp_19*(tmp_20 + tmp_238);
      real_t tmp_240 = 0.039308471900058539*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_27);
      real_t tmp_242 = 0.039308471900058539*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_34);
      real_t tmp_244 = tmp_239*tmp_9 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_2*tmp_245 + tmp_246*tmp_6;
      real_t tmp_248 = tmp_11*tmp_246 + tmp_13*tmp_244 + tmp_15*tmp_245;
      real_t tmp_249 = tmp_14*tmp_244 + tmp_245*tmp_7 + tmp_246*tmp_4;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_80;
      real_t tmp_252 = tmp_250*tmp_82;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_89;
      real_t tmp_255 = tmp_253*tmp_92;
      real_t tmp_256 = tmp_250*tmp_84;
      real_t tmp_257 = tmp_253*tmp_94;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_58;
      real_t tmp_260 = tmp_258*tmp_72;
      real_t tmp_261 = tmp_258*tmp_74;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_266 = tmp_19*(tmp_20 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_27);
      real_t tmp_269 = 0.93718850182767688*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_34);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_9 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_2*tmp_272 + tmp_273*tmp_6;
      real_t tmp_275 = tmp_11*tmp_273 + tmp_13*tmp_271 + tmp_15*tmp_272;
      real_t tmp_276 = tmp_14*tmp_271 + tmp_272*tmp_7 + tmp_273*tmp_4;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_80;
      real_t tmp_279 = tmp_277*tmp_82;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_89;
      real_t tmp_282 = tmp_280*tmp_92;
      real_t tmp_283 = tmp_277*tmp_84;
      real_t tmp_284 = tmp_280*tmp_94;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_58;
      real_t tmp_287 = tmp_285*tmp_72;
      real_t tmp_288 = tmp_285*tmp_74;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_293 = tmp_19*(tmp_20 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_295 = tmp_19*(tmp_27 + tmp_294);
      real_t tmp_296 = 0.60796128279561268*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_34);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_9 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_2*tmp_299 + tmp_300*tmp_6;
      real_t tmp_302 = tmp_11*tmp_300 + tmp_13*tmp_298 + tmp_15*tmp_299;
      real_t tmp_303 = tmp_14*tmp_298 + tmp_299*tmp_7 + tmp_300*tmp_4;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_80;
      real_t tmp_306 = tmp_304*tmp_82;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_89;
      real_t tmp_309 = tmp_307*tmp_92;
      real_t tmp_310 = tmp_304*tmp_84;
      real_t tmp_311 = tmp_307*tmp_94;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_58;
      real_t tmp_314 = tmp_312*tmp_72;
      real_t tmp_315 = tmp_312*tmp_74;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_320 = tmp_19*(tmp_20 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_322 = tmp_19*(tmp_27 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_34);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_9 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_2*tmp_326 + tmp_327*tmp_6;
      real_t tmp_329 = tmp_11*tmp_327 + tmp_13*tmp_325 + tmp_15*tmp_326;
      real_t tmp_330 = tmp_14*tmp_325 + tmp_326*tmp_7 + tmp_327*tmp_4;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_80;
      real_t tmp_333 = tmp_331*tmp_82;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_89;
      real_t tmp_336 = tmp_334*tmp_92;
      real_t tmp_337 = tmp_331*tmp_84;
      real_t tmp_338 = tmp_334*tmp_94;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_58;
      real_t tmp_341 = tmp_339*tmp_72;
      real_t tmp_342 = tmp_339*tmp_74;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_347 = tmp_19*(tmp_20 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_349 = tmp_19*(tmp_27 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_351 = tmp_19*(tmp_34 + tmp_350);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_9 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_2*tmp_353 + tmp_354*tmp_6;
      real_t tmp_356 = tmp_11*tmp_354 + tmp_13*tmp_352 + tmp_15*tmp_353;
      real_t tmp_357 = tmp_14*tmp_352 + tmp_353*tmp_7 + tmp_354*tmp_4;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_80;
      real_t tmp_360 = tmp_358*tmp_82;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_89;
      real_t tmp_363 = tmp_361*tmp_92;
      real_t tmp_364 = tmp_358*tmp_84;
      real_t tmp_365 = tmp_361*tmp_94;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_58;
      real_t tmp_368 = tmp_366*tmp_72;
      real_t tmp_369 = tmp_366*tmp_74;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_374 = tmp_19*(tmp_20 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_376 = tmp_19*(tmp_27 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_378 = tmp_19*(tmp_34 + tmp_377);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_9 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_2*tmp_380 + tmp_381*tmp_6;
      real_t tmp_383 = tmp_11*tmp_381 + tmp_13*tmp_379 + tmp_15*tmp_380;
      real_t tmp_384 = tmp_14*tmp_379 + tmp_380*tmp_7 + tmp_381*tmp_4;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_80;
      real_t tmp_387 = tmp_385*tmp_82;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_89;
      real_t tmp_390 = tmp_388*tmp_92;
      real_t tmp_391 = tmp_385*tmp_84;
      real_t tmp_392 = tmp_388*tmp_94;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_58;
      real_t tmp_395 = tmp_393*tmp_72;
      real_t tmp_396 = tmp_393*tmp_74;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_401 = tmp_19*(tmp_20 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_403 = tmp_19*(tmp_27 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_405 = tmp_19*(tmp_34 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_9 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_2*tmp_407 + tmp_408*tmp_6;
      real_t tmp_410 = tmp_11*tmp_408 + tmp_13*tmp_406 + tmp_15*tmp_407;
      real_t tmp_411 = tmp_14*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_7;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_80;
      real_t tmp_414 = tmp_412*tmp_82;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_89;
      real_t tmp_417 = tmp_415*tmp_92;
      real_t tmp_418 = tmp_412*tmp_84;
      real_t tmp_419 = tmp_415*tmp_94;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_58;
      real_t tmp_422 = tmp_420*tmp_72;
      real_t tmp_423 = tmp_420*tmp_74;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_428 = tmp_19*(tmp_20 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_430 = tmp_19*(tmp_27 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_432 = tmp_19*(tmp_34 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_9 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_2*tmp_434 + tmp_435*tmp_6;
      real_t tmp_437 = tmp_11*tmp_435 + tmp_13*tmp_433 + tmp_15*tmp_434;
      real_t tmp_438 = tmp_14*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_7;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_80;
      real_t tmp_441 = tmp_439*tmp_82;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_89;
      real_t tmp_444 = tmp_442*tmp_92;
      real_t tmp_445 = tmp_439*tmp_84;
      real_t tmp_446 = tmp_442*tmp_94;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_58;
      real_t tmp_449 = tmp_447*tmp_72;
      real_t tmp_450 = tmp_447*tmp_74;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_455 = tmp_19*(tmp_20 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_457 = tmp_19*(tmp_27 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_459 = tmp_19*(tmp_34 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_9 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_2*tmp_461 + tmp_462*tmp_6;
      real_t tmp_464 = tmp_11*tmp_462 + tmp_13*tmp_460 + tmp_15*tmp_461;
      real_t tmp_465 = tmp_14*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_7;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_80;
      real_t tmp_468 = tmp_466*tmp_82;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_89;
      real_t tmp_471 = tmp_469*tmp_92;
      real_t tmp_472 = tmp_466*tmp_84;
      real_t tmp_473 = tmp_469*tmp_94;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_58;
      real_t tmp_476 = tmp_474*tmp_72;
      real_t tmp_477 = tmp_474*tmp_74;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_482 = tmp_19*(tmp_20 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_484 = tmp_19*(tmp_27 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_486 = tmp_19*(tmp_34 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_9 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_2*tmp_488 + tmp_489*tmp_6;
      real_t tmp_491 = tmp_11*tmp_489 + tmp_13*tmp_487 + tmp_15*tmp_488;
      real_t tmp_492 = tmp_14*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_7;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_80;
      real_t tmp_495 = tmp_493*tmp_82;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_89;
      real_t tmp_498 = tmp_496*tmp_92;
      real_t tmp_499 = tmp_493*tmp_84;
      real_t tmp_500 = tmp_496*tmp_94;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_58;
      real_t tmp_503 = tmp_501*tmp_72;
      real_t tmp_504 = tmp_501*tmp_74;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_509 = tmp_19*(tmp_20 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_511 = tmp_19*(tmp_27 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_513 = tmp_19*(tmp_34 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_9 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_2*tmp_515 + tmp_516*tmp_6;
      real_t tmp_518 = tmp_11*tmp_516 + tmp_13*tmp_514 + tmp_15*tmp_515;
      real_t tmp_519 = tmp_14*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_7;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_80;
      real_t tmp_522 = tmp_520*tmp_82;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_89;
      real_t tmp_525 = tmp_523*tmp_92;
      real_t tmp_526 = tmp_520*tmp_84;
      real_t tmp_527 = tmp_523*tmp_94;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_58;
      real_t tmp_530 = tmp_528*tmp_72;
      real_t tmp_531 = tmp_528*tmp_74;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_536 = tmp_19*(tmp_20 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_538 = tmp_19*(tmp_27 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_540 = tmp_19*(tmp_34 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_9 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_2*tmp_542 + tmp_543*tmp_6;
      real_t tmp_545 = tmp_11*tmp_543 + tmp_13*tmp_541 + tmp_15*tmp_542;
      real_t tmp_546 = tmp_14*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_7;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_80;
      real_t tmp_549 = tmp_547*tmp_82;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_89;
      real_t tmp_552 = tmp_550*tmp_92;
      real_t tmp_553 = tmp_547*tmp_84;
      real_t tmp_554 = tmp_550*tmp_94;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_58;
      real_t tmp_557 = tmp_555*tmp_72;
      real_t tmp_558 = tmp_555*tmp_74;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_563 = tmp_19*(tmp_20 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_565 = tmp_19*(tmp_27 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_567 = tmp_19*(tmp_34 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_9 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_2*tmp_569 + tmp_570*tmp_6;
      real_t tmp_572 = tmp_11*tmp_570 + tmp_13*tmp_568 + tmp_15*tmp_569;
      real_t tmp_573 = tmp_14*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_7;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_80;
      real_t tmp_576 = tmp_574*tmp_82;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_577*tmp_89;
      real_t tmp_579 = tmp_577*tmp_92;
      real_t tmp_580 = tmp_574*tmp_84;
      real_t tmp_581 = tmp_577*tmp_94;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_58*tmp_582;
      real_t tmp_584 = tmp_582*tmp_72;
      real_t tmp_585 = tmp_582*tmp_74;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_590 = tmp_19*(tmp_20 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_592 = tmp_19*(tmp_27 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_594 = tmp_19*(tmp_34 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_9 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_2*tmp_596 + tmp_597*tmp_6;
      real_t tmp_599 = tmp_11*tmp_597 + tmp_13*tmp_595 + tmp_15*tmp_596;
      real_t tmp_600 = tmp_14*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_7;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_80;
      real_t tmp_603 = tmp_601*tmp_82;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_604*tmp_89;
      real_t tmp_606 = tmp_604*tmp_92;
      real_t tmp_607 = tmp_601*tmp_84;
      real_t tmp_608 = tmp_604*tmp_94;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_58*tmp_609;
      real_t tmp_611 = tmp_609*tmp_72;
      real_t tmp_612 = tmp_609*tmp_74;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_617 = tmp_19*(tmp_20 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_619 = tmp_19*(tmp_27 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_621 = tmp_19*(tmp_34 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_9 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_2*tmp_623 + tmp_6*tmp_624;
      real_t tmp_626 = tmp_11*tmp_624 + tmp_13*tmp_622 + tmp_15*tmp_623;
      real_t tmp_627 = tmp_14*tmp_622 + tmp_4*tmp_624 + tmp_623*tmp_7;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_80;
      real_t tmp_630 = tmp_628*tmp_82;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_631*tmp_89;
      real_t tmp_633 = tmp_631*tmp_92;
      real_t tmp_634 = tmp_628*tmp_84;
      real_t tmp_635 = tmp_631*tmp_94;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_58*tmp_636;
      real_t tmp_638 = tmp_636*tmp_72;
      real_t tmp_639 = tmp_636*tmp_74;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_644 = tmp_19*(tmp_20 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_646 = tmp_19*(tmp_27 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_648 = tmp_19*(tmp_34 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_9 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_2*tmp_650 + tmp_6*tmp_651;
      real_t tmp_653 = tmp_11*tmp_651 + tmp_13*tmp_649 + tmp_15*tmp_650;
      real_t tmp_654 = tmp_14*tmp_649 + tmp_4*tmp_651 + tmp_650*tmp_7;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_80;
      real_t tmp_657 = tmp_655*tmp_82;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_658*tmp_89;
      real_t tmp_660 = tmp_658*tmp_92;
      real_t tmp_661 = tmp_655*tmp_84;
      real_t tmp_662 = tmp_658*tmp_94;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_58*tmp_663;
      real_t tmp_665 = tmp_663*tmp_72;
      real_t tmp_666 = tmp_663*tmp_74;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_1*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_95 + 0.5*p_affine_13_2*tmp_85;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_73 + 0.5*p_affine_13_1*tmp_93 + 0.5*p_affine_13_2*tmp_83;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_58*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_71 + 0.5*p_affine_13_1*tmp_91 + 0.5*p_affine_13_2*tmp_81;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 - tmp_112*tmp_127 + tmp_49*tmp_78 + tmp_79*tmp_87 + tmp_88*tmp_96) + tmp_156*(-tmp_127*tmp_154 + tmp_139*tmp_78 + tmp_140*tmp_87 + tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(-tmp_127*tmp_181 + tmp_166*tmp_78 + tmp_167*tmp_87 + tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(-tmp_127*tmp_208 + tmp_193*tmp_78 + tmp_194*tmp_87 + tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(-tmp_127*tmp_235 + tmp_220*tmp_78 + tmp_221*tmp_87 + tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(-tmp_127*tmp_262 + tmp_247*tmp_78 + tmp_248*tmp_87 + tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(-tmp_127*tmp_289 + tmp_274*tmp_78 + tmp_275*tmp_87 + tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(-tmp_127*tmp_316 + tmp_301*tmp_78 + tmp_302*tmp_87 + tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(-tmp_127*tmp_343 + tmp_328*tmp_78 + tmp_329*tmp_87 + tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(-tmp_127*tmp_370 + tmp_355*tmp_78 + tmp_356*tmp_87 + tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(-tmp_127*tmp_397 + tmp_382*tmp_78 + tmp_383*tmp_87 + tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(-tmp_127*tmp_424 + tmp_409*tmp_78 + tmp_410*tmp_87 + tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(-tmp_127*tmp_451 + tmp_436*tmp_78 + tmp_437*tmp_87 + tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(-tmp_127*tmp_478 + tmp_463*tmp_78 + tmp_464*tmp_87 + tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(-tmp_127*tmp_505 + tmp_490*tmp_78 + tmp_491*tmp_87 + tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(-tmp_127*tmp_532 + tmp_517*tmp_78 + tmp_518*tmp_87 + tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(-tmp_127*tmp_559 + tmp_544*tmp_78 + tmp_545*tmp_87 + tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(-tmp_127*tmp_586 + tmp_571*tmp_78 + tmp_572*tmp_87 + tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(-tmp_127*tmp_613 + tmp_598*tmp_78 + tmp_599*tmp_87 + tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(-tmp_127*tmp_640 + tmp_625*tmp_78 + tmp_626*tmp_87 + tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(-tmp_127*tmp_667 + tmp_652*tmp_78 + tmp_653*tmp_87 + tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_1_0 = tmp_129*(-tmp_118*tmp_674 - tmp_127*tmp_674 + tmp_49*tmp_672 + tmp_671*tmp_79 + tmp_673*tmp_88) + tmp_156*(-tmp_127*tmp_675 + tmp_139*tmp_672 + tmp_140*tmp_671 + tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(-tmp_127*tmp_676 + tmp_166*tmp_672 + tmp_167*tmp_671 + tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(-tmp_127*tmp_677 + tmp_193*tmp_672 + tmp_194*tmp_671 + tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(-tmp_127*tmp_678 + tmp_220*tmp_672 + tmp_221*tmp_671 + tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(-tmp_127*tmp_679 + tmp_247*tmp_672 + tmp_248*tmp_671 + tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(-tmp_127*tmp_680 + tmp_274*tmp_672 + tmp_275*tmp_671 + tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(-tmp_127*tmp_681 + tmp_301*tmp_672 + tmp_302*tmp_671 + tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(-tmp_127*tmp_682 + tmp_328*tmp_672 + tmp_329*tmp_671 + tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(-tmp_127*tmp_683 + tmp_355*tmp_672 + tmp_356*tmp_671 + tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(-tmp_127*tmp_684 + tmp_382*tmp_672 + tmp_383*tmp_671 + tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(-tmp_127*tmp_685 + tmp_409*tmp_672 + tmp_410*tmp_671 + tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(-tmp_127*tmp_686 + tmp_436*tmp_672 + tmp_437*tmp_671 + tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(-tmp_127*tmp_687 + tmp_463*tmp_672 + tmp_464*tmp_671 + tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(-tmp_127*tmp_688 + tmp_490*tmp_672 + tmp_491*tmp_671 + tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(-tmp_127*tmp_689 + tmp_517*tmp_672 + tmp_518*tmp_671 + tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(-tmp_127*tmp_690 + tmp_544*tmp_672 + tmp_545*tmp_671 + tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(-tmp_127*tmp_691 + tmp_571*tmp_672 + tmp_572*tmp_671 + tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(-tmp_127*tmp_692 + tmp_598*tmp_672 + tmp_599*tmp_671 + tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(-tmp_127*tmp_693 + tmp_625*tmp_672 + tmp_626*tmp_671 + tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(-tmp_127*tmp_694 + tmp_652*tmp_672 + tmp_653*tmp_671 + tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_2_0 = tmp_129*(-tmp_118*tmp_698 - tmp_127*tmp_698 + tmp_49*tmp_696 + tmp_695*tmp_79 + tmp_697*tmp_88) + tmp_156*(-tmp_127*tmp_699 + tmp_139*tmp_696 + tmp_140*tmp_695 + tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(-tmp_127*tmp_700 + tmp_166*tmp_696 + tmp_167*tmp_695 + tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(-tmp_127*tmp_701 + tmp_193*tmp_696 + tmp_194*tmp_695 + tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(-tmp_127*tmp_702 + tmp_220*tmp_696 + tmp_221*tmp_695 + tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(-tmp_127*tmp_703 + tmp_247*tmp_696 + tmp_248*tmp_695 + tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(-tmp_127*tmp_704 + tmp_274*tmp_696 + tmp_275*tmp_695 + tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(-tmp_127*tmp_705 + tmp_301*tmp_696 + tmp_302*tmp_695 + tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(-tmp_127*tmp_706 + tmp_328*tmp_696 + tmp_329*tmp_695 + tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(-tmp_127*tmp_707 + tmp_355*tmp_696 + tmp_356*tmp_695 + tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(-tmp_127*tmp_708 + tmp_382*tmp_696 + tmp_383*tmp_695 + tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(-tmp_127*tmp_709 + tmp_409*tmp_696 + tmp_410*tmp_695 + tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(-tmp_127*tmp_710 + tmp_436*tmp_696 + tmp_437*tmp_695 + tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(-tmp_127*tmp_711 + tmp_463*tmp_696 + tmp_464*tmp_695 + tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(-tmp_127*tmp_712 + tmp_490*tmp_696 + tmp_491*tmp_695 + tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(-tmp_127*tmp_713 + tmp_517*tmp_696 + tmp_518*tmp_695 + tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(-tmp_127*tmp_714 + tmp_544*tmp_696 + tmp_545*tmp_695 + tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(-tmp_127*tmp_715 + tmp_571*tmp_696 + tmp_572*tmp_695 + tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(-tmp_127*tmp_716 + tmp_598*tmp_696 + tmp_599*tmp_695 + tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(-tmp_127*tmp_717 + tmp_625*tmp_696 + tmp_626*tmp_695 + tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(-tmp_127*tmp_718 + tmp_652*tmp_696 + tmp_653*tmp_695 + tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_3_0 = tmp_129*(-tmp_118*tmp_722 - tmp_127*tmp_722 + tmp_49*tmp_720 + tmp_719*tmp_79 + tmp_721*tmp_88) + tmp_156*(-tmp_127*tmp_723 + tmp_139*tmp_720 + tmp_140*tmp_719 + tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(-tmp_127*tmp_724 + tmp_166*tmp_720 + tmp_167*tmp_719 + tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(-tmp_127*tmp_725 + tmp_193*tmp_720 + tmp_194*tmp_719 + tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(-tmp_127*tmp_726 + tmp_220*tmp_720 + tmp_221*tmp_719 + tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(-tmp_127*tmp_727 + tmp_247*tmp_720 + tmp_248*tmp_719 + tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(-tmp_127*tmp_728 + tmp_274*tmp_720 + tmp_275*tmp_719 + tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(-tmp_127*tmp_729 + tmp_301*tmp_720 + tmp_302*tmp_719 + tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(-tmp_127*tmp_730 + tmp_328*tmp_720 + tmp_329*tmp_719 + tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(-tmp_127*tmp_731 + tmp_355*tmp_720 + tmp_356*tmp_719 + tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(-tmp_127*tmp_732 + tmp_382*tmp_720 + tmp_383*tmp_719 + tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(-tmp_127*tmp_733 + tmp_409*tmp_720 + tmp_410*tmp_719 + tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(-tmp_127*tmp_734 + tmp_436*tmp_720 + tmp_437*tmp_719 + tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(-tmp_127*tmp_735 + tmp_463*tmp_720 + tmp_464*tmp_719 + tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(-tmp_127*tmp_736 + tmp_490*tmp_720 + tmp_491*tmp_719 + tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(-tmp_127*tmp_737 + tmp_517*tmp_720 + tmp_518*tmp_719 + tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(-tmp_127*tmp_738 + tmp_544*tmp_720 + tmp_545*tmp_719 + tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(-tmp_127*tmp_739 + tmp_571*tmp_720 + tmp_572*tmp_719 + tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(-tmp_127*tmp_740 + tmp_598*tmp_720 + tmp_599*tmp_719 + tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(-tmp_127*tmp_741 + tmp_625*tmp_720 + tmp_626*tmp_719 + tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(-tmp_127*tmp_742 + tmp_652*tmp_720 + tmp_653*tmp_719 + tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_7;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_13*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_15*tmp_5 - tmp_17*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_7;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_11 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_10*tmp_4;
      real_t tmp_29 = -p_affine_8_1;
      real_t tmp_30 = p_affine_9_1 + tmp_29;
      real_t tmp_31 = p_affine_10_1 + tmp_29;
      real_t tmp_32 = p_affine_8_1 + tmp_2;
      real_t tmp_33 = tmp_19*(0.031405749086161582*tmp_30 + 0.93718850182767688*tmp_31 + tmp_32);
      real_t tmp_34 = tmp_28*tmp_33;
      real_t tmp_35 = tmp_1*tmp_8 - tmp_10*tmp_13;
      real_t tmp_36 = tmp_33*tmp_35;
      real_t tmp_37 = tmp_12 - tmp_18;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_15 - tmp_17;
      real_t tmp_40 = tmp_33*tmp_39;
      real_t tmp_41 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_42 = -p_affine_8_0;
      real_t tmp_43 = p_affine_9_0 + tmp_42;
      real_t tmp_44 = p_affine_10_0 + tmp_42;
      real_t tmp_45 = p_affine_8_0 + tmp_0;
      real_t tmp_46 = tmp_19*(0.031405749086161582*tmp_43 + 0.93718850182767688*tmp_44 + tmp_45);
      real_t tmp_47 = tmp_41*tmp_46;
      real_t tmp_48 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_49 = tmp_46*tmp_48;
      real_t tmp_50 = -tmp_16 + tmp_9;
      real_t tmp_51 = tmp_46*tmp_50;
      real_t tmp_52 = tmp_38 + tmp_40 + tmp_51;
      real_t tmp_53 = tmp_27 + tmp_36 + tmp_49;
      real_t tmp_54 = tmp_25 + tmp_34 + tmp_47;
      real_t tmp_55 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_56 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_57 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_58 = 6.0*std::pow((std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)*std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)) + (std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)*std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)) + (std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)*std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)), 0.25);
      real_t tmp_59 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58*(tmp_11*(tmp_54 - 1.0/4.0) + tmp_3*(tmp_53 - 1.0/4.0) + tmp_5*(tmp_52 - 1.0/4.0));
      real_t tmp_60 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_19*(0.19601935860219369*tmp_30 + 0.60796128279561268*tmp_31 + tmp_32);
      real_t tmp_64 = tmp_28*tmp_63;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = tmp_37*tmp_60;
      real_t tmp_67 = tmp_39*tmp_63;
      real_t tmp_68 = tmp_19*(0.19601935860219369*tmp_43 + 0.60796128279561268*tmp_44 + tmp_45);
      real_t tmp_69 = tmp_41*tmp_68;
      real_t tmp_70 = tmp_48*tmp_68;
      real_t tmp_71 = tmp_50*tmp_68;
      real_t tmp_72 = tmp_66 + tmp_67 + tmp_71;
      real_t tmp_73 = tmp_62 + tmp_65 + tmp_70;
      real_t tmp_74 = tmp_61 + tmp_64 + tmp_69;
      real_t tmp_75 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58*(tmp_11*(tmp_74 - 1.0/4.0) + tmp_3*(tmp_73 - 1.0/4.0) + tmp_5*(tmp_72 - 1.0/4.0));
      real_t tmp_76 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_77 = tmp_6*tmp_76;
      real_t tmp_78 = tmp_26*tmp_76;
      real_t tmp_79 = tmp_19*(0.37605877282253791*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_80 = tmp_28*tmp_79;
      real_t tmp_81 = tmp_35*tmp_79;
      real_t tmp_82 = tmp_37*tmp_76;
      real_t tmp_83 = tmp_39*tmp_79;
      real_t tmp_84 = tmp_19*(0.37605877282253791*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_85 = tmp_41*tmp_84;
      real_t tmp_86 = tmp_48*tmp_84;
      real_t tmp_87 = tmp_50*tmp_84;
      real_t tmp_88 = tmp_82 + tmp_83 + tmp_87;
      real_t tmp_89 = tmp_78 + tmp_81 + tmp_86;
      real_t tmp_90 = tmp_77 + tmp_80 + tmp_85;
      real_t tmp_91 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_58*(tmp_11*(tmp_90 - 1.0/4.0) + tmp_3*(tmp_89 - 1.0/4.0) + tmp_5*(tmp_88 - 1.0/4.0));
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_93 = tmp_6*tmp_92;
      real_t tmp_94 = tmp_26*tmp_92;
      real_t tmp_95 = tmp_19*(0.041227165399737475*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_96 = tmp_28*tmp_95;
      real_t tmp_97 = tmp_35*tmp_95;
      real_t tmp_98 = tmp_37*tmp_92;
      real_t tmp_99 = tmp_39*tmp_95;
      real_t tmp_100 = tmp_19*(0.041227165399737475*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_101 = tmp_100*tmp_41;
      real_t tmp_102 = tmp_100*tmp_48;
      real_t tmp_103 = tmp_100*tmp_50;
      real_t tmp_104 = tmp_103 + tmp_98 + tmp_99;
      real_t tmp_105 = tmp_102 + tmp_94 + tmp_97;
      real_t tmp_106 = tmp_101 + tmp_93 + tmp_96;
      real_t tmp_107 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_58*(tmp_11*(tmp_106 - 1.0/4.0) + tmp_3*(tmp_105 - 1.0/4.0) + tmp_5*(tmp_104 - 1.0/4.0));
      real_t tmp_108 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_19*(0.40446199974765351*tmp_30 + 0.19107600050469298*tmp_31 + tmp_32);
      real_t tmp_112 = tmp_111*tmp_28;
      real_t tmp_113 = tmp_111*tmp_35;
      real_t tmp_114 = tmp_108*tmp_37;
      real_t tmp_115 = tmp_111*tmp_39;
      real_t tmp_116 = tmp_19*(0.40446199974765351*tmp_43 + 0.19107600050469298*tmp_44 + tmp_45);
      real_t tmp_117 = tmp_116*tmp_41;
      real_t tmp_118 = tmp_116*tmp_48;
      real_t tmp_119 = tmp_116*tmp_50;
      real_t tmp_120 = tmp_114 + tmp_115 + tmp_119;
      real_t tmp_121 = tmp_110 + tmp_113 + tmp_118;
      real_t tmp_122 = tmp_109 + tmp_112 + tmp_117;
      real_t tmp_123 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_58*(tmp_11*(tmp_122 - 1.0/4.0) + tmp_3*(tmp_121 - 1.0/4.0) + tmp_5*(tmp_120 - 1.0/4.0));
      real_t tmp_124 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_125 = tmp_124*tmp_6;
      real_t tmp_126 = tmp_124*tmp_26;
      real_t tmp_127 = tmp_19*(0.039308471900058539*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_128 = tmp_127*tmp_28;
      real_t tmp_129 = tmp_127*tmp_35;
      real_t tmp_130 = tmp_124*tmp_37;
      real_t tmp_131 = tmp_127*tmp_39;
      real_t tmp_132 = tmp_19*(0.039308471900058539*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_133 = tmp_132*tmp_41;
      real_t tmp_134 = tmp_132*tmp_48;
      real_t tmp_135 = tmp_132*tmp_50;
      real_t tmp_136 = tmp_130 + tmp_131 + tmp_135;
      real_t tmp_137 = tmp_126 + tmp_129 + tmp_134;
      real_t tmp_138 = tmp_125 + tmp_128 + tmp_133;
      real_t tmp_139 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_58*(tmp_11*(tmp_138 - 1.0/4.0) + tmp_3*(tmp_137 - 1.0/4.0) + tmp_5*(tmp_136 - 1.0/4.0));
      real_t tmp_140 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_140*tmp_26;
      real_t tmp_143 = tmp_19*(0.93718850182767688*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_144 = tmp_143*tmp_28;
      real_t tmp_145 = tmp_143*tmp_35;
      real_t tmp_146 = tmp_140*tmp_37;
      real_t tmp_147 = tmp_143*tmp_39;
      real_t tmp_148 = tmp_19*(0.93718850182767688*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_149 = tmp_148*tmp_41;
      real_t tmp_150 = tmp_148*tmp_48;
      real_t tmp_151 = tmp_148*tmp_50;
      real_t tmp_152 = tmp_146 + tmp_147 + tmp_151;
      real_t tmp_153 = tmp_142 + tmp_145 + tmp_150;
      real_t tmp_154 = tmp_141 + tmp_144 + tmp_149;
      real_t tmp_155 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_58*(tmp_11*(tmp_154 - 1.0/4.0) + tmp_3*(tmp_153 - 1.0/4.0) + tmp_5*(tmp_152 - 1.0/4.0));
      real_t tmp_156 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_156*tmp_26;
      real_t tmp_159 = tmp_19*(0.60796128279561268*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_160 = tmp_159*tmp_28;
      real_t tmp_161 = tmp_159*tmp_35;
      real_t tmp_162 = tmp_156*tmp_37;
      real_t tmp_163 = tmp_159*tmp_39;
      real_t tmp_164 = tmp_19*(0.60796128279561268*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_165 = tmp_164*tmp_41;
      real_t tmp_166 = tmp_164*tmp_48;
      real_t tmp_167 = tmp_164*tmp_50;
      real_t tmp_168 = tmp_162 + tmp_163 + tmp_167;
      real_t tmp_169 = tmp_158 + tmp_161 + tmp_166;
      real_t tmp_170 = tmp_157 + tmp_160 + tmp_165;
      real_t tmp_171 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_58*(tmp_11*(tmp_170 - 1.0/4.0) + tmp_3*(tmp_169 - 1.0/4.0) + tmp_5*(tmp_168 - 1.0/4.0));
      real_t tmp_172 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_172*tmp_26;
      real_t tmp_175 = tmp_19*(0.19107600050469298*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_176 = tmp_175*tmp_28;
      real_t tmp_177 = tmp_175*tmp_35;
      real_t tmp_178 = tmp_172*tmp_37;
      real_t tmp_179 = tmp_175*tmp_39;
      real_t tmp_180 = tmp_19*(0.19107600050469298*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_181 = tmp_180*tmp_41;
      real_t tmp_182 = tmp_180*tmp_48;
      real_t tmp_183 = tmp_180*tmp_50;
      real_t tmp_184 = tmp_178 + tmp_179 + tmp_183;
      real_t tmp_185 = tmp_174 + tmp_177 + tmp_182;
      real_t tmp_186 = tmp_173 + tmp_176 + tmp_181;
      real_t tmp_187 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_58*(tmp_11*(tmp_186 - 1.0/4.0) + tmp_3*(tmp_185 - 1.0/4.0) + tmp_5*(tmp_184 - 1.0/4.0));
      real_t tmp_188 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_188*tmp_26;
      real_t tmp_191 = tmp_19*(0.031405749086161582*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_192 = tmp_191*tmp_28;
      real_t tmp_193 = tmp_191*tmp_35;
      real_t tmp_194 = tmp_188*tmp_37;
      real_t tmp_195 = tmp_191*tmp_39;
      real_t tmp_196 = tmp_19*(0.031405749086161582*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_197 = tmp_196*tmp_41;
      real_t tmp_198 = tmp_196*tmp_48;
      real_t tmp_199 = tmp_196*tmp_50;
      real_t tmp_200 = tmp_194 + tmp_195 + tmp_199;
      real_t tmp_201 = tmp_190 + tmp_193 + tmp_198;
      real_t tmp_202 = tmp_189 + tmp_192 + tmp_197;
      real_t tmp_203 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_58*(tmp_11*(tmp_202 - 1.0/4.0) + tmp_3*(tmp_201 - 1.0/4.0) + tmp_5*(tmp_200 - 1.0/4.0));
      real_t tmp_204 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_205 = tmp_204*tmp_6;
      real_t tmp_206 = tmp_204*tmp_26;
      real_t tmp_207 = tmp_19*(0.19601935860219369*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_208 = tmp_207*tmp_28;
      real_t tmp_209 = tmp_207*tmp_35;
      real_t tmp_210 = tmp_204*tmp_37;
      real_t tmp_211 = tmp_207*tmp_39;
      real_t tmp_212 = tmp_19*(0.19601935860219369*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_213 = tmp_212*tmp_41;
      real_t tmp_214 = tmp_212*tmp_48;
      real_t tmp_215 = tmp_212*tmp_50;
      real_t tmp_216 = tmp_210 + tmp_211 + tmp_215;
      real_t tmp_217 = tmp_206 + tmp_209 + tmp_214;
      real_t tmp_218 = tmp_205 + tmp_208 + tmp_213;
      real_t tmp_219 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_58*(tmp_11*(tmp_218 - 1.0/4.0) + tmp_3*(tmp_217 - 1.0/4.0) + tmp_5*(tmp_216 - 1.0/4.0));
      real_t tmp_220 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = tmp_220*tmp_26;
      real_t tmp_223 = tmp_19*(0.40446199974765351*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_224 = tmp_223*tmp_28;
      real_t tmp_225 = tmp_223*tmp_35;
      real_t tmp_226 = tmp_220*tmp_37;
      real_t tmp_227 = tmp_223*tmp_39;
      real_t tmp_228 = tmp_19*(0.40446199974765351*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_229 = tmp_228*tmp_41;
      real_t tmp_230 = tmp_228*tmp_48;
      real_t tmp_231 = tmp_228*tmp_50;
      real_t tmp_232 = tmp_226 + tmp_227 + tmp_231;
      real_t tmp_233 = tmp_222 + tmp_225 + tmp_230;
      real_t tmp_234 = tmp_221 + tmp_224 + tmp_229;
      real_t tmp_235 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_58*(tmp_11*(tmp_234 - 1.0/4.0) + tmp_3*(tmp_233 - 1.0/4.0) + tmp_5*(tmp_232 - 1.0/4.0));
      real_t tmp_236 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_237 = tmp_236*tmp_6;
      real_t tmp_238 = tmp_236*tmp_26;
      real_t tmp_239 = tmp_19*(0.37605877282253791*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_240 = tmp_239*tmp_28;
      real_t tmp_241 = tmp_239*tmp_35;
      real_t tmp_242 = tmp_236*tmp_37;
      real_t tmp_243 = tmp_239*tmp_39;
      real_t tmp_244 = tmp_19*(0.37605877282253791*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_245 = tmp_244*tmp_41;
      real_t tmp_246 = tmp_244*tmp_48;
      real_t tmp_247 = tmp_244*tmp_50;
      real_t tmp_248 = tmp_242 + tmp_243 + tmp_247;
      real_t tmp_249 = tmp_238 + tmp_241 + tmp_246;
      real_t tmp_250 = tmp_237 + tmp_240 + tmp_245;
      real_t tmp_251 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58*(tmp_11*(tmp_250 - 1.0/4.0) + tmp_3*(tmp_249 - 1.0/4.0) + tmp_5*(tmp_248 - 1.0/4.0));
      real_t tmp_252 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_253 = tmp_252*tmp_6;
      real_t tmp_254 = tmp_252*tmp_26;
      real_t tmp_255 = tmp_19*(0.1711304259088916*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_256 = tmp_255*tmp_28;
      real_t tmp_257 = tmp_255*tmp_35;
      real_t tmp_258 = tmp_252*tmp_37;
      real_t tmp_259 = tmp_255*tmp_39;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_261 = tmp_260*tmp_41;
      real_t tmp_262 = tmp_260*tmp_48;
      real_t tmp_263 = tmp_260*tmp_50;
      real_t tmp_264 = tmp_258 + tmp_259 + tmp_263;
      real_t tmp_265 = tmp_254 + tmp_257 + tmp_262;
      real_t tmp_266 = tmp_253 + tmp_256 + tmp_261;
      real_t tmp_267 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_58*(tmp_11*(tmp_266 - 1.0/4.0) + tmp_3*(tmp_265 - 1.0/4.0) + tmp_5*(tmp_264 - 1.0/4.0));
      real_t tmp_268 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_269 = tmp_268*tmp_6;
      real_t tmp_270 = tmp_26*tmp_268;
      real_t tmp_271 = tmp_19*(0.78764240869137092*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_272 = tmp_271*tmp_28;
      real_t tmp_273 = tmp_271*tmp_35;
      real_t tmp_274 = tmp_268*tmp_37;
      real_t tmp_275 = tmp_271*tmp_39;
      real_t tmp_276 = tmp_19*(0.78764240869137092*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_277 = tmp_276*tmp_41;
      real_t tmp_278 = tmp_276*tmp_48;
      real_t tmp_279 = tmp_276*tmp_50;
      real_t tmp_280 = tmp_274 + tmp_275 + tmp_279;
      real_t tmp_281 = tmp_270 + tmp_273 + tmp_278;
      real_t tmp_282 = tmp_269 + tmp_272 + tmp_277;
      real_t tmp_283 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58*(tmp_11*(tmp_282 - 1.0/4.0) + tmp_3*(tmp_281 - 1.0/4.0) + tmp_5*(tmp_280 - 1.0/4.0));
      real_t tmp_284 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_285 = tmp_284*tmp_6;
      real_t tmp_286 = tmp_26*tmp_284;
      real_t tmp_287 = tmp_19*(0.58463275527740355*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_288 = tmp_28*tmp_287;
      real_t tmp_289 = tmp_287*tmp_35;
      real_t tmp_290 = tmp_284*tmp_37;
      real_t tmp_291 = tmp_287*tmp_39;
      real_t tmp_292 = tmp_19*(0.58463275527740355*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_293 = tmp_292*tmp_41;
      real_t tmp_294 = tmp_292*tmp_48;
      real_t tmp_295 = tmp_292*tmp_50;
      real_t tmp_296 = tmp_290 + tmp_291 + tmp_295;
      real_t tmp_297 = tmp_286 + tmp_289 + tmp_294;
      real_t tmp_298 = tmp_285 + tmp_288 + tmp_293;
      real_t tmp_299 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_58*(tmp_11*(tmp_298 - 1.0/4.0) + tmp_3*(tmp_297 - 1.0/4.0) + tmp_5*(tmp_296 - 1.0/4.0));
      real_t tmp_300 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_301 = tmp_300*tmp_6;
      real_t tmp_302 = tmp_26*tmp_300;
      real_t tmp_303 = tmp_19*(0.041227165399737475*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_304 = tmp_28*tmp_303;
      real_t tmp_305 = tmp_303*tmp_35;
      real_t tmp_306 = tmp_300*tmp_37;
      real_t tmp_307 = tmp_303*tmp_39;
      real_t tmp_308 = tmp_19*(0.041227165399737475*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_309 = tmp_308*tmp_41;
      real_t tmp_310 = tmp_308*tmp_48;
      real_t tmp_311 = tmp_308*tmp_50;
      real_t tmp_312 = tmp_306 + tmp_307 + tmp_311;
      real_t tmp_313 = tmp_302 + tmp_305 + tmp_310;
      real_t tmp_314 = tmp_301 + tmp_304 + tmp_309;
      real_t tmp_315 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_58*(tmp_11*(tmp_314 - 1.0/4.0) + tmp_3*(tmp_313 - 1.0/4.0) + tmp_5*(tmp_312 - 1.0/4.0));
      real_t tmp_316 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_317 = tmp_316*tmp_6;
      real_t tmp_318 = tmp_26*tmp_316;
      real_t tmp_319 = tmp_19*(0.039308471900058539*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_320 = tmp_28*tmp_319;
      real_t tmp_321 = tmp_319*tmp_35;
      real_t tmp_322 = tmp_316*tmp_37;
      real_t tmp_323 = tmp_319*tmp_39;
      real_t tmp_324 = tmp_19*(0.039308471900058539*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_325 = tmp_324*tmp_41;
      real_t tmp_326 = tmp_324*tmp_48;
      real_t tmp_327 = tmp_324*tmp_50;
      real_t tmp_328 = tmp_322 + tmp_323 + tmp_327;
      real_t tmp_329 = tmp_318 + tmp_321 + tmp_326;
      real_t tmp_330 = tmp_317 + tmp_320 + tmp_325;
      real_t tmp_331 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_58*(tmp_11*(tmp_330 - 1.0/4.0) + tmp_3*(tmp_329 - 1.0/4.0) + tmp_5*(tmp_328 - 1.0/4.0));
      real_t tmp_332 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_333 = tmp_332*tmp_6;
      real_t tmp_334 = tmp_26*tmp_332;
      real_t tmp_335 = tmp_19*(0.78764240869137092*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_336 = tmp_28*tmp_335;
      real_t tmp_337 = tmp_335*tmp_35;
      real_t tmp_338 = tmp_332*tmp_37;
      real_t tmp_339 = tmp_335*tmp_39;
      real_t tmp_340 = tmp_19*(0.78764240869137092*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_341 = tmp_340*tmp_41;
      real_t tmp_342 = tmp_340*tmp_48;
      real_t tmp_343 = tmp_340*tmp_50;
      real_t tmp_344 = tmp_338 + tmp_339 + tmp_343;
      real_t tmp_345 = tmp_334 + tmp_337 + tmp_342;
      real_t tmp_346 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_347 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_58*(tmp_11*(tmp_346 - 1.0/4.0) + tmp_3*(tmp_345 - 1.0/4.0) + tmp_5*(tmp_344 - 1.0/4.0));
      real_t tmp_348 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_349 = tmp_348*tmp_6;
      real_t tmp_350 = tmp_26*tmp_348;
      real_t tmp_351 = tmp_19*(0.58463275527740355*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_352 = tmp_28*tmp_351;
      real_t tmp_353 = tmp_35*tmp_351;
      real_t tmp_354 = tmp_348*tmp_37;
      real_t tmp_355 = tmp_351*tmp_39;
      real_t tmp_356 = tmp_19*(0.58463275527740355*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_357 = tmp_356*tmp_41;
      real_t tmp_358 = tmp_356*tmp_48;
      real_t tmp_359 = tmp_356*tmp_50;
      real_t tmp_360 = tmp_354 + tmp_355 + tmp_359;
      real_t tmp_361 = tmp_350 + tmp_353 + tmp_358;
      real_t tmp_362 = tmp_349 + tmp_352 + tmp_357;
      real_t tmp_363 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_58*(tmp_11*(tmp_362 - 1.0/4.0) + tmp_3*(tmp_361 - 1.0/4.0) + tmp_5*(tmp_360 - 1.0/4.0));
      real_t tmp_364 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_365 = tmp_364*tmp_6;
      real_t tmp_366 = tmp_26*tmp_364;
      real_t tmp_367 = tmp_19*(0.1711304259088916*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_368 = tmp_28*tmp_367;
      real_t tmp_369 = tmp_35*tmp_367;
      real_t tmp_370 = tmp_364*tmp_37;
      real_t tmp_371 = tmp_367*tmp_39;
      real_t tmp_372 = tmp_19*(0.1711304259088916*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_373 = tmp_372*tmp_41;
      real_t tmp_374 = tmp_372*tmp_48;
      real_t tmp_375 = tmp_372*tmp_50;
      real_t tmp_376 = tmp_370 + tmp_371 + tmp_375;
      real_t tmp_377 = tmp_366 + tmp_369 + tmp_374;
      real_t tmp_378 = tmp_365 + tmp_368 + tmp_373;
      real_t tmp_379 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_58*(tmp_11*(tmp_378 - 1.0/4.0) + tmp_3*(tmp_377 - 1.0/4.0) + tmp_5*(tmp_376 - 1.0/4.0));
      real_t a_0_0 = tmp_107*(-tmp_101 - tmp_102 - tmp_103 - tmp_93 - tmp_94 - tmp_96 - tmp_97 - tmp_98 - tmp_99 + 1) + tmp_123*(-tmp_109 - tmp_110 - tmp_112 - tmp_113 - tmp_114 - tmp_115 - tmp_117 - tmp_118 - tmp_119 + 1) + tmp_139*(-tmp_125 - tmp_126 - tmp_128 - tmp_129 - tmp_130 - tmp_131 - tmp_133 - tmp_134 - tmp_135 + 1) + tmp_155*(-tmp_141 - tmp_142 - tmp_144 - tmp_145 - tmp_146 - tmp_147 - tmp_149 - tmp_150 - tmp_151 + 1) + tmp_171*(-tmp_157 - tmp_158 - tmp_160 - tmp_161 - tmp_162 - tmp_163 - tmp_165 - tmp_166 - tmp_167 + 1) + tmp_187*(-tmp_173 - tmp_174 - tmp_176 - tmp_177 - tmp_178 - tmp_179 - tmp_181 - tmp_182 - tmp_183 + 1) + tmp_203*(-tmp_189 - tmp_190 - tmp_192 - tmp_193 - tmp_194 - tmp_195 - tmp_197 - tmp_198 - tmp_199 + 1) + tmp_219*(-tmp_205 - tmp_206 - tmp_208 - tmp_209 - tmp_210 - tmp_211 - tmp_213 - tmp_214 - tmp_215 + 1) + tmp_235*(-tmp_221 - tmp_222 - tmp_224 - tmp_225 - tmp_226 - tmp_227 - tmp_229 - tmp_230 - tmp_231 + 1) + tmp_251*(-tmp_237 - tmp_238 - tmp_240 - tmp_241 - tmp_242 - tmp_243 - tmp_245 - tmp_246 - tmp_247 + 1) + tmp_267*(-tmp_253 - tmp_254 - tmp_256 - tmp_257 - tmp_258 - tmp_259 - tmp_261 - tmp_262 - tmp_263 + 1) + tmp_283*(-tmp_269 - tmp_270 - tmp_272 - tmp_273 - tmp_274 - tmp_275 - tmp_277 - tmp_278 - tmp_279 + 1) + tmp_299*(-tmp_285 - tmp_286 - tmp_288 - tmp_289 - tmp_290 - tmp_291 - tmp_293 - tmp_294 - tmp_295 + 1) + tmp_315*(-tmp_301 - tmp_302 - tmp_304 - tmp_305 - tmp_306 - tmp_307 - tmp_309 - tmp_310 - tmp_311 + 1) + tmp_331*(-tmp_317 - tmp_318 - tmp_320 - tmp_321 - tmp_322 - tmp_323 - tmp_325 - tmp_326 - tmp_327 + 1) + tmp_347*(-tmp_333 - tmp_334 - tmp_336 - tmp_337 - tmp_338 - tmp_339 - tmp_341 - tmp_342 - tmp_343 + 1) + tmp_363*(-tmp_349 - tmp_350 - tmp_352 - tmp_353 - tmp_354 - tmp_355 - tmp_357 - tmp_358 - tmp_359 + 1) + tmp_379*(-tmp_365 - tmp_366 - tmp_368 - tmp_369 - tmp_370 - tmp_371 - tmp_373 - tmp_374 - tmp_375 + 1) + tmp_59*(-tmp_25 - tmp_27 - tmp_34 - tmp_36 - tmp_38 - tmp_40 - tmp_47 - tmp_49 - tmp_51 + 1) + tmp_75*(-tmp_61 - tmp_62 - tmp_64 - tmp_65 - tmp_66 - tmp_67 - tmp_69 - tmp_70 - tmp_71 + 1) + tmp_91*(-tmp_77 - tmp_78 - tmp_80 - tmp_81 - tmp_82 - tmp_83 - tmp_85 - tmp_86 - tmp_87 + 1);
      real_t a_1_0 = tmp_104*tmp_107 + tmp_120*tmp_123 + tmp_136*tmp_139 + tmp_152*tmp_155 + tmp_168*tmp_171 + tmp_184*tmp_187 + tmp_200*tmp_203 + tmp_216*tmp_219 + tmp_232*tmp_235 + tmp_248*tmp_251 + tmp_264*tmp_267 + tmp_280*tmp_283 + tmp_296*tmp_299 + tmp_312*tmp_315 + tmp_328*tmp_331 + tmp_344*tmp_347 + tmp_360*tmp_363 + tmp_376*tmp_379 + tmp_52*tmp_59 + tmp_72*tmp_75 + tmp_88*tmp_91;
      real_t a_2_0 = tmp_105*tmp_107 + tmp_121*tmp_123 + tmp_137*tmp_139 + tmp_153*tmp_155 + tmp_169*tmp_171 + tmp_185*tmp_187 + tmp_201*tmp_203 + tmp_217*tmp_219 + tmp_233*tmp_235 + tmp_249*tmp_251 + tmp_265*tmp_267 + tmp_281*tmp_283 + tmp_297*tmp_299 + tmp_313*tmp_315 + tmp_329*tmp_331 + tmp_345*tmp_347 + tmp_361*tmp_363 + tmp_377*tmp_379 + tmp_53*tmp_59 + tmp_73*tmp_75 + tmp_89*tmp_91;
      real_t a_3_0 = tmp_106*tmp_107 + tmp_122*tmp_123 + tmp_138*tmp_139 + tmp_154*tmp_155 + tmp_170*tmp_171 + tmp_186*tmp_187 + tmp_202*tmp_203 + tmp_218*tmp_219 + tmp_234*tmp_235 + tmp_250*tmp_251 + tmp_266*tmp_267 + tmp_282*tmp_283 + tmp_298*tmp_299 + tmp_314*tmp_315 + tmp_330*tmp_331 + tmp_346*tmp_347 + tmp_362*tmp_363 + tmp_378*tmp_379 + tmp_54*tmp_59 + tmp_74*tmp_75 + tmp_90*tmp_91;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormEP1_2 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormEP1_2( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t a_0_0 = 0;
      real_t a_0_1 = 0;
      real_t a_0_2 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_0_1 = 0;
      real_t a_0_2 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_0_1 = 0;
      real_t a_0_2 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_0_1 = 0;
      real_t a_0_2 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_2;
      real_t tmp_1 = p_affine_1_2 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = -p_affine_0_1;
      real_t tmp_5 = p_affine_3_1 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_3_0 + tmp_2;
      real_t tmp_8 = p_affine_2_1 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_0;
      real_t tmp_12 = p_affine_1_0 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_8;
      real_t tmp_14 = p_affine_2_2 + tmp_0;
      real_t tmp_15 = p_affine_1_1 + tmp_4;
      real_t tmp_16 = tmp_15*tmp_7;
      real_t tmp_17 = tmp_12*tmp_5;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_16 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_13 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_25 + tmp_14*tmp_23;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = tmp_1*tmp_3 - tmp_12*tmp_14;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = -tmp_1*tmp_7 + tmp_11*tmp_12;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_3 + tmp_14*tmp_7;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_32 + tmp_14*tmp_34 + tmp_15*tmp_37 + tmp_38*tmp_8 + tmp_39*tmp_5;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = -tmp_1*tmp_8 + tmp_14*tmp_15;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = tmp_1*tmp_5 - tmp_11*tmp_15;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_11*tmp_8 - tmp_14*tmp_5;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_43 + tmp_12*tmp_37 + tmp_14*tmp_45 + tmp_3*tmp_38 + tmp_39*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_0_1 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_0_2 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_0_3 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_3;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_0;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_12 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_2*tmp_49 + tmp_5*tmp_57;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_54*tmp_59;
      real_t tmp_61 = tmp_46*tmp_59;
      real_t tmp_62 = tmp_33*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_2;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_13*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_67 = tmp_52*tmp_59;
      real_t tmp_68 = tmp_44*tmp_59;
      real_t tmp_69 = tmp_26*tmp_59;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_11*tmp_41 + tmp_14*tmp_49 + tmp_57*tmp_9;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_50*tmp_73;
      real_t tmp_75 = tmp_42*tmp_73;
      real_t tmp_76 = tmp_7*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*tmp_63 + 0.5*p_affine_13_1*tmp_70 + 0.5*p_affine_13_2*(-tmp_74 - tmp_75 - tmp_76);
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_59*tmp_7;
      real_t tmp_86 = tmp_42*tmp_59;
      real_t tmp_87 = tmp_50*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_1*tmp_85 + tmp_11*tmp_62 + tmp_14*tmp_61 + tmp_2*tmp_86 + tmp_5*tmp_87 + tmp_60*tmp_9) + 0.5*p_affine_13_1*(tmp_11*tmp_69 + tmp_13*tmp_85 + tmp_14*tmp_68 + tmp_4*tmp_87 + tmp_6*tmp_86 + tmp_67*tmp_9) + 0.5*p_affine_13_2*(tmp_11*tmp_76 + tmp_14*tmp_75 + tmp_74*tmp_9);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_2 + tmp_108*tmp_5;
      real_t tmp_110 = tmp_103*tmp_6 + tmp_108*tmp_4 + tmp_13*tmp_98;
      real_t tmp_111 = tmp_103*tmp_14 + tmp_108*tmp_9 + tmp_11*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_2 + tmp_132*tmp_5;
      real_t tmp_134 = tmp_122*tmp_13 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_135 = tmp_11*tmp_122 + tmp_127*tmp_14 + tmp_132*tmp_9;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_2 + tmp_156*tmp_5;
      real_t tmp_158 = tmp_13*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_159 = tmp_11*tmp_146 + tmp_14*tmp_151 + tmp_156*tmp_9;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_2 + tmp_180*tmp_5;
      real_t tmp_182 = tmp_13*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_183 = tmp_11*tmp_170 + tmp_14*tmp_175 + tmp_180*tmp_9;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_2 + tmp_204*tmp_5;
      real_t tmp_206 = tmp_13*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_207 = tmp_11*tmp_194 + tmp_14*tmp_199 + tmp_204*tmp_9;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_2*tmp_223 + tmp_228*tmp_5;
      real_t tmp_230 = tmp_13*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_231 = tmp_11*tmp_218 + tmp_14*tmp_223 + tmp_228*tmp_9;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_2*tmp_247 + tmp_252*tmp_5;
      real_t tmp_254 = tmp_13*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_255 = tmp_11*tmp_242 + tmp_14*tmp_247 + tmp_252*tmp_9;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_2*tmp_271 + tmp_276*tmp_5;
      real_t tmp_278 = tmp_13*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_279 = tmp_11*tmp_266 + tmp_14*tmp_271 + tmp_276*tmp_9;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_2*tmp_295 + tmp_300*tmp_5;
      real_t tmp_302 = tmp_13*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_303 = tmp_11*tmp_290 + tmp_14*tmp_295 + tmp_300*tmp_9;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_2*tmp_319 + tmp_324*tmp_5;
      real_t tmp_326 = tmp_13*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_327 = tmp_11*tmp_314 + tmp_14*tmp_319 + tmp_324*tmp_9;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_2*tmp_343 + tmp_348*tmp_5;
      real_t tmp_350 = tmp_13*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_351 = tmp_11*tmp_338 + tmp_14*tmp_343 + tmp_348*tmp_9;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_2*tmp_367 + tmp_372*tmp_5;
      real_t tmp_374 = tmp_13*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_375 = tmp_11*tmp_362 + tmp_14*tmp_367 + tmp_372*tmp_9;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_2*tmp_391 + tmp_396*tmp_5;
      real_t tmp_398 = tmp_13*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_399 = tmp_11*tmp_386 + tmp_14*tmp_391 + tmp_396*tmp_9;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_2*tmp_415 + tmp_420*tmp_5;
      real_t tmp_422 = tmp_13*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_423 = tmp_11*tmp_410 + tmp_14*tmp_415 + tmp_420*tmp_9;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_2*tmp_439 + tmp_444*tmp_5;
      real_t tmp_446 = tmp_13*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_447 = tmp_11*tmp_434 + tmp_14*tmp_439 + tmp_444*tmp_9;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_2*tmp_463 + tmp_468*tmp_5;
      real_t tmp_470 = tmp_13*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_471 = tmp_11*tmp_458 + tmp_14*tmp_463 + tmp_468*tmp_9;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_2*tmp_487 + tmp_492*tmp_5;
      real_t tmp_494 = tmp_13*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_495 = tmp_11*tmp_482 + tmp_14*tmp_487 + tmp_492*tmp_9;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_2*tmp_511 + tmp_5*tmp_516;
      real_t tmp_518 = tmp_13*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_519 = tmp_11*tmp_506 + tmp_14*tmp_511 + tmp_516*tmp_9;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_2*tmp_535 + tmp_5*tmp_540;
      real_t tmp_542 = tmp_13*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_543 = tmp_11*tmp_530 + tmp_14*tmp_535 + tmp_540*tmp_9;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_2*tmp_559 + tmp_5*tmp_564;
      real_t tmp_566 = tmp_13*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_567 = tmp_11*tmp_554 + tmp_14*tmp_559 + tmp_564*tmp_9;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_2*tmp_19;
      real_t tmp_572 = tmp_26*tmp_571;
      real_t tmp_573 = tmp_33*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_62 + 0.5*p_affine_13_1*tmp_69 + 0.5*p_affine_13_2*tmp_76;
      real_t tmp_575 = tmp_44*tmp_571;
      real_t tmp_576 = tmp_46*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_61 + 0.5*p_affine_13_1*tmp_68 + 0.5*p_affine_13_2*tmp_75;
      real_t tmp_578 = tmp_52*tmp_571;
      real_t tmp_579 = tmp_54*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_60 + 0.5*p_affine_13_1*tmp_67 + 0.5*p_affine_13_2*tmp_74;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_0_1 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_0_2 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_0_3 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_3_0 + tmp_0;
      real_t tmp_7 = p_affine_2_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_0_2;
      real_t tmp_11 = p_affine_3_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_1_2 + tmp_10;
      real_t tmp_14 = p_affine_2_2 + tmp_10;
      real_t tmp_15 = p_affine_1_1 + tmp_3;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_14*tmp_4;
      real_t tmp_18 = tmp_11*tmp_15;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_18*tmp_2);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = 0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22;
      real_t tmp_24 = p_affine_8_2 + tmp_10;
      real_t tmp_25 = tmp_19*(tmp_23 + tmp_24);
      real_t tmp_26 = -tmp_11*tmp_2 + tmp_14*tmp_6;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = 0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29;
      real_t tmp_31 = p_affine_8_1 + tmp_3;
      real_t tmp_32 = tmp_19*(tmp_30 + tmp_31);
      real_t tmp_33 = tmp_12 - tmp_17;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = 0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36;
      real_t tmp_38 = p_affine_8_0 + tmp_0;
      real_t tmp_39 = tmp_19*(tmp_37 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_9 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = -tmp_1*tmp_4 + tmp_16;
      real_t tmp_42 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = tmp_13*tmp_4 - tmp_18;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = tmp_1*tmp_7 - tmp_15*tmp_2;
      real_t tmp_46 = -tmp_1*tmp_14 + tmp_13*tmp_2;
      real_t tmp_47 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_2*tmp_44 + tmp_48*tmp_6;
      real_t tmp_50 = -p_affine_4_1;
      real_t tmp_51 = p_affine_5_1 + tmp_50;
      real_t tmp_52 = -p_affine_4_2;
      real_t tmp_53 = p_affine_6_2 + tmp_52;
      real_t tmp_54 = tmp_51*tmp_53;
      real_t tmp_55 = p_affine_6_1 + tmp_50;
      real_t tmp_56 = p_affine_5_2 + tmp_52;
      real_t tmp_57 = tmp_54 - tmp_55*tmp_56;
      real_t tmp_58 = p_affine_7_2 + tmp_52;
      real_t tmp_59 = -p_affine_4_0;
      real_t tmp_60 = p_affine_5_0 + tmp_59;
      real_t tmp_61 = tmp_55*tmp_60;
      real_t tmp_62 = p_affine_7_1 + tmp_50;
      real_t tmp_63 = p_affine_6_0 + tmp_59;
      real_t tmp_64 = tmp_56*tmp_63;
      real_t tmp_65 = p_affine_7_0 + tmp_59;
      real_t tmp_66 = tmp_60*tmp_62;
      real_t tmp_67 = tmp_51*tmp_63;
      real_t tmp_68 = tmp_56*tmp_65;
      real_t tmp_69 = 1.0 / (-tmp_53*tmp_66 + tmp_54*tmp_65 - tmp_55*tmp_68 + tmp_58*tmp_61 - tmp_58*tmp_67 + tmp_62*tmp_64);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_57*tmp_70;
      real_t tmp_72 = -tmp_51*tmp_58 + tmp_56*tmp_62;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = -tmp_53*tmp_62 + tmp_55*tmp_58;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_2;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_15*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_7;
      real_t tmp_80 = -tmp_53*tmp_60 + tmp_64;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = tmp_58*tmp_60 - tmp_68;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = tmp_53*tmp_65 - tmp_58*tmp_63;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_11*tmp_48 + tmp_13*tmp_40 + tmp_14*tmp_44;
      real_t tmp_89 = tmp_61 - tmp_67;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = tmp_51*tmp_65 - tmp_66;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = -tmp_55*tmp_65 + tmp_62*tmp_63;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*tmp_86 + 0.5*p_affine_13_2*(-tmp_91 - tmp_93 - tmp_95);
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_23 + tmp_97);
      real_t tmp_99 = tmp_89*tmp_98;
      real_t tmp_100 = tmp_92*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_50;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_30);
      real_t tmp_103 = tmp_102*tmp_80;
      real_t tmp_104 = tmp_102*tmp_82;
      real_t tmp_105 = tmp_94*tmp_98;
      real_t tmp_106 = tmp_102*tmp_84;
      real_t tmp_107 = p_affine_8_0 + tmp_59;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_37);
      real_t tmp_109 = tmp_108*tmp_57;
      real_t tmp_110 = tmp_108*tmp_72;
      real_t tmp_111 = tmp_108*tmp_74;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)*std::abs(tmp_113*tmp_22 - tmp_115*tmp_29)) + (std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)*std::abs(tmp_113*tmp_36 - tmp_114*tmp_29)) + (std::abs(tmp_114*tmp_22 - tmp_115*tmp_36)*std::abs(tmp_114*tmp_22 - tmp_115*tmp_36));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_120*tmp_9;
      real_t tmp_122 = tmp_120*tmp_41;
      real_t tmp_123 = tmp_120*tmp_45;
      real_t tmp_124 = tmp_120*tmp_13;
      real_t tmp_125 = tmp_120*tmp_14;
      real_t tmp_126 = tmp_11*tmp_120;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_1*tmp_121 + tmp_122*tmp_2 + tmp_123*tmp_6 + tmp_124*tmp_33 + tmp_125*tmp_43 + tmp_126*tmp_47) + 0.5*p_affine_13_1*(tmp_121*tmp_15 + tmp_122*tmp_7 + tmp_123*tmp_4 + tmp_124*tmp_26 + tmp_125*tmp_42 + tmp_126*tmp_46) + 0.5*p_affine_13_2*(tmp_11*tmp_119*tmp_45 + tmp_119*tmp_13*tmp_9 + tmp_119*tmp_14*tmp_41);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_24);
      real_t tmp_132 = 0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_31);
      real_t tmp_134 = 0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_38);
      real_t tmp_136 = tmp_131*tmp_9 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_2 + tmp_138*tmp_6;
      real_t tmp_140 = tmp_136*tmp_15 + tmp_137*tmp_7 + tmp_138*tmp_4;
      real_t tmp_141 = tmp_11*tmp_138 + tmp_13*tmp_136 + tmp_137*tmp_14;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_89;
      real_t tmp_144 = tmp_142*tmp_92;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_80;
      real_t tmp_147 = tmp_145*tmp_82;
      real_t tmp_148 = tmp_142*tmp_94;
      real_t tmp_149 = tmp_145*tmp_84;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_57;
      real_t tmp_152 = tmp_150*tmp_72;
      real_t tmp_153 = tmp_150*tmp_74;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_24);
      real_t tmp_159 = 0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_31);
      real_t tmp_161 = 0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_38);
      real_t tmp_163 = tmp_158*tmp_9 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_6;
      real_t tmp_167 = tmp_15*tmp_163 + tmp_164*tmp_7 + tmp_165*tmp_4;
      real_t tmp_168 = tmp_11*tmp_165 + tmp_13*tmp_163 + tmp_14*tmp_164;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_89;
      real_t tmp_171 = tmp_169*tmp_92;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_80;
      real_t tmp_174 = tmp_172*tmp_82;
      real_t tmp_175 = tmp_169*tmp_94;
      real_t tmp_176 = tmp_172*tmp_84;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_57;
      real_t tmp_179 = tmp_177*tmp_72;
      real_t tmp_180 = tmp_177*tmp_74;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_24);
      real_t tmp_186 = 0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_31);
      real_t tmp_188 = 0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_38);
      real_t tmp_190 = tmp_185*tmp_9 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_2 + tmp_192*tmp_6;
      real_t tmp_194 = tmp_15*tmp_190 + tmp_191*tmp_7 + tmp_192*tmp_4;
      real_t tmp_195 = tmp_11*tmp_192 + tmp_13*tmp_190 + tmp_14*tmp_191;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_89;
      real_t tmp_198 = tmp_196*tmp_92;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_80;
      real_t tmp_201 = tmp_199*tmp_82;
      real_t tmp_202 = tmp_196*tmp_94;
      real_t tmp_203 = tmp_199*tmp_84;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_57;
      real_t tmp_206 = tmp_204*tmp_72;
      real_t tmp_207 = tmp_204*tmp_74;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22;
      real_t tmp_212 = tmp_19*(tmp_211 + tmp_24);
      real_t tmp_213 = 0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_31);
      real_t tmp_215 = 0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_38);
      real_t tmp_217 = tmp_212*tmp_9 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_2*tmp_218 + tmp_219*tmp_6;
      real_t tmp_221 = tmp_15*tmp_217 + tmp_218*tmp_7 + tmp_219*tmp_4;
      real_t tmp_222 = tmp_11*tmp_219 + tmp_13*tmp_217 + tmp_14*tmp_218;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_89;
      real_t tmp_225 = tmp_223*tmp_92;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_80;
      real_t tmp_228 = tmp_226*tmp_82;
      real_t tmp_229 = tmp_223*tmp_94;
      real_t tmp_230 = tmp_226*tmp_84;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_57;
      real_t tmp_233 = tmp_231*tmp_72;
      real_t tmp_234 = tmp_231*tmp_74;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_239 = tmp_19*(tmp_238 + tmp_24);
      real_t tmp_240 = 0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_31);
      real_t tmp_242 = 0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_38);
      real_t tmp_244 = tmp_239*tmp_9 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_2*tmp_245 + tmp_246*tmp_6;
      real_t tmp_248 = tmp_15*tmp_244 + tmp_245*tmp_7 + tmp_246*tmp_4;
      real_t tmp_249 = tmp_11*tmp_246 + tmp_13*tmp_244 + tmp_14*tmp_245;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_89;
      real_t tmp_252 = tmp_250*tmp_92;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_80;
      real_t tmp_255 = tmp_253*tmp_82;
      real_t tmp_256 = tmp_250*tmp_94;
      real_t tmp_257 = tmp_253*tmp_84;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_57;
      real_t tmp_260 = tmp_258*tmp_72;
      real_t tmp_261 = tmp_258*tmp_74;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_266 = tmp_19*(tmp_24 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_31);
      real_t tmp_269 = 0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_38);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_9 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_2*tmp_272 + tmp_273*tmp_6;
      real_t tmp_275 = tmp_15*tmp_271 + tmp_272*tmp_7 + tmp_273*tmp_4;
      real_t tmp_276 = tmp_11*tmp_273 + tmp_13*tmp_271 + tmp_14*tmp_272;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_89;
      real_t tmp_279 = tmp_277*tmp_92;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_80;
      real_t tmp_282 = tmp_280*tmp_82;
      real_t tmp_283 = tmp_277*tmp_94;
      real_t tmp_284 = tmp_280*tmp_84;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_57;
      real_t tmp_287 = tmp_285*tmp_72;
      real_t tmp_288 = tmp_285*tmp_74;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_293 = tmp_19*(tmp_24 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_295 = tmp_19*(tmp_294 + tmp_31);
      real_t tmp_296 = 0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_38);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_9 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_2*tmp_299 + tmp_300*tmp_6;
      real_t tmp_302 = tmp_15*tmp_298 + tmp_299*tmp_7 + tmp_300*tmp_4;
      real_t tmp_303 = tmp_11*tmp_300 + tmp_13*tmp_298 + tmp_14*tmp_299;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_89;
      real_t tmp_306 = tmp_304*tmp_92;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_80;
      real_t tmp_309 = tmp_307*tmp_82;
      real_t tmp_310 = tmp_304*tmp_94;
      real_t tmp_311 = tmp_307*tmp_84;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_57;
      real_t tmp_314 = tmp_312*tmp_72;
      real_t tmp_315 = tmp_312*tmp_74;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_320 = tmp_19*(tmp_24 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_322 = tmp_19*(tmp_31 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_38);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_9 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_2*tmp_326 + tmp_327*tmp_6;
      real_t tmp_329 = tmp_15*tmp_325 + tmp_326*tmp_7 + tmp_327*tmp_4;
      real_t tmp_330 = tmp_11*tmp_327 + tmp_13*tmp_325 + tmp_14*tmp_326;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_89;
      real_t tmp_333 = tmp_331*tmp_92;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_80;
      real_t tmp_336 = tmp_334*tmp_82;
      real_t tmp_337 = tmp_331*tmp_94;
      real_t tmp_338 = tmp_334*tmp_84;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_57;
      real_t tmp_341 = tmp_339*tmp_72;
      real_t tmp_342 = tmp_339*tmp_74;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22;
      real_t tmp_347 = tmp_19*(tmp_24 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29;
      real_t tmp_349 = tmp_19*(tmp_31 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36;
      real_t tmp_351 = tmp_19*(tmp_350 + tmp_38);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_9 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_2*tmp_353 + tmp_354*tmp_6;
      real_t tmp_356 = tmp_15*tmp_352 + tmp_353*tmp_7 + tmp_354*tmp_4;
      real_t tmp_357 = tmp_11*tmp_354 + tmp_13*tmp_352 + tmp_14*tmp_353;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_89;
      real_t tmp_360 = tmp_358*tmp_92;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_80;
      real_t tmp_363 = tmp_361*tmp_82;
      real_t tmp_364 = tmp_358*tmp_94;
      real_t tmp_365 = tmp_361*tmp_84;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_57;
      real_t tmp_368 = tmp_366*tmp_72;
      real_t tmp_369 = tmp_366*tmp_74;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22;
      real_t tmp_374 = tmp_19*(tmp_24 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29;
      real_t tmp_376 = tmp_19*(tmp_31 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36;
      real_t tmp_378 = tmp_19*(tmp_377 + tmp_38);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_9 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_2*tmp_380 + tmp_381*tmp_6;
      real_t tmp_383 = tmp_15*tmp_379 + tmp_380*tmp_7 + tmp_381*tmp_4;
      real_t tmp_384 = tmp_11*tmp_381 + tmp_13*tmp_379 + tmp_14*tmp_380;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_89;
      real_t tmp_387 = tmp_385*tmp_92;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_80;
      real_t tmp_390 = tmp_388*tmp_82;
      real_t tmp_391 = tmp_385*tmp_94;
      real_t tmp_392 = tmp_388*tmp_84;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_57;
      real_t tmp_395 = tmp_393*tmp_72;
      real_t tmp_396 = tmp_393*tmp_74;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22;
      real_t tmp_401 = tmp_19*(tmp_24 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29;
      real_t tmp_403 = tmp_19*(tmp_31 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36;
      real_t tmp_405 = tmp_19*(tmp_38 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_9 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_2*tmp_407 + tmp_408*tmp_6;
      real_t tmp_410 = tmp_15*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_7;
      real_t tmp_411 = tmp_11*tmp_408 + tmp_13*tmp_406 + tmp_14*tmp_407;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_89;
      real_t tmp_414 = tmp_412*tmp_92;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_80;
      real_t tmp_417 = tmp_415*tmp_82;
      real_t tmp_418 = tmp_412*tmp_94;
      real_t tmp_419 = tmp_415*tmp_84;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_57;
      real_t tmp_422 = tmp_420*tmp_72;
      real_t tmp_423 = tmp_420*tmp_74;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_428 = tmp_19*(tmp_24 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_430 = tmp_19*(tmp_31 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_432 = tmp_19*(tmp_38 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_9 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_2*tmp_434 + tmp_435*tmp_6;
      real_t tmp_437 = tmp_15*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_7;
      real_t tmp_438 = tmp_11*tmp_435 + tmp_13*tmp_433 + tmp_14*tmp_434;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_89;
      real_t tmp_441 = tmp_439*tmp_92;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_80;
      real_t tmp_444 = tmp_442*tmp_82;
      real_t tmp_445 = tmp_439*tmp_94;
      real_t tmp_446 = tmp_442*tmp_84;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_57;
      real_t tmp_449 = tmp_447*tmp_72;
      real_t tmp_450 = tmp_447*tmp_74;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_455 = tmp_19*(tmp_24 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_457 = tmp_19*(tmp_31 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_459 = tmp_19*(tmp_38 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_9 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_2*tmp_461 + tmp_462*tmp_6;
      real_t tmp_464 = tmp_15*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_7;
      real_t tmp_465 = tmp_11*tmp_462 + tmp_13*tmp_460 + tmp_14*tmp_461;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_89;
      real_t tmp_468 = tmp_466*tmp_92;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_80;
      real_t tmp_471 = tmp_469*tmp_82;
      real_t tmp_472 = tmp_466*tmp_94;
      real_t tmp_473 = tmp_469*tmp_84;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_57;
      real_t tmp_476 = tmp_474*tmp_72;
      real_t tmp_477 = tmp_474*tmp_74;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22;
      real_t tmp_482 = tmp_19*(tmp_24 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29;
      real_t tmp_484 = tmp_19*(tmp_31 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36;
      real_t tmp_486 = tmp_19*(tmp_38 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_9 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_2*tmp_488 + tmp_489*tmp_6;
      real_t tmp_491 = tmp_15*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_7;
      real_t tmp_492 = tmp_11*tmp_489 + tmp_13*tmp_487 + tmp_14*tmp_488;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_89;
      real_t tmp_495 = tmp_493*tmp_92;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_80;
      real_t tmp_498 = tmp_496*tmp_82;
      real_t tmp_499 = tmp_493*tmp_94;
      real_t tmp_500 = tmp_496*tmp_84;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_57;
      real_t tmp_503 = tmp_501*tmp_72;
      real_t tmp_504 = tmp_501*tmp_74;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22;
      real_t tmp_509 = tmp_19*(tmp_24 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29;
      real_t tmp_511 = tmp_19*(tmp_31 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36;
      real_t tmp_513 = tmp_19*(tmp_38 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_9 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_2*tmp_515 + tmp_516*tmp_6;
      real_t tmp_518 = tmp_15*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_7;
      real_t tmp_519 = tmp_11*tmp_516 + tmp_13*tmp_514 + tmp_14*tmp_515;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_89;
      real_t tmp_522 = tmp_520*tmp_92;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_80;
      real_t tmp_525 = tmp_523*tmp_82;
      real_t tmp_526 = tmp_520*tmp_94;
      real_t tmp_527 = tmp_523*tmp_84;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_57;
      real_t tmp_530 = tmp_528*tmp_72;
      real_t tmp_531 = tmp_528*tmp_74;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_536 = tmp_19*(tmp_24 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_538 = tmp_19*(tmp_31 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_540 = tmp_19*(tmp_38 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_9 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_2*tmp_542 + tmp_543*tmp_6;
      real_t tmp_545 = tmp_15*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_7;
      real_t tmp_546 = tmp_11*tmp_543 + tmp_13*tmp_541 + tmp_14*tmp_542;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_89;
      real_t tmp_549 = tmp_547*tmp_92;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_80;
      real_t tmp_552 = tmp_550*tmp_82;
      real_t tmp_553 = tmp_547*tmp_94;
      real_t tmp_554 = tmp_550*tmp_84;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_57;
      real_t tmp_557 = tmp_555*tmp_72;
      real_t tmp_558 = tmp_555*tmp_74;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22;
      real_t tmp_563 = tmp_19*(tmp_24 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29;
      real_t tmp_565 = tmp_19*(tmp_31 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36;
      real_t tmp_567 = tmp_19*(tmp_38 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_9 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_2*tmp_569 + tmp_570*tmp_6;
      real_t tmp_572 = tmp_15*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_7;
      real_t tmp_573 = tmp_11*tmp_570 + tmp_13*tmp_568 + tmp_14*tmp_569;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_89;
      real_t tmp_576 = tmp_574*tmp_92;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_577*tmp_80;
      real_t tmp_579 = tmp_577*tmp_82;
      real_t tmp_580 = tmp_574*tmp_94;
      real_t tmp_581 = tmp_577*tmp_84;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_57*tmp_582;
      real_t tmp_584 = tmp_582*tmp_72;
      real_t tmp_585 = tmp_582*tmp_74;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22;
      real_t tmp_590 = tmp_19*(tmp_24 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29;
      real_t tmp_592 = tmp_19*(tmp_31 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36;
      real_t tmp_594 = tmp_19*(tmp_38 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_9 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_2*tmp_596 + tmp_597*tmp_6;
      real_t tmp_599 = tmp_15*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_7;
      real_t tmp_600 = tmp_11*tmp_597 + tmp_13*tmp_595 + tmp_14*tmp_596;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_89;
      real_t tmp_603 = tmp_601*tmp_92;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_604*tmp_80;
      real_t tmp_606 = tmp_604*tmp_82;
      real_t tmp_607 = tmp_601*tmp_94;
      real_t tmp_608 = tmp_604*tmp_84;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_57*tmp_609;
      real_t tmp_611 = tmp_609*tmp_72;
      real_t tmp_612 = tmp_609*tmp_74;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22;
      real_t tmp_617 = tmp_19*(tmp_24 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29;
      real_t tmp_619 = tmp_19*(tmp_31 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36;
      real_t tmp_621 = tmp_19*(tmp_38 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_9 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_2*tmp_623 + tmp_6*tmp_624;
      real_t tmp_626 = tmp_15*tmp_622 + tmp_4*tmp_624 + tmp_623*tmp_7;
      real_t tmp_627 = tmp_11*tmp_624 + tmp_13*tmp_622 + tmp_14*tmp_623;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_89;
      real_t tmp_630 = tmp_628*tmp_92;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_631*tmp_80;
      real_t tmp_633 = tmp_631*tmp_82;
      real_t tmp_634 = tmp_628*tmp_94;
      real_t tmp_635 = tmp_631*tmp_84;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_57*tmp_636;
      real_t tmp_638 = tmp_636*tmp_72;
      real_t tmp_639 = tmp_636*tmp_74;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22;
      real_t tmp_644 = tmp_19*(tmp_24 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29;
      real_t tmp_646 = tmp_19*(tmp_31 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36;
      real_t tmp_648 = tmp_19*(tmp_38 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_9 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_2*tmp_650 + tmp_6*tmp_651;
      real_t tmp_653 = tmp_15*tmp_649 + tmp_4*tmp_651 + tmp_650*tmp_7;
      real_t tmp_654 = tmp_11*tmp_651 + tmp_13*tmp_649 + tmp_14*tmp_650;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_89;
      real_t tmp_657 = tmp_655*tmp_92;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_658*tmp_80;
      real_t tmp_660 = tmp_658*tmp_82;
      real_t tmp_661 = tmp_655*tmp_94;
      real_t tmp_662 = tmp_658*tmp_84;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_57*tmp_663;
      real_t tmp_665 = tmp_663*tmp_72;
      real_t tmp_666 = tmp_663*tmp_74;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_2*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_85 + 0.5*p_affine_13_2*tmp_95;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_73 + 0.5*p_affine_13_1*tmp_83 + 0.5*p_affine_13_2*tmp_93;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_57*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_71 + 0.5*p_affine_13_1*tmp_81 + 0.5*p_affine_13_2*tmp_91;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 + tmp_112*tmp_127 - tmp_49*tmp_78 - tmp_79*tmp_87 - tmp_88*tmp_96) + tmp_156*(tmp_127*tmp_154 - tmp_139*tmp_78 - tmp_140*tmp_87 - tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(tmp_127*tmp_181 - tmp_166*tmp_78 - tmp_167*tmp_87 - tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(tmp_127*tmp_208 - tmp_193*tmp_78 - tmp_194*tmp_87 - tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(tmp_127*tmp_235 - tmp_220*tmp_78 - tmp_221*tmp_87 - tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(tmp_127*tmp_262 - tmp_247*tmp_78 - tmp_248*tmp_87 - tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(tmp_127*tmp_289 - tmp_274*tmp_78 - tmp_275*tmp_87 - tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(tmp_127*tmp_316 - tmp_301*tmp_78 - tmp_302*tmp_87 - tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(tmp_127*tmp_343 - tmp_328*tmp_78 - tmp_329*tmp_87 - tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(tmp_127*tmp_370 - tmp_355*tmp_78 - tmp_356*tmp_87 - tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(tmp_127*tmp_397 - tmp_382*tmp_78 - tmp_383*tmp_87 - tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(tmp_127*tmp_424 - tmp_409*tmp_78 - tmp_410*tmp_87 - tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(tmp_127*tmp_451 - tmp_436*tmp_78 - tmp_437*tmp_87 - tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(tmp_127*tmp_478 - tmp_463*tmp_78 - tmp_464*tmp_87 - tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(tmp_127*tmp_505 - tmp_490*tmp_78 - tmp_491*tmp_87 - tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(tmp_127*tmp_532 - tmp_517*tmp_78 - tmp_518*tmp_87 - tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(tmp_127*tmp_559 - tmp_544*tmp_78 - tmp_545*tmp_87 - tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(tmp_127*tmp_586 - tmp_571*tmp_78 - tmp_572*tmp_87 - tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(tmp_127*tmp_613 - tmp_598*tmp_78 - tmp_599*tmp_87 - tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(tmp_127*tmp_640 - tmp_625*tmp_78 - tmp_626*tmp_87 - tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(tmp_127*tmp_667 - tmp_652*tmp_78 - tmp_653*tmp_87 - tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_0_1 = tmp_129*(-tmp_118*tmp_674 + tmp_127*tmp_674 - tmp_49*tmp_672 - tmp_671*tmp_79 - tmp_673*tmp_88) + tmp_156*(tmp_127*tmp_675 - tmp_139*tmp_672 - tmp_140*tmp_671 - tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(tmp_127*tmp_676 - tmp_166*tmp_672 - tmp_167*tmp_671 - tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(tmp_127*tmp_677 - tmp_193*tmp_672 - tmp_194*tmp_671 - tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(tmp_127*tmp_678 - tmp_220*tmp_672 - tmp_221*tmp_671 - tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(tmp_127*tmp_679 - tmp_247*tmp_672 - tmp_248*tmp_671 - tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(tmp_127*tmp_680 - tmp_274*tmp_672 - tmp_275*tmp_671 - tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(tmp_127*tmp_681 - tmp_301*tmp_672 - tmp_302*tmp_671 - tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(tmp_127*tmp_682 - tmp_328*tmp_672 - tmp_329*tmp_671 - tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(tmp_127*tmp_683 - tmp_355*tmp_672 - tmp_356*tmp_671 - tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(tmp_127*tmp_684 - tmp_382*tmp_672 - tmp_383*tmp_671 - tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(tmp_127*tmp_685 - tmp_409*tmp_672 - tmp_410*tmp_671 - tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(tmp_127*tmp_686 - tmp_436*tmp_672 - tmp_437*tmp_671 - tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(tmp_127*tmp_687 - tmp_463*tmp_672 - tmp_464*tmp_671 - tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(tmp_127*tmp_688 - tmp_490*tmp_672 - tmp_491*tmp_671 - tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(tmp_127*tmp_689 - tmp_517*tmp_672 - tmp_518*tmp_671 - tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(tmp_127*tmp_690 - tmp_544*tmp_672 - tmp_545*tmp_671 - tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(tmp_127*tmp_691 - tmp_571*tmp_672 - tmp_572*tmp_671 - tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(tmp_127*tmp_692 - tmp_598*tmp_672 - tmp_599*tmp_671 - tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(tmp_127*tmp_693 - tmp_625*tmp_672 - tmp_626*tmp_671 - tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(tmp_127*tmp_694 - tmp_652*tmp_672 - tmp_653*tmp_671 - tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_0_2 = tmp_129*(-tmp_118*tmp_698 + tmp_127*tmp_698 - tmp_49*tmp_696 - tmp_695*tmp_79 - tmp_697*tmp_88) + tmp_156*(tmp_127*tmp_699 - tmp_139*tmp_696 - tmp_140*tmp_695 - tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(tmp_127*tmp_700 - tmp_166*tmp_696 - tmp_167*tmp_695 - tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(tmp_127*tmp_701 - tmp_193*tmp_696 - tmp_194*tmp_695 - tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(tmp_127*tmp_702 - tmp_220*tmp_696 - tmp_221*tmp_695 - tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(tmp_127*tmp_703 - tmp_247*tmp_696 - tmp_248*tmp_695 - tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(tmp_127*tmp_704 - tmp_274*tmp_696 - tmp_275*tmp_695 - tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(tmp_127*tmp_705 - tmp_301*tmp_696 - tmp_302*tmp_695 - tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(tmp_127*tmp_706 - tmp_328*tmp_696 - tmp_329*tmp_695 - tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(tmp_127*tmp_707 - tmp_355*tmp_696 - tmp_356*tmp_695 - tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(tmp_127*tmp_708 - tmp_382*tmp_696 - tmp_383*tmp_695 - tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(tmp_127*tmp_709 - tmp_409*tmp_696 - tmp_410*tmp_695 - tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(tmp_127*tmp_710 - tmp_436*tmp_696 - tmp_437*tmp_695 - tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(tmp_127*tmp_711 - tmp_463*tmp_696 - tmp_464*tmp_695 - tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(tmp_127*tmp_712 - tmp_490*tmp_696 - tmp_491*tmp_695 - tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(tmp_127*tmp_713 - tmp_517*tmp_696 - tmp_518*tmp_695 - tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(tmp_127*tmp_714 - tmp_544*tmp_696 - tmp_545*tmp_695 - tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(tmp_127*tmp_715 - tmp_571*tmp_696 - tmp_572*tmp_695 - tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(tmp_127*tmp_716 - tmp_598*tmp_696 - tmp_599*tmp_695 - tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(tmp_127*tmp_717 - tmp_625*tmp_696 - tmp_626*tmp_695 - tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(tmp_127*tmp_718 - tmp_652*tmp_696 - tmp_653*tmp_695 - tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_0_3 = tmp_129*(-tmp_118*tmp_722 + tmp_127*tmp_722 - tmp_49*tmp_720 - tmp_719*tmp_79 - tmp_721*tmp_88) + tmp_156*(tmp_127*tmp_723 - tmp_139*tmp_720 - tmp_140*tmp_719 - tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(tmp_127*tmp_724 - tmp_166*tmp_720 - tmp_167*tmp_719 - tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(tmp_127*tmp_725 - tmp_193*tmp_720 - tmp_194*tmp_719 - tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(tmp_127*tmp_726 - tmp_220*tmp_720 - tmp_221*tmp_719 - tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(tmp_127*tmp_727 - tmp_247*tmp_720 - tmp_248*tmp_719 - tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(tmp_127*tmp_728 - tmp_274*tmp_720 - tmp_275*tmp_719 - tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(tmp_127*tmp_729 - tmp_301*tmp_720 - tmp_302*tmp_719 - tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(tmp_127*tmp_730 - tmp_328*tmp_720 - tmp_329*tmp_719 - tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(tmp_127*tmp_731 - tmp_355*tmp_720 - tmp_356*tmp_719 - tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(tmp_127*tmp_732 - tmp_382*tmp_720 - tmp_383*tmp_719 - tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(tmp_127*tmp_733 - tmp_409*tmp_720 - tmp_410*tmp_719 - tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(tmp_127*tmp_734 - tmp_436*tmp_720 - tmp_437*tmp_719 - tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(tmp_127*tmp_735 - tmp_463*tmp_720 - tmp_464*tmp_719 - tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(tmp_127*tmp_736 - tmp_490*tmp_720 - tmp_491*tmp_719 - tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(tmp_127*tmp_737 - tmp_517*tmp_720 - tmp_518*tmp_719 - tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(tmp_127*tmp_738 - tmp_544*tmp_720 - tmp_545*tmp_719 - tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(tmp_127*tmp_739 - tmp_571*tmp_720 - tmp_572*tmp_719 - tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(tmp_127*tmp_740 - tmp_598*tmp_720 - tmp_599*tmp_719 - tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(tmp_127*tmp_741 - tmp_625*tmp_720 - tmp_626*tmp_719 - tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(tmp_127*tmp_742 - tmp_652*tmp_720 - tmp_653*tmp_719 - tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_26 = -p_affine_8_1;
      real_t tmp_27 = p_affine_9_1 + tmp_26;
      real_t tmp_28 = p_affine_10_1 + tmp_26;
      real_t tmp_29 = p_affine_8_1 + tmp_3;
      real_t tmp_30 = tmp_19*(0.031405749086161582*tmp_27 + 0.93718850182767688*tmp_28 + tmp_29);
      real_t tmp_31 = tmp_10 - tmp_16;
      real_t tmp_32 = -p_affine_8_0;
      real_t tmp_33 = p_affine_9_0 + tmp_32;
      real_t tmp_34 = p_affine_10_0 + tmp_32;
      real_t tmp_35 = p_affine_8_0 + tmp_0;
      real_t tmp_36 = tmp_19*(0.031405749086161582*tmp_33 + 0.93718850182767688*tmp_34 + tmp_35);
      real_t tmp_37 = tmp_24*tmp_7 + tmp_25*tmp_30 + tmp_31*tmp_36 - 1.0/4.0;
      real_t tmp_38 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_39 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_40 = tmp_12 - tmp_17;
      real_t tmp_41 = tmp_24*tmp_38 + tmp_30*tmp_39 + tmp_36*tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_43 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_44 = tmp_15 - tmp_18;
      real_t tmp_45 = tmp_24*tmp_42 + tmp_30*tmp_43 + tmp_36*tmp_44 - 1.0/4.0;
      real_t tmp_46 = tmp_1*tmp_37 + tmp_2*tmp_41 + tmp_45*tmp_5;
      real_t tmp_47 = 0.5*tmp_19;
      real_t tmp_48 = tmp_44*tmp_47;
      real_t tmp_49 = tmp_40*tmp_47;
      real_t tmp_50 = tmp_31*tmp_47;
      real_t tmp_51 = -tmp_48 - tmp_49 - tmp_50;
      real_t tmp_52 = p_affine_13_2*tmp_51;
      real_t tmp_53 = tmp_13*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_6;
      real_t tmp_54 = tmp_43*tmp_47;
      real_t tmp_55 = tmp_39*tmp_47;
      real_t tmp_56 = tmp_25*tmp_47;
      real_t tmp_57 = -tmp_54 - tmp_55 - tmp_56;
      real_t tmp_58 = p_affine_13_2*tmp_57;
      real_t tmp_59 = 1.0*tmp_19;
      real_t tmp_60 = tmp_42*tmp_59;
      real_t tmp_61 = tmp_38*tmp_59;
      real_t tmp_62 = tmp_59*tmp_7;
      real_t tmp_63 = p_affine_13_0*tmp_51 + p_affine_13_1*tmp_57 + p_affine_13_2*(-tmp_60 - tmp_61 - tmp_62);
      real_t tmp_64 = tmp_11*tmp_37 + tmp_14*tmp_41 + tmp_45*tmp_9;
      real_t tmp_65 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_66 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_67 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_68 = 2.0*std::pow((std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)*std::abs(tmp_22*tmp_65 - tmp_28*tmp_67)) + (std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)*std::abs(tmp_22*tmp_66 - tmp_34*tmp_67)) + (std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)*std::abs(tmp_28*tmp_66 - tmp_34*tmp_65)), 1.0/2.0);
      real_t tmp_69 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_68;
      real_t tmp_70 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_71 = tmp_19*(0.19601935860219369*tmp_27 + 0.60796128279561268*tmp_28 + tmp_29);
      real_t tmp_72 = tmp_19*(0.19601935860219369*tmp_33 + 0.60796128279561268*tmp_34 + tmp_35);
      real_t tmp_73 = tmp_25*tmp_71 + tmp_31*tmp_72 + tmp_7*tmp_70 - 1.0/4.0;
      real_t tmp_74 = tmp_38*tmp_70 + tmp_39*tmp_71 + tmp_40*tmp_72 - 1.0/4.0;
      real_t tmp_75 = tmp_42*tmp_70 + tmp_43*tmp_71 + tmp_44*tmp_72 - 1.0/4.0;
      real_t tmp_76 = tmp_1*tmp_73 + tmp_2*tmp_74 + tmp_5*tmp_75;
      real_t tmp_77 = tmp_13*tmp_73 + tmp_4*tmp_75 + tmp_6*tmp_74;
      real_t tmp_78 = tmp_11*tmp_73 + tmp_14*tmp_74 + tmp_75*tmp_9;
      real_t tmp_79 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_68;
      real_t tmp_80 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_81 = tmp_19*(0.37605877282253791*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_82 = tmp_19*(0.37605877282253791*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_83 = tmp_25*tmp_81 + tmp_31*tmp_82 + tmp_7*tmp_80 - 1.0/4.0;
      real_t tmp_84 = tmp_38*tmp_80 + tmp_39*tmp_81 + tmp_40*tmp_82 - 1.0/4.0;
      real_t tmp_85 = tmp_42*tmp_80 + tmp_43*tmp_81 + tmp_44*tmp_82 - 1.0/4.0;
      real_t tmp_86 = tmp_1*tmp_83 + tmp_2*tmp_84 + tmp_5*tmp_85;
      real_t tmp_87 = tmp_13*tmp_83 + tmp_4*tmp_85 + tmp_6*tmp_84;
      real_t tmp_88 = tmp_11*tmp_83 + tmp_14*tmp_84 + tmp_85*tmp_9;
      real_t tmp_89 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_68;
      real_t tmp_90 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_91 = tmp_19*(0.041227165399737475*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_93 = tmp_25*tmp_91 + tmp_31*tmp_92 + tmp_7*tmp_90 - 1.0/4.0;
      real_t tmp_94 = tmp_38*tmp_90 + tmp_39*tmp_91 + tmp_40*tmp_92 - 1.0/4.0;
      real_t tmp_95 = tmp_42*tmp_90 + tmp_43*tmp_91 + tmp_44*tmp_92 - 1.0/4.0;
      real_t tmp_96 = tmp_1*tmp_93 + tmp_2*tmp_94 + tmp_5*tmp_95;
      real_t tmp_97 = tmp_13*tmp_93 + tmp_4*tmp_95 + tmp_6*tmp_94;
      real_t tmp_98 = tmp_11*tmp_93 + tmp_14*tmp_94 + tmp_9*tmp_95;
      real_t tmp_99 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_68;
      real_t tmp_100 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_101 = tmp_19*(0.40446199974765351*tmp_27 + 0.19107600050469298*tmp_28 + tmp_29);
      real_t tmp_102 = tmp_19*(0.40446199974765351*tmp_33 + 0.19107600050469298*tmp_34 + tmp_35);
      real_t tmp_103 = tmp_100*tmp_7 + tmp_101*tmp_25 + tmp_102*tmp_31 - 1.0/4.0;
      real_t tmp_104 = tmp_100*tmp_38 + tmp_101*tmp_39 + tmp_102*tmp_40 - 1.0/4.0;
      real_t tmp_105 = tmp_100*tmp_42 + tmp_101*tmp_43 + tmp_102*tmp_44 - 1.0/4.0;
      real_t tmp_106 = tmp_1*tmp_103 + tmp_104*tmp_2 + tmp_105*tmp_5;
      real_t tmp_107 = tmp_103*tmp_13 + tmp_104*tmp_6 + tmp_105*tmp_4;
      real_t tmp_108 = tmp_103*tmp_11 + tmp_104*tmp_14 + tmp_105*tmp_9;
      real_t tmp_109 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_68;
      real_t tmp_110 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_111 = tmp_19*(0.039308471900058539*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_112 = tmp_19*(0.039308471900058539*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_113 = tmp_110*tmp_7 + tmp_111*tmp_25 + tmp_112*tmp_31 - 1.0/4.0;
      real_t tmp_114 = tmp_110*tmp_38 + tmp_111*tmp_39 + tmp_112*tmp_40 - 1.0/4.0;
      real_t tmp_115 = tmp_110*tmp_42 + tmp_111*tmp_43 + tmp_112*tmp_44 - 1.0/4.0;
      real_t tmp_116 = tmp_1*tmp_113 + tmp_114*tmp_2 + tmp_115*tmp_5;
      real_t tmp_117 = tmp_113*tmp_13 + tmp_114*tmp_6 + tmp_115*tmp_4;
      real_t tmp_118 = tmp_11*tmp_113 + tmp_114*tmp_14 + tmp_115*tmp_9;
      real_t tmp_119 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_68;
      real_t tmp_120 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_121 = tmp_19*(0.93718850182767688*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_122 = tmp_19*(0.93718850182767688*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_123 = tmp_120*tmp_7 + tmp_121*tmp_25 + tmp_122*tmp_31 - 1.0/4.0;
      real_t tmp_124 = tmp_120*tmp_38 + tmp_121*tmp_39 + tmp_122*tmp_40 - 1.0/4.0;
      real_t tmp_125 = tmp_120*tmp_42 + tmp_121*tmp_43 + tmp_122*tmp_44 - 1.0/4.0;
      real_t tmp_126 = tmp_1*tmp_123 + tmp_124*tmp_2 + tmp_125*tmp_5;
      real_t tmp_127 = tmp_123*tmp_13 + tmp_124*tmp_6 + tmp_125*tmp_4;
      real_t tmp_128 = tmp_11*tmp_123 + tmp_124*tmp_14 + tmp_125*tmp_9;
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_68;
      real_t tmp_130 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_131 = tmp_19*(0.60796128279561268*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_132 = tmp_19*(0.60796128279561268*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_133 = tmp_130*tmp_7 + tmp_131*tmp_25 + tmp_132*tmp_31 - 1.0/4.0;
      real_t tmp_134 = tmp_130*tmp_38 + tmp_131*tmp_39 + tmp_132*tmp_40 - 1.0/4.0;
      real_t tmp_135 = tmp_130*tmp_42 + tmp_131*tmp_43 + tmp_132*tmp_44 - 1.0/4.0;
      real_t tmp_136 = tmp_1*tmp_133 + tmp_134*tmp_2 + tmp_135*tmp_5;
      real_t tmp_137 = tmp_13*tmp_133 + tmp_134*tmp_6 + tmp_135*tmp_4;
      real_t tmp_138 = tmp_11*tmp_133 + tmp_134*tmp_14 + tmp_135*tmp_9;
      real_t tmp_139 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_68;
      real_t tmp_140 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_19*(0.19107600050469298*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_142 = tmp_19*(0.19107600050469298*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_143 = tmp_140*tmp_7 + tmp_141*tmp_25 + tmp_142*tmp_31 - 1.0/4.0;
      real_t tmp_144 = tmp_140*tmp_38 + tmp_141*tmp_39 + tmp_142*tmp_40 - 1.0/4.0;
      real_t tmp_145 = tmp_140*tmp_42 + tmp_141*tmp_43 + tmp_142*tmp_44 - 1.0/4.0;
      real_t tmp_146 = tmp_1*tmp_143 + tmp_144*tmp_2 + tmp_145*tmp_5;
      real_t tmp_147 = tmp_13*tmp_143 + tmp_144*tmp_6 + tmp_145*tmp_4;
      real_t tmp_148 = tmp_11*tmp_143 + tmp_14*tmp_144 + tmp_145*tmp_9;
      real_t tmp_149 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_68;
      real_t tmp_150 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_151 = tmp_19*(0.031405749086161582*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_152 = tmp_19*(0.031405749086161582*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_153 = tmp_150*tmp_7 + tmp_151*tmp_25 + tmp_152*tmp_31 - 1.0/4.0;
      real_t tmp_154 = tmp_150*tmp_38 + tmp_151*tmp_39 + tmp_152*tmp_40 - 1.0/4.0;
      real_t tmp_155 = tmp_150*tmp_42 + tmp_151*tmp_43 + tmp_152*tmp_44 - 1.0/4.0;
      real_t tmp_156 = tmp_1*tmp_153 + tmp_154*tmp_2 + tmp_155*tmp_5;
      real_t tmp_157 = tmp_13*tmp_153 + tmp_154*tmp_6 + tmp_155*tmp_4;
      real_t tmp_158 = tmp_11*tmp_153 + tmp_14*tmp_154 + tmp_155*tmp_9;
      real_t tmp_159 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_68;
      real_t tmp_160 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_161 = tmp_19*(0.19601935860219369*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_162 = tmp_19*(0.19601935860219369*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_163 = tmp_160*tmp_7 + tmp_161*tmp_25 + tmp_162*tmp_31 - 1.0/4.0;
      real_t tmp_164 = tmp_160*tmp_38 + tmp_161*tmp_39 + tmp_162*tmp_40 - 1.0/4.0;
      real_t tmp_165 = tmp_160*tmp_42 + tmp_161*tmp_43 + tmp_162*tmp_44 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_5;
      real_t tmp_167 = tmp_13*tmp_163 + tmp_164*tmp_6 + tmp_165*tmp_4;
      real_t tmp_168 = tmp_11*tmp_163 + tmp_14*tmp_164 + tmp_165*tmp_9;
      real_t tmp_169 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_68;
      real_t tmp_170 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_171 = tmp_19*(0.40446199974765351*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_172 = tmp_19*(0.40446199974765351*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_173 = tmp_170*tmp_7 + tmp_171*tmp_25 + tmp_172*tmp_31 - 1.0/4.0;
      real_t tmp_174 = tmp_170*tmp_38 + tmp_171*tmp_39 + tmp_172*tmp_40 - 1.0/4.0;
      real_t tmp_175 = tmp_170*tmp_42 + tmp_171*tmp_43 + tmp_172*tmp_44 - 1.0/4.0;
      real_t tmp_176 = tmp_1*tmp_173 + tmp_174*tmp_2 + tmp_175*tmp_5;
      real_t tmp_177 = tmp_13*tmp_173 + tmp_174*tmp_6 + tmp_175*tmp_4;
      real_t tmp_178 = tmp_11*tmp_173 + tmp_14*tmp_174 + tmp_175*tmp_9;
      real_t tmp_179 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_68;
      real_t tmp_180 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_181 = tmp_19*(0.37605877282253791*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_182 = tmp_19*(0.37605877282253791*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_183 = tmp_180*tmp_7 + tmp_181*tmp_25 + tmp_182*tmp_31 - 1.0/4.0;
      real_t tmp_184 = tmp_180*tmp_38 + tmp_181*tmp_39 + tmp_182*tmp_40 - 1.0/4.0;
      real_t tmp_185 = tmp_180*tmp_42 + tmp_181*tmp_43 + tmp_182*tmp_44 - 1.0/4.0;
      real_t tmp_186 = tmp_1*tmp_183 + tmp_184*tmp_2 + tmp_185*tmp_5;
      real_t tmp_187 = tmp_13*tmp_183 + tmp_184*tmp_6 + tmp_185*tmp_4;
      real_t tmp_188 = tmp_11*tmp_183 + tmp_14*tmp_184 + tmp_185*tmp_9;
      real_t tmp_189 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_68;
      real_t tmp_190 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_191 = tmp_19*(0.1711304259088916*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_192 = tmp_19*(0.1711304259088916*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_193 = tmp_190*tmp_7 + tmp_191*tmp_25 + tmp_192*tmp_31 - 1.0/4.0;
      real_t tmp_194 = tmp_190*tmp_38 + tmp_191*tmp_39 + tmp_192*tmp_40 - 1.0/4.0;
      real_t tmp_195 = tmp_190*tmp_42 + tmp_191*tmp_43 + tmp_192*tmp_44 - 1.0/4.0;
      real_t tmp_196 = tmp_1*tmp_193 + tmp_194*tmp_2 + tmp_195*tmp_5;
      real_t tmp_197 = tmp_13*tmp_193 + tmp_194*tmp_6 + tmp_195*tmp_4;
      real_t tmp_198 = tmp_11*tmp_193 + tmp_14*tmp_194 + tmp_195*tmp_9;
      real_t tmp_199 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_68;
      real_t tmp_200 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_201 = tmp_19*(0.78764240869137092*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_202 = tmp_19*(0.78764240869137092*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_203 = tmp_200*tmp_7 + tmp_201*tmp_25 + tmp_202*tmp_31 - 1.0/4.0;
      real_t tmp_204 = tmp_200*tmp_38 + tmp_201*tmp_39 + tmp_202*tmp_40 - 1.0/4.0;
      real_t tmp_205 = tmp_200*tmp_42 + tmp_201*tmp_43 + tmp_202*tmp_44 - 1.0/4.0;
      real_t tmp_206 = tmp_1*tmp_203 + tmp_2*tmp_204 + tmp_205*tmp_5;
      real_t tmp_207 = tmp_13*tmp_203 + tmp_204*tmp_6 + tmp_205*tmp_4;
      real_t tmp_208 = tmp_11*tmp_203 + tmp_14*tmp_204 + tmp_205*tmp_9;
      real_t tmp_209 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_68;
      real_t tmp_210 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_211 = tmp_19*(0.58463275527740355*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_212 = tmp_19*(0.58463275527740355*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_213 = tmp_210*tmp_7 + tmp_211*tmp_25 + tmp_212*tmp_31 - 1.0/4.0;
      real_t tmp_214 = tmp_210*tmp_38 + tmp_211*tmp_39 + tmp_212*tmp_40 - 1.0/4.0;
      real_t tmp_215 = tmp_210*tmp_42 + tmp_211*tmp_43 + tmp_212*tmp_44 - 1.0/4.0;
      real_t tmp_216 = tmp_1*tmp_213 + tmp_2*tmp_214 + tmp_215*tmp_5;
      real_t tmp_217 = tmp_13*tmp_213 + tmp_214*tmp_6 + tmp_215*tmp_4;
      real_t tmp_218 = tmp_11*tmp_213 + tmp_14*tmp_214 + tmp_215*tmp_9;
      real_t tmp_219 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_68;
      real_t tmp_220 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_19*(0.041227165399737475*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_222 = tmp_19*(0.041227165399737475*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_223 = tmp_220*tmp_7 + tmp_221*tmp_25 + tmp_222*tmp_31 - 1.0/4.0;
      real_t tmp_224 = tmp_220*tmp_38 + tmp_221*tmp_39 + tmp_222*tmp_40 - 1.0/4.0;
      real_t tmp_225 = tmp_220*tmp_42 + tmp_221*tmp_43 + tmp_222*tmp_44 - 1.0/4.0;
      real_t tmp_226 = tmp_1*tmp_223 + tmp_2*tmp_224 + tmp_225*tmp_5;
      real_t tmp_227 = tmp_13*tmp_223 + tmp_224*tmp_6 + tmp_225*tmp_4;
      real_t tmp_228 = tmp_11*tmp_223 + tmp_14*tmp_224 + tmp_225*tmp_9;
      real_t tmp_229 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_68;
      real_t tmp_230 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_231 = tmp_19*(0.039308471900058539*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_232 = tmp_19*(0.039308471900058539*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_233 = tmp_230*tmp_7 + tmp_231*tmp_25 + tmp_232*tmp_31 - 1.0/4.0;
      real_t tmp_234 = tmp_230*tmp_38 + tmp_231*tmp_39 + tmp_232*tmp_40 - 1.0/4.0;
      real_t tmp_235 = tmp_230*tmp_42 + tmp_231*tmp_43 + tmp_232*tmp_44 - 1.0/4.0;
      real_t tmp_236 = tmp_1*tmp_233 + tmp_2*tmp_234 + tmp_235*tmp_5;
      real_t tmp_237 = tmp_13*tmp_233 + tmp_234*tmp_6 + tmp_235*tmp_4;
      real_t tmp_238 = tmp_11*tmp_233 + tmp_14*tmp_234 + tmp_235*tmp_9;
      real_t tmp_239 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_68;
      real_t tmp_240 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_241 = tmp_19*(0.78764240869137092*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_242 = tmp_19*(0.78764240869137092*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_243 = tmp_240*tmp_7 + tmp_241*tmp_25 + tmp_242*tmp_31 - 1.0/4.0;
      real_t tmp_244 = tmp_240*tmp_38 + tmp_241*tmp_39 + tmp_242*tmp_40 - 1.0/4.0;
      real_t tmp_245 = tmp_240*tmp_42 + tmp_241*tmp_43 + tmp_242*tmp_44 - 1.0/4.0;
      real_t tmp_246 = tmp_1*tmp_243 + tmp_2*tmp_244 + tmp_245*tmp_5;
      real_t tmp_247 = tmp_13*tmp_243 + tmp_244*tmp_6 + tmp_245*tmp_4;
      real_t tmp_248 = tmp_11*tmp_243 + tmp_14*tmp_244 + tmp_245*tmp_9;
      real_t tmp_249 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_68;
      real_t tmp_250 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_251 = tmp_19*(0.58463275527740355*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_252 = tmp_19*(0.58463275527740355*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_253 = tmp_25*tmp_251 + tmp_250*tmp_7 + tmp_252*tmp_31 - 1.0/4.0;
      real_t tmp_254 = tmp_250*tmp_38 + tmp_251*tmp_39 + tmp_252*tmp_40 - 1.0/4.0;
      real_t tmp_255 = tmp_250*tmp_42 + tmp_251*tmp_43 + tmp_252*tmp_44 - 1.0/4.0;
      real_t tmp_256 = tmp_1*tmp_253 + tmp_2*tmp_254 + tmp_255*tmp_5;
      real_t tmp_257 = tmp_13*tmp_253 + tmp_254*tmp_6 + tmp_255*tmp_4;
      real_t tmp_258 = tmp_11*tmp_253 + tmp_14*tmp_254 + tmp_255*tmp_9;
      real_t tmp_259 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_68;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_261 = tmp_19*(0.1711304259088916*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_262 = tmp_19*(0.1711304259088916*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_263 = tmp_25*tmp_261 + tmp_260*tmp_7 + tmp_262*tmp_31 - 1.0/4.0;
      real_t tmp_264 = tmp_260*tmp_38 + tmp_261*tmp_39 + tmp_262*tmp_40 - 1.0/4.0;
      real_t tmp_265 = tmp_260*tmp_42 + tmp_261*tmp_43 + tmp_262*tmp_44 - 1.0/4.0;
      real_t tmp_266 = tmp_1*tmp_263 + tmp_2*tmp_264 + tmp_265*tmp_5;
      real_t tmp_267 = tmp_13*tmp_263 + tmp_264*tmp_6 + tmp_265*tmp_4;
      real_t tmp_268 = tmp_11*tmp_263 + tmp_14*tmp_264 + tmp_265*tmp_9;
      real_t tmp_269 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_68;
      real_t tmp_270 = p_affine_13_2*tmp_56;
      real_t tmp_271 = p_affine_13_2*tmp_50;
      real_t tmp_272 = p_affine_13_0*tmp_50 + p_affine_13_1*tmp_56 + p_affine_13_2*tmp_62;
      real_t tmp_273 = p_affine_13_2*tmp_55;
      real_t tmp_274 = p_affine_13_2*tmp_49;
      real_t tmp_275 = p_affine_13_0*tmp_49 + p_affine_13_1*tmp_55 + p_affine_13_2*tmp_61;
      real_t tmp_276 = p_affine_13_2*tmp_54;
      real_t tmp_277 = p_affine_13_2*tmp_48;
      real_t tmp_278 = p_affine_13_0*tmp_48 + p_affine_13_1*tmp_54 + p_affine_13_2*tmp_60;
      real_t a_0_0 = tmp_109*(-tmp_106*tmp_52 - tmp_107*tmp_58 - tmp_108*tmp_63) + tmp_119*(-tmp_116*tmp_52 - tmp_117*tmp_58 - tmp_118*tmp_63) + tmp_129*(-tmp_126*tmp_52 - tmp_127*tmp_58 - tmp_128*tmp_63) + tmp_139*(-tmp_136*tmp_52 - tmp_137*tmp_58 - tmp_138*tmp_63) + tmp_149*(-tmp_146*tmp_52 - tmp_147*tmp_58 - tmp_148*tmp_63) + tmp_159*(-tmp_156*tmp_52 - tmp_157*tmp_58 - tmp_158*tmp_63) + tmp_169*(-tmp_166*tmp_52 - tmp_167*tmp_58 - tmp_168*tmp_63) + tmp_179*(-tmp_176*tmp_52 - tmp_177*tmp_58 - tmp_178*tmp_63) + tmp_189*(-tmp_186*tmp_52 - tmp_187*tmp_58 - tmp_188*tmp_63) + tmp_199*(-tmp_196*tmp_52 - tmp_197*tmp_58 - tmp_198*tmp_63) + tmp_209*(-tmp_206*tmp_52 - tmp_207*tmp_58 - tmp_208*tmp_63) + tmp_219*(-tmp_216*tmp_52 - tmp_217*tmp_58 - tmp_218*tmp_63) + tmp_229*(-tmp_226*tmp_52 - tmp_227*tmp_58 - tmp_228*tmp_63) + tmp_239*(-tmp_236*tmp_52 - tmp_237*tmp_58 - tmp_238*tmp_63) + tmp_249*(-tmp_246*tmp_52 - tmp_247*tmp_58 - tmp_248*tmp_63) + tmp_259*(-tmp_256*tmp_52 - tmp_257*tmp_58 - tmp_258*tmp_63) + tmp_269*(-tmp_266*tmp_52 - tmp_267*tmp_58 - tmp_268*tmp_63) + tmp_69*(-tmp_46*tmp_52 - tmp_53*tmp_58 - tmp_63*tmp_64) + tmp_79*(-tmp_52*tmp_76 - tmp_58*tmp_77 - tmp_63*tmp_78) + tmp_89*(-tmp_52*tmp_86 - tmp_58*tmp_87 - tmp_63*tmp_88) + tmp_99*(-tmp_52*tmp_96 - tmp_58*tmp_97 - tmp_63*tmp_98);
      real_t a_0_1 = tmp_109*(-tmp_106*tmp_271 - tmp_107*tmp_270 - tmp_108*tmp_272) + tmp_119*(-tmp_116*tmp_271 - tmp_117*tmp_270 - tmp_118*tmp_272) + tmp_129*(-tmp_126*tmp_271 - tmp_127*tmp_270 - tmp_128*tmp_272) + tmp_139*(-tmp_136*tmp_271 - tmp_137*tmp_270 - tmp_138*tmp_272) + tmp_149*(-tmp_146*tmp_271 - tmp_147*tmp_270 - tmp_148*tmp_272) + tmp_159*(-tmp_156*tmp_271 - tmp_157*tmp_270 - tmp_158*tmp_272) + tmp_169*(-tmp_166*tmp_271 - tmp_167*tmp_270 - tmp_168*tmp_272) + tmp_179*(-tmp_176*tmp_271 - tmp_177*tmp_270 - tmp_178*tmp_272) + tmp_189*(-tmp_186*tmp_271 - tmp_187*tmp_270 - tmp_188*tmp_272) + tmp_199*(-tmp_196*tmp_271 - tmp_197*tmp_270 - tmp_198*tmp_272) + tmp_209*(-tmp_206*tmp_271 - tmp_207*tmp_270 - tmp_208*tmp_272) + tmp_219*(-tmp_216*tmp_271 - tmp_217*tmp_270 - tmp_218*tmp_272) + tmp_229*(-tmp_226*tmp_271 - tmp_227*tmp_270 - tmp_228*tmp_272) + tmp_239*(-tmp_236*tmp_271 - tmp_237*tmp_270 - tmp_238*tmp_272) + tmp_249*(-tmp_246*tmp_271 - tmp_247*tmp_270 - tmp_248*tmp_272) + tmp_259*(-tmp_256*tmp_271 - tmp_257*tmp_270 - tmp_258*tmp_272) + tmp_269*(-tmp_266*tmp_271 - tmp_267*tmp_270 - tmp_268*tmp_272) + tmp_69*(-tmp_270*tmp_53 - tmp_271*tmp_46 - tmp_272*tmp_64) + tmp_79*(-tmp_270*tmp_77 - tmp_271*tmp_76 - tmp_272*tmp_78) + tmp_89*(-tmp_270*tmp_87 - tmp_271*tmp_86 - tmp_272*tmp_88) + tmp_99*(-tmp_270*tmp_97 - tmp_271*tmp_96 - tmp_272*tmp_98);
      real_t a_0_2 = tmp_109*(-tmp_106*tmp_274 - tmp_107*tmp_273 - tmp_108*tmp_275) + tmp_119*(-tmp_116*tmp_274 - tmp_117*tmp_273 - tmp_118*tmp_275) + tmp_129*(-tmp_126*tmp_274 - tmp_127*tmp_273 - tmp_128*tmp_275) + tmp_139*(-tmp_136*tmp_274 - tmp_137*tmp_273 - tmp_138*tmp_275) + tmp_149*(-tmp_146*tmp_274 - tmp_147*tmp_273 - tmp_148*tmp_275) + tmp_159*(-tmp_156*tmp_274 - tmp_157*tmp_273 - tmp_158*tmp_275) + tmp_169*(-tmp_166*tmp_274 - tmp_167*tmp_273 - tmp_168*tmp_275) + tmp_179*(-tmp_176*tmp_274 - tmp_177*tmp_273 - tmp_178*tmp_275) + tmp_189*(-tmp_186*tmp_274 - tmp_187*tmp_273 - tmp_188*tmp_275) + tmp_199*(-tmp_196*tmp_274 - tmp_197*tmp_273 - tmp_198*tmp_275) + tmp_209*(-tmp_206*tmp_274 - tmp_207*tmp_273 - tmp_208*tmp_275) + tmp_219*(-tmp_216*tmp_274 - tmp_217*tmp_273 - tmp_218*tmp_275) + tmp_229*(-tmp_226*tmp_274 - tmp_227*tmp_273 - tmp_228*tmp_275) + tmp_239*(-tmp_236*tmp_274 - tmp_237*tmp_273 - tmp_238*tmp_275) + tmp_249*(-tmp_246*tmp_274 - tmp_247*tmp_273 - tmp_248*tmp_275) + tmp_259*(-tmp_256*tmp_274 - tmp_257*tmp_273 - tmp_258*tmp_275) + tmp_269*(-tmp_266*tmp_274 - tmp_267*tmp_273 - tmp_268*tmp_275) + tmp_69*(-tmp_273*tmp_53 - tmp_274*tmp_46 - tmp_275*tmp_64) + tmp_79*(-tmp_273*tmp_77 - tmp_274*tmp_76 - tmp_275*tmp_78) + tmp_89*(-tmp_273*tmp_87 - tmp_274*tmp_86 - tmp_275*tmp_88) + tmp_99*(-tmp_273*tmp_97 - tmp_274*tmp_96 - tmp_275*tmp_98);
      real_t a_0_3 = tmp_109*(-tmp_106*tmp_277 - tmp_107*tmp_276 - tmp_108*tmp_278) + tmp_119*(-tmp_116*tmp_277 - tmp_117*tmp_276 - tmp_118*tmp_278) + tmp_129*(-tmp_126*tmp_277 - tmp_127*tmp_276 - tmp_128*tmp_278) + tmp_139*(-tmp_136*tmp_277 - tmp_137*tmp_276 - tmp_138*tmp_278) + tmp_149*(-tmp_146*tmp_277 - tmp_147*tmp_276 - tmp_148*tmp_278) + tmp_159*(-tmp_156*tmp_277 - tmp_157*tmp_276 - tmp_158*tmp_278) + tmp_169*(-tmp_166*tmp_277 - tmp_167*tmp_276 - tmp_168*tmp_278) + tmp_179*(-tmp_176*tmp_277 - tmp_177*tmp_276 - tmp_178*tmp_278) + tmp_189*(-tmp_186*tmp_277 - tmp_187*tmp_276 - tmp_188*tmp_278) + tmp_199*(-tmp_196*tmp_277 - tmp_197*tmp_276 - tmp_198*tmp_278) + tmp_209*(-tmp_206*tmp_277 - tmp_207*tmp_276 - tmp_208*tmp_278) + tmp_219*(-tmp_216*tmp_277 - tmp_217*tmp_276 - tmp_218*tmp_278) + tmp_229*(-tmp_226*tmp_277 - tmp_227*tmp_276 - tmp_228*tmp_278) + tmp_239*(-tmp_236*tmp_277 - tmp_237*tmp_276 - tmp_238*tmp_278) + tmp_249*(-tmp_246*tmp_277 - tmp_247*tmp_276 - tmp_248*tmp_278) + tmp_259*(-tmp_256*tmp_277 - tmp_257*tmp_276 - tmp_258*tmp_278) + tmp_269*(-tmp_266*tmp_277 - tmp_267*tmp_276 - tmp_268*tmp_278) + tmp_69*(-tmp_276*tmp_53 - tmp_277*tmp_46 - tmp_278*tmp_64) + tmp_79*(-tmp_276*tmp_77 - tmp_277*tmp_76 - tmp_278*tmp_78) + tmp_89*(-tmp_276*tmp_87 - tmp_277*tmp_86 - tmp_278*tmp_88) + tmp_99*(-tmp_276*tmp_97 - tmp_277*tmp_96 - tmp_278*tmp_98);
      elMat( 0, 0) = a_0_0;
      elMat( 0, 1) = a_0_1;
      elMat( 0, 2) = a_0_2;
      elMat( 0, 3) = a_0_3;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormP1E_2 : public hyteg::dg::DGForm
{
public:
EGEpsilonFormP1E_2( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t a_0_0 = 0;
      real_t a_1_0 = 0;
      real_t a_2_0 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_1_0 = 0;
      real_t a_2_0 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_1_0 = 0;
      real_t a_2_0 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t a_0_0 = 0;
      real_t a_1_0 = 0;
      real_t a_2_0 = 0;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = -p_affine_0_2;
      real_t tmp_1 = p_affine_1_2 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_2_0 + tmp_2;
      real_t tmp_4 = -p_affine_0_1;
      real_t tmp_5 = p_affine_3_1 + tmp_4;
      real_t tmp_6 = tmp_3*tmp_5;
      real_t tmp_7 = p_affine_3_0 + tmp_2;
      real_t tmp_8 = p_affine_2_1 + tmp_4;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = tmp_6 - tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_0;
      real_t tmp_12 = p_affine_1_0 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_8;
      real_t tmp_14 = p_affine_2_2 + tmp_0;
      real_t tmp_15 = p_affine_1_1 + tmp_4;
      real_t tmp_16 = tmp_15*tmp_7;
      real_t tmp_17 = tmp_12*tmp_5;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_6 - tmp_1*tmp_9 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0*tmp_19;
      real_t tmp_21 = tmp_10*tmp_20;
      real_t tmp_22 = tmp_16 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_13 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = tmp_1*tmp_21 + tmp_11*tmp_25 + tmp_14*tmp_23;
      real_t tmp_27 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_28 = -2*tmp_21 - 2*tmp_23 - 2*tmp_25;
      real_t tmp_29 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_30 = tmp_1*tmp_3 - tmp_12*tmp_14;
      real_t tmp_31 = 0.5*tmp_19;
      real_t tmp_32 = tmp_30*tmp_31;
      real_t tmp_33 = -tmp_1*tmp_7 + tmp_11*tmp_12;
      real_t tmp_34 = tmp_31*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_3 + tmp_14*tmp_7;
      real_t tmp_36 = tmp_31*tmp_35;
      real_t tmp_37 = tmp_10*tmp_31;
      real_t tmp_38 = tmp_22*tmp_31;
      real_t tmp_39 = tmp_24*tmp_31;
      real_t tmp_40 = tmp_1*tmp_36 + tmp_11*tmp_32 + tmp_14*tmp_34 + tmp_15*tmp_37 + tmp_38*tmp_8 + tmp_39*tmp_5;
      real_t tmp_41 = tmp_40*(-tmp_32 - tmp_34 - tmp_36);
      real_t tmp_42 = -tmp_1*tmp_8 + tmp_14*tmp_15;
      real_t tmp_43 = tmp_31*tmp_42;
      real_t tmp_44 = tmp_1*tmp_5 - tmp_11*tmp_15;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_11*tmp_8 - tmp_14*tmp_5;
      real_t tmp_47 = tmp_31*tmp_46;
      real_t tmp_48 = tmp_1*tmp_47 + tmp_11*tmp_43 + tmp_12*tmp_37 + tmp_14*tmp_45 + tmp_3*tmp_38 + tmp_39*tmp_7;
      real_t tmp_49 = tmp_48*(-tmp_43 - tmp_45 - tmp_47);
      real_t tmp_50 = p_affine_0_0*p_affine_1_1;
      real_t tmp_51 = p_affine_0_0*p_affine_1_2;
      real_t tmp_52 = p_affine_2_1*p_affine_3_2;
      real_t tmp_53 = p_affine_0_1*p_affine_1_0;
      real_t tmp_54 = p_affine_0_1*p_affine_1_2;
      real_t tmp_55 = p_affine_2_2*p_affine_3_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_1;
      real_t tmp_58 = p_affine_2_0*p_affine_3_1;
      real_t tmp_59 = p_affine_2_2*p_affine_3_1;
      real_t tmp_60 = p_affine_2_0*p_affine_3_2;
      real_t tmp_61 = p_affine_2_1*p_affine_3_0;
      real_t tmp_62 = std::abs(p_affine_0_0*tmp_52 - p_affine_0_0*tmp_59 + p_affine_0_1*tmp_55 - p_affine_0_1*tmp_60 + p_affine_0_2*tmp_58 - p_affine_0_2*tmp_61 - p_affine_1_0*tmp_52 + p_affine_1_0*tmp_59 - p_affine_1_1*tmp_55 + p_affine_1_1*tmp_60 - p_affine_1_2*tmp_58 + p_affine_1_2*tmp_61 + p_affine_2_0*tmp_54 - p_affine_2_0*tmp_57 - p_affine_2_1*tmp_51 + p_affine_2_1*tmp_56 + p_affine_2_2*tmp_50 - p_affine_2_2*tmp_53 - p_affine_3_0*tmp_54 + p_affine_3_0*tmp_57 + p_affine_3_1*tmp_51 - p_affine_3_1*tmp_56 - p_affine_3_2*tmp_50 + p_affine_3_2*tmp_53);
      real_t tmp_63 = 0.0044044418180681378*tmp_62;
      real_t tmp_64 = tmp_26*tmp_28;
      real_t tmp_65 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_66 = 0.0086719579272897529*tmp_62;
      real_t tmp_67 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_68 = 0.0012542093589233661*tmp_62;
      real_t tmp_69 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_70 = 0.0069606304761558151*tmp_62;
      real_t tmp_71 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_72 = 0.0044044418180681378*tmp_62;
      real_t tmp_73 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_74 = 0.0086719579272897529*tmp_62;
      real_t tmp_75 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_76 = 0.0012542093589233661*tmp_62;
      real_t tmp_77 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_78 = 0.0069606304761558151*tmp_62;
      real_t tmp_79 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_80 = 0.0060468217102181351*tmp_62;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_82 = 0.0060468217102181351*tmp_62;
      real_t tmp_83 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_84 = 0.0060468217102181351*tmp_62;
      real_t tmp_85 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_86 = 0.0060468217102181351*tmp_62;
      real_t tmp_87 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_88 = 0.0012542093589233661*tmp_62;
      real_t tmp_89 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_90 = 0.0060468217102181351*tmp_62;
      real_t tmp_91 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_92 = 0.0060468217102181351*tmp_62;
      real_t tmp_93 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_94 = 0.0011928171484740719*tmp_62;
      real_t tmp_95 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_96 = 0.0025755810251600563*tmp_62;
      real_t tmp_97 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_98 = 0.0011928171484740719*tmp_62;
      real_t tmp_99 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_100 = 0.0025755810251600563*tmp_62;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_102 = 0.0011928171484740719*tmp_62;
      real_t tmp_103 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_104 = 0.0025755810251600563*tmp_62;
      real_t tmp_105 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_106 = 0.0011928171484740719*tmp_62;
      real_t tmp_107 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_108 = 0.0025755810251600563*tmp_62;
      real_t tmp_109 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_110 = 0.0069606304761558151*tmp_62;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_112 = 0.0011928171484740719*tmp_62;
      real_t tmp_113 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_114 = 0.0025755810251600563*tmp_62;
      real_t tmp_115 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_116 = 0.0011928171484740719*tmp_62;
      real_t tmp_117 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_118 = 0.0025755810251600563*tmp_62;
      real_t tmp_119 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_120 = 0.0011928171484740719*tmp_62;
      real_t tmp_121 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_122 = 0.0025755810251600563*tmp_62;
      real_t tmp_123 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_124 = 0.0011928171484740719*tmp_62;
      real_t tmp_125 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_126 = 0.0025755810251600563*tmp_62;
      real_t tmp_127 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_128 = 0.0011928171484740719*tmp_62;
      real_t tmp_129 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_130 = 0.0025755810251600563*tmp_62;
      real_t tmp_131 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_132 = 0.0044044418180681378*tmp_62;
      real_t tmp_133 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_134 = 0.0011928171484740719*tmp_62;
      real_t tmp_135 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_136 = 0.0025755810251600563*tmp_62;
      real_t tmp_137 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_138 = 0.0011928171484740719*tmp_62;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_140 = 0.0025755810251600563*tmp_62;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_142 = 0.0011928171484740719*tmp_62;
      real_t tmp_143 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_144 = 0.0025755810251600563*tmp_62;
      real_t tmp_145 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_146 = 0.0086719579272897529*tmp_62;
      real_t tmp_147 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_148 = 0.0012542093589233661*tmp_62;
      real_t tmp_149 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_150 = 0.0069606304761558151*tmp_62;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_152 = 0.0044044418180681378*tmp_62;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_154 = 0.0086719579272897529*tmp_62;
      real_t tmp_155 = 2.0*tmp_19;
      real_t tmp_156 = tmp_10*tmp_155;
      real_t tmp_157 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_155;
      real_t tmp_158 = tmp_35*tmp_40;
      real_t tmp_159 = tmp_46*tmp_48;
      real_t tmp_160 = tmp_156*tmp_26;
      real_t tmp_161 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_155;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_155;
      real_t tmp_163 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_155;
      real_t tmp_164 = Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_155;
      real_t tmp_165 = Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_155;
      real_t tmp_166 = Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_155;
      real_t tmp_167 = Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_155;
      real_t tmp_168 = Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_155;
      real_t tmp_169 = Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_155;
      real_t tmp_170 = Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_155;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_155;
      real_t tmp_172 = Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_155;
      real_t tmp_173 = Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_155;
      real_t tmp_174 = Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_155;
      real_t tmp_175 = Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_155;
      real_t tmp_176 = Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_155;
      real_t tmp_177 = Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_155;
      real_t tmp_178 = Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_155;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_155;
      real_t tmp_180 = Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_155;
      real_t tmp_181 = Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_155;
      real_t tmp_182 = Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_155;
      real_t tmp_183 = Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_155;
      real_t tmp_184 = Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_155;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_155;
      real_t tmp_186 = Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_155;
      real_t tmp_187 = Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_155;
      real_t tmp_188 = Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_155;
      real_t tmp_189 = Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_155;
      real_t tmp_190 = Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_155;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_155;
      real_t tmp_192 = Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_155;
      real_t tmp_193 = Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_155;
      real_t tmp_194 = Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_155;
      real_t tmp_195 = Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_155;
      real_t tmp_196 = Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_155;
      real_t tmp_197 = Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_155;
      real_t tmp_198 = Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_155;
      real_t tmp_199 = Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_155;
      real_t tmp_200 = Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_155;
      real_t tmp_201 = Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_155;
      real_t tmp_202 = Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_155;
      real_t tmp_203 = Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_155;
      real_t tmp_204 = Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_155;
      real_t tmp_205 = Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_155;
      real_t tmp_206 = tmp_155*tmp_27;
      real_t tmp_207 = tmp_33*tmp_40;
      real_t tmp_208 = tmp_44*tmp_48;
      real_t tmp_209 = tmp_22*tmp_26;
      real_t tmp_210 = tmp_30*tmp_40;
      real_t tmp_211 = tmp_42*tmp_48;
      real_t tmp_212 = tmp_24*tmp_26;
      real_t a_0_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_64 + tmp_41*tmp_99 + tmp_49*tmp_99) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_64 + tmp_101*tmp_41 + tmp_101*tmp_49) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_64 + tmp_103*tmp_41 + tmp_103*tmp_49) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_64 + tmp_105*tmp_41 + tmp_105*tmp_49) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_64 + tmp_107*tmp_41 + tmp_107*tmp_49) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_64 + tmp_109*tmp_41 + tmp_109*tmp_49) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_64 + tmp_111*tmp_41 + tmp_111*tmp_49) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_64 + tmp_113*tmp_41 + tmp_113*tmp_49) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_64 + tmp_115*tmp_41 + tmp_115*tmp_49) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_64 + tmp_117*tmp_41 + tmp_117*tmp_49) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_64 + tmp_119*tmp_41 + tmp_119*tmp_49) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_64 + tmp_121*tmp_41 + tmp_121*tmp_49) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_64 + tmp_123*tmp_41 + tmp_123*tmp_49) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_64 + tmp_125*tmp_41 + tmp_125*tmp_49) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_64 + tmp_127*tmp_41 + tmp_127*tmp_49) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_64 + tmp_129*tmp_41 + tmp_129*tmp_49) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_64 + tmp_131*tmp_41 + tmp_131*tmp_49) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_64 + tmp_133*tmp_41 + tmp_133*tmp_49) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_64 + tmp_135*tmp_41 + tmp_135*tmp_49) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_64 + tmp_137*tmp_41 + tmp_137*tmp_49) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_64 + tmp_139*tmp_41 + tmp_139*tmp_49) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_64 + tmp_141*tmp_41 + tmp_141*tmp_49) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_64 + tmp_143*tmp_41 + tmp_143*tmp_49) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_64 + tmp_145*tmp_41 + tmp_145*tmp_49) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_64 + tmp_147*tmp_41 + tmp_147*tmp_49) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_64 + tmp_149*tmp_41 + tmp_149*tmp_49) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_64 + tmp_151*tmp_41 + tmp_151*tmp_49) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_64 + tmp_153*tmp_41 + tmp_153*tmp_49) + tmp_63*(tmp_27*tmp_28 + tmp_29*tmp_41 + tmp_29*tmp_49) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + tmp_41*tmp_65 + tmp_49*tmp_65) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + tmp_41*tmp_67 + tmp_49*tmp_67) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + tmp_41*tmp_69 + tmp_49*tmp_69) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_64 + tmp_41*tmp_71 + tmp_49*tmp_71) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_64 + tmp_41*tmp_73 + tmp_49*tmp_73) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_64 + tmp_41*tmp_75 + tmp_49*tmp_75) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_64 + tmp_41*tmp_77 + tmp_49*tmp_77) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_64 + tmp_41*tmp_79 + tmp_49*tmp_79) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_64 + tmp_41*tmp_81 + tmp_49*tmp_81) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_64 + tmp_41*tmp_83 + tmp_49*tmp_83) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_64 + tmp_41*tmp_85 + tmp_49*tmp_85) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_64 + tmp_41*tmp_87 + tmp_49*tmp_87) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_64 + tmp_41*tmp_89 + tmp_49*tmp_89) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_64 + tmp_41*tmp_91 + tmp_49*tmp_91) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_64 + tmp_41*tmp_93 + tmp_49*tmp_93) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_64 + tmp_41*tmp_95 + tmp_49*tmp_95) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_64 + tmp_41*tmp_97 + tmp_49*tmp_97);
      real_t a_1_0 = tmp_100*(Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_160 + tmp_158*tmp_178 + tmp_159*tmp_178) + tmp_102*(Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_160 + tmp_158*tmp_179 + tmp_159*tmp_179) + tmp_104*(Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_160 + tmp_158*tmp_180 + tmp_159*tmp_180) + tmp_106*(Scalar_Variable_Coefficient_3D_mu_out0_id21*tmp_160 + tmp_158*tmp_181 + tmp_159*tmp_181) + tmp_108*(Scalar_Variable_Coefficient_3D_mu_out0_id22*tmp_160 + tmp_158*tmp_182 + tmp_159*tmp_182) + tmp_110*(Scalar_Variable_Coefficient_3D_mu_out0_id23*tmp_160 + tmp_158*tmp_183 + tmp_159*tmp_183) + tmp_112*(Scalar_Variable_Coefficient_3D_mu_out0_id24*tmp_160 + tmp_158*tmp_184 + tmp_159*tmp_184) + tmp_114*(Scalar_Variable_Coefficient_3D_mu_out0_id25*tmp_160 + tmp_158*tmp_185 + tmp_159*tmp_185) + tmp_116*(Scalar_Variable_Coefficient_3D_mu_out0_id26*tmp_160 + tmp_158*tmp_186 + tmp_159*tmp_186) + tmp_118*(Scalar_Variable_Coefficient_3D_mu_out0_id27*tmp_160 + tmp_158*tmp_187 + tmp_159*tmp_187) + tmp_120*(Scalar_Variable_Coefficient_3D_mu_out0_id28*tmp_160 + tmp_158*tmp_188 + tmp_159*tmp_188) + tmp_122*(Scalar_Variable_Coefficient_3D_mu_out0_id29*tmp_160 + tmp_158*tmp_189 + tmp_159*tmp_189) + tmp_124*(Scalar_Variable_Coefficient_3D_mu_out0_id30*tmp_160 + tmp_158*tmp_190 + tmp_159*tmp_190) + tmp_126*(Scalar_Variable_Coefficient_3D_mu_out0_id31*tmp_160 + tmp_158*tmp_191 + tmp_159*tmp_191) + tmp_128*(Scalar_Variable_Coefficient_3D_mu_out0_id32*tmp_160 + tmp_158*tmp_192 + tmp_159*tmp_192) + tmp_130*(Scalar_Variable_Coefficient_3D_mu_out0_id33*tmp_160 + tmp_158*tmp_193 + tmp_159*tmp_193) + tmp_132*(Scalar_Variable_Coefficient_3D_mu_out0_id34*tmp_160 + tmp_158*tmp_194 + tmp_159*tmp_194) + tmp_134*(Scalar_Variable_Coefficient_3D_mu_out0_id35*tmp_160 + tmp_158*tmp_195 + tmp_159*tmp_195) + tmp_136*(Scalar_Variable_Coefficient_3D_mu_out0_id36*tmp_160 + tmp_158*tmp_196 + tmp_159*tmp_196) + tmp_138*(Scalar_Variable_Coefficient_3D_mu_out0_id37*tmp_160 + tmp_158*tmp_197 + tmp_159*tmp_197) + tmp_140*(Scalar_Variable_Coefficient_3D_mu_out0_id38*tmp_160 + tmp_158*tmp_198 + tmp_159*tmp_198) + tmp_142*(Scalar_Variable_Coefficient_3D_mu_out0_id39*tmp_160 + tmp_158*tmp_199 + tmp_159*tmp_199) + tmp_144*(Scalar_Variable_Coefficient_3D_mu_out0_id40*tmp_160 + tmp_158*tmp_200 + tmp_159*tmp_200) + tmp_146*(Scalar_Variable_Coefficient_3D_mu_out0_id41*tmp_160 + tmp_158*tmp_201 + tmp_159*tmp_201) + tmp_148*(Scalar_Variable_Coefficient_3D_mu_out0_id42*tmp_160 + tmp_158*tmp_202 + tmp_159*tmp_202) + tmp_150*(Scalar_Variable_Coefficient_3D_mu_out0_id43*tmp_160 + tmp_158*tmp_203 + tmp_159*tmp_203) + tmp_152*(Scalar_Variable_Coefficient_3D_mu_out0_id44*tmp_160 + tmp_158*tmp_204 + tmp_159*tmp_204) + tmp_154*(Scalar_Variable_Coefficient_3D_mu_out0_id45*tmp_160 + tmp_158*tmp_205 + tmp_159*tmp_205) + tmp_63*(tmp_156*tmp_27 + tmp_157*tmp_158 + tmp_157*tmp_159) + tmp_66*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_160 + tmp_158*tmp_161 + tmp_159*tmp_161) + tmp_68*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_160 + tmp_158*tmp_162 + tmp_159*tmp_162) + tmp_70*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_160 + tmp_158*tmp_163 + tmp_159*tmp_163) + tmp_72*(Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_160 + tmp_158*tmp_164 + tmp_159*tmp_164) + tmp_74*(Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_160 + tmp_158*tmp_165 + tmp_159*tmp_165) + tmp_76*(Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_160 + tmp_158*tmp_166 + tmp_159*tmp_166) + tmp_78*(Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_160 + tmp_158*tmp_167 + tmp_159*tmp_167) + tmp_80*(Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_160 + tmp_158*tmp_168 + tmp_159*tmp_168) + tmp_82*(Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_160 + tmp_158*tmp_169 + tmp_159*tmp_169) + tmp_84*(Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_160 + tmp_158*tmp_170 + tmp_159*tmp_170) + tmp_86*(Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_160 + tmp_158*tmp_171 + tmp_159*tmp_171) + tmp_88*(Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_160 + tmp_158*tmp_172 + tmp_159*tmp_172) + tmp_90*(Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_160 + tmp_158*tmp_173 + tmp_159*tmp_173) + tmp_92*(Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_160 + tmp_158*tmp_174 + tmp_159*tmp_174) + tmp_94*(Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_160 + tmp_158*tmp_175 + tmp_159*tmp_175) + tmp_96*(Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_160 + tmp_158*tmp_176 + tmp_159*tmp_176) + tmp_98*(Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_160 + tmp_158*tmp_177 + tmp_159*tmp_177);
      real_t a_2_0 = tmp_100*(tmp_178*tmp_207 + tmp_178*tmp_208 + tmp_178*tmp_209) + tmp_102*(tmp_179*tmp_207 + tmp_179*tmp_208 + tmp_179*tmp_209) + tmp_104*(tmp_180*tmp_207 + tmp_180*tmp_208 + tmp_180*tmp_209) + tmp_106*(tmp_181*tmp_207 + tmp_181*tmp_208 + tmp_181*tmp_209) + tmp_108*(tmp_182*tmp_207 + tmp_182*tmp_208 + tmp_182*tmp_209) + tmp_110*(tmp_183*tmp_207 + tmp_183*tmp_208 + tmp_183*tmp_209) + tmp_112*(tmp_184*tmp_207 + tmp_184*tmp_208 + tmp_184*tmp_209) + tmp_114*(tmp_185*tmp_207 + tmp_185*tmp_208 + tmp_185*tmp_209) + tmp_116*(tmp_186*tmp_207 + tmp_186*tmp_208 + tmp_186*tmp_209) + tmp_118*(tmp_187*tmp_207 + tmp_187*tmp_208 + tmp_187*tmp_209) + tmp_120*(tmp_188*tmp_207 + tmp_188*tmp_208 + tmp_188*tmp_209) + tmp_122*(tmp_189*tmp_207 + tmp_189*tmp_208 + tmp_189*tmp_209) + tmp_124*(tmp_190*tmp_207 + tmp_190*tmp_208 + tmp_190*tmp_209) + tmp_126*(tmp_191*tmp_207 + tmp_191*tmp_208 + tmp_191*tmp_209) + tmp_128*(tmp_192*tmp_207 + tmp_192*tmp_208 + tmp_192*tmp_209) + tmp_130*(tmp_193*tmp_207 + tmp_193*tmp_208 + tmp_193*tmp_209) + tmp_132*(tmp_194*tmp_207 + tmp_194*tmp_208 + tmp_194*tmp_209) + tmp_134*(tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209) + tmp_136*(tmp_196*tmp_207 + tmp_196*tmp_208 + tmp_196*tmp_209) + tmp_138*(tmp_197*tmp_207 + tmp_197*tmp_208 + tmp_197*tmp_209) + tmp_140*(tmp_198*tmp_207 + tmp_198*tmp_208 + tmp_198*tmp_209) + tmp_142*(tmp_199*tmp_207 + tmp_199*tmp_208 + tmp_199*tmp_209) + tmp_144*(tmp_200*tmp_207 + tmp_200*tmp_208 + tmp_200*tmp_209) + tmp_146*(tmp_201*tmp_207 + tmp_201*tmp_208 + tmp_201*tmp_209) + tmp_148*(tmp_202*tmp_207 + tmp_202*tmp_208 + tmp_202*tmp_209) + tmp_150*(tmp_203*tmp_207 + tmp_203*tmp_208 + tmp_203*tmp_209) + tmp_152*(tmp_204*tmp_207 + tmp_204*tmp_208 + tmp_204*tmp_209) + tmp_154*(tmp_205*tmp_207 + tmp_205*tmp_208 + tmp_205*tmp_209) + tmp_63*(tmp_157*tmp_207 + tmp_157*tmp_208 + tmp_206*tmp_22) + tmp_66*(tmp_161*tmp_207 + tmp_161*tmp_208 + tmp_161*tmp_209) + tmp_68*(tmp_162*tmp_207 + tmp_162*tmp_208 + tmp_162*tmp_209) + tmp_70*(tmp_163*tmp_207 + tmp_163*tmp_208 + tmp_163*tmp_209) + tmp_72*(tmp_164*tmp_207 + tmp_164*tmp_208 + tmp_164*tmp_209) + tmp_74*(tmp_165*tmp_207 + tmp_165*tmp_208 + tmp_165*tmp_209) + tmp_76*(tmp_166*tmp_207 + tmp_166*tmp_208 + tmp_166*tmp_209) + tmp_78*(tmp_167*tmp_207 + tmp_167*tmp_208 + tmp_167*tmp_209) + tmp_80*(tmp_168*tmp_207 + tmp_168*tmp_208 + tmp_168*tmp_209) + tmp_82*(tmp_169*tmp_207 + tmp_169*tmp_208 + tmp_169*tmp_209) + tmp_84*(tmp_170*tmp_207 + tmp_170*tmp_208 + tmp_170*tmp_209) + tmp_86*(tmp_171*tmp_207 + tmp_171*tmp_208 + tmp_171*tmp_209) + tmp_88*(tmp_172*tmp_207 + tmp_172*tmp_208 + tmp_172*tmp_209) + tmp_90*(tmp_173*tmp_207 + tmp_173*tmp_208 + tmp_173*tmp_209) + tmp_92*(tmp_174*tmp_207 + tmp_174*tmp_208 + tmp_174*tmp_209) + tmp_94*(tmp_175*tmp_207 + tmp_175*tmp_208 + tmp_175*tmp_209) + tmp_96*(tmp_176*tmp_207 + tmp_176*tmp_208 + tmp_176*tmp_209) + tmp_98*(tmp_177*tmp_207 + tmp_177*tmp_208 + tmp_177*tmp_209);
      real_t a_3_0 = tmp_100*(tmp_178*tmp_210 + tmp_178*tmp_211 + tmp_178*tmp_212) + tmp_102*(tmp_179*tmp_210 + tmp_179*tmp_211 + tmp_179*tmp_212) + tmp_104*(tmp_180*tmp_210 + tmp_180*tmp_211 + tmp_180*tmp_212) + tmp_106*(tmp_181*tmp_210 + tmp_181*tmp_211 + tmp_181*tmp_212) + tmp_108*(tmp_182*tmp_210 + tmp_182*tmp_211 + tmp_182*tmp_212) + tmp_110*(tmp_183*tmp_210 + tmp_183*tmp_211 + tmp_183*tmp_212) + tmp_112*(tmp_184*tmp_210 + tmp_184*tmp_211 + tmp_184*tmp_212) + tmp_114*(tmp_185*tmp_210 + tmp_185*tmp_211 + tmp_185*tmp_212) + tmp_116*(tmp_186*tmp_210 + tmp_186*tmp_211 + tmp_186*tmp_212) + tmp_118*(tmp_187*tmp_210 + tmp_187*tmp_211 + tmp_187*tmp_212) + tmp_120*(tmp_188*tmp_210 + tmp_188*tmp_211 + tmp_188*tmp_212) + tmp_122*(tmp_189*tmp_210 + tmp_189*tmp_211 + tmp_189*tmp_212) + tmp_124*(tmp_190*tmp_210 + tmp_190*tmp_211 + tmp_190*tmp_212) + tmp_126*(tmp_191*tmp_210 + tmp_191*tmp_211 + tmp_191*tmp_212) + tmp_128*(tmp_192*tmp_210 + tmp_192*tmp_211 + tmp_192*tmp_212) + tmp_130*(tmp_193*tmp_210 + tmp_193*tmp_211 + tmp_193*tmp_212) + tmp_132*(tmp_194*tmp_210 + tmp_194*tmp_211 + tmp_194*tmp_212) + tmp_134*(tmp_195*tmp_210 + tmp_195*tmp_211 + tmp_195*tmp_212) + tmp_136*(tmp_196*tmp_210 + tmp_196*tmp_211 + tmp_196*tmp_212) + tmp_138*(tmp_197*tmp_210 + tmp_197*tmp_211 + tmp_197*tmp_212) + tmp_140*(tmp_198*tmp_210 + tmp_198*tmp_211 + tmp_198*tmp_212) + tmp_142*(tmp_199*tmp_210 + tmp_199*tmp_211 + tmp_199*tmp_212) + tmp_144*(tmp_200*tmp_210 + tmp_200*tmp_211 + tmp_200*tmp_212) + tmp_146*(tmp_201*tmp_210 + tmp_201*tmp_211 + tmp_201*tmp_212) + tmp_148*(tmp_202*tmp_210 + tmp_202*tmp_211 + tmp_202*tmp_212) + tmp_150*(tmp_203*tmp_210 + tmp_203*tmp_211 + tmp_203*tmp_212) + tmp_152*(tmp_204*tmp_210 + tmp_204*tmp_211 + tmp_204*tmp_212) + tmp_154*(tmp_205*tmp_210 + tmp_205*tmp_211 + tmp_205*tmp_212) + tmp_63*(tmp_157*tmp_210 + tmp_157*tmp_211 + tmp_206*tmp_24) + tmp_66*(tmp_161*tmp_210 + tmp_161*tmp_211 + tmp_161*tmp_212) + tmp_68*(tmp_162*tmp_210 + tmp_162*tmp_211 + tmp_162*tmp_212) + tmp_70*(tmp_163*tmp_210 + tmp_163*tmp_211 + tmp_163*tmp_212) + tmp_72*(tmp_164*tmp_210 + tmp_164*tmp_211 + tmp_164*tmp_212) + tmp_74*(tmp_165*tmp_210 + tmp_165*tmp_211 + tmp_165*tmp_212) + tmp_76*(tmp_166*tmp_210 + tmp_166*tmp_211 + tmp_166*tmp_212) + tmp_78*(tmp_167*tmp_210 + tmp_167*tmp_211 + tmp_167*tmp_212) + tmp_80*(tmp_168*tmp_210 + tmp_168*tmp_211 + tmp_168*tmp_212) + tmp_82*(tmp_169*tmp_210 + tmp_169*tmp_211 + tmp_169*tmp_212) + tmp_84*(tmp_170*tmp_210 + tmp_170*tmp_211 + tmp_170*tmp_212) + tmp_86*(tmp_171*tmp_210 + tmp_171*tmp_211 + tmp_171*tmp_212) + tmp_88*(tmp_172*tmp_210 + tmp_172*tmp_211 + tmp_172*tmp_212) + tmp_90*(tmp_173*tmp_210 + tmp_173*tmp_211 + tmp_173*tmp_212) + tmp_92*(tmp_174*tmp_210 + tmp_174*tmp_211 + tmp_174*tmp_212) + tmp_94*(tmp_175*tmp_210 + tmp_175*tmp_211 + tmp_175*tmp_212) + tmp_96*(tmp_176*tmp_210 + tmp_176*tmp_211 + tmp_176*tmp_212) + tmp_98*(tmp_177*tmp_210 + tmp_177*tmp_211 + tmp_177*tmp_212);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = p_affine_3_0 + tmp_0;
      real_t tmp_6 = p_affine_2_1 + tmp_3;
      real_t tmp_7 = tmp_2*tmp_4 - tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = tmp_6*tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_8;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_1_1 + tmp_3;
      real_t tmp_14 = p_affine_2_2 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_14*tmp_4;
      real_t tmp_17 = tmp_13*tmp_9;
      real_t tmp_18 = tmp_11*tmp_6;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_10 - tmp_1*tmp_16 + tmp_12*tmp_2 + tmp_15*tmp_5 - tmp_17*tmp_2 - tmp_18*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_8;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_7;
      real_t tmp_26 = tmp_14*tmp_5 - tmp_2*tmp_9;
      real_t tmp_27 = -p_affine_8_1;
      real_t tmp_28 = p_affine_9_1 + tmp_27;
      real_t tmp_29 = p_affine_10_1 + tmp_27;
      real_t tmp_30 = p_affine_8_1 + tmp_3;
      real_t tmp_31 = tmp_19*(0.031405749086161582*tmp_28 + 0.93718850182767688*tmp_29 + tmp_30);
      real_t tmp_32 = tmp_26*tmp_31;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = -p_affine_8_0;
      real_t tmp_35 = p_affine_9_0 + tmp_34;
      real_t tmp_36 = p_affine_10_0 + tmp_34;
      real_t tmp_37 = p_affine_8_0 + tmp_0;
      real_t tmp_38 = tmp_19*(0.031405749086161582*tmp_35 + 0.93718850182767688*tmp_36 + tmp_37);
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_25 + tmp_32 + tmp_39;
      real_t tmp_41 = tmp_40 - 1.0/4.0;
      real_t tmp_42 = -tmp_1*tmp_4 + tmp_13*tmp_5;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_1*tmp_9 - tmp_11*tmp_5;
      real_t tmp_45 = tmp_31*tmp_44;
      real_t tmp_46 = tmp_12 - tmp_17;
      real_t tmp_47 = tmp_38*tmp_46;
      real_t tmp_48 = tmp_43 + tmp_45 + tmp_47;
      real_t tmp_49 = tmp_48 - 1.0/4.0;
      real_t tmp_50 = tmp_1*tmp_6 - tmp_13*tmp_2;
      real_t tmp_51 = tmp_24*tmp_50;
      real_t tmp_52 = -tmp_1*tmp_14 + tmp_11*tmp_2;
      real_t tmp_53 = tmp_31*tmp_52;
      real_t tmp_54 = tmp_15 - tmp_18;
      real_t tmp_55 = tmp_38*tmp_54;
      real_t tmp_56 = tmp_51 + tmp_53 + tmp_55;
      real_t tmp_57 = tmp_56 - 1.0/4.0;
      real_t tmp_58 = tmp_1*tmp_41 + tmp_2*tmp_49 + tmp_5*tmp_57;
      real_t tmp_59 = 0.5*tmp_19;
      real_t tmp_60 = tmp_54*tmp_59;
      real_t tmp_61 = tmp_46*tmp_59;
      real_t tmp_62 = tmp_33*tmp_59;
      real_t tmp_63 = -tmp_60 - tmp_61 - tmp_62;
      real_t tmp_64 = 0.5*p_affine_13_2;
      real_t tmp_65 = tmp_63*tmp_64;
      real_t tmp_66 = tmp_13*tmp_41 + tmp_4*tmp_57 + tmp_49*tmp_6;
      real_t tmp_67 = tmp_52*tmp_59;
      real_t tmp_68 = tmp_44*tmp_59;
      real_t tmp_69 = tmp_26*tmp_59;
      real_t tmp_70 = -tmp_67 - tmp_68 - tmp_69;
      real_t tmp_71 = tmp_64*tmp_70;
      real_t tmp_72 = tmp_11*tmp_41 + tmp_14*tmp_49 + tmp_57*tmp_9;
      real_t tmp_73 = 1.0*tmp_19;
      real_t tmp_74 = tmp_50*tmp_73;
      real_t tmp_75 = tmp_42*tmp_73;
      real_t tmp_76 = tmp_7*tmp_73;
      real_t tmp_77 = 0.5*p_affine_13_0*tmp_63 + 0.5*p_affine_13_1*tmp_70 + 0.5*p_affine_13_2*(-tmp_74 - tmp_75 - tmp_76);
      real_t tmp_78 = -tmp_25 - tmp_32 - tmp_39 - tmp_43 - tmp_45 - tmp_47 - tmp_51 - tmp_53 - tmp_55 + 1;
      real_t tmp_79 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_80 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_81 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_82 = (std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)*std::abs(tmp_22*tmp_79 - tmp_29*tmp_81)) + (std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)*std::abs(tmp_22*tmp_80 - tmp_36*tmp_81)) + (std::abs(tmp_29*tmp_80 - tmp_36*tmp_79)*std::abs(tmp_29*tmp_80 - tmp_36*tmp_79));
      real_t tmp_83 = 3.0*std::pow(tmp_82, -0.25);
      real_t tmp_84 = tmp_72*tmp_83;
      real_t tmp_85 = tmp_59*tmp_7;
      real_t tmp_86 = tmp_42*tmp_59;
      real_t tmp_87 = tmp_50*tmp_59;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_1*tmp_85 + tmp_11*tmp_62 + tmp_14*tmp_61 + tmp_2*tmp_86 + tmp_5*tmp_87 + tmp_60*tmp_9) + 0.5*p_affine_13_1*(tmp_11*tmp_69 + tmp_13*tmp_85 + tmp_14*tmp_68 + tmp_4*tmp_87 + tmp_6*tmp_86 + tmp_67*tmp_9) + 0.5*p_affine_13_2*(tmp_11*tmp_76 + tmp_14*tmp_75 + tmp_74*tmp_9);
      real_t tmp_89 = 2.0*std::pow(tmp_82, 1.0/2.0);
      real_t tmp_90 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89;
      real_t tmp_91 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_92 = tmp_7*tmp_91;
      real_t tmp_93 = tmp_19*(0.19601935860219369*tmp_28 + 0.60796128279561268*tmp_29 + tmp_30);
      real_t tmp_94 = tmp_26*tmp_93;
      real_t tmp_95 = tmp_19*(0.19601935860219369*tmp_35 + 0.60796128279561268*tmp_36 + tmp_37);
      real_t tmp_96 = tmp_33*tmp_95;
      real_t tmp_97 = tmp_92 + tmp_94 + tmp_96;
      real_t tmp_98 = tmp_97 - 1.0/4.0;
      real_t tmp_99 = tmp_42*tmp_91;
      real_t tmp_100 = tmp_44*tmp_93;
      real_t tmp_101 = tmp_46*tmp_95;
      real_t tmp_102 = tmp_100 + tmp_101 + tmp_99;
      real_t tmp_103 = tmp_102 - 1.0/4.0;
      real_t tmp_104 = tmp_50*tmp_91;
      real_t tmp_105 = tmp_52*tmp_93;
      real_t tmp_106 = tmp_54*tmp_95;
      real_t tmp_107 = tmp_104 + tmp_105 + tmp_106;
      real_t tmp_108 = tmp_107 - 1.0/4.0;
      real_t tmp_109 = tmp_1*tmp_98 + tmp_103*tmp_2 + tmp_108*tmp_5;
      real_t tmp_110 = tmp_103*tmp_6 + tmp_108*tmp_4 + tmp_13*tmp_98;
      real_t tmp_111 = tmp_103*tmp_14 + tmp_108*tmp_9 + tmp_11*tmp_98;
      real_t tmp_112 = -tmp_100 - tmp_101 - tmp_104 - tmp_105 - tmp_106 - tmp_92 - tmp_94 - tmp_96 - tmp_99 + 1;
      real_t tmp_113 = tmp_111*tmp_83;
      real_t tmp_114 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89;
      real_t tmp_115 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_116 = tmp_115*tmp_7;
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = tmp_19*(0.37605877282253791*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_120 = tmp_119*tmp_33;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = tmp_121 - 1.0/4.0;
      real_t tmp_123 = tmp_115*tmp_42;
      real_t tmp_124 = tmp_117*tmp_44;
      real_t tmp_125 = tmp_119*tmp_46;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125;
      real_t tmp_127 = tmp_126 - 1.0/4.0;
      real_t tmp_128 = tmp_115*tmp_50;
      real_t tmp_129 = tmp_117*tmp_52;
      real_t tmp_130 = tmp_119*tmp_54;
      real_t tmp_131 = tmp_128 + tmp_129 + tmp_130;
      real_t tmp_132 = tmp_131 - 1.0/4.0;
      real_t tmp_133 = tmp_1*tmp_122 + tmp_127*tmp_2 + tmp_132*tmp_5;
      real_t tmp_134 = tmp_122*tmp_13 + tmp_127*tmp_6 + tmp_132*tmp_4;
      real_t tmp_135 = tmp_11*tmp_122 + tmp_127*tmp_14 + tmp_132*tmp_9;
      real_t tmp_136 = -tmp_116 - tmp_118 - tmp_120 - tmp_123 - tmp_124 - tmp_125 - tmp_128 - tmp_129 - tmp_130 + 1;
      real_t tmp_137 = tmp_135*tmp_83;
      real_t tmp_138 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_89;
      real_t tmp_139 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_140 = tmp_139*tmp_7;
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_142 = tmp_141*tmp_26;
      real_t tmp_143 = tmp_19*(0.041227165399737475*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_144 = tmp_143*tmp_33;
      real_t tmp_145 = tmp_140 + tmp_142 + tmp_144;
      real_t tmp_146 = tmp_145 - 1.0/4.0;
      real_t tmp_147 = tmp_139*tmp_42;
      real_t tmp_148 = tmp_141*tmp_44;
      real_t tmp_149 = tmp_143*tmp_46;
      real_t tmp_150 = tmp_147 + tmp_148 + tmp_149;
      real_t tmp_151 = tmp_150 - 1.0/4.0;
      real_t tmp_152 = tmp_139*tmp_50;
      real_t tmp_153 = tmp_141*tmp_52;
      real_t tmp_154 = tmp_143*tmp_54;
      real_t tmp_155 = tmp_152 + tmp_153 + tmp_154;
      real_t tmp_156 = tmp_155 - 1.0/4.0;
      real_t tmp_157 = tmp_1*tmp_146 + tmp_151*tmp_2 + tmp_156*tmp_5;
      real_t tmp_158 = tmp_13*tmp_146 + tmp_151*tmp_6 + tmp_156*tmp_4;
      real_t tmp_159 = tmp_11*tmp_146 + tmp_14*tmp_151 + tmp_156*tmp_9;
      real_t tmp_160 = -tmp_140 - tmp_142 - tmp_144 - tmp_147 - tmp_148 - tmp_149 - tmp_152 - tmp_153 - tmp_154 + 1;
      real_t tmp_161 = tmp_159*tmp_83;
      real_t tmp_162 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_89;
      real_t tmp_163 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_164 = tmp_163*tmp_7;
      real_t tmp_165 = tmp_19*(0.40446199974765351*tmp_28 + 0.19107600050469298*tmp_29 + tmp_30);
      real_t tmp_166 = tmp_165*tmp_26;
      real_t tmp_167 = tmp_19*(0.40446199974765351*tmp_35 + 0.19107600050469298*tmp_36 + tmp_37);
      real_t tmp_168 = tmp_167*tmp_33;
      real_t tmp_169 = tmp_164 + tmp_166 + tmp_168;
      real_t tmp_170 = tmp_169 - 1.0/4.0;
      real_t tmp_171 = tmp_163*tmp_42;
      real_t tmp_172 = tmp_165*tmp_44;
      real_t tmp_173 = tmp_167*tmp_46;
      real_t tmp_174 = tmp_171 + tmp_172 + tmp_173;
      real_t tmp_175 = tmp_174 - 1.0/4.0;
      real_t tmp_176 = tmp_163*tmp_50;
      real_t tmp_177 = tmp_165*tmp_52;
      real_t tmp_178 = tmp_167*tmp_54;
      real_t tmp_179 = tmp_176 + tmp_177 + tmp_178;
      real_t tmp_180 = tmp_179 - 1.0/4.0;
      real_t tmp_181 = tmp_1*tmp_170 + tmp_175*tmp_2 + tmp_180*tmp_5;
      real_t tmp_182 = tmp_13*tmp_170 + tmp_175*tmp_6 + tmp_180*tmp_4;
      real_t tmp_183 = tmp_11*tmp_170 + tmp_14*tmp_175 + tmp_180*tmp_9;
      real_t tmp_184 = -tmp_164 - tmp_166 - tmp_168 - tmp_171 - tmp_172 - tmp_173 - tmp_176 - tmp_177 - tmp_178 + 1;
      real_t tmp_185 = tmp_183*tmp_83;
      real_t tmp_186 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_89;
      real_t tmp_187 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_188 = tmp_187*tmp_7;
      real_t tmp_189 = tmp_19*(0.039308471900058539*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_190 = tmp_189*tmp_26;
      real_t tmp_191 = tmp_19*(0.039308471900058539*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_192 = tmp_191*tmp_33;
      real_t tmp_193 = tmp_188 + tmp_190 + tmp_192;
      real_t tmp_194 = tmp_193 - 1.0/4.0;
      real_t tmp_195 = tmp_187*tmp_42;
      real_t tmp_196 = tmp_189*tmp_44;
      real_t tmp_197 = tmp_191*tmp_46;
      real_t tmp_198 = tmp_195 + tmp_196 + tmp_197;
      real_t tmp_199 = tmp_198 - 1.0/4.0;
      real_t tmp_200 = tmp_187*tmp_50;
      real_t tmp_201 = tmp_189*tmp_52;
      real_t tmp_202 = tmp_191*tmp_54;
      real_t tmp_203 = tmp_200 + tmp_201 + tmp_202;
      real_t tmp_204 = tmp_203 - 1.0/4.0;
      real_t tmp_205 = tmp_1*tmp_194 + tmp_199*tmp_2 + tmp_204*tmp_5;
      real_t tmp_206 = tmp_13*tmp_194 + tmp_199*tmp_6 + tmp_204*tmp_4;
      real_t tmp_207 = tmp_11*tmp_194 + tmp_14*tmp_199 + tmp_204*tmp_9;
      real_t tmp_208 = -tmp_188 - tmp_190 - tmp_192 - tmp_195 - tmp_196 - tmp_197 - tmp_200 - tmp_201 - tmp_202 + 1;
      real_t tmp_209 = tmp_207*tmp_83;
      real_t tmp_210 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_89;
      real_t tmp_211 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_212 = tmp_211*tmp_7;
      real_t tmp_213 = tmp_19*(0.93718850182767688*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_19*(0.93718850182767688*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_212 + tmp_214 + tmp_216;
      real_t tmp_218 = tmp_217 - 1.0/4.0;
      real_t tmp_219 = tmp_211*tmp_42;
      real_t tmp_220 = tmp_213*tmp_44;
      real_t tmp_221 = tmp_215*tmp_46;
      real_t tmp_222 = tmp_219 + tmp_220 + tmp_221;
      real_t tmp_223 = tmp_222 - 1.0/4.0;
      real_t tmp_224 = tmp_211*tmp_50;
      real_t tmp_225 = tmp_213*tmp_52;
      real_t tmp_226 = tmp_215*tmp_54;
      real_t tmp_227 = tmp_224 + tmp_225 + tmp_226;
      real_t tmp_228 = tmp_227 - 1.0/4.0;
      real_t tmp_229 = tmp_1*tmp_218 + tmp_2*tmp_223 + tmp_228*tmp_5;
      real_t tmp_230 = tmp_13*tmp_218 + tmp_223*tmp_6 + tmp_228*tmp_4;
      real_t tmp_231 = tmp_11*tmp_218 + tmp_14*tmp_223 + tmp_228*tmp_9;
      real_t tmp_232 = -tmp_212 - tmp_214 - tmp_216 - tmp_219 - tmp_220 - tmp_221 - tmp_224 - tmp_225 - tmp_226 + 1;
      real_t tmp_233 = tmp_231*tmp_83;
      real_t tmp_234 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_89;
      real_t tmp_235 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_236 = tmp_235*tmp_7;
      real_t tmp_237 = tmp_19*(0.60796128279561268*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_238 = tmp_237*tmp_26;
      real_t tmp_239 = tmp_19*(0.60796128279561268*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_240 = tmp_239*tmp_33;
      real_t tmp_241 = tmp_236 + tmp_238 + tmp_240;
      real_t tmp_242 = tmp_241 - 1.0/4.0;
      real_t tmp_243 = tmp_235*tmp_42;
      real_t tmp_244 = tmp_237*tmp_44;
      real_t tmp_245 = tmp_239*tmp_46;
      real_t tmp_246 = tmp_243 + tmp_244 + tmp_245;
      real_t tmp_247 = tmp_246 - 1.0/4.0;
      real_t tmp_248 = tmp_235*tmp_50;
      real_t tmp_249 = tmp_237*tmp_52;
      real_t tmp_250 = tmp_239*tmp_54;
      real_t tmp_251 = tmp_248 + tmp_249 + tmp_250;
      real_t tmp_252 = tmp_251 - 1.0/4.0;
      real_t tmp_253 = tmp_1*tmp_242 + tmp_2*tmp_247 + tmp_252*tmp_5;
      real_t tmp_254 = tmp_13*tmp_242 + tmp_247*tmp_6 + tmp_252*tmp_4;
      real_t tmp_255 = tmp_11*tmp_242 + tmp_14*tmp_247 + tmp_252*tmp_9;
      real_t tmp_256 = -tmp_236 - tmp_238 - tmp_240 - tmp_243 - tmp_244 - tmp_245 - tmp_248 - tmp_249 - tmp_250 + 1;
      real_t tmp_257 = tmp_255*tmp_83;
      real_t tmp_258 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_89;
      real_t tmp_259 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_260 = tmp_259*tmp_7;
      real_t tmp_261 = tmp_19*(0.19107600050469298*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = tmp_19*(0.19107600050469298*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_260 + tmp_262 + tmp_264;
      real_t tmp_266 = tmp_265 - 1.0/4.0;
      real_t tmp_267 = tmp_259*tmp_42;
      real_t tmp_268 = tmp_261*tmp_44;
      real_t tmp_269 = tmp_263*tmp_46;
      real_t tmp_270 = tmp_267 + tmp_268 + tmp_269;
      real_t tmp_271 = tmp_270 - 1.0/4.0;
      real_t tmp_272 = tmp_259*tmp_50;
      real_t tmp_273 = tmp_261*tmp_52;
      real_t tmp_274 = tmp_263*tmp_54;
      real_t tmp_275 = tmp_272 + tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275 - 1.0/4.0;
      real_t tmp_277 = tmp_1*tmp_266 + tmp_2*tmp_271 + tmp_276*tmp_5;
      real_t tmp_278 = tmp_13*tmp_266 + tmp_271*tmp_6 + tmp_276*tmp_4;
      real_t tmp_279 = tmp_11*tmp_266 + tmp_14*tmp_271 + tmp_276*tmp_9;
      real_t tmp_280 = -tmp_260 - tmp_262 - tmp_264 - tmp_267 - tmp_268 - tmp_269 - tmp_272 - tmp_273 - tmp_274 + 1;
      real_t tmp_281 = tmp_279*tmp_83;
      real_t tmp_282 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_89;
      real_t tmp_283 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_284 = tmp_283*tmp_7;
      real_t tmp_285 = tmp_19*(0.031405749086161582*tmp_28 + 0.031405749086161582*tmp_29 + tmp_30);
      real_t tmp_286 = tmp_26*tmp_285;
      real_t tmp_287 = tmp_19*(0.031405749086161582*tmp_35 + 0.031405749086161582*tmp_36 + tmp_37);
      real_t tmp_288 = tmp_287*tmp_33;
      real_t tmp_289 = tmp_284 + tmp_286 + tmp_288;
      real_t tmp_290 = tmp_289 - 1.0/4.0;
      real_t tmp_291 = tmp_283*tmp_42;
      real_t tmp_292 = tmp_285*tmp_44;
      real_t tmp_293 = tmp_287*tmp_46;
      real_t tmp_294 = tmp_291 + tmp_292 + tmp_293;
      real_t tmp_295 = tmp_294 - 1.0/4.0;
      real_t tmp_296 = tmp_283*tmp_50;
      real_t tmp_297 = tmp_285*tmp_52;
      real_t tmp_298 = tmp_287*tmp_54;
      real_t tmp_299 = tmp_296 + tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_290 + tmp_2*tmp_295 + tmp_300*tmp_5;
      real_t tmp_302 = tmp_13*tmp_290 + tmp_295*tmp_6 + tmp_300*tmp_4;
      real_t tmp_303 = tmp_11*tmp_290 + tmp_14*tmp_295 + tmp_300*tmp_9;
      real_t tmp_304 = -tmp_284 - tmp_286 - tmp_288 - tmp_291 - tmp_292 - tmp_293 - tmp_296 - tmp_297 - tmp_298 + 1;
      real_t tmp_305 = tmp_303*tmp_83;
      real_t tmp_306 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_89;
      real_t tmp_307 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_308 = tmp_307*tmp_7;
      real_t tmp_309 = tmp_19*(0.19601935860219369*tmp_28 + 0.19601935860219369*tmp_29 + tmp_30);
      real_t tmp_310 = tmp_26*tmp_309;
      real_t tmp_311 = tmp_19*(0.19601935860219369*tmp_35 + 0.19601935860219369*tmp_36 + tmp_37);
      real_t tmp_312 = tmp_311*tmp_33;
      real_t tmp_313 = tmp_308 + tmp_310 + tmp_312;
      real_t tmp_314 = tmp_313 - 1.0/4.0;
      real_t tmp_315 = tmp_307*tmp_42;
      real_t tmp_316 = tmp_309*tmp_44;
      real_t tmp_317 = tmp_311*tmp_46;
      real_t tmp_318 = tmp_315 + tmp_316 + tmp_317;
      real_t tmp_319 = tmp_318 - 1.0/4.0;
      real_t tmp_320 = tmp_307*tmp_50;
      real_t tmp_321 = tmp_309*tmp_52;
      real_t tmp_322 = tmp_311*tmp_54;
      real_t tmp_323 = tmp_320 + tmp_321 + tmp_322;
      real_t tmp_324 = tmp_323 - 1.0/4.0;
      real_t tmp_325 = tmp_1*tmp_314 + tmp_2*tmp_319 + tmp_324*tmp_5;
      real_t tmp_326 = tmp_13*tmp_314 + tmp_319*tmp_6 + tmp_324*tmp_4;
      real_t tmp_327 = tmp_11*tmp_314 + tmp_14*tmp_319 + tmp_324*tmp_9;
      real_t tmp_328 = -tmp_308 - tmp_310 - tmp_312 - tmp_315 - tmp_316 - tmp_317 - tmp_320 - tmp_321 - tmp_322 + 1;
      real_t tmp_329 = tmp_327*tmp_83;
      real_t tmp_330 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_89;
      real_t tmp_331 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_332 = tmp_331*tmp_7;
      real_t tmp_333 = tmp_19*(0.40446199974765351*tmp_28 + 0.40446199974765351*tmp_29 + tmp_30);
      real_t tmp_334 = tmp_26*tmp_333;
      real_t tmp_335 = tmp_19*(0.40446199974765351*tmp_35 + 0.40446199974765351*tmp_36 + tmp_37);
      real_t tmp_336 = tmp_33*tmp_335;
      real_t tmp_337 = tmp_332 + tmp_334 + tmp_336;
      real_t tmp_338 = tmp_337 - 1.0/4.0;
      real_t tmp_339 = tmp_331*tmp_42;
      real_t tmp_340 = tmp_333*tmp_44;
      real_t tmp_341 = tmp_335*tmp_46;
      real_t tmp_342 = tmp_339 + tmp_340 + tmp_341;
      real_t tmp_343 = tmp_342 - 1.0/4.0;
      real_t tmp_344 = tmp_331*tmp_50;
      real_t tmp_345 = tmp_333*tmp_52;
      real_t tmp_346 = tmp_335*tmp_54;
      real_t tmp_347 = tmp_344 + tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347 - 1.0/4.0;
      real_t tmp_349 = tmp_1*tmp_338 + tmp_2*tmp_343 + tmp_348*tmp_5;
      real_t tmp_350 = tmp_13*tmp_338 + tmp_343*tmp_6 + tmp_348*tmp_4;
      real_t tmp_351 = tmp_11*tmp_338 + tmp_14*tmp_343 + tmp_348*tmp_9;
      real_t tmp_352 = -tmp_332 - tmp_334 - tmp_336 - tmp_339 - tmp_340 - tmp_341 - tmp_344 - tmp_345 - tmp_346 + 1;
      real_t tmp_353 = tmp_351*tmp_83;
      real_t tmp_354 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_89;
      real_t tmp_355 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_356 = tmp_355*tmp_7;
      real_t tmp_357 = tmp_19*(0.37605877282253791*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_358 = tmp_26*tmp_357;
      real_t tmp_359 = tmp_19*(0.37605877282253791*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_360 = tmp_33*tmp_359;
      real_t tmp_361 = tmp_356 + tmp_358 + tmp_360;
      real_t tmp_362 = tmp_361 - 1.0/4.0;
      real_t tmp_363 = tmp_355*tmp_42;
      real_t tmp_364 = tmp_357*tmp_44;
      real_t tmp_365 = tmp_359*tmp_46;
      real_t tmp_366 = tmp_363 + tmp_364 + tmp_365;
      real_t tmp_367 = tmp_366 - 1.0/4.0;
      real_t tmp_368 = tmp_355*tmp_50;
      real_t tmp_369 = tmp_357*tmp_52;
      real_t tmp_370 = tmp_359*tmp_54;
      real_t tmp_371 = tmp_368 + tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371 - 1.0/4.0;
      real_t tmp_373 = tmp_1*tmp_362 + tmp_2*tmp_367 + tmp_372*tmp_5;
      real_t tmp_374 = tmp_13*tmp_362 + tmp_367*tmp_6 + tmp_372*tmp_4;
      real_t tmp_375 = tmp_11*tmp_362 + tmp_14*tmp_367 + tmp_372*tmp_9;
      real_t tmp_376 = -tmp_356 - tmp_358 - tmp_360 - tmp_363 - tmp_364 - tmp_365 - tmp_368 - tmp_369 - tmp_370 + 1;
      real_t tmp_377 = tmp_375*tmp_83;
      real_t tmp_378 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89;
      real_t tmp_379 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_380 = tmp_379*tmp_7;
      real_t tmp_381 = tmp_19*(0.1711304259088916*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = tmp_19*(0.1711304259088916*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_384 = tmp_33*tmp_383;
      real_t tmp_385 = tmp_380 + tmp_382 + tmp_384;
      real_t tmp_386 = tmp_385 - 1.0/4.0;
      real_t tmp_387 = tmp_379*tmp_42;
      real_t tmp_388 = tmp_381*tmp_44;
      real_t tmp_389 = tmp_383*tmp_46;
      real_t tmp_390 = tmp_387 + tmp_388 + tmp_389;
      real_t tmp_391 = tmp_390 - 1.0/4.0;
      real_t tmp_392 = tmp_379*tmp_50;
      real_t tmp_393 = tmp_381*tmp_52;
      real_t tmp_394 = tmp_383*tmp_54;
      real_t tmp_395 = tmp_392 + tmp_393 + tmp_394;
      real_t tmp_396 = tmp_395 - 1.0/4.0;
      real_t tmp_397 = tmp_1*tmp_386 + tmp_2*tmp_391 + tmp_396*tmp_5;
      real_t tmp_398 = tmp_13*tmp_386 + tmp_391*tmp_6 + tmp_396*tmp_4;
      real_t tmp_399 = tmp_11*tmp_386 + tmp_14*tmp_391 + tmp_396*tmp_9;
      real_t tmp_400 = -tmp_380 - tmp_382 - tmp_384 - tmp_387 - tmp_388 - tmp_389 - tmp_392 - tmp_393 - tmp_394 + 1;
      real_t tmp_401 = tmp_399*tmp_83;
      real_t tmp_402 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_89;
      real_t tmp_403 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_404 = tmp_403*tmp_7;
      real_t tmp_405 = tmp_19*(0.78764240869137092*tmp_28 + 0.1711304259088916*tmp_29 + tmp_30);
      real_t tmp_406 = tmp_26*tmp_405;
      real_t tmp_407 = tmp_19*(0.78764240869137092*tmp_35 + 0.1711304259088916*tmp_36 + tmp_37);
      real_t tmp_408 = tmp_33*tmp_407;
      real_t tmp_409 = tmp_404 + tmp_406 + tmp_408;
      real_t tmp_410 = tmp_409 - 1.0/4.0;
      real_t tmp_411 = tmp_403*tmp_42;
      real_t tmp_412 = tmp_405*tmp_44;
      real_t tmp_413 = tmp_407*tmp_46;
      real_t tmp_414 = tmp_411 + tmp_412 + tmp_413;
      real_t tmp_415 = tmp_414 - 1.0/4.0;
      real_t tmp_416 = tmp_403*tmp_50;
      real_t tmp_417 = tmp_405*tmp_52;
      real_t tmp_418 = tmp_407*tmp_54;
      real_t tmp_419 = tmp_416 + tmp_417 + tmp_418;
      real_t tmp_420 = tmp_419 - 1.0/4.0;
      real_t tmp_421 = tmp_1*tmp_410 + tmp_2*tmp_415 + tmp_420*tmp_5;
      real_t tmp_422 = tmp_13*tmp_410 + tmp_4*tmp_420 + tmp_415*tmp_6;
      real_t tmp_423 = tmp_11*tmp_410 + tmp_14*tmp_415 + tmp_420*tmp_9;
      real_t tmp_424 = -tmp_404 - tmp_406 - tmp_408 - tmp_411 - tmp_412 - tmp_413 - tmp_416 - tmp_417 - tmp_418 + 1;
      real_t tmp_425 = tmp_423*tmp_83;
      real_t tmp_426 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89;
      real_t tmp_427 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_428 = tmp_427*tmp_7;
      real_t tmp_429 = tmp_19*(0.58463275527740355*tmp_28 + 0.37605877282253791*tmp_29 + tmp_30);
      real_t tmp_430 = tmp_26*tmp_429;
      real_t tmp_431 = tmp_19*(0.58463275527740355*tmp_35 + 0.37605877282253791*tmp_36 + tmp_37);
      real_t tmp_432 = tmp_33*tmp_431;
      real_t tmp_433 = tmp_428 + tmp_430 + tmp_432;
      real_t tmp_434 = tmp_433 - 1.0/4.0;
      real_t tmp_435 = tmp_42*tmp_427;
      real_t tmp_436 = tmp_429*tmp_44;
      real_t tmp_437 = tmp_431*tmp_46;
      real_t tmp_438 = tmp_435 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_438 - 1.0/4.0;
      real_t tmp_440 = tmp_427*tmp_50;
      real_t tmp_441 = tmp_429*tmp_52;
      real_t tmp_442 = tmp_431*tmp_54;
      real_t tmp_443 = tmp_440 + tmp_441 + tmp_442;
      real_t tmp_444 = tmp_443 - 1.0/4.0;
      real_t tmp_445 = tmp_1*tmp_434 + tmp_2*tmp_439 + tmp_444*tmp_5;
      real_t tmp_446 = tmp_13*tmp_434 + tmp_4*tmp_444 + tmp_439*tmp_6;
      real_t tmp_447 = tmp_11*tmp_434 + tmp_14*tmp_439 + tmp_444*tmp_9;
      real_t tmp_448 = -tmp_428 - tmp_430 - tmp_432 - tmp_435 - tmp_436 - tmp_437 - tmp_440 - tmp_441 - tmp_442 + 1;
      real_t tmp_449 = tmp_447*tmp_83;
      real_t tmp_450 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_89;
      real_t tmp_451 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_452 = tmp_451*tmp_7;
      real_t tmp_453 = tmp_19*(0.041227165399737475*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_454 = tmp_26*tmp_453;
      real_t tmp_455 = tmp_19*(0.041227165399737475*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_456 = tmp_33*tmp_455;
      real_t tmp_457 = tmp_452 + tmp_454 + tmp_456;
      real_t tmp_458 = tmp_457 - 1.0/4.0;
      real_t tmp_459 = tmp_42*tmp_451;
      real_t tmp_460 = tmp_44*tmp_453;
      real_t tmp_461 = tmp_455*tmp_46;
      real_t tmp_462 = tmp_459 + tmp_460 + tmp_461;
      real_t tmp_463 = tmp_462 - 1.0/4.0;
      real_t tmp_464 = tmp_451*tmp_50;
      real_t tmp_465 = tmp_453*tmp_52;
      real_t tmp_466 = tmp_455*tmp_54;
      real_t tmp_467 = tmp_464 + tmp_465 + tmp_466;
      real_t tmp_468 = tmp_467 - 1.0/4.0;
      real_t tmp_469 = tmp_1*tmp_458 + tmp_2*tmp_463 + tmp_468*tmp_5;
      real_t tmp_470 = tmp_13*tmp_458 + tmp_4*tmp_468 + tmp_463*tmp_6;
      real_t tmp_471 = tmp_11*tmp_458 + tmp_14*tmp_463 + tmp_468*tmp_9;
      real_t tmp_472 = -tmp_452 - tmp_454 - tmp_456 - tmp_459 - tmp_460 - tmp_461 - tmp_464 - tmp_465 - tmp_466 + 1;
      real_t tmp_473 = tmp_471*tmp_83;
      real_t tmp_474 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_89;
      real_t tmp_475 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_476 = tmp_475*tmp_7;
      real_t tmp_477 = tmp_19*(0.039308471900058539*tmp_28 + 0.58463275527740355*tmp_29 + tmp_30);
      real_t tmp_478 = tmp_26*tmp_477;
      real_t tmp_479 = tmp_19*(0.039308471900058539*tmp_35 + 0.58463275527740355*tmp_36 + tmp_37);
      real_t tmp_480 = tmp_33*tmp_479;
      real_t tmp_481 = tmp_476 + tmp_478 + tmp_480;
      real_t tmp_482 = tmp_481 - 1.0/4.0;
      real_t tmp_483 = tmp_42*tmp_475;
      real_t tmp_484 = tmp_44*tmp_477;
      real_t tmp_485 = tmp_46*tmp_479;
      real_t tmp_486 = tmp_483 + tmp_484 + tmp_485;
      real_t tmp_487 = tmp_486 - 1.0/4.0;
      real_t tmp_488 = tmp_475*tmp_50;
      real_t tmp_489 = tmp_477*tmp_52;
      real_t tmp_490 = tmp_479*tmp_54;
      real_t tmp_491 = tmp_488 + tmp_489 + tmp_490;
      real_t tmp_492 = tmp_491 - 1.0/4.0;
      real_t tmp_493 = tmp_1*tmp_482 + tmp_2*tmp_487 + tmp_492*tmp_5;
      real_t tmp_494 = tmp_13*tmp_482 + tmp_4*tmp_492 + tmp_487*tmp_6;
      real_t tmp_495 = tmp_11*tmp_482 + tmp_14*tmp_487 + tmp_492*tmp_9;
      real_t tmp_496 = -tmp_476 - tmp_478 - tmp_480 - tmp_483 - tmp_484 - tmp_485 - tmp_488 - tmp_489 - tmp_490 + 1;
      real_t tmp_497 = tmp_495*tmp_83;
      real_t tmp_498 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_89;
      real_t tmp_499 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_500 = tmp_499*tmp_7;
      real_t tmp_501 = tmp_19*(0.78764240869137092*tmp_28 + 0.041227165399737475*tmp_29 + tmp_30);
      real_t tmp_502 = tmp_26*tmp_501;
      real_t tmp_503 = tmp_19*(0.78764240869137092*tmp_35 + 0.041227165399737475*tmp_36 + tmp_37);
      real_t tmp_504 = tmp_33*tmp_503;
      real_t tmp_505 = tmp_500 + tmp_502 + tmp_504;
      real_t tmp_506 = tmp_505 - 1.0/4.0;
      real_t tmp_507 = tmp_42*tmp_499;
      real_t tmp_508 = tmp_44*tmp_501;
      real_t tmp_509 = tmp_46*tmp_503;
      real_t tmp_510 = tmp_507 + tmp_508 + tmp_509;
      real_t tmp_511 = tmp_510 - 1.0/4.0;
      real_t tmp_512 = tmp_499*tmp_50;
      real_t tmp_513 = tmp_501*tmp_52;
      real_t tmp_514 = tmp_503*tmp_54;
      real_t tmp_515 = tmp_512 + tmp_513 + tmp_514;
      real_t tmp_516 = tmp_515 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_506 + tmp_2*tmp_511 + tmp_5*tmp_516;
      real_t tmp_518 = tmp_13*tmp_506 + tmp_4*tmp_516 + tmp_511*tmp_6;
      real_t tmp_519 = tmp_11*tmp_506 + tmp_14*tmp_511 + tmp_516*tmp_9;
      real_t tmp_520 = -tmp_500 - tmp_502 - tmp_504 - tmp_507 - tmp_508 - tmp_509 - tmp_512 - tmp_513 - tmp_514 + 1;
      real_t tmp_521 = tmp_519*tmp_83;
      real_t tmp_522 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_89;
      real_t tmp_523 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_524 = tmp_523*tmp_7;
      real_t tmp_525 = tmp_19*(0.58463275527740355*tmp_28 + 0.039308471900058539*tmp_29 + tmp_30);
      real_t tmp_526 = tmp_26*tmp_525;
      real_t tmp_527 = tmp_19*(0.58463275527740355*tmp_35 + 0.039308471900058539*tmp_36 + tmp_37);
      real_t tmp_528 = tmp_33*tmp_527;
      real_t tmp_529 = tmp_524 + tmp_526 + tmp_528;
      real_t tmp_530 = tmp_529 - 1.0/4.0;
      real_t tmp_531 = tmp_42*tmp_523;
      real_t tmp_532 = tmp_44*tmp_525;
      real_t tmp_533 = tmp_46*tmp_527;
      real_t tmp_534 = tmp_531 + tmp_532 + tmp_533;
      real_t tmp_535 = tmp_534 - 1.0/4.0;
      real_t tmp_536 = tmp_50*tmp_523;
      real_t tmp_537 = tmp_52*tmp_525;
      real_t tmp_538 = tmp_527*tmp_54;
      real_t tmp_539 = tmp_536 + tmp_537 + tmp_538;
      real_t tmp_540 = tmp_539 - 1.0/4.0;
      real_t tmp_541 = tmp_1*tmp_530 + tmp_2*tmp_535 + tmp_5*tmp_540;
      real_t tmp_542 = tmp_13*tmp_530 + tmp_4*tmp_540 + tmp_535*tmp_6;
      real_t tmp_543 = tmp_11*tmp_530 + tmp_14*tmp_535 + tmp_540*tmp_9;
      real_t tmp_544 = -tmp_524 - tmp_526 - tmp_528 - tmp_531 - tmp_532 - tmp_533 - tmp_536 - tmp_537 - tmp_538 + 1;
      real_t tmp_545 = tmp_543*tmp_83;
      real_t tmp_546 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_89;
      real_t tmp_547 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_548 = tmp_547*tmp_7;
      real_t tmp_549 = tmp_19*(0.1711304259088916*tmp_28 + 0.78764240869137092*tmp_29 + tmp_30);
      real_t tmp_550 = tmp_26*tmp_549;
      real_t tmp_551 = tmp_19*(0.1711304259088916*tmp_35 + 0.78764240869137092*tmp_36 + tmp_37);
      real_t tmp_552 = tmp_33*tmp_551;
      real_t tmp_553 = tmp_548 + tmp_550 + tmp_552;
      real_t tmp_554 = tmp_553 - 1.0/4.0;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = tmp_44*tmp_549;
      real_t tmp_557 = tmp_46*tmp_551;
      real_t tmp_558 = tmp_555 + tmp_556 + tmp_557;
      real_t tmp_559 = tmp_558 - 1.0/4.0;
      real_t tmp_560 = tmp_50*tmp_547;
      real_t tmp_561 = tmp_52*tmp_549;
      real_t tmp_562 = tmp_54*tmp_551;
      real_t tmp_563 = tmp_560 + tmp_561 + tmp_562;
      real_t tmp_564 = tmp_563 - 1.0/4.0;
      real_t tmp_565 = tmp_1*tmp_554 + tmp_2*tmp_559 + tmp_5*tmp_564;
      real_t tmp_566 = tmp_13*tmp_554 + tmp_4*tmp_564 + tmp_559*tmp_6;
      real_t tmp_567 = tmp_11*tmp_554 + tmp_14*tmp_559 + tmp_564*tmp_9;
      real_t tmp_568 = -tmp_548 - tmp_550 - tmp_552 - tmp_555 - tmp_556 - tmp_557 - tmp_560 - tmp_561 - tmp_562 + 1;
      real_t tmp_569 = tmp_567*tmp_83;
      real_t tmp_570 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_89;
      real_t tmp_571 = 0.25*p_affine_13_2*tmp_19;
      real_t tmp_572 = tmp_26*tmp_571;
      real_t tmp_573 = tmp_33*tmp_571;
      real_t tmp_574 = 0.5*p_affine_13_0*tmp_62 + 0.5*p_affine_13_1*tmp_69 + 0.5*p_affine_13_2*tmp_76;
      real_t tmp_575 = tmp_44*tmp_571;
      real_t tmp_576 = tmp_46*tmp_571;
      real_t tmp_577 = 0.5*p_affine_13_0*tmp_61 + 0.5*p_affine_13_1*tmp_68 + 0.5*p_affine_13_2*tmp_75;
      real_t tmp_578 = tmp_52*tmp_571;
      real_t tmp_579 = tmp_54*tmp_571;
      real_t tmp_580 = 0.5*p_affine_13_0*tmp_60 + 0.5*p_affine_13_1*tmp_67 + 0.5*p_affine_13_2*tmp_74;
      real_t a_0_0 = tmp_114*(-tmp_109*tmp_65 - tmp_110*tmp_71 - tmp_111*tmp_77 + tmp_112*tmp_113 - tmp_112*tmp_88) + tmp_138*(-tmp_133*tmp_65 - tmp_134*tmp_71 - tmp_135*tmp_77 + tmp_136*tmp_137 - tmp_136*tmp_88) + tmp_162*(-tmp_157*tmp_65 - tmp_158*tmp_71 - tmp_159*tmp_77 + tmp_160*tmp_161 - tmp_160*tmp_88) + tmp_186*(-tmp_181*tmp_65 - tmp_182*tmp_71 - tmp_183*tmp_77 + tmp_184*tmp_185 - tmp_184*tmp_88) + tmp_210*(-tmp_205*tmp_65 - tmp_206*tmp_71 - tmp_207*tmp_77 + tmp_208*tmp_209 - tmp_208*tmp_88) + tmp_234*(-tmp_229*tmp_65 - tmp_230*tmp_71 - tmp_231*tmp_77 + tmp_232*tmp_233 - tmp_232*tmp_88) + tmp_258*(-tmp_253*tmp_65 - tmp_254*tmp_71 - tmp_255*tmp_77 + tmp_256*tmp_257 - tmp_256*tmp_88) + tmp_282*(-tmp_277*tmp_65 - tmp_278*tmp_71 - tmp_279*tmp_77 + tmp_280*tmp_281 - tmp_280*tmp_88) + tmp_306*(-tmp_301*tmp_65 - tmp_302*tmp_71 - tmp_303*tmp_77 + tmp_304*tmp_305 - tmp_304*tmp_88) + tmp_330*(-tmp_325*tmp_65 - tmp_326*tmp_71 - tmp_327*tmp_77 + tmp_328*tmp_329 - tmp_328*tmp_88) + tmp_354*(-tmp_349*tmp_65 - tmp_350*tmp_71 - tmp_351*tmp_77 + tmp_352*tmp_353 - tmp_352*tmp_88) + tmp_378*(-tmp_373*tmp_65 - tmp_374*tmp_71 - tmp_375*tmp_77 + tmp_376*tmp_377 - tmp_376*tmp_88) + tmp_402*(-tmp_397*tmp_65 - tmp_398*tmp_71 - tmp_399*tmp_77 + tmp_400*tmp_401 - tmp_400*tmp_88) + tmp_426*(-tmp_421*tmp_65 - tmp_422*tmp_71 - tmp_423*tmp_77 + tmp_424*tmp_425 - tmp_424*tmp_88) + tmp_450*(-tmp_445*tmp_65 - tmp_446*tmp_71 - tmp_447*tmp_77 + tmp_448*tmp_449 - tmp_448*tmp_88) + tmp_474*(-tmp_469*tmp_65 - tmp_470*tmp_71 - tmp_471*tmp_77 + tmp_472*tmp_473 - tmp_472*tmp_88) + tmp_498*(-tmp_493*tmp_65 - tmp_494*tmp_71 - tmp_495*tmp_77 + tmp_496*tmp_497 - tmp_496*tmp_88) + tmp_522*(-tmp_517*tmp_65 - tmp_518*tmp_71 - tmp_519*tmp_77 + tmp_520*tmp_521 - tmp_520*tmp_88) + tmp_546*(-tmp_541*tmp_65 - tmp_542*tmp_71 - tmp_543*tmp_77 + tmp_544*tmp_545 - tmp_544*tmp_88) + tmp_570*(-tmp_565*tmp_65 - tmp_566*tmp_71 - tmp_567*tmp_77 + tmp_568*tmp_569 - tmp_568*tmp_88) + tmp_90*(-tmp_58*tmp_65 - tmp_66*tmp_71 - tmp_72*tmp_77 + tmp_78*tmp_84 - tmp_78*tmp_88);
      real_t a_1_0 = tmp_114*(-tmp_109*tmp_573 - tmp_110*tmp_572 - tmp_111*tmp_574 + tmp_113*tmp_97 - tmp_88*tmp_97) + tmp_138*(tmp_121*tmp_137 - tmp_121*tmp_88 - tmp_133*tmp_573 - tmp_134*tmp_572 - tmp_135*tmp_574) + tmp_162*(tmp_145*tmp_161 - tmp_145*tmp_88 - tmp_157*tmp_573 - tmp_158*tmp_572 - tmp_159*tmp_574) + tmp_186*(tmp_169*tmp_185 - tmp_169*tmp_88 - tmp_181*tmp_573 - tmp_182*tmp_572 - tmp_183*tmp_574) + tmp_210*(tmp_193*tmp_209 - tmp_193*tmp_88 - tmp_205*tmp_573 - tmp_206*tmp_572 - tmp_207*tmp_574) + tmp_234*(tmp_217*tmp_233 - tmp_217*tmp_88 - tmp_229*tmp_573 - tmp_230*tmp_572 - tmp_231*tmp_574) + tmp_258*(tmp_241*tmp_257 - tmp_241*tmp_88 - tmp_253*tmp_573 - tmp_254*tmp_572 - tmp_255*tmp_574) + tmp_282*(tmp_265*tmp_281 - tmp_265*tmp_88 - tmp_277*tmp_573 - tmp_278*tmp_572 - tmp_279*tmp_574) + tmp_306*(tmp_289*tmp_305 - tmp_289*tmp_88 - tmp_301*tmp_573 - tmp_302*tmp_572 - tmp_303*tmp_574) + tmp_330*(tmp_313*tmp_329 - tmp_313*tmp_88 - tmp_325*tmp_573 - tmp_326*tmp_572 - tmp_327*tmp_574) + tmp_354*(tmp_337*tmp_353 - tmp_337*tmp_88 - tmp_349*tmp_573 - tmp_350*tmp_572 - tmp_351*tmp_574) + tmp_378*(tmp_361*tmp_377 - tmp_361*tmp_88 - tmp_373*tmp_573 - tmp_374*tmp_572 - tmp_375*tmp_574) + tmp_402*(tmp_385*tmp_401 - tmp_385*tmp_88 - tmp_397*tmp_573 - tmp_398*tmp_572 - tmp_399*tmp_574) + tmp_426*(tmp_409*tmp_425 - tmp_409*tmp_88 - tmp_421*tmp_573 - tmp_422*tmp_572 - tmp_423*tmp_574) + tmp_450*(tmp_433*tmp_449 - tmp_433*tmp_88 - tmp_445*tmp_573 - tmp_446*tmp_572 - tmp_447*tmp_574) + tmp_474*(tmp_457*tmp_473 - tmp_457*tmp_88 - tmp_469*tmp_573 - tmp_470*tmp_572 - tmp_471*tmp_574) + tmp_498*(tmp_481*tmp_497 - tmp_481*tmp_88 - tmp_493*tmp_573 - tmp_494*tmp_572 - tmp_495*tmp_574) + tmp_522*(tmp_505*tmp_521 - tmp_505*tmp_88 - tmp_517*tmp_573 - tmp_518*tmp_572 - tmp_519*tmp_574) + tmp_546*(tmp_529*tmp_545 - tmp_529*tmp_88 - tmp_541*tmp_573 - tmp_542*tmp_572 - tmp_543*tmp_574) + tmp_570*(tmp_553*tmp_569 - tmp_553*tmp_88 - tmp_565*tmp_573 - tmp_566*tmp_572 - tmp_567*tmp_574) + tmp_90*(tmp_40*tmp_84 - tmp_40*tmp_88 - tmp_572*tmp_66 - tmp_573*tmp_58 - tmp_574*tmp_72);
      real_t a_2_0 = tmp_114*(tmp_102*tmp_113 - tmp_102*tmp_88 - tmp_109*tmp_576 - tmp_110*tmp_575 - tmp_111*tmp_577) + tmp_138*(tmp_126*tmp_137 - tmp_126*tmp_88 - tmp_133*tmp_576 - tmp_134*tmp_575 - tmp_135*tmp_577) + tmp_162*(tmp_150*tmp_161 - tmp_150*tmp_88 - tmp_157*tmp_576 - tmp_158*tmp_575 - tmp_159*tmp_577) + tmp_186*(tmp_174*tmp_185 - tmp_174*tmp_88 - tmp_181*tmp_576 - tmp_182*tmp_575 - tmp_183*tmp_577) + tmp_210*(tmp_198*tmp_209 - tmp_198*tmp_88 - tmp_205*tmp_576 - tmp_206*tmp_575 - tmp_207*tmp_577) + tmp_234*(tmp_222*tmp_233 - tmp_222*tmp_88 - tmp_229*tmp_576 - tmp_230*tmp_575 - tmp_231*tmp_577) + tmp_258*(tmp_246*tmp_257 - tmp_246*tmp_88 - tmp_253*tmp_576 - tmp_254*tmp_575 - tmp_255*tmp_577) + tmp_282*(tmp_270*tmp_281 - tmp_270*tmp_88 - tmp_277*tmp_576 - tmp_278*tmp_575 - tmp_279*tmp_577) + tmp_306*(tmp_294*tmp_305 - tmp_294*tmp_88 - tmp_301*tmp_576 - tmp_302*tmp_575 - tmp_303*tmp_577) + tmp_330*(tmp_318*tmp_329 - tmp_318*tmp_88 - tmp_325*tmp_576 - tmp_326*tmp_575 - tmp_327*tmp_577) + tmp_354*(tmp_342*tmp_353 - tmp_342*tmp_88 - tmp_349*tmp_576 - tmp_350*tmp_575 - tmp_351*tmp_577) + tmp_378*(tmp_366*tmp_377 - tmp_366*tmp_88 - tmp_373*tmp_576 - tmp_374*tmp_575 - tmp_375*tmp_577) + tmp_402*(tmp_390*tmp_401 - tmp_390*tmp_88 - tmp_397*tmp_576 - tmp_398*tmp_575 - tmp_399*tmp_577) + tmp_426*(tmp_414*tmp_425 - tmp_414*tmp_88 - tmp_421*tmp_576 - tmp_422*tmp_575 - tmp_423*tmp_577) + tmp_450*(tmp_438*tmp_449 - tmp_438*tmp_88 - tmp_445*tmp_576 - tmp_446*tmp_575 - tmp_447*tmp_577) + tmp_474*(tmp_462*tmp_473 - tmp_462*tmp_88 - tmp_469*tmp_576 - tmp_470*tmp_575 - tmp_471*tmp_577) + tmp_498*(tmp_486*tmp_497 - tmp_486*tmp_88 - tmp_493*tmp_576 - tmp_494*tmp_575 - tmp_495*tmp_577) + tmp_522*(tmp_510*tmp_521 - tmp_510*tmp_88 - tmp_517*tmp_576 - tmp_518*tmp_575 - tmp_519*tmp_577) + tmp_546*(tmp_534*tmp_545 - tmp_534*tmp_88 - tmp_541*tmp_576 - tmp_542*tmp_575 - tmp_543*tmp_577) + tmp_570*(tmp_558*tmp_569 - tmp_558*tmp_88 - tmp_565*tmp_576 - tmp_566*tmp_575 - tmp_567*tmp_577) + tmp_90*(tmp_48*tmp_84 - tmp_48*tmp_88 - tmp_575*tmp_66 - tmp_576*tmp_58 - tmp_577*tmp_72);
      real_t a_3_0 = tmp_114*(tmp_107*tmp_113 - tmp_107*tmp_88 - tmp_109*tmp_579 - tmp_110*tmp_578 - tmp_111*tmp_580) + tmp_138*(tmp_131*tmp_137 - tmp_131*tmp_88 - tmp_133*tmp_579 - tmp_134*tmp_578 - tmp_135*tmp_580) + tmp_162*(tmp_155*tmp_161 - tmp_155*tmp_88 - tmp_157*tmp_579 - tmp_158*tmp_578 - tmp_159*tmp_580) + tmp_186*(tmp_179*tmp_185 - tmp_179*tmp_88 - tmp_181*tmp_579 - tmp_182*tmp_578 - tmp_183*tmp_580) + tmp_210*(tmp_203*tmp_209 - tmp_203*tmp_88 - tmp_205*tmp_579 - tmp_206*tmp_578 - tmp_207*tmp_580) + tmp_234*(tmp_227*tmp_233 - tmp_227*tmp_88 - tmp_229*tmp_579 - tmp_230*tmp_578 - tmp_231*tmp_580) + tmp_258*(tmp_251*tmp_257 - tmp_251*tmp_88 - tmp_253*tmp_579 - tmp_254*tmp_578 - tmp_255*tmp_580) + tmp_282*(tmp_275*tmp_281 - tmp_275*tmp_88 - tmp_277*tmp_579 - tmp_278*tmp_578 - tmp_279*tmp_580) + tmp_306*(tmp_299*tmp_305 - tmp_299*tmp_88 - tmp_301*tmp_579 - tmp_302*tmp_578 - tmp_303*tmp_580) + tmp_330*(tmp_323*tmp_329 - tmp_323*tmp_88 - tmp_325*tmp_579 - tmp_326*tmp_578 - tmp_327*tmp_580) + tmp_354*(tmp_347*tmp_353 - tmp_347*tmp_88 - tmp_349*tmp_579 - tmp_350*tmp_578 - tmp_351*tmp_580) + tmp_378*(tmp_371*tmp_377 - tmp_371*tmp_88 - tmp_373*tmp_579 - tmp_374*tmp_578 - tmp_375*tmp_580) + tmp_402*(tmp_395*tmp_401 - tmp_395*tmp_88 - tmp_397*tmp_579 - tmp_398*tmp_578 - tmp_399*tmp_580) + tmp_426*(tmp_419*tmp_425 - tmp_419*tmp_88 - tmp_421*tmp_579 - tmp_422*tmp_578 - tmp_423*tmp_580) + tmp_450*(tmp_443*tmp_449 - tmp_443*tmp_88 - tmp_445*tmp_579 - tmp_446*tmp_578 - tmp_447*tmp_580) + tmp_474*(tmp_467*tmp_473 - tmp_467*tmp_88 - tmp_469*tmp_579 - tmp_470*tmp_578 - tmp_471*tmp_580) + tmp_498*(tmp_491*tmp_497 - tmp_491*tmp_88 - tmp_493*tmp_579 - tmp_494*tmp_578 - tmp_495*tmp_580) + tmp_522*(tmp_515*tmp_521 - tmp_515*tmp_88 - tmp_517*tmp_579 - tmp_518*tmp_578 - tmp_519*tmp_580) + tmp_546*(tmp_539*tmp_545 - tmp_539*tmp_88 - tmp_541*tmp_579 - tmp_542*tmp_578 - tmp_543*tmp_580) + tmp_570*(tmp_563*tmp_569 - tmp_563*tmp_88 - tmp_565*tmp_579 - tmp_566*tmp_578 - tmp_567*tmp_580) + tmp_90*(tmp_56*tmp_84 - tmp_56*tmp_88 - tmp_578*tmp_66 - tmp_579*tmp_58 - tmp_580*tmp_72);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_4_0;
      real_t tmp_1 = p_affine_5_0 + tmp_0;
      real_t tmp_2 = p_affine_6_0 + tmp_0;
      real_t tmp_3 = -p_affine_4_1;
      real_t tmp_4 = p_affine_7_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_7_0 + tmp_0;
      real_t tmp_7 = p_affine_6_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_4_2;
      real_t tmp_11 = p_affine_7_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_5_2 + tmp_10;
      real_t tmp_14 = p_affine_5_1 + tmp_3;
      real_t tmp_15 = p_affine_6_2 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_11*tmp_2;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = p_affine_8_2 + tmp_10;
      real_t tmp_21 = -p_affine_8_2;
      real_t tmp_22 = p_affine_9_2 + tmp_21;
      real_t tmp_23 = p_affine_10_2 + tmp_21;
      real_t tmp_24 = 0.031405749086161582*tmp_22 + 0.93718850182767688*tmp_23;
      real_t tmp_25 = tmp_19*(tmp_20 + tmp_24);
      real_t tmp_26 = tmp_16 - tmp_18;
      real_t tmp_27 = p_affine_8_1 + tmp_3;
      real_t tmp_28 = -p_affine_8_1;
      real_t tmp_29 = p_affine_9_1 + tmp_28;
      real_t tmp_30 = p_affine_10_1 + tmp_28;
      real_t tmp_31 = 0.031405749086161582*tmp_29 + 0.93718850182767688*tmp_30;
      real_t tmp_32 = tmp_19*(tmp_27 + tmp_31);
      real_t tmp_33 = tmp_12 - tmp_17;
      real_t tmp_34 = p_affine_8_0 + tmp_0;
      real_t tmp_35 = -p_affine_8_0;
      real_t tmp_36 = p_affine_9_0 + tmp_35;
      real_t tmp_37 = p_affine_10_0 + tmp_35;
      real_t tmp_38 = 0.031405749086161582*tmp_36 + 0.93718850182767688*tmp_37;
      real_t tmp_39 = tmp_19*(tmp_34 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_9 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = -tmp_1*tmp_4 + tmp_14*tmp_6;
      real_t tmp_42 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = -tmp_11*tmp_14 + tmp_13*tmp_4;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = tmp_1*tmp_7 - tmp_14*tmp_2;
      real_t tmp_46 = -tmp_1*tmp_15 + tmp_13*tmp_2;
      real_t tmp_47 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_2*tmp_44 + tmp_48*tmp_6;
      real_t tmp_50 = -p_affine_0_1;
      real_t tmp_51 = p_affine_1_1 + tmp_50;
      real_t tmp_52 = -p_affine_0_2;
      real_t tmp_53 = p_affine_2_2 + tmp_52;
      real_t tmp_54 = tmp_51*tmp_53;
      real_t tmp_55 = p_affine_2_1 + tmp_50;
      real_t tmp_56 = p_affine_1_2 + tmp_52;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = tmp_54 - tmp_57;
      real_t tmp_59 = -p_affine_0_0;
      real_t tmp_60 = p_affine_1_0 + tmp_59;
      real_t tmp_61 = p_affine_3_2 + tmp_52;
      real_t tmp_62 = tmp_55*tmp_61;
      real_t tmp_63 = p_affine_2_0 + tmp_59;
      real_t tmp_64 = p_affine_3_1 + tmp_50;
      real_t tmp_65 = tmp_56*tmp_64;
      real_t tmp_66 = p_affine_3_0 + tmp_59;
      real_t tmp_67 = tmp_53*tmp_64;
      real_t tmp_68 = tmp_51*tmp_61;
      real_t tmp_69 = 1.0 / (tmp_54*tmp_66 - tmp_57*tmp_66 + tmp_60*tmp_62 - tmp_60*tmp_67 + tmp_63*tmp_65 - tmp_63*tmp_68);
      real_t tmp_70 = 0.5*tmp_69;
      real_t tmp_71 = tmp_58*tmp_70;
      real_t tmp_72 = tmp_65 - tmp_68;
      real_t tmp_73 = tmp_70*tmp_72;
      real_t tmp_74 = tmp_62 - tmp_67;
      real_t tmp_75 = tmp_70*tmp_74;
      real_t tmp_76 = -tmp_71 - tmp_73 - tmp_75;
      real_t tmp_77 = 0.5*p_affine_13_2;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = tmp_14*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_7;
      real_t tmp_80 = -tmp_53*tmp_60 + tmp_56*tmp_63;
      real_t tmp_81 = tmp_70*tmp_80;
      real_t tmp_82 = -tmp_56*tmp_66 + tmp_60*tmp_61;
      real_t tmp_83 = tmp_70*tmp_82;
      real_t tmp_84 = tmp_53*tmp_66 - tmp_61*tmp_63;
      real_t tmp_85 = tmp_70*tmp_84;
      real_t tmp_86 = -tmp_81 - tmp_83 - tmp_85;
      real_t tmp_87 = tmp_77*tmp_86;
      real_t tmp_88 = tmp_11*tmp_48 + tmp_13*tmp_40 + tmp_15*tmp_44;
      real_t tmp_89 = -tmp_51*tmp_63 + tmp_55*tmp_60;
      real_t tmp_90 = 1.0*tmp_69;
      real_t tmp_91 = tmp_89*tmp_90;
      real_t tmp_92 = tmp_51*tmp_66 - tmp_60*tmp_64;
      real_t tmp_93 = tmp_90*tmp_92;
      real_t tmp_94 = -tmp_55*tmp_66 + tmp_63*tmp_64;
      real_t tmp_95 = tmp_90*tmp_94;
      real_t tmp_96 = 0.5*p_affine_13_0*tmp_76 + 0.5*p_affine_13_1*tmp_86 + 0.5*p_affine_13_2*(-tmp_91 - tmp_93 - tmp_95);
      real_t tmp_97 = p_affine_8_2 + tmp_52;
      real_t tmp_98 = tmp_69*(tmp_24 + tmp_97);
      real_t tmp_99 = tmp_89*tmp_98;
      real_t tmp_100 = tmp_92*tmp_98;
      real_t tmp_101 = p_affine_8_1 + tmp_50;
      real_t tmp_102 = tmp_69*(tmp_101 + tmp_31);
      real_t tmp_103 = tmp_102*tmp_80;
      real_t tmp_104 = tmp_102*tmp_82;
      real_t tmp_105 = tmp_94*tmp_98;
      real_t tmp_106 = tmp_102*tmp_84;
      real_t tmp_107 = p_affine_8_0 + tmp_59;
      real_t tmp_108 = tmp_69*(tmp_107 + tmp_38);
      real_t tmp_109 = tmp_108*tmp_58;
      real_t tmp_110 = tmp_108*tmp_72;
      real_t tmp_111 = tmp_108*tmp_74;
      real_t tmp_112 = -tmp_100 - tmp_103 - tmp_104 - tmp_105 - tmp_106 - tmp_109 - tmp_110 - tmp_111 - tmp_99 + 1;
      real_t tmp_113 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_114 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_115 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_116 = (std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)*std::abs(tmp_113*tmp_23 - tmp_115*tmp_30)) + (std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)*std::abs(tmp_113*tmp_37 - tmp_114*tmp_30)) + (std::abs(tmp_114*tmp_23 - tmp_115*tmp_37)*std::abs(tmp_114*tmp_23 - tmp_115*tmp_37));
      real_t tmp_117 = 3.0*std::pow(tmp_116, -0.25);
      real_t tmp_118 = tmp_117*tmp_88;
      real_t tmp_119 = 1.0*tmp_19;
      real_t tmp_120 = 0.5*tmp_19;
      real_t tmp_121 = tmp_120*tmp_9;
      real_t tmp_122 = tmp_120*tmp_41;
      real_t tmp_123 = tmp_120*tmp_45;
      real_t tmp_124 = tmp_120*tmp_13;
      real_t tmp_125 = tmp_120*tmp_15;
      real_t tmp_126 = tmp_11*tmp_120;
      real_t tmp_127 = 0.5*p_affine_13_0*(tmp_1*tmp_121 + tmp_122*tmp_2 + tmp_123*tmp_6 + tmp_124*tmp_33 + tmp_125*tmp_43 + tmp_126*tmp_47) + 0.5*p_affine_13_1*(tmp_121*tmp_14 + tmp_122*tmp_7 + tmp_123*tmp_4 + tmp_124*tmp_26 + tmp_125*tmp_42 + tmp_126*tmp_46) + 0.5*p_affine_13_2*(tmp_11*tmp_119*tmp_45 + tmp_119*tmp_13*tmp_9 + tmp_119*tmp_15*tmp_41);
      real_t tmp_128 = 2.0*std::pow(tmp_116, 1.0/2.0);
      real_t tmp_129 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_128;
      real_t tmp_130 = 0.19601935860219369*tmp_22 + 0.60796128279561268*tmp_23;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_20);
      real_t tmp_132 = 0.19601935860219369*tmp_29 + 0.60796128279561268*tmp_30;
      real_t tmp_133 = tmp_19*(tmp_132 + tmp_27);
      real_t tmp_134 = 0.19601935860219369*tmp_36 + 0.60796128279561268*tmp_37;
      real_t tmp_135 = tmp_19*(tmp_134 + tmp_34);
      real_t tmp_136 = tmp_131*tmp_9 + tmp_133*tmp_26 + tmp_135*tmp_33 - 1.0/4.0;
      real_t tmp_137 = tmp_131*tmp_41 + tmp_133*tmp_42 + tmp_135*tmp_43 - 1.0/4.0;
      real_t tmp_138 = tmp_131*tmp_45 + tmp_133*tmp_46 + tmp_135*tmp_47 - 1.0/4.0;
      real_t tmp_139 = tmp_1*tmp_136 + tmp_137*tmp_2 + tmp_138*tmp_6;
      real_t tmp_140 = tmp_136*tmp_14 + tmp_137*tmp_7 + tmp_138*tmp_4;
      real_t tmp_141 = tmp_11*tmp_138 + tmp_13*tmp_136 + tmp_137*tmp_15;
      real_t tmp_142 = tmp_69*(tmp_130 + tmp_97);
      real_t tmp_143 = tmp_142*tmp_89;
      real_t tmp_144 = tmp_142*tmp_92;
      real_t tmp_145 = tmp_69*(tmp_101 + tmp_132);
      real_t tmp_146 = tmp_145*tmp_80;
      real_t tmp_147 = tmp_145*tmp_82;
      real_t tmp_148 = tmp_142*tmp_94;
      real_t tmp_149 = tmp_145*tmp_84;
      real_t tmp_150 = tmp_69*(tmp_107 + tmp_134);
      real_t tmp_151 = tmp_150*tmp_58;
      real_t tmp_152 = tmp_150*tmp_72;
      real_t tmp_153 = tmp_150*tmp_74;
      real_t tmp_154 = -tmp_143 - tmp_144 - tmp_146 - tmp_147 - tmp_148 - tmp_149 - tmp_151 - tmp_152 - tmp_153 + 1;
      real_t tmp_155 = tmp_117*tmp_141;
      real_t tmp_156 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_128;
      real_t tmp_157 = 0.37605877282253791*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_158 = tmp_19*(tmp_157 + tmp_20);
      real_t tmp_159 = 0.37605877282253791*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_160 = tmp_19*(tmp_159 + tmp_27);
      real_t tmp_161 = 0.37605877282253791*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_162 = tmp_19*(tmp_161 + tmp_34);
      real_t tmp_163 = tmp_158*tmp_9 + tmp_160*tmp_26 + tmp_162*tmp_33 - 1.0/4.0;
      real_t tmp_164 = tmp_158*tmp_41 + tmp_160*tmp_42 + tmp_162*tmp_43 - 1.0/4.0;
      real_t tmp_165 = tmp_158*tmp_45 + tmp_160*tmp_46 + tmp_162*tmp_47 - 1.0/4.0;
      real_t tmp_166 = tmp_1*tmp_163 + tmp_164*tmp_2 + tmp_165*tmp_6;
      real_t tmp_167 = tmp_14*tmp_163 + tmp_164*tmp_7 + tmp_165*tmp_4;
      real_t tmp_168 = tmp_11*tmp_165 + tmp_13*tmp_163 + tmp_15*tmp_164;
      real_t tmp_169 = tmp_69*(tmp_157 + tmp_97);
      real_t tmp_170 = tmp_169*tmp_89;
      real_t tmp_171 = tmp_169*tmp_92;
      real_t tmp_172 = tmp_69*(tmp_101 + tmp_159);
      real_t tmp_173 = tmp_172*tmp_80;
      real_t tmp_174 = tmp_172*tmp_82;
      real_t tmp_175 = tmp_169*tmp_94;
      real_t tmp_176 = tmp_172*tmp_84;
      real_t tmp_177 = tmp_69*(tmp_107 + tmp_161);
      real_t tmp_178 = tmp_177*tmp_58;
      real_t tmp_179 = tmp_177*tmp_72;
      real_t tmp_180 = tmp_177*tmp_74;
      real_t tmp_181 = -tmp_170 - tmp_171 - tmp_173 - tmp_174 - tmp_175 - tmp_176 - tmp_178 - tmp_179 - tmp_180 + 1;
      real_t tmp_182 = tmp_117*tmp_168;
      real_t tmp_183 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_128;
      real_t tmp_184 = 0.041227165399737475*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_185 = tmp_19*(tmp_184 + tmp_20);
      real_t tmp_186 = 0.041227165399737475*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_187 = tmp_19*(tmp_186 + tmp_27);
      real_t tmp_188 = 0.041227165399737475*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_189 = tmp_19*(tmp_188 + tmp_34);
      real_t tmp_190 = tmp_185*tmp_9 + tmp_187*tmp_26 + tmp_189*tmp_33 - 1.0/4.0;
      real_t tmp_191 = tmp_185*tmp_41 + tmp_187*tmp_42 + tmp_189*tmp_43 - 1.0/4.0;
      real_t tmp_192 = tmp_185*tmp_45 + tmp_187*tmp_46 + tmp_189*tmp_47 - 1.0/4.0;
      real_t tmp_193 = tmp_1*tmp_190 + tmp_191*tmp_2 + tmp_192*tmp_6;
      real_t tmp_194 = tmp_14*tmp_190 + tmp_191*tmp_7 + tmp_192*tmp_4;
      real_t tmp_195 = tmp_11*tmp_192 + tmp_13*tmp_190 + tmp_15*tmp_191;
      real_t tmp_196 = tmp_69*(tmp_184 + tmp_97);
      real_t tmp_197 = tmp_196*tmp_89;
      real_t tmp_198 = tmp_196*tmp_92;
      real_t tmp_199 = tmp_69*(tmp_101 + tmp_186);
      real_t tmp_200 = tmp_199*tmp_80;
      real_t tmp_201 = tmp_199*tmp_82;
      real_t tmp_202 = tmp_196*tmp_94;
      real_t tmp_203 = tmp_199*tmp_84;
      real_t tmp_204 = tmp_69*(tmp_107 + tmp_188);
      real_t tmp_205 = tmp_204*tmp_58;
      real_t tmp_206 = tmp_204*tmp_72;
      real_t tmp_207 = tmp_204*tmp_74;
      real_t tmp_208 = -tmp_197 - tmp_198 - tmp_200 - tmp_201 - tmp_202 - tmp_203 - tmp_205 - tmp_206 - tmp_207 + 1;
      real_t tmp_209 = tmp_117*tmp_195;
      real_t tmp_210 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_128;
      real_t tmp_211 = 0.40446199974765351*tmp_22 + 0.19107600050469298*tmp_23;
      real_t tmp_212 = tmp_19*(tmp_20 + tmp_211);
      real_t tmp_213 = 0.40446199974765351*tmp_29 + 0.19107600050469298*tmp_30;
      real_t tmp_214 = tmp_19*(tmp_213 + tmp_27);
      real_t tmp_215 = 0.40446199974765351*tmp_36 + 0.19107600050469298*tmp_37;
      real_t tmp_216 = tmp_19*(tmp_215 + tmp_34);
      real_t tmp_217 = tmp_212*tmp_9 + tmp_214*tmp_26 + tmp_216*tmp_33 - 1.0/4.0;
      real_t tmp_218 = tmp_212*tmp_41 + tmp_214*tmp_42 + tmp_216*tmp_43 - 1.0/4.0;
      real_t tmp_219 = tmp_212*tmp_45 + tmp_214*tmp_46 + tmp_216*tmp_47 - 1.0/4.0;
      real_t tmp_220 = tmp_1*tmp_217 + tmp_2*tmp_218 + tmp_219*tmp_6;
      real_t tmp_221 = tmp_14*tmp_217 + tmp_218*tmp_7 + tmp_219*tmp_4;
      real_t tmp_222 = tmp_11*tmp_219 + tmp_13*tmp_217 + tmp_15*tmp_218;
      real_t tmp_223 = tmp_69*(tmp_211 + tmp_97);
      real_t tmp_224 = tmp_223*tmp_89;
      real_t tmp_225 = tmp_223*tmp_92;
      real_t tmp_226 = tmp_69*(tmp_101 + tmp_213);
      real_t tmp_227 = tmp_226*tmp_80;
      real_t tmp_228 = tmp_226*tmp_82;
      real_t tmp_229 = tmp_223*tmp_94;
      real_t tmp_230 = tmp_226*tmp_84;
      real_t tmp_231 = tmp_69*(tmp_107 + tmp_215);
      real_t tmp_232 = tmp_231*tmp_58;
      real_t tmp_233 = tmp_231*tmp_72;
      real_t tmp_234 = tmp_231*tmp_74;
      real_t tmp_235 = -tmp_224 - tmp_225 - tmp_227 - tmp_228 - tmp_229 - tmp_230 - tmp_232 - tmp_233 - tmp_234 + 1;
      real_t tmp_236 = tmp_117*tmp_222;
      real_t tmp_237 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_128;
      real_t tmp_238 = 0.039308471900058539*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_239 = tmp_19*(tmp_20 + tmp_238);
      real_t tmp_240 = 0.039308471900058539*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_241 = tmp_19*(tmp_240 + tmp_27);
      real_t tmp_242 = 0.039308471900058539*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_243 = tmp_19*(tmp_242 + tmp_34);
      real_t tmp_244 = tmp_239*tmp_9 + tmp_241*tmp_26 + tmp_243*tmp_33 - 1.0/4.0;
      real_t tmp_245 = tmp_239*tmp_41 + tmp_241*tmp_42 + tmp_243*tmp_43 - 1.0/4.0;
      real_t tmp_246 = tmp_239*tmp_45 + tmp_241*tmp_46 + tmp_243*tmp_47 - 1.0/4.0;
      real_t tmp_247 = tmp_1*tmp_244 + tmp_2*tmp_245 + tmp_246*tmp_6;
      real_t tmp_248 = tmp_14*tmp_244 + tmp_245*tmp_7 + tmp_246*tmp_4;
      real_t tmp_249 = tmp_11*tmp_246 + tmp_13*tmp_244 + tmp_15*tmp_245;
      real_t tmp_250 = tmp_69*(tmp_238 + tmp_97);
      real_t tmp_251 = tmp_250*tmp_89;
      real_t tmp_252 = tmp_250*tmp_92;
      real_t tmp_253 = tmp_69*(tmp_101 + tmp_240);
      real_t tmp_254 = tmp_253*tmp_80;
      real_t tmp_255 = tmp_253*tmp_82;
      real_t tmp_256 = tmp_250*tmp_94;
      real_t tmp_257 = tmp_253*tmp_84;
      real_t tmp_258 = tmp_69*(tmp_107 + tmp_242);
      real_t tmp_259 = tmp_258*tmp_58;
      real_t tmp_260 = tmp_258*tmp_72;
      real_t tmp_261 = tmp_258*tmp_74;
      real_t tmp_262 = -tmp_251 - tmp_252 - tmp_254 - tmp_255 - tmp_256 - tmp_257 - tmp_259 - tmp_260 - tmp_261 + 1;
      real_t tmp_263 = tmp_117*tmp_249;
      real_t tmp_264 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_128;
      real_t tmp_265 = 0.93718850182767688*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_266 = tmp_19*(tmp_20 + tmp_265);
      real_t tmp_267 = 0.93718850182767688*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_268 = tmp_19*(tmp_267 + tmp_27);
      real_t tmp_269 = 0.93718850182767688*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_270 = tmp_19*(tmp_269 + tmp_34);
      real_t tmp_271 = tmp_26*tmp_268 + tmp_266*tmp_9 + tmp_270*tmp_33 - 1.0/4.0;
      real_t tmp_272 = tmp_266*tmp_41 + tmp_268*tmp_42 + tmp_270*tmp_43 - 1.0/4.0;
      real_t tmp_273 = tmp_266*tmp_45 + tmp_268*tmp_46 + tmp_270*tmp_47 - 1.0/4.0;
      real_t tmp_274 = tmp_1*tmp_271 + tmp_2*tmp_272 + tmp_273*tmp_6;
      real_t tmp_275 = tmp_14*tmp_271 + tmp_272*tmp_7 + tmp_273*tmp_4;
      real_t tmp_276 = tmp_11*tmp_273 + tmp_13*tmp_271 + tmp_15*tmp_272;
      real_t tmp_277 = tmp_69*(tmp_265 + tmp_97);
      real_t tmp_278 = tmp_277*tmp_89;
      real_t tmp_279 = tmp_277*tmp_92;
      real_t tmp_280 = tmp_69*(tmp_101 + tmp_267);
      real_t tmp_281 = tmp_280*tmp_80;
      real_t tmp_282 = tmp_280*tmp_82;
      real_t tmp_283 = tmp_277*tmp_94;
      real_t tmp_284 = tmp_280*tmp_84;
      real_t tmp_285 = tmp_69*(tmp_107 + tmp_269);
      real_t tmp_286 = tmp_285*tmp_58;
      real_t tmp_287 = tmp_285*tmp_72;
      real_t tmp_288 = tmp_285*tmp_74;
      real_t tmp_289 = -tmp_278 - tmp_279 - tmp_281 - tmp_282 - tmp_283 - tmp_284 - tmp_286 - tmp_287 - tmp_288 + 1;
      real_t tmp_290 = tmp_117*tmp_276;
      real_t tmp_291 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_128;
      real_t tmp_292 = 0.60796128279561268*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_293 = tmp_19*(tmp_20 + tmp_292);
      real_t tmp_294 = 0.60796128279561268*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_295 = tmp_19*(tmp_27 + tmp_294);
      real_t tmp_296 = 0.60796128279561268*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_297 = tmp_19*(tmp_296 + tmp_34);
      real_t tmp_298 = tmp_26*tmp_295 + tmp_293*tmp_9 + tmp_297*tmp_33 - 1.0/4.0;
      real_t tmp_299 = tmp_293*tmp_41 + tmp_295*tmp_42 + tmp_297*tmp_43 - 1.0/4.0;
      real_t tmp_300 = tmp_293*tmp_45 + tmp_295*tmp_46 + tmp_297*tmp_47 - 1.0/4.0;
      real_t tmp_301 = tmp_1*tmp_298 + tmp_2*tmp_299 + tmp_300*tmp_6;
      real_t tmp_302 = tmp_14*tmp_298 + tmp_299*tmp_7 + tmp_300*tmp_4;
      real_t tmp_303 = tmp_11*tmp_300 + tmp_13*tmp_298 + tmp_15*tmp_299;
      real_t tmp_304 = tmp_69*(tmp_292 + tmp_97);
      real_t tmp_305 = tmp_304*tmp_89;
      real_t tmp_306 = tmp_304*tmp_92;
      real_t tmp_307 = tmp_69*(tmp_101 + tmp_294);
      real_t tmp_308 = tmp_307*tmp_80;
      real_t tmp_309 = tmp_307*tmp_82;
      real_t tmp_310 = tmp_304*tmp_94;
      real_t tmp_311 = tmp_307*tmp_84;
      real_t tmp_312 = tmp_69*(tmp_107 + tmp_296);
      real_t tmp_313 = tmp_312*tmp_58;
      real_t tmp_314 = tmp_312*tmp_72;
      real_t tmp_315 = tmp_312*tmp_74;
      real_t tmp_316 = -tmp_305 - tmp_306 - tmp_308 - tmp_309 - tmp_310 - tmp_311 - tmp_313 - tmp_314 - tmp_315 + 1;
      real_t tmp_317 = tmp_117*tmp_303;
      real_t tmp_318 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_128;
      real_t tmp_319 = 0.19107600050469298*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_320 = tmp_19*(tmp_20 + tmp_319);
      real_t tmp_321 = 0.19107600050469298*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_322 = tmp_19*(tmp_27 + tmp_321);
      real_t tmp_323 = 0.19107600050469298*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_324 = tmp_19*(tmp_323 + tmp_34);
      real_t tmp_325 = tmp_26*tmp_322 + tmp_320*tmp_9 + tmp_324*tmp_33 - 1.0/4.0;
      real_t tmp_326 = tmp_320*tmp_41 + tmp_322*tmp_42 + tmp_324*tmp_43 - 1.0/4.0;
      real_t tmp_327 = tmp_320*tmp_45 + tmp_322*tmp_46 + tmp_324*tmp_47 - 1.0/4.0;
      real_t tmp_328 = tmp_1*tmp_325 + tmp_2*tmp_326 + tmp_327*tmp_6;
      real_t tmp_329 = tmp_14*tmp_325 + tmp_326*tmp_7 + tmp_327*tmp_4;
      real_t tmp_330 = tmp_11*tmp_327 + tmp_13*tmp_325 + tmp_15*tmp_326;
      real_t tmp_331 = tmp_69*(tmp_319 + tmp_97);
      real_t tmp_332 = tmp_331*tmp_89;
      real_t tmp_333 = tmp_331*tmp_92;
      real_t tmp_334 = tmp_69*(tmp_101 + tmp_321);
      real_t tmp_335 = tmp_334*tmp_80;
      real_t tmp_336 = tmp_334*tmp_82;
      real_t tmp_337 = tmp_331*tmp_94;
      real_t tmp_338 = tmp_334*tmp_84;
      real_t tmp_339 = tmp_69*(tmp_107 + tmp_323);
      real_t tmp_340 = tmp_339*tmp_58;
      real_t tmp_341 = tmp_339*tmp_72;
      real_t tmp_342 = tmp_339*tmp_74;
      real_t tmp_343 = -tmp_332 - tmp_333 - tmp_335 - tmp_336 - tmp_337 - tmp_338 - tmp_340 - tmp_341 - tmp_342 + 1;
      real_t tmp_344 = tmp_117*tmp_330;
      real_t tmp_345 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_128;
      real_t tmp_346 = 0.031405749086161582*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_347 = tmp_19*(tmp_20 + tmp_346);
      real_t tmp_348 = 0.031405749086161582*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_349 = tmp_19*(tmp_27 + tmp_348);
      real_t tmp_350 = 0.031405749086161582*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_351 = tmp_19*(tmp_34 + tmp_350);
      real_t tmp_352 = tmp_26*tmp_349 + tmp_33*tmp_351 + tmp_347*tmp_9 - 1.0/4.0;
      real_t tmp_353 = tmp_347*tmp_41 + tmp_349*tmp_42 + tmp_351*tmp_43 - 1.0/4.0;
      real_t tmp_354 = tmp_347*tmp_45 + tmp_349*tmp_46 + tmp_351*tmp_47 - 1.0/4.0;
      real_t tmp_355 = tmp_1*tmp_352 + tmp_2*tmp_353 + tmp_354*tmp_6;
      real_t tmp_356 = tmp_14*tmp_352 + tmp_353*tmp_7 + tmp_354*tmp_4;
      real_t tmp_357 = tmp_11*tmp_354 + tmp_13*tmp_352 + tmp_15*tmp_353;
      real_t tmp_358 = tmp_69*(tmp_346 + tmp_97);
      real_t tmp_359 = tmp_358*tmp_89;
      real_t tmp_360 = tmp_358*tmp_92;
      real_t tmp_361 = tmp_69*(tmp_101 + tmp_348);
      real_t tmp_362 = tmp_361*tmp_80;
      real_t tmp_363 = tmp_361*tmp_82;
      real_t tmp_364 = tmp_358*tmp_94;
      real_t tmp_365 = tmp_361*tmp_84;
      real_t tmp_366 = tmp_69*(tmp_107 + tmp_350);
      real_t tmp_367 = tmp_366*tmp_58;
      real_t tmp_368 = tmp_366*tmp_72;
      real_t tmp_369 = tmp_366*tmp_74;
      real_t tmp_370 = -tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364 - tmp_365 - tmp_367 - tmp_368 - tmp_369 + 1;
      real_t tmp_371 = tmp_117*tmp_357;
      real_t tmp_372 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_128;
      real_t tmp_373 = 0.19601935860219369*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_374 = tmp_19*(tmp_20 + tmp_373);
      real_t tmp_375 = 0.19601935860219369*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_376 = tmp_19*(tmp_27 + tmp_375);
      real_t tmp_377 = 0.19601935860219369*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_378 = tmp_19*(tmp_34 + tmp_377);
      real_t tmp_379 = tmp_26*tmp_376 + tmp_33*tmp_378 + tmp_374*tmp_9 - 1.0/4.0;
      real_t tmp_380 = tmp_374*tmp_41 + tmp_376*tmp_42 + tmp_378*tmp_43 - 1.0/4.0;
      real_t tmp_381 = tmp_374*tmp_45 + tmp_376*tmp_46 + tmp_378*tmp_47 - 1.0/4.0;
      real_t tmp_382 = tmp_1*tmp_379 + tmp_2*tmp_380 + tmp_381*tmp_6;
      real_t tmp_383 = tmp_14*tmp_379 + tmp_380*tmp_7 + tmp_381*tmp_4;
      real_t tmp_384 = tmp_11*tmp_381 + tmp_13*tmp_379 + tmp_15*tmp_380;
      real_t tmp_385 = tmp_69*(tmp_373 + tmp_97);
      real_t tmp_386 = tmp_385*tmp_89;
      real_t tmp_387 = tmp_385*tmp_92;
      real_t tmp_388 = tmp_69*(tmp_101 + tmp_375);
      real_t tmp_389 = tmp_388*tmp_80;
      real_t tmp_390 = tmp_388*tmp_82;
      real_t tmp_391 = tmp_385*tmp_94;
      real_t tmp_392 = tmp_388*tmp_84;
      real_t tmp_393 = tmp_69*(tmp_107 + tmp_377);
      real_t tmp_394 = tmp_393*tmp_58;
      real_t tmp_395 = tmp_393*tmp_72;
      real_t tmp_396 = tmp_393*tmp_74;
      real_t tmp_397 = -tmp_386 - tmp_387 - tmp_389 - tmp_390 - tmp_391 - tmp_392 - tmp_394 - tmp_395 - tmp_396 + 1;
      real_t tmp_398 = tmp_117*tmp_384;
      real_t tmp_399 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_128;
      real_t tmp_400 = 0.40446199974765351*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_401 = tmp_19*(tmp_20 + tmp_400);
      real_t tmp_402 = 0.40446199974765351*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_403 = tmp_19*(tmp_27 + tmp_402);
      real_t tmp_404 = 0.40446199974765351*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_405 = tmp_19*(tmp_34 + tmp_404);
      real_t tmp_406 = tmp_26*tmp_403 + tmp_33*tmp_405 + tmp_401*tmp_9 - 1.0/4.0;
      real_t tmp_407 = tmp_401*tmp_41 + tmp_403*tmp_42 + tmp_405*tmp_43 - 1.0/4.0;
      real_t tmp_408 = tmp_401*tmp_45 + tmp_403*tmp_46 + tmp_405*tmp_47 - 1.0/4.0;
      real_t tmp_409 = tmp_1*tmp_406 + tmp_2*tmp_407 + tmp_408*tmp_6;
      real_t tmp_410 = tmp_14*tmp_406 + tmp_4*tmp_408 + tmp_407*tmp_7;
      real_t tmp_411 = tmp_11*tmp_408 + tmp_13*tmp_406 + tmp_15*tmp_407;
      real_t tmp_412 = tmp_69*(tmp_400 + tmp_97);
      real_t tmp_413 = tmp_412*tmp_89;
      real_t tmp_414 = tmp_412*tmp_92;
      real_t tmp_415 = tmp_69*(tmp_101 + tmp_402);
      real_t tmp_416 = tmp_415*tmp_80;
      real_t tmp_417 = tmp_415*tmp_82;
      real_t tmp_418 = tmp_412*tmp_94;
      real_t tmp_419 = tmp_415*tmp_84;
      real_t tmp_420 = tmp_69*(tmp_107 + tmp_404);
      real_t tmp_421 = tmp_420*tmp_58;
      real_t tmp_422 = tmp_420*tmp_72;
      real_t tmp_423 = tmp_420*tmp_74;
      real_t tmp_424 = -tmp_413 - tmp_414 - tmp_416 - tmp_417 - tmp_418 - tmp_419 - tmp_421 - tmp_422 - tmp_423 + 1;
      real_t tmp_425 = tmp_117*tmp_411;
      real_t tmp_426 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_128;
      real_t tmp_427 = 0.37605877282253791*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_428 = tmp_19*(tmp_20 + tmp_427);
      real_t tmp_429 = 0.37605877282253791*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_430 = tmp_19*(tmp_27 + tmp_429);
      real_t tmp_431 = 0.37605877282253791*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_432 = tmp_19*(tmp_34 + tmp_431);
      real_t tmp_433 = tmp_26*tmp_430 + tmp_33*tmp_432 + tmp_428*tmp_9 - 1.0/4.0;
      real_t tmp_434 = tmp_41*tmp_428 + tmp_42*tmp_430 + tmp_43*tmp_432 - 1.0/4.0;
      real_t tmp_435 = tmp_428*tmp_45 + tmp_430*tmp_46 + tmp_432*tmp_47 - 1.0/4.0;
      real_t tmp_436 = tmp_1*tmp_433 + tmp_2*tmp_434 + tmp_435*tmp_6;
      real_t tmp_437 = tmp_14*tmp_433 + tmp_4*tmp_435 + tmp_434*tmp_7;
      real_t tmp_438 = tmp_11*tmp_435 + tmp_13*tmp_433 + tmp_15*tmp_434;
      real_t tmp_439 = tmp_69*(tmp_427 + tmp_97);
      real_t tmp_440 = tmp_439*tmp_89;
      real_t tmp_441 = tmp_439*tmp_92;
      real_t tmp_442 = tmp_69*(tmp_101 + tmp_429);
      real_t tmp_443 = tmp_442*tmp_80;
      real_t tmp_444 = tmp_442*tmp_82;
      real_t tmp_445 = tmp_439*tmp_94;
      real_t tmp_446 = tmp_442*tmp_84;
      real_t tmp_447 = tmp_69*(tmp_107 + tmp_431);
      real_t tmp_448 = tmp_447*tmp_58;
      real_t tmp_449 = tmp_447*tmp_72;
      real_t tmp_450 = tmp_447*tmp_74;
      real_t tmp_451 = -tmp_440 - tmp_441 - tmp_443 - tmp_444 - tmp_445 - tmp_446 - tmp_448 - tmp_449 - tmp_450 + 1;
      real_t tmp_452 = tmp_117*tmp_438;
      real_t tmp_453 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_128;
      real_t tmp_454 = 0.1711304259088916*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_455 = tmp_19*(tmp_20 + tmp_454);
      real_t tmp_456 = 0.1711304259088916*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_457 = tmp_19*(tmp_27 + tmp_456);
      real_t tmp_458 = 0.1711304259088916*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_459 = tmp_19*(tmp_34 + tmp_458);
      real_t tmp_460 = tmp_26*tmp_457 + tmp_33*tmp_459 + tmp_455*tmp_9 - 1.0/4.0;
      real_t tmp_461 = tmp_41*tmp_455 + tmp_42*tmp_457 + tmp_43*tmp_459 - 1.0/4.0;
      real_t tmp_462 = tmp_45*tmp_455 + tmp_457*tmp_46 + tmp_459*tmp_47 - 1.0/4.0;
      real_t tmp_463 = tmp_1*tmp_460 + tmp_2*tmp_461 + tmp_462*tmp_6;
      real_t tmp_464 = tmp_14*tmp_460 + tmp_4*tmp_462 + tmp_461*tmp_7;
      real_t tmp_465 = tmp_11*tmp_462 + tmp_13*tmp_460 + tmp_15*tmp_461;
      real_t tmp_466 = tmp_69*(tmp_454 + tmp_97);
      real_t tmp_467 = tmp_466*tmp_89;
      real_t tmp_468 = tmp_466*tmp_92;
      real_t tmp_469 = tmp_69*(tmp_101 + tmp_456);
      real_t tmp_470 = tmp_469*tmp_80;
      real_t tmp_471 = tmp_469*tmp_82;
      real_t tmp_472 = tmp_466*tmp_94;
      real_t tmp_473 = tmp_469*tmp_84;
      real_t tmp_474 = tmp_69*(tmp_107 + tmp_458);
      real_t tmp_475 = tmp_474*tmp_58;
      real_t tmp_476 = tmp_474*tmp_72;
      real_t tmp_477 = tmp_474*tmp_74;
      real_t tmp_478 = -tmp_467 - tmp_468 - tmp_470 - tmp_471 - tmp_472 - tmp_473 - tmp_475 - tmp_476 - tmp_477 + 1;
      real_t tmp_479 = tmp_117*tmp_465;
      real_t tmp_480 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_128;
      real_t tmp_481 = 0.78764240869137092*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_482 = tmp_19*(tmp_20 + tmp_481);
      real_t tmp_483 = 0.78764240869137092*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_484 = tmp_19*(tmp_27 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_486 = tmp_19*(tmp_34 + tmp_485);
      real_t tmp_487 = tmp_26*tmp_484 + tmp_33*tmp_486 + tmp_482*tmp_9 - 1.0/4.0;
      real_t tmp_488 = tmp_41*tmp_482 + tmp_42*tmp_484 + tmp_43*tmp_486 - 1.0/4.0;
      real_t tmp_489 = tmp_45*tmp_482 + tmp_46*tmp_484 + tmp_47*tmp_486 - 1.0/4.0;
      real_t tmp_490 = tmp_1*tmp_487 + tmp_2*tmp_488 + tmp_489*tmp_6;
      real_t tmp_491 = tmp_14*tmp_487 + tmp_4*tmp_489 + tmp_488*tmp_7;
      real_t tmp_492 = tmp_11*tmp_489 + tmp_13*tmp_487 + tmp_15*tmp_488;
      real_t tmp_493 = tmp_69*(tmp_481 + tmp_97);
      real_t tmp_494 = tmp_493*tmp_89;
      real_t tmp_495 = tmp_493*tmp_92;
      real_t tmp_496 = tmp_69*(tmp_101 + tmp_483);
      real_t tmp_497 = tmp_496*tmp_80;
      real_t tmp_498 = tmp_496*tmp_82;
      real_t tmp_499 = tmp_493*tmp_94;
      real_t tmp_500 = tmp_496*tmp_84;
      real_t tmp_501 = tmp_69*(tmp_107 + tmp_485);
      real_t tmp_502 = tmp_501*tmp_58;
      real_t tmp_503 = tmp_501*tmp_72;
      real_t tmp_504 = tmp_501*tmp_74;
      real_t tmp_505 = -tmp_494 - tmp_495 - tmp_497 - tmp_498 - tmp_499 - tmp_500 - tmp_502 - tmp_503 - tmp_504 + 1;
      real_t tmp_506 = tmp_117*tmp_492;
      real_t tmp_507 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_128;
      real_t tmp_508 = 0.58463275527740355*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_509 = tmp_19*(tmp_20 + tmp_508);
      real_t tmp_510 = 0.58463275527740355*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_511 = tmp_19*(tmp_27 + tmp_510);
      real_t tmp_512 = 0.58463275527740355*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_513 = tmp_19*(tmp_34 + tmp_512);
      real_t tmp_514 = tmp_26*tmp_511 + tmp_33*tmp_513 + tmp_509*tmp_9 - 1.0/4.0;
      real_t tmp_515 = tmp_41*tmp_509 + tmp_42*tmp_511 + tmp_43*tmp_513 - 1.0/4.0;
      real_t tmp_516 = tmp_45*tmp_509 + tmp_46*tmp_511 + tmp_47*tmp_513 - 1.0/4.0;
      real_t tmp_517 = tmp_1*tmp_514 + tmp_2*tmp_515 + tmp_516*tmp_6;
      real_t tmp_518 = tmp_14*tmp_514 + tmp_4*tmp_516 + tmp_515*tmp_7;
      real_t tmp_519 = tmp_11*tmp_516 + tmp_13*tmp_514 + tmp_15*tmp_515;
      real_t tmp_520 = tmp_69*(tmp_508 + tmp_97);
      real_t tmp_521 = tmp_520*tmp_89;
      real_t tmp_522 = tmp_520*tmp_92;
      real_t tmp_523 = tmp_69*(tmp_101 + tmp_510);
      real_t tmp_524 = tmp_523*tmp_80;
      real_t tmp_525 = tmp_523*tmp_82;
      real_t tmp_526 = tmp_520*tmp_94;
      real_t tmp_527 = tmp_523*tmp_84;
      real_t tmp_528 = tmp_69*(tmp_107 + tmp_512);
      real_t tmp_529 = tmp_528*tmp_58;
      real_t tmp_530 = tmp_528*tmp_72;
      real_t tmp_531 = tmp_528*tmp_74;
      real_t tmp_532 = -tmp_521 - tmp_522 - tmp_524 - tmp_525 - tmp_526 - tmp_527 - tmp_529 - tmp_530 - tmp_531 + 1;
      real_t tmp_533 = tmp_117*tmp_519;
      real_t tmp_534 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_128;
      real_t tmp_535 = 0.041227165399737475*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_536 = tmp_19*(tmp_20 + tmp_535);
      real_t tmp_537 = 0.041227165399737475*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_538 = tmp_19*(tmp_27 + tmp_537);
      real_t tmp_539 = 0.041227165399737475*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_540 = tmp_19*(tmp_34 + tmp_539);
      real_t tmp_541 = tmp_26*tmp_538 + tmp_33*tmp_540 + tmp_536*tmp_9 - 1.0/4.0;
      real_t tmp_542 = tmp_41*tmp_536 + tmp_42*tmp_538 + tmp_43*tmp_540 - 1.0/4.0;
      real_t tmp_543 = tmp_45*tmp_536 + tmp_46*tmp_538 + tmp_47*tmp_540 - 1.0/4.0;
      real_t tmp_544 = tmp_1*tmp_541 + tmp_2*tmp_542 + tmp_543*tmp_6;
      real_t tmp_545 = tmp_14*tmp_541 + tmp_4*tmp_543 + tmp_542*tmp_7;
      real_t tmp_546 = tmp_11*tmp_543 + tmp_13*tmp_541 + tmp_15*tmp_542;
      real_t tmp_547 = tmp_69*(tmp_535 + tmp_97);
      real_t tmp_548 = tmp_547*tmp_89;
      real_t tmp_549 = tmp_547*tmp_92;
      real_t tmp_550 = tmp_69*(tmp_101 + tmp_537);
      real_t tmp_551 = tmp_550*tmp_80;
      real_t tmp_552 = tmp_550*tmp_82;
      real_t tmp_553 = tmp_547*tmp_94;
      real_t tmp_554 = tmp_550*tmp_84;
      real_t tmp_555 = tmp_69*(tmp_107 + tmp_539);
      real_t tmp_556 = tmp_555*tmp_58;
      real_t tmp_557 = tmp_555*tmp_72;
      real_t tmp_558 = tmp_555*tmp_74;
      real_t tmp_559 = -tmp_548 - tmp_549 - tmp_551 - tmp_552 - tmp_553 - tmp_554 - tmp_556 - tmp_557 - tmp_558 + 1;
      real_t tmp_560 = tmp_117*tmp_546;
      real_t tmp_561 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_128;
      real_t tmp_562 = 0.039308471900058539*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_563 = tmp_19*(tmp_20 + tmp_562);
      real_t tmp_564 = 0.039308471900058539*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_565 = tmp_19*(tmp_27 + tmp_564);
      real_t tmp_566 = 0.039308471900058539*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_567 = tmp_19*(tmp_34 + tmp_566);
      real_t tmp_568 = tmp_26*tmp_565 + tmp_33*tmp_567 + tmp_563*tmp_9 - 1.0/4.0;
      real_t tmp_569 = tmp_41*tmp_563 + tmp_42*tmp_565 + tmp_43*tmp_567 - 1.0/4.0;
      real_t tmp_570 = tmp_45*tmp_563 + tmp_46*tmp_565 + tmp_47*tmp_567 - 1.0/4.0;
      real_t tmp_571 = tmp_1*tmp_568 + tmp_2*tmp_569 + tmp_570*tmp_6;
      real_t tmp_572 = tmp_14*tmp_568 + tmp_4*tmp_570 + tmp_569*tmp_7;
      real_t tmp_573 = tmp_11*tmp_570 + tmp_13*tmp_568 + tmp_15*tmp_569;
      real_t tmp_574 = tmp_69*(tmp_562 + tmp_97);
      real_t tmp_575 = tmp_574*tmp_89;
      real_t tmp_576 = tmp_574*tmp_92;
      real_t tmp_577 = tmp_69*(tmp_101 + tmp_564);
      real_t tmp_578 = tmp_577*tmp_80;
      real_t tmp_579 = tmp_577*tmp_82;
      real_t tmp_580 = tmp_574*tmp_94;
      real_t tmp_581 = tmp_577*tmp_84;
      real_t tmp_582 = tmp_69*(tmp_107 + tmp_566);
      real_t tmp_583 = tmp_58*tmp_582;
      real_t tmp_584 = tmp_582*tmp_72;
      real_t tmp_585 = tmp_582*tmp_74;
      real_t tmp_586 = -tmp_575 - tmp_576 - tmp_578 - tmp_579 - tmp_580 - tmp_581 - tmp_583 - tmp_584 - tmp_585 + 1;
      real_t tmp_587 = tmp_117*tmp_573;
      real_t tmp_588 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_128;
      real_t tmp_589 = 0.78764240869137092*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_590 = tmp_19*(tmp_20 + tmp_589);
      real_t tmp_591 = 0.78764240869137092*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_592 = tmp_19*(tmp_27 + tmp_591);
      real_t tmp_593 = 0.78764240869137092*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_594 = tmp_19*(tmp_34 + tmp_593);
      real_t tmp_595 = tmp_26*tmp_592 + tmp_33*tmp_594 + tmp_590*tmp_9 - 1.0/4.0;
      real_t tmp_596 = tmp_41*tmp_590 + tmp_42*tmp_592 + tmp_43*tmp_594 - 1.0/4.0;
      real_t tmp_597 = tmp_45*tmp_590 + tmp_46*tmp_592 + tmp_47*tmp_594 - 1.0/4.0;
      real_t tmp_598 = tmp_1*tmp_595 + tmp_2*tmp_596 + tmp_597*tmp_6;
      real_t tmp_599 = tmp_14*tmp_595 + tmp_4*tmp_597 + tmp_596*tmp_7;
      real_t tmp_600 = tmp_11*tmp_597 + tmp_13*tmp_595 + tmp_15*tmp_596;
      real_t tmp_601 = tmp_69*(tmp_589 + tmp_97);
      real_t tmp_602 = tmp_601*tmp_89;
      real_t tmp_603 = tmp_601*tmp_92;
      real_t tmp_604 = tmp_69*(tmp_101 + tmp_591);
      real_t tmp_605 = tmp_604*tmp_80;
      real_t tmp_606 = tmp_604*tmp_82;
      real_t tmp_607 = tmp_601*tmp_94;
      real_t tmp_608 = tmp_604*tmp_84;
      real_t tmp_609 = tmp_69*(tmp_107 + tmp_593);
      real_t tmp_610 = tmp_58*tmp_609;
      real_t tmp_611 = tmp_609*tmp_72;
      real_t tmp_612 = tmp_609*tmp_74;
      real_t tmp_613 = -tmp_602 - tmp_603 - tmp_605 - tmp_606 - tmp_607 - tmp_608 - tmp_610 - tmp_611 - tmp_612 + 1;
      real_t tmp_614 = tmp_117*tmp_600;
      real_t tmp_615 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_128;
      real_t tmp_616 = 0.58463275527740355*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_617 = tmp_19*(tmp_20 + tmp_616);
      real_t tmp_618 = 0.58463275527740355*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_619 = tmp_19*(tmp_27 + tmp_618);
      real_t tmp_620 = 0.58463275527740355*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_621 = tmp_19*(tmp_34 + tmp_620);
      real_t tmp_622 = tmp_26*tmp_619 + tmp_33*tmp_621 + tmp_617*tmp_9 - 1.0/4.0;
      real_t tmp_623 = tmp_41*tmp_617 + tmp_42*tmp_619 + tmp_43*tmp_621 - 1.0/4.0;
      real_t tmp_624 = tmp_45*tmp_617 + tmp_46*tmp_619 + tmp_47*tmp_621 - 1.0/4.0;
      real_t tmp_625 = tmp_1*tmp_622 + tmp_2*tmp_623 + tmp_6*tmp_624;
      real_t tmp_626 = tmp_14*tmp_622 + tmp_4*tmp_624 + tmp_623*tmp_7;
      real_t tmp_627 = tmp_11*tmp_624 + tmp_13*tmp_622 + tmp_15*tmp_623;
      real_t tmp_628 = tmp_69*(tmp_616 + tmp_97);
      real_t tmp_629 = tmp_628*tmp_89;
      real_t tmp_630 = tmp_628*tmp_92;
      real_t tmp_631 = tmp_69*(tmp_101 + tmp_618);
      real_t tmp_632 = tmp_631*tmp_80;
      real_t tmp_633 = tmp_631*tmp_82;
      real_t tmp_634 = tmp_628*tmp_94;
      real_t tmp_635 = tmp_631*tmp_84;
      real_t tmp_636 = tmp_69*(tmp_107 + tmp_620);
      real_t tmp_637 = tmp_58*tmp_636;
      real_t tmp_638 = tmp_636*tmp_72;
      real_t tmp_639 = tmp_636*tmp_74;
      real_t tmp_640 = -tmp_629 - tmp_630 - tmp_632 - tmp_633 - tmp_634 - tmp_635 - tmp_637 - tmp_638 - tmp_639 + 1;
      real_t tmp_641 = tmp_117*tmp_627;
      real_t tmp_642 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_128;
      real_t tmp_643 = 0.1711304259088916*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_644 = tmp_19*(tmp_20 + tmp_643);
      real_t tmp_645 = 0.1711304259088916*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_646 = tmp_19*(tmp_27 + tmp_645);
      real_t tmp_647 = 0.1711304259088916*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_648 = tmp_19*(tmp_34 + tmp_647);
      real_t tmp_649 = tmp_26*tmp_646 + tmp_33*tmp_648 + tmp_644*tmp_9 - 1.0/4.0;
      real_t tmp_650 = tmp_41*tmp_644 + tmp_42*tmp_646 + tmp_43*tmp_648 - 1.0/4.0;
      real_t tmp_651 = tmp_45*tmp_644 + tmp_46*tmp_646 + tmp_47*tmp_648 - 1.0/4.0;
      real_t tmp_652 = tmp_1*tmp_649 + tmp_2*tmp_650 + tmp_6*tmp_651;
      real_t tmp_653 = tmp_14*tmp_649 + tmp_4*tmp_651 + tmp_650*tmp_7;
      real_t tmp_654 = tmp_11*tmp_651 + tmp_13*tmp_649 + tmp_15*tmp_650;
      real_t tmp_655 = tmp_69*(tmp_643 + tmp_97);
      real_t tmp_656 = tmp_655*tmp_89;
      real_t tmp_657 = tmp_655*tmp_92;
      real_t tmp_658 = tmp_69*(tmp_101 + tmp_645);
      real_t tmp_659 = tmp_658*tmp_80;
      real_t tmp_660 = tmp_658*tmp_82;
      real_t tmp_661 = tmp_655*tmp_94;
      real_t tmp_662 = tmp_658*tmp_84;
      real_t tmp_663 = tmp_69*(tmp_107 + tmp_647);
      real_t tmp_664 = tmp_58*tmp_663;
      real_t tmp_665 = tmp_663*tmp_72;
      real_t tmp_666 = tmp_663*tmp_74;
      real_t tmp_667 = -tmp_656 - tmp_657 - tmp_659 - tmp_660 - tmp_661 - tmp_662 - tmp_664 - tmp_665 - tmp_666 + 1;
      real_t tmp_668 = tmp_117*tmp_654;
      real_t tmp_669 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_128;
      real_t tmp_670 = 0.25*p_affine_13_2*tmp_69;
      real_t tmp_671 = tmp_670*tmp_84;
      real_t tmp_672 = tmp_670*tmp_74;
      real_t tmp_673 = 0.5*p_affine_13_0*tmp_75 + 0.5*p_affine_13_1*tmp_85 + 0.5*p_affine_13_2*tmp_95;
      real_t tmp_674 = tmp_105 + tmp_106 + tmp_111;
      real_t tmp_675 = tmp_148 + tmp_149 + tmp_153;
      real_t tmp_676 = tmp_175 + tmp_176 + tmp_180;
      real_t tmp_677 = tmp_202 + tmp_203 + tmp_207;
      real_t tmp_678 = tmp_229 + tmp_230 + tmp_234;
      real_t tmp_679 = tmp_256 + tmp_257 + tmp_261;
      real_t tmp_680 = tmp_283 + tmp_284 + tmp_288;
      real_t tmp_681 = tmp_310 + tmp_311 + tmp_315;
      real_t tmp_682 = tmp_337 + tmp_338 + tmp_342;
      real_t tmp_683 = tmp_364 + tmp_365 + tmp_369;
      real_t tmp_684 = tmp_391 + tmp_392 + tmp_396;
      real_t tmp_685 = tmp_418 + tmp_419 + tmp_423;
      real_t tmp_686 = tmp_445 + tmp_446 + tmp_450;
      real_t tmp_687 = tmp_472 + tmp_473 + tmp_477;
      real_t tmp_688 = tmp_499 + tmp_500 + tmp_504;
      real_t tmp_689 = tmp_526 + tmp_527 + tmp_531;
      real_t tmp_690 = tmp_553 + tmp_554 + tmp_558;
      real_t tmp_691 = tmp_580 + tmp_581 + tmp_585;
      real_t tmp_692 = tmp_607 + tmp_608 + tmp_612;
      real_t tmp_693 = tmp_634 + tmp_635 + tmp_639;
      real_t tmp_694 = tmp_661 + tmp_662 + tmp_666;
      real_t tmp_695 = tmp_670*tmp_82;
      real_t tmp_696 = tmp_670*tmp_72;
      real_t tmp_697 = 0.5*p_affine_13_0*tmp_73 + 0.5*p_affine_13_1*tmp_83 + 0.5*p_affine_13_2*tmp_93;
      real_t tmp_698 = tmp_100 + tmp_104 + tmp_110;
      real_t tmp_699 = tmp_144 + tmp_147 + tmp_152;
      real_t tmp_700 = tmp_171 + tmp_174 + tmp_179;
      real_t tmp_701 = tmp_198 + tmp_201 + tmp_206;
      real_t tmp_702 = tmp_225 + tmp_228 + tmp_233;
      real_t tmp_703 = tmp_252 + tmp_255 + tmp_260;
      real_t tmp_704 = tmp_279 + tmp_282 + tmp_287;
      real_t tmp_705 = tmp_306 + tmp_309 + tmp_314;
      real_t tmp_706 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_707 = tmp_360 + tmp_363 + tmp_368;
      real_t tmp_708 = tmp_387 + tmp_390 + tmp_395;
      real_t tmp_709 = tmp_414 + tmp_417 + tmp_422;
      real_t tmp_710 = tmp_441 + tmp_444 + tmp_449;
      real_t tmp_711 = tmp_468 + tmp_471 + tmp_476;
      real_t tmp_712 = tmp_495 + tmp_498 + tmp_503;
      real_t tmp_713 = tmp_522 + tmp_525 + tmp_530;
      real_t tmp_714 = tmp_549 + tmp_552 + tmp_557;
      real_t tmp_715 = tmp_576 + tmp_579 + tmp_584;
      real_t tmp_716 = tmp_603 + tmp_606 + tmp_611;
      real_t tmp_717 = tmp_630 + tmp_633 + tmp_638;
      real_t tmp_718 = tmp_657 + tmp_660 + tmp_665;
      real_t tmp_719 = tmp_670*tmp_80;
      real_t tmp_720 = tmp_58*tmp_670;
      real_t tmp_721 = 0.5*p_affine_13_0*tmp_71 + 0.5*p_affine_13_1*tmp_81 + 0.5*p_affine_13_2*tmp_91;
      real_t tmp_722 = tmp_103 + tmp_109 + tmp_99;
      real_t tmp_723 = tmp_143 + tmp_146 + tmp_151;
      real_t tmp_724 = tmp_170 + tmp_173 + tmp_178;
      real_t tmp_725 = tmp_197 + tmp_200 + tmp_205;
      real_t tmp_726 = tmp_224 + tmp_227 + tmp_232;
      real_t tmp_727 = tmp_251 + tmp_254 + tmp_259;
      real_t tmp_728 = tmp_278 + tmp_281 + tmp_286;
      real_t tmp_729 = tmp_305 + tmp_308 + tmp_313;
      real_t tmp_730 = tmp_332 + tmp_335 + tmp_340;
      real_t tmp_731 = tmp_359 + tmp_362 + tmp_367;
      real_t tmp_732 = tmp_386 + tmp_389 + tmp_394;
      real_t tmp_733 = tmp_413 + tmp_416 + tmp_421;
      real_t tmp_734 = tmp_440 + tmp_443 + tmp_448;
      real_t tmp_735 = tmp_467 + tmp_470 + tmp_475;
      real_t tmp_736 = tmp_494 + tmp_497 + tmp_502;
      real_t tmp_737 = tmp_521 + tmp_524 + tmp_529;
      real_t tmp_738 = tmp_548 + tmp_551 + tmp_556;
      real_t tmp_739 = tmp_575 + tmp_578 + tmp_583;
      real_t tmp_740 = tmp_602 + tmp_605 + tmp_610;
      real_t tmp_741 = tmp_629 + tmp_632 + tmp_637;
      real_t tmp_742 = tmp_656 + tmp_659 + tmp_664;
      real_t a_0_0 = tmp_129*(-tmp_112*tmp_118 - tmp_112*tmp_127 + tmp_49*tmp_78 + tmp_79*tmp_87 + tmp_88*tmp_96) + tmp_156*(-tmp_127*tmp_154 + tmp_139*tmp_78 + tmp_140*tmp_87 + tmp_141*tmp_96 - tmp_154*tmp_155) + tmp_183*(-tmp_127*tmp_181 + tmp_166*tmp_78 + tmp_167*tmp_87 + tmp_168*tmp_96 - tmp_181*tmp_182) + tmp_210*(-tmp_127*tmp_208 + tmp_193*tmp_78 + tmp_194*tmp_87 + tmp_195*tmp_96 - tmp_208*tmp_209) + tmp_237*(-tmp_127*tmp_235 + tmp_220*tmp_78 + tmp_221*tmp_87 + tmp_222*tmp_96 - tmp_235*tmp_236) + tmp_264*(-tmp_127*tmp_262 + tmp_247*tmp_78 + tmp_248*tmp_87 + tmp_249*tmp_96 - tmp_262*tmp_263) + tmp_291*(-tmp_127*tmp_289 + tmp_274*tmp_78 + tmp_275*tmp_87 + tmp_276*tmp_96 - tmp_289*tmp_290) + tmp_318*(-tmp_127*tmp_316 + tmp_301*tmp_78 + tmp_302*tmp_87 + tmp_303*tmp_96 - tmp_316*tmp_317) + tmp_345*(-tmp_127*tmp_343 + tmp_328*tmp_78 + tmp_329*tmp_87 + tmp_330*tmp_96 - tmp_343*tmp_344) + tmp_372*(-tmp_127*tmp_370 + tmp_355*tmp_78 + tmp_356*tmp_87 + tmp_357*tmp_96 - tmp_370*tmp_371) + tmp_399*(-tmp_127*tmp_397 + tmp_382*tmp_78 + tmp_383*tmp_87 + tmp_384*tmp_96 - tmp_397*tmp_398) + tmp_426*(-tmp_127*tmp_424 + tmp_409*tmp_78 + tmp_410*tmp_87 + tmp_411*tmp_96 - tmp_424*tmp_425) + tmp_453*(-tmp_127*tmp_451 + tmp_436*tmp_78 + tmp_437*tmp_87 + tmp_438*tmp_96 - tmp_451*tmp_452) + tmp_480*(-tmp_127*tmp_478 + tmp_463*tmp_78 + tmp_464*tmp_87 + tmp_465*tmp_96 - tmp_478*tmp_479) + tmp_507*(-tmp_127*tmp_505 + tmp_490*tmp_78 + tmp_491*tmp_87 + tmp_492*tmp_96 - tmp_505*tmp_506) + tmp_534*(-tmp_127*tmp_532 + tmp_517*tmp_78 + tmp_518*tmp_87 + tmp_519*tmp_96 - tmp_532*tmp_533) + tmp_561*(-tmp_127*tmp_559 + tmp_544*tmp_78 + tmp_545*tmp_87 + tmp_546*tmp_96 - tmp_559*tmp_560) + tmp_588*(-tmp_127*tmp_586 + tmp_571*tmp_78 + tmp_572*tmp_87 + tmp_573*tmp_96 - tmp_586*tmp_587) + tmp_615*(-tmp_127*tmp_613 + tmp_598*tmp_78 + tmp_599*tmp_87 + tmp_600*tmp_96 - tmp_613*tmp_614) + tmp_642*(-tmp_127*tmp_640 + tmp_625*tmp_78 + tmp_626*tmp_87 + tmp_627*tmp_96 - tmp_640*tmp_641) + tmp_669*(-tmp_127*tmp_667 + tmp_652*tmp_78 + tmp_653*tmp_87 + tmp_654*tmp_96 - tmp_667*tmp_668);
      real_t a_1_0 = tmp_129*(-tmp_118*tmp_674 - tmp_127*tmp_674 + tmp_49*tmp_672 + tmp_671*tmp_79 + tmp_673*tmp_88) + tmp_156*(-tmp_127*tmp_675 + tmp_139*tmp_672 + tmp_140*tmp_671 + tmp_141*tmp_673 - tmp_155*tmp_675) + tmp_183*(-tmp_127*tmp_676 + tmp_166*tmp_672 + tmp_167*tmp_671 + tmp_168*tmp_673 - tmp_182*tmp_676) + tmp_210*(-tmp_127*tmp_677 + tmp_193*tmp_672 + tmp_194*tmp_671 + tmp_195*tmp_673 - tmp_209*tmp_677) + tmp_237*(-tmp_127*tmp_678 + tmp_220*tmp_672 + tmp_221*tmp_671 + tmp_222*tmp_673 - tmp_236*tmp_678) + tmp_264*(-tmp_127*tmp_679 + tmp_247*tmp_672 + tmp_248*tmp_671 + tmp_249*tmp_673 - tmp_263*tmp_679) + tmp_291*(-tmp_127*tmp_680 + tmp_274*tmp_672 + tmp_275*tmp_671 + tmp_276*tmp_673 - tmp_290*tmp_680) + tmp_318*(-tmp_127*tmp_681 + tmp_301*tmp_672 + tmp_302*tmp_671 + tmp_303*tmp_673 - tmp_317*tmp_681) + tmp_345*(-tmp_127*tmp_682 + tmp_328*tmp_672 + tmp_329*tmp_671 + tmp_330*tmp_673 - tmp_344*tmp_682) + tmp_372*(-tmp_127*tmp_683 + tmp_355*tmp_672 + tmp_356*tmp_671 + tmp_357*tmp_673 - tmp_371*tmp_683) + tmp_399*(-tmp_127*tmp_684 + tmp_382*tmp_672 + tmp_383*tmp_671 + tmp_384*tmp_673 - tmp_398*tmp_684) + tmp_426*(-tmp_127*tmp_685 + tmp_409*tmp_672 + tmp_410*tmp_671 + tmp_411*tmp_673 - tmp_425*tmp_685) + tmp_453*(-tmp_127*tmp_686 + tmp_436*tmp_672 + tmp_437*tmp_671 + tmp_438*tmp_673 - tmp_452*tmp_686) + tmp_480*(-tmp_127*tmp_687 + tmp_463*tmp_672 + tmp_464*tmp_671 + tmp_465*tmp_673 - tmp_479*tmp_687) + tmp_507*(-tmp_127*tmp_688 + tmp_490*tmp_672 + tmp_491*tmp_671 + tmp_492*tmp_673 - tmp_506*tmp_688) + tmp_534*(-tmp_127*tmp_689 + tmp_517*tmp_672 + tmp_518*tmp_671 + tmp_519*tmp_673 - tmp_533*tmp_689) + tmp_561*(-tmp_127*tmp_690 + tmp_544*tmp_672 + tmp_545*tmp_671 + tmp_546*tmp_673 - tmp_560*tmp_690) + tmp_588*(-tmp_127*tmp_691 + tmp_571*tmp_672 + tmp_572*tmp_671 + tmp_573*tmp_673 - tmp_587*tmp_691) + tmp_615*(-tmp_127*tmp_692 + tmp_598*tmp_672 + tmp_599*tmp_671 + tmp_600*tmp_673 - tmp_614*tmp_692) + tmp_642*(-tmp_127*tmp_693 + tmp_625*tmp_672 + tmp_626*tmp_671 + tmp_627*tmp_673 - tmp_641*tmp_693) + tmp_669*(-tmp_127*tmp_694 + tmp_652*tmp_672 + tmp_653*tmp_671 + tmp_654*tmp_673 - tmp_668*tmp_694);
      real_t a_2_0 = tmp_129*(-tmp_118*tmp_698 - tmp_127*tmp_698 + tmp_49*tmp_696 + tmp_695*tmp_79 + tmp_697*tmp_88) + tmp_156*(-tmp_127*tmp_699 + tmp_139*tmp_696 + tmp_140*tmp_695 + tmp_141*tmp_697 - tmp_155*tmp_699) + tmp_183*(-tmp_127*tmp_700 + tmp_166*tmp_696 + tmp_167*tmp_695 + tmp_168*tmp_697 - tmp_182*tmp_700) + tmp_210*(-tmp_127*tmp_701 + tmp_193*tmp_696 + tmp_194*tmp_695 + tmp_195*tmp_697 - tmp_209*tmp_701) + tmp_237*(-tmp_127*tmp_702 + tmp_220*tmp_696 + tmp_221*tmp_695 + tmp_222*tmp_697 - tmp_236*tmp_702) + tmp_264*(-tmp_127*tmp_703 + tmp_247*tmp_696 + tmp_248*tmp_695 + tmp_249*tmp_697 - tmp_263*tmp_703) + tmp_291*(-tmp_127*tmp_704 + tmp_274*tmp_696 + tmp_275*tmp_695 + tmp_276*tmp_697 - tmp_290*tmp_704) + tmp_318*(-tmp_127*tmp_705 + tmp_301*tmp_696 + tmp_302*tmp_695 + tmp_303*tmp_697 - tmp_317*tmp_705) + tmp_345*(-tmp_127*tmp_706 + tmp_328*tmp_696 + tmp_329*tmp_695 + tmp_330*tmp_697 - tmp_344*tmp_706) + tmp_372*(-tmp_127*tmp_707 + tmp_355*tmp_696 + tmp_356*tmp_695 + tmp_357*tmp_697 - tmp_371*tmp_707) + tmp_399*(-tmp_127*tmp_708 + tmp_382*tmp_696 + tmp_383*tmp_695 + tmp_384*tmp_697 - tmp_398*tmp_708) + tmp_426*(-tmp_127*tmp_709 + tmp_409*tmp_696 + tmp_410*tmp_695 + tmp_411*tmp_697 - tmp_425*tmp_709) + tmp_453*(-tmp_127*tmp_710 + tmp_436*tmp_696 + tmp_437*tmp_695 + tmp_438*tmp_697 - tmp_452*tmp_710) + tmp_480*(-tmp_127*tmp_711 + tmp_463*tmp_696 + tmp_464*tmp_695 + tmp_465*tmp_697 - tmp_479*tmp_711) + tmp_507*(-tmp_127*tmp_712 + tmp_490*tmp_696 + tmp_491*tmp_695 + tmp_492*tmp_697 - tmp_506*tmp_712) + tmp_534*(-tmp_127*tmp_713 + tmp_517*tmp_696 + tmp_518*tmp_695 + tmp_519*tmp_697 - tmp_533*tmp_713) + tmp_561*(-tmp_127*tmp_714 + tmp_544*tmp_696 + tmp_545*tmp_695 + tmp_546*tmp_697 - tmp_560*tmp_714) + tmp_588*(-tmp_127*tmp_715 + tmp_571*tmp_696 + tmp_572*tmp_695 + tmp_573*tmp_697 - tmp_587*tmp_715) + tmp_615*(-tmp_127*tmp_716 + tmp_598*tmp_696 + tmp_599*tmp_695 + tmp_600*tmp_697 - tmp_614*tmp_716) + tmp_642*(-tmp_127*tmp_717 + tmp_625*tmp_696 + tmp_626*tmp_695 + tmp_627*tmp_697 - tmp_641*tmp_717) + tmp_669*(-tmp_127*tmp_718 + tmp_652*tmp_696 + tmp_653*tmp_695 + tmp_654*tmp_697 - tmp_668*tmp_718);
      real_t a_3_0 = tmp_129*(-tmp_118*tmp_722 - tmp_127*tmp_722 + tmp_49*tmp_720 + tmp_719*tmp_79 + tmp_721*tmp_88) + tmp_156*(-tmp_127*tmp_723 + tmp_139*tmp_720 + tmp_140*tmp_719 + tmp_141*tmp_721 - tmp_155*tmp_723) + tmp_183*(-tmp_127*tmp_724 + tmp_166*tmp_720 + tmp_167*tmp_719 + tmp_168*tmp_721 - tmp_182*tmp_724) + tmp_210*(-tmp_127*tmp_725 + tmp_193*tmp_720 + tmp_194*tmp_719 + tmp_195*tmp_721 - tmp_209*tmp_725) + tmp_237*(-tmp_127*tmp_726 + tmp_220*tmp_720 + tmp_221*tmp_719 + tmp_222*tmp_721 - tmp_236*tmp_726) + tmp_264*(-tmp_127*tmp_727 + tmp_247*tmp_720 + tmp_248*tmp_719 + tmp_249*tmp_721 - tmp_263*tmp_727) + tmp_291*(-tmp_127*tmp_728 + tmp_274*tmp_720 + tmp_275*tmp_719 + tmp_276*tmp_721 - tmp_290*tmp_728) + tmp_318*(-tmp_127*tmp_729 + tmp_301*tmp_720 + tmp_302*tmp_719 + tmp_303*tmp_721 - tmp_317*tmp_729) + tmp_345*(-tmp_127*tmp_730 + tmp_328*tmp_720 + tmp_329*tmp_719 + tmp_330*tmp_721 - tmp_344*tmp_730) + tmp_372*(-tmp_127*tmp_731 + tmp_355*tmp_720 + tmp_356*tmp_719 + tmp_357*tmp_721 - tmp_371*tmp_731) + tmp_399*(-tmp_127*tmp_732 + tmp_382*tmp_720 + tmp_383*tmp_719 + tmp_384*tmp_721 - tmp_398*tmp_732) + tmp_426*(-tmp_127*tmp_733 + tmp_409*tmp_720 + tmp_410*tmp_719 + tmp_411*tmp_721 - tmp_425*tmp_733) + tmp_453*(-tmp_127*tmp_734 + tmp_436*tmp_720 + tmp_437*tmp_719 + tmp_438*tmp_721 - tmp_452*tmp_734) + tmp_480*(-tmp_127*tmp_735 + tmp_463*tmp_720 + tmp_464*tmp_719 + tmp_465*tmp_721 - tmp_479*tmp_735) + tmp_507*(-tmp_127*tmp_736 + tmp_490*tmp_720 + tmp_491*tmp_719 + tmp_492*tmp_721 - tmp_506*tmp_736) + tmp_534*(-tmp_127*tmp_737 + tmp_517*tmp_720 + tmp_518*tmp_719 + tmp_519*tmp_721 - tmp_533*tmp_737) + tmp_561*(-tmp_127*tmp_738 + tmp_544*tmp_720 + tmp_545*tmp_719 + tmp_546*tmp_721 - tmp_560*tmp_738) + tmp_588*(-tmp_127*tmp_739 + tmp_571*tmp_720 + tmp_572*tmp_719 + tmp_573*tmp_721 - tmp_587*tmp_739) + tmp_615*(-tmp_127*tmp_740 + tmp_598*tmp_720 + tmp_599*tmp_719 + tmp_600*tmp_721 - tmp_614*tmp_740) + tmp_642*(-tmp_127*tmp_741 + tmp_625*tmp_720 + tmp_626*tmp_719 + tmp_627*tmp_721 - tmp_641*tmp_741) + tmp_669*(-tmp_127*tmp_742 + tmp_652*tmp_720 + tmp_653*tmp_719 + tmp_654*tmp_721 - tmp_668*tmp_742);
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_7;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_13*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_15*tmp_5 - tmp_17*tmp_5);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_7;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_11 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_10*tmp_4;
      real_t tmp_29 = -p_affine_8_1;
      real_t tmp_30 = p_affine_9_1 + tmp_29;
      real_t tmp_31 = p_affine_10_1 + tmp_29;
      real_t tmp_32 = p_affine_8_1 + tmp_2;
      real_t tmp_33 = tmp_19*(0.031405749086161582*tmp_30 + 0.93718850182767688*tmp_31 + tmp_32);
      real_t tmp_34 = tmp_28*tmp_33;
      real_t tmp_35 = tmp_1*tmp_8 - tmp_10*tmp_13;
      real_t tmp_36 = tmp_33*tmp_35;
      real_t tmp_37 = tmp_12 - tmp_18;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_15 - tmp_17;
      real_t tmp_40 = tmp_33*tmp_39;
      real_t tmp_41 = -tmp_10*tmp_3 + tmp_14*tmp_5;
      real_t tmp_42 = -p_affine_8_0;
      real_t tmp_43 = p_affine_9_0 + tmp_42;
      real_t tmp_44 = p_affine_10_0 + tmp_42;
      real_t tmp_45 = p_affine_8_0 + tmp_0;
      real_t tmp_46 = tmp_19*(0.031405749086161582*tmp_43 + 0.93718850182767688*tmp_44 + tmp_45);
      real_t tmp_47 = tmp_41*tmp_46;
      real_t tmp_48 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_49 = tmp_46*tmp_48;
      real_t tmp_50 = -tmp_16 + tmp_9;
      real_t tmp_51 = tmp_46*tmp_50;
      real_t tmp_52 = tmp_38 + tmp_40 + tmp_51;
      real_t tmp_53 = tmp_27 + tmp_36 + tmp_49;
      real_t tmp_54 = tmp_25 + tmp_34 + tmp_47;
      real_t tmp_55 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_56 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_57 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_58 = 6.0*std::pow((std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)*std::abs(tmp_22*tmp_55 - tmp_31*tmp_57)) + (std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)*std::abs(tmp_22*tmp_56 - tmp_44*tmp_57)) + (std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)*std::abs(tmp_31*tmp_56 - tmp_44*tmp_55)), 0.25);
      real_t tmp_59 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58*(tmp_10*(tmp_52 - 1.0/4.0) + tmp_14*(tmp_53 - 1.0/4.0) + tmp_8*(tmp_54 - 1.0/4.0));
      real_t tmp_60 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_19*(0.19601935860219369*tmp_30 + 0.60796128279561268*tmp_31 + tmp_32);
      real_t tmp_64 = tmp_28*tmp_63;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = tmp_37*tmp_60;
      real_t tmp_67 = tmp_39*tmp_63;
      real_t tmp_68 = tmp_19*(0.19601935860219369*tmp_43 + 0.60796128279561268*tmp_44 + tmp_45);
      real_t tmp_69 = tmp_41*tmp_68;
      real_t tmp_70 = tmp_48*tmp_68;
      real_t tmp_71 = tmp_50*tmp_68;
      real_t tmp_72 = tmp_66 + tmp_67 + tmp_71;
      real_t tmp_73 = tmp_62 + tmp_65 + tmp_70;
      real_t tmp_74 = tmp_61 + tmp_64 + tmp_69;
      real_t tmp_75 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58*(tmp_10*(tmp_72 - 1.0/4.0) + tmp_14*(tmp_73 - 1.0/4.0) + tmp_8*(tmp_74 - 1.0/4.0));
      real_t tmp_76 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_77 = tmp_6*tmp_76;
      real_t tmp_78 = tmp_26*tmp_76;
      real_t tmp_79 = tmp_19*(0.37605877282253791*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_80 = tmp_28*tmp_79;
      real_t tmp_81 = tmp_35*tmp_79;
      real_t tmp_82 = tmp_37*tmp_76;
      real_t tmp_83 = tmp_39*tmp_79;
      real_t tmp_84 = tmp_19*(0.37605877282253791*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_85 = tmp_41*tmp_84;
      real_t tmp_86 = tmp_48*tmp_84;
      real_t tmp_87 = tmp_50*tmp_84;
      real_t tmp_88 = tmp_82 + tmp_83 + tmp_87;
      real_t tmp_89 = tmp_78 + tmp_81 + tmp_86;
      real_t tmp_90 = tmp_77 + tmp_80 + tmp_85;
      real_t tmp_91 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_58*(tmp_10*(tmp_88 - 1.0/4.0) + tmp_14*(tmp_89 - 1.0/4.0) + tmp_8*(tmp_90 - 1.0/4.0));
      real_t tmp_92 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_93 = tmp_6*tmp_92;
      real_t tmp_94 = tmp_26*tmp_92;
      real_t tmp_95 = tmp_19*(0.041227165399737475*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_96 = tmp_28*tmp_95;
      real_t tmp_97 = tmp_35*tmp_95;
      real_t tmp_98 = tmp_37*tmp_92;
      real_t tmp_99 = tmp_39*tmp_95;
      real_t tmp_100 = tmp_19*(0.041227165399737475*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_101 = tmp_100*tmp_41;
      real_t tmp_102 = tmp_100*tmp_48;
      real_t tmp_103 = tmp_100*tmp_50;
      real_t tmp_104 = tmp_103 + tmp_98 + tmp_99;
      real_t tmp_105 = tmp_102 + tmp_94 + tmp_97;
      real_t tmp_106 = tmp_101 + tmp_93 + tmp_96;
      real_t tmp_107 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_58*(tmp_10*(tmp_104 - 1.0/4.0) + tmp_14*(tmp_105 - 1.0/4.0) + tmp_8*(tmp_106 - 1.0/4.0));
      real_t tmp_108 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_19*(0.40446199974765351*tmp_30 + 0.19107600050469298*tmp_31 + tmp_32);
      real_t tmp_112 = tmp_111*tmp_28;
      real_t tmp_113 = tmp_111*tmp_35;
      real_t tmp_114 = tmp_108*tmp_37;
      real_t tmp_115 = tmp_111*tmp_39;
      real_t tmp_116 = tmp_19*(0.40446199974765351*tmp_43 + 0.19107600050469298*tmp_44 + tmp_45);
      real_t tmp_117 = tmp_116*tmp_41;
      real_t tmp_118 = tmp_116*tmp_48;
      real_t tmp_119 = tmp_116*tmp_50;
      real_t tmp_120 = tmp_114 + tmp_115 + tmp_119;
      real_t tmp_121 = tmp_110 + tmp_113 + tmp_118;
      real_t tmp_122 = tmp_109 + tmp_112 + tmp_117;
      real_t tmp_123 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_58*(tmp_10*(tmp_120 - 1.0/4.0) + tmp_14*(tmp_121 - 1.0/4.0) + tmp_8*(tmp_122 - 1.0/4.0));
      real_t tmp_124 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_125 = tmp_124*tmp_6;
      real_t tmp_126 = tmp_124*tmp_26;
      real_t tmp_127 = tmp_19*(0.039308471900058539*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_128 = tmp_127*tmp_28;
      real_t tmp_129 = tmp_127*tmp_35;
      real_t tmp_130 = tmp_124*tmp_37;
      real_t tmp_131 = tmp_127*tmp_39;
      real_t tmp_132 = tmp_19*(0.039308471900058539*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_133 = tmp_132*tmp_41;
      real_t tmp_134 = tmp_132*tmp_48;
      real_t tmp_135 = tmp_132*tmp_50;
      real_t tmp_136 = tmp_130 + tmp_131 + tmp_135;
      real_t tmp_137 = tmp_126 + tmp_129 + tmp_134;
      real_t tmp_138 = tmp_125 + tmp_128 + tmp_133;
      real_t tmp_139 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_58*(tmp_10*(tmp_136 - 1.0/4.0) + tmp_14*(tmp_137 - 1.0/4.0) + tmp_8*(tmp_138 - 1.0/4.0));
      real_t tmp_140 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_140*tmp_26;
      real_t tmp_143 = tmp_19*(0.93718850182767688*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_144 = tmp_143*tmp_28;
      real_t tmp_145 = tmp_143*tmp_35;
      real_t tmp_146 = tmp_140*tmp_37;
      real_t tmp_147 = tmp_143*tmp_39;
      real_t tmp_148 = tmp_19*(0.93718850182767688*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_149 = tmp_148*tmp_41;
      real_t tmp_150 = tmp_148*tmp_48;
      real_t tmp_151 = tmp_148*tmp_50;
      real_t tmp_152 = tmp_146 + tmp_147 + tmp_151;
      real_t tmp_153 = tmp_142 + tmp_145 + tmp_150;
      real_t tmp_154 = tmp_141 + tmp_144 + tmp_149;
      real_t tmp_155 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_58*(tmp_10*(tmp_152 - 1.0/4.0) + tmp_14*(tmp_153 - 1.0/4.0) + tmp_8*(tmp_154 - 1.0/4.0));
      real_t tmp_156 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_156*tmp_26;
      real_t tmp_159 = tmp_19*(0.60796128279561268*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_160 = tmp_159*tmp_28;
      real_t tmp_161 = tmp_159*tmp_35;
      real_t tmp_162 = tmp_156*tmp_37;
      real_t tmp_163 = tmp_159*tmp_39;
      real_t tmp_164 = tmp_19*(0.60796128279561268*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_165 = tmp_164*tmp_41;
      real_t tmp_166 = tmp_164*tmp_48;
      real_t tmp_167 = tmp_164*tmp_50;
      real_t tmp_168 = tmp_162 + tmp_163 + tmp_167;
      real_t tmp_169 = tmp_158 + tmp_161 + tmp_166;
      real_t tmp_170 = tmp_157 + tmp_160 + tmp_165;
      real_t tmp_171 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_58*(tmp_10*(tmp_168 - 1.0/4.0) + tmp_14*(tmp_169 - 1.0/4.0) + tmp_8*(tmp_170 - 1.0/4.0));
      real_t tmp_172 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_172*tmp_26;
      real_t tmp_175 = tmp_19*(0.19107600050469298*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_176 = tmp_175*tmp_28;
      real_t tmp_177 = tmp_175*tmp_35;
      real_t tmp_178 = tmp_172*tmp_37;
      real_t tmp_179 = tmp_175*tmp_39;
      real_t tmp_180 = tmp_19*(0.19107600050469298*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_181 = tmp_180*tmp_41;
      real_t tmp_182 = tmp_180*tmp_48;
      real_t tmp_183 = tmp_180*tmp_50;
      real_t tmp_184 = tmp_178 + tmp_179 + tmp_183;
      real_t tmp_185 = tmp_174 + tmp_177 + tmp_182;
      real_t tmp_186 = tmp_173 + tmp_176 + tmp_181;
      real_t tmp_187 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_58*(tmp_10*(tmp_184 - 1.0/4.0) + tmp_14*(tmp_185 - 1.0/4.0) + tmp_8*(tmp_186 - 1.0/4.0));
      real_t tmp_188 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_188*tmp_26;
      real_t tmp_191 = tmp_19*(0.031405749086161582*tmp_30 + 0.031405749086161582*tmp_31 + tmp_32);
      real_t tmp_192 = tmp_191*tmp_28;
      real_t tmp_193 = tmp_191*tmp_35;
      real_t tmp_194 = tmp_188*tmp_37;
      real_t tmp_195 = tmp_191*tmp_39;
      real_t tmp_196 = tmp_19*(0.031405749086161582*tmp_43 + 0.031405749086161582*tmp_44 + tmp_45);
      real_t tmp_197 = tmp_196*tmp_41;
      real_t tmp_198 = tmp_196*tmp_48;
      real_t tmp_199 = tmp_196*tmp_50;
      real_t tmp_200 = tmp_194 + tmp_195 + tmp_199;
      real_t tmp_201 = tmp_190 + tmp_193 + tmp_198;
      real_t tmp_202 = tmp_189 + tmp_192 + tmp_197;
      real_t tmp_203 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_58*(tmp_10*(tmp_200 - 1.0/4.0) + tmp_14*(tmp_201 - 1.0/4.0) + tmp_8*(tmp_202 - 1.0/4.0));
      real_t tmp_204 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_205 = tmp_204*tmp_6;
      real_t tmp_206 = tmp_204*tmp_26;
      real_t tmp_207 = tmp_19*(0.19601935860219369*tmp_30 + 0.19601935860219369*tmp_31 + tmp_32);
      real_t tmp_208 = tmp_207*tmp_28;
      real_t tmp_209 = tmp_207*tmp_35;
      real_t tmp_210 = tmp_204*tmp_37;
      real_t tmp_211 = tmp_207*tmp_39;
      real_t tmp_212 = tmp_19*(0.19601935860219369*tmp_43 + 0.19601935860219369*tmp_44 + tmp_45);
      real_t tmp_213 = tmp_212*tmp_41;
      real_t tmp_214 = tmp_212*tmp_48;
      real_t tmp_215 = tmp_212*tmp_50;
      real_t tmp_216 = tmp_210 + tmp_211 + tmp_215;
      real_t tmp_217 = tmp_206 + tmp_209 + tmp_214;
      real_t tmp_218 = tmp_205 + tmp_208 + tmp_213;
      real_t tmp_219 = 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_58*(tmp_10*(tmp_216 - 1.0/4.0) + tmp_14*(tmp_217 - 1.0/4.0) + tmp_8*(tmp_218 - 1.0/4.0));
      real_t tmp_220 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = tmp_220*tmp_26;
      real_t tmp_223 = tmp_19*(0.40446199974765351*tmp_30 + 0.40446199974765351*tmp_31 + tmp_32);
      real_t tmp_224 = tmp_223*tmp_28;
      real_t tmp_225 = tmp_223*tmp_35;
      real_t tmp_226 = tmp_220*tmp_37;
      real_t tmp_227 = tmp_223*tmp_39;
      real_t tmp_228 = tmp_19*(0.40446199974765351*tmp_43 + 0.40446199974765351*tmp_44 + tmp_45);
      real_t tmp_229 = tmp_228*tmp_41;
      real_t tmp_230 = tmp_228*tmp_48;
      real_t tmp_231 = tmp_228*tmp_50;
      real_t tmp_232 = tmp_226 + tmp_227 + tmp_231;
      real_t tmp_233 = tmp_222 + tmp_225 + tmp_230;
      real_t tmp_234 = tmp_221 + tmp_224 + tmp_229;
      real_t tmp_235 = 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_58*(tmp_10*(tmp_232 - 1.0/4.0) + tmp_14*(tmp_233 - 1.0/4.0) + tmp_8*(tmp_234 - 1.0/4.0));
      real_t tmp_236 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_237 = tmp_236*tmp_6;
      real_t tmp_238 = tmp_236*tmp_26;
      real_t tmp_239 = tmp_19*(0.37605877282253791*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_240 = tmp_239*tmp_28;
      real_t tmp_241 = tmp_239*tmp_35;
      real_t tmp_242 = tmp_236*tmp_37;
      real_t tmp_243 = tmp_239*tmp_39;
      real_t tmp_244 = tmp_19*(0.37605877282253791*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_245 = tmp_244*tmp_41;
      real_t tmp_246 = tmp_244*tmp_48;
      real_t tmp_247 = tmp_244*tmp_50;
      real_t tmp_248 = tmp_242 + tmp_243 + tmp_247;
      real_t tmp_249 = tmp_238 + tmp_241 + tmp_246;
      real_t tmp_250 = tmp_237 + tmp_240 + tmp_245;
      real_t tmp_251 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58*(tmp_10*(tmp_248 - 1.0/4.0) + tmp_14*(tmp_249 - 1.0/4.0) + tmp_8*(tmp_250 - 1.0/4.0));
      real_t tmp_252 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_253 = tmp_252*tmp_6;
      real_t tmp_254 = tmp_252*tmp_26;
      real_t tmp_255 = tmp_19*(0.1711304259088916*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_256 = tmp_255*tmp_28;
      real_t tmp_257 = tmp_255*tmp_35;
      real_t tmp_258 = tmp_252*tmp_37;
      real_t tmp_259 = tmp_255*tmp_39;
      real_t tmp_260 = tmp_19*(0.1711304259088916*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_261 = tmp_260*tmp_41;
      real_t tmp_262 = tmp_260*tmp_48;
      real_t tmp_263 = tmp_260*tmp_50;
      real_t tmp_264 = tmp_258 + tmp_259 + tmp_263;
      real_t tmp_265 = tmp_254 + tmp_257 + tmp_262;
      real_t tmp_266 = tmp_253 + tmp_256 + tmp_261;
      real_t tmp_267 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_58*(tmp_10*(tmp_264 - 1.0/4.0) + tmp_14*(tmp_265 - 1.0/4.0) + tmp_8*(tmp_266 - 1.0/4.0));
      real_t tmp_268 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_269 = tmp_268*tmp_6;
      real_t tmp_270 = tmp_26*tmp_268;
      real_t tmp_271 = tmp_19*(0.78764240869137092*tmp_30 + 0.1711304259088916*tmp_31 + tmp_32);
      real_t tmp_272 = tmp_271*tmp_28;
      real_t tmp_273 = tmp_271*tmp_35;
      real_t tmp_274 = tmp_268*tmp_37;
      real_t tmp_275 = tmp_271*tmp_39;
      real_t tmp_276 = tmp_19*(0.78764240869137092*tmp_43 + 0.1711304259088916*tmp_44 + tmp_45);
      real_t tmp_277 = tmp_276*tmp_41;
      real_t tmp_278 = tmp_276*tmp_48;
      real_t tmp_279 = tmp_276*tmp_50;
      real_t tmp_280 = tmp_274 + tmp_275 + tmp_279;
      real_t tmp_281 = tmp_270 + tmp_273 + tmp_278;
      real_t tmp_282 = tmp_269 + tmp_272 + tmp_277;
      real_t tmp_283 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58*(tmp_10*(tmp_280 - 1.0/4.0) + tmp_14*(tmp_281 - 1.0/4.0) + tmp_8*(tmp_282 - 1.0/4.0));
      real_t tmp_284 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_285 = tmp_284*tmp_6;
      real_t tmp_286 = tmp_26*tmp_284;
      real_t tmp_287 = tmp_19*(0.58463275527740355*tmp_30 + 0.37605877282253791*tmp_31 + tmp_32);
      real_t tmp_288 = tmp_28*tmp_287;
      real_t tmp_289 = tmp_287*tmp_35;
      real_t tmp_290 = tmp_284*tmp_37;
      real_t tmp_291 = tmp_287*tmp_39;
      real_t tmp_292 = tmp_19*(0.58463275527740355*tmp_43 + 0.37605877282253791*tmp_44 + tmp_45);
      real_t tmp_293 = tmp_292*tmp_41;
      real_t tmp_294 = tmp_292*tmp_48;
      real_t tmp_295 = tmp_292*tmp_50;
      real_t tmp_296 = tmp_290 + tmp_291 + tmp_295;
      real_t tmp_297 = tmp_286 + tmp_289 + tmp_294;
      real_t tmp_298 = tmp_285 + tmp_288 + tmp_293;
      real_t tmp_299 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_58*(tmp_10*(tmp_296 - 1.0/4.0) + tmp_14*(tmp_297 - 1.0/4.0) + tmp_8*(tmp_298 - 1.0/4.0));
      real_t tmp_300 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_301 = tmp_300*tmp_6;
      real_t tmp_302 = tmp_26*tmp_300;
      real_t tmp_303 = tmp_19*(0.041227165399737475*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_304 = tmp_28*tmp_303;
      real_t tmp_305 = tmp_303*tmp_35;
      real_t tmp_306 = tmp_300*tmp_37;
      real_t tmp_307 = tmp_303*tmp_39;
      real_t tmp_308 = tmp_19*(0.041227165399737475*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_309 = tmp_308*tmp_41;
      real_t tmp_310 = tmp_308*tmp_48;
      real_t tmp_311 = tmp_308*tmp_50;
      real_t tmp_312 = tmp_306 + tmp_307 + tmp_311;
      real_t tmp_313 = tmp_302 + tmp_305 + tmp_310;
      real_t tmp_314 = tmp_301 + tmp_304 + tmp_309;
      real_t tmp_315 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_58*(tmp_10*(tmp_312 - 1.0/4.0) + tmp_14*(tmp_313 - 1.0/4.0) + tmp_8*(tmp_314 - 1.0/4.0));
      real_t tmp_316 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_317 = tmp_316*tmp_6;
      real_t tmp_318 = tmp_26*tmp_316;
      real_t tmp_319 = tmp_19*(0.039308471900058539*tmp_30 + 0.58463275527740355*tmp_31 + tmp_32);
      real_t tmp_320 = tmp_28*tmp_319;
      real_t tmp_321 = tmp_319*tmp_35;
      real_t tmp_322 = tmp_316*tmp_37;
      real_t tmp_323 = tmp_319*tmp_39;
      real_t tmp_324 = tmp_19*(0.039308471900058539*tmp_43 + 0.58463275527740355*tmp_44 + tmp_45);
      real_t tmp_325 = tmp_324*tmp_41;
      real_t tmp_326 = tmp_324*tmp_48;
      real_t tmp_327 = tmp_324*tmp_50;
      real_t tmp_328 = tmp_322 + tmp_323 + tmp_327;
      real_t tmp_329 = tmp_318 + tmp_321 + tmp_326;
      real_t tmp_330 = tmp_317 + tmp_320 + tmp_325;
      real_t tmp_331 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_58*(tmp_10*(tmp_328 - 1.0/4.0) + tmp_14*(tmp_329 - 1.0/4.0) + tmp_8*(tmp_330 - 1.0/4.0));
      real_t tmp_332 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_333 = tmp_332*tmp_6;
      real_t tmp_334 = tmp_26*tmp_332;
      real_t tmp_335 = tmp_19*(0.78764240869137092*tmp_30 + 0.041227165399737475*tmp_31 + tmp_32);
      real_t tmp_336 = tmp_28*tmp_335;
      real_t tmp_337 = tmp_335*tmp_35;
      real_t tmp_338 = tmp_332*tmp_37;
      real_t tmp_339 = tmp_335*tmp_39;
      real_t tmp_340 = tmp_19*(0.78764240869137092*tmp_43 + 0.041227165399737475*tmp_44 + tmp_45);
      real_t tmp_341 = tmp_340*tmp_41;
      real_t tmp_342 = tmp_340*tmp_48;
      real_t tmp_343 = tmp_340*tmp_50;
      real_t tmp_344 = tmp_338 + tmp_339 + tmp_343;
      real_t tmp_345 = tmp_334 + tmp_337 + tmp_342;
      real_t tmp_346 = tmp_333 + tmp_336 + tmp_341;
      real_t tmp_347 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_58*(tmp_10*(tmp_344 - 1.0/4.0) + tmp_14*(tmp_345 - 1.0/4.0) + tmp_8*(tmp_346 - 1.0/4.0));
      real_t tmp_348 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_349 = tmp_348*tmp_6;
      real_t tmp_350 = tmp_26*tmp_348;
      real_t tmp_351 = tmp_19*(0.58463275527740355*tmp_30 + 0.039308471900058539*tmp_31 + tmp_32);
      real_t tmp_352 = tmp_28*tmp_351;
      real_t tmp_353 = tmp_35*tmp_351;
      real_t tmp_354 = tmp_348*tmp_37;
      real_t tmp_355 = tmp_351*tmp_39;
      real_t tmp_356 = tmp_19*(0.58463275527740355*tmp_43 + 0.039308471900058539*tmp_44 + tmp_45);
      real_t tmp_357 = tmp_356*tmp_41;
      real_t tmp_358 = tmp_356*tmp_48;
      real_t tmp_359 = tmp_356*tmp_50;
      real_t tmp_360 = tmp_354 + tmp_355 + tmp_359;
      real_t tmp_361 = tmp_350 + tmp_353 + tmp_358;
      real_t tmp_362 = tmp_349 + tmp_352 + tmp_357;
      real_t tmp_363 = 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_58*(tmp_10*(tmp_360 - 1.0/4.0) + tmp_14*(tmp_361 - 1.0/4.0) + tmp_8*(tmp_362 - 1.0/4.0));
      real_t tmp_364 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_365 = tmp_364*tmp_6;
      real_t tmp_366 = tmp_26*tmp_364;
      real_t tmp_367 = tmp_19*(0.1711304259088916*tmp_30 + 0.78764240869137092*tmp_31 + tmp_32);
      real_t tmp_368 = tmp_28*tmp_367;
      real_t tmp_369 = tmp_35*tmp_367;
      real_t tmp_370 = tmp_364*tmp_37;
      real_t tmp_371 = tmp_367*tmp_39;
      real_t tmp_372 = tmp_19*(0.1711304259088916*tmp_43 + 0.78764240869137092*tmp_44 + tmp_45);
      real_t tmp_373 = tmp_372*tmp_41;
      real_t tmp_374 = tmp_372*tmp_48;
      real_t tmp_375 = tmp_372*tmp_50;
      real_t tmp_376 = tmp_370 + tmp_371 + tmp_375;
      real_t tmp_377 = tmp_366 + tmp_369 + tmp_374;
      real_t tmp_378 = tmp_365 + tmp_368 + tmp_373;
      real_t tmp_379 = 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_58*(tmp_10*(tmp_376 - 1.0/4.0) + tmp_14*(tmp_377 - 1.0/4.0) + tmp_8*(tmp_378 - 1.0/4.0));
      real_t a_0_0 = tmp_107*(-tmp_101 - tmp_102 - tmp_103 - tmp_93 - tmp_94 - tmp_96 - tmp_97 - tmp_98 - tmp_99 + 1) + tmp_123*(-tmp_109 - tmp_110 - tmp_112 - tmp_113 - tmp_114 - tmp_115 - tmp_117 - tmp_118 - tmp_119 + 1) + tmp_139*(-tmp_125 - tmp_126 - tmp_128 - tmp_129 - tmp_130 - tmp_131 - tmp_133 - tmp_134 - tmp_135 + 1) + tmp_155*(-tmp_141 - tmp_142 - tmp_144 - tmp_145 - tmp_146 - tmp_147 - tmp_149 - tmp_150 - tmp_151 + 1) + tmp_171*(-tmp_157 - tmp_158 - tmp_160 - tmp_161 - tmp_162 - tmp_163 - tmp_165 - tmp_166 - tmp_167 + 1) + tmp_187*(-tmp_173 - tmp_174 - tmp_176 - tmp_177 - tmp_178 - tmp_179 - tmp_181 - tmp_182 - tmp_183 + 1) + tmp_203*(-tmp_189 - tmp_190 - tmp_192 - tmp_193 - tmp_194 - tmp_195 - tmp_197 - tmp_198 - tmp_199 + 1) + tmp_219*(-tmp_205 - tmp_206 - tmp_208 - tmp_209 - tmp_210 - tmp_211 - tmp_213 - tmp_214 - tmp_215 + 1) + tmp_235*(-tmp_221 - tmp_222 - tmp_224 - tmp_225 - tmp_226 - tmp_227 - tmp_229 - tmp_230 - tmp_231 + 1) + tmp_251*(-tmp_237 - tmp_238 - tmp_240 - tmp_241 - tmp_242 - tmp_243 - tmp_245 - tmp_246 - tmp_247 + 1) + tmp_267*(-tmp_253 - tmp_254 - tmp_256 - tmp_257 - tmp_258 - tmp_259 - tmp_261 - tmp_262 - tmp_263 + 1) + tmp_283*(-tmp_269 - tmp_270 - tmp_272 - tmp_273 - tmp_274 - tmp_275 - tmp_277 - tmp_278 - tmp_279 + 1) + tmp_299*(-tmp_285 - tmp_286 - tmp_288 - tmp_289 - tmp_290 - tmp_291 - tmp_293 - tmp_294 - tmp_295 + 1) + tmp_315*(-tmp_301 - tmp_302 - tmp_304 - tmp_305 - tmp_306 - tmp_307 - tmp_309 - tmp_310 - tmp_311 + 1) + tmp_331*(-tmp_317 - tmp_318 - tmp_320 - tmp_321 - tmp_322 - tmp_323 - tmp_325 - tmp_326 - tmp_327 + 1) + tmp_347*(-tmp_333 - tmp_334 - tmp_336 - tmp_337 - tmp_338 - tmp_339 - tmp_341 - tmp_342 - tmp_343 + 1) + tmp_363*(-tmp_349 - tmp_350 - tmp_352 - tmp_353 - tmp_354 - tmp_355 - tmp_357 - tmp_358 - tmp_359 + 1) + tmp_379*(-tmp_365 - tmp_366 - tmp_368 - tmp_369 - tmp_370 - tmp_371 - tmp_373 - tmp_374 - tmp_375 + 1) + tmp_59*(-tmp_25 - tmp_27 - tmp_34 - tmp_36 - tmp_38 - tmp_40 - tmp_47 - tmp_49 - tmp_51 + 1) + tmp_75*(-tmp_61 - tmp_62 - tmp_64 - tmp_65 - tmp_66 - tmp_67 - tmp_69 - tmp_70 - tmp_71 + 1) + tmp_91*(-tmp_77 - tmp_78 - tmp_80 - tmp_81 - tmp_82 - tmp_83 - tmp_85 - tmp_86 - tmp_87 + 1);
      real_t a_1_0 = tmp_104*tmp_107 + tmp_120*tmp_123 + tmp_136*tmp_139 + tmp_152*tmp_155 + tmp_168*tmp_171 + tmp_184*tmp_187 + tmp_200*tmp_203 + tmp_216*tmp_219 + tmp_232*tmp_235 + tmp_248*tmp_251 + tmp_264*tmp_267 + tmp_280*tmp_283 + tmp_296*tmp_299 + tmp_312*tmp_315 + tmp_328*tmp_331 + tmp_344*tmp_347 + tmp_360*tmp_363 + tmp_376*tmp_379 + tmp_52*tmp_59 + tmp_72*tmp_75 + tmp_88*tmp_91;
      real_t a_2_0 = tmp_105*tmp_107 + tmp_121*tmp_123 + tmp_137*tmp_139 + tmp_153*tmp_155 + tmp_169*tmp_171 + tmp_185*tmp_187 + tmp_201*tmp_203 + tmp_217*tmp_219 + tmp_233*tmp_235 + tmp_249*tmp_251 + tmp_265*tmp_267 + tmp_281*tmp_283 + tmp_297*tmp_299 + tmp_313*tmp_315 + tmp_329*tmp_331 + tmp_345*tmp_347 + tmp_361*tmp_363 + tmp_377*tmp_379 + tmp_53*tmp_59 + tmp_73*tmp_75 + tmp_89*tmp_91;
      real_t a_3_0 = tmp_106*tmp_107 + tmp_122*tmp_123 + tmp_138*tmp_139 + tmp_154*tmp_155 + tmp_170*tmp_171 + tmp_186*tmp_187 + tmp_202*tmp_203 + tmp_218*tmp_219 + tmp_234*tmp_235 + tmp_250*tmp_251 + tmp_266*tmp_267 + tmp_282*tmp_283 + tmp_298*tmp_299 + tmp_314*tmp_315 + tmp_330*tmp_331 + tmp_346*tmp_347 + tmp_362*tmp_363 + tmp_378*tmp_379 + tmp_54*tmp_59 + tmp_74*tmp_75 + tmp_90*tmp_91;
      elMat( 0, 0) = a_0_0;
      elMat( 1, 0) = a_1_0;
      elMat( 2, 0) = a_2_0;
      elMat( 3, 0) = a_3_0;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};




class EGEpsilonFormEE : public hyteg::dg::DGForm
{
public:
EGEpsilonFormEE( std::function< real_t( const Point3D& ) > callback )
: callback2D( callback ), callback3D(callback)
{}

 protected:
  void integrateVolume2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                           const DGBasisInfo&                                       trialBasis,
                           const DGBasisInfo&                                       testBasis,
                           int                                                      trialDegree,
                           int                                                      testDegree,
                           Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coords[0]( 0 );
      const auto p_affine_0_1 = coords[0]( 1 );

      const auto p_affine_1_0 = coords[1]( 0 );
      const auto p_affine_1_1 = coords[1]( 1 );

      const auto p_affine_2_0 = coords[2]( 0 );
      const auto p_affine_2_1 = coords[2]( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id11 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502282*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.87382197101699555*p_affine_2_0, 0.063089014491502282*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.87382197101699555*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.50142650965817914*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.50142650965817914*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.063089014491502227*p_affine_0_0 + 0.87382197101699555*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.063089014491502227*p_affine_0_1 + 0.87382197101699555*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      Scalar_Variable_Coefficient_2D_mu( 0.24928674517091043*p_affine_0_0 + 0.50142650965817914*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.24928674517091043*p_affine_0_1 + 0.50142650965817914*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id5 );
      Scalar_Variable_Coefficient_2D_mu( 0.87382197101699566*p_affine_0_0 + 0.063089014491502227*p_affine_1_0 + 0.063089014491502227*p_affine_2_0, 0.87382197101699566*p_affine_0_1 + 0.063089014491502227*p_affine_1_1 + 0.063089014491502227*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id6 );
      Scalar_Variable_Coefficient_2D_mu( 0.50142650965817914*p_affine_0_0 + 0.24928674517091043*p_affine_1_0 + 0.24928674517091043*p_affine_2_0, 0.50142650965817914*p_affine_0_1 + 0.24928674517091043*p_affine_1_1 + 0.24928674517091043*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id7 );
      Scalar_Variable_Coefficient_2D_mu( 0.053145049844816938*p_affine_0_0 + 0.31035245103378439*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.053145049844816938*p_affine_0_1 + 0.31035245103378439*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id8 );
      Scalar_Variable_Coefficient_2D_mu( 0.63650249912139867*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.31035245103378439*p_affine_2_0, 0.63650249912139867*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.31035245103378439*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id9 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.63650249912139867*p_affine_1_0 + 0.053145049844816938*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.63650249912139867*p_affine_1_1 + 0.053145049844816938*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id10 );
      Scalar_Variable_Coefficient_2D_mu( 0.31035245103378439*p_affine_0_0 + 0.053145049844816938*p_affine_1_0 + 0.63650249912139867*p_affine_2_0, 0.31035245103378439*p_affine_0_1 + 0.053145049844816938*p_affine_1_1 + 0.63650249912139867*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id11 );
      real_t tmp_0 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_1 = -p_affine_0_0;
      real_t tmp_2 = p_affine_1_0 + tmp_1;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_2_0 + tmp_1;
      real_t tmp_7 = p_affine_1_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = 1.0*tmp_8;
      real_t tmp_10 = tmp_5*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = ((tmp_10 + tmp_11*tmp_6*tmp_9)*(tmp_10 + tmp_11*tmp_6*tmp_9));
      real_t tmp_13 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = ((tmp_10 + tmp_14*tmp_7*tmp_9)*(tmp_10 + tmp_14*tmp_7*tmp_9));
      real_t tmp_16 = tmp_2*tmp_8;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = 1.0*((tmp_11*tmp_17 + tmp_14*tmp_16 + tmp_16*tmp_6 + tmp_17*tmp_7)*(tmp_11*tmp_17 + tmp_14*tmp_16 + tmp_16*tmp_6 + tmp_17*tmp_7));
      real_t tmp_19 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id1;
      real_t tmp_20 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id2;
      real_t tmp_21 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id3;
      real_t tmp_22 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id4;
      real_t tmp_23 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id5;
      real_t tmp_24 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id6;
      real_t tmp_25 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id7;
      real_t tmp_26 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id8;
      real_t tmp_27 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id9;
      real_t tmp_28 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id10;
      real_t tmp_29 = 2*Scalar_Variable_Coefficient_2D_mu_out0_id11;
      real_t a_0_0 = 0.025422453185103409*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_18 + tmp_12*tmp_13 + tmp_13*tmp_15) + 0.058393137863189684*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_18 + tmp_12*tmp_19 + tmp_15*tmp_19) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id10*tmp_18 + tmp_12*tmp_28 + tmp_15*tmp_28) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id11*tmp_18 + tmp_12*tmp_29 + tmp_15*tmp_29) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_18 + tmp_12*tmp_20 + tmp_15*tmp_20) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_18 + tmp_12*tmp_21 + tmp_15*tmp_21) + 0.025422453185103409*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_18 + tmp_12*tmp_22 + tmp_15*tmp_22) + 0.058393137863189684*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id5*tmp_18 + tmp_12*tmp_23 + tmp_15*tmp_23) + 0.025422453185103409*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id6*tmp_18 + tmp_12*tmp_24 + tmp_15*tmp_24) + 0.058393137863189684*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id7*tmp_18 + tmp_12*tmp_25 + tmp_15*tmp_25) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id8*tmp_18 + tmp_12*tmp_26 + tmp_15*tmp_26) + 0.041425537809186785*tmp_0*(Scalar_Variable_Coefficient_2D_mu_out0_id9*tmp_18 + tmp_12*tmp_27 + tmp_15*tmp_27);
      elMat( 0, 0) = a_0_0;
   }

   virtual void integrateFacetInner2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                       const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                       const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                       const DGBasisInfo&                                       trialBasis,
                                       const DGBasisInfo&                                       testBasis,
                                       int                                                      trialDegree,
                                       int                                                      testDegree,
                                       Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_2_0 + tmp_0;
      real_t tmp_7 = p_affine_1_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + tmp_3;
      real_t tmp_11 = tmp_8*(tmp_10 + 0.046910077030668018*tmp_9);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + tmp_0;
      real_t tmp_14 = tmp_8*(0.046910077030668018*tmp_12 + tmp_13);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_4 - 1.0/3.0;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_1*tmp_11 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = tmp_1*tmp_15 + tmp_17*tmp_6;
      real_t tmp_19 = tmp_15*tmp_7 + tmp_17*tmp_4;
      real_t tmp_20 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_21 = 3/tmp_20;
      real_t tmp_22 = 1.0*tmp_8;
      real_t tmp_23 = tmp_22*tmp_5;
      real_t tmp_24 = 0.5*tmp_8;
      real_t tmp_25 = tmp_1*tmp_24;
      real_t tmp_26 = tmp_24*tmp_4;
      real_t tmp_27 = tmp_16*tmp_26 + tmp_2*tmp_25 + tmp_25*tmp_6 + tmp_26*tmp_7;
      real_t tmp_28 = 1.0*p_affine_10_0*(tmp_16*tmp_22*tmp_6 + tmp_23) + 1.0*p_affine_10_1*tmp_27;
      real_t tmp_29 = 1.0*p_affine_10_0*tmp_27 + 1.0*p_affine_10_1*(tmp_2*tmp_22*tmp_7 + tmp_23);
      real_t tmp_30 = 2*tmp_20;
      real_t tmp_31 = tmp_8*(tmp_10 + 0.23076534494715845*tmp_9);
      real_t tmp_32 = tmp_8*(0.23076534494715845*tmp_12 + tmp_13);
      real_t tmp_33 = tmp_2*tmp_31 + tmp_32*tmp_4 - 1.0/3.0;
      real_t tmp_34 = tmp_1*tmp_31 + tmp_16*tmp_32 - 1.0/3.0;
      real_t tmp_35 = tmp_1*tmp_33 + tmp_34*tmp_6;
      real_t tmp_36 = tmp_33*tmp_7 + tmp_34*tmp_4;
      real_t tmp_37 = tmp_8*(tmp_10 + 0.5*tmp_9);
      real_t tmp_38 = tmp_8*(0.5*tmp_12 + tmp_13);
      real_t tmp_39 = tmp_2*tmp_37 + tmp_38*tmp_4 - 1.0/3.0;
      real_t tmp_40 = tmp_1*tmp_37 + tmp_16*tmp_38 - 1.0/3.0;
      real_t tmp_41 = tmp_1*tmp_39 + tmp_40*tmp_6;
      real_t tmp_42 = tmp_39*tmp_7 + tmp_4*tmp_40;
      real_t tmp_43 = tmp_8*(tmp_10 + 0.7692346550528415*tmp_9);
      real_t tmp_44 = tmp_8*(0.7692346550528415*tmp_12 + tmp_13);
      real_t tmp_45 = tmp_2*tmp_43 + tmp_4*tmp_44 - 1.0/3.0;
      real_t tmp_46 = tmp_1*tmp_43 + tmp_16*tmp_44 - 1.0/3.0;
      real_t tmp_47 = tmp_1*tmp_45 + tmp_46*tmp_6;
      real_t tmp_48 = tmp_4*tmp_46 + tmp_45*tmp_7;
      real_t tmp_49 = tmp_8*(tmp_10 + 0.95308992296933193*tmp_9);
      real_t tmp_50 = tmp_8*(0.95308992296933193*tmp_12 + tmp_13);
      real_t tmp_51 = tmp_2*tmp_49 + tmp_4*tmp_50 - 1.0/3.0;
      real_t tmp_52 = tmp_1*tmp_49 + tmp_16*tmp_50 - 1.0/3.0;
      real_t tmp_53 = tmp_1*tmp_51 + tmp_52*tmp_6;
      real_t tmp_54 = tmp_4*tmp_52 + tmp_51*tmp_7;
      real_t a_0_0 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_30*(-tmp_18*tmp_28 - tmp_19*tmp_29 + tmp_21*((tmp_18*tmp_18) + (tmp_19*tmp_19))) + 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_30*(tmp_21*((tmp_35*tmp_35) + (tmp_36*tmp_36)) - tmp_28*tmp_35 - tmp_29*tmp_36) + 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_30*(tmp_21*((tmp_41*tmp_41) + (tmp_42*tmp_42)) - tmp_28*tmp_41 - tmp_29*tmp_42) + 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_30*(tmp_21*((tmp_47*tmp_47) + (tmp_48*tmp_48)) - tmp_28*tmp_47 - tmp_29*tmp_48) + 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_30*(tmp_21*((tmp_53*tmp_53) + (tmp_54*tmp_54)) - tmp_28*tmp_53 - tmp_29*tmp_54);
      elMat( 0, 0) = a_0_0;
   }

   virtual void integrateFacetCoupling2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementInner,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElementOuter,
                                          const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexInnerElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertexOuterElement,
                                          const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                          const DGBasisInfo&                                       trialBasis,
                                          const DGBasisInfo&                                       testBasis,
                                          int                                                      trialDegree,
                                          int                                                      testDegree,
                                          Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElementInner[0]( 0 );
      const auto p_affine_0_1 = coordsElementInner[0]( 1 );

      const auto p_affine_1_0 = coordsElementInner[1]( 0 );
      const auto p_affine_1_1 = coordsElementInner[1]( 1 );

      const auto p_affine_2_0 = coordsElementInner[2]( 0 );
      const auto p_affine_2_1 = coordsElementInner[2]( 1 );

      const auto p_affine_3_0 = coordsElementOuter[0]( 0 );
      const auto p_affine_3_1 = coordsElementOuter[0]( 1 );

      const auto p_affine_4_0 = coordsElementOuter[1]( 0 );
      const auto p_affine_4_1 = coordsElementOuter[1]( 1 );

      const auto p_affine_5_0 = coordsElementOuter[2]( 0 );
      const auto p_affine_5_1 = coordsElementOuter[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertexInnerElement( 0 );
      const auto p_affine_8_1 = oppositeVertexInnerElement( 1 );

      const auto p_affine_9_0 = oppositeVertexOuterElement( 0 );
      const auto p_affine_9_1 = oppositeVertexOuterElement( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_3_0;
      real_t tmp_1 = p_affine_4_0 + tmp_0;
      real_t tmp_2 = p_affine_3_0 - p_affine_5_0;
      real_t tmp_3 = -p_affine_3_1;
      real_t tmp_4 = p_affine_5_1 + tmp_3;
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = p_affine_5_0 + tmp_0;
      real_t tmp_7 = p_affine_4_1 + tmp_3;
      real_t tmp_8 = 1.0 / (tmp_5 - tmp_6*tmp_7);
      real_t tmp_9 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_10 = p_affine_6_1 + 0.046910077030668018*tmp_9;
      real_t tmp_11 = tmp_8*(tmp_10 + tmp_3);
      real_t tmp_12 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_13 = p_affine_6_0 + 0.046910077030668018*tmp_12;
      real_t tmp_14 = tmp_8*(tmp_0 + tmp_13);
      real_t tmp_15 = tmp_11*tmp_2 + tmp_14*tmp_4 - 1.0/3.0;
      real_t tmp_16 = p_affine_3_1 - p_affine_4_1;
      real_t tmp_17 = tmp_1*tmp_11 + tmp_14*tmp_16 - 1.0/3.0;
      real_t tmp_18 = tmp_1*tmp_15 + tmp_17*tmp_6;
      real_t tmp_19 = -p_affine_0_0;
      real_t tmp_20 = p_affine_1_0 + tmp_19;
      real_t tmp_21 = -p_affine_0_1;
      real_t tmp_22 = p_affine_2_1 + tmp_21;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = p_affine_2_0 + tmp_19;
      real_t tmp_25 = p_affine_1_1 + tmp_21;
      real_t tmp_26 = 1.0 / (tmp_23 - tmp_24*tmp_25);
      real_t tmp_27 = 1.0*tmp_26;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_30 = 0.5*tmp_26;
      real_t tmp_31 = tmp_20*tmp_30;
      real_t tmp_32 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_33 = tmp_22*tmp_30;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_25*tmp_33 + tmp_29*tmp_33 + tmp_31*tmp_32;
      real_t tmp_35 = 0.5*p_affine_10_0*(tmp_24*tmp_27*tmp_29 + tmp_28) + 0.5*p_affine_10_1*tmp_34;
      real_t tmp_36 = tmp_26*(tmp_10 + tmp_21);
      real_t tmp_37 = tmp_26*(tmp_13 + tmp_19);
      real_t tmp_38 = tmp_22*tmp_37 + tmp_32*tmp_36 - 1.0/3.0;
      real_t tmp_39 = tmp_20*tmp_36 + tmp_29*tmp_37 - 1.0/3.0;
      real_t tmp_40 = tmp_20*tmp_38 + tmp_24*tmp_39;
      real_t tmp_41 = 1.0*tmp_8;
      real_t tmp_42 = tmp_41*tmp_5;
      real_t tmp_43 = 0.5*tmp_8;
      real_t tmp_44 = tmp_1*tmp_43;
      real_t tmp_45 = tmp_4*tmp_43;
      real_t tmp_46 = tmp_16*tmp_45 + tmp_2*tmp_44 + tmp_44*tmp_6 + tmp_45*tmp_7;
      real_t tmp_47 = 0.5*p_affine_10_0*(tmp_16*tmp_41*tmp_6 + tmp_42) + 0.5*p_affine_10_1*tmp_46;
      real_t tmp_48 = tmp_15*tmp_7 + tmp_17*tmp_4;
      real_t tmp_49 = 0.5*p_affine_10_0*tmp_34 + 0.5*p_affine_10_1*(tmp_25*tmp_27*tmp_32 + tmp_28);
      real_t tmp_50 = tmp_22*tmp_39 + tmp_25*tmp_38;
      real_t tmp_51 = 0.5*p_affine_10_0*tmp_46 + 0.5*p_affine_10_1*(tmp_2*tmp_41*tmp_7 + tmp_42);
      real_t tmp_52 = std::abs(std::pow((tmp_12*tmp_12) + (tmp_9*tmp_9), 1.0/2.0));
      real_t tmp_53 = 3/tmp_52;
      real_t tmp_54 = 2*tmp_52;
      real_t tmp_55 = p_affine_6_1 + 0.23076534494715845*tmp_9;
      real_t tmp_56 = tmp_8*(tmp_3 + tmp_55);
      real_t tmp_57 = p_affine_6_0 + 0.23076534494715845*tmp_12;
      real_t tmp_58 = tmp_8*(tmp_0 + tmp_57);
      real_t tmp_59 = tmp_2*tmp_56 + tmp_4*tmp_58 - 1.0/3.0;
      real_t tmp_60 = tmp_1*tmp_56 + tmp_16*tmp_58 - 1.0/3.0;
      real_t tmp_61 = tmp_1*tmp_59 + tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*(tmp_21 + tmp_55);
      real_t tmp_63 = tmp_26*(tmp_19 + tmp_57);
      real_t tmp_64 = tmp_22*tmp_63 + tmp_32*tmp_62 - 1.0/3.0;
      real_t tmp_65 = tmp_20*tmp_62 + tmp_29*tmp_63 - 1.0/3.0;
      real_t tmp_66 = tmp_20*tmp_64 + tmp_24*tmp_65;
      real_t tmp_67 = tmp_4*tmp_60 + tmp_59*tmp_7;
      real_t tmp_68 = tmp_22*tmp_65 + tmp_25*tmp_64;
      real_t tmp_69 = p_affine_6_1 + 0.5*tmp_9;
      real_t tmp_70 = tmp_8*(tmp_3 + tmp_69);
      real_t tmp_71 = p_affine_6_0 + 0.5*tmp_12;
      real_t tmp_72 = tmp_8*(tmp_0 + tmp_71);
      real_t tmp_73 = tmp_2*tmp_70 + tmp_4*tmp_72 - 1.0/3.0;
      real_t tmp_74 = tmp_1*tmp_70 + tmp_16*tmp_72 - 1.0/3.0;
      real_t tmp_75 = tmp_1*tmp_73 + tmp_6*tmp_74;
      real_t tmp_76 = tmp_26*(tmp_21 + tmp_69);
      real_t tmp_77 = tmp_26*(tmp_19 + tmp_71);
      real_t tmp_78 = tmp_22*tmp_77 + tmp_32*tmp_76 - 1.0/3.0;
      real_t tmp_79 = tmp_20*tmp_76 + tmp_29*tmp_77 - 1.0/3.0;
      real_t tmp_80 = tmp_20*tmp_78 + tmp_24*tmp_79;
      real_t tmp_81 = tmp_4*tmp_74 + tmp_7*tmp_73;
      real_t tmp_82 = tmp_22*tmp_79 + tmp_25*tmp_78;
      real_t tmp_83 = p_affine_6_1 + 0.7692346550528415*tmp_9;
      real_t tmp_84 = tmp_8*(tmp_3 + tmp_83);
      real_t tmp_85 = p_affine_6_0 + 0.7692346550528415*tmp_12;
      real_t tmp_86 = tmp_8*(tmp_0 + tmp_85);
      real_t tmp_87 = tmp_2*tmp_84 + tmp_4*tmp_86 - 1.0/3.0;
      real_t tmp_88 = tmp_1*tmp_84 + tmp_16*tmp_86 - 1.0/3.0;
      real_t tmp_89 = tmp_1*tmp_87 + tmp_6*tmp_88;
      real_t tmp_90 = tmp_26*(tmp_21 + tmp_83);
      real_t tmp_91 = tmp_26*(tmp_19 + tmp_85);
      real_t tmp_92 = tmp_22*tmp_91 + tmp_32*tmp_90 - 1.0/3.0;
      real_t tmp_93 = tmp_20*tmp_90 + tmp_29*tmp_91 - 1.0/3.0;
      real_t tmp_94 = tmp_20*tmp_92 + tmp_24*tmp_93;
      real_t tmp_95 = tmp_4*tmp_88 + tmp_7*tmp_87;
      real_t tmp_96 = tmp_22*tmp_93 + tmp_25*tmp_92;
      real_t tmp_97 = p_affine_6_1 + 0.95308992296933193*tmp_9;
      real_t tmp_98 = tmp_8*(tmp_3 + tmp_97);
      real_t tmp_99 = p_affine_6_0 + 0.95308992296933193*tmp_12;
      real_t tmp_100 = tmp_8*(tmp_0 + tmp_99);
      real_t tmp_101 = tmp_100*tmp_4 + tmp_2*tmp_98 - 1.0/3.0;
      real_t tmp_102 = tmp_1*tmp_98 + tmp_100*tmp_16 - 1.0/3.0;
      real_t tmp_103 = tmp_1*tmp_101 + tmp_102*tmp_6;
      real_t tmp_104 = tmp_26*(tmp_21 + tmp_97);
      real_t tmp_105 = tmp_26*(tmp_19 + tmp_99);
      real_t tmp_106 = tmp_104*tmp_32 + tmp_105*tmp_22 - 1.0/3.0;
      real_t tmp_107 = tmp_104*tmp_20 + tmp_105*tmp_29 - 1.0/3.0;
      real_t tmp_108 = tmp_106*tmp_20 + tmp_107*tmp_24;
      real_t tmp_109 = tmp_101*tmp_7 + tmp_102*tmp_4;
      real_t tmp_110 = tmp_106*tmp_25 + tmp_107*tmp_22;
      real_t a_0_0 = 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_54*(tmp_18*tmp_35 - tmp_40*tmp_47 + tmp_48*tmp_49 - tmp_50*tmp_51 - tmp_53*(tmp_18*tmp_40 + tmp_48*tmp_50)) + 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_54*(tmp_35*tmp_61 - tmp_47*tmp_66 + tmp_49*tmp_67 - tmp_51*tmp_68 - tmp_53*(tmp_61*tmp_66 + tmp_67*tmp_68)) + 0.2844444444444445*Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_54*(tmp_35*tmp_75 - tmp_47*tmp_80 + tmp_49*tmp_81 - tmp_51*tmp_82 - tmp_53*(tmp_75*tmp_80 + tmp_81*tmp_82)) + 0.2393143352496831*Scalar_Variable_Coefficient_2D_mu_out0_id3*tmp_54*(tmp_35*tmp_89 - tmp_47*tmp_94 + tmp_49*tmp_95 - tmp_51*tmp_96 - tmp_53*(tmp_89*tmp_94 + tmp_95*tmp_96)) + 0.11846344252809471*Scalar_Variable_Coefficient_2D_mu_out0_id4*tmp_54*(tmp_103*tmp_35 - tmp_108*tmp_47 + tmp_109*tmp_49 - tmp_110*tmp_51 - tmp_53*(tmp_103*tmp_108 + tmp_109*tmp_110));
      elMat( 0, 0) = a_0_0;
   };

   virtual void integrateFacetDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                   const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                   const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                   const DGBasisInfo&                                       trialBasis,
                                                   const DGBasisInfo&                                       testBasis,
                                                   int                                                      trialDegree,
                                                   int                                                      testDegree,
                                                   Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
   {
      elMat.resize( testBasis.numDoFsPerElement( 2, testDegree ),
                   trialBasis.numDoFsPerElement( 2, trialDegree ) );

      const auto p_affine_0_0 = coordsElement[0]( 0 );
      const auto p_affine_0_1 = coordsElement[0]( 1 );

      const auto p_affine_1_0 = coordsElement[1]( 0 );
      const auto p_affine_1_1 = coordsElement[1]( 1 );

      const auto p_affine_2_0 = coordsElement[2]( 0 );
      const auto p_affine_2_1 = coordsElement[2]( 1 );

      const auto p_affine_6_0 = coordsFacet[0]( 0 );
      const auto p_affine_6_1 = coordsFacet[0]( 1 );

      const auto p_affine_7_0 = coordsFacet[1]( 0 );
      const auto p_affine_7_1 = coordsFacet[1]( 1 );

      const auto p_affine_8_0 = oppositeVertex( 0 );
      const auto p_affine_8_1 = oppositeVertex( 1 );

      const auto p_affine_10_0 = outwardNormal( 0 );
      const auto p_affine_10_1 = outwardNormal( 1 );

      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id4 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.95308992296933193*p_affine_6_0 + 0.046910077030668018*p_affine_7_0, 0.95308992296933193*p_affine_6_1 + 0.046910077030668018*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.7692346550528415*p_affine_6_0 + 0.23076534494715845*p_affine_7_0, 0.7692346550528415*p_affine_6_1 + 0.23076534494715845*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.5*p_affine_6_0 + 0.5*p_affine_7_0, 0.5*p_affine_6_1 + 0.5*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      Scalar_Variable_Coefficient_2D_mu( 0.2307653449471585*p_affine_6_0 + 0.7692346550528415*p_affine_7_0, 0.2307653449471585*p_affine_6_1 + 0.7692346550528415*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id3 );
      Scalar_Variable_Coefficient_2D_mu( 0.046910077030668074*p_affine_6_0 + 0.95308992296933193*p_affine_7_0, 0.046910077030668074*p_affine_6_1 + 0.95308992296933193*p_affine_7_1, &Scalar_Variable_Coefficient_2D_mu_out0_id4 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_2_1 + tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_3;
      real_t tmp_7 = 1.0 / (tmp_1*tmp_4 - tmp_5*tmp_6);
      real_t tmp_8 = -p_affine_6_1 + p_affine_7_1;
      real_t tmp_9 = p_affine_6_1 + tmp_3;
      real_t tmp_10 = tmp_7*(0.046910077030668018*tmp_8 + tmp_9);
      real_t tmp_11 = -p_affine_6_0 + p_affine_7_0;
      real_t tmp_12 = p_affine_6_0 + tmp_0;
      real_t tmp_13 = tmp_7*(0.046910077030668018*tmp_11 + tmp_12);
      real_t tmp_14 = tmp_10*tmp_2 + tmp_13*tmp_4 - 1.0/3.0;
      real_t tmp_15 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_16 = tmp_1*tmp_10 + tmp_13*tmp_15 - 1.0/3.0;
      real_t tmp_17 = tmp_7*(0.23076534494715845*tmp_8 + tmp_9);
      real_t tmp_18 = tmp_7*(0.23076534494715845*tmp_11 + tmp_12);
      real_t tmp_19 = tmp_17*tmp_2 + tmp_18*tmp_4 - 1.0/3.0;
      real_t tmp_20 = tmp_1*tmp_17 + tmp_15*tmp_18 - 1.0/3.0;
      real_t tmp_21 = tmp_7*(0.5*tmp_8 + tmp_9);
      real_t tmp_22 = tmp_7*(0.5*tmp_11 + tmp_12);
      real_t tmp_23 = tmp_2*tmp_21 + tmp_22*tmp_4 - 1.0/3.0;
      real_t tmp_24 = tmp_1*tmp_21 + tmp_15*tmp_22 - 1.0/3.0;
      real_t tmp_25 = tmp_7*(0.7692346550528415*tmp_8 + tmp_9);
      real_t tmp_26 = tmp_7*(0.7692346550528415*tmp_11 + tmp_12);
      real_t tmp_27 = tmp_2*tmp_25 + tmp_26*tmp_4 - 1.0/3.0;
      real_t tmp_28 = tmp_1*tmp_25 + tmp_15*tmp_26 - 1.0/3.0;
      real_t tmp_29 = tmp_7*(0.95308992296933193*tmp_8 + tmp_9);
      real_t tmp_30 = tmp_7*(0.95308992296933193*tmp_11 + tmp_12);
      real_t tmp_31 = tmp_2*tmp_29 + tmp_30*tmp_4 - 1.0/3.0;
      real_t tmp_32 = tmp_1*tmp_29 + tmp_15*tmp_30 - 1.0/3.0;
      real_t a_0_0 = 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id0*(((tmp_1*tmp_14 + tmp_16*tmp_5)*(tmp_1*tmp_14 + tmp_16*tmp_5)) + ((tmp_14*tmp_6 + tmp_16*tmp_4)*(tmp_14*tmp_6 + tmp_16*tmp_4))) + 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id1*(((tmp_1*tmp_19 + tmp_20*tmp_5)*(tmp_1*tmp_19 + tmp_20*tmp_5)) + ((tmp_19*tmp_6 + tmp_20*tmp_4)*(tmp_19*tmp_6 + tmp_20*tmp_4))) + 1.706666666666667*Scalar_Variable_Coefficient_2D_mu_out0_id2*(((tmp_1*tmp_23 + tmp_24*tmp_5)*(tmp_1*tmp_23 + tmp_24*tmp_5)) + ((tmp_23*tmp_6 + tmp_24*tmp_4)*(tmp_23*tmp_6 + tmp_24*tmp_4))) + 1.4358860114980985*Scalar_Variable_Coefficient_2D_mu_out0_id3*(((tmp_1*tmp_27 + tmp_28*tmp_5)*(tmp_1*tmp_27 + tmp_28*tmp_5)) + ((tmp_27*tmp_6 + tmp_28*tmp_4)*(tmp_27*tmp_6 + tmp_28*tmp_4))) + 0.71078065516856825*Scalar_Variable_Coefficient_2D_mu_out0_id4*(((tmp_1*tmp_31 + tmp_32*tmp_5)*(tmp_1*tmp_31 + tmp_32*tmp_5)) + ((tmp_31*tmp_6 + tmp_32*tmp_4)*(tmp_31*tmp_6 + tmp_32*tmp_4)));
      elMat( 0, 0) = a_0_0;
   }

   void integrateRHSDirichletBoundary2D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateRHSDirichletBoundary3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsElement,
                                                 const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coordsFacet,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     oppositeVertex,
                                                 const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                 const DGBasisInfo&                                       basis,
                                                 int                                                      degree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const override
   {
      WALBERLA_UNUSED( coordsElement );
      WALBERLA_UNUSED( coordsFacet );
      WALBERLA_UNUSED( oppositeVertex );
      WALBERLA_UNUSED( outwardNormal );
      WALBERLA_UNUSED( basis );
      WALBERLA_UNUSED( degree );
      WALBERLA_UNUSED( elMat );

      // Does nothing.
   }
   void integrateVolume3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >&      coords,
                                                 const DGBasisInfo&                                       trialBasis,
                                                 const DGBasisInfo&                                       testBasis,
                                                 int                                                      trialDegree,
                                                 int                                                      testDegree,
                                                 Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coords[0]( 0 );
   const auto p_affine_0_1 = coords[0]( 1 );
   const auto p_affine_0_2 = coords[0]( 2 );

   const auto p_affine_1_0 = coords[1]( 0 );
   const auto p_affine_1_1 = coords[1]( 1 );
   const auto p_affine_1_2 = coords[1]( 2 );

   const auto p_affine_2_0 = coords[2]( 0 );
   const auto p_affine_2_1 = coords[2]( 1 );
   const auto p_affine_2_2 = coords[2]( 2 );

   const auto p_affine_3_0 = coords[3]( 0 );
   const auto p_affine_3_1 = coords[3]( 1 );
   const auto p_affine_3_2 = coords[3]( 2 );

      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id21 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id22 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id23 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id24 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id25 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id26 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id27 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id28 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id29 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id30 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id31 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id32 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id33 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id34 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id35 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id36 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id37 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id38 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id39 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id40 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id41 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id42 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id43 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id44 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id45 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221098*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.67614182511336729*p_affine_3_0, 0.10795272496221098*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.67614182511336729*p_affine_3_1, 0.10795272496221098*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.67614182511336729*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258651*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.44467153665224024*p_affine_3_0, 0.18510948778258651*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.44467153665224024*p_affine_3_1, 0.18510948778258651*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.44467153665224024*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767338*p_affine_0_0 + 0.8730503689456981*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767338*p_affine_0_1 + 0.8730503689456981*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767338*p_affine_0_2 + 0.8730503689456981*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.057454872627883069*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.057454872627883069*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.057454872627883069*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.6761418251133674*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.6761418251133674*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.6761418251133674*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.44467153665224013*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.44467153665224013*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.44467153665224013*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.87305036894569832*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.87305036894569832*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.87305036894569832*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.057454872627883069*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.057454872627883069*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.057454872627883069*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.064408671416169794*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.064408671416169794*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.064408671416169794*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.43559132858383021*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.43559132858383021*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.43559132858383021*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767449*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.042316543684767283*p_affine_2_0 + 0.8730503689456981*p_affine_3_0, 0.042316543684767449*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.042316543684767283*p_affine_2_1 + 0.8730503689456981*p_affine_3_1, 0.042316543684767449*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.042316543684767283*p_affine_2_2 + 0.8730503689456981*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.43559132858383021*p_affine_1_0 + 0.064408671416169794*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.43559132858383021*p_affine_1_1 + 0.064408671416169794*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.43559132858383021*p_affine_1_2 + 0.064408671416169794*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.064408671416169794*p_affine_0_0 + 0.064408671416169794*p_affine_1_0 + 0.43559132858383021*p_affine_2_0 + 0.43559132858383021*p_affine_3_0, 0.064408671416169794*p_affine_0_1 + 0.064408671416169794*p_affine_1_1 + 0.43559132858383021*p_affine_2_1 + 0.43559132858383021*p_affine_3_1, 0.064408671416169794*p_affine_0_2 + 0.064408671416169794*p_affine_1_2 + 0.43559132858383021*p_affine_2_2 + 0.43559132858383021*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.23966807631943055*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.23966807631943055*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.23966807631943055*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.0079239539457973684*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.0079239539457973684*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.0079239539457973684*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id21 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id22 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.31418170912403898*p_affine_2_0 + 0.057454872627883069*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.31418170912403898*p_affine_2_1 + 0.057454872627883069*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.31418170912403898*p_affine_2_2 + 0.057454872627883069*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id23 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id24 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id25 );
      Scalar_Variable_Coefficient_3D_mu( 0.71746406342630831*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.71746406342630831*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.71746406342630831*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id26 );
      Scalar_Variable_Coefficient_3D_mu( 0.5837973783021444*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.5837973783021444*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.5837973783021444*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id27 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.23966807631943055*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.23966807631943055*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.23966807631943055*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id28 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.0079239539457973684*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.0079239539457973684*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.0079239539457973684*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id29 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130574*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.021433930127130574*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.021433930127130574*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id30 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602912*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.20413933387602912*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.20413933387602912*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id31 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.71746406342630831*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.71746406342630831*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.71746406342630831*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id32 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973684*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.5837973783021444*p_affine_3_0, 0.0079239539457973684*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.5837973783021444*p_affine_3_1, 0.0079239539457973684*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.5837973783021444*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id33 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221095*p_affine_0_0 + 0.10795272496221089*p_affine_1_0 + 0.67614182511336729*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221095*p_affine_0_1 + 0.10795272496221089*p_affine_1_1 + 0.67614182511336729*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221095*p_affine_0_2 + 0.10795272496221089*p_affine_1_2 + 0.67614182511336729*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id34 );
      Scalar_Variable_Coefficient_3D_mu( 0.021433930127130577*p_affine_0_0 + 0.23966807631943055*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.021433930127130577*p_affine_0_1 + 0.23966807631943055*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.021433930127130577*p_affine_0_2 + 0.23966807631943055*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id35 );
      Scalar_Variable_Coefficient_3D_mu( 0.20413933387602914*p_affine_0_0 + 0.0079239539457973684*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.20413933387602914*p_affine_0_1 + 0.0079239539457973684*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.20413933387602914*p_affine_0_2 + 0.0079239539457973684*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id36 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.02143393012713057*p_affine_1_0 + 0.71746406342630831*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.02143393012713057*p_affine_1_1 + 0.71746406342630831*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.02143393012713057*p_affine_1_2 + 0.71746406342630831*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id37 );
      Scalar_Variable_Coefficient_3D_mu( 0.0079239539457973962*p_affine_0_0 + 0.20413933387602909*p_affine_1_0 + 0.5837973783021444*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.0079239539457973962*p_affine_0_1 + 0.20413933387602909*p_affine_1_1 + 0.5837973783021444*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.0079239539457973962*p_affine_0_2 + 0.20413933387602909*p_affine_1_2 + 0.5837973783021444*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id38 );
      Scalar_Variable_Coefficient_3D_mu( 0.23966807631943055*p_affine_0_0 + 0.71746406342630831*p_affine_1_0 + 0.02143393012713057*p_affine_2_0 + 0.02143393012713057*p_affine_3_0, 0.23966807631943055*p_affine_0_1 + 0.71746406342630831*p_affine_1_1 + 0.02143393012713057*p_affine_2_1 + 0.02143393012713057*p_affine_3_1, 0.23966807631943055*p_affine_0_2 + 0.71746406342630831*p_affine_1_2 + 0.02143393012713057*p_affine_2_2 + 0.02143393012713057*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id39 );
      Scalar_Variable_Coefficient_3D_mu( 0.007923953945797424*p_affine_0_0 + 0.5837973783021444*p_affine_1_0 + 0.20413933387602909*p_affine_2_0 + 0.20413933387602909*p_affine_3_0, 0.007923953945797424*p_affine_0_1 + 0.5837973783021444*p_affine_1_1 + 0.20413933387602909*p_affine_2_1 + 0.20413933387602909*p_affine_3_1, 0.007923953945797424*p_affine_0_2 + 0.5837973783021444*p_affine_1_2 + 0.20413933387602909*p_affine_2_2 + 0.20413933387602909*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id40 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.1851094877825866*p_affine_1_0 + 0.44467153665224024*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.1851094877825866*p_affine_1_1 + 0.44467153665224024*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.1851094877825866*p_affine_1_2 + 0.44467153665224024*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id41 );
      Scalar_Variable_Coefficient_3D_mu( 0.042316543684767394*p_affine_0_0 + 0.042316543684767283*p_affine_1_0 + 0.8730503689456981*p_affine_2_0 + 0.042316543684767283*p_affine_3_0, 0.042316543684767394*p_affine_0_1 + 0.042316543684767283*p_affine_1_1 + 0.8730503689456981*p_affine_2_1 + 0.042316543684767283*p_affine_3_1, 0.042316543684767394*p_affine_0_2 + 0.042316543684767283*p_affine_1_2 + 0.8730503689456981*p_affine_2_2 + 0.042316543684767283*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id42 );
      Scalar_Variable_Coefficient_3D_mu( 0.31418170912403898*p_affine_0_0 + 0.31418170912403898*p_affine_1_0 + 0.057454872627883069*p_affine_2_0 + 0.31418170912403898*p_affine_3_0, 0.31418170912403898*p_affine_0_1 + 0.31418170912403898*p_affine_1_1 + 0.057454872627883069*p_affine_2_1 + 0.31418170912403898*p_affine_3_1, 0.31418170912403898*p_affine_0_2 + 0.31418170912403898*p_affine_1_2 + 0.057454872627883069*p_affine_2_2 + 0.31418170912403898*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id43 );
      Scalar_Variable_Coefficient_3D_mu( 0.10795272496221092*p_affine_0_0 + 0.67614182511336729*p_affine_1_0 + 0.10795272496221089*p_affine_2_0 + 0.10795272496221089*p_affine_3_0, 0.10795272496221092*p_affine_0_1 + 0.67614182511336729*p_affine_1_1 + 0.10795272496221089*p_affine_2_1 + 0.10795272496221089*p_affine_3_1, 0.10795272496221092*p_affine_0_2 + 0.67614182511336729*p_affine_1_2 + 0.10795272496221089*p_affine_2_2 + 0.10795272496221089*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id44 );
      Scalar_Variable_Coefficient_3D_mu( 0.18510948778258654*p_affine_0_0 + 0.44467153665224024*p_affine_1_0 + 0.1851094877825866*p_affine_2_0 + 0.1851094877825866*p_affine_3_0, 0.18510948778258654*p_affine_0_1 + 0.44467153665224024*p_affine_1_1 + 0.1851094877825866*p_affine_2_1 + 0.1851094877825866*p_affine_3_1, 0.18510948778258654*p_affine_0_2 + 0.44467153665224024*p_affine_1_2 + 0.1851094877825866*p_affine_2_2 + 0.1851094877825866*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id45 );
      real_t tmp_0 = p_affine_0_0*p_affine_1_1;
      real_t tmp_1 = p_affine_0_0*p_affine_1_2;
      real_t tmp_2 = p_affine_2_1*p_affine_3_2;
      real_t tmp_3 = p_affine_0_1*p_affine_1_0;
      real_t tmp_4 = p_affine_0_1*p_affine_1_2;
      real_t tmp_5 = p_affine_2_2*p_affine_3_0;
      real_t tmp_6 = p_affine_0_2*p_affine_1_0;
      real_t tmp_7 = p_affine_0_2*p_affine_1_1;
      real_t tmp_8 = p_affine_2_0*p_affine_3_1;
      real_t tmp_9 = p_affine_2_2*p_affine_3_1;
      real_t tmp_10 = p_affine_2_0*p_affine_3_2;
      real_t tmp_11 = p_affine_2_1*p_affine_3_0;
      real_t tmp_12 = std::abs(p_affine_0_0*tmp_2 - p_affine_0_0*tmp_9 - p_affine_0_1*tmp_10 + p_affine_0_1*tmp_5 - p_affine_0_2*tmp_11 + p_affine_0_2*tmp_8 - p_affine_1_0*tmp_2 + p_affine_1_0*tmp_9 + p_affine_1_1*tmp_10 - p_affine_1_1*tmp_5 + p_affine_1_2*tmp_11 - p_affine_1_2*tmp_8 + p_affine_2_0*tmp_4 - p_affine_2_0*tmp_7 - p_affine_2_1*tmp_1 + p_affine_2_1*tmp_6 + p_affine_2_2*tmp_0 - p_affine_2_2*tmp_3 - p_affine_3_0*tmp_4 + p_affine_3_0*tmp_7 + p_affine_3_1*tmp_1 - p_affine_3_1*tmp_6 - p_affine_3_2*tmp_0 + p_affine_3_2*tmp_3);
      real_t tmp_13 = -p_affine_0_1;
      real_t tmp_14 = p_affine_2_1 + tmp_13;
      real_t tmp_15 = -p_affine_0_2;
      real_t tmp_16 = p_affine_3_2 + tmp_15;
      real_t tmp_17 = tmp_14*tmp_16;
      real_t tmp_18 = p_affine_3_1 + tmp_13;
      real_t tmp_19 = p_affine_2_2 + tmp_15;
      real_t tmp_20 = tmp_18*tmp_19;
      real_t tmp_21 = tmp_17 - tmp_20;
      real_t tmp_22 = -p_affine_0_0;
      real_t tmp_23 = p_affine_1_0 + tmp_22;
      real_t tmp_24 = p_affine_2_0 + tmp_22;
      real_t tmp_25 = p_affine_1_2 + tmp_15;
      real_t tmp_26 = tmp_18*tmp_25;
      real_t tmp_27 = p_affine_3_0 + tmp_22;
      real_t tmp_28 = p_affine_1_1 + tmp_13;
      real_t tmp_29 = tmp_19*tmp_28;
      real_t tmp_30 = tmp_16*tmp_28;
      real_t tmp_31 = tmp_14*tmp_25;
      real_t tmp_32 = 1.0 / (tmp_17*tmp_23 - tmp_20*tmp_23 + tmp_24*tmp_26 - tmp_24*tmp_30 + tmp_27*tmp_29 - tmp_27*tmp_31);
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_26 - tmp_30;
      real_t tmp_35 = tmp_24*tmp_32;
      real_t tmp_36 = tmp_29 - tmp_31;
      real_t tmp_37 = tmp_27*tmp_32;
      real_t tmp_38 = ((1.0*tmp_21*tmp_33 + 1.0*tmp_34*tmp_35 + 1.0*tmp_36*tmp_37)*(1.0*tmp_21*tmp_33 + 1.0*tmp_34*tmp_35 + 1.0*tmp_36*tmp_37));
      real_t tmp_39 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_40 = -tmp_16*tmp_24 + tmp_19*tmp_27;
      real_t tmp_41 = tmp_28*tmp_32;
      real_t tmp_42 = tmp_16*tmp_23 - tmp_25*tmp_27;
      real_t tmp_43 = tmp_14*tmp_32;
      real_t tmp_44 = -tmp_19*tmp_23 + tmp_24*tmp_25;
      real_t tmp_45 = tmp_18*tmp_32;
      real_t tmp_46 = ((1.0*tmp_40*tmp_41 + 1.0*tmp_42*tmp_43 + 1.0*tmp_44*tmp_45)*(1.0*tmp_40*tmp_41 + 1.0*tmp_42*tmp_43 + 1.0*tmp_44*tmp_45));
      real_t tmp_47 = -tmp_14*tmp_27 + tmp_18*tmp_24;
      real_t tmp_48 = tmp_25*tmp_32;
      real_t tmp_49 = -tmp_18*tmp_23 + tmp_27*tmp_28;
      real_t tmp_50 = tmp_19*tmp_32;
      real_t tmp_51 = tmp_14*tmp_23 - tmp_24*tmp_28;
      real_t tmp_52 = tmp_16*tmp_32;
      real_t tmp_53 = ((1.0*tmp_47*tmp_48 + 1.0*tmp_49*tmp_50 + 1.0*tmp_51*tmp_52)*(1.0*tmp_47*tmp_48 + 1.0*tmp_49*tmp_50 + 1.0*tmp_51*tmp_52));
      real_t tmp_54 = tmp_21*tmp_32;
      real_t tmp_55 = tmp_32*tmp_34;
      real_t tmp_56 = tmp_32*tmp_36;
      real_t tmp_57 = ((tmp_16*tmp_56 + tmp_19*tmp_55 + tmp_25*tmp_54 + tmp_33*tmp_47 + tmp_35*tmp_49 + tmp_37*tmp_51)*(tmp_16*tmp_56 + tmp_19*tmp_55 + tmp_25*tmp_54 + tmp_33*tmp_47 + tmp_35*tmp_49 + tmp_37*tmp_51));
      real_t tmp_58 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_59 = ((tmp_14*tmp_55 + tmp_18*tmp_56 + tmp_28*tmp_54 + tmp_33*tmp_40 + tmp_35*tmp_42 + tmp_37*tmp_44)*(tmp_14*tmp_55 + tmp_18*tmp_56 + tmp_28*tmp_54 + tmp_33*tmp_40 + tmp_35*tmp_42 + tmp_37*tmp_44));
      real_t tmp_60 = ((tmp_40*tmp_48 + tmp_41*tmp_47 + tmp_42*tmp_50 + tmp_43*tmp_49 + tmp_44*tmp_52 + tmp_45*tmp_51)*(tmp_40*tmp_48 + tmp_41*tmp_47 + tmp_42*tmp_50 + tmp_43*tmp_49 + tmp_44*tmp_52 + tmp_45*tmp_51));
      real_t tmp_61 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_62 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_63 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_64 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_65 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_66 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_67 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_68 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id4;
      real_t tmp_69 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_70 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id5;
      real_t tmp_71 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_72 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id6;
      real_t tmp_73 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_74 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id7;
      real_t tmp_75 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_76 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id8;
      real_t tmp_77 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id9;
      real_t tmp_79 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_80 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id10;
      real_t tmp_81 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_82 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id11;
      real_t tmp_83 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_84 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id12;
      real_t tmp_85 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_86 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id13;
      real_t tmp_87 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_88 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id14;
      real_t tmp_89 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_90 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id15;
      real_t tmp_91 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_92 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id16;
      real_t tmp_93 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_94 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id17;
      real_t tmp_95 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_96 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id18;
      real_t tmp_97 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_98 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id19;
      real_t tmp_99 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_100 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id20;
      real_t tmp_101 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_102 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id21;
      real_t tmp_103 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_104 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id22;
      real_t tmp_105 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_106 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id23;
      real_t tmp_107 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_108 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id24;
      real_t tmp_109 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_110 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id25;
      real_t tmp_111 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_112 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id26;
      real_t tmp_113 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_114 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id27;
      real_t tmp_115 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_116 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id28;
      real_t tmp_117 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_118 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id29;
      real_t tmp_119 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_120 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id30;
      real_t tmp_121 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_122 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id31;
      real_t tmp_123 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_124 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id32;
      real_t tmp_125 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_126 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id33;
      real_t tmp_127 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_128 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id34;
      real_t tmp_129 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_130 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id35;
      real_t tmp_131 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_132 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id36;
      real_t tmp_133 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_134 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id37;
      real_t tmp_135 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_136 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id38;
      real_t tmp_137 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_138 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id39;
      real_t tmp_139 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_140 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id40;
      real_t tmp_141 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_142 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id41;
      real_t tmp_143 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_144 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id42;
      real_t tmp_145 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_146 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id43;
      real_t tmp_147 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_148 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id44;
      real_t tmp_149 = 2*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t tmp_150 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id45;
      real_t a_0_0 = 0.0025755810251600563*tmp_12*(tmp_100*tmp_57 + tmp_100*tmp_59 + tmp_100*tmp_60 + tmp_38*tmp_99 + tmp_46*tmp_99 + tmp_53*tmp_99) + 0.0011928171484740719*tmp_12*(tmp_101*tmp_38 + tmp_101*tmp_46 + tmp_101*tmp_53 + tmp_102*tmp_57 + tmp_102*tmp_59 + tmp_102*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_103*tmp_38 + tmp_103*tmp_46 + tmp_103*tmp_53 + tmp_104*tmp_57 + tmp_104*tmp_59 + tmp_104*tmp_60) + 0.0069606304761558151*tmp_12*(tmp_105*tmp_38 + tmp_105*tmp_46 + tmp_105*tmp_53 + tmp_106*tmp_57 + tmp_106*tmp_59 + tmp_106*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_107*tmp_38 + tmp_107*tmp_46 + tmp_107*tmp_53 + tmp_108*tmp_57 + tmp_108*tmp_59 + tmp_108*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_109*tmp_38 + tmp_109*tmp_46 + tmp_109*tmp_53 + tmp_110*tmp_57 + tmp_110*tmp_59 + tmp_110*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_111*tmp_38 + tmp_111*tmp_46 + tmp_111*tmp_53 + tmp_112*tmp_57 + tmp_112*tmp_59 + tmp_112*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_113*tmp_38 + tmp_113*tmp_46 + tmp_113*tmp_53 + tmp_114*tmp_57 + tmp_114*tmp_59 + tmp_114*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_115*tmp_38 + tmp_115*tmp_46 + tmp_115*tmp_53 + tmp_116*tmp_57 + tmp_116*tmp_59 + tmp_116*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_117*tmp_38 + tmp_117*tmp_46 + tmp_117*tmp_53 + tmp_118*tmp_57 + tmp_118*tmp_59 + tmp_118*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_119*tmp_38 + tmp_119*tmp_46 + tmp_119*tmp_53 + tmp_120*tmp_57 + tmp_120*tmp_59 + tmp_120*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_121*tmp_38 + tmp_121*tmp_46 + tmp_121*tmp_53 + tmp_122*tmp_57 + tmp_122*tmp_59 + tmp_122*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_123*tmp_38 + tmp_123*tmp_46 + tmp_123*tmp_53 + tmp_124*tmp_57 + tmp_124*tmp_59 + tmp_124*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_125*tmp_38 + tmp_125*tmp_46 + tmp_125*tmp_53 + tmp_126*tmp_57 + tmp_126*tmp_59 + tmp_126*tmp_60) + 0.0044044418180681378*tmp_12*(tmp_127*tmp_38 + tmp_127*tmp_46 + tmp_127*tmp_53 + tmp_128*tmp_57 + tmp_128*tmp_59 + tmp_128*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_129*tmp_38 + tmp_129*tmp_46 + tmp_129*tmp_53 + tmp_130*tmp_57 + tmp_130*tmp_59 + tmp_130*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_131*tmp_38 + tmp_131*tmp_46 + tmp_131*tmp_53 + tmp_132*tmp_57 + tmp_132*tmp_59 + tmp_132*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_133*tmp_38 + tmp_133*tmp_46 + tmp_133*tmp_53 + tmp_134*tmp_57 + tmp_134*tmp_59 + tmp_134*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_135*tmp_38 + tmp_135*tmp_46 + tmp_135*tmp_53 + tmp_136*tmp_57 + tmp_136*tmp_59 + tmp_136*tmp_60) + 0.0011928171484740719*tmp_12*(tmp_137*tmp_38 + tmp_137*tmp_46 + tmp_137*tmp_53 + tmp_138*tmp_57 + tmp_138*tmp_59 + tmp_138*tmp_60) + 0.0025755810251600563*tmp_12*(tmp_139*tmp_38 + tmp_139*tmp_46 + tmp_139*tmp_53 + tmp_140*tmp_57 + tmp_140*tmp_59 + tmp_140*tmp_60) + 0.0086719579272897529*tmp_12*(tmp_141*tmp_38 + tmp_141*tmp_46 + tmp_141*tmp_53 + tmp_142*tmp_57 + tmp_142*tmp_59 + tmp_142*tmp_60) + 0.0012542093589233661*tmp_12*(tmp_143*tmp_38 + tmp_143*tmp_46 + tmp_143*tmp_53 + tmp_144*tmp_57 + tmp_144*tmp_59 + tmp_144*tmp_60) + 0.0069606304761558151*tmp_12*(tmp_145*tmp_38 + tmp_145*tmp_46 + tmp_145*tmp_53 + tmp_146*tmp_57 + tmp_146*tmp_59 + tmp_146*tmp_60) + 0.0044044418180681378*tmp_12*(tmp_147*tmp_38 + tmp_147*tmp_46 + tmp_147*tmp_53 + tmp_148*tmp_57 + tmp_148*tmp_59 + tmp_148*tmp_60) + 0.0086719579272897529*tmp_12*(tmp_149*tmp_38 + tmp_149*tmp_46 + tmp_149*tmp_53 + tmp_150*tmp_57 + tmp_150*tmp_59 + tmp_150*tmp_60) + 0.0044044418180681378*tmp_12*(tmp_38*tmp_39 + tmp_39*tmp_46 + tmp_39*tmp_53 + tmp_57*tmp_58 + tmp_58*tmp_59 + tmp_58*tmp_60) + 0.0086719579272897529*tmp_12*(tmp_38*tmp_61 + tmp_46*tmp_61 + tmp_53*tmp_61 + tmp_57*tmp_62 + tmp_59*tmp_62 + tmp_60*tmp_62) + 0.0012542093589233661*tmp_12*(tmp_38*tmp_63 + tmp_46*tmp_63 + tmp_53*tmp_63 + tmp_57*tmp_64 + tmp_59*tmp_64 + tmp_60*tmp_64) + 0.0069606304761558151*tmp_12*(tmp_38*tmp_65 + tmp_46*tmp_65 + tmp_53*tmp_65 + tmp_57*tmp_66 + tmp_59*tmp_66 + tmp_60*tmp_66) + 0.0044044418180681378*tmp_12*(tmp_38*tmp_67 + tmp_46*tmp_67 + tmp_53*tmp_67 + tmp_57*tmp_68 + tmp_59*tmp_68 + tmp_60*tmp_68) + 0.0086719579272897529*tmp_12*(tmp_38*tmp_69 + tmp_46*tmp_69 + tmp_53*tmp_69 + tmp_57*tmp_70 + tmp_59*tmp_70 + tmp_60*tmp_70) + 0.0012542093589233661*tmp_12*(tmp_38*tmp_71 + tmp_46*tmp_71 + tmp_53*tmp_71 + tmp_57*tmp_72 + tmp_59*tmp_72 + tmp_60*tmp_72) + 0.0069606304761558151*tmp_12*(tmp_38*tmp_73 + tmp_46*tmp_73 + tmp_53*tmp_73 + tmp_57*tmp_74 + tmp_59*tmp_74 + tmp_60*tmp_74) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_75 + tmp_46*tmp_75 + tmp_53*tmp_75 + tmp_57*tmp_76 + tmp_59*tmp_76 + tmp_60*tmp_76) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_77 + tmp_46*tmp_77 + tmp_53*tmp_77 + tmp_57*tmp_78 + tmp_59*tmp_78 + tmp_60*tmp_78) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_79 + tmp_46*tmp_79 + tmp_53*tmp_79 + tmp_57*tmp_80 + tmp_59*tmp_80 + tmp_60*tmp_80) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_81 + tmp_46*tmp_81 + tmp_53*tmp_81 + tmp_57*tmp_82 + tmp_59*tmp_82 + tmp_60*tmp_82) + 0.0012542093589233661*tmp_12*(tmp_38*tmp_83 + tmp_46*tmp_83 + tmp_53*tmp_83 + tmp_57*tmp_84 + tmp_59*tmp_84 + tmp_60*tmp_84) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_85 + tmp_46*tmp_85 + tmp_53*tmp_85 + tmp_57*tmp_86 + tmp_59*tmp_86 + tmp_60*tmp_86) + 0.0060468217102181351*tmp_12*(tmp_38*tmp_87 + tmp_46*tmp_87 + tmp_53*tmp_87 + tmp_57*tmp_88 + tmp_59*tmp_88 + tmp_60*tmp_88) + 0.0011928171484740719*tmp_12*(tmp_38*tmp_89 + tmp_46*tmp_89 + tmp_53*tmp_89 + tmp_57*tmp_90 + tmp_59*tmp_90 + tmp_60*tmp_90) + 0.0025755810251600563*tmp_12*(tmp_38*tmp_91 + tmp_46*tmp_91 + tmp_53*tmp_91 + tmp_57*tmp_92 + tmp_59*tmp_92 + tmp_60*tmp_92) + 0.0011928171484740719*tmp_12*(tmp_38*tmp_93 + tmp_46*tmp_93 + tmp_53*tmp_93 + tmp_57*tmp_94 + tmp_59*tmp_94 + tmp_60*tmp_94) + 0.0025755810251600563*tmp_12*(tmp_38*tmp_95 + tmp_46*tmp_95 + tmp_53*tmp_95 + tmp_57*tmp_96 + tmp_59*tmp_96 + tmp_60*tmp_96) + 0.0011928171484740719*tmp_12*(tmp_38*tmp_97 + tmp_46*tmp_97 + tmp_53*tmp_97 + tmp_57*tmp_98 + tmp_59*tmp_98 + tmp_60*tmp_98);
      elMat( 0, 0) = a_0_0;
   }



   void integrateFacetInner3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
                                                     const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                     const Eigen::Matrix< real_t, 3, 1 >&,
                                                     const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                     const DGBasisInfo&                                       trialBasis,
                                                     const DGBasisInfo&                                       testBasis,
                                                     int                                                      trialDegree,
                                                     int                                                      testDegree,
                                                     Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );

         real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_3_0 + tmp_0;
      real_t tmp_7 = p_affine_2_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_0_2;
      real_t tmp_11 = p_affine_3_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_1_2 + tmp_10;
      real_t tmp_14 = p_affine_1_1 + tmp_3;
      real_t tmp_15 = p_affine_2_2 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_11*tmp_2;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_10;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_16 - tmp_18;
      real_t tmp_26 = -p_affine_8_1;
      real_t tmp_27 = p_affine_9_1 + tmp_26;
      real_t tmp_28 = p_affine_10_1 + tmp_26;
      real_t tmp_29 = p_affine_8_1 + tmp_3;
      real_t tmp_30 = tmp_19*(0.031405749086161582*tmp_27 + 0.93718850182767688*tmp_28 + tmp_29);
      real_t tmp_31 = tmp_12 - tmp_17;
      real_t tmp_32 = -p_affine_8_0;
      real_t tmp_33 = p_affine_9_0 + tmp_32;
      real_t tmp_34 = p_affine_10_0 + tmp_32;
      real_t tmp_35 = p_affine_8_0 + tmp_0;
      real_t tmp_36 = tmp_19*(0.031405749086161582*tmp_33 + 0.93718850182767688*tmp_34 + tmp_35);
      real_t tmp_37 = tmp_24*tmp_9 + tmp_25*tmp_30 + tmp_31*tmp_36 - 1.0/4.0;
      real_t tmp_38 = -tmp_1*tmp_4 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_40 = -tmp_11*tmp_14 + tmp_13*tmp_4;
      real_t tmp_41 = tmp_24*tmp_38 + tmp_30*tmp_39 + tmp_36*tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_7 - tmp_14*tmp_2;
      real_t tmp_43 = -tmp_1*tmp_15 + tmp_13*tmp_2;
      real_t tmp_44 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_45 = tmp_24*tmp_42 + tmp_30*tmp_43 + tmp_36*tmp_44 - 1.0/4.0;
      real_t tmp_46 = tmp_1*tmp_37 + tmp_2*tmp_41 + tmp_45*tmp_6;
      real_t tmp_47 = 1.0*tmp_19;
      real_t tmp_48 = 0.5*tmp_19;
      real_t tmp_49 = tmp_1*tmp_48;
      real_t tmp_50 = tmp_2*tmp_48;
      real_t tmp_51 = tmp_48*tmp_6;
      real_t tmp_52 = tmp_31*tmp_48;
      real_t tmp_53 = tmp_40*tmp_48;
      real_t tmp_54 = tmp_44*tmp_48;
      real_t tmp_55 = tmp_14*tmp_52 + tmp_25*tmp_49 + tmp_39*tmp_50 + tmp_4*tmp_54 + tmp_43*tmp_51 + tmp_53*tmp_7;
      real_t tmp_56 = tmp_11*tmp_54 + tmp_13*tmp_52 + tmp_15*tmp_53 + tmp_38*tmp_50 + tmp_42*tmp_51 + tmp_49*tmp_9;
      real_t tmp_57 = 1.0*p_affine_13_0*(tmp_1*tmp_31*tmp_47 + tmp_2*tmp_40*tmp_47 + tmp_44*tmp_47*tmp_6) + 1.0*p_affine_13_1*tmp_55 + 1.0*p_affine_13_2*tmp_56;
      real_t tmp_58 = tmp_11*tmp_45 + tmp_13*tmp_37 + tmp_15*tmp_41;
      real_t tmp_59 = tmp_11*tmp_43*tmp_48 + tmp_13*tmp_25*tmp_48 + tmp_14*tmp_48*tmp_9 + tmp_15*tmp_39*tmp_48 + tmp_38*tmp_48*tmp_7 + tmp_4*tmp_42*tmp_48;
      real_t tmp_60 = 1.0*p_affine_13_0*tmp_56 + 1.0*p_affine_13_1*tmp_59 + 1.0*p_affine_13_2*(tmp_11*tmp_42*tmp_47 + tmp_13*tmp_47*tmp_9 + tmp_15*tmp_38*tmp_47);
      real_t tmp_61 = tmp_14*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_7;
      real_t tmp_62 = 1.0*p_affine_13_0*tmp_55 + 1.0*p_affine_13_1*(tmp_14*tmp_25*tmp_47 + tmp_39*tmp_47*tmp_7 + tmp_4*tmp_43*tmp_47) + 1.0*p_affine_13_2*tmp_59;
      real_t tmp_63 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_64 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_65 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_66 = (std::abs(tmp_22*tmp_63 - tmp_28*tmp_65)*std::abs(tmp_22*tmp_63 - tmp_28*tmp_65)) + (std::abs(tmp_22*tmp_64 - tmp_34*tmp_65)*std::abs(tmp_22*tmp_64 - tmp_34*tmp_65)) + (std::abs(tmp_28*tmp_64 - tmp_34*tmp_63)*std::abs(tmp_28*tmp_64 - tmp_34*tmp_63));
      real_t tmp_67 = 3.0*std::pow(tmp_66, -0.25);
      real_t tmp_68 = 2.0*std::pow(tmp_66, 1.0/2.0);
      real_t tmp_69 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_70 = tmp_19*(0.19601935860219369*tmp_27 + 0.60796128279561268*tmp_28 + tmp_29);
      real_t tmp_71 = tmp_19*(0.19601935860219369*tmp_33 + 0.60796128279561268*tmp_34 + tmp_35);
      real_t tmp_72 = tmp_25*tmp_70 + tmp_31*tmp_71 + tmp_69*tmp_9 - 1.0/4.0;
      real_t tmp_73 = tmp_38*tmp_69 + tmp_39*tmp_70 + tmp_40*tmp_71 - 1.0/4.0;
      real_t tmp_74 = tmp_42*tmp_69 + tmp_43*tmp_70 + tmp_44*tmp_71 - 1.0/4.0;
      real_t tmp_75 = tmp_1*tmp_72 + tmp_2*tmp_73 + tmp_6*tmp_74;
      real_t tmp_76 = tmp_11*tmp_74 + tmp_13*tmp_72 + tmp_15*tmp_73;
      real_t tmp_77 = tmp_14*tmp_72 + tmp_4*tmp_74 + tmp_7*tmp_73;
      real_t tmp_78 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_79 = tmp_19*(0.37605877282253791*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_80 = tmp_19*(0.37605877282253791*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_81 = tmp_25*tmp_79 + tmp_31*tmp_80 + tmp_78*tmp_9 - 1.0/4.0;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80 - 1.0/4.0;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80 - 1.0/4.0;
      real_t tmp_84 = tmp_1*tmp_81 + tmp_2*tmp_82 + tmp_6*tmp_83;
      real_t tmp_85 = tmp_11*tmp_83 + tmp_13*tmp_81 + tmp_15*tmp_82;
      real_t tmp_86 = tmp_14*tmp_81 + tmp_4*tmp_83 + tmp_7*tmp_82;
      real_t tmp_87 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_88 = tmp_19*(0.041227165399737475*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_89 = tmp_19*(0.041227165399737475*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_90 = tmp_25*tmp_88 + tmp_31*tmp_89 + tmp_87*tmp_9 - 1.0/4.0;
      real_t tmp_91 = tmp_38*tmp_87 + tmp_39*tmp_88 + tmp_40*tmp_89 - 1.0/4.0;
      real_t tmp_92 = tmp_42*tmp_87 + tmp_43*tmp_88 + tmp_44*tmp_89 - 1.0/4.0;
      real_t tmp_93 = tmp_1*tmp_90 + tmp_2*tmp_91 + tmp_6*tmp_92;
      real_t tmp_94 = tmp_11*tmp_92 + tmp_13*tmp_90 + tmp_15*tmp_91;
      real_t tmp_95 = tmp_14*tmp_90 + tmp_4*tmp_92 + tmp_7*tmp_91;
      real_t tmp_96 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_97 = tmp_19*(0.40446199974765351*tmp_27 + 0.19107600050469298*tmp_28 + tmp_29);
      real_t tmp_98 = tmp_19*(0.40446199974765351*tmp_33 + 0.19107600050469298*tmp_34 + tmp_35);
      real_t tmp_99 = tmp_25*tmp_97 + tmp_31*tmp_98 + tmp_9*tmp_96 - 1.0/4.0;
      real_t tmp_100 = tmp_38*tmp_96 + tmp_39*tmp_97 + tmp_40*tmp_98 - 1.0/4.0;
      real_t tmp_101 = tmp_42*tmp_96 + tmp_43*tmp_97 + tmp_44*tmp_98 - 1.0/4.0;
      real_t tmp_102 = tmp_1*tmp_99 + tmp_100*tmp_2 + tmp_101*tmp_6;
      real_t tmp_103 = tmp_100*tmp_15 + tmp_101*tmp_11 + tmp_13*tmp_99;
      real_t tmp_104 = tmp_100*tmp_7 + tmp_101*tmp_4 + tmp_14*tmp_99;
      real_t tmp_105 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_106 = tmp_19*(0.039308471900058539*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_107 = tmp_19*(0.039308471900058539*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_108 = tmp_105*tmp_9 + tmp_106*tmp_25 + tmp_107*tmp_31 - 1.0/4.0;
      real_t tmp_109 = tmp_105*tmp_38 + tmp_106*tmp_39 + tmp_107*tmp_40 - 1.0/4.0;
      real_t tmp_110 = tmp_105*tmp_42 + tmp_106*tmp_43 + tmp_107*tmp_44 - 1.0/4.0;
      real_t tmp_111 = tmp_1*tmp_108 + tmp_109*tmp_2 + tmp_110*tmp_6;
      real_t tmp_112 = tmp_108*tmp_13 + tmp_109*tmp_15 + tmp_11*tmp_110;
      real_t tmp_113 = tmp_108*tmp_14 + tmp_109*tmp_7 + tmp_110*tmp_4;
      real_t tmp_114 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_115 = tmp_19*(0.93718850182767688*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_116 = tmp_19*(0.93718850182767688*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_117 = tmp_114*tmp_9 + tmp_115*tmp_25 + tmp_116*tmp_31 - 1.0/4.0;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40 - 1.0/4.0;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44 - 1.0/4.0;
      real_t tmp_120 = tmp_1*tmp_117 + tmp_118*tmp_2 + tmp_119*tmp_6;
      real_t tmp_121 = tmp_11*tmp_119 + tmp_117*tmp_13 + tmp_118*tmp_15;
      real_t tmp_122 = tmp_117*tmp_14 + tmp_118*tmp_7 + tmp_119*tmp_4;
      real_t tmp_123 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_124 = tmp_19*(0.60796128279561268*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_125 = tmp_19*(0.60796128279561268*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_126 = tmp_123*tmp_9 + tmp_124*tmp_25 + tmp_125*tmp_31 - 1.0/4.0;
      real_t tmp_127 = tmp_123*tmp_38 + tmp_124*tmp_39 + tmp_125*tmp_40 - 1.0/4.0;
      real_t tmp_128 = tmp_123*tmp_42 + tmp_124*tmp_43 + tmp_125*tmp_44 - 1.0/4.0;
      real_t tmp_129 = tmp_1*tmp_126 + tmp_127*tmp_2 + tmp_128*tmp_6;
      real_t tmp_130 = tmp_11*tmp_128 + tmp_126*tmp_13 + tmp_127*tmp_15;
      real_t tmp_131 = tmp_126*tmp_14 + tmp_127*tmp_7 + tmp_128*tmp_4;
      real_t tmp_132 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_133 = tmp_19*(0.19107600050469298*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_134 = tmp_19*(0.19107600050469298*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_135 = tmp_132*tmp_9 + tmp_133*tmp_25 + tmp_134*tmp_31 - 1.0/4.0;
      real_t tmp_136 = tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40 - 1.0/4.0;
      real_t tmp_137 = tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44 - 1.0/4.0;
      real_t tmp_138 = tmp_1*tmp_135 + tmp_136*tmp_2 + tmp_137*tmp_6;
      real_t tmp_139 = tmp_11*tmp_137 + tmp_13*tmp_135 + tmp_136*tmp_15;
      real_t tmp_140 = tmp_135*tmp_14 + tmp_136*tmp_7 + tmp_137*tmp_4;
      real_t tmp_141 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_142 = tmp_19*(0.031405749086161582*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_143 = tmp_19*(0.031405749086161582*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_144 = tmp_141*tmp_9 + tmp_142*tmp_25 + tmp_143*tmp_31 - 1.0/4.0;
      real_t tmp_145 = tmp_141*tmp_38 + tmp_142*tmp_39 + tmp_143*tmp_40 - 1.0/4.0;
      real_t tmp_146 = tmp_141*tmp_42 + tmp_142*tmp_43 + tmp_143*tmp_44 - 1.0/4.0;
      real_t tmp_147 = tmp_1*tmp_144 + tmp_145*tmp_2 + tmp_146*tmp_6;
      real_t tmp_148 = tmp_11*tmp_146 + tmp_13*tmp_144 + tmp_145*tmp_15;
      real_t tmp_149 = tmp_14*tmp_144 + tmp_145*tmp_7 + tmp_146*tmp_4;
      real_t tmp_150 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_151 = tmp_19*(0.19601935860219369*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_152 = tmp_19*(0.19601935860219369*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_153 = tmp_150*tmp_9 + tmp_151*tmp_25 + tmp_152*tmp_31 - 1.0/4.0;
      real_t tmp_154 = tmp_150*tmp_38 + tmp_151*tmp_39 + tmp_152*tmp_40 - 1.0/4.0;
      real_t tmp_155 = tmp_150*tmp_42 + tmp_151*tmp_43 + tmp_152*tmp_44 - 1.0/4.0;
      real_t tmp_156 = tmp_1*tmp_153 + tmp_154*tmp_2 + tmp_155*tmp_6;
      real_t tmp_157 = tmp_11*tmp_155 + tmp_13*tmp_153 + tmp_15*tmp_154;
      real_t tmp_158 = tmp_14*tmp_153 + tmp_154*tmp_7 + tmp_155*tmp_4;
      real_t tmp_159 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_160 = tmp_19*(0.40446199974765351*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_161 = tmp_19*(0.40446199974765351*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_162 = tmp_159*tmp_9 + tmp_160*tmp_25 + tmp_161*tmp_31 - 1.0/4.0;
      real_t tmp_163 = tmp_159*tmp_38 + tmp_160*tmp_39 + tmp_161*tmp_40 - 1.0/4.0;
      real_t tmp_164 = tmp_159*tmp_42 + tmp_160*tmp_43 + tmp_161*tmp_44 - 1.0/4.0;
      real_t tmp_165 = tmp_1*tmp_162 + tmp_163*tmp_2 + tmp_164*tmp_6;
      real_t tmp_166 = tmp_11*tmp_164 + tmp_13*tmp_162 + tmp_15*tmp_163;
      real_t tmp_167 = tmp_14*tmp_162 + tmp_163*tmp_7 + tmp_164*tmp_4;
      real_t tmp_168 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_169 = tmp_19*(0.37605877282253791*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_170 = tmp_19*(0.37605877282253791*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_171 = tmp_168*tmp_9 + tmp_169*tmp_25 + tmp_170*tmp_31 - 1.0/4.0;
      real_t tmp_172 = tmp_168*tmp_38 + tmp_169*tmp_39 + tmp_170*tmp_40 - 1.0/4.0;
      real_t tmp_173 = tmp_168*tmp_42 + tmp_169*tmp_43 + tmp_170*tmp_44 - 1.0/4.0;
      real_t tmp_174 = tmp_1*tmp_171 + tmp_172*tmp_2 + tmp_173*tmp_6;
      real_t tmp_175 = tmp_11*tmp_173 + tmp_13*tmp_171 + tmp_15*tmp_172;
      real_t tmp_176 = tmp_14*tmp_171 + tmp_172*tmp_7 + tmp_173*tmp_4;
      real_t tmp_177 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_178 = tmp_19*(0.1711304259088916*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_179 = tmp_19*(0.1711304259088916*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_180 = tmp_177*tmp_9 + tmp_178*tmp_25 + tmp_179*tmp_31 - 1.0/4.0;
      real_t tmp_181 = tmp_177*tmp_38 + tmp_178*tmp_39 + tmp_179*tmp_40 - 1.0/4.0;
      real_t tmp_182 = tmp_177*tmp_42 + tmp_178*tmp_43 + tmp_179*tmp_44 - 1.0/4.0;
      real_t tmp_183 = tmp_1*tmp_180 + tmp_181*tmp_2 + tmp_182*tmp_6;
      real_t tmp_184 = tmp_11*tmp_182 + tmp_13*tmp_180 + tmp_15*tmp_181;
      real_t tmp_185 = tmp_14*tmp_180 + tmp_181*tmp_7 + tmp_182*tmp_4;
      real_t tmp_186 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_187 = tmp_19*(0.78764240869137092*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_188 = tmp_19*(0.78764240869137092*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_189 = tmp_186*tmp_9 + tmp_187*tmp_25 + tmp_188*tmp_31 - 1.0/4.0;
      real_t tmp_190 = tmp_186*tmp_38 + tmp_187*tmp_39 + tmp_188*tmp_40 - 1.0/4.0;
      real_t tmp_191 = tmp_186*tmp_42 + tmp_187*tmp_43 + tmp_188*tmp_44 - 1.0/4.0;
      real_t tmp_192 = tmp_1*tmp_189 + tmp_190*tmp_2 + tmp_191*tmp_6;
      real_t tmp_193 = tmp_11*tmp_191 + tmp_13*tmp_189 + tmp_15*tmp_190;
      real_t tmp_194 = tmp_14*tmp_189 + tmp_190*tmp_7 + tmp_191*tmp_4;
      real_t tmp_195 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_196 = tmp_19*(0.58463275527740355*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_197 = tmp_19*(0.58463275527740355*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_198 = tmp_195*tmp_9 + tmp_196*tmp_25 + tmp_197*tmp_31 - 1.0/4.0;
      real_t tmp_199 = tmp_195*tmp_38 + tmp_196*tmp_39 + tmp_197*tmp_40 - 1.0/4.0;
      real_t tmp_200 = tmp_195*tmp_42 + tmp_196*tmp_43 + tmp_197*tmp_44 - 1.0/4.0;
      real_t tmp_201 = tmp_1*tmp_198 + tmp_199*tmp_2 + tmp_200*tmp_6;
      real_t tmp_202 = tmp_11*tmp_200 + tmp_13*tmp_198 + tmp_15*tmp_199;
      real_t tmp_203 = tmp_14*tmp_198 + tmp_199*tmp_7 + tmp_200*tmp_4;
      real_t tmp_204 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_205 = tmp_19*(0.041227165399737475*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_206 = tmp_19*(0.041227165399737475*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_207 = tmp_204*tmp_9 + tmp_205*tmp_25 + tmp_206*tmp_31 - 1.0/4.0;
      real_t tmp_208 = tmp_204*tmp_38 + tmp_205*tmp_39 + tmp_206*tmp_40 - 1.0/4.0;
      real_t tmp_209 = tmp_204*tmp_42 + tmp_205*tmp_43 + tmp_206*tmp_44 - 1.0/4.0;
      real_t tmp_210 = tmp_1*tmp_207 + tmp_2*tmp_208 + tmp_209*tmp_6;
      real_t tmp_211 = tmp_11*tmp_209 + tmp_13*tmp_207 + tmp_15*tmp_208;
      real_t tmp_212 = tmp_14*tmp_207 + tmp_208*tmp_7 + tmp_209*tmp_4;
      real_t tmp_213 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_214 = tmp_19*(0.039308471900058539*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_215 = tmp_19*(0.039308471900058539*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_216 = tmp_213*tmp_9 + tmp_214*tmp_25 + tmp_215*tmp_31 - 1.0/4.0;
      real_t tmp_217 = tmp_213*tmp_38 + tmp_214*tmp_39 + tmp_215*tmp_40 - 1.0/4.0;
      real_t tmp_218 = tmp_213*tmp_42 + tmp_214*tmp_43 + tmp_215*tmp_44 - 1.0/4.0;
      real_t tmp_219 = tmp_1*tmp_216 + tmp_2*tmp_217 + tmp_218*tmp_6;
      real_t tmp_220 = tmp_11*tmp_218 + tmp_13*tmp_216 + tmp_15*tmp_217;
      real_t tmp_221 = tmp_14*tmp_216 + tmp_217*tmp_7 + tmp_218*tmp_4;
      real_t tmp_222 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_223 = tmp_19*(0.78764240869137092*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_224 = tmp_19*(0.78764240869137092*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_225 = tmp_222*tmp_9 + tmp_223*tmp_25 + tmp_224*tmp_31 - 1.0/4.0;
      real_t tmp_226 = tmp_222*tmp_38 + tmp_223*tmp_39 + tmp_224*tmp_40 - 1.0/4.0;
      real_t tmp_227 = tmp_222*tmp_42 + tmp_223*tmp_43 + tmp_224*tmp_44 - 1.0/4.0;
      real_t tmp_228 = tmp_1*tmp_225 + tmp_2*tmp_226 + tmp_227*tmp_6;
      real_t tmp_229 = tmp_11*tmp_227 + tmp_13*tmp_225 + tmp_15*tmp_226;
      real_t tmp_230 = tmp_14*tmp_225 + tmp_226*tmp_7 + tmp_227*tmp_4;
      real_t tmp_231 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_232 = tmp_19*(0.58463275527740355*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_233 = tmp_19*(0.58463275527740355*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_234 = tmp_231*tmp_9 + tmp_232*tmp_25 + tmp_233*tmp_31 - 1.0/4.0;
      real_t tmp_235 = tmp_231*tmp_38 + tmp_232*tmp_39 + tmp_233*tmp_40 - 1.0/4.0;
      real_t tmp_236 = tmp_231*tmp_42 + tmp_232*tmp_43 + tmp_233*tmp_44 - 1.0/4.0;
      real_t tmp_237 = tmp_1*tmp_234 + tmp_2*tmp_235 + tmp_236*tmp_6;
      real_t tmp_238 = tmp_11*tmp_236 + tmp_13*tmp_234 + tmp_15*tmp_235;
      real_t tmp_239 = tmp_14*tmp_234 + tmp_235*tmp_7 + tmp_236*tmp_4;
      real_t tmp_240 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_241 = tmp_19*(0.1711304259088916*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_242 = tmp_19*(0.1711304259088916*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_243 = tmp_240*tmp_9 + tmp_241*tmp_25 + tmp_242*tmp_31 - 1.0/4.0;
      real_t tmp_244 = tmp_240*tmp_38 + tmp_241*tmp_39 + tmp_242*tmp_40 - 1.0/4.0;
      real_t tmp_245 = tmp_240*tmp_42 + tmp_241*tmp_43 + tmp_242*tmp_44 - 1.0/4.0;
      real_t tmp_246 = tmp_1*tmp_243 + tmp_2*tmp_244 + tmp_245*tmp_6;
      real_t tmp_247 = tmp_11*tmp_245 + tmp_13*tmp_243 + tmp_15*tmp_244;
      real_t tmp_248 = tmp_14*tmp_243 + tmp_244*tmp_7 + tmp_245*tmp_4;
      real_t a_0_0 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_68*(-tmp_46*tmp_57 - tmp_58*tmp_60 - tmp_61*tmp_62 + tmp_67*((tmp_46*tmp_46) + (tmp_58*tmp_58) + (tmp_61*tmp_61))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_68*(-tmp_57*tmp_75 - tmp_60*tmp_76 - tmp_62*tmp_77 + tmp_67*((tmp_75*tmp_75) + (tmp_76*tmp_76) + (tmp_77*tmp_77))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_68*(-tmp_57*tmp_84 - tmp_60*tmp_85 - tmp_62*tmp_86 + tmp_67*((tmp_84*tmp_84) + (tmp_85*tmp_85) + (tmp_86*tmp_86))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_68*(-tmp_57*tmp_93 - tmp_60*tmp_94 - tmp_62*tmp_95 + tmp_67*((tmp_93*tmp_93) + (tmp_94*tmp_94) + (tmp_95*tmp_95))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_68*(-tmp_102*tmp_57 - tmp_103*tmp_60 - tmp_104*tmp_62 + tmp_67*((tmp_102*tmp_102) + (tmp_103*tmp_103) + (tmp_104*tmp_104))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_68*(-tmp_111*tmp_57 - tmp_112*tmp_60 - tmp_113*tmp_62 + tmp_67*((tmp_111*tmp_111) + (tmp_112*tmp_112) + (tmp_113*tmp_113))) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_68*(-tmp_120*tmp_57 - tmp_121*tmp_60 - tmp_122*tmp_62 + tmp_67*((tmp_120*tmp_120) + (tmp_121*tmp_121) + (tmp_122*tmp_122))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_68*(-tmp_129*tmp_57 - tmp_130*tmp_60 - tmp_131*tmp_62 + tmp_67*((tmp_129*tmp_129) + (tmp_130*tmp_130) + (tmp_131*tmp_131))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_68*(-tmp_138*tmp_57 - tmp_139*tmp_60 - tmp_140*tmp_62 + tmp_67*((tmp_138*tmp_138) + (tmp_139*tmp_139) + (tmp_140*tmp_140))) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_68*(-tmp_147*tmp_57 - tmp_148*tmp_60 - tmp_149*tmp_62 + tmp_67*((tmp_147*tmp_147) + (tmp_148*tmp_148) + (tmp_149*tmp_149))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_68*(-tmp_156*tmp_57 - tmp_157*tmp_60 - tmp_158*tmp_62 + tmp_67*((tmp_156*tmp_156) + (tmp_157*tmp_157) + (tmp_158*tmp_158))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_68*(-tmp_165*tmp_57 - tmp_166*tmp_60 - tmp_167*tmp_62 + tmp_67*((tmp_165*tmp_165) + (tmp_166*tmp_166) + (tmp_167*tmp_167))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_68*(-tmp_174*tmp_57 - tmp_175*tmp_60 - tmp_176*tmp_62 + tmp_67*((tmp_174*tmp_174) + (tmp_175*tmp_175) + (tmp_176*tmp_176))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_68*(-tmp_183*tmp_57 - tmp_184*tmp_60 - tmp_185*tmp_62 + tmp_67*((tmp_183*tmp_183) + (tmp_184*tmp_184) + (tmp_185*tmp_185))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_68*(-tmp_192*tmp_57 - tmp_193*tmp_60 - tmp_194*tmp_62 + tmp_67*((tmp_192*tmp_192) + (tmp_193*tmp_193) + (tmp_194*tmp_194))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_68*(-tmp_201*tmp_57 - tmp_202*tmp_60 - tmp_203*tmp_62 + tmp_67*((tmp_201*tmp_201) + (tmp_202*tmp_202) + (tmp_203*tmp_203))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_68*(-tmp_210*tmp_57 - tmp_211*tmp_60 - tmp_212*tmp_62 + tmp_67*((tmp_210*tmp_210) + (tmp_211*tmp_211) + (tmp_212*tmp_212))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_68*(-tmp_219*tmp_57 - tmp_220*tmp_60 - tmp_221*tmp_62 + tmp_67*((tmp_219*tmp_219) + (tmp_220*tmp_220) + (tmp_221*tmp_221))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_68*(-tmp_228*tmp_57 - tmp_229*tmp_60 - tmp_230*tmp_62 + tmp_67*((tmp_228*tmp_228) + (tmp_229*tmp_229) + (tmp_230*tmp_230))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_68*(-tmp_237*tmp_57 - tmp_238*tmp_60 - tmp_239*tmp_62 + tmp_67*((tmp_237*tmp_237) + (tmp_238*tmp_238) + (tmp_239*tmp_239))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_68*(-tmp_246*tmp_57 - tmp_247*tmp_60 - tmp_248*tmp_62 + tmp_67*((tmp_246*tmp_246) + (tmp_247*tmp_247) + (tmp_248*tmp_248)));
      elMat( 0, 0) = a_0_0;
   }




void integrateFacetCoupling3D( const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementInner,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElementOuter,
                                                        const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&,
                                                        const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
                                                        const DGBasisInfo&                                       trialBasis,
                                                        const DGBasisInfo&                                       testBasis,
                                                        int                                                      trialDegree,
                                                        int                                                      testDegree,
                                                        Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElementInner[0]( 0 );
   const auto p_affine_0_1 = coordsElementInner[0]( 1 );
   const auto p_affine_0_2 = coordsElementInner[0]( 2 );

   const auto p_affine_1_0 = coordsElementInner[1]( 0 );
   const auto p_affine_1_1 = coordsElementInner[1]( 1 );
   const auto p_affine_1_2 = coordsElementInner[1]( 2 );

   const auto p_affine_2_0 = coordsElementInner[2]( 0 );
   const auto p_affine_2_1 = coordsElementInner[2]( 1 );
   const auto p_affine_2_2 = coordsElementInner[2]( 2 );

   const auto p_affine_3_0 = coordsElementInner[3]( 0 );
   const auto p_affine_3_1 = coordsElementInner[3]( 1 );
   const auto p_affine_3_2 = coordsElementInner[3]( 2 );

   const auto p_affine_4_0 = coordsElementOuter[0]( 0 );
   const auto p_affine_4_1 = coordsElementOuter[0]( 1 );
   const auto p_affine_4_2 = coordsElementOuter[0]( 2 );

   const auto p_affine_5_0 = coordsElementOuter[1]( 0 );
   const auto p_affine_5_1 = coordsElementOuter[1]( 1 );
   const auto p_affine_5_2 = coordsElementOuter[1]( 2 );

   const auto p_affine_6_0 = coordsElementOuter[2]( 0 );
   const auto p_affine_6_1 = coordsElementOuter[2]( 1 );
   const auto p_affine_6_2 = coordsElementOuter[2]( 2 );

   const auto p_affine_7_0 = coordsElementOuter[3]( 0 );
   const auto p_affine_7_1 = coordsElementOuter[3]( 1 );
   const auto p_affine_7_2 = coordsElementOuter[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_4_0;
      real_t tmp_1 = p_affine_5_0 + tmp_0;
      real_t tmp_2 = p_affine_6_0 + tmp_0;
      real_t tmp_3 = -p_affine_4_1;
      real_t tmp_4 = p_affine_7_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_7_0 + tmp_0;
      real_t tmp_7 = p_affine_6_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_4_2;
      real_t tmp_11 = p_affine_7_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_5_2 + tmp_10;
      real_t tmp_14 = p_affine_5_1 + tmp_3;
      real_t tmp_15 = p_affine_6_2 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_11*tmp_2;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = p_affine_8_2 + tmp_10;
      real_t tmp_21 = -p_affine_8_2;
      real_t tmp_22 = p_affine_9_2 + tmp_21;
      real_t tmp_23 = p_affine_10_2 + tmp_21;
      real_t tmp_24 = 0.031405749086161582*tmp_22 + 0.93718850182767688*tmp_23;
      real_t tmp_25 = tmp_19*(tmp_20 + tmp_24);
      real_t tmp_26 = tmp_16 - tmp_18;
      real_t tmp_27 = p_affine_8_1 + tmp_3;
      real_t tmp_28 = -p_affine_8_1;
      real_t tmp_29 = p_affine_9_1 + tmp_28;
      real_t tmp_30 = p_affine_10_1 + tmp_28;
      real_t tmp_31 = 0.031405749086161582*tmp_29 + 0.93718850182767688*tmp_30;
      real_t tmp_32 = tmp_19*(tmp_27 + tmp_31);
      real_t tmp_33 = tmp_12 - tmp_17;
      real_t tmp_34 = p_affine_8_0 + tmp_0;
      real_t tmp_35 = -p_affine_8_0;
      real_t tmp_36 = p_affine_9_0 + tmp_35;
      real_t tmp_37 = p_affine_10_0 + tmp_35;
      real_t tmp_38 = 0.031405749086161582*tmp_36 + 0.93718850182767688*tmp_37;
      real_t tmp_39 = tmp_19*(tmp_34 + tmp_38);
      real_t tmp_40 = tmp_25*tmp_9 + tmp_26*tmp_32 + tmp_33*tmp_39 - 1.0/4.0;
      real_t tmp_41 = -tmp_1*tmp_4 + tmp_14*tmp_6;
      real_t tmp_42 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = -tmp_11*tmp_14 + tmp_13*tmp_4;
      real_t tmp_44 = tmp_25*tmp_41 + tmp_32*tmp_42 + tmp_39*tmp_43 - 1.0/4.0;
      real_t tmp_45 = tmp_1*tmp_7 - tmp_14*tmp_2;
      real_t tmp_46 = -tmp_1*tmp_15 + tmp_13*tmp_2;
      real_t tmp_47 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_48 = tmp_25*tmp_45 + tmp_32*tmp_46 + tmp_39*tmp_47 - 1.0/4.0;
      real_t tmp_49 = tmp_1*tmp_40 + tmp_2*tmp_44 + tmp_48*tmp_6;
      real_t tmp_50 = -p_affine_0_0;
      real_t tmp_51 = p_affine_1_0 + tmp_50;
      real_t tmp_52 = -p_affine_0_1;
      real_t tmp_53 = p_affine_2_1 + tmp_52;
      real_t tmp_54 = -p_affine_0_2;
      real_t tmp_55 = p_affine_3_2 + tmp_54;
      real_t tmp_56 = tmp_53*tmp_55;
      real_t tmp_57 = p_affine_3_1 + tmp_52;
      real_t tmp_58 = p_affine_2_2 + tmp_54;
      real_t tmp_59 = tmp_57*tmp_58;
      real_t tmp_60 = tmp_56 - tmp_59;
      real_t tmp_61 = p_affine_2_0 + tmp_50;
      real_t tmp_62 = p_affine_1_2 + tmp_54;
      real_t tmp_63 = tmp_57*tmp_62;
      real_t tmp_64 = p_affine_3_0 + tmp_50;
      real_t tmp_65 = p_affine_1_1 + tmp_52;
      real_t tmp_66 = tmp_58*tmp_65;
      real_t tmp_67 = tmp_55*tmp_65;
      real_t tmp_68 = tmp_53*tmp_62;
      real_t tmp_69 = 1.0 / (tmp_51*tmp_56 - tmp_51*tmp_59 + tmp_61*tmp_63 - tmp_61*tmp_67 + tmp_64*tmp_66 - tmp_64*tmp_68);
      real_t tmp_70 = 1.0*tmp_69;
      real_t tmp_71 = tmp_63 - tmp_67;
      real_t tmp_72 = tmp_66 - tmp_68;
      real_t tmp_73 = -tmp_55*tmp_61 + tmp_58*tmp_64;
      real_t tmp_74 = 0.5*tmp_69;
      real_t tmp_75 = tmp_51*tmp_74;
      real_t tmp_76 = tmp_51*tmp_55 - tmp_62*tmp_64;
      real_t tmp_77 = tmp_61*tmp_74;
      real_t tmp_78 = -tmp_51*tmp_58 + tmp_61*tmp_62;
      real_t tmp_79 = tmp_64*tmp_74;
      real_t tmp_80 = tmp_60*tmp_74;
      real_t tmp_81 = tmp_71*tmp_74;
      real_t tmp_82 = tmp_72*tmp_74;
      real_t tmp_83 = tmp_53*tmp_81 + tmp_57*tmp_82 + tmp_65*tmp_80 + tmp_73*tmp_75 + tmp_76*tmp_77 + tmp_78*tmp_79;
      real_t tmp_84 = -tmp_53*tmp_64 + tmp_57*tmp_61;
      real_t tmp_85 = -tmp_51*tmp_57 + tmp_64*tmp_65;
      real_t tmp_86 = tmp_51*tmp_53 - tmp_61*tmp_65;
      real_t tmp_87 = tmp_55*tmp_82 + tmp_58*tmp_81 + tmp_62*tmp_80 + tmp_75*tmp_84 + tmp_77*tmp_85 + tmp_79*tmp_86;
      real_t tmp_88 = 0.5*p_affine_13_0*(tmp_51*tmp_60*tmp_70 + tmp_61*tmp_70*tmp_71 + tmp_64*tmp_70*tmp_72) + 0.5*p_affine_13_1*tmp_83 + 0.5*p_affine_13_2*tmp_87;
      real_t tmp_89 = p_affine_8_2 + tmp_54;
      real_t tmp_90 = tmp_69*(tmp_24 + tmp_89);
      real_t tmp_91 = p_affine_8_1 + tmp_52;
      real_t tmp_92 = tmp_69*(tmp_31 + tmp_91);
      real_t tmp_93 = p_affine_8_0 + tmp_50;
      real_t tmp_94 = tmp_69*(tmp_38 + tmp_93);
      real_t tmp_95 = tmp_60*tmp_94 + tmp_73*tmp_92 + tmp_84*tmp_90 - 1.0/4.0;
      real_t tmp_96 = tmp_71*tmp_94 + tmp_76*tmp_92 + tmp_85*tmp_90 - 1.0/4.0;
      real_t tmp_97 = tmp_72*tmp_94 + tmp_78*tmp_92 + tmp_86*tmp_90 - 1.0/4.0;
      real_t tmp_98 = tmp_51*tmp_95 + tmp_61*tmp_96 + tmp_64*tmp_97;
      real_t tmp_99 = 1.0*tmp_19;
      real_t tmp_100 = 0.5*tmp_19;
      real_t tmp_101 = tmp_1*tmp_100;
      real_t tmp_102 = tmp_100*tmp_2;
      real_t tmp_103 = tmp_100*tmp_6;
      real_t tmp_104 = tmp_100*tmp_33;
      real_t tmp_105 = tmp_100*tmp_43;
      real_t tmp_106 = tmp_100*tmp_47;
      real_t tmp_107 = tmp_101*tmp_26 + tmp_102*tmp_42 + tmp_103*tmp_46 + tmp_104*tmp_14 + tmp_105*tmp_7 + tmp_106*tmp_4;
      real_t tmp_108 = tmp_101*tmp_9 + tmp_102*tmp_41 + tmp_103*tmp_45 + tmp_104*tmp_13 + tmp_105*tmp_15 + tmp_106*tmp_11;
      real_t tmp_109 = 0.5*p_affine_13_0*(tmp_1*tmp_33*tmp_99 + tmp_2*tmp_43*tmp_99 + tmp_47*tmp_6*tmp_99) + 0.5*p_affine_13_1*tmp_107 + 0.5*p_affine_13_2*tmp_108;
      real_t tmp_110 = tmp_11*tmp_48 + tmp_13*tmp_40 + tmp_15*tmp_44;
      real_t tmp_111 = tmp_53*tmp_74*tmp_85 + tmp_55*tmp_74*tmp_78 + tmp_57*tmp_74*tmp_86 + tmp_58*tmp_74*tmp_76 + tmp_62*tmp_73*tmp_74 + tmp_65*tmp_74*tmp_84;
      real_t tmp_112 = 0.5*p_affine_13_0*tmp_87 + 0.5*p_affine_13_1*tmp_111 + 0.5*p_affine_13_2*(tmp_55*tmp_70*tmp_86 + tmp_58*tmp_70*tmp_85 + tmp_62*tmp_70*tmp_84);
      real_t tmp_113 = tmp_14*tmp_40 + tmp_4*tmp_48 + tmp_44*tmp_7;
      real_t tmp_114 = 0.5*p_affine_13_0*tmp_83 + 0.5*p_affine_13_1*(tmp_53*tmp_70*tmp_76 + tmp_57*tmp_70*tmp_78 + tmp_65*tmp_70*tmp_73) + 0.5*p_affine_13_2*tmp_111;
      real_t tmp_115 = tmp_55*tmp_97 + tmp_58*tmp_96 + tmp_62*tmp_95;
      real_t tmp_116 = tmp_100*tmp_11*tmp_46 + tmp_100*tmp_13*tmp_26 + tmp_100*tmp_14*tmp_9 + tmp_100*tmp_15*tmp_42 + tmp_100*tmp_4*tmp_45 + tmp_100*tmp_41*tmp_7;
      real_t tmp_117 = 0.5*p_affine_13_0*tmp_108 + 0.5*p_affine_13_1*tmp_116 + 0.5*p_affine_13_2*(tmp_11*tmp_45*tmp_99 + tmp_13*tmp_9*tmp_99 + tmp_15*tmp_41*tmp_99);
      real_t tmp_118 = tmp_53*tmp_96 + tmp_57*tmp_97 + tmp_65*tmp_95;
      real_t tmp_119 = 0.5*p_affine_13_0*tmp_107 + 0.5*p_affine_13_1*(tmp_14*tmp_26*tmp_99 + tmp_4*tmp_46*tmp_99 + tmp_42*tmp_7*tmp_99) + 0.5*p_affine_13_2*tmp_116;
      real_t tmp_120 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_121 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_122 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_123 = (std::abs(tmp_120*tmp_23 - tmp_122*tmp_30)*std::abs(tmp_120*tmp_23 - tmp_122*tmp_30)) + (std::abs(tmp_120*tmp_37 - tmp_121*tmp_30)*std::abs(tmp_120*tmp_37 - tmp_121*tmp_30)) + (std::abs(tmp_121*tmp_23 - tmp_122*tmp_37)*std::abs(tmp_121*tmp_23 - tmp_122*tmp_37));
      real_t tmp_124 = 3.0*std::pow(tmp_123, -0.25);
      real_t tmp_125 = 2.0*std::pow(tmp_123, 1.0/2.0);
      real_t tmp_126 = 0.19601935860219369*tmp_22 + 0.60796128279561268*tmp_23;
      real_t tmp_127 = tmp_19*(tmp_126 + tmp_20);
      real_t tmp_128 = 0.19601935860219369*tmp_29 + 0.60796128279561268*tmp_30;
      real_t tmp_129 = tmp_19*(tmp_128 + tmp_27);
      real_t tmp_130 = 0.19601935860219369*tmp_36 + 0.60796128279561268*tmp_37;
      real_t tmp_131 = tmp_19*(tmp_130 + tmp_34);
      real_t tmp_132 = tmp_127*tmp_9 + tmp_129*tmp_26 + tmp_131*tmp_33 - 1.0/4.0;
      real_t tmp_133 = tmp_127*tmp_41 + tmp_129*tmp_42 + tmp_131*tmp_43 - 1.0/4.0;
      real_t tmp_134 = tmp_127*tmp_45 + tmp_129*tmp_46 + tmp_131*tmp_47 - 1.0/4.0;
      real_t tmp_135 = tmp_1*tmp_132 + tmp_133*tmp_2 + tmp_134*tmp_6;
      real_t tmp_136 = tmp_69*(tmp_126 + tmp_89);
      real_t tmp_137 = tmp_69*(tmp_128 + tmp_91);
      real_t tmp_138 = tmp_69*(tmp_130 + tmp_93);
      real_t tmp_139 = tmp_136*tmp_84 + tmp_137*tmp_73 + tmp_138*tmp_60 - 1.0/4.0;
      real_t tmp_140 = tmp_136*tmp_85 + tmp_137*tmp_76 + tmp_138*tmp_71 - 1.0/4.0;
      real_t tmp_141 = tmp_136*tmp_86 + tmp_137*tmp_78 + tmp_138*tmp_72 - 1.0/4.0;
      real_t tmp_142 = tmp_139*tmp_51 + tmp_140*tmp_61 + tmp_141*tmp_64;
      real_t tmp_143 = tmp_11*tmp_134 + tmp_13*tmp_132 + tmp_133*tmp_15;
      real_t tmp_144 = tmp_132*tmp_14 + tmp_133*tmp_7 + tmp_134*tmp_4;
      real_t tmp_145 = tmp_139*tmp_62 + tmp_140*tmp_58 + tmp_141*tmp_55;
      real_t tmp_146 = tmp_139*tmp_65 + tmp_140*tmp_53 + tmp_141*tmp_57;
      real_t tmp_147 = 0.37605877282253791*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_148 = tmp_19*(tmp_147 + tmp_20);
      real_t tmp_149 = 0.37605877282253791*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_150 = tmp_19*(tmp_149 + tmp_27);
      real_t tmp_151 = 0.37605877282253791*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_152 = tmp_19*(tmp_151 + tmp_34);
      real_t tmp_153 = tmp_148*tmp_9 + tmp_150*tmp_26 + tmp_152*tmp_33 - 1.0/4.0;
      real_t tmp_154 = tmp_148*tmp_41 + tmp_150*tmp_42 + tmp_152*tmp_43 - 1.0/4.0;
      real_t tmp_155 = tmp_148*tmp_45 + tmp_150*tmp_46 + tmp_152*tmp_47 - 1.0/4.0;
      real_t tmp_156 = tmp_1*tmp_153 + tmp_154*tmp_2 + tmp_155*tmp_6;
      real_t tmp_157 = tmp_69*(tmp_147 + tmp_89);
      real_t tmp_158 = tmp_69*(tmp_149 + tmp_91);
      real_t tmp_159 = tmp_69*(tmp_151 + tmp_93);
      real_t tmp_160 = tmp_157*tmp_84 + tmp_158*tmp_73 + tmp_159*tmp_60 - 1.0/4.0;
      real_t tmp_161 = tmp_157*tmp_85 + tmp_158*tmp_76 + tmp_159*tmp_71 - 1.0/4.0;
      real_t tmp_162 = tmp_157*tmp_86 + tmp_158*tmp_78 + tmp_159*tmp_72 - 1.0/4.0;
      real_t tmp_163 = tmp_160*tmp_51 + tmp_161*tmp_61 + tmp_162*tmp_64;
      real_t tmp_164 = tmp_11*tmp_155 + tmp_13*tmp_153 + tmp_15*tmp_154;
      real_t tmp_165 = tmp_14*tmp_153 + tmp_154*tmp_7 + tmp_155*tmp_4;
      real_t tmp_166 = tmp_160*tmp_62 + tmp_161*tmp_58 + tmp_162*tmp_55;
      real_t tmp_167 = tmp_160*tmp_65 + tmp_161*tmp_53 + tmp_162*tmp_57;
      real_t tmp_168 = 0.041227165399737475*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_169 = tmp_19*(tmp_168 + tmp_20);
      real_t tmp_170 = 0.041227165399737475*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_171 = tmp_19*(tmp_170 + tmp_27);
      real_t tmp_172 = 0.041227165399737475*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_173 = tmp_19*(tmp_172 + tmp_34);
      real_t tmp_174 = tmp_169*tmp_9 + tmp_171*tmp_26 + tmp_173*tmp_33 - 1.0/4.0;
      real_t tmp_175 = tmp_169*tmp_41 + tmp_171*tmp_42 + tmp_173*tmp_43 - 1.0/4.0;
      real_t tmp_176 = tmp_169*tmp_45 + tmp_171*tmp_46 + tmp_173*tmp_47 - 1.0/4.0;
      real_t tmp_177 = tmp_1*tmp_174 + tmp_175*tmp_2 + tmp_176*tmp_6;
      real_t tmp_178 = tmp_69*(tmp_168 + tmp_89);
      real_t tmp_179 = tmp_69*(tmp_170 + tmp_91);
      real_t tmp_180 = tmp_69*(tmp_172 + tmp_93);
      real_t tmp_181 = tmp_178*tmp_84 + tmp_179*tmp_73 + tmp_180*tmp_60 - 1.0/4.0;
      real_t tmp_182 = tmp_178*tmp_85 + tmp_179*tmp_76 + tmp_180*tmp_71 - 1.0/4.0;
      real_t tmp_183 = tmp_178*tmp_86 + tmp_179*tmp_78 + tmp_180*tmp_72 - 1.0/4.0;
      real_t tmp_184 = tmp_181*tmp_51 + tmp_182*tmp_61 + tmp_183*tmp_64;
      real_t tmp_185 = tmp_11*tmp_176 + tmp_13*tmp_174 + tmp_15*tmp_175;
      real_t tmp_186 = tmp_14*tmp_174 + tmp_175*tmp_7 + tmp_176*tmp_4;
      real_t tmp_187 = tmp_181*tmp_62 + tmp_182*tmp_58 + tmp_183*tmp_55;
      real_t tmp_188 = tmp_181*tmp_65 + tmp_182*tmp_53 + tmp_183*tmp_57;
      real_t tmp_189 = 0.40446199974765351*tmp_22 + 0.19107600050469298*tmp_23;
      real_t tmp_190 = tmp_19*(tmp_189 + tmp_20);
      real_t tmp_191 = 0.40446199974765351*tmp_29 + 0.19107600050469298*tmp_30;
      real_t tmp_192 = tmp_19*(tmp_191 + tmp_27);
      real_t tmp_193 = 0.40446199974765351*tmp_36 + 0.19107600050469298*tmp_37;
      real_t tmp_194 = tmp_19*(tmp_193 + tmp_34);
      real_t tmp_195 = tmp_190*tmp_9 + tmp_192*tmp_26 + tmp_194*tmp_33 - 1.0/4.0;
      real_t tmp_196 = tmp_190*tmp_41 + tmp_192*tmp_42 + tmp_194*tmp_43 - 1.0/4.0;
      real_t tmp_197 = tmp_190*tmp_45 + tmp_192*tmp_46 + tmp_194*tmp_47 - 1.0/4.0;
      real_t tmp_198 = tmp_1*tmp_195 + tmp_196*tmp_2 + tmp_197*tmp_6;
      real_t tmp_199 = tmp_69*(tmp_189 + tmp_89);
      real_t tmp_200 = tmp_69*(tmp_191 + tmp_91);
      real_t tmp_201 = tmp_69*(tmp_193 + tmp_93);
      real_t tmp_202 = tmp_199*tmp_84 + tmp_200*tmp_73 + tmp_201*tmp_60 - 1.0/4.0;
      real_t tmp_203 = tmp_199*tmp_85 + tmp_200*tmp_76 + tmp_201*tmp_71 - 1.0/4.0;
      real_t tmp_204 = tmp_199*tmp_86 + tmp_200*tmp_78 + tmp_201*tmp_72 - 1.0/4.0;
      real_t tmp_205 = tmp_202*tmp_51 + tmp_203*tmp_61 + tmp_204*tmp_64;
      real_t tmp_206 = tmp_11*tmp_197 + tmp_13*tmp_195 + tmp_15*tmp_196;
      real_t tmp_207 = tmp_14*tmp_195 + tmp_196*tmp_7 + tmp_197*tmp_4;
      real_t tmp_208 = tmp_202*tmp_62 + tmp_203*tmp_58 + tmp_204*tmp_55;
      real_t tmp_209 = tmp_202*tmp_65 + tmp_203*tmp_53 + tmp_204*tmp_57;
      real_t tmp_210 = 0.039308471900058539*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_211 = tmp_19*(tmp_20 + tmp_210);
      real_t tmp_212 = 0.039308471900058539*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_213 = tmp_19*(tmp_212 + tmp_27);
      real_t tmp_214 = 0.039308471900058539*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_215 = tmp_19*(tmp_214 + tmp_34);
      real_t tmp_216 = tmp_211*tmp_9 + tmp_213*tmp_26 + tmp_215*tmp_33 - 1.0/4.0;
      real_t tmp_217 = tmp_211*tmp_41 + tmp_213*tmp_42 + tmp_215*tmp_43 - 1.0/4.0;
      real_t tmp_218 = tmp_211*tmp_45 + tmp_213*tmp_46 + tmp_215*tmp_47 - 1.0/4.0;
      real_t tmp_219 = tmp_1*tmp_216 + tmp_2*tmp_217 + tmp_218*tmp_6;
      real_t tmp_220 = tmp_69*(tmp_210 + tmp_89);
      real_t tmp_221 = tmp_69*(tmp_212 + tmp_91);
      real_t tmp_222 = tmp_69*(tmp_214 + tmp_93);
      real_t tmp_223 = tmp_220*tmp_84 + tmp_221*tmp_73 + tmp_222*tmp_60 - 1.0/4.0;
      real_t tmp_224 = tmp_220*tmp_85 + tmp_221*tmp_76 + tmp_222*tmp_71 - 1.0/4.0;
      real_t tmp_225 = tmp_220*tmp_86 + tmp_221*tmp_78 + tmp_222*tmp_72 - 1.0/4.0;
      real_t tmp_226 = tmp_223*tmp_51 + tmp_224*tmp_61 + tmp_225*tmp_64;
      real_t tmp_227 = tmp_11*tmp_218 + tmp_13*tmp_216 + tmp_15*tmp_217;
      real_t tmp_228 = tmp_14*tmp_216 + tmp_217*tmp_7 + tmp_218*tmp_4;
      real_t tmp_229 = tmp_223*tmp_62 + tmp_224*tmp_58 + tmp_225*tmp_55;
      real_t tmp_230 = tmp_223*tmp_65 + tmp_224*tmp_53 + tmp_225*tmp_57;
      real_t tmp_231 = 0.93718850182767688*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_232 = tmp_19*(tmp_20 + tmp_231);
      real_t tmp_233 = 0.93718850182767688*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_234 = tmp_19*(tmp_233 + tmp_27);
      real_t tmp_235 = 0.93718850182767688*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_236 = tmp_19*(tmp_235 + tmp_34);
      real_t tmp_237 = tmp_232*tmp_9 + tmp_234*tmp_26 + tmp_236*tmp_33 - 1.0/4.0;
      real_t tmp_238 = tmp_232*tmp_41 + tmp_234*tmp_42 + tmp_236*tmp_43 - 1.0/4.0;
      real_t tmp_239 = tmp_232*tmp_45 + tmp_234*tmp_46 + tmp_236*tmp_47 - 1.0/4.0;
      real_t tmp_240 = tmp_1*tmp_237 + tmp_2*tmp_238 + tmp_239*tmp_6;
      real_t tmp_241 = tmp_69*(tmp_231 + tmp_89);
      real_t tmp_242 = tmp_69*(tmp_233 + tmp_91);
      real_t tmp_243 = tmp_69*(tmp_235 + tmp_93);
      real_t tmp_244 = tmp_241*tmp_84 + tmp_242*tmp_73 + tmp_243*tmp_60 - 1.0/4.0;
      real_t tmp_245 = tmp_241*tmp_85 + tmp_242*tmp_76 + tmp_243*tmp_71 - 1.0/4.0;
      real_t tmp_246 = tmp_241*tmp_86 + tmp_242*tmp_78 + tmp_243*tmp_72 - 1.0/4.0;
      real_t tmp_247 = tmp_244*tmp_51 + tmp_245*tmp_61 + tmp_246*tmp_64;
      real_t tmp_248 = tmp_11*tmp_239 + tmp_13*tmp_237 + tmp_15*tmp_238;
      real_t tmp_249 = tmp_14*tmp_237 + tmp_238*tmp_7 + tmp_239*tmp_4;
      real_t tmp_250 = tmp_244*tmp_62 + tmp_245*tmp_58 + tmp_246*tmp_55;
      real_t tmp_251 = tmp_244*tmp_65 + tmp_245*tmp_53 + tmp_246*tmp_57;
      real_t tmp_252 = 0.60796128279561268*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_253 = tmp_19*(tmp_20 + tmp_252);
      real_t tmp_254 = 0.60796128279561268*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_255 = tmp_19*(tmp_254 + tmp_27);
      real_t tmp_256 = 0.60796128279561268*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_257 = tmp_19*(tmp_256 + tmp_34);
      real_t tmp_258 = tmp_253*tmp_9 + tmp_255*tmp_26 + tmp_257*tmp_33 - 1.0/4.0;
      real_t tmp_259 = tmp_253*tmp_41 + tmp_255*tmp_42 + tmp_257*tmp_43 - 1.0/4.0;
      real_t tmp_260 = tmp_253*tmp_45 + tmp_255*tmp_46 + tmp_257*tmp_47 - 1.0/4.0;
      real_t tmp_261 = tmp_1*tmp_258 + tmp_2*tmp_259 + tmp_260*tmp_6;
      real_t tmp_262 = tmp_69*(tmp_252 + tmp_89);
      real_t tmp_263 = tmp_69*(tmp_254 + tmp_91);
      real_t tmp_264 = tmp_69*(tmp_256 + tmp_93);
      real_t tmp_265 = tmp_262*tmp_84 + tmp_263*tmp_73 + tmp_264*tmp_60 - 1.0/4.0;
      real_t tmp_266 = tmp_262*tmp_85 + tmp_263*tmp_76 + tmp_264*tmp_71 - 1.0/4.0;
      real_t tmp_267 = tmp_262*tmp_86 + tmp_263*tmp_78 + tmp_264*tmp_72 - 1.0/4.0;
      real_t tmp_268 = tmp_265*tmp_51 + tmp_266*tmp_61 + tmp_267*tmp_64;
      real_t tmp_269 = tmp_11*tmp_260 + tmp_13*tmp_258 + tmp_15*tmp_259;
      real_t tmp_270 = tmp_14*tmp_258 + tmp_259*tmp_7 + tmp_260*tmp_4;
      real_t tmp_271 = tmp_265*tmp_62 + tmp_266*tmp_58 + tmp_267*tmp_55;
      real_t tmp_272 = tmp_265*tmp_65 + tmp_266*tmp_53 + tmp_267*tmp_57;
      real_t tmp_273 = 0.19107600050469298*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_274 = tmp_19*(tmp_20 + tmp_273);
      real_t tmp_275 = 0.19107600050469298*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_276 = tmp_19*(tmp_27 + tmp_275);
      real_t tmp_277 = 0.19107600050469298*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_278 = tmp_19*(tmp_277 + tmp_34);
      real_t tmp_279 = tmp_26*tmp_276 + tmp_274*tmp_9 + tmp_278*tmp_33 - 1.0/4.0;
      real_t tmp_280 = tmp_274*tmp_41 + tmp_276*tmp_42 + tmp_278*tmp_43 - 1.0/4.0;
      real_t tmp_281 = tmp_274*tmp_45 + tmp_276*tmp_46 + tmp_278*tmp_47 - 1.0/4.0;
      real_t tmp_282 = tmp_1*tmp_279 + tmp_2*tmp_280 + tmp_281*tmp_6;
      real_t tmp_283 = tmp_69*(tmp_273 + tmp_89);
      real_t tmp_284 = tmp_69*(tmp_275 + tmp_91);
      real_t tmp_285 = tmp_69*(tmp_277 + tmp_93);
      real_t tmp_286 = tmp_283*tmp_84 + tmp_284*tmp_73 + tmp_285*tmp_60 - 1.0/4.0;
      real_t tmp_287 = tmp_283*tmp_85 + tmp_284*tmp_76 + tmp_285*tmp_71 - 1.0/4.0;
      real_t tmp_288 = tmp_283*tmp_86 + tmp_284*tmp_78 + tmp_285*tmp_72 - 1.0/4.0;
      real_t tmp_289 = tmp_286*tmp_51 + tmp_287*tmp_61 + tmp_288*tmp_64;
      real_t tmp_290 = tmp_11*tmp_281 + tmp_13*tmp_279 + tmp_15*tmp_280;
      real_t tmp_291 = tmp_14*tmp_279 + tmp_280*tmp_7 + tmp_281*tmp_4;
      real_t tmp_292 = tmp_286*tmp_62 + tmp_287*tmp_58 + tmp_288*tmp_55;
      real_t tmp_293 = tmp_286*tmp_65 + tmp_287*tmp_53 + tmp_288*tmp_57;
      real_t tmp_294 = 0.031405749086161582*tmp_22 + 0.031405749086161582*tmp_23;
      real_t tmp_295 = tmp_19*(tmp_20 + tmp_294);
      real_t tmp_296 = 0.031405749086161582*tmp_29 + 0.031405749086161582*tmp_30;
      real_t tmp_297 = tmp_19*(tmp_27 + tmp_296);
      real_t tmp_298 = 0.031405749086161582*tmp_36 + 0.031405749086161582*tmp_37;
      real_t tmp_299 = tmp_19*(tmp_298 + tmp_34);
      real_t tmp_300 = tmp_26*tmp_297 + tmp_295*tmp_9 + tmp_299*tmp_33 - 1.0/4.0;
      real_t tmp_301 = tmp_295*tmp_41 + tmp_297*tmp_42 + tmp_299*tmp_43 - 1.0/4.0;
      real_t tmp_302 = tmp_295*tmp_45 + tmp_297*tmp_46 + tmp_299*tmp_47 - 1.0/4.0;
      real_t tmp_303 = tmp_1*tmp_300 + tmp_2*tmp_301 + tmp_302*tmp_6;
      real_t tmp_304 = tmp_69*(tmp_294 + tmp_89);
      real_t tmp_305 = tmp_69*(tmp_296 + tmp_91);
      real_t tmp_306 = tmp_69*(tmp_298 + tmp_93);
      real_t tmp_307 = tmp_304*tmp_84 + tmp_305*tmp_73 + tmp_306*tmp_60 - 1.0/4.0;
      real_t tmp_308 = tmp_304*tmp_85 + tmp_305*tmp_76 + tmp_306*tmp_71 - 1.0/4.0;
      real_t tmp_309 = tmp_304*tmp_86 + tmp_305*tmp_78 + tmp_306*tmp_72 - 1.0/4.0;
      real_t tmp_310 = tmp_307*tmp_51 + tmp_308*tmp_61 + tmp_309*tmp_64;
      real_t tmp_311 = tmp_11*tmp_302 + tmp_13*tmp_300 + tmp_15*tmp_301;
      real_t tmp_312 = tmp_14*tmp_300 + tmp_301*tmp_7 + tmp_302*tmp_4;
      real_t tmp_313 = tmp_307*tmp_62 + tmp_308*tmp_58 + tmp_309*tmp_55;
      real_t tmp_314 = tmp_307*tmp_65 + tmp_308*tmp_53 + tmp_309*tmp_57;
      real_t tmp_315 = 0.19601935860219369*tmp_22 + 0.19601935860219369*tmp_23;
      real_t tmp_316 = tmp_19*(tmp_20 + tmp_315);
      real_t tmp_317 = 0.19601935860219369*tmp_29 + 0.19601935860219369*tmp_30;
      real_t tmp_318 = tmp_19*(tmp_27 + tmp_317);
      real_t tmp_319 = 0.19601935860219369*tmp_36 + 0.19601935860219369*tmp_37;
      real_t tmp_320 = tmp_19*(tmp_319 + tmp_34);
      real_t tmp_321 = tmp_26*tmp_318 + tmp_316*tmp_9 + tmp_320*tmp_33 - 1.0/4.0;
      real_t tmp_322 = tmp_316*tmp_41 + tmp_318*tmp_42 + tmp_320*tmp_43 - 1.0/4.0;
      real_t tmp_323 = tmp_316*tmp_45 + tmp_318*tmp_46 + tmp_320*tmp_47 - 1.0/4.0;
      real_t tmp_324 = tmp_1*tmp_321 + tmp_2*tmp_322 + tmp_323*tmp_6;
      real_t tmp_325 = tmp_69*(tmp_315 + tmp_89);
      real_t tmp_326 = tmp_69*(tmp_317 + tmp_91);
      real_t tmp_327 = tmp_69*(tmp_319 + tmp_93);
      real_t tmp_328 = tmp_325*tmp_84 + tmp_326*tmp_73 + tmp_327*tmp_60 - 1.0/4.0;
      real_t tmp_329 = tmp_325*tmp_85 + tmp_326*tmp_76 + tmp_327*tmp_71 - 1.0/4.0;
      real_t tmp_330 = tmp_325*tmp_86 + tmp_326*tmp_78 + tmp_327*tmp_72 - 1.0/4.0;
      real_t tmp_331 = tmp_328*tmp_51 + tmp_329*tmp_61 + tmp_330*tmp_64;
      real_t tmp_332 = tmp_11*tmp_323 + tmp_13*tmp_321 + tmp_15*tmp_322;
      real_t tmp_333 = tmp_14*tmp_321 + tmp_322*tmp_7 + tmp_323*tmp_4;
      real_t tmp_334 = tmp_328*tmp_62 + tmp_329*tmp_58 + tmp_330*tmp_55;
      real_t tmp_335 = tmp_328*tmp_65 + tmp_329*tmp_53 + tmp_330*tmp_57;
      real_t tmp_336 = 0.40446199974765351*tmp_22 + 0.40446199974765351*tmp_23;
      real_t tmp_337 = tmp_19*(tmp_20 + tmp_336);
      real_t tmp_338 = 0.40446199974765351*tmp_29 + 0.40446199974765351*tmp_30;
      real_t tmp_339 = tmp_19*(tmp_27 + tmp_338);
      real_t tmp_340 = 0.40446199974765351*tmp_36 + 0.40446199974765351*tmp_37;
      real_t tmp_341 = tmp_19*(tmp_34 + tmp_340);
      real_t tmp_342 = tmp_26*tmp_339 + tmp_33*tmp_341 + tmp_337*tmp_9 - 1.0/4.0;
      real_t tmp_343 = tmp_337*tmp_41 + tmp_339*tmp_42 + tmp_341*tmp_43 - 1.0/4.0;
      real_t tmp_344 = tmp_337*tmp_45 + tmp_339*tmp_46 + tmp_341*tmp_47 - 1.0/4.0;
      real_t tmp_345 = tmp_1*tmp_342 + tmp_2*tmp_343 + tmp_344*tmp_6;
      real_t tmp_346 = tmp_69*(tmp_336 + tmp_89);
      real_t tmp_347 = tmp_69*(tmp_338 + tmp_91);
      real_t tmp_348 = tmp_69*(tmp_340 + tmp_93);
      real_t tmp_349 = tmp_346*tmp_84 + tmp_347*tmp_73 + tmp_348*tmp_60 - 1.0/4.0;
      real_t tmp_350 = tmp_346*tmp_85 + tmp_347*tmp_76 + tmp_348*tmp_71 - 1.0/4.0;
      real_t tmp_351 = tmp_346*tmp_86 + tmp_347*tmp_78 + tmp_348*tmp_72 - 1.0/4.0;
      real_t tmp_352 = tmp_349*tmp_51 + tmp_350*tmp_61 + tmp_351*tmp_64;
      real_t tmp_353 = tmp_11*tmp_344 + tmp_13*tmp_342 + tmp_15*tmp_343;
      real_t tmp_354 = tmp_14*tmp_342 + tmp_343*tmp_7 + tmp_344*tmp_4;
      real_t tmp_355 = tmp_349*tmp_62 + tmp_350*tmp_58 + tmp_351*tmp_55;
      real_t tmp_356 = tmp_349*tmp_65 + tmp_350*tmp_53 + tmp_351*tmp_57;
      real_t tmp_357 = 0.37605877282253791*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_358 = tmp_19*(tmp_20 + tmp_357);
      real_t tmp_359 = 0.37605877282253791*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_360 = tmp_19*(tmp_27 + tmp_359);
      real_t tmp_361 = 0.37605877282253791*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_362 = tmp_19*(tmp_34 + tmp_361);
      real_t tmp_363 = tmp_26*tmp_360 + tmp_33*tmp_362 + tmp_358*tmp_9 - 1.0/4.0;
      real_t tmp_364 = tmp_358*tmp_41 + tmp_360*tmp_42 + tmp_362*tmp_43 - 1.0/4.0;
      real_t tmp_365 = tmp_358*tmp_45 + tmp_360*tmp_46 + tmp_362*tmp_47 - 1.0/4.0;
      real_t tmp_366 = tmp_1*tmp_363 + tmp_2*tmp_364 + tmp_365*tmp_6;
      real_t tmp_367 = tmp_69*(tmp_357 + tmp_89);
      real_t tmp_368 = tmp_69*(tmp_359 + tmp_91);
      real_t tmp_369 = tmp_69*(tmp_361 + tmp_93);
      real_t tmp_370 = tmp_367*tmp_84 + tmp_368*tmp_73 + tmp_369*tmp_60 - 1.0/4.0;
      real_t tmp_371 = tmp_367*tmp_85 + tmp_368*tmp_76 + tmp_369*tmp_71 - 1.0/4.0;
      real_t tmp_372 = tmp_367*tmp_86 + tmp_368*tmp_78 + tmp_369*tmp_72 - 1.0/4.0;
      real_t tmp_373 = tmp_370*tmp_51 + tmp_371*tmp_61 + tmp_372*tmp_64;
      real_t tmp_374 = tmp_11*tmp_365 + tmp_13*tmp_363 + tmp_15*tmp_364;
      real_t tmp_375 = tmp_14*tmp_363 + tmp_364*tmp_7 + tmp_365*tmp_4;
      real_t tmp_376 = tmp_370*tmp_62 + tmp_371*tmp_58 + tmp_372*tmp_55;
      real_t tmp_377 = tmp_370*tmp_65 + tmp_371*tmp_53 + tmp_372*tmp_57;
      real_t tmp_378 = 0.1711304259088916*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_379 = tmp_19*(tmp_20 + tmp_378);
      real_t tmp_380 = 0.1711304259088916*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_381 = tmp_19*(tmp_27 + tmp_380);
      real_t tmp_382 = 0.1711304259088916*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_383 = tmp_19*(tmp_34 + tmp_382);
      real_t tmp_384 = tmp_26*tmp_381 + tmp_33*tmp_383 + tmp_379*tmp_9 - 1.0/4.0;
      real_t tmp_385 = tmp_379*tmp_41 + tmp_381*tmp_42 + tmp_383*tmp_43 - 1.0/4.0;
      real_t tmp_386 = tmp_379*tmp_45 + tmp_381*tmp_46 + tmp_383*tmp_47 - 1.0/4.0;
      real_t tmp_387 = tmp_1*tmp_384 + tmp_2*tmp_385 + tmp_386*tmp_6;
      real_t tmp_388 = tmp_69*(tmp_378 + tmp_89);
      real_t tmp_389 = tmp_69*(tmp_380 + tmp_91);
      real_t tmp_390 = tmp_69*(tmp_382 + tmp_93);
      real_t tmp_391 = tmp_388*tmp_84 + tmp_389*tmp_73 + tmp_390*tmp_60 - 1.0/4.0;
      real_t tmp_392 = tmp_388*tmp_85 + tmp_389*tmp_76 + tmp_390*tmp_71 - 1.0/4.0;
      real_t tmp_393 = tmp_388*tmp_86 + tmp_389*tmp_78 + tmp_390*tmp_72 - 1.0/4.0;
      real_t tmp_394 = tmp_391*tmp_51 + tmp_392*tmp_61 + tmp_393*tmp_64;
      real_t tmp_395 = tmp_11*tmp_386 + tmp_13*tmp_384 + tmp_15*tmp_385;
      real_t tmp_396 = tmp_14*tmp_384 + tmp_385*tmp_7 + tmp_386*tmp_4;
      real_t tmp_397 = tmp_391*tmp_62 + tmp_392*tmp_58 + tmp_393*tmp_55;
      real_t tmp_398 = tmp_391*tmp_65 + tmp_392*tmp_53 + tmp_393*tmp_57;
      real_t tmp_399 = 0.78764240869137092*tmp_22 + 0.1711304259088916*tmp_23;
      real_t tmp_400 = tmp_19*(tmp_20 + tmp_399);
      real_t tmp_401 = 0.78764240869137092*tmp_29 + 0.1711304259088916*tmp_30;
      real_t tmp_402 = tmp_19*(tmp_27 + tmp_401);
      real_t tmp_403 = 0.78764240869137092*tmp_36 + 0.1711304259088916*tmp_37;
      real_t tmp_404 = tmp_19*(tmp_34 + tmp_403);
      real_t tmp_405 = tmp_26*tmp_402 + tmp_33*tmp_404 + tmp_400*tmp_9 - 1.0/4.0;
      real_t tmp_406 = tmp_400*tmp_41 + tmp_402*tmp_42 + tmp_404*tmp_43 - 1.0/4.0;
      real_t tmp_407 = tmp_400*tmp_45 + tmp_402*tmp_46 + tmp_404*tmp_47 - 1.0/4.0;
      real_t tmp_408 = tmp_1*tmp_405 + tmp_2*tmp_406 + tmp_407*tmp_6;
      real_t tmp_409 = tmp_69*(tmp_399 + tmp_89);
      real_t tmp_410 = tmp_69*(tmp_401 + tmp_91);
      real_t tmp_411 = tmp_69*(tmp_403 + tmp_93);
      real_t tmp_412 = tmp_409*tmp_84 + tmp_410*tmp_73 + tmp_411*tmp_60 - 1.0/4.0;
      real_t tmp_413 = tmp_409*tmp_85 + tmp_410*tmp_76 + tmp_411*tmp_71 - 1.0/4.0;
      real_t tmp_414 = tmp_409*tmp_86 + tmp_410*tmp_78 + tmp_411*tmp_72 - 1.0/4.0;
      real_t tmp_415 = tmp_412*tmp_51 + tmp_413*tmp_61 + tmp_414*tmp_64;
      real_t tmp_416 = tmp_11*tmp_407 + tmp_13*tmp_405 + tmp_15*tmp_406;
      real_t tmp_417 = tmp_14*tmp_405 + tmp_4*tmp_407 + tmp_406*tmp_7;
      real_t tmp_418 = tmp_412*tmp_62 + tmp_413*tmp_58 + tmp_414*tmp_55;
      real_t tmp_419 = tmp_412*tmp_65 + tmp_413*tmp_53 + tmp_414*tmp_57;
      real_t tmp_420 = 0.58463275527740355*tmp_22 + 0.37605877282253791*tmp_23;
      real_t tmp_421 = tmp_19*(tmp_20 + tmp_420);
      real_t tmp_422 = 0.58463275527740355*tmp_29 + 0.37605877282253791*tmp_30;
      real_t tmp_423 = tmp_19*(tmp_27 + tmp_422);
      real_t tmp_424 = 0.58463275527740355*tmp_36 + 0.37605877282253791*tmp_37;
      real_t tmp_425 = tmp_19*(tmp_34 + tmp_424);
      real_t tmp_426 = tmp_26*tmp_423 + tmp_33*tmp_425 + tmp_421*tmp_9 - 1.0/4.0;
      real_t tmp_427 = tmp_41*tmp_421 + tmp_42*tmp_423 + tmp_425*tmp_43 - 1.0/4.0;
      real_t tmp_428 = tmp_421*tmp_45 + tmp_423*tmp_46 + tmp_425*tmp_47 - 1.0/4.0;
      real_t tmp_429 = tmp_1*tmp_426 + tmp_2*tmp_427 + tmp_428*tmp_6;
      real_t tmp_430 = tmp_69*(tmp_420 + tmp_89);
      real_t tmp_431 = tmp_69*(tmp_422 + tmp_91);
      real_t tmp_432 = tmp_69*(tmp_424 + tmp_93);
      real_t tmp_433 = tmp_430*tmp_84 + tmp_431*tmp_73 + tmp_432*tmp_60 - 1.0/4.0;
      real_t tmp_434 = tmp_430*tmp_85 + tmp_431*tmp_76 + tmp_432*tmp_71 - 1.0/4.0;
      real_t tmp_435 = tmp_430*tmp_86 + tmp_431*tmp_78 + tmp_432*tmp_72 - 1.0/4.0;
      real_t tmp_436 = tmp_433*tmp_51 + tmp_434*tmp_61 + tmp_435*tmp_64;
      real_t tmp_437 = tmp_11*tmp_428 + tmp_13*tmp_426 + tmp_15*tmp_427;
      real_t tmp_438 = tmp_14*tmp_426 + tmp_4*tmp_428 + tmp_427*tmp_7;
      real_t tmp_439 = tmp_433*tmp_62 + tmp_434*tmp_58 + tmp_435*tmp_55;
      real_t tmp_440 = tmp_433*tmp_65 + tmp_434*tmp_53 + tmp_435*tmp_57;
      real_t tmp_441 = 0.041227165399737475*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_442 = tmp_19*(tmp_20 + tmp_441);
      real_t tmp_443 = 0.041227165399737475*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_444 = tmp_19*(tmp_27 + tmp_443);
      real_t tmp_445 = 0.041227165399737475*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_446 = tmp_19*(tmp_34 + tmp_445);
      real_t tmp_447 = tmp_26*tmp_444 + tmp_33*tmp_446 + tmp_442*tmp_9 - 1.0/4.0;
      real_t tmp_448 = tmp_41*tmp_442 + tmp_42*tmp_444 + tmp_43*tmp_446 - 1.0/4.0;
      real_t tmp_449 = tmp_442*tmp_45 + tmp_444*tmp_46 + tmp_446*tmp_47 - 1.0/4.0;
      real_t tmp_450 = tmp_1*tmp_447 + tmp_2*tmp_448 + tmp_449*tmp_6;
      real_t tmp_451 = tmp_69*(tmp_441 + tmp_89);
      real_t tmp_452 = tmp_69*(tmp_443 + tmp_91);
      real_t tmp_453 = tmp_69*(tmp_445 + tmp_93);
      real_t tmp_454 = tmp_451*tmp_84 + tmp_452*tmp_73 + tmp_453*tmp_60 - 1.0/4.0;
      real_t tmp_455 = tmp_451*tmp_85 + tmp_452*tmp_76 + tmp_453*tmp_71 - 1.0/4.0;
      real_t tmp_456 = tmp_451*tmp_86 + tmp_452*tmp_78 + tmp_453*tmp_72 - 1.0/4.0;
      real_t tmp_457 = tmp_454*tmp_51 + tmp_455*tmp_61 + tmp_456*tmp_64;
      real_t tmp_458 = tmp_11*tmp_449 + tmp_13*tmp_447 + tmp_15*tmp_448;
      real_t tmp_459 = tmp_14*tmp_447 + tmp_4*tmp_449 + tmp_448*tmp_7;
      real_t tmp_460 = tmp_454*tmp_62 + tmp_455*tmp_58 + tmp_456*tmp_55;
      real_t tmp_461 = tmp_454*tmp_65 + tmp_455*tmp_53 + tmp_456*tmp_57;
      real_t tmp_462 = 0.039308471900058539*tmp_22 + 0.58463275527740355*tmp_23;
      real_t tmp_463 = tmp_19*(tmp_20 + tmp_462);
      real_t tmp_464 = 0.039308471900058539*tmp_29 + 0.58463275527740355*tmp_30;
      real_t tmp_465 = tmp_19*(tmp_27 + tmp_464);
      real_t tmp_466 = 0.039308471900058539*tmp_36 + 0.58463275527740355*tmp_37;
      real_t tmp_467 = tmp_19*(tmp_34 + tmp_466);
      real_t tmp_468 = tmp_26*tmp_465 + tmp_33*tmp_467 + tmp_463*tmp_9 - 1.0/4.0;
      real_t tmp_469 = tmp_41*tmp_463 + tmp_42*tmp_465 + tmp_43*tmp_467 - 1.0/4.0;
      real_t tmp_470 = tmp_45*tmp_463 + tmp_46*tmp_465 + tmp_467*tmp_47 - 1.0/4.0;
      real_t tmp_471 = tmp_1*tmp_468 + tmp_2*tmp_469 + tmp_470*tmp_6;
      real_t tmp_472 = tmp_69*(tmp_462 + tmp_89);
      real_t tmp_473 = tmp_69*(tmp_464 + tmp_91);
      real_t tmp_474 = tmp_69*(tmp_466 + tmp_93);
      real_t tmp_475 = tmp_472*tmp_84 + tmp_473*tmp_73 + tmp_474*tmp_60 - 1.0/4.0;
      real_t tmp_476 = tmp_472*tmp_85 + tmp_473*tmp_76 + tmp_474*tmp_71 - 1.0/4.0;
      real_t tmp_477 = tmp_472*tmp_86 + tmp_473*tmp_78 + tmp_474*tmp_72 - 1.0/4.0;
      real_t tmp_478 = tmp_475*tmp_51 + tmp_476*tmp_61 + tmp_477*tmp_64;
      real_t tmp_479 = tmp_11*tmp_470 + tmp_13*tmp_468 + tmp_15*tmp_469;
      real_t tmp_480 = tmp_14*tmp_468 + tmp_4*tmp_470 + tmp_469*tmp_7;
      real_t tmp_481 = tmp_475*tmp_62 + tmp_476*tmp_58 + tmp_477*tmp_55;
      real_t tmp_482 = tmp_475*tmp_65 + tmp_476*tmp_53 + tmp_477*tmp_57;
      real_t tmp_483 = 0.78764240869137092*tmp_22 + 0.041227165399737475*tmp_23;
      real_t tmp_484 = tmp_19*(tmp_20 + tmp_483);
      real_t tmp_485 = 0.78764240869137092*tmp_29 + 0.041227165399737475*tmp_30;
      real_t tmp_486 = tmp_19*(tmp_27 + tmp_485);
      real_t tmp_487 = 0.78764240869137092*tmp_36 + 0.041227165399737475*tmp_37;
      real_t tmp_488 = tmp_19*(tmp_34 + tmp_487);
      real_t tmp_489 = tmp_26*tmp_486 + tmp_33*tmp_488 + tmp_484*tmp_9 - 1.0/4.0;
      real_t tmp_490 = tmp_41*tmp_484 + tmp_42*tmp_486 + tmp_43*tmp_488 - 1.0/4.0;
      real_t tmp_491 = tmp_45*tmp_484 + tmp_46*tmp_486 + tmp_47*tmp_488 - 1.0/4.0;
      real_t tmp_492 = tmp_1*tmp_489 + tmp_2*tmp_490 + tmp_491*tmp_6;
      real_t tmp_493 = tmp_69*(tmp_483 + tmp_89);
      real_t tmp_494 = tmp_69*(tmp_485 + tmp_91);
      real_t tmp_495 = tmp_69*(tmp_487 + tmp_93);
      real_t tmp_496 = tmp_493*tmp_84 + tmp_494*tmp_73 + tmp_495*tmp_60 - 1.0/4.0;
      real_t tmp_497 = tmp_493*tmp_85 + tmp_494*tmp_76 + tmp_495*tmp_71 - 1.0/4.0;
      real_t tmp_498 = tmp_493*tmp_86 + tmp_494*tmp_78 + tmp_495*tmp_72 - 1.0/4.0;
      real_t tmp_499 = tmp_496*tmp_51 + tmp_497*tmp_61 + tmp_498*tmp_64;
      real_t tmp_500 = tmp_11*tmp_491 + tmp_13*tmp_489 + tmp_15*tmp_490;
      real_t tmp_501 = tmp_14*tmp_489 + tmp_4*tmp_491 + tmp_490*tmp_7;
      real_t tmp_502 = tmp_496*tmp_62 + tmp_497*tmp_58 + tmp_498*tmp_55;
      real_t tmp_503 = tmp_496*tmp_65 + tmp_497*tmp_53 + tmp_498*tmp_57;
      real_t tmp_504 = 0.58463275527740355*tmp_22 + 0.039308471900058539*tmp_23;
      real_t tmp_505 = tmp_19*(tmp_20 + tmp_504);
      real_t tmp_506 = 0.58463275527740355*tmp_29 + 0.039308471900058539*tmp_30;
      real_t tmp_507 = tmp_19*(tmp_27 + tmp_506);
      real_t tmp_508 = 0.58463275527740355*tmp_36 + 0.039308471900058539*tmp_37;
      real_t tmp_509 = tmp_19*(tmp_34 + tmp_508);
      real_t tmp_510 = tmp_26*tmp_507 + tmp_33*tmp_509 + tmp_505*tmp_9 - 1.0/4.0;
      real_t tmp_511 = tmp_41*tmp_505 + tmp_42*tmp_507 + tmp_43*tmp_509 - 1.0/4.0;
      real_t tmp_512 = tmp_45*tmp_505 + tmp_46*tmp_507 + tmp_47*tmp_509 - 1.0/4.0;
      real_t tmp_513 = tmp_1*tmp_510 + tmp_2*tmp_511 + tmp_512*tmp_6;
      real_t tmp_514 = tmp_69*(tmp_504 + tmp_89);
      real_t tmp_515 = tmp_69*(tmp_506 + tmp_91);
      real_t tmp_516 = tmp_69*(tmp_508 + tmp_93);
      real_t tmp_517 = tmp_514*tmp_84 + tmp_515*tmp_73 + tmp_516*tmp_60 - 1.0/4.0;
      real_t tmp_518 = tmp_514*tmp_85 + tmp_515*tmp_76 + tmp_516*tmp_71 - 1.0/4.0;
      real_t tmp_519 = tmp_514*tmp_86 + tmp_515*tmp_78 + tmp_516*tmp_72 - 1.0/4.0;
      real_t tmp_520 = tmp_51*tmp_517 + tmp_518*tmp_61 + tmp_519*tmp_64;
      real_t tmp_521 = tmp_11*tmp_512 + tmp_13*tmp_510 + tmp_15*tmp_511;
      real_t tmp_522 = tmp_14*tmp_510 + tmp_4*tmp_512 + tmp_511*tmp_7;
      real_t tmp_523 = tmp_517*tmp_62 + tmp_518*tmp_58 + tmp_519*tmp_55;
      real_t tmp_524 = tmp_517*tmp_65 + tmp_518*tmp_53 + tmp_519*tmp_57;
      real_t tmp_525 = 0.1711304259088916*tmp_22 + 0.78764240869137092*tmp_23;
      real_t tmp_526 = tmp_19*(tmp_20 + tmp_525);
      real_t tmp_527 = 0.1711304259088916*tmp_29 + 0.78764240869137092*tmp_30;
      real_t tmp_528 = tmp_19*(tmp_27 + tmp_527);
      real_t tmp_529 = 0.1711304259088916*tmp_36 + 0.78764240869137092*tmp_37;
      real_t tmp_530 = tmp_19*(tmp_34 + tmp_529);
      real_t tmp_531 = tmp_26*tmp_528 + tmp_33*tmp_530 + tmp_526*tmp_9 - 1.0/4.0;
      real_t tmp_532 = tmp_41*tmp_526 + tmp_42*tmp_528 + tmp_43*tmp_530 - 1.0/4.0;
      real_t tmp_533 = tmp_45*tmp_526 + tmp_46*tmp_528 + tmp_47*tmp_530 - 1.0/4.0;
      real_t tmp_534 = tmp_1*tmp_531 + tmp_2*tmp_532 + tmp_533*tmp_6;
      real_t tmp_535 = tmp_69*(tmp_525 + tmp_89);
      real_t tmp_536 = tmp_69*(tmp_527 + tmp_91);
      real_t tmp_537 = tmp_69*(tmp_529 + tmp_93);
      real_t tmp_538 = tmp_535*tmp_84 + tmp_536*tmp_73 + tmp_537*tmp_60 - 1.0/4.0;
      real_t tmp_539 = tmp_535*tmp_85 + tmp_536*tmp_76 + tmp_537*tmp_71 - 1.0/4.0;
      real_t tmp_540 = tmp_535*tmp_86 + tmp_536*tmp_78 + tmp_537*tmp_72 - 1.0/4.0;
      real_t tmp_541 = tmp_51*tmp_538 + tmp_539*tmp_61 + tmp_540*tmp_64;
      real_t tmp_542 = tmp_11*tmp_533 + tmp_13*tmp_531 + tmp_15*tmp_532;
      real_t tmp_543 = tmp_14*tmp_531 + tmp_4*tmp_533 + tmp_532*tmp_7;
      real_t tmp_544 = tmp_538*tmp_62 + tmp_539*tmp_58 + tmp_540*tmp_55;
      real_t tmp_545 = tmp_53*tmp_539 + tmp_538*tmp_65 + tmp_540*tmp_57;
      real_t a_0_0 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_125*(-tmp_109*tmp_98 + tmp_110*tmp_112 + tmp_113*tmp_114 - tmp_115*tmp_117 - tmp_118*tmp_119 - tmp_124*(tmp_110*tmp_115 + tmp_113*tmp_118 + tmp_49*tmp_98) + tmp_49*tmp_88) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_125*(-tmp_109*tmp_142 + tmp_112*tmp_143 + tmp_114*tmp_144 - tmp_117*tmp_145 - tmp_119*tmp_146 - tmp_124*(tmp_135*tmp_142 + tmp_143*tmp_145 + tmp_144*tmp_146) + tmp_135*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_125*(-tmp_109*tmp_163 + tmp_112*tmp_164 + tmp_114*tmp_165 - tmp_117*tmp_166 - tmp_119*tmp_167 - tmp_124*(tmp_156*tmp_163 + tmp_164*tmp_166 + tmp_165*tmp_167) + tmp_156*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_125*(-tmp_109*tmp_184 + tmp_112*tmp_185 + tmp_114*tmp_186 - tmp_117*tmp_187 - tmp_119*tmp_188 - tmp_124*(tmp_177*tmp_184 + tmp_185*tmp_187 + tmp_186*tmp_188) + tmp_177*tmp_88) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_125*(-tmp_109*tmp_205 + tmp_112*tmp_206 + tmp_114*tmp_207 - tmp_117*tmp_208 - tmp_119*tmp_209 - tmp_124*(tmp_198*tmp_205 + tmp_206*tmp_208 + tmp_207*tmp_209) + tmp_198*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_125*(-tmp_109*tmp_226 + tmp_112*tmp_227 + tmp_114*tmp_228 - tmp_117*tmp_229 - tmp_119*tmp_230 - tmp_124*(tmp_219*tmp_226 + tmp_227*tmp_229 + tmp_228*tmp_230) + tmp_219*tmp_88) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_125*(-tmp_109*tmp_247 + tmp_112*tmp_248 + tmp_114*tmp_249 - tmp_117*tmp_250 - tmp_119*tmp_251 - tmp_124*(tmp_240*tmp_247 + tmp_248*tmp_250 + tmp_249*tmp_251) + tmp_240*tmp_88) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_125*(-tmp_109*tmp_268 + tmp_112*tmp_269 + tmp_114*tmp_270 - tmp_117*tmp_271 - tmp_119*tmp_272 - tmp_124*(tmp_261*tmp_268 + tmp_269*tmp_271 + tmp_270*tmp_272) + tmp_261*tmp_88) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_125*(-tmp_109*tmp_289 + tmp_112*tmp_290 + tmp_114*tmp_291 - tmp_117*tmp_292 - tmp_119*tmp_293 - tmp_124*(tmp_282*tmp_289 + tmp_290*tmp_292 + tmp_291*tmp_293) + tmp_282*tmp_88) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_125*(-tmp_109*tmp_310 + tmp_112*tmp_311 + tmp_114*tmp_312 - tmp_117*tmp_313 - tmp_119*tmp_314 - tmp_124*(tmp_303*tmp_310 + tmp_311*tmp_313 + tmp_312*tmp_314) + tmp_303*tmp_88) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_125*(-tmp_109*tmp_331 + tmp_112*tmp_332 + tmp_114*tmp_333 - tmp_117*tmp_334 - tmp_119*tmp_335 - tmp_124*(tmp_324*tmp_331 + tmp_332*tmp_334 + tmp_333*tmp_335) + tmp_324*tmp_88) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_125*(-tmp_109*tmp_352 + tmp_112*tmp_353 + tmp_114*tmp_354 - tmp_117*tmp_355 - tmp_119*tmp_356 - tmp_124*(tmp_345*tmp_352 + tmp_353*tmp_355 + tmp_354*tmp_356) + tmp_345*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_125*(-tmp_109*tmp_373 + tmp_112*tmp_374 + tmp_114*tmp_375 - tmp_117*tmp_376 - tmp_119*tmp_377 - tmp_124*(tmp_366*tmp_373 + tmp_374*tmp_376 + tmp_375*tmp_377) + tmp_366*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_125*(-tmp_109*tmp_394 + tmp_112*tmp_395 + tmp_114*tmp_396 - tmp_117*tmp_397 - tmp_119*tmp_398 - tmp_124*(tmp_387*tmp_394 + tmp_395*tmp_397 + tmp_396*tmp_398) + tmp_387*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_125*(-tmp_109*tmp_415 + tmp_112*tmp_416 + tmp_114*tmp_417 - tmp_117*tmp_418 - tmp_119*tmp_419 - tmp_124*(tmp_408*tmp_415 + tmp_416*tmp_418 + tmp_417*tmp_419) + tmp_408*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_125*(-tmp_109*tmp_436 + tmp_112*tmp_437 + tmp_114*tmp_438 - tmp_117*tmp_439 - tmp_119*tmp_440 - tmp_124*(tmp_429*tmp_436 + tmp_437*tmp_439 + tmp_438*tmp_440) + tmp_429*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_125*(-tmp_109*tmp_457 + tmp_112*tmp_458 + tmp_114*tmp_459 - tmp_117*tmp_460 - tmp_119*tmp_461 - tmp_124*(tmp_450*tmp_457 + tmp_458*tmp_460 + tmp_459*tmp_461) + tmp_450*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_125*(-tmp_109*tmp_478 + tmp_112*tmp_479 + tmp_114*tmp_480 - tmp_117*tmp_481 - tmp_119*tmp_482 - tmp_124*(tmp_471*tmp_478 + tmp_479*tmp_481 + tmp_480*tmp_482) + tmp_471*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_125*(-tmp_109*tmp_499 + tmp_112*tmp_500 + tmp_114*tmp_501 - tmp_117*tmp_502 - tmp_119*tmp_503 - tmp_124*(tmp_492*tmp_499 + tmp_500*tmp_502 + tmp_501*tmp_503) + tmp_492*tmp_88) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_125*(-tmp_109*tmp_520 + tmp_112*tmp_521 + tmp_114*tmp_522 - tmp_117*tmp_523 - tmp_119*tmp_524 - tmp_124*(tmp_513*tmp_520 + tmp_521*tmp_523 + tmp_522*tmp_524) + tmp_513*tmp_88) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_125*(-tmp_109*tmp_541 + tmp_112*tmp_542 + tmp_114*tmp_543 - tmp_117*tmp_544 - tmp_119*tmp_545 - tmp_124*(tmp_534*tmp_541 + tmp_542*tmp_544 + tmp_543*tmp_545) + tmp_534*tmp_88);
      elMat( 0, 0) = a_0_0;
}



void integrateFacetDirichletBoundary3D(
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsElement,
    const std::vector< Eigen::Matrix< real_t, 3, 1 > >& coordsFacet,
    const Eigen::Matrix< real_t, 3, 1 >&,
    const Eigen::Matrix< real_t, 3, 1 >&                     outwardNormal,
    const DGBasisInfo&                                       trialBasis,
    const DGBasisInfo&                                       testBasis,
    int                                                      trialDegree,
    int                                                      testDegree,
    Eigen::Matrix< real_t, Eigen::Dynamic, Eigen::Dynamic >& elMat ) const
{
   elMat.resize( Eigen::Index( testBasis.numDoFsPerElement( 3, uint_c( testDegree ) ) ),
                 Eigen::Index( trialBasis.numDoFsPerElement( 3, uint_c( trialDegree ) ) ) );

   const auto p_affine_0_0 = coordsElement[0]( 0 );
   const auto p_affine_0_1 = coordsElement[0]( 1 );
   const auto p_affine_0_2 = coordsElement[0]( 2 );

   const auto p_affine_1_0 = coordsElement[1]( 0 );
   const auto p_affine_1_1 = coordsElement[1]( 1 );
   const auto p_affine_1_2 = coordsElement[1]( 2 );

   const auto p_affine_2_0 = coordsElement[2]( 0 );
   const auto p_affine_2_1 = coordsElement[2]( 1 );
   const auto p_affine_2_2 = coordsElement[2]( 2 );

   const auto p_affine_3_0 = coordsElement[3]( 0 );
   const auto p_affine_3_1 = coordsElement[3]( 1 );
   const auto p_affine_3_2 = coordsElement[3]( 2 );

   const auto p_affine_8_0 = coordsFacet[0]( 0 );
   const auto p_affine_8_1 = coordsFacet[0]( 1 );
   const auto p_affine_8_2 = coordsFacet[0]( 2 );

   const auto p_affine_9_0 = coordsFacet[1]( 0 );
   const auto p_affine_9_1 = coordsFacet[1]( 1 );
   const auto p_affine_9_2 = coordsFacet[1]( 2 );

   const auto p_affine_10_0 = coordsFacet[2]( 0 );
   const auto p_affine_10_1 = coordsFacet[2]( 1 );
   const auto p_affine_10_2 = coordsFacet[2]( 2 );

   const auto p_affine_13_0 = outwardNormal( 0 );
   const auto p_affine_13_1 = outwardNormal( 1 );
   const auto p_affine_13_2 = outwardNormal( 2 );


      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id4 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id5 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id6 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id7 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id8 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id9 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id10 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id11 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id12 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id13 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id14 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id15 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id16 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id17 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id18 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id19 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id20 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.93718850182767688*p_affine_10_0 + 0.031405749086161561*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.93718850182767688*p_affine_10_1 + 0.031405749086161561*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.93718850182767688*p_affine_10_2 + 0.031405749086161561*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.60796128279561268*p_affine_10_0 + 0.19601935860219366*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.60796128279561268*p_affine_10_1 + 0.19601935860219366*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.60796128279561268*p_affine_10_2 + 0.19601935860219366*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.039308471900058539*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.039308471900058539*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.039308471900058539*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id4 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id5 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.37605877282253797*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.37605877282253797*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.37605877282253797*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id6 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.1711304259088916*p_affine_8_0 + 0.78764240869137092*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.1711304259088916*p_affine_8_1 + 0.78764240869137092*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.1711304259088916*p_affine_8_2 + 0.78764240869137092*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id7 );
      Scalar_Variable_Coefficient_3D_mu( 0.039308471900058539*p_affine_10_0 + 0.37605877282253791*p_affine_8_0 + 0.58463275527740355*p_affine_9_0, 0.039308471900058539*p_affine_10_1 + 0.37605877282253791*p_affine_8_1 + 0.58463275527740355*p_affine_9_1, 0.039308471900058539*p_affine_10_2 + 0.37605877282253791*p_affine_8_2 + 0.58463275527740355*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id8 );
      Scalar_Variable_Coefficient_3D_mu( 0.78764240869137092*p_affine_10_0 + 0.041227165399737475*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.78764240869137092*p_affine_10_1 + 0.041227165399737475*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.78764240869137092*p_affine_10_2 + 0.041227165399737475*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id9 );
      Scalar_Variable_Coefficient_3D_mu( 0.58463275527740355*p_affine_10_0 + 0.039308471900058484*p_affine_8_0 + 0.37605877282253791*p_affine_9_0, 0.58463275527740355*p_affine_10_1 + 0.039308471900058484*p_affine_8_1 + 0.37605877282253791*p_affine_9_1, 0.58463275527740355*p_affine_10_2 + 0.039308471900058484*p_affine_8_2 + 0.37605877282253791*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id10 );
      Scalar_Variable_Coefficient_3D_mu( 0.1711304259088916*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.041227165399737475*p_affine_9_0, 0.1711304259088916*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.041227165399737475*p_affine_9_1, 0.1711304259088916*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.041227165399737475*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id11 );
      Scalar_Variable_Coefficient_3D_mu( 0.19107600050469298*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.19107600050469298*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.19107600050469298*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id12 );
      Scalar_Variable_Coefficient_3D_mu( 0.37605877282253791*p_affine_10_0 + 0.58463275527740355*p_affine_8_0 + 0.039308471900058539*p_affine_9_0, 0.37605877282253791*p_affine_10_1 + 0.58463275527740355*p_affine_8_1 + 0.039308471900058539*p_affine_9_1, 0.37605877282253791*p_affine_10_2 + 0.58463275527740355*p_affine_8_2 + 0.039308471900058539*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id13 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.03140574908616154*p_affine_8_0 + 0.93718850182767688*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.03140574908616154*p_affine_8_1 + 0.93718850182767688*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.03140574908616154*p_affine_8_2 + 0.93718850182767688*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id14 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.19601935860219363*p_affine_8_0 + 0.60796128279561268*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.19601935860219363*p_affine_8_1 + 0.60796128279561268*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.19601935860219363*p_affine_8_2 + 0.60796128279561268*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id15 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.40446199974765351*p_affine_8_0 + 0.19107600050469298*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.40446199974765351*p_affine_8_1 + 0.19107600050469298*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.40446199974765351*p_affine_8_2 + 0.19107600050469298*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id16 );
      Scalar_Variable_Coefficient_3D_mu( 0.031405749086161582*p_affine_10_0 + 0.93718850182767688*p_affine_8_0 + 0.031405749086161582*p_affine_9_0, 0.031405749086161582*p_affine_10_1 + 0.93718850182767688*p_affine_8_1 + 0.031405749086161582*p_affine_9_1, 0.031405749086161582*p_affine_10_2 + 0.93718850182767688*p_affine_8_2 + 0.031405749086161582*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id17 );
      Scalar_Variable_Coefficient_3D_mu( 0.19601935860219369*p_affine_10_0 + 0.60796128279561268*p_affine_8_0 + 0.19601935860219369*p_affine_9_0, 0.19601935860219369*p_affine_10_1 + 0.60796128279561268*p_affine_8_1 + 0.19601935860219369*p_affine_9_1, 0.19601935860219369*p_affine_10_2 + 0.60796128279561268*p_affine_8_2 + 0.19601935860219369*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id18 );
      Scalar_Variable_Coefficient_3D_mu( 0.40446199974765351*p_affine_10_0 + 0.19107600050469298*p_affine_8_0 + 0.40446199974765351*p_affine_9_0, 0.40446199974765351*p_affine_10_1 + 0.19107600050469298*p_affine_8_1 + 0.40446199974765351*p_affine_9_1, 0.40446199974765351*p_affine_10_2 + 0.19107600050469298*p_affine_8_2 + 0.40446199974765351*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id19 );
      Scalar_Variable_Coefficient_3D_mu( 0.041227165399737475*p_affine_10_0 + 0.78764240869137092*p_affine_8_0 + 0.1711304259088916*p_affine_9_0, 0.041227165399737475*p_affine_10_1 + 0.78764240869137092*p_affine_8_1 + 0.1711304259088916*p_affine_9_1, 0.041227165399737475*p_affine_10_2 + 0.78764240869137092*p_affine_8_2 + 0.1711304259088916*p_affine_9_2, &Scalar_Variable_Coefficient_3D_mu_out0_id20 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = p_affine_2_0 + tmp_0;
      real_t tmp_3 = -p_affine_0_1;
      real_t tmp_4 = p_affine_3_1 + tmp_3;
      real_t tmp_5 = tmp_2*tmp_4;
      real_t tmp_6 = p_affine_3_0 + tmp_0;
      real_t tmp_7 = p_affine_2_1 + tmp_3;
      real_t tmp_8 = tmp_6*tmp_7;
      real_t tmp_9 = tmp_5 - tmp_8;
      real_t tmp_10 = -p_affine_0_2;
      real_t tmp_11 = p_affine_3_2 + tmp_10;
      real_t tmp_12 = tmp_11*tmp_7;
      real_t tmp_13 = p_affine_1_2 + tmp_10;
      real_t tmp_14 = p_affine_1_1 + tmp_3;
      real_t tmp_15 = p_affine_2_2 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_15*tmp_4;
      real_t tmp_18 = tmp_11*tmp_2;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_13*tmp_5 - tmp_13*tmp_8 + tmp_14*tmp_16 - tmp_14*tmp_18);
      real_t tmp_20 = -p_affine_8_2;
      real_t tmp_21 = p_affine_9_2 + tmp_20;
      real_t tmp_22 = p_affine_10_2 + tmp_20;
      real_t tmp_23 = p_affine_8_2 + tmp_10;
      real_t tmp_24 = tmp_19*(0.031405749086161582*tmp_21 + 0.93718850182767688*tmp_22 + tmp_23);
      real_t tmp_25 = tmp_16 - tmp_18;
      real_t tmp_26 = -p_affine_8_1;
      real_t tmp_27 = p_affine_9_1 + tmp_26;
      real_t tmp_28 = p_affine_10_1 + tmp_26;
      real_t tmp_29 = p_affine_8_1 + tmp_3;
      real_t tmp_30 = tmp_19*(0.031405749086161582*tmp_27 + 0.93718850182767688*tmp_28 + tmp_29);
      real_t tmp_31 = tmp_12 - tmp_17;
      real_t tmp_32 = -p_affine_8_0;
      real_t tmp_33 = p_affine_9_0 + tmp_32;
      real_t tmp_34 = p_affine_10_0 + tmp_32;
      real_t tmp_35 = p_affine_8_0 + tmp_0;
      real_t tmp_36 = tmp_19*(0.031405749086161582*tmp_33 + 0.93718850182767688*tmp_34 + tmp_35);
      real_t tmp_37 = tmp_24*tmp_9 + tmp_25*tmp_30 + tmp_31*tmp_36 - 1.0/4.0;
      real_t tmp_38 = -tmp_1*tmp_4 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_1*tmp_11 - tmp_13*tmp_6;
      real_t tmp_40 = -tmp_11*tmp_14 + tmp_13*tmp_4;
      real_t tmp_41 = tmp_24*tmp_38 + tmp_30*tmp_39 + tmp_36*tmp_40 - 1.0/4.0;
      real_t tmp_42 = tmp_1*tmp_7 - tmp_14*tmp_2;
      real_t tmp_43 = -tmp_1*tmp_15 + tmp_13*tmp_2;
      real_t tmp_44 = -tmp_13*tmp_7 + tmp_14*tmp_15;
      real_t tmp_45 = tmp_24*tmp_42 + tmp_30*tmp_43 + tmp_36*tmp_44 - 1.0/4.0;
      real_t tmp_46 = p_affine_8_1 - p_affine_9_1;
      real_t tmp_47 = p_affine_8_0 - p_affine_9_0;
      real_t tmp_48 = p_affine_8_2 - p_affine_9_2;
      real_t tmp_49 = 6.0*std::pow((std::abs(tmp_22*tmp_46 - tmp_28*tmp_48)*std::abs(tmp_22*tmp_46 - tmp_28*tmp_48)) + (std::abs(tmp_22*tmp_47 - tmp_34*tmp_48)*std::abs(tmp_22*tmp_47 - tmp_34*tmp_48)) + (std::abs(tmp_28*tmp_47 - tmp_34*tmp_46)*std::abs(tmp_28*tmp_47 - tmp_34*tmp_46)), 0.25);
      real_t tmp_50 = tmp_19*(0.19601935860219369*tmp_21 + 0.60796128279561268*tmp_22 + tmp_23);
      real_t tmp_51 = tmp_19*(0.19601935860219369*tmp_27 + 0.60796128279561268*tmp_28 + tmp_29);
      real_t tmp_52 = tmp_19*(0.19601935860219369*tmp_33 + 0.60796128279561268*tmp_34 + tmp_35);
      real_t tmp_53 = tmp_25*tmp_51 + tmp_31*tmp_52 + tmp_50*tmp_9 - 1.0/4.0;
      real_t tmp_54 = tmp_38*tmp_50 + tmp_39*tmp_51 + tmp_40*tmp_52 - 1.0/4.0;
      real_t tmp_55 = tmp_42*tmp_50 + tmp_43*tmp_51 + tmp_44*tmp_52 - 1.0/4.0;
      real_t tmp_56 = tmp_19*(0.37605877282253791*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_57 = tmp_19*(0.37605877282253791*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_58 = tmp_19*(0.37605877282253791*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_59 = tmp_25*tmp_57 + tmp_31*tmp_58 + tmp_56*tmp_9 - 1.0/4.0;
      real_t tmp_60 = tmp_38*tmp_56 + tmp_39*tmp_57 + tmp_40*tmp_58 - 1.0/4.0;
      real_t tmp_61 = tmp_42*tmp_56 + tmp_43*tmp_57 + tmp_44*tmp_58 - 1.0/4.0;
      real_t tmp_62 = tmp_19*(0.041227165399737475*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_63 = tmp_19*(0.041227165399737475*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_64 = tmp_19*(0.041227165399737475*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_65 = tmp_25*tmp_63 + tmp_31*tmp_64 + tmp_62*tmp_9 - 1.0/4.0;
      real_t tmp_66 = tmp_38*tmp_62 + tmp_39*tmp_63 + tmp_40*tmp_64 - 1.0/4.0;
      real_t tmp_67 = tmp_42*tmp_62 + tmp_43*tmp_63 + tmp_44*tmp_64 - 1.0/4.0;
      real_t tmp_68 = tmp_19*(0.40446199974765351*tmp_21 + 0.19107600050469298*tmp_22 + tmp_23);
      real_t tmp_69 = tmp_19*(0.40446199974765351*tmp_27 + 0.19107600050469298*tmp_28 + tmp_29);
      real_t tmp_70 = tmp_19*(0.40446199974765351*tmp_33 + 0.19107600050469298*tmp_34 + tmp_35);
      real_t tmp_71 = tmp_25*tmp_69 + tmp_31*tmp_70 + tmp_68*tmp_9 - 1.0/4.0;
      real_t tmp_72 = tmp_38*tmp_68 + tmp_39*tmp_69 + tmp_40*tmp_70 - 1.0/4.0;
      real_t tmp_73 = tmp_42*tmp_68 + tmp_43*tmp_69 + tmp_44*tmp_70 - 1.0/4.0;
      real_t tmp_74 = tmp_19*(0.039308471900058539*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_75 = tmp_19*(0.039308471900058539*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_76 = tmp_19*(0.039308471900058539*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_77 = tmp_25*tmp_75 + tmp_31*tmp_76 + tmp_74*tmp_9 - 1.0/4.0;
      real_t tmp_78 = tmp_38*tmp_74 + tmp_39*tmp_75 + tmp_40*tmp_76 - 1.0/4.0;
      real_t tmp_79 = tmp_42*tmp_74 + tmp_43*tmp_75 + tmp_44*tmp_76 - 1.0/4.0;
      real_t tmp_80 = tmp_19*(0.93718850182767688*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_81 = tmp_19*(0.93718850182767688*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_82 = tmp_19*(0.93718850182767688*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_83 = tmp_25*tmp_81 + tmp_31*tmp_82 + tmp_80*tmp_9 - 1.0/4.0;
      real_t tmp_84 = tmp_38*tmp_80 + tmp_39*tmp_81 + tmp_40*tmp_82 - 1.0/4.0;
      real_t tmp_85 = tmp_42*tmp_80 + tmp_43*tmp_81 + tmp_44*tmp_82 - 1.0/4.0;
      real_t tmp_86 = tmp_19*(0.60796128279561268*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_87 = tmp_19*(0.60796128279561268*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_88 = tmp_19*(0.60796128279561268*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_89 = tmp_25*tmp_87 + tmp_31*tmp_88 + tmp_86*tmp_9 - 1.0/4.0;
      real_t tmp_90 = tmp_38*tmp_86 + tmp_39*tmp_87 + tmp_40*tmp_88 - 1.0/4.0;
      real_t tmp_91 = tmp_42*tmp_86 + tmp_43*tmp_87 + tmp_44*tmp_88 - 1.0/4.0;
      real_t tmp_92 = tmp_19*(0.19107600050469298*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_93 = tmp_19*(0.19107600050469298*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_94 = tmp_19*(0.19107600050469298*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_95 = tmp_25*tmp_93 + tmp_31*tmp_94 + tmp_9*tmp_92 - 1.0/4.0;
      real_t tmp_96 = tmp_38*tmp_92 + tmp_39*tmp_93 + tmp_40*tmp_94 - 1.0/4.0;
      real_t tmp_97 = tmp_42*tmp_92 + tmp_43*tmp_93 + tmp_44*tmp_94 - 1.0/4.0;
      real_t tmp_98 = tmp_19*(0.031405749086161582*tmp_21 + 0.031405749086161582*tmp_22 + tmp_23);
      real_t tmp_99 = tmp_19*(0.031405749086161582*tmp_27 + 0.031405749086161582*tmp_28 + tmp_29);
      real_t tmp_100 = tmp_19*(0.031405749086161582*tmp_33 + 0.031405749086161582*tmp_34 + tmp_35);
      real_t tmp_101 = tmp_100*tmp_31 + tmp_25*tmp_99 + tmp_9*tmp_98 - 1.0/4.0;
      real_t tmp_102 = tmp_100*tmp_40 + tmp_38*tmp_98 + tmp_39*tmp_99 - 1.0/4.0;
      real_t tmp_103 = tmp_100*tmp_44 + tmp_42*tmp_98 + tmp_43*tmp_99 - 1.0/4.0;
      real_t tmp_104 = tmp_19*(0.19601935860219369*tmp_21 + 0.19601935860219369*tmp_22 + tmp_23);
      real_t tmp_105 = tmp_19*(0.19601935860219369*tmp_27 + 0.19601935860219369*tmp_28 + tmp_29);
      real_t tmp_106 = tmp_19*(0.19601935860219369*tmp_33 + 0.19601935860219369*tmp_34 + tmp_35);
      real_t tmp_107 = tmp_104*tmp_9 + tmp_105*tmp_25 + tmp_106*tmp_31 - 1.0/4.0;
      real_t tmp_108 = tmp_104*tmp_38 + tmp_105*tmp_39 + tmp_106*tmp_40 - 1.0/4.0;
      real_t tmp_109 = tmp_104*tmp_42 + tmp_105*tmp_43 + tmp_106*tmp_44 - 1.0/4.0;
      real_t tmp_110 = tmp_19*(0.40446199974765351*tmp_21 + 0.40446199974765351*tmp_22 + tmp_23);
      real_t tmp_111 = tmp_19*(0.40446199974765351*tmp_27 + 0.40446199974765351*tmp_28 + tmp_29);
      real_t tmp_112 = tmp_19*(0.40446199974765351*tmp_33 + 0.40446199974765351*tmp_34 + tmp_35);
      real_t tmp_113 = tmp_110*tmp_9 + tmp_111*tmp_25 + tmp_112*tmp_31 - 1.0/4.0;
      real_t tmp_114 = tmp_110*tmp_38 + tmp_111*tmp_39 + tmp_112*tmp_40 - 1.0/4.0;
      real_t tmp_115 = tmp_110*tmp_42 + tmp_111*tmp_43 + tmp_112*tmp_44 - 1.0/4.0;
      real_t tmp_116 = tmp_19*(0.37605877282253791*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_117 = tmp_19*(0.37605877282253791*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_118 = tmp_19*(0.37605877282253791*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_119 = tmp_116*tmp_9 + tmp_117*tmp_25 + tmp_118*tmp_31 - 1.0/4.0;
      real_t tmp_120 = tmp_116*tmp_38 + tmp_117*tmp_39 + tmp_118*tmp_40 - 1.0/4.0;
      real_t tmp_121 = tmp_116*tmp_42 + tmp_117*tmp_43 + tmp_118*tmp_44 - 1.0/4.0;
      real_t tmp_122 = tmp_19*(0.1711304259088916*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_123 = tmp_19*(0.1711304259088916*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_124 = tmp_19*(0.1711304259088916*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_125 = tmp_122*tmp_9 + tmp_123*tmp_25 + tmp_124*tmp_31 - 1.0/4.0;
      real_t tmp_126 = tmp_122*tmp_38 + tmp_123*tmp_39 + tmp_124*tmp_40 - 1.0/4.0;
      real_t tmp_127 = tmp_122*tmp_42 + tmp_123*tmp_43 + tmp_124*tmp_44 - 1.0/4.0;
      real_t tmp_128 = tmp_19*(0.78764240869137092*tmp_21 + 0.1711304259088916*tmp_22 + tmp_23);
      real_t tmp_129 = tmp_19*(0.78764240869137092*tmp_27 + 0.1711304259088916*tmp_28 + tmp_29);
      real_t tmp_130 = tmp_19*(0.78764240869137092*tmp_33 + 0.1711304259088916*tmp_34 + tmp_35);
      real_t tmp_131 = tmp_128*tmp_9 + tmp_129*tmp_25 + tmp_130*tmp_31 - 1.0/4.0;
      real_t tmp_132 = tmp_128*tmp_38 + tmp_129*tmp_39 + tmp_130*tmp_40 - 1.0/4.0;
      real_t tmp_133 = tmp_128*tmp_42 + tmp_129*tmp_43 + tmp_130*tmp_44 - 1.0/4.0;
      real_t tmp_134 = tmp_19*(0.58463275527740355*tmp_21 + 0.37605877282253791*tmp_22 + tmp_23);
      real_t tmp_135 = tmp_19*(0.58463275527740355*tmp_27 + 0.37605877282253791*tmp_28 + tmp_29);
      real_t tmp_136 = tmp_19*(0.58463275527740355*tmp_33 + 0.37605877282253791*tmp_34 + tmp_35);
      real_t tmp_137 = tmp_134*tmp_9 + tmp_135*tmp_25 + tmp_136*tmp_31 - 1.0/4.0;
      real_t tmp_138 = tmp_134*tmp_38 + tmp_135*tmp_39 + tmp_136*tmp_40 - 1.0/4.0;
      real_t tmp_139 = tmp_134*tmp_42 + tmp_135*tmp_43 + tmp_136*tmp_44 - 1.0/4.0;
      real_t tmp_140 = tmp_19*(0.041227165399737475*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_141 = tmp_19*(0.041227165399737475*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_142 = tmp_19*(0.041227165399737475*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_143 = tmp_140*tmp_9 + tmp_141*tmp_25 + tmp_142*tmp_31 - 1.0/4.0;
      real_t tmp_144 = tmp_140*tmp_38 + tmp_141*tmp_39 + tmp_142*tmp_40 - 1.0/4.0;
      real_t tmp_145 = tmp_140*tmp_42 + tmp_141*tmp_43 + tmp_142*tmp_44 - 1.0/4.0;
      real_t tmp_146 = tmp_19*(0.039308471900058539*tmp_21 + 0.58463275527740355*tmp_22 + tmp_23);
      real_t tmp_147 = tmp_19*(0.039308471900058539*tmp_27 + 0.58463275527740355*tmp_28 + tmp_29);
      real_t tmp_148 = tmp_19*(0.039308471900058539*tmp_33 + 0.58463275527740355*tmp_34 + tmp_35);
      real_t tmp_149 = tmp_146*tmp_9 + tmp_147*tmp_25 + tmp_148*tmp_31 - 1.0/4.0;
      real_t tmp_150 = tmp_146*tmp_38 + tmp_147*tmp_39 + tmp_148*tmp_40 - 1.0/4.0;
      real_t tmp_151 = tmp_146*tmp_42 + tmp_147*tmp_43 + tmp_148*tmp_44 - 1.0/4.0;
      real_t tmp_152 = tmp_19*(0.78764240869137092*tmp_21 + 0.041227165399737475*tmp_22 + tmp_23);
      real_t tmp_153 = tmp_19*(0.78764240869137092*tmp_27 + 0.041227165399737475*tmp_28 + tmp_29);
      real_t tmp_154 = tmp_19*(0.78764240869137092*tmp_33 + 0.041227165399737475*tmp_34 + tmp_35);
      real_t tmp_155 = tmp_152*tmp_9 + tmp_153*tmp_25 + tmp_154*tmp_31 - 1.0/4.0;
      real_t tmp_156 = tmp_152*tmp_38 + tmp_153*tmp_39 + tmp_154*tmp_40 - 1.0/4.0;
      real_t tmp_157 = tmp_152*tmp_42 + tmp_153*tmp_43 + tmp_154*tmp_44 - 1.0/4.0;
      real_t tmp_158 = tmp_19*(0.58463275527740355*tmp_21 + 0.039308471900058539*tmp_22 + tmp_23);
      real_t tmp_159 = tmp_19*(0.58463275527740355*tmp_27 + 0.039308471900058539*tmp_28 + tmp_29);
      real_t tmp_160 = tmp_19*(0.58463275527740355*tmp_33 + 0.039308471900058539*tmp_34 + tmp_35);
      real_t tmp_161 = tmp_158*tmp_9 + tmp_159*tmp_25 + tmp_160*tmp_31 - 1.0/4.0;
      real_t tmp_162 = tmp_158*tmp_38 + tmp_159*tmp_39 + tmp_160*tmp_40 - 1.0/4.0;
      real_t tmp_163 = tmp_158*tmp_42 + tmp_159*tmp_43 + tmp_160*tmp_44 - 1.0/4.0;
      real_t tmp_164 = tmp_19*(0.1711304259088916*tmp_21 + 0.78764240869137092*tmp_22 + tmp_23);
      real_t tmp_165 = tmp_19*(0.1711304259088916*tmp_27 + 0.78764240869137092*tmp_28 + tmp_29);
      real_t tmp_166 = tmp_19*(0.1711304259088916*tmp_33 + 0.78764240869137092*tmp_34 + tmp_35);
      real_t tmp_167 = tmp_164*tmp_9 + tmp_165*tmp_25 + tmp_166*tmp_31 - 1.0/4.0;
      real_t tmp_168 = tmp_164*tmp_38 + tmp_165*tmp_39 + tmp_166*tmp_40 - 1.0/4.0;
      real_t tmp_169 = tmp_164*tmp_42 + tmp_165*tmp_43 + tmp_166*tmp_44 - 1.0/4.0;
      real_t a_0_0 = 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_49*(((tmp_1*tmp_37 + tmp_2*tmp_41 + tmp_45*tmp_6)*(tmp_1*tmp_37 + tmp_2*tmp_41 + tmp_45*tmp_6)) + ((tmp_11*tmp_45 + tmp_13*tmp_37 + tmp_15*tmp_41)*(tmp_11*tmp_45 + tmp_13*tmp_37 + tmp_15*tmp_41)) + ((tmp_14*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_7)*(tmp_14*tmp_37 + tmp_4*tmp_45 + tmp_41*tmp_7))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_49*(((tmp_1*tmp_53 + tmp_2*tmp_54 + tmp_55*tmp_6)*(tmp_1*tmp_53 + tmp_2*tmp_54 + tmp_55*tmp_6)) + ((tmp_11*tmp_55 + tmp_13*tmp_53 + tmp_15*tmp_54)*(tmp_11*tmp_55 + tmp_13*tmp_53 + tmp_15*tmp_54)) + ((tmp_14*tmp_53 + tmp_4*tmp_55 + tmp_54*tmp_7)*(tmp_14*tmp_53 + tmp_4*tmp_55 + tmp_54*tmp_7))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id10*tmp_49*(((tmp_1*tmp_59 + tmp_2*tmp_60 + tmp_6*tmp_61)*(tmp_1*tmp_59 + tmp_2*tmp_60 + tmp_6*tmp_61)) + ((tmp_11*tmp_61 + tmp_13*tmp_59 + tmp_15*tmp_60)*(tmp_11*tmp_61 + tmp_13*tmp_59 + tmp_15*tmp_60)) + ((tmp_14*tmp_59 + tmp_4*tmp_61 + tmp_60*tmp_7)*(tmp_14*tmp_59 + tmp_4*tmp_61 + tmp_60*tmp_7))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id11*tmp_49*(((tmp_1*tmp_65 + tmp_2*tmp_66 + tmp_6*tmp_67)*(tmp_1*tmp_65 + tmp_2*tmp_66 + tmp_6*tmp_67)) + ((tmp_11*tmp_67 + tmp_13*tmp_65 + tmp_15*tmp_66)*(tmp_11*tmp_67 + tmp_13*tmp_65 + tmp_15*tmp_66)) + ((tmp_14*tmp_65 + tmp_4*tmp_67 + tmp_66*tmp_7)*(tmp_14*tmp_65 + tmp_4*tmp_67 + tmp_66*tmp_7))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id12*tmp_49*(((tmp_1*tmp_71 + tmp_2*tmp_72 + tmp_6*tmp_73)*(tmp_1*tmp_71 + tmp_2*tmp_72 + tmp_6*tmp_73)) + ((tmp_11*tmp_73 + tmp_13*tmp_71 + tmp_15*tmp_72)*(tmp_11*tmp_73 + tmp_13*tmp_71 + tmp_15*tmp_72)) + ((tmp_14*tmp_71 + tmp_4*tmp_73 + tmp_7*tmp_72)*(tmp_14*tmp_71 + tmp_4*tmp_73 + tmp_7*tmp_72))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id13*tmp_49*(((tmp_1*tmp_77 + tmp_2*tmp_78 + tmp_6*tmp_79)*(tmp_1*tmp_77 + tmp_2*tmp_78 + tmp_6*tmp_79)) + ((tmp_11*tmp_79 + tmp_13*tmp_77 + tmp_15*tmp_78)*(tmp_11*tmp_79 + tmp_13*tmp_77 + tmp_15*tmp_78)) + ((tmp_14*tmp_77 + tmp_4*tmp_79 + tmp_7*tmp_78)*(tmp_14*tmp_77 + tmp_4*tmp_79 + tmp_7*tmp_78))) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id14*tmp_49*(((tmp_1*tmp_83 + tmp_2*tmp_84 + tmp_6*tmp_85)*(tmp_1*tmp_83 + tmp_2*tmp_84 + tmp_6*tmp_85)) + ((tmp_11*tmp_85 + tmp_13*tmp_83 + tmp_15*tmp_84)*(tmp_11*tmp_85 + tmp_13*tmp_83 + tmp_15*tmp_84)) + ((tmp_14*tmp_83 + tmp_4*tmp_85 + tmp_7*tmp_84)*(tmp_14*tmp_83 + tmp_4*tmp_85 + tmp_7*tmp_84))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id15*tmp_49*(((tmp_1*tmp_89 + tmp_2*tmp_90 + tmp_6*tmp_91)*(tmp_1*tmp_89 + tmp_2*tmp_90 + tmp_6*tmp_91)) + ((tmp_11*tmp_91 + tmp_13*tmp_89 + tmp_15*tmp_90)*(tmp_11*tmp_91 + tmp_13*tmp_89 + tmp_15*tmp_90)) + ((tmp_14*tmp_89 + tmp_4*tmp_91 + tmp_7*tmp_90)*(tmp_14*tmp_89 + tmp_4*tmp_91 + tmp_7*tmp_90))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id16*tmp_49*(((tmp_1*tmp_95 + tmp_2*tmp_96 + tmp_6*tmp_97)*(tmp_1*tmp_95 + tmp_2*tmp_96 + tmp_6*tmp_97)) + ((tmp_11*tmp_97 + tmp_13*tmp_95 + tmp_15*tmp_96)*(tmp_11*tmp_97 + tmp_13*tmp_95 + tmp_15*tmp_96)) + ((tmp_14*tmp_95 + tmp_4*tmp_97 + tmp_7*tmp_96)*(tmp_14*tmp_95 + tmp_4*tmp_97 + tmp_7*tmp_96))) + 0.0068572537431980923*Scalar_Variable_Coefficient_3D_mu_out0_id17*tmp_49*(((tmp_1*tmp_101 + tmp_102*tmp_2 + tmp_103*tmp_6)*(tmp_1*tmp_101 + tmp_102*tmp_2 + tmp_103*tmp_6)) + ((tmp_101*tmp_13 + tmp_102*tmp_15 + tmp_103*tmp_11)*(tmp_101*tmp_13 + tmp_102*tmp_15 + tmp_103*tmp_11)) + ((tmp_101*tmp_14 + tmp_102*tmp_7 + tmp_103*tmp_4)*(tmp_101*tmp_14 + tmp_102*tmp_7 + tmp_103*tmp_4))) + 0.037198804536718075*Scalar_Variable_Coefficient_3D_mu_out0_id18*tmp_49*(((tmp_1*tmp_107 + tmp_108*tmp_2 + tmp_109*tmp_6)*(tmp_1*tmp_107 + tmp_108*tmp_2 + tmp_109*tmp_6)) + ((tmp_107*tmp_13 + tmp_108*tmp_15 + tmp_109*tmp_11)*(tmp_107*tmp_13 + tmp_108*tmp_15 + tmp_109*tmp_11)) + ((tmp_107*tmp_14 + tmp_108*tmp_7 + tmp_109*tmp_4)*(tmp_107*tmp_14 + tmp_108*tmp_7 + tmp_109*tmp_4))) + 0.042507265838595799*Scalar_Variable_Coefficient_3D_mu_out0_id19*tmp_49*(((tmp_1*tmp_113 + tmp_114*tmp_2 + tmp_115*tmp_6)*(tmp_1*tmp_113 + tmp_114*tmp_2 + tmp_115*tmp_6)) + ((tmp_11*tmp_115 + tmp_113*tmp_13 + tmp_114*tmp_15)*(tmp_11*tmp_115 + tmp_113*tmp_13 + tmp_114*tmp_15)) + ((tmp_113*tmp_14 + tmp_114*tmp_7 + tmp_115*tmp_4)*(tmp_113*tmp_14 + tmp_114*tmp_7 + tmp_115*tmp_4))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_49*(((tmp_1*tmp_119 + tmp_120*tmp_2 + tmp_121*tmp_6)*(tmp_1*tmp_119 + tmp_120*tmp_2 + tmp_121*tmp_6)) + ((tmp_11*tmp_121 + tmp_119*tmp_13 + tmp_120*tmp_15)*(tmp_11*tmp_121 + tmp_119*tmp_13 + tmp_120*tmp_15)) + ((tmp_119*tmp_14 + tmp_120*tmp_7 + tmp_121*tmp_4)*(tmp_119*tmp_14 + tmp_120*tmp_7 + tmp_121*tmp_4))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id20*tmp_49*(((tmp_1*tmp_125 + tmp_126*tmp_2 + tmp_127*tmp_6)*(tmp_1*tmp_125 + tmp_126*tmp_2 + tmp_127*tmp_6)) + ((tmp_11*tmp_127 + tmp_125*tmp_13 + tmp_126*tmp_15)*(tmp_11*tmp_127 + tmp_125*tmp_13 + tmp_126*tmp_15)) + ((tmp_125*tmp_14 + tmp_126*tmp_7 + tmp_127*tmp_4)*(tmp_125*tmp_14 + tmp_126*tmp_7 + tmp_127*tmp_4))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_49*(((tmp_1*tmp_131 + tmp_132*tmp_2 + tmp_133*tmp_6)*(tmp_1*tmp_131 + tmp_132*tmp_2 + tmp_133*tmp_6)) + ((tmp_11*tmp_133 + tmp_13*tmp_131 + tmp_132*tmp_15)*(tmp_11*tmp_133 + tmp_13*tmp_131 + tmp_132*tmp_15)) + ((tmp_131*tmp_14 + tmp_132*tmp_7 + tmp_133*tmp_4)*(tmp_131*tmp_14 + tmp_132*tmp_7 + tmp_133*tmp_4))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id4*tmp_49*(((tmp_1*tmp_137 + tmp_138*tmp_2 + tmp_139*tmp_6)*(tmp_1*tmp_137 + tmp_138*tmp_2 + tmp_139*tmp_6)) + ((tmp_11*tmp_139 + tmp_13*tmp_137 + tmp_138*tmp_15)*(tmp_11*tmp_139 + tmp_13*tmp_137 + tmp_138*tmp_15)) + ((tmp_137*tmp_14 + tmp_138*tmp_7 + tmp_139*tmp_4)*(tmp_137*tmp_14 + tmp_138*tmp_7 + tmp_139*tmp_4))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id5*tmp_49*(((tmp_1*tmp_143 + tmp_144*tmp_2 + tmp_145*tmp_6)*(tmp_1*tmp_143 + tmp_144*tmp_2 + tmp_145*tmp_6)) + ((tmp_11*tmp_145 + tmp_13*tmp_143 + tmp_144*tmp_15)*(tmp_11*tmp_145 + tmp_13*tmp_143 + tmp_144*tmp_15)) + ((tmp_14*tmp_143 + tmp_144*tmp_7 + tmp_145*tmp_4)*(tmp_14*tmp_143 + tmp_144*tmp_7 + tmp_145*tmp_4))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id6*tmp_49*(((tmp_1*tmp_149 + tmp_150*tmp_2 + tmp_151*tmp_6)*(tmp_1*tmp_149 + tmp_150*tmp_2 + tmp_151*tmp_6)) + ((tmp_11*tmp_151 + tmp_13*tmp_149 + tmp_15*tmp_150)*(tmp_11*tmp_151 + tmp_13*tmp_149 + tmp_15*tmp_150)) + ((tmp_14*tmp_149 + tmp_150*tmp_7 + tmp_151*tmp_4)*(tmp_14*tmp_149 + tmp_150*tmp_7 + tmp_151*tmp_4))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id7*tmp_49*(((tmp_1*tmp_155 + tmp_156*tmp_2 + tmp_157*tmp_6)*(tmp_1*tmp_155 + tmp_156*tmp_2 + tmp_157*tmp_6)) + ((tmp_11*tmp_157 + tmp_13*tmp_155 + tmp_15*tmp_156)*(tmp_11*tmp_157 + tmp_13*tmp_155 + tmp_15*tmp_156)) + ((tmp_14*tmp_155 + tmp_156*tmp_7 + tmp_157*tmp_4)*(tmp_14*tmp_155 + tmp_156*tmp_7 + tmp_157*tmp_4))) + 0.020848748529055869*Scalar_Variable_Coefficient_3D_mu_out0_id8*tmp_49*(((tmp_1*tmp_161 + tmp_162*tmp_2 + tmp_163*tmp_6)*(tmp_1*tmp_161 + tmp_162*tmp_2 + tmp_163*tmp_6)) + ((tmp_11*tmp_163 + tmp_13*tmp_161 + tmp_15*tmp_162)*(tmp_11*tmp_163 + tmp_13*tmp_161 + tmp_15*tmp_162)) + ((tmp_14*tmp_161 + tmp_162*tmp_7 + tmp_163*tmp_4)*(tmp_14*tmp_161 + tmp_162*tmp_7 + tmp_163*tmp_4))) + 0.019202922745021479*Scalar_Variable_Coefficient_3D_mu_out0_id9*tmp_49*(((tmp_1*tmp_167 + tmp_168*tmp_2 + tmp_169*tmp_6)*(tmp_1*tmp_167 + tmp_168*tmp_2 + tmp_169*tmp_6)) + ((tmp_11*tmp_169 + tmp_13*tmp_167 + tmp_15*tmp_168)*(tmp_11*tmp_169 + tmp_13*tmp_167 + tmp_15*tmp_168)) + ((tmp_14*tmp_167 + tmp_168*tmp_7 + tmp_169*tmp_4)*(tmp_14*tmp_167 + tmp_168*tmp_7 + tmp_169*tmp_4)));
      elMat( 0, 0) = a_0_0;
   }


private:
   void Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t* out_0 ) const
   {
   *out_0 = callback2D( Point3D( { in_0, in_1 } ) );
      }
      void Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t* out_0 ) const
      {
      *out_0 = callback3D( Point3D( { in_0, in_1, in_2 } ) );
      }
      std::function< real_t( const Point3D& ) > callback2D;

      std::function< real_t( const Point3D& ) > callback3D;
};


} //eg
} // dg
} // hyteg
