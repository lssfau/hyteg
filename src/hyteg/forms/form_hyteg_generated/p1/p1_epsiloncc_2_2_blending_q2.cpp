/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.6
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p1_epsiloncc_2_2_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void p1_epsiloncc_2_2_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_epsiloncc_2_2_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_epsiloncc_2_2_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_10 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_6*tmp_10 - Blending_DF_Tetrahedron_0_6*tmp_14 + Blending_DF_Tetrahedron_0_7*tmp_11 - Blending_DF_Tetrahedron_0_7*tmp_12 - Blending_DF_Tetrahedron_0_8*tmp_13 + Blending_DF_Tetrahedron_0_8*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_1_2 + tmp_16;
      real_t tmp_19 = p_affine_3_1 + tmp_2;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_2_2 + tmp_16;
      real_t tmp_22 = p_affine_3_0 + tmp_0;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_19;
      real_t tmp_25 = tmp_22*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_25 + tmp_21*tmp_23 - tmp_21*tmp_24);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*tmp_8;
      real_t tmp_29 = -tmp_13 + tmp_9;
      real_t tmp_30 = 2.0*tmp_29;
      real_t tmp_31 = tmp_28*tmp_30;
      real_t tmp_32 = tmp_23 - tmp_24;
      real_t tmp_33 = tmp_27*tmp_32;
      real_t tmp_34 = tmp_30*tmp_33;
      real_t tmp_35 = tmp_20 - tmp_25;
      real_t tmp_36 = tmp_27*tmp_35;
      real_t tmp_37 = tmp_30*tmp_36;
      real_t tmp_38 = -tmp_1*tmp_21 + tmp_18*tmp_5;
      real_t tmp_39 = tmp_27*tmp_38;
      real_t tmp_40 = tmp_11 - tmp_12;
      real_t tmp_41 = 2.0*tmp_40;
      real_t tmp_42 = tmp_39*tmp_41;
      real_t tmp_43 = tmp_1*tmp_17 - tmp_18*tmp_22;
      real_t tmp_44 = tmp_27*tmp_43;
      real_t tmp_45 = tmp_41*tmp_44;
      real_t tmp_46 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_47 = tmp_27*tmp_46;
      real_t tmp_48 = tmp_41*tmp_47;
      real_t tmp_49 = -tmp_18*tmp_3 + tmp_21*tmp_6;
      real_t tmp_50 = tmp_27*tmp_49;
      real_t tmp_51 = tmp_10 - tmp_14;
      real_t tmp_52 = 2.0*tmp_51;
      real_t tmp_53 = tmp_50*tmp_52;
      real_t tmp_54 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_55 = tmp_27*tmp_54;
      real_t tmp_56 = tmp_52*tmp_55;
      real_t tmp_57 = tmp_17*tmp_3 - tmp_19*tmp_21;
      real_t tmp_58 = tmp_27*tmp_57;
      real_t tmp_59 = tmp_52*tmp_58;
      real_t tmp_60 = -tmp_31 - tmp_34 - tmp_37 - tmp_42 - tmp_45 - tmp_48 - tmp_53 - tmp_56 - tmp_59;
      real_t tmp_61 = 1.0*tmp_29;
      real_t tmp_62 = tmp_28*tmp_61;
      real_t tmp_63 = tmp_33*tmp_61;
      real_t tmp_64 = tmp_36*tmp_61;
      real_t tmp_65 = 1.0*tmp_40;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_44*tmp_65;
      real_t tmp_68 = tmp_47*tmp_65;
      real_t tmp_69 = 1.0*tmp_51;
      real_t tmp_70 = tmp_50*tmp_69;
      real_t tmp_71 = tmp_55*tmp_69;
      real_t tmp_72 = tmp_58*tmp_69;
      real_t tmp_73 = -tmp_62 - tmp_63 - tmp_64 - tmp_66 - tmp_67 - tmp_68 - tmp_70 - tmp_71 - tmp_72;
      real_t tmp_74 = -Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_75 = tmp_28*tmp_74;
      real_t tmp_76 = tmp_33*tmp_74;
      real_t tmp_77 = tmp_36*tmp_74;
      real_t tmp_78 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_79 = tmp_39*tmp_78;
      real_t tmp_80 = tmp_44*tmp_78;
      real_t tmp_81 = tmp_47*tmp_78;
      real_t tmp_82 = -Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_83 = tmp_50*tmp_82;
      real_t tmp_84 = tmp_55*tmp_82;
      real_t tmp_85 = tmp_58*tmp_82;
      real_t tmp_86 = -1.0*tmp_75 - 1.0*tmp_76 - 1.0*tmp_77 - 1.0*tmp_79 - 1.0*tmp_80 - 1.0*tmp_81 - 1.0*tmp_83 - 1.0*tmp_84 - 1.0*tmp_85;
      real_t tmp_87 = 0.5*tmp_75;
      real_t tmp_88 = 0.5*tmp_76;
      real_t tmp_89 = 0.5*tmp_77;
      real_t tmp_90 = 0.5*tmp_79;
      real_t tmp_91 = 0.5*tmp_80;
      real_t tmp_92 = 0.5*tmp_81;
      real_t tmp_93 = 0.5*tmp_83;
      real_t tmp_94 = 0.5*tmp_84;
      real_t tmp_95 = 0.5*tmp_85;
      real_t tmp_96 = -2*tmp_87 - 2*tmp_88 - 2*tmp_89 - 2*tmp_90 - 2*tmp_91 - 2*tmp_92 - 2*tmp_93 - 2*tmp_94 - 2*tmp_95;
      real_t tmp_97 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_98 = tmp_28*tmp_97;
      real_t tmp_99 = tmp_33*tmp_97;
      real_t tmp_100 = tmp_36*tmp_97;
      real_t tmp_101 = -Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_102 = tmp_101*tmp_39;
      real_t tmp_103 = tmp_101*tmp_44;
      real_t tmp_104 = tmp_101*tmp_47;
      real_t tmp_105 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_106 = tmp_105*tmp_50;
      real_t tmp_107 = tmp_105*tmp_55;
      real_t tmp_108 = tmp_105*tmp_58;
      real_t tmp_109 = -1.0*tmp_100 - 1.0*tmp_102 - 1.0*tmp_103 - 1.0*tmp_104 - 1.0*tmp_106 - 1.0*tmp_107 - 1.0*tmp_108 - 1.0*tmp_98 - 1.0*tmp_99;
      real_t tmp_110 = 0.5*tmp_98;
      real_t tmp_111 = 0.5*tmp_99;
      real_t tmp_112 = 0.5*tmp_100;
      real_t tmp_113 = 0.5*tmp_102;
      real_t tmp_114 = 0.5*tmp_103;
      real_t tmp_115 = 0.5*tmp_104;
      real_t tmp_116 = 0.5*tmp_106;
      real_t tmp_117 = 0.5*tmp_107;
      real_t tmp_118 = 0.5*tmp_108;
      real_t tmp_119 = -2*tmp_110 - 2*tmp_111 - 2*tmp_112 - 2*tmp_113 - 2*tmp_114 - 2*tmp_115 - 2*tmp_116 - 2*tmp_117 - 2*tmp_118;
      real_t tmp_120 = p_affine_0_0*p_affine_1_1;
      real_t tmp_121 = p_affine_0_0*p_affine_1_2;
      real_t tmp_122 = p_affine_2_1*p_affine_3_2;
      real_t tmp_123 = p_affine_0_1*p_affine_1_0;
      real_t tmp_124 = p_affine_0_1*p_affine_1_2;
      real_t tmp_125 = p_affine_2_2*p_affine_3_0;
      real_t tmp_126 = p_affine_0_2*p_affine_1_0;
      real_t tmp_127 = p_affine_0_2*p_affine_1_1;
      real_t tmp_128 = p_affine_2_0*p_affine_3_1;
      real_t tmp_129 = p_affine_2_2*p_affine_3_1;
      real_t tmp_130 = p_affine_2_0*p_affine_3_2;
      real_t tmp_131 = p_affine_2_1*p_affine_3_0;
      real_t tmp_132 = std::abs(p_affine_0_0*tmp_122 - p_affine_0_0*tmp_129 + p_affine_0_1*tmp_125 - p_affine_0_1*tmp_130 + p_affine_0_2*tmp_128 - p_affine_0_2*tmp_131 - p_affine_1_0*tmp_122 + p_affine_1_0*tmp_129 - p_affine_1_1*tmp_125 + p_affine_1_1*tmp_130 - p_affine_1_2*tmp_128 + p_affine_1_2*tmp_131 + p_affine_2_0*tmp_124 - p_affine_2_0*tmp_127 - p_affine_2_1*tmp_121 + p_affine_2_1*tmp_126 + p_affine_2_2*tmp_120 - p_affine_2_2*tmp_123 - p_affine_3_0*tmp_124 + p_affine_3_0*tmp_127 + p_affine_3_1*tmp_121 - p_affine_3_1*tmp_126 - p_affine_3_2*tmp_120 + p_affine_3_2*tmp_123);
      real_t tmp_133 = 0.041666666666666657*tmp_132*std::abs(tmp_15);
      real_t tmp_134 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_135 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_136 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_137 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_138 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_139 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_140 = Blending_DF_Tetrahedron_1_6*tmp_135 - Blending_DF_Tetrahedron_1_6*tmp_139 + Blending_DF_Tetrahedron_1_7*tmp_136 - Blending_DF_Tetrahedron_1_7*tmp_137 + Blending_DF_Tetrahedron_1_8*tmp_134 - Blending_DF_Tetrahedron_1_8*tmp_138;
      real_t tmp_141 = tmp_26/tmp_140;
      real_t tmp_142 = tmp_141*tmp_8;
      real_t tmp_143 = tmp_134 - tmp_138;
      real_t tmp_144 = 2.0*tmp_143;
      real_t tmp_145 = tmp_142*tmp_144;
      real_t tmp_146 = tmp_141*tmp_32;
      real_t tmp_147 = tmp_144*tmp_146;
      real_t tmp_148 = tmp_141*tmp_35;
      real_t tmp_149 = tmp_144*tmp_148;
      real_t tmp_150 = tmp_141*tmp_38;
      real_t tmp_151 = tmp_136 - tmp_137;
      real_t tmp_152 = 2.0*tmp_151;
      real_t tmp_153 = tmp_150*tmp_152;
      real_t tmp_154 = tmp_141*tmp_43;
      real_t tmp_155 = tmp_152*tmp_154;
      real_t tmp_156 = tmp_141*tmp_46;
      real_t tmp_157 = tmp_152*tmp_156;
      real_t tmp_158 = tmp_141*tmp_49;
      real_t tmp_159 = tmp_135 - tmp_139;
      real_t tmp_160 = 2.0*tmp_159;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = tmp_141*tmp_54;
      real_t tmp_163 = tmp_160*tmp_162;
      real_t tmp_164 = tmp_141*tmp_57;
      real_t tmp_165 = tmp_160*tmp_164;
      real_t tmp_166 = -tmp_145 - tmp_147 - tmp_149 - tmp_153 - tmp_155 - tmp_157 - tmp_161 - tmp_163 - tmp_165;
      real_t tmp_167 = 1.0*tmp_143;
      real_t tmp_168 = tmp_142*tmp_167;
      real_t tmp_169 = tmp_146*tmp_167;
      real_t tmp_170 = tmp_148*tmp_167;
      real_t tmp_171 = 1.0*tmp_151;
      real_t tmp_172 = tmp_150*tmp_171;
      real_t tmp_173 = tmp_154*tmp_171;
      real_t tmp_174 = tmp_156*tmp_171;
      real_t tmp_175 = 1.0*tmp_159;
      real_t tmp_176 = tmp_158*tmp_175;
      real_t tmp_177 = tmp_162*tmp_175;
      real_t tmp_178 = tmp_164*tmp_175;
      real_t tmp_179 = -tmp_168 - tmp_169 - tmp_170 - tmp_172 - tmp_173 - tmp_174 - tmp_176 - tmp_177 - tmp_178;
      real_t tmp_180 = -Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_181 = tmp_142*tmp_180;
      real_t tmp_182 = tmp_146*tmp_180;
      real_t tmp_183 = tmp_148*tmp_180;
      real_t tmp_184 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_185 = tmp_150*tmp_184;
      real_t tmp_186 = tmp_154*tmp_184;
      real_t tmp_187 = tmp_156*tmp_184;
      real_t tmp_188 = -Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_189 = tmp_158*tmp_188;
      real_t tmp_190 = tmp_162*tmp_188;
      real_t tmp_191 = tmp_164*tmp_188;
      real_t tmp_192 = -1.0*tmp_181 - 1.0*tmp_182 - 1.0*tmp_183 - 1.0*tmp_185 - 1.0*tmp_186 - 1.0*tmp_187 - 1.0*tmp_189 - 1.0*tmp_190 - 1.0*tmp_191;
      real_t tmp_193 = 0.5*tmp_181;
      real_t tmp_194 = 0.5*tmp_182;
      real_t tmp_195 = 0.5*tmp_183;
      real_t tmp_196 = 0.5*tmp_185;
      real_t tmp_197 = 0.5*tmp_186;
      real_t tmp_198 = 0.5*tmp_187;
      real_t tmp_199 = 0.5*tmp_189;
      real_t tmp_200 = 0.5*tmp_190;
      real_t tmp_201 = 0.5*tmp_191;
      real_t tmp_202 = -2*tmp_193 - 2*tmp_194 - 2*tmp_195 - 2*tmp_196 - 2*tmp_197 - 2*tmp_198 - 2*tmp_199 - 2*tmp_200 - 2*tmp_201;
      real_t tmp_203 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_204 = tmp_142*tmp_203;
      real_t tmp_205 = tmp_146*tmp_203;
      real_t tmp_206 = tmp_148*tmp_203;
      real_t tmp_207 = -Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_208 = tmp_150*tmp_207;
      real_t tmp_209 = tmp_154*tmp_207;
      real_t tmp_210 = tmp_156*tmp_207;
      real_t tmp_211 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_212 = tmp_158*tmp_211;
      real_t tmp_213 = tmp_162*tmp_211;
      real_t tmp_214 = tmp_164*tmp_211;
      real_t tmp_215 = -1.0*tmp_204 - 1.0*tmp_205 - 1.0*tmp_206 - 1.0*tmp_208 - 1.0*tmp_209 - 1.0*tmp_210 - 1.0*tmp_212 - 1.0*tmp_213 - 1.0*tmp_214;
      real_t tmp_216 = 0.5*tmp_204;
      real_t tmp_217 = 0.5*tmp_205;
      real_t tmp_218 = 0.5*tmp_206;
      real_t tmp_219 = 0.5*tmp_208;
      real_t tmp_220 = 0.5*tmp_209;
      real_t tmp_221 = 0.5*tmp_210;
      real_t tmp_222 = 0.5*tmp_212;
      real_t tmp_223 = 0.5*tmp_213;
      real_t tmp_224 = 0.5*tmp_214;
      real_t tmp_225 = -2*tmp_216 - 2*tmp_217 - 2*tmp_218 - 2*tmp_219 - 2*tmp_220 - 2*tmp_221 - 2*tmp_222 - 2*tmp_223 - 2*tmp_224;
      real_t tmp_226 = 0.041666666666666657*tmp_132*std::abs(tmp_140);
      real_t tmp_227 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_228 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_229 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_230 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_231 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_232 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_233 = Blending_DF_Tetrahedron_2_6*tmp_228 - Blending_DF_Tetrahedron_2_6*tmp_232 + Blending_DF_Tetrahedron_2_7*tmp_229 - Blending_DF_Tetrahedron_2_7*tmp_230 + Blending_DF_Tetrahedron_2_8*tmp_227 - Blending_DF_Tetrahedron_2_8*tmp_231;
      real_t tmp_234 = tmp_26/tmp_233;
      real_t tmp_235 = tmp_234*tmp_8;
      real_t tmp_236 = tmp_227 - tmp_231;
      real_t tmp_237 = 2.0*tmp_236;
      real_t tmp_238 = tmp_235*tmp_237;
      real_t tmp_239 = tmp_234*tmp_32;
      real_t tmp_240 = tmp_237*tmp_239;
      real_t tmp_241 = tmp_234*tmp_35;
      real_t tmp_242 = tmp_237*tmp_241;
      real_t tmp_243 = tmp_234*tmp_38;
      real_t tmp_244 = tmp_229 - tmp_230;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = tmp_243*tmp_245;
      real_t tmp_247 = tmp_234*tmp_43;
      real_t tmp_248 = tmp_245*tmp_247;
      real_t tmp_249 = tmp_234*tmp_46;
      real_t tmp_250 = tmp_245*tmp_249;
      real_t tmp_251 = tmp_234*tmp_49;
      real_t tmp_252 = tmp_228 - tmp_232;
      real_t tmp_253 = 2.0*tmp_252;
      real_t tmp_254 = tmp_251*tmp_253;
      real_t tmp_255 = tmp_234*tmp_54;
      real_t tmp_256 = tmp_253*tmp_255;
      real_t tmp_257 = tmp_234*tmp_57;
      real_t tmp_258 = tmp_253*tmp_257;
      real_t tmp_259 = -tmp_238 - tmp_240 - tmp_242 - tmp_246 - tmp_248 - tmp_250 - tmp_254 - tmp_256 - tmp_258;
      real_t tmp_260 = 1.0*tmp_236;
      real_t tmp_261 = tmp_235*tmp_260;
      real_t tmp_262 = tmp_239*tmp_260;
      real_t tmp_263 = tmp_241*tmp_260;
      real_t tmp_264 = 1.0*tmp_244;
      real_t tmp_265 = tmp_243*tmp_264;
      real_t tmp_266 = tmp_247*tmp_264;
      real_t tmp_267 = tmp_249*tmp_264;
      real_t tmp_268 = 1.0*tmp_252;
      real_t tmp_269 = tmp_251*tmp_268;
      real_t tmp_270 = tmp_255*tmp_268;
      real_t tmp_271 = tmp_257*tmp_268;
      real_t tmp_272 = -tmp_261 - tmp_262 - tmp_263 - tmp_265 - tmp_266 - tmp_267 - tmp_269 - tmp_270 - tmp_271;
      real_t tmp_273 = -Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_274 = tmp_235*tmp_273;
      real_t tmp_275 = tmp_239*tmp_273;
      real_t tmp_276 = tmp_241*tmp_273;
      real_t tmp_277 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_278 = tmp_243*tmp_277;
      real_t tmp_279 = tmp_247*tmp_277;
      real_t tmp_280 = tmp_249*tmp_277;
      real_t tmp_281 = -Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_282 = tmp_251*tmp_281;
      real_t tmp_283 = tmp_255*tmp_281;
      real_t tmp_284 = tmp_257*tmp_281;
      real_t tmp_285 = -1.0*tmp_274 - 1.0*tmp_275 - 1.0*tmp_276 - 1.0*tmp_278 - 1.0*tmp_279 - 1.0*tmp_280 - 1.0*tmp_282 - 1.0*tmp_283 - 1.0*tmp_284;
      real_t tmp_286 = 0.5*tmp_274;
      real_t tmp_287 = 0.5*tmp_275;
      real_t tmp_288 = 0.5*tmp_276;
      real_t tmp_289 = 0.5*tmp_278;
      real_t tmp_290 = 0.5*tmp_279;
      real_t tmp_291 = 0.5*tmp_280;
      real_t tmp_292 = 0.5*tmp_282;
      real_t tmp_293 = 0.5*tmp_283;
      real_t tmp_294 = 0.5*tmp_284;
      real_t tmp_295 = -2*tmp_286 - 2*tmp_287 - 2*tmp_288 - 2*tmp_289 - 2*tmp_290 - 2*tmp_291 - 2*tmp_292 - 2*tmp_293 - 2*tmp_294;
      real_t tmp_296 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_297 = tmp_235*tmp_296;
      real_t tmp_298 = tmp_239*tmp_296;
      real_t tmp_299 = tmp_241*tmp_296;
      real_t tmp_300 = -Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_301 = tmp_243*tmp_300;
      real_t tmp_302 = tmp_247*tmp_300;
      real_t tmp_303 = tmp_249*tmp_300;
      real_t tmp_304 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_305 = tmp_251*tmp_304;
      real_t tmp_306 = tmp_255*tmp_304;
      real_t tmp_307 = tmp_257*tmp_304;
      real_t tmp_308 = -1.0*tmp_297 - 1.0*tmp_298 - 1.0*tmp_299 - 1.0*tmp_301 - 1.0*tmp_302 - 1.0*tmp_303 - 1.0*tmp_305 - 1.0*tmp_306 - 1.0*tmp_307;
      real_t tmp_309 = 0.5*tmp_297;
      real_t tmp_310 = 0.5*tmp_298;
      real_t tmp_311 = 0.5*tmp_299;
      real_t tmp_312 = 0.5*tmp_301;
      real_t tmp_313 = 0.5*tmp_302;
      real_t tmp_314 = 0.5*tmp_303;
      real_t tmp_315 = 0.5*tmp_305;
      real_t tmp_316 = 0.5*tmp_306;
      real_t tmp_317 = 0.5*tmp_307;
      real_t tmp_318 = -2*tmp_309 - 2*tmp_310 - 2*tmp_311 - 2*tmp_312 - 2*tmp_313 - 2*tmp_314 - 2*tmp_315 - 2*tmp_316 - 2*tmp_317;
      real_t tmp_319 = 0.041666666666666657*tmp_132*std::abs(tmp_233);
      real_t tmp_320 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_321 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_322 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_323 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_324 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_325 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_326 = Blending_DF_Tetrahedron_3_6*tmp_321 - Blending_DF_Tetrahedron_3_6*tmp_325 + Blending_DF_Tetrahedron_3_7*tmp_322 - Blending_DF_Tetrahedron_3_7*tmp_323 + Blending_DF_Tetrahedron_3_8*tmp_320 - Blending_DF_Tetrahedron_3_8*tmp_324;
      real_t tmp_327 = tmp_26/tmp_326;
      real_t tmp_328 = tmp_327*tmp_8;
      real_t tmp_329 = tmp_320 - tmp_324;
      real_t tmp_330 = 2.0*tmp_329;
      real_t tmp_331 = tmp_328*tmp_330;
      real_t tmp_332 = tmp_32*tmp_327;
      real_t tmp_333 = tmp_330*tmp_332;
      real_t tmp_334 = tmp_327*tmp_35;
      real_t tmp_335 = tmp_330*tmp_334;
      real_t tmp_336 = tmp_327*tmp_38;
      real_t tmp_337 = tmp_322 - tmp_323;
      real_t tmp_338 = 2.0*tmp_337;
      real_t tmp_339 = tmp_336*tmp_338;
      real_t tmp_340 = tmp_327*tmp_43;
      real_t tmp_341 = tmp_338*tmp_340;
      real_t tmp_342 = tmp_327*tmp_46;
      real_t tmp_343 = tmp_338*tmp_342;
      real_t tmp_344 = tmp_327*tmp_49;
      real_t tmp_345 = tmp_321 - tmp_325;
      real_t tmp_346 = 2.0*tmp_345;
      real_t tmp_347 = tmp_344*tmp_346;
      real_t tmp_348 = tmp_327*tmp_54;
      real_t tmp_349 = tmp_346*tmp_348;
      real_t tmp_350 = tmp_327*tmp_57;
      real_t tmp_351 = tmp_346*tmp_350;
      real_t tmp_352 = -tmp_331 - tmp_333 - tmp_335 - tmp_339 - tmp_341 - tmp_343 - tmp_347 - tmp_349 - tmp_351;
      real_t tmp_353 = 1.0*tmp_329;
      real_t tmp_354 = tmp_328*tmp_353;
      real_t tmp_355 = tmp_332*tmp_353;
      real_t tmp_356 = tmp_334*tmp_353;
      real_t tmp_357 = 1.0*tmp_337;
      real_t tmp_358 = tmp_336*tmp_357;
      real_t tmp_359 = tmp_340*tmp_357;
      real_t tmp_360 = tmp_342*tmp_357;
      real_t tmp_361 = 1.0*tmp_345;
      real_t tmp_362 = tmp_344*tmp_361;
      real_t tmp_363 = tmp_348*tmp_361;
      real_t tmp_364 = tmp_350*tmp_361;
      real_t tmp_365 = -tmp_354 - tmp_355 - tmp_356 - tmp_358 - tmp_359 - tmp_360 - tmp_362 - tmp_363 - tmp_364;
      real_t tmp_366 = -Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_367 = tmp_328*tmp_366;
      real_t tmp_368 = tmp_332*tmp_366;
      real_t tmp_369 = tmp_334*tmp_366;
      real_t tmp_370 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_371 = tmp_336*tmp_370;
      real_t tmp_372 = tmp_340*tmp_370;
      real_t tmp_373 = tmp_342*tmp_370;
      real_t tmp_374 = -Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_375 = tmp_344*tmp_374;
      real_t tmp_376 = tmp_348*tmp_374;
      real_t tmp_377 = tmp_350*tmp_374;
      real_t tmp_378 = -1.0*tmp_367 - 1.0*tmp_368 - 1.0*tmp_369 - 1.0*tmp_371 - 1.0*tmp_372 - 1.0*tmp_373 - 1.0*tmp_375 - 1.0*tmp_376 - 1.0*tmp_377;
      real_t tmp_379 = 0.5*tmp_367;
      real_t tmp_380 = 0.5*tmp_368;
      real_t tmp_381 = 0.5*tmp_369;
      real_t tmp_382 = 0.5*tmp_371;
      real_t tmp_383 = 0.5*tmp_372;
      real_t tmp_384 = 0.5*tmp_373;
      real_t tmp_385 = 0.5*tmp_375;
      real_t tmp_386 = 0.5*tmp_376;
      real_t tmp_387 = 0.5*tmp_377;
      real_t tmp_388 = -2*tmp_379 - 2*tmp_380 - 2*tmp_381 - 2*tmp_382 - 2*tmp_383 - 2*tmp_384 - 2*tmp_385 - 2*tmp_386 - 2*tmp_387;
      real_t tmp_389 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_390 = tmp_328*tmp_389;
      real_t tmp_391 = tmp_332*tmp_389;
      real_t tmp_392 = tmp_334*tmp_389;
      real_t tmp_393 = -Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_394 = tmp_336*tmp_393;
      real_t tmp_395 = tmp_340*tmp_393;
      real_t tmp_396 = tmp_342*tmp_393;
      real_t tmp_397 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_398 = tmp_344*tmp_397;
      real_t tmp_399 = tmp_348*tmp_397;
      real_t tmp_400 = tmp_350*tmp_397;
      real_t tmp_401 = -1.0*tmp_390 - 1.0*tmp_391 - 1.0*tmp_392 - 1.0*tmp_394 - 1.0*tmp_395 - 1.0*tmp_396 - 1.0*tmp_398 - 1.0*tmp_399 - 1.0*tmp_400;
      real_t tmp_402 = 0.5*tmp_390;
      real_t tmp_403 = 0.5*tmp_391;
      real_t tmp_404 = 0.5*tmp_392;
      real_t tmp_405 = 0.5*tmp_394;
      real_t tmp_406 = 0.5*tmp_395;
      real_t tmp_407 = 0.5*tmp_396;
      real_t tmp_408 = 0.5*tmp_398;
      real_t tmp_409 = 0.5*tmp_399;
      real_t tmp_410 = 0.5*tmp_400;
      real_t tmp_411 = -2*tmp_402 - 2*tmp_403 - 2*tmp_404 - 2*tmp_405 - 2*tmp_406 - 2*tmp_407 - 2*tmp_408 - 2*tmp_409 - 2*tmp_410;
      real_t tmp_412 = 0.041666666666666657*tmp_132*std::abs(tmp_326);
      real_t tmp_413 = tmp_77 + tmp_81 + tmp_85;
      real_t tmp_414 = tmp_100 + tmp_104 + tmp_108;
      real_t tmp_415 = tmp_37 + tmp_48 + tmp_59;
      real_t tmp_416 = tmp_183 + tmp_187 + tmp_191;
      real_t tmp_417 = tmp_206 + tmp_210 + tmp_214;
      real_t tmp_418 = tmp_149 + tmp_157 + tmp_165;
      real_t tmp_419 = tmp_276 + tmp_280 + tmp_284;
      real_t tmp_420 = tmp_299 + tmp_303 + tmp_307;
      real_t tmp_421 = tmp_242 + tmp_250 + tmp_258;
      real_t tmp_422 = tmp_369 + tmp_373 + tmp_377;
      real_t tmp_423 = tmp_392 + tmp_396 + tmp_400;
      real_t tmp_424 = tmp_335 + tmp_343 + tmp_351;
      real_t tmp_425 = tmp_76 + tmp_80 + tmp_84;
      real_t tmp_426 = tmp_103 + tmp_107 + tmp_99;
      real_t tmp_427 = tmp_34 + tmp_45 + tmp_56;
      real_t tmp_428 = tmp_182 + tmp_186 + tmp_190;
      real_t tmp_429 = tmp_205 + tmp_209 + tmp_213;
      real_t tmp_430 = tmp_147 + tmp_155 + tmp_163;
      real_t tmp_431 = tmp_275 + tmp_279 + tmp_283;
      real_t tmp_432 = tmp_298 + tmp_302 + tmp_306;
      real_t tmp_433 = tmp_240 + tmp_248 + tmp_256;
      real_t tmp_434 = tmp_368 + tmp_372 + tmp_376;
      real_t tmp_435 = tmp_391 + tmp_395 + tmp_399;
      real_t tmp_436 = tmp_333 + tmp_341 + tmp_349;
      real_t tmp_437 = tmp_75 + tmp_79 + tmp_83;
      real_t tmp_438 = tmp_102 + tmp_106 + tmp_98;
      real_t tmp_439 = tmp_31 + tmp_42 + tmp_53;
      real_t tmp_440 = tmp_181 + tmp_185 + tmp_189;
      real_t tmp_441 = tmp_204 + tmp_208 + tmp_212;
      real_t tmp_442 = tmp_145 + tmp_153 + tmp_161;
      real_t tmp_443 = tmp_274 + tmp_278 + tmp_282;
      real_t tmp_444 = tmp_297 + tmp_301 + tmp_305;
      real_t tmp_445 = tmp_238 + tmp_246 + tmp_254;
      real_t tmp_446 = tmp_367 + tmp_371 + tmp_375;
      real_t tmp_447 = tmp_390 + tmp_394 + tmp_398;
      real_t tmp_448 = tmp_331 + tmp_339 + tmp_347;
      real_t tmp_449 = tmp_64 + tmp_68 + tmp_72;
      real_t tmp_450 = 2*tmp_89 + 2*tmp_92 + 2*tmp_95;
      real_t tmp_451 = 2*tmp_112 + 2*tmp_115 + 2*tmp_118;
      real_t tmp_452 = tmp_170 + tmp_174 + tmp_178;
      real_t tmp_453 = 2*tmp_195 + 2*tmp_198 + 2*tmp_201;
      real_t tmp_454 = 2*tmp_218 + 2*tmp_221 + 2*tmp_224;
      real_t tmp_455 = tmp_263 + tmp_267 + tmp_271;
      real_t tmp_456 = 2*tmp_288 + 2*tmp_291 + 2*tmp_294;
      real_t tmp_457 = 2*tmp_311 + 2*tmp_314 + 2*tmp_317;
      real_t tmp_458 = tmp_356 + tmp_360 + tmp_364;
      real_t tmp_459 = 2*tmp_381 + 2*tmp_384 + 2*tmp_387;
      real_t tmp_460 = 2*tmp_404 + 2*tmp_407 + 2*tmp_410;
      real_t tmp_461 = tmp_63 + tmp_67 + tmp_71;
      real_t tmp_462 = 2*tmp_88 + 2*tmp_91 + 2*tmp_94;
      real_t tmp_463 = 2*tmp_111 + 2*tmp_114 + 2*tmp_117;
      real_t tmp_464 = tmp_169 + tmp_173 + tmp_177;
      real_t tmp_465 = 2*tmp_194 + 2*tmp_197 + 2*tmp_200;
      real_t tmp_466 = 2*tmp_217 + 2*tmp_220 + 2*tmp_223;
      real_t tmp_467 = tmp_262 + tmp_266 + tmp_270;
      real_t tmp_468 = 2*tmp_287 + 2*tmp_290 + 2*tmp_293;
      real_t tmp_469 = 2*tmp_310 + 2*tmp_313 + 2*tmp_316;
      real_t tmp_470 = tmp_355 + tmp_359 + tmp_363;
      real_t tmp_471 = 2*tmp_380 + 2*tmp_383 + 2*tmp_386;
      real_t tmp_472 = 2*tmp_403 + 2*tmp_406 + 2*tmp_409;
      real_t tmp_473 = tmp_62 + tmp_66 + tmp_70;
      real_t tmp_474 = 2*tmp_87 + 2*tmp_90 + 2*tmp_93;
      real_t tmp_475 = 2*tmp_110 + 2*tmp_113 + 2*tmp_116;
      real_t tmp_476 = tmp_168 + tmp_172 + tmp_176;
      real_t tmp_477 = 2*tmp_193 + 2*tmp_196 + 2*tmp_199;
      real_t tmp_478 = 2*tmp_216 + 2*tmp_219 + 2*tmp_222;
      real_t tmp_479 = tmp_261 + tmp_265 + tmp_269;
      real_t tmp_480 = 2*tmp_286 + 2*tmp_289 + 2*tmp_292;
      real_t tmp_481 = 2*tmp_309 + 2*tmp_312 + 2*tmp_315;
      real_t tmp_482 = tmp_354 + tmp_358 + tmp_362;
      real_t tmp_483 = 2*tmp_379 + 2*tmp_382 + 2*tmp_385;
      real_t tmp_484 = 2*tmp_402 + 2*tmp_405 + 2*tmp_408;
      real_t a_0_0 = tmp_133*(tmp_109*tmp_119 + tmp_60*tmp_73 + tmp_86*tmp_96) + tmp_226*(tmp_166*tmp_179 + tmp_192*tmp_202 + tmp_215*tmp_225) + tmp_319*(tmp_259*tmp_272 + tmp_285*tmp_295 + tmp_308*tmp_318) + tmp_412*(tmp_352*tmp_365 + tmp_378*tmp_388 + tmp_401*tmp_411);
      real_t a_0_1 = tmp_133*(tmp_119*tmp_414 + tmp_413*tmp_96 + tmp_415*tmp_73) + tmp_226*(tmp_179*tmp_418 + tmp_202*tmp_416 + tmp_225*tmp_417) + tmp_319*(tmp_272*tmp_421 + tmp_295*tmp_419 + tmp_318*tmp_420) + tmp_412*(tmp_365*tmp_424 + tmp_388*tmp_422 + tmp_411*tmp_423);
      real_t a_0_2 = tmp_133*(tmp_119*tmp_426 + tmp_425*tmp_96 + tmp_427*tmp_73) + tmp_226*(tmp_179*tmp_430 + tmp_202*tmp_428 + tmp_225*tmp_429) + tmp_319*(tmp_272*tmp_433 + tmp_295*tmp_431 + tmp_318*tmp_432) + tmp_412*(tmp_365*tmp_436 + tmp_388*tmp_434 + tmp_411*tmp_435);
      real_t a_0_3 = tmp_133*(tmp_119*tmp_438 + tmp_437*tmp_96 + tmp_439*tmp_73) + tmp_226*(tmp_179*tmp_442 + tmp_202*tmp_440 + tmp_225*tmp_441) + tmp_319*(tmp_272*tmp_445 + tmp_295*tmp_443 + tmp_318*tmp_444) + tmp_412*(tmp_365*tmp_448 + tmp_388*tmp_446 + tmp_411*tmp_447);
      real_t a_1_0 = tmp_133*(tmp_109*tmp_451 + tmp_449*tmp_60 + tmp_450*tmp_86) + tmp_226*(tmp_166*tmp_452 + tmp_192*tmp_453 + tmp_215*tmp_454) + tmp_319*(tmp_259*tmp_455 + tmp_285*tmp_456 + tmp_308*tmp_457) + tmp_412*(tmp_352*tmp_458 + tmp_378*tmp_459 + tmp_401*tmp_460);
      real_t a_1_1 = tmp_133*(tmp_413*tmp_450 + tmp_414*tmp_451 + tmp_415*tmp_449) + tmp_226*(tmp_416*tmp_453 + tmp_417*tmp_454 + tmp_418*tmp_452) + tmp_319*(tmp_419*tmp_456 + tmp_420*tmp_457 + tmp_421*tmp_455) + tmp_412*(tmp_422*tmp_459 + tmp_423*tmp_460 + tmp_424*tmp_458);
      real_t a_1_2 = tmp_133*(tmp_425*tmp_450 + tmp_426*tmp_451 + tmp_427*tmp_449) + tmp_226*(tmp_428*tmp_453 + tmp_429*tmp_454 + tmp_430*tmp_452) + tmp_319*(tmp_431*tmp_456 + tmp_432*tmp_457 + tmp_433*tmp_455) + tmp_412*(tmp_434*tmp_459 + tmp_435*tmp_460 + tmp_436*tmp_458);
      real_t a_1_3 = tmp_133*(tmp_437*tmp_450 + tmp_438*tmp_451 + tmp_439*tmp_449) + tmp_226*(tmp_440*tmp_453 + tmp_441*tmp_454 + tmp_442*tmp_452) + tmp_319*(tmp_443*tmp_456 + tmp_444*tmp_457 + tmp_445*tmp_455) + tmp_412*(tmp_446*tmp_459 + tmp_447*tmp_460 + tmp_448*tmp_458);
      real_t a_2_0 = tmp_133*(tmp_109*tmp_463 + tmp_461*tmp_60 + tmp_462*tmp_86) + tmp_226*(tmp_166*tmp_464 + tmp_192*tmp_465 + tmp_215*tmp_466) + tmp_319*(tmp_259*tmp_467 + tmp_285*tmp_468 + tmp_308*tmp_469) + tmp_412*(tmp_352*tmp_470 + tmp_378*tmp_471 + tmp_401*tmp_472);
      real_t a_2_1 = tmp_133*(tmp_413*tmp_462 + tmp_414*tmp_463 + tmp_415*tmp_461) + tmp_226*(tmp_416*tmp_465 + tmp_417*tmp_466 + tmp_418*tmp_464) + tmp_319*(tmp_419*tmp_468 + tmp_420*tmp_469 + tmp_421*tmp_467) + tmp_412*(tmp_422*tmp_471 + tmp_423*tmp_472 + tmp_424*tmp_470);
      real_t a_2_2 = tmp_133*(tmp_425*tmp_462 + tmp_426*tmp_463 + tmp_427*tmp_461) + tmp_226*(tmp_428*tmp_465 + tmp_429*tmp_466 + tmp_430*tmp_464) + tmp_319*(tmp_431*tmp_468 + tmp_432*tmp_469 + tmp_433*tmp_467) + tmp_412*(tmp_434*tmp_471 + tmp_435*tmp_472 + tmp_436*tmp_470);
      real_t a_2_3 = tmp_133*(tmp_437*tmp_462 + tmp_438*tmp_463 + tmp_439*tmp_461) + tmp_226*(tmp_440*tmp_465 + tmp_441*tmp_466 + tmp_442*tmp_464) + tmp_319*(tmp_443*tmp_468 + tmp_444*tmp_469 + tmp_445*tmp_467) + tmp_412*(tmp_446*tmp_471 + tmp_447*tmp_472 + tmp_448*tmp_470);
      real_t a_3_0 = tmp_133*(tmp_109*tmp_475 + tmp_473*tmp_60 + tmp_474*tmp_86) + tmp_226*(tmp_166*tmp_476 + tmp_192*tmp_477 + tmp_215*tmp_478) + tmp_319*(tmp_259*tmp_479 + tmp_285*tmp_480 + tmp_308*tmp_481) + tmp_412*(tmp_352*tmp_482 + tmp_378*tmp_483 + tmp_401*tmp_484);
      real_t a_3_1 = tmp_133*(tmp_413*tmp_474 + tmp_414*tmp_475 + tmp_415*tmp_473) + tmp_226*(tmp_416*tmp_477 + tmp_417*tmp_478 + tmp_418*tmp_476) + tmp_319*(tmp_419*tmp_480 + tmp_420*tmp_481 + tmp_421*tmp_479) + tmp_412*(tmp_422*tmp_483 + tmp_423*tmp_484 + tmp_424*tmp_482);
      real_t a_3_2 = tmp_133*(tmp_425*tmp_474 + tmp_426*tmp_475 + tmp_427*tmp_473) + tmp_226*(tmp_428*tmp_477 + tmp_429*tmp_478 + tmp_430*tmp_476) + tmp_319*(tmp_431*tmp_480 + tmp_432*tmp_481 + tmp_433*tmp_479) + tmp_412*(tmp_434*tmp_483 + tmp_435*tmp_484 + tmp_436*tmp_482);
      real_t a_3_3 = tmp_133*(tmp_437*tmp_474 + tmp_438*tmp_475 + tmp_439*tmp_473) + tmp_226*(tmp_440*tmp_477 + tmp_441*tmp_478 + tmp_442*tmp_476) + tmp_319*(tmp_443*tmp_480 + tmp_444*tmp_481 + tmp_445*tmp_479) + tmp_412*(tmp_446*tmp_483 + tmp_447*tmp_484 + tmp_448*tmp_482);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_epsiloncc_2_2_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_10 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_6*tmp_10 - Blending_DF_Tetrahedron_0_6*tmp_14 + Blending_DF_Tetrahedron_0_7*tmp_11 - Blending_DF_Tetrahedron_0_7*tmp_12 - Blending_DF_Tetrahedron_0_8*tmp_13 + Blending_DF_Tetrahedron_0_8*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_1_2 + tmp_16;
      real_t tmp_19 = p_affine_3_1 + tmp_2;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_2_2 + tmp_16;
      real_t tmp_22 = p_affine_3_0 + tmp_0;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_19;
      real_t tmp_25 = tmp_22*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_25 + tmp_21*tmp_23 - tmp_21*tmp_24);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*tmp_8;
      real_t tmp_29 = -tmp_13 + tmp_9;
      real_t tmp_30 = 2.0*tmp_29;
      real_t tmp_31 = tmp_28*tmp_30;
      real_t tmp_32 = tmp_23 - tmp_24;
      real_t tmp_33 = tmp_27*tmp_32;
      real_t tmp_34 = tmp_30*tmp_33;
      real_t tmp_35 = tmp_20 - tmp_25;
      real_t tmp_36 = tmp_27*tmp_35;
      real_t tmp_37 = tmp_30*tmp_36;
      real_t tmp_38 = -tmp_1*tmp_21 + tmp_18*tmp_5;
      real_t tmp_39 = tmp_27*tmp_38;
      real_t tmp_40 = tmp_11 - tmp_12;
      real_t tmp_41 = 2.0*tmp_40;
      real_t tmp_42 = tmp_39*tmp_41;
      real_t tmp_43 = tmp_1*tmp_17 - tmp_18*tmp_22;
      real_t tmp_44 = tmp_27*tmp_43;
      real_t tmp_45 = tmp_41*tmp_44;
      real_t tmp_46 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_47 = tmp_27*tmp_46;
      real_t tmp_48 = tmp_41*tmp_47;
      real_t tmp_49 = -tmp_18*tmp_3 + tmp_21*tmp_6;
      real_t tmp_50 = tmp_27*tmp_49;
      real_t tmp_51 = tmp_10 - tmp_14;
      real_t tmp_52 = 2.0*tmp_51;
      real_t tmp_53 = tmp_50*tmp_52;
      real_t tmp_54 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_55 = tmp_27*tmp_54;
      real_t tmp_56 = tmp_52*tmp_55;
      real_t tmp_57 = tmp_17*tmp_3 - tmp_19*tmp_21;
      real_t tmp_58 = tmp_27*tmp_57;
      real_t tmp_59 = tmp_52*tmp_58;
      real_t tmp_60 = 1.0*tmp_29;
      real_t tmp_61 = 1.0*tmp_40;
      real_t tmp_62 = 1.0*tmp_51;
      real_t tmp_63 = -tmp_28*tmp_60 - tmp_33*tmp_60 - tmp_36*tmp_60 - tmp_39*tmp_61 - tmp_44*tmp_61 - tmp_47*tmp_61 - tmp_50*tmp_62 - tmp_55*tmp_62 - tmp_58*tmp_62;
      real_t tmp_64 = -Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_65 = tmp_28*tmp_64;
      real_t tmp_66 = tmp_33*tmp_64;
      real_t tmp_67 = tmp_36*tmp_64;
      real_t tmp_68 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_69 = tmp_39*tmp_68;
      real_t tmp_70 = tmp_44*tmp_68;
      real_t tmp_71 = tmp_47*tmp_68;
      real_t tmp_72 = -Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_73 = tmp_50*tmp_72;
      real_t tmp_74 = tmp_55*tmp_72;
      real_t tmp_75 = tmp_58*tmp_72;
      real_t tmp_76 = -1.0*tmp_65 - 1.0*tmp_66 - 1.0*tmp_67 - 1.0*tmp_69 - 1.0*tmp_70 - 1.0*tmp_71 - 1.0*tmp_73 - 1.0*tmp_74 - 1.0*tmp_75;
      real_t tmp_77 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_78 = tmp_28*tmp_77;
      real_t tmp_79 = tmp_33*tmp_77;
      real_t tmp_80 = tmp_36*tmp_77;
      real_t tmp_81 = -Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_82 = tmp_39*tmp_81;
      real_t tmp_83 = tmp_44*tmp_81;
      real_t tmp_84 = tmp_47*tmp_81;
      real_t tmp_85 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_86 = tmp_50*tmp_85;
      real_t tmp_87 = tmp_55*tmp_85;
      real_t tmp_88 = tmp_58*tmp_85;
      real_t tmp_89 = -1.0*tmp_78 - 1.0*tmp_79 - 1.0*tmp_80 - 1.0*tmp_82 - 1.0*tmp_83 - 1.0*tmp_84 - 1.0*tmp_86 - 1.0*tmp_87 - 1.0*tmp_88;
      real_t tmp_90 = p_affine_0_0*p_affine_1_1;
      real_t tmp_91 = p_affine_0_0*p_affine_1_2;
      real_t tmp_92 = p_affine_2_1*p_affine_3_2;
      real_t tmp_93 = p_affine_0_1*p_affine_1_0;
      real_t tmp_94 = p_affine_0_1*p_affine_1_2;
      real_t tmp_95 = p_affine_2_2*p_affine_3_0;
      real_t tmp_96 = p_affine_0_2*p_affine_1_0;
      real_t tmp_97 = p_affine_0_2*p_affine_1_1;
      real_t tmp_98 = p_affine_2_0*p_affine_3_1;
      real_t tmp_99 = p_affine_2_2*p_affine_3_1;
      real_t tmp_100 = p_affine_2_0*p_affine_3_2;
      real_t tmp_101 = p_affine_2_1*p_affine_3_0;
      real_t tmp_102 = std::abs(p_affine_0_0*tmp_92 - p_affine_0_0*tmp_99 - p_affine_0_1*tmp_100 + p_affine_0_1*tmp_95 - p_affine_0_2*tmp_101 + p_affine_0_2*tmp_98 - p_affine_1_0*tmp_92 + p_affine_1_0*tmp_99 + p_affine_1_1*tmp_100 - p_affine_1_1*tmp_95 + p_affine_1_2*tmp_101 - p_affine_1_2*tmp_98 + p_affine_2_0*tmp_94 - p_affine_2_0*tmp_97 - p_affine_2_1*tmp_91 + p_affine_2_1*tmp_96 + p_affine_2_2*tmp_90 - p_affine_2_2*tmp_93 - p_affine_3_0*tmp_94 + p_affine_3_0*tmp_97 + p_affine_3_1*tmp_91 - p_affine_3_1*tmp_96 - p_affine_3_2*tmp_90 + p_affine_3_2*tmp_93);
      real_t tmp_103 = 0.041666666666666657*tmp_102*std::abs(tmp_15);
      real_t tmp_104 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_105 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_106 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_107 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_108 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_109 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_110 = Blending_DF_Tetrahedron_1_6*tmp_105 - Blending_DF_Tetrahedron_1_6*tmp_109 + Blending_DF_Tetrahedron_1_7*tmp_106 - Blending_DF_Tetrahedron_1_7*tmp_107 + Blending_DF_Tetrahedron_1_8*tmp_104 - Blending_DF_Tetrahedron_1_8*tmp_108;
      real_t tmp_111 = tmp_26/tmp_110;
      real_t tmp_112 = tmp_111*tmp_8;
      real_t tmp_113 = tmp_104 - tmp_108;
      real_t tmp_114 = 2.0*tmp_113;
      real_t tmp_115 = tmp_112*tmp_114;
      real_t tmp_116 = tmp_111*tmp_32;
      real_t tmp_117 = tmp_114*tmp_116;
      real_t tmp_118 = tmp_111*tmp_35;
      real_t tmp_119 = tmp_114*tmp_118;
      real_t tmp_120 = tmp_111*tmp_38;
      real_t tmp_121 = tmp_106 - tmp_107;
      real_t tmp_122 = 2.0*tmp_121;
      real_t tmp_123 = tmp_120*tmp_122;
      real_t tmp_124 = tmp_111*tmp_43;
      real_t tmp_125 = tmp_122*tmp_124;
      real_t tmp_126 = tmp_111*tmp_46;
      real_t tmp_127 = tmp_122*tmp_126;
      real_t tmp_128 = tmp_111*tmp_49;
      real_t tmp_129 = tmp_105 - tmp_109;
      real_t tmp_130 = 2.0*tmp_129;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = tmp_111*tmp_54;
      real_t tmp_133 = tmp_130*tmp_132;
      real_t tmp_134 = tmp_111*tmp_57;
      real_t tmp_135 = tmp_130*tmp_134;
      real_t tmp_136 = 1.0*tmp_113;
      real_t tmp_137 = 1.0*tmp_121;
      real_t tmp_138 = 1.0*tmp_129;
      real_t tmp_139 = -tmp_112*tmp_136 - tmp_116*tmp_136 - tmp_118*tmp_136 - tmp_120*tmp_137 - tmp_124*tmp_137 - tmp_126*tmp_137 - tmp_128*tmp_138 - tmp_132*tmp_138 - tmp_134*tmp_138;
      real_t tmp_140 = -Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_141 = tmp_112*tmp_140;
      real_t tmp_142 = tmp_116*tmp_140;
      real_t tmp_143 = tmp_118*tmp_140;
      real_t tmp_144 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_145 = tmp_120*tmp_144;
      real_t tmp_146 = tmp_124*tmp_144;
      real_t tmp_147 = tmp_126*tmp_144;
      real_t tmp_148 = -Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_149 = tmp_128*tmp_148;
      real_t tmp_150 = tmp_132*tmp_148;
      real_t tmp_151 = tmp_134*tmp_148;
      real_t tmp_152 = -1.0*tmp_141 - 1.0*tmp_142 - 1.0*tmp_143 - 1.0*tmp_145 - 1.0*tmp_146 - 1.0*tmp_147 - 1.0*tmp_149 - 1.0*tmp_150 - 1.0*tmp_151;
      real_t tmp_153 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_154 = tmp_112*tmp_153;
      real_t tmp_155 = tmp_116*tmp_153;
      real_t tmp_156 = tmp_118*tmp_153;
      real_t tmp_157 = -Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_158 = tmp_120*tmp_157;
      real_t tmp_159 = tmp_124*tmp_157;
      real_t tmp_160 = tmp_126*tmp_157;
      real_t tmp_161 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_162 = tmp_128*tmp_161;
      real_t tmp_163 = tmp_132*tmp_161;
      real_t tmp_164 = tmp_134*tmp_161;
      real_t tmp_165 = -1.0*tmp_154 - 1.0*tmp_155 - 1.0*tmp_156 - 1.0*tmp_158 - 1.0*tmp_159 - 1.0*tmp_160 - 1.0*tmp_162 - 1.0*tmp_163 - 1.0*tmp_164;
      real_t tmp_166 = 0.041666666666666657*tmp_102*std::abs(tmp_110);
      real_t tmp_167 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_168 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_169 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_170 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_171 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_172 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_173 = Blending_DF_Tetrahedron_2_6*tmp_168 - Blending_DF_Tetrahedron_2_6*tmp_172 + Blending_DF_Tetrahedron_2_7*tmp_169 - Blending_DF_Tetrahedron_2_7*tmp_170 + Blending_DF_Tetrahedron_2_8*tmp_167 - Blending_DF_Tetrahedron_2_8*tmp_171;
      real_t tmp_174 = tmp_26/tmp_173;
      real_t tmp_175 = tmp_174*tmp_8;
      real_t tmp_176 = tmp_167 - tmp_171;
      real_t tmp_177 = 2.0*tmp_176;
      real_t tmp_178 = tmp_175*tmp_177;
      real_t tmp_179 = tmp_174*tmp_32;
      real_t tmp_180 = tmp_177*tmp_179;
      real_t tmp_181 = tmp_174*tmp_35;
      real_t tmp_182 = tmp_177*tmp_181;
      real_t tmp_183 = tmp_174*tmp_38;
      real_t tmp_184 = tmp_169 - tmp_170;
      real_t tmp_185 = 2.0*tmp_184;
      real_t tmp_186 = tmp_183*tmp_185;
      real_t tmp_187 = tmp_174*tmp_43;
      real_t tmp_188 = tmp_185*tmp_187;
      real_t tmp_189 = tmp_174*tmp_46;
      real_t tmp_190 = tmp_185*tmp_189;
      real_t tmp_191 = tmp_174*tmp_49;
      real_t tmp_192 = tmp_168 - tmp_172;
      real_t tmp_193 = 2.0*tmp_192;
      real_t tmp_194 = tmp_191*tmp_193;
      real_t tmp_195 = tmp_174*tmp_54;
      real_t tmp_196 = tmp_193*tmp_195;
      real_t tmp_197 = tmp_174*tmp_57;
      real_t tmp_198 = tmp_193*tmp_197;
      real_t tmp_199 = 1.0*tmp_176;
      real_t tmp_200 = 1.0*tmp_184;
      real_t tmp_201 = 1.0*tmp_192;
      real_t tmp_202 = -tmp_175*tmp_199 - tmp_179*tmp_199 - tmp_181*tmp_199 - tmp_183*tmp_200 - tmp_187*tmp_200 - tmp_189*tmp_200 - tmp_191*tmp_201 - tmp_195*tmp_201 - tmp_197*tmp_201;
      real_t tmp_203 = -Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_204 = tmp_175*tmp_203;
      real_t tmp_205 = tmp_179*tmp_203;
      real_t tmp_206 = tmp_181*tmp_203;
      real_t tmp_207 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_208 = tmp_183*tmp_207;
      real_t tmp_209 = tmp_187*tmp_207;
      real_t tmp_210 = tmp_189*tmp_207;
      real_t tmp_211 = -Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_212 = tmp_191*tmp_211;
      real_t tmp_213 = tmp_195*tmp_211;
      real_t tmp_214 = tmp_197*tmp_211;
      real_t tmp_215 = -1.0*tmp_204 - 1.0*tmp_205 - 1.0*tmp_206 - 1.0*tmp_208 - 1.0*tmp_209 - 1.0*tmp_210 - 1.0*tmp_212 - 1.0*tmp_213 - 1.0*tmp_214;
      real_t tmp_216 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_217 = tmp_175*tmp_216;
      real_t tmp_218 = tmp_179*tmp_216;
      real_t tmp_219 = tmp_181*tmp_216;
      real_t tmp_220 = -Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_221 = tmp_183*tmp_220;
      real_t tmp_222 = tmp_187*tmp_220;
      real_t tmp_223 = tmp_189*tmp_220;
      real_t tmp_224 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_225 = tmp_191*tmp_224;
      real_t tmp_226 = tmp_195*tmp_224;
      real_t tmp_227 = tmp_197*tmp_224;
      real_t tmp_228 = -1.0*tmp_217 - 1.0*tmp_218 - 1.0*tmp_219 - 1.0*tmp_221 - 1.0*tmp_222 - 1.0*tmp_223 - 1.0*tmp_225 - 1.0*tmp_226 - 1.0*tmp_227;
      real_t tmp_229 = 0.041666666666666657*tmp_102*std::abs(tmp_173);
      real_t tmp_230 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_231 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_232 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_233 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_234 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_235 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_236 = Blending_DF_Tetrahedron_3_6*tmp_231 - Blending_DF_Tetrahedron_3_6*tmp_235 + Blending_DF_Tetrahedron_3_7*tmp_232 - Blending_DF_Tetrahedron_3_7*tmp_233 + Blending_DF_Tetrahedron_3_8*tmp_230 - Blending_DF_Tetrahedron_3_8*tmp_234;
      real_t tmp_237 = tmp_26/tmp_236;
      real_t tmp_238 = tmp_237*tmp_8;
      real_t tmp_239 = tmp_230 - tmp_234;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_238*tmp_240;
      real_t tmp_242 = tmp_237*tmp_32;
      real_t tmp_243 = tmp_240*tmp_242;
      real_t tmp_244 = tmp_237*tmp_35;
      real_t tmp_245 = tmp_240*tmp_244;
      real_t tmp_246 = tmp_237*tmp_38;
      real_t tmp_247 = tmp_232 - tmp_233;
      real_t tmp_248 = 2.0*tmp_247;
      real_t tmp_249 = tmp_246*tmp_248;
      real_t tmp_250 = tmp_237*tmp_43;
      real_t tmp_251 = tmp_248*tmp_250;
      real_t tmp_252 = tmp_237*tmp_46;
      real_t tmp_253 = tmp_248*tmp_252;
      real_t tmp_254 = tmp_237*tmp_49;
      real_t tmp_255 = tmp_231 - tmp_235;
      real_t tmp_256 = 2.0*tmp_255;
      real_t tmp_257 = tmp_254*tmp_256;
      real_t tmp_258 = tmp_237*tmp_54;
      real_t tmp_259 = tmp_256*tmp_258;
      real_t tmp_260 = tmp_237*tmp_57;
      real_t tmp_261 = tmp_256*tmp_260;
      real_t tmp_262 = 1.0*tmp_239;
      real_t tmp_263 = 1.0*tmp_247;
      real_t tmp_264 = 1.0*tmp_255;
      real_t tmp_265 = -tmp_238*tmp_262 - tmp_242*tmp_262 - tmp_244*tmp_262 - tmp_246*tmp_263 - tmp_250*tmp_263 - tmp_252*tmp_263 - tmp_254*tmp_264 - tmp_258*tmp_264 - tmp_260*tmp_264;
      real_t tmp_266 = -Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_267 = tmp_238*tmp_266;
      real_t tmp_268 = tmp_242*tmp_266;
      real_t tmp_269 = tmp_244*tmp_266;
      real_t tmp_270 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_271 = tmp_246*tmp_270;
      real_t tmp_272 = tmp_250*tmp_270;
      real_t tmp_273 = tmp_252*tmp_270;
      real_t tmp_274 = -Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_275 = tmp_254*tmp_274;
      real_t tmp_276 = tmp_258*tmp_274;
      real_t tmp_277 = tmp_260*tmp_274;
      real_t tmp_278 = -1.0*tmp_267 - 1.0*tmp_268 - 1.0*tmp_269 - 1.0*tmp_271 - 1.0*tmp_272 - 1.0*tmp_273 - 1.0*tmp_275 - 1.0*tmp_276 - 1.0*tmp_277;
      real_t tmp_279 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_280 = tmp_238*tmp_279;
      real_t tmp_281 = tmp_242*tmp_279;
      real_t tmp_282 = tmp_244*tmp_279;
      real_t tmp_283 = -Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_284 = tmp_246*tmp_283;
      real_t tmp_285 = tmp_250*tmp_283;
      real_t tmp_286 = tmp_252*tmp_283;
      real_t tmp_287 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_288 = tmp_254*tmp_287;
      real_t tmp_289 = tmp_258*tmp_287;
      real_t tmp_290 = tmp_260*tmp_287;
      real_t tmp_291 = -1.0*tmp_280 - 1.0*tmp_281 - 1.0*tmp_282 - 1.0*tmp_284 - 1.0*tmp_285 - 1.0*tmp_286 - 1.0*tmp_288 - 1.0*tmp_289 - 1.0*tmp_290;
      real_t tmp_292 = 0.041666666666666657*tmp_102*std::abs(tmp_236);
      real_t a_0_0 = tmp_103*(tmp_63*(-tmp_31 - tmp_34 - tmp_37 - tmp_42 - tmp_45 - tmp_48 - tmp_53 - tmp_56 - tmp_59) + tmp_76*(-1.0*tmp_65 - 1.0*tmp_66 - 1.0*tmp_67 - 1.0*tmp_69 - 1.0*tmp_70 - 1.0*tmp_71 - 1.0*tmp_73 - 1.0*tmp_74 - 1.0*tmp_75) + tmp_89*(-1.0*tmp_78 - 1.0*tmp_79 - 1.0*tmp_80 - 1.0*tmp_82 - 1.0*tmp_83 - 1.0*tmp_84 - 1.0*tmp_86 - 1.0*tmp_87 - 1.0*tmp_88)) + tmp_166*(tmp_139*(-tmp_115 - tmp_117 - tmp_119 - tmp_123 - tmp_125 - tmp_127 - tmp_131 - tmp_133 - tmp_135) + tmp_152*(-1.0*tmp_141 - 1.0*tmp_142 - 1.0*tmp_143 - 1.0*tmp_145 - 1.0*tmp_146 - 1.0*tmp_147 - 1.0*tmp_149 - 1.0*tmp_150 - 1.0*tmp_151) + tmp_165*(-1.0*tmp_154 - 1.0*tmp_155 - 1.0*tmp_156 - 1.0*tmp_158 - 1.0*tmp_159 - 1.0*tmp_160 - 1.0*tmp_162 - 1.0*tmp_163 - 1.0*tmp_164)) + tmp_229*(tmp_202*(-tmp_178 - tmp_180 - tmp_182 - tmp_186 - tmp_188 - tmp_190 - tmp_194 - tmp_196 - tmp_198) + tmp_215*(-1.0*tmp_204 - 1.0*tmp_205 - 1.0*tmp_206 - 1.0*tmp_208 - 1.0*tmp_209 - 1.0*tmp_210 - 1.0*tmp_212 - 1.0*tmp_213 - 1.0*tmp_214) + tmp_228*(-1.0*tmp_217 - 1.0*tmp_218 - 1.0*tmp_219 - 1.0*tmp_221 - 1.0*tmp_222 - 1.0*tmp_223 - 1.0*tmp_225 - 1.0*tmp_226 - 1.0*tmp_227)) + tmp_292*(tmp_265*(-tmp_241 - tmp_243 - tmp_245 - tmp_249 - tmp_251 - tmp_253 - tmp_257 - tmp_259 - tmp_261) + tmp_278*(-1.0*tmp_267 - 1.0*tmp_268 - 1.0*tmp_269 - 1.0*tmp_271 - 1.0*tmp_272 - 1.0*tmp_273 - 1.0*tmp_275 - 1.0*tmp_276 - 1.0*tmp_277) + tmp_291*(-1.0*tmp_280 - 1.0*tmp_281 - 1.0*tmp_282 - 1.0*tmp_284 - 1.0*tmp_285 - 1.0*tmp_286 - 1.0*tmp_288 - 1.0*tmp_289 - 1.0*tmp_290));
      real_t a_0_1 = tmp_103*(tmp_63*(tmp_37 + tmp_48 + tmp_59) + tmp_76*(tmp_67 + tmp_71 + tmp_75) + tmp_89*(tmp_80 + tmp_84 + tmp_88)) + tmp_166*(tmp_139*(tmp_119 + tmp_127 + tmp_135) + tmp_152*(tmp_143 + tmp_147 + tmp_151) + tmp_165*(tmp_156 + tmp_160 + tmp_164)) + tmp_229*(tmp_202*(tmp_182 + tmp_190 + tmp_198) + tmp_215*(tmp_206 + tmp_210 + tmp_214) + tmp_228*(tmp_219 + tmp_223 + tmp_227)) + tmp_292*(tmp_265*(tmp_245 + tmp_253 + tmp_261) + tmp_278*(tmp_269 + tmp_273 + tmp_277) + tmp_291*(tmp_282 + tmp_286 + tmp_290));
      real_t a_0_2 = tmp_103*(tmp_63*(tmp_34 + tmp_45 + tmp_56) + tmp_76*(tmp_66 + tmp_70 + tmp_74) + tmp_89*(tmp_79 + tmp_83 + tmp_87)) + tmp_166*(tmp_139*(tmp_117 + tmp_125 + tmp_133) + tmp_152*(tmp_142 + tmp_146 + tmp_150) + tmp_165*(tmp_155 + tmp_159 + tmp_163)) + tmp_229*(tmp_202*(tmp_180 + tmp_188 + tmp_196) + tmp_215*(tmp_205 + tmp_209 + tmp_213) + tmp_228*(tmp_218 + tmp_222 + tmp_226)) + tmp_292*(tmp_265*(tmp_243 + tmp_251 + tmp_259) + tmp_278*(tmp_268 + tmp_272 + tmp_276) + tmp_291*(tmp_281 + tmp_285 + tmp_289));
      real_t a_0_3 = tmp_103*(tmp_63*(tmp_31 + tmp_42 + tmp_53) + tmp_76*(tmp_65 + tmp_69 + tmp_73) + tmp_89*(tmp_78 + tmp_82 + tmp_86)) + tmp_166*(tmp_139*(tmp_115 + tmp_123 + tmp_131) + tmp_152*(tmp_141 + tmp_145 + tmp_149) + tmp_165*(tmp_154 + tmp_158 + tmp_162)) + tmp_229*(tmp_202*(tmp_178 + tmp_186 + tmp_194) + tmp_215*(tmp_204 + tmp_208 + tmp_212) + tmp_228*(tmp_217 + tmp_221 + tmp_225)) + tmp_292*(tmp_265*(tmp_241 + tmp_249 + tmp_257) + tmp_278*(tmp_267 + tmp_271 + tmp_275) + tmp_291*(tmp_280 + tmp_284 + tmp_288));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_epsiloncc_2_2_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
