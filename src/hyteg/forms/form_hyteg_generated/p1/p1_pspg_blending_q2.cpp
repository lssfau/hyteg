/*
* Copyright (c) 2023 Andreas Burkhart
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

// This file has been generated with the AHFC. If buggy try fixing the generator itself.

#include "p1_pspg_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void p1_pspg_blending_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 3 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.66666666666666663*coords[0][0] + 0.16666666666666674*coords[1][0] + 0.16666666666666663*coords[2][0], 0.66666666666666663*coords[0][1] + 0.16666666666666674*coords[1][1] + 0.16666666666666663*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.16666666666666663*coords[0][0] + 0.66666666666666674*coords[1][0] + 0.16666666666666663*coords[2][0], 0.16666666666666663*coords[0][1] + 0.66666666666666674*coords[1][1] + 0.16666666666666663*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.16666666666666652*coords[0][0] + 0.16666666666666663*coords[1][0] + 0.66666666666666685*coords[2][0], 0.16666666666666652*coords[0][1] + 0.16666666666666663*coords[1][1] + 0.66666666666666685*coords[2][1], 0), J_B_3);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(0, 0);
      const real_t tmp8 = tmp6*J_B_1(0, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = -tmp10 - tmp9;
      const real_t tmp12 = tmp6*J_B_1(1, 0);
      const real_t tmp13 = tmp6*J_B_1(1, 1);
      const real_t tmp14 = tmp0*tmp12 - tmp13*tmp2;
      const real_t tmp15 = tmp1*tmp12 - tmp13*tmp3;
      const real_t tmp16 = tmp14 + tmp15;
      const real_t tmp17 = 0.016666666666666673*(std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0])*std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]));
      const real_t tmp18 = tmp17*(tmp5*tmp5);
      const real_t tmp19 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp20 = tmp4/tmp19;
      const real_t tmp21 = tmp20*J_B_2(0, 0);
      const real_t tmp22 = tmp20*J_B_2(0, 1);
      const real_t tmp23 = tmp0*tmp21 - tmp2*tmp22;
      const real_t tmp24 = tmp1*tmp21 - tmp22*tmp3;
      const real_t tmp25 = -tmp23 - tmp24;
      const real_t tmp26 = tmp20*J_B_2(1, 0);
      const real_t tmp27 = tmp20*J_B_2(1, 1);
      const real_t tmp28 = tmp0*tmp26 - tmp2*tmp27;
      const real_t tmp29 = tmp1*tmp26 - tmp27*tmp3;
      const real_t tmp30 = tmp28 + tmp29;
      const real_t tmp31 = tmp17*(tmp19*tmp19);
      const real_t tmp32 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp33 = tmp4/tmp32;
      const real_t tmp34 = tmp33*J_B_3(0, 0);
      const real_t tmp35 = tmp33*J_B_3(0, 1);
      const real_t tmp36 = tmp0*tmp34 - tmp2*tmp35;
      const real_t tmp37 = tmp1*tmp34 - tmp3*tmp35;
      const real_t tmp38 = -tmp36 - tmp37;
      const real_t tmp39 = tmp33*J_B_3(1, 0);
      const real_t tmp40 = tmp33*J_B_3(1, 1);
      const real_t tmp41 = tmp0*tmp39 - tmp2*tmp40;
      const real_t tmp42 = tmp1*tmp39 - tmp3*tmp40;
      const real_t tmp43 = tmp41 + tmp42;
      const real_t tmp44 = tmp17*(tmp32*tmp32);
      const real_t tmp45 = -tmp14;
      const real_t tmp46 = -tmp28;
      const real_t tmp47 = -tmp41;
      const real_t tmp48 = -tmp18*(tmp11*tmp9 + tmp16*tmp45) - tmp31*(tmp23*tmp25 + tmp30*tmp46) - tmp44*(tmp36*tmp38 + tmp43*tmp47);
      const real_t tmp49 = -tmp15;
      const real_t tmp50 = -tmp29;
      const real_t tmp51 = -tmp42;
      const real_t tmp52 = -tmp18*(tmp10*tmp11 + tmp16*tmp49) - tmp31*(tmp24*tmp25 + tmp30*tmp50) - tmp44*(tmp37*tmp38 + tmp43*tmp51);
      const real_t tmp53 = -tmp18*(tmp10*tmp9 + tmp45*tmp49) - tmp31*(tmp23*tmp24 + tmp46*tmp50) - tmp44*(tmp36*tmp37 + tmp47*tmp51);
      elMat(0,0) = -tmp18*((tmp11*tmp11) + (tmp16*tmp16)) - tmp31*((tmp25*tmp25) + (tmp30*tmp30)) - tmp44*((tmp38*tmp38) + (tmp43*tmp43));
      elMat(0,1) = tmp48;
      elMat(0,2) = tmp52;
      elMat(1,0) = tmp48;
      elMat(1,1) = -tmp18*((tmp45*tmp45) + (tmp9*tmp9)) - tmp31*((tmp23*tmp23) + (tmp46*tmp46)) - tmp44*((tmp36*tmp36) + (tmp47*tmp47));
      elMat(1,2) = tmp53;
      elMat(2,0) = tmp52;
      elMat(2,1) = tmp53;
      elMat(2,2) = -tmp18*((tmp10*tmp10) + (tmp49*tmp49)) - tmp31*((tmp24*tmp24) + (tmp50*tmp50)) - tmp44*((tmp37*tmp37) + (tmp51*tmp51));
   }

   void p1_pspg_blending_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.66666666666666663*coords[0][0] + 0.16666666666666674*coords[1][0] + 0.16666666666666663*coords[2][0], 0.66666666666666663*coords[0][1] + 0.16666666666666674*coords[1][1] + 0.16666666666666663*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.16666666666666663*coords[0][0] + 0.66666666666666674*coords[1][0] + 0.16666666666666663*coords[2][0], 0.16666666666666663*coords[0][1] + 0.66666666666666674*coords[1][1] + 0.16666666666666663*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.16666666666666652*coords[0][0] + 0.16666666666666663*coords[1][0] + 0.66666666666666685*coords[2][0], 0.16666666666666652*coords[0][1] + 0.16666666666666663*coords[1][1] + 0.66666666666666685*coords[2][1], 0), J_B_3);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(0, 0);
      const real_t tmp8 = tmp6*J_B_1(0, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = -tmp10 - tmp9;
      const real_t tmp12 = tmp6*J_B_1(1, 0);
      const real_t tmp13 = tmp6*J_B_1(1, 1);
      const real_t tmp14 = tmp0*tmp12 - tmp13*tmp2;
      const real_t tmp15 = tmp1*tmp12 - tmp13*tmp3;
      const real_t tmp16 = tmp14 + tmp15;
      const real_t tmp17 = 0.016666666666666673*(std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0])*std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]));
      const real_t tmp18 = tmp17*(tmp5*tmp5);
      const real_t tmp19 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp20 = tmp4/tmp19;
      const real_t tmp21 = tmp20*J_B_2(0, 0);
      const real_t tmp22 = tmp20*J_B_2(0, 1);
      const real_t tmp23 = tmp0*tmp21 - tmp2*tmp22;
      const real_t tmp24 = tmp1*tmp21 - tmp22*tmp3;
      const real_t tmp25 = -tmp23 - tmp24;
      const real_t tmp26 = tmp20*J_B_2(1, 0);
      const real_t tmp27 = tmp20*J_B_2(1, 1);
      const real_t tmp28 = tmp0*tmp26 - tmp2*tmp27;
      const real_t tmp29 = tmp1*tmp26 - tmp27*tmp3;
      const real_t tmp30 = tmp28 + tmp29;
      const real_t tmp31 = tmp17*(tmp19*tmp19);
      const real_t tmp32 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp33 = tmp4/tmp32;
      const real_t tmp34 = tmp33*J_B_3(0, 0);
      const real_t tmp35 = tmp33*J_B_3(0, 1);
      const real_t tmp36 = tmp0*tmp34 - tmp2*tmp35;
      const real_t tmp37 = tmp1*tmp34 - tmp3*tmp35;
      const real_t tmp38 = -tmp36 - tmp37;
      const real_t tmp39 = tmp33*J_B_3(1, 0);
      const real_t tmp40 = tmp33*J_B_3(1, 1);
      const real_t tmp41 = tmp0*tmp39 - tmp2*tmp40;
      const real_t tmp42 = tmp1*tmp39 - tmp3*tmp40;
      const real_t tmp43 = tmp41 + tmp42;
      const real_t tmp44 = tmp17*(tmp32*tmp32);
      elMat(0,0) = -tmp18*((tmp11*tmp11) + (tmp16*tmp16)) - tmp31*((tmp25*tmp25) + (tmp30*tmp30)) - tmp44*((tmp38*tmp38) + (tmp43*tmp43));
      elMat(0,1) = -tmp18*(tmp11*tmp9 - tmp14*tmp16) - tmp31*(tmp23*tmp25 - tmp28*tmp30) - tmp44*(tmp36*tmp38 - tmp41*tmp43);
      elMat(0,2) = -tmp18*(tmp10*tmp11 - tmp15*tmp16) - tmp31*(tmp24*tmp25 - tmp29*tmp30) - tmp44*(tmp37*tmp38 - tmp42*tmp43);
   }

   void p1_pspg_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.44773255210137247*coords[0][0] + 0.18002969351036546*coords[1][0] + 0.36531451881463461*coords[2][0] + 0.0069232355736274509*coords[3][0], 0.44773255210137247*coords[0][1] + 0.18002969351036546*coords[1][1] + 0.36531451881463461*coords[2][1] + 0.0069232355736274509*coords[3][1], 0.44773255210137247*coords[0][2] + 0.18002969351036546*coords[1][2] + 0.36531451881463461*coords[2][2] + 0.0069232355736274509*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.0048399363458718758*coords[0][0] + 0.15593312049918584*coords[1][0] + 0.45746158708559559*coords[2][0] + 0.3817653560693467*coords[3][0], 0.0048399363458718758*coords[0][1] + 0.15593312049918584*coords[1][1] + 0.45746158708559559*coords[2][1] + 0.3817653560693467*coords[3][1], 0.0048399363458718758*coords[0][2] + 0.15593312049918584*coords[1][2] + 0.45746158708559559*coords[2][2] + 0.3817653560693467*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.35284634870858683*coords[0][0] + 0.21607642918484793*coords[1][0] + 0.00037551502872928966*coords[2][0] + 0.43070170707783589*coords[3][0], 0.35284634870858683*coords[0][1] + 0.21607642918484793*coords[1][1] + 0.00037551502872928966*coords[2][1] + 0.43070170707783589*coords[3][1], 0.35284634870858683*coords[0][2] + 0.21607642918484793*coords[1][2] + 0.00037551502872928966*coords[2][2] + 0.43070170707783589*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.014827610062423724*coords[0][0] + 0.82157254096761967*coords[1][0] + 0.12366680032845823*coords[2][0] + 0.039933048641498381*coords[3][0], 0.014827610062423724*coords[0][1] + 0.82157254096761967*coords[1][1] + 0.12366680032845823*coords[2][1] + 0.039933048641498381*coords[3][1], 0.014827610062423724*coords[0][2] + 0.82157254096761967*coords[1][2] + 0.12366680032845823*coords[2][2] + 0.039933048641498381*coords[3][2]), J_B_4);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp21 = tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp20);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = -tmp28 - tmp32 - tmp36;
      const real_t tmp38 = tmp22*(-J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp39 = tmp22*(J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0));
      const real_t tmp40 = tmp22*(-J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp41 = tmp24*tmp39 + tmp26*tmp40 + tmp38*tmp4;
      const real_t tmp42 = tmp29*tmp38 + tmp30*tmp39 + tmp31*tmp40;
      const real_t tmp43 = tmp33*tmp38 + tmp34*tmp39 + tmp35*tmp40;
      const real_t tmp44 = -tmp41 - tmp42 - tmp43;
      const real_t tmp45 = tmp22*(J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0));
      const real_t tmp46 = tmp22*(-J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp47 = tmp22*(J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1));
      const real_t tmp48 = tmp24*tmp46 + tmp26*tmp47 + tmp4*tmp45;
      const real_t tmp49 = tmp29*tmp45 + tmp30*tmp46 + tmp31*tmp47;
      const real_t tmp50 = tmp33*tmp45 + tmp34*tmp46 + tmp35*tmp47;
      const real_t tmp51 = -tmp48 - tmp49 - tmp50;
      const real_t tmp52 = coords[0][0]*coords[1][1];
      const real_t tmp53 = coords[0][0]*coords[1][2];
      const real_t tmp54 = coords[2][1]*coords[3][2];
      const real_t tmp55 = coords[0][1]*coords[1][0];
      const real_t tmp56 = coords[0][1]*coords[1][2];
      const real_t tmp57 = coords[2][2]*coords[3][0];
      const real_t tmp58 = coords[0][2]*coords[1][0];
      const real_t tmp59 = coords[0][2]*coords[1][1];
      const real_t tmp60 = coords[2][0]*coords[3][1];
      const real_t tmp61 = coords[2][2]*coords[3][1];
      const real_t tmp62 = coords[2][0]*coords[3][2];
      const real_t tmp63 = coords[2][1]*coords[3][0];
      const real_t tmp64 = std::pow(6, 1.0/3.0)*std::pow(std::abs(coords[0][0]*tmp54 - coords[0][0]*tmp61 + coords[0][1]*tmp57 - coords[0][1]*tmp62 + coords[0][2]*tmp60 - coords[0][2]*tmp63 - coords[1][0]*tmp54 + coords[1][0]*tmp61 - coords[1][1]*tmp57 + coords[1][1]*tmp62 - coords[1][2]*tmp60 + coords[1][2]*tmp63 + coords[2][0]*tmp56 - coords[2][0]*tmp59 - coords[2][1]*tmp53 + coords[2][1]*tmp58 + coords[2][2]*tmp52 - coords[2][2]*tmp55 - coords[3][0]*tmp56 + coords[3][0]*tmp59 + coords[3][1]*tmp53 - coords[3][1]*tmp58 - coords[3][2]*tmp52 + coords[3][2]*tmp55), 5.0/3.0);
      const real_t tmp65 = 0.00069565032253929705*tmp64*std::pow(std::abs(tmp21), 5.0/3.0);
      const real_t tmp66 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp67 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp68 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp69 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp70 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp71 = tmp66*J_B_2(2, 2) - tmp67*J_B_2(2, 2) + tmp68*J_B_2(2, 0) - tmp69*J_B_2(2, 1) - tmp70*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp72 = tmp17/tmp71;
      const real_t tmp73 = tmp72*(tmp66 - tmp67);
      const real_t tmp74 = tmp72*(-tmp69 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp75 = tmp72*(tmp68 - tmp70);
      const real_t tmp76 = tmp24*tmp74 + tmp26*tmp75 + tmp4*tmp73;
      const real_t tmp77 = tmp29*tmp73 + tmp30*tmp74 + tmp31*tmp75;
      const real_t tmp78 = tmp33*tmp73 + tmp34*tmp74 + tmp35*tmp75;
      const real_t tmp79 = -tmp76 - tmp77 - tmp78;
      const real_t tmp80 = tmp72*(-J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp81 = tmp72*(J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0));
      const real_t tmp82 = tmp72*(-J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp83 = tmp24*tmp81 + tmp26*tmp82 + tmp4*tmp80;
      const real_t tmp84 = tmp29*tmp80 + tmp30*tmp81 + tmp31*tmp82;
      const real_t tmp85 = tmp33*tmp80 + tmp34*tmp81 + tmp35*tmp82;
      const real_t tmp86 = -tmp83 - tmp84 - tmp85;
      const real_t tmp87 = tmp72*(J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0));
      const real_t tmp88 = tmp72*(-J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp89 = tmp72*(J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1));
      const real_t tmp90 = tmp24*tmp88 + tmp26*tmp89 + tmp4*tmp87;
      const real_t tmp91 = tmp29*tmp87 + tmp30*tmp88 + tmp31*tmp89;
      const real_t tmp92 = tmp33*tmp87 + tmp34*tmp88 + tmp35*tmp89;
      const real_t tmp93 = -tmp90 - tmp91 - tmp92;
      const real_t tmp94 = 0.00064531846455223997*tmp64*std::pow(std::abs(tmp71), 5.0/3.0);
      const real_t tmp95 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp96 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp97 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp98 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp99 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp100 = tmp95*J_B_3(2, 2) - tmp96*J_B_3(2, 2) + tmp97*J_B_3(2, 0) - tmp98*J_B_3(2, 1) - tmp99*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp101 = tmp17/tmp100;
      const real_t tmp102 = tmp101*(tmp95 - tmp96);
      const real_t tmp103 = tmp101*(-tmp98 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp104 = tmp101*(tmp97 - tmp99);
      const real_t tmp105 = tmp102*tmp4 + tmp103*tmp24 + tmp104*tmp26;
      const real_t tmp106 = tmp102*tmp29 + tmp103*tmp30 + tmp104*tmp31;
      const real_t tmp107 = tmp102*tmp33 + tmp103*tmp34 + tmp104*tmp35;
      const real_t tmp108 = -tmp105 - tmp106 - tmp107;
      const real_t tmp109 = tmp101*(-J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp110 = tmp101*(J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0));
      const real_t tmp111 = tmp101*(-J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp112 = tmp109*tmp4 + tmp110*tmp24 + tmp111*tmp26;
      const real_t tmp113 = tmp109*tmp29 + tmp110*tmp30 + tmp111*tmp31;
      const real_t tmp114 = tmp109*tmp33 + tmp110*tmp34 + tmp111*tmp35;
      const real_t tmp115 = -tmp112 - tmp113 - tmp114;
      const real_t tmp116 = tmp101*(J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0));
      const real_t tmp117 = tmp101*(-J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp118 = tmp101*(J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1));
      const real_t tmp119 = tmp116*tmp4 + tmp117*tmp24 + tmp118*tmp26;
      const real_t tmp120 = tmp116*tmp29 + tmp117*tmp30 + tmp118*tmp31;
      const real_t tmp121 = tmp116*tmp33 + tmp117*tmp34 + tmp118*tmp35;
      const real_t tmp122 = -tmp119 - tmp120 - tmp121;
      const real_t tmp123 = 0.00073864336921637664*tmp64*std::pow(std::abs(tmp100), 5.0/3.0);
      const real_t tmp124 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp125 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp126 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp127 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp128 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp129 = tmp124*J_B_4(2, 2) - tmp125*J_B_4(2, 2) + tmp126*J_B_4(2, 0) - tmp127*J_B_4(2, 1) - tmp128*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp130 = tmp17/tmp129;
      const real_t tmp131 = tmp130*(tmp124 - tmp125);
      const real_t tmp132 = tmp130*(-tmp127 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp133 = tmp130*(tmp126 - tmp128);
      const real_t tmp134 = tmp131*tmp4 + tmp132*tmp24 + tmp133*tmp26;
      const real_t tmp135 = tmp131*tmp29 + tmp132*tmp30 + tmp133*tmp31;
      const real_t tmp136 = tmp131*tmp33 + tmp132*tmp34 + tmp133*tmp35;
      const real_t tmp137 = -tmp134 - tmp135 - tmp136;
      const real_t tmp138 = tmp130*(-J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp139 = tmp130*(J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0));
      const real_t tmp140 = tmp130*(-J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp141 = tmp138*tmp4 + tmp139*tmp24 + tmp140*tmp26;
      const real_t tmp142 = tmp138*tmp29 + tmp139*tmp30 + tmp140*tmp31;
      const real_t tmp143 = tmp138*tmp33 + tmp139*tmp34 + tmp140*tmp35;
      const real_t tmp144 = -tmp141 - tmp142 - tmp143;
      const real_t tmp145 = tmp130*(J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0));
      const real_t tmp146 = tmp130*(-J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp147 = tmp130*(J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1));
      const real_t tmp148 = tmp145*tmp4 + tmp146*tmp24 + tmp147*tmp26;
      const real_t tmp149 = tmp145*tmp29 + tmp146*tmp30 + tmp147*tmp31;
      const real_t tmp150 = tmp145*tmp33 + tmp146*tmp34 + tmp147*tmp35;
      const real_t tmp151 = -tmp148 - tmp149 - tmp150;
      const real_t tmp152 = 0.00023520265850689978*tmp64*std::pow(std::abs(tmp129), 5.0/3.0);
      const real_t tmp153 = -tmp123*(tmp105*tmp108 + tmp112*tmp115 + tmp119*tmp122) - tmp152*(tmp134*tmp137 + tmp141*tmp144 + tmp148*tmp151) - tmp65*(tmp28*tmp37 + tmp41*tmp44 + tmp48*tmp51) - tmp94*(tmp76*tmp79 + tmp83*tmp86 + tmp90*tmp93);
      const real_t tmp154 = -tmp123*(tmp106*tmp108 + tmp113*tmp115 + tmp120*tmp122) - tmp152*(tmp135*tmp137 + tmp142*tmp144 + tmp149*tmp151) - tmp65*(tmp32*tmp37 + tmp42*tmp44 + tmp49*tmp51) - tmp94*(tmp77*tmp79 + tmp84*tmp86 + tmp91*tmp93);
      const real_t tmp155 = -tmp123*(tmp107*tmp108 + tmp114*tmp115 + tmp121*tmp122) - tmp152*(tmp136*tmp137 + tmp143*tmp144 + tmp150*tmp151) - tmp65*(tmp36*tmp37 + tmp43*tmp44 + tmp50*tmp51) - tmp94*(tmp78*tmp79 + tmp85*tmp86 + tmp92*tmp93);
      const real_t tmp156 = -tmp123*(tmp105*tmp106 + tmp112*tmp113 + tmp119*tmp120) - tmp152*(tmp134*tmp135 + tmp141*tmp142 + tmp148*tmp149) - tmp65*(tmp28*tmp32 + tmp41*tmp42 + tmp48*tmp49) - tmp94*(tmp76*tmp77 + tmp83*tmp84 + tmp90*tmp91);
      const real_t tmp157 = -tmp123*(tmp105*tmp107 + tmp112*tmp114 + tmp119*tmp121) - tmp152*(tmp134*tmp136 + tmp141*tmp143 + tmp148*tmp150) - tmp65*(tmp28*tmp36 + tmp41*tmp43 + tmp48*tmp50) - tmp94*(tmp76*tmp78 + tmp83*tmp85 + tmp90*tmp92);
      const real_t tmp158 = -tmp123*(tmp106*tmp107 + tmp113*tmp114 + tmp120*tmp121) - tmp152*(tmp135*tmp136 + tmp142*tmp143 + tmp149*tmp150) - tmp65*(tmp32*tmp36 + tmp42*tmp43 + tmp49*tmp50) - tmp94*(tmp77*tmp78 + tmp84*tmp85 + tmp91*tmp92);
      elMat(0,0) = -tmp123*((tmp108*tmp108) + (tmp115*tmp115) + (tmp122*tmp122)) - tmp152*((tmp137*tmp137) + (tmp144*tmp144) + (tmp151*tmp151)) - tmp65*((tmp37*tmp37) + (tmp44*tmp44) + (tmp51*tmp51)) - tmp94*((tmp79*tmp79) + (tmp86*tmp86) + (tmp93*tmp93));
      elMat(0,1) = tmp153;
      elMat(0,2) = tmp154;
      elMat(0,3) = tmp155;
      elMat(1,0) = tmp153;
      elMat(1,1) = -tmp123*((tmp105*tmp105) + (tmp112*tmp112) + (tmp119*tmp119)) - tmp152*((tmp134*tmp134) + (tmp141*tmp141) + (tmp148*tmp148)) - tmp65*((tmp28*tmp28) + (tmp41*tmp41) + (tmp48*tmp48)) - tmp94*((tmp76*tmp76) + (tmp83*tmp83) + (tmp90*tmp90));
      elMat(1,2) = tmp156;
      elMat(1,3) = tmp157;
      elMat(2,0) = tmp154;
      elMat(2,1) = tmp156;
      elMat(2,2) = -tmp123*((tmp106*tmp106) + (tmp113*tmp113) + (tmp120*tmp120)) - tmp152*((tmp135*tmp135) + (tmp142*tmp142) + (tmp149*tmp149)) - tmp65*((tmp32*tmp32) + (tmp42*tmp42) + (tmp49*tmp49)) - tmp94*((tmp77*tmp77) + (tmp84*tmp84) + (tmp91*tmp91));
      elMat(2,3) = tmp158;
      elMat(3,0) = tmp155;
      elMat(3,1) = tmp157;
      elMat(3,2) = tmp158;
      elMat(3,3) = -tmp123*((tmp107*tmp107) + (tmp114*tmp114) + (tmp121*tmp121)) - tmp152*((tmp136*tmp136) + (tmp143*tmp143) + (tmp150*tmp150)) - tmp65*((tmp36*tmp36) + (tmp43*tmp43) + (tmp50*tmp50)) - tmp94*((tmp78*tmp78) + (tmp85*tmp85) + (tmp92*tmp92));
   }

   void p1_pspg_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.44773255210137247*coords[0][0] + 0.18002969351036546*coords[1][0] + 0.36531451881463461*coords[2][0] + 0.0069232355736274509*coords[3][0], 0.44773255210137247*coords[0][1] + 0.18002969351036546*coords[1][1] + 0.36531451881463461*coords[2][1] + 0.0069232355736274509*coords[3][1], 0.44773255210137247*coords[0][2] + 0.18002969351036546*coords[1][2] + 0.36531451881463461*coords[2][2] + 0.0069232355736274509*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.0048399363458718758*coords[0][0] + 0.15593312049918584*coords[1][0] + 0.45746158708559559*coords[2][0] + 0.3817653560693467*coords[3][0], 0.0048399363458718758*coords[0][1] + 0.15593312049918584*coords[1][1] + 0.45746158708559559*coords[2][1] + 0.3817653560693467*coords[3][1], 0.0048399363458718758*coords[0][2] + 0.15593312049918584*coords[1][2] + 0.45746158708559559*coords[2][2] + 0.3817653560693467*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.35284634870858683*coords[0][0] + 0.21607642918484793*coords[1][0] + 0.00037551502872928966*coords[2][0] + 0.43070170707783589*coords[3][0], 0.35284634870858683*coords[0][1] + 0.21607642918484793*coords[1][1] + 0.00037551502872928966*coords[2][1] + 0.43070170707783589*coords[3][1], 0.35284634870858683*coords[0][2] + 0.21607642918484793*coords[1][2] + 0.00037551502872928966*coords[2][2] + 0.43070170707783589*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.014827610062423724*coords[0][0] + 0.82157254096761967*coords[1][0] + 0.12366680032845823*coords[2][0] + 0.039933048641498381*coords[3][0], 0.014827610062423724*coords[0][1] + 0.82157254096761967*coords[1][1] + 0.12366680032845823*coords[2][1] + 0.039933048641498381*coords[3][1], 0.014827610062423724*coords[0][2] + 0.82157254096761967*coords[1][2] + 0.12366680032845823*coords[2][2] + 0.039933048641498381*coords[3][2]), J_B_4);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp21 = tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp20);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = -tmp28 - tmp32 - tmp36;
      const real_t tmp38 = tmp22*(-J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp39 = tmp22*(J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0));
      const real_t tmp40 = tmp22*(-J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp41 = tmp24*tmp39 + tmp26*tmp40 + tmp38*tmp4;
      const real_t tmp42 = tmp29*tmp38 + tmp30*tmp39 + tmp31*tmp40;
      const real_t tmp43 = tmp33*tmp38 + tmp34*tmp39 + tmp35*tmp40;
      const real_t tmp44 = -tmp41 - tmp42 - tmp43;
      const real_t tmp45 = tmp22*(J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0));
      const real_t tmp46 = tmp22*(-J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp47 = tmp22*(J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1));
      const real_t tmp48 = tmp24*tmp46 + tmp26*tmp47 + tmp4*tmp45;
      const real_t tmp49 = tmp29*tmp45 + tmp30*tmp46 + tmp31*tmp47;
      const real_t tmp50 = tmp33*tmp45 + tmp34*tmp46 + tmp35*tmp47;
      const real_t tmp51 = -tmp48 - tmp49 - tmp50;
      const real_t tmp52 = coords[0][0]*coords[1][1];
      const real_t tmp53 = coords[0][0]*coords[1][2];
      const real_t tmp54 = coords[2][1]*coords[3][2];
      const real_t tmp55 = coords[0][1]*coords[1][0];
      const real_t tmp56 = coords[0][1]*coords[1][2];
      const real_t tmp57 = coords[2][2]*coords[3][0];
      const real_t tmp58 = coords[0][2]*coords[1][0];
      const real_t tmp59 = coords[0][2]*coords[1][1];
      const real_t tmp60 = coords[2][0]*coords[3][1];
      const real_t tmp61 = coords[2][2]*coords[3][1];
      const real_t tmp62 = coords[2][0]*coords[3][2];
      const real_t tmp63 = coords[2][1]*coords[3][0];
      const real_t tmp64 = std::pow(6, 1.0/3.0)*std::pow(std::abs(coords[0][0]*tmp54 - coords[0][0]*tmp61 + coords[0][1]*tmp57 - coords[0][1]*tmp62 + coords[0][2]*tmp60 - coords[0][2]*tmp63 - coords[1][0]*tmp54 + coords[1][0]*tmp61 - coords[1][1]*tmp57 + coords[1][1]*tmp62 - coords[1][2]*tmp60 + coords[1][2]*tmp63 + coords[2][0]*tmp56 - coords[2][0]*tmp59 - coords[2][1]*tmp53 + coords[2][1]*tmp58 + coords[2][2]*tmp52 - coords[2][2]*tmp55 - coords[3][0]*tmp56 + coords[3][0]*tmp59 + coords[3][1]*tmp53 - coords[3][1]*tmp58 - coords[3][2]*tmp52 + coords[3][2]*tmp55), 5.0/3.0);
      const real_t tmp65 = 0.00069565032253929705*tmp64*std::pow(std::abs(tmp21), 5.0/3.0);
      const real_t tmp66 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp67 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp68 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp69 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp70 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp71 = tmp66*J_B_2(2, 2) - tmp67*J_B_2(2, 2) + tmp68*J_B_2(2, 0) - tmp69*J_B_2(2, 1) - tmp70*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp72 = tmp17/tmp71;
      const real_t tmp73 = tmp72*(tmp66 - tmp67);
      const real_t tmp74 = tmp72*(-tmp69 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp75 = tmp72*(tmp68 - tmp70);
      const real_t tmp76 = tmp24*tmp74 + tmp26*tmp75 + tmp4*tmp73;
      const real_t tmp77 = tmp29*tmp73 + tmp30*tmp74 + tmp31*tmp75;
      const real_t tmp78 = tmp33*tmp73 + tmp34*tmp74 + tmp35*tmp75;
      const real_t tmp79 = -tmp76 - tmp77 - tmp78;
      const real_t tmp80 = tmp72*(-J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp81 = tmp72*(J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0));
      const real_t tmp82 = tmp72*(-J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp83 = tmp24*tmp81 + tmp26*tmp82 + tmp4*tmp80;
      const real_t tmp84 = tmp29*tmp80 + tmp30*tmp81 + tmp31*tmp82;
      const real_t tmp85 = tmp33*tmp80 + tmp34*tmp81 + tmp35*tmp82;
      const real_t tmp86 = -tmp83 - tmp84 - tmp85;
      const real_t tmp87 = tmp72*(J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0));
      const real_t tmp88 = tmp72*(-J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp89 = tmp72*(J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1));
      const real_t tmp90 = tmp24*tmp88 + tmp26*tmp89 + tmp4*tmp87;
      const real_t tmp91 = tmp29*tmp87 + tmp30*tmp88 + tmp31*tmp89;
      const real_t tmp92 = tmp33*tmp87 + tmp34*tmp88 + tmp35*tmp89;
      const real_t tmp93 = -tmp90 - tmp91 - tmp92;
      const real_t tmp94 = 0.00064531846455223997*tmp64*std::pow(std::abs(tmp71), 5.0/3.0);
      const real_t tmp95 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp96 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp97 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp98 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp99 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp100 = tmp95*J_B_3(2, 2) - tmp96*J_B_3(2, 2) + tmp97*J_B_3(2, 0) - tmp98*J_B_3(2, 1) - tmp99*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp101 = tmp17/tmp100;
      const real_t tmp102 = tmp101*(tmp95 - tmp96);
      const real_t tmp103 = tmp101*(-tmp98 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp104 = tmp101*(tmp97 - tmp99);
      const real_t tmp105 = tmp102*tmp4 + tmp103*tmp24 + tmp104*tmp26;
      const real_t tmp106 = tmp102*tmp29 + tmp103*tmp30 + tmp104*tmp31;
      const real_t tmp107 = tmp102*tmp33 + tmp103*tmp34 + tmp104*tmp35;
      const real_t tmp108 = -tmp105 - tmp106 - tmp107;
      const real_t tmp109 = tmp101*(-J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp110 = tmp101*(J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0));
      const real_t tmp111 = tmp101*(-J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp112 = tmp109*tmp4 + tmp110*tmp24 + tmp111*tmp26;
      const real_t tmp113 = tmp109*tmp29 + tmp110*tmp30 + tmp111*tmp31;
      const real_t tmp114 = tmp109*tmp33 + tmp110*tmp34 + tmp111*tmp35;
      const real_t tmp115 = -tmp112 - tmp113 - tmp114;
      const real_t tmp116 = tmp101*(J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0));
      const real_t tmp117 = tmp101*(-J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp118 = tmp101*(J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1));
      const real_t tmp119 = tmp116*tmp4 + tmp117*tmp24 + tmp118*tmp26;
      const real_t tmp120 = tmp116*tmp29 + tmp117*tmp30 + tmp118*tmp31;
      const real_t tmp121 = tmp116*tmp33 + tmp117*tmp34 + tmp118*tmp35;
      const real_t tmp122 = -tmp119 - tmp120 - tmp121;
      const real_t tmp123 = 0.00073864336921637664*tmp64*std::pow(std::abs(tmp100), 5.0/3.0);
      const real_t tmp124 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp125 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp126 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp127 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp128 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp129 = tmp124*J_B_4(2, 2) - tmp125*J_B_4(2, 2) + tmp126*J_B_4(2, 0) - tmp127*J_B_4(2, 1) - tmp128*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp130 = tmp17/tmp129;
      const real_t tmp131 = tmp130*(tmp124 - tmp125);
      const real_t tmp132 = tmp130*(-tmp127 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp133 = tmp130*(tmp126 - tmp128);
      const real_t tmp134 = tmp131*tmp4 + tmp132*tmp24 + tmp133*tmp26;
      const real_t tmp135 = tmp131*tmp29 + tmp132*tmp30 + tmp133*tmp31;
      const real_t tmp136 = tmp131*tmp33 + tmp132*tmp34 + tmp133*tmp35;
      const real_t tmp137 = -tmp134 - tmp135 - tmp136;
      const real_t tmp138 = tmp130*(-J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp139 = tmp130*(J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0));
      const real_t tmp140 = tmp130*(-J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp141 = tmp138*tmp4 + tmp139*tmp24 + tmp140*tmp26;
      const real_t tmp142 = tmp138*tmp29 + tmp139*tmp30 + tmp140*tmp31;
      const real_t tmp143 = tmp138*tmp33 + tmp139*tmp34 + tmp140*tmp35;
      const real_t tmp144 = -tmp141 - tmp142 - tmp143;
      const real_t tmp145 = tmp130*(J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0));
      const real_t tmp146 = tmp130*(-J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp147 = tmp130*(J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1));
      const real_t tmp148 = tmp145*tmp4 + tmp146*tmp24 + tmp147*tmp26;
      const real_t tmp149 = tmp145*tmp29 + tmp146*tmp30 + tmp147*tmp31;
      const real_t tmp150 = tmp145*tmp33 + tmp146*tmp34 + tmp147*tmp35;
      const real_t tmp151 = -tmp148 - tmp149 - tmp150;
      const real_t tmp152 = 0.00023520265850689978*tmp64*std::pow(std::abs(tmp129), 5.0/3.0);
      elMat(0,0) = -tmp123*((tmp108*tmp108) + (tmp115*tmp115) + (tmp122*tmp122)) - tmp152*((tmp137*tmp137) + (tmp144*tmp144) + (tmp151*tmp151)) - tmp65*((tmp37*tmp37) + (tmp44*tmp44) + (tmp51*tmp51)) - tmp94*((tmp79*tmp79) + (tmp86*tmp86) + (tmp93*tmp93));
      elMat(0,1) = -tmp123*(tmp105*tmp108 + tmp112*tmp115 + tmp119*tmp122) - tmp152*(tmp134*tmp137 + tmp141*tmp144 + tmp148*tmp151) - tmp65*(tmp28*tmp37 + tmp41*tmp44 + tmp48*tmp51) - tmp94*(tmp76*tmp79 + tmp83*tmp86 + tmp90*tmp93);
      elMat(0,2) = -tmp123*(tmp106*tmp108 + tmp113*tmp115 + tmp120*tmp122) - tmp152*(tmp135*tmp137 + tmp142*tmp144 + tmp149*tmp151) - tmp65*(tmp32*tmp37 + tmp42*tmp44 + tmp49*tmp51) - tmp94*(tmp77*tmp79 + tmp84*tmp86 + tmp91*tmp93);
      elMat(0,3) = -tmp123*(tmp107*tmp108 + tmp114*tmp115 + tmp121*tmp122) - tmp152*(tmp136*tmp137 + tmp143*tmp144 + tmp150*tmp151) - tmp65*(tmp36*tmp37 + tmp43*tmp44 + tmp50*tmp51) - tmp94*(tmp78*tmp79 + tmp85*tmp86 + tmp92*tmp93);
   }

} // namespace forms
} // namespace hyteg