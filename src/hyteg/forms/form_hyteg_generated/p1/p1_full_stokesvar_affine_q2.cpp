/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p1_full_stokesvar_affine_q2.hpp"

namespace hyteg {
namespace forms {

   void p1_full_stokesvar_0_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = tmp_1*tmp_5;
      real_t tmp_7 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = 1.0*((-tmp_6 - tmp_8)*(-tmp_6 - tmp_8));
      real_t tmp_10 = tmp_3*tmp_5;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = -tmp_10 - tmp_12;
      real_t tmp_14 = (2.0/3.0)*(tmp_13*tmp_13);
      real_t tmp_15 = -1.0*tmp_10 - 1.0*tmp_12;
      real_t tmp_16 = 2*(tmp_15*tmp_15);
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 0.16666666666666666*tmp_17;
      real_t tmp_20 = 0.16666666666666666*tmp_17;
      real_t tmp_21 = 2.0*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_22 = -0.5*tmp_6 - 0.5*tmp_8;
      real_t tmp_23 = tmp_22*tmp_8;
      real_t tmp_24 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_10;
      real_t tmp_25 = (2.0/3.0)*tmp_13;
      real_t tmp_26 = 2.0*tmp_15;
      real_t tmp_27 = 2.0*tmp_23;
      real_t tmp_28 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_10;
      real_t tmp_29 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_10;
      real_t tmp_30 = tmp_18*(tmp_21*tmp_23 - tmp_24*tmp_25 + tmp_24*tmp_26) + tmp_19*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_27 - tmp_25*tmp_28 + tmp_26*tmp_28) + tmp_20*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_27 - tmp_25*tmp_29 + tmp_26*tmp_29);
      real_t tmp_31 = tmp_22*tmp_6;
      real_t tmp_32 = tmp_12*tmp_25;
      real_t tmp_33 = 2.0*tmp_31;
      real_t tmp_34 = tmp_12*tmp_26;
      real_t tmp_35 = tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_32 + tmp_12*tmp_15*tmp_21 + tmp_21*tmp_31) + tmp_19*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_32 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_33 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_34) + tmp_20*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_32 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_33 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_34);
      real_t tmp_36 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_37 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_36;
      real_t tmp_38 = 1.0*(tmp_7*tmp_7);
      real_t tmp_39 = 1.3333333333333335*(tmp_3*tmp_3);
      real_t tmp_40 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_36;
      real_t tmp_41 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_36;
      real_t tmp_42 = 1.0*tmp_1*tmp_7;
      real_t tmp_43 = 1.3333333333333335*tmp_11*tmp_3;
      real_t tmp_44 = tmp_18*(tmp_37*tmp_42 + tmp_37*tmp_43) + tmp_19*(tmp_40*tmp_42 + tmp_40*tmp_43) + tmp_20*(tmp_41*tmp_42 + tmp_41*tmp_43);
      real_t tmp_45 = 1.0*(tmp_1*tmp_1);
      real_t tmp_46 = 1.3333333333333335*(tmp_11*tmp_11);
      real_t a_0_0 = tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_14 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_16 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_9) + tmp_19*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_14 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_16 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_9) + tmp_20*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_14 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_16 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_9);
      real_t a_0_1 = tmp_30;
      real_t a_0_2 = tmp_35;
      real_t a_1_0 = tmp_30;
      real_t a_1_1 = tmp_18*(tmp_37*tmp_38 + tmp_37*tmp_39) + tmp_19*(tmp_38*tmp_40 + tmp_39*tmp_40) + tmp_20*(tmp_38*tmp_41 + tmp_39*tmp_41);
      real_t a_1_2 = tmp_44;
      real_t a_2_0 = tmp_35;
      real_t a_2_1 = tmp_44;
      real_t a_2_2 = tmp_18*(tmp_37*tmp_45 + tmp_37*tmp_46) + tmp_19*(tmp_40*tmp_45 + tmp_40*tmp_46) + tmp_20*(tmp_41*tmp_45 + tmp_41*tmp_46);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
   }

   void p1_full_stokesvar_0_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = tmp_4*(p_affine_0_0 - p_affine_2_0);
      real_t tmp_7 = 1.0*((-tmp_5 - tmp_6)*(-tmp_5 - tmp_6));
      real_t tmp_8 = tmp_3*tmp_4;
      real_t tmp_9 = tmp_4*(p_affine_0_1 - p_affine_1_1);
      real_t tmp_10 = -tmp_8 - tmp_9;
      real_t tmp_11 = (2.0/3.0)*(tmp_10*tmp_10);
      real_t tmp_12 = -1.0*tmp_8 - 1.0*tmp_9;
      real_t tmp_13 = 2*(tmp_12*tmp_12);
      real_t tmp_14 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_15 = 0.16666666666666666*tmp_14;
      real_t tmp_16 = 0.16666666666666666*tmp_14;
      real_t tmp_17 = 0.16666666666666666*tmp_14;
      real_t tmp_18 = 2.0*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_19 = -0.5*tmp_5 - 0.5*tmp_6;
      real_t tmp_20 = tmp_19*tmp_6;
      real_t tmp_21 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_8;
      real_t tmp_22 = (2.0/3.0)*tmp_10;
      real_t tmp_23 = 2.0*tmp_12;
      real_t tmp_24 = 2.0*tmp_20;
      real_t tmp_25 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_8;
      real_t tmp_26 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_8;
      real_t tmp_27 = tmp_19*tmp_5;
      real_t tmp_28 = tmp_22*tmp_9;
      real_t tmp_29 = 2.0*tmp_27;
      real_t tmp_30 = tmp_23*tmp_9;
      real_t a_0_0 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_13 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_7) + tmp_16*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_11 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_13 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_7) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_11 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_13 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_7);
      real_t a_0_1 = tmp_15*(tmp_18*tmp_20 - tmp_21*tmp_22 + tmp_21*tmp_23) + tmp_16*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24 - tmp_22*tmp_25 + tmp_23*tmp_25) + tmp_17*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24 - tmp_22*tmp_26 + tmp_23*tmp_26);
      real_t a_0_2 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_28 + tmp_12*tmp_18*tmp_9 + tmp_18*tmp_27) + tmp_16*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_28 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_29 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_30) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_28 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_29 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_30);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
   }

   void p1_full_stokesvar_0_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = -tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_6;
      real_t tmp_22 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = ((-tmp_21 - tmp_23 - tmp_25)*(-tmp_21 - tmp_23 - tmp_25));
      real_t tmp_27 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_11*tmp_4;
      real_t tmp_29 = tmp_20*tmp_28;
      real_t tmp_30 = tmp_1*tmp_8 - tmp_11*tmp_13;
      real_t tmp_31 = tmp_20*tmp_30;
      real_t tmp_32 = tmp_13*tmp_14 - tmp_4*tmp_8;
      real_t tmp_33 = tmp_20*tmp_32;
      real_t tmp_34 = ((-tmp_29 - tmp_31 - tmp_33)*(-tmp_29 - tmp_31 - tmp_33));
      real_t tmp_35 = tmp_15 - tmp_18;
      real_t tmp_36 = tmp_20*tmp_35;
      real_t tmp_37 = tmp_12 - tmp_17;
      real_t tmp_38 = tmp_20*tmp_37;
      real_t tmp_39 = -tmp_16 + tmp_9;
      real_t tmp_40 = tmp_20*tmp_39;
      real_t tmp_41 = -tmp_36 - tmp_38 - tmp_40;
      real_t tmp_42 = (2.0/3.0)*(tmp_41*tmp_41);
      real_t tmp_43 = -1.0*tmp_36 - 1.0*tmp_38 - 1.0*tmp_40;
      real_t tmp_44 = 2*(tmp_43*tmp_43);
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_60 = 0.041666666666666657*tmp_57;
      real_t tmp_61 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_62 = 0.041666666666666657*tmp_57;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_64 = 0.041666666666666657*tmp_57;
      real_t tmp_65 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_66 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_67 = tmp_25*tmp_66;
      real_t tmp_68 = -0.5*tmp_29 - 0.5*tmp_31 - 0.5*tmp_33;
      real_t tmp_69 = tmp_33*tmp_68;
      real_t tmp_70 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_40;
      real_t tmp_71 = (2.0/3.0)*tmp_41;
      real_t tmp_72 = 2.0*tmp_43;
      real_t tmp_73 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_40;
      real_t tmp_75 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_40;
      real_t tmp_77 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_78 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_40;
      real_t tmp_79 = tmp_58*(tmp_65*tmp_67 + tmp_65*tmp_69 - tmp_70*tmp_71 + tmp_70*tmp_72) + tmp_60*(tmp_67*tmp_73 + tmp_69*tmp_73 - tmp_71*tmp_74 + tmp_72*tmp_74) + tmp_62*(tmp_67*tmp_75 + tmp_69*tmp_75 - tmp_71*tmp_76 + tmp_72*tmp_76) + tmp_64*(tmp_67*tmp_77 + tmp_69*tmp_77 - tmp_71*tmp_78 + tmp_72*tmp_78);
      real_t tmp_80 = tmp_23*tmp_66;
      real_t tmp_81 = tmp_31*tmp_68;
      real_t tmp_82 = tmp_38*tmp_71;
      real_t tmp_83 = tmp_43*tmp_65;
      real_t tmp_84 = tmp_38*tmp_72;
      real_t tmp_85 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_82 + tmp_38*tmp_83 + tmp_65*tmp_80 + tmp_65*tmp_81) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_84 + tmp_73*tmp_80 + tmp_73*tmp_81) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_84 + tmp_75*tmp_80 + tmp_75*tmp_81) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_84 + tmp_77*tmp_80 + tmp_77*tmp_81);
      real_t tmp_86 = tmp_21*tmp_66;
      real_t tmp_87 = tmp_29*tmp_68;
      real_t tmp_88 = tmp_36*tmp_71;
      real_t tmp_89 = tmp_36*tmp_72;
      real_t tmp_90 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_88 + tmp_36*tmp_83 + tmp_65*tmp_86 + tmp_65*tmp_87) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89 + tmp_73*tmp_86 + tmp_73*tmp_87) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89 + tmp_75*tmp_86 + tmp_75*tmp_87) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89 + tmp_77*tmp_86 + tmp_77*tmp_87);
      real_t tmp_91 = (tmp_24*tmp_24);
      real_t tmp_92 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_93 = tmp_27*tmp_92;
      real_t tmp_94 = (tmp_32*tmp_32);
      real_t tmp_95 = 1.3333333333333335*tmp_92;
      real_t tmp_96 = (tmp_39*tmp_39)*tmp_95;
      real_t tmp_97 = tmp_59*tmp_92;
      real_t tmp_98 = tmp_61*tmp_92;
      real_t tmp_99 = tmp_63*tmp_92;
      real_t tmp_100 = tmp_22*tmp_24;
      real_t tmp_101 = tmp_30*tmp_32;
      real_t tmp_102 = tmp_39*tmp_95;
      real_t tmp_103 = tmp_102*tmp_37;
      real_t tmp_104 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_103 + tmp_100*tmp_93 + tmp_101*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103 + tmp_100*tmp_97 + tmp_101*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103 + tmp_100*tmp_98 + tmp_101*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103 + tmp_100*tmp_99 + tmp_101*tmp_99);
      real_t tmp_105 = tmp_24*tmp_6;
      real_t tmp_106 = tmp_28*tmp_32;
      real_t tmp_107 = tmp_102*tmp_35;
      real_t tmp_108 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_107 + tmp_105*tmp_93 + tmp_106*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107 + tmp_105*tmp_97 + tmp_106*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107 + tmp_105*tmp_98 + tmp_106*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107 + tmp_105*tmp_99 + tmp_106*tmp_99);
      real_t tmp_109 = (tmp_22*tmp_22);
      real_t tmp_110 = (tmp_30*tmp_30);
      real_t tmp_111 = (tmp_37*tmp_37)*tmp_95;
      real_t tmp_112 = tmp_22*tmp_6;
      real_t tmp_113 = tmp_28*tmp_30;
      real_t tmp_114 = tmp_35*tmp_37*tmp_95;
      real_t tmp_115 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_114 + tmp_112*tmp_93 + tmp_113*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_114 + tmp_112*tmp_97 + tmp_113*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_114 + tmp_112*tmp_98 + tmp_113*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_114 + tmp_112*tmp_99 + tmp_113*tmp_99);
      real_t tmp_116 = (tmp_6*tmp_6);
      real_t tmp_117 = (tmp_28*tmp_28);
      real_t tmp_118 = (tmp_35*tmp_35)*tmp_95;
      real_t a_0_0 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_42 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_44 + tmp_26*tmp_27 + tmp_27*tmp_34) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_42 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44 + tmp_26*tmp_59 + tmp_34*tmp_59) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_42 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44 + tmp_26*tmp_61 + tmp_34*tmp_61) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_42 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44 + tmp_26*tmp_63 + tmp_34*tmp_63);
      real_t a_0_1 = tmp_79;
      real_t a_0_2 = tmp_85;
      real_t a_0_3 = tmp_90;
      real_t a_1_0 = tmp_79;
      real_t a_1_1 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_96 + tmp_91*tmp_93 + tmp_93*tmp_94) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_96 + tmp_91*tmp_97 + tmp_94*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_96 + tmp_91*tmp_98 + tmp_94*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_96 + tmp_91*tmp_99 + tmp_94*tmp_99);
      real_t a_1_2 = tmp_104;
      real_t a_1_3 = tmp_108;
      real_t a_2_0 = tmp_85;
      real_t a_2_1 = tmp_104;
      real_t a_2_2 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_111 + tmp_109*tmp_93 + tmp_110*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_111 + tmp_109*tmp_97 + tmp_110*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_111 + tmp_109*tmp_98 + tmp_110*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_111 + tmp_109*tmp_99 + tmp_110*tmp_99);
      real_t a_2_3 = tmp_115;
      real_t a_3_0 = tmp_90;
      real_t a_3_1 = tmp_108;
      real_t a_3_2 = tmp_115;
      real_t a_3_3 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_118 + tmp_116*tmp_93 + tmp_117*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_118 + tmp_116*tmp_97 + tmp_117*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_118 + tmp_116*tmp_98 + tmp_117*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_118 + tmp_116*tmp_99 + tmp_117*tmp_99);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_0_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = -p_affine_0_2;
      real_t tmp_7 = p_affine_3_2 + tmp_6;
      real_t tmp_8 = tmp_3*tmp_7;
      real_t tmp_9 = p_affine_3_1 + tmp_2;
      real_t tmp_10 = p_affine_1_2 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = p_affine_3_0 + tmp_0;
      real_t tmp_13 = p_affine_2_2 + tmp_6;
      real_t tmp_14 = tmp_13*tmp_5;
      real_t tmp_15 = tmp_13*tmp_9;
      real_t tmp_16 = tmp_5*tmp_7;
      real_t tmp_17 = tmp_10*tmp_3;
      real_t tmp_18 = 1.0 / (-tmp_1*tmp_15 + tmp_1*tmp_8 + tmp_11*tmp_4 + tmp_12*tmp_14 - tmp_12*tmp_17 - tmp_16*tmp_4);
      real_t tmp_19 = tmp_18*(tmp_1*tmp_3 - tmp_4*tmp_5);
      real_t tmp_20 = tmp_18*(-tmp_1*tmp_9 + tmp_12*tmp_5);
      real_t tmp_21 = tmp_18*(-tmp_12*tmp_3 + tmp_4*tmp_9);
      real_t tmp_22 = ((-tmp_19 - tmp_20 - tmp_21)*(-tmp_19 - tmp_20 - tmp_21));
      real_t tmp_23 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_24 = tmp_18*(-tmp_1*tmp_13 + tmp_10*tmp_4);
      real_t tmp_25 = tmp_18*(tmp_1*tmp_7 - tmp_10*tmp_12);
      real_t tmp_26 = tmp_18*(tmp_12*tmp_13 - tmp_4*tmp_7);
      real_t tmp_27 = ((-tmp_24 - tmp_25 - tmp_26)*(-tmp_24 - tmp_25 - tmp_26));
      real_t tmp_28 = tmp_18*(tmp_14 - tmp_17);
      real_t tmp_29 = tmp_18*(tmp_11 - tmp_16);
      real_t tmp_30 = tmp_18*(-tmp_15 + tmp_8);
      real_t tmp_31 = -tmp_28 - tmp_29 - tmp_30;
      real_t tmp_32 = (2.0/3.0)*(tmp_31*tmp_31);
      real_t tmp_33 = -1.0*tmp_28 - 1.0*tmp_29 - 1.0*tmp_30;
      real_t tmp_34 = 2*(tmp_33*tmp_33);
      real_t tmp_35 = p_affine_0_0*p_affine_1_1;
      real_t tmp_36 = p_affine_0_0*p_affine_1_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_2;
      real_t tmp_38 = p_affine_0_1*p_affine_1_0;
      real_t tmp_39 = p_affine_0_1*p_affine_1_2;
      real_t tmp_40 = p_affine_2_2*p_affine_3_0;
      real_t tmp_41 = p_affine_0_2*p_affine_1_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_1;
      real_t tmp_44 = p_affine_2_2*p_affine_3_1;
      real_t tmp_45 = p_affine_2_0*p_affine_3_2;
      real_t tmp_46 = p_affine_2_1*p_affine_3_0;
      real_t tmp_47 = std::abs(p_affine_0_0*tmp_37 - p_affine_0_0*tmp_44 + p_affine_0_1*tmp_40 - p_affine_0_1*tmp_45 + p_affine_0_2*tmp_43 - p_affine_0_2*tmp_46 - p_affine_1_0*tmp_37 + p_affine_1_0*tmp_44 - p_affine_1_1*tmp_40 + p_affine_1_1*tmp_45 - p_affine_1_2*tmp_43 + p_affine_1_2*tmp_46 + p_affine_2_0*tmp_39 - p_affine_2_0*tmp_42 - p_affine_2_1*tmp_36 + p_affine_2_1*tmp_41 + p_affine_2_2*tmp_35 - p_affine_2_2*tmp_38 - p_affine_3_0*tmp_39 + p_affine_3_0*tmp_42 + p_affine_3_1*tmp_36 - p_affine_3_1*tmp_41 - p_affine_3_2*tmp_35 + p_affine_3_2*tmp_38);
      real_t tmp_48 = 0.041666666666666657*tmp_47;
      real_t tmp_49 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_50 = 0.041666666666666657*tmp_47;
      real_t tmp_51 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_52 = 0.041666666666666657*tmp_47;
      real_t tmp_53 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_54 = 0.041666666666666657*tmp_47;
      real_t tmp_55 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_56 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_57 = tmp_21*tmp_56;
      real_t tmp_58 = -0.5*tmp_24 - 0.5*tmp_25 - 0.5*tmp_26;
      real_t tmp_59 = tmp_26*tmp_58;
      real_t tmp_60 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_30;
      real_t tmp_61 = (2.0/3.0)*tmp_31;
      real_t tmp_62 = 2.0*tmp_33;
      real_t tmp_63 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_64 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_30;
      real_t tmp_65 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_66 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_30;
      real_t tmp_67 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_68 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_30;
      real_t tmp_69 = tmp_20*tmp_56;
      real_t tmp_70 = tmp_25*tmp_58;
      real_t tmp_71 = tmp_29*tmp_61;
      real_t tmp_72 = tmp_33*tmp_55;
      real_t tmp_73 = tmp_29*tmp_62;
      real_t tmp_74 = tmp_19*tmp_56;
      real_t tmp_75 = tmp_24*tmp_58;
      real_t tmp_76 = tmp_28*tmp_61;
      real_t tmp_77 = tmp_28*tmp_62;
      real_t a_0_0 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_32 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_22*tmp_23 + tmp_23*tmp_27) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_32 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + tmp_22*tmp_49 + tmp_27*tmp_49) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_32 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + tmp_22*tmp_51 + tmp_27*tmp_51) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_32 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + tmp_22*tmp_53 + tmp_27*tmp_53);
      real_t a_0_1 = tmp_48*(tmp_55*tmp_57 + tmp_55*tmp_59 - tmp_60*tmp_61 + tmp_60*tmp_62) + tmp_50*(tmp_57*tmp_63 + tmp_59*tmp_63 - tmp_61*tmp_64 + tmp_62*tmp_64) + tmp_52*(tmp_57*tmp_65 + tmp_59*tmp_65 - tmp_61*tmp_66 + tmp_62*tmp_66) + tmp_54*(tmp_57*tmp_67 + tmp_59*tmp_67 - tmp_61*tmp_68 + tmp_62*tmp_68);
      real_t a_0_2 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_71 + tmp_29*tmp_72 + tmp_55*tmp_69 + tmp_55*tmp_70) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_71 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_73 + tmp_63*tmp_69 + tmp_63*tmp_70) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_71 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_73 + tmp_65*tmp_69 + tmp_65*tmp_70) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_71 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_73 + tmp_67*tmp_69 + tmp_67*tmp_70);
      real_t a_0_3 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_76 + tmp_28*tmp_72 + tmp_55*tmp_74 + tmp_55*tmp_75) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_76 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_77 + tmp_63*tmp_74 + tmp_63*tmp_75) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_76 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_77 + tmp_65*tmp_74 + tmp_65*tmp_75) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_76 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_77 + tmp_67*tmp_74 + tmp_67*tmp_75);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_0_0_affine_q2::Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_2D_mu( Point3D( {in_0, in_1, 0} ) );
   }

   void p1_full_stokesvar_0_0_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_0_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = tmp_1*tmp_6;
      real_t tmp_8 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_9 = tmp_6*tmp_8;
      real_t tmp_10 = -tmp_7 - tmp_9;
      real_t tmp_11 = tmp_3*tmp_6;
      real_t tmp_12 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_13 = tmp_12*tmp_6;
      real_t tmp_14 = -2.0/3.0*tmp_11 - 2.0/3.0*tmp_13;
      real_t tmp_15 = tmp_10*tmp_14;
      real_t tmp_16 = -0.5*tmp_7 - 0.5*tmp_9;
      real_t tmp_17 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_16;
      real_t tmp_18 = -0.5*tmp_11 - 0.5*tmp_13;
      real_t tmp_19 = 4*tmp_18;
      real_t tmp_20 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_21 = 0.16666666666666666*tmp_20;
      real_t tmp_22 = tmp_16*tmp_19;
      real_t tmp_23 = 0.16666666666666666*tmp_20;
      real_t tmp_24 = 0.16666666666666666*tmp_20;
      real_t tmp_25 = tmp_14*tmp_9;
      real_t tmp_26 = 2.0*tmp_11;
      real_t tmp_27 = tmp_16*tmp_26;
      real_t tmp_28 = tmp_14*tmp_7;
      real_t tmp_29 = 2.0*tmp_13;
      real_t tmp_30 = tmp_16*tmp_29;
      real_t tmp_31 = 2.0*tmp_18;
      real_t tmp_32 = tmp_31*tmp_9;
      real_t tmp_33 = (2.0/3.0)*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_34 = tmp_10*tmp_11;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_37 = tmp_36*tmp_8;
      real_t tmp_38 = 0.33333333333333337*tmp_3*tmp_37;
      real_t tmp_39 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_21;
      real_t tmp_40 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_23;
      real_t tmp_41 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24;
      real_t tmp_42 = tmp_36*tmp_4;
      real_t tmp_43 = 1.0*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_44 = tmp_12*tmp_37;
      real_t tmp_45 = (2.0/3.0)*tmp_42;
      real_t tmp_46 = 1.0*tmp_44;
      real_t tmp_47 = tmp_31*tmp_7;
      real_t tmp_48 = tmp_10*tmp_13;
      real_t tmp_49 = (2.0/3.0)*tmp_48;
      real_t tmp_50 = 1.0*tmp_42;
      real_t tmp_51 = (2.0/3.0)*tmp_44;
      real_t tmp_52 = 0.33333333333333337*tmp_1*tmp_12*tmp_36;
      real_t a_0_0 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_15 + tmp_17*tmp_19) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_15 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_22) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_15 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_22);
      real_t a_0_1 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_25 + tmp_17*tmp_26) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_27) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_27);
      real_t a_0_2 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_28 + tmp_17*tmp_29) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_28 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_30) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_28 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_30);
      real_t a_1_0 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_32 - tmp_33*tmp_34) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_32 - Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_35) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_32 - Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_35);
      real_t a_1_1 = tmp_38*tmp_39 + tmp_38*tmp_40 + tmp_38*tmp_41;
      real_t a_1_2 = tmp_21*(-tmp_33*tmp_42 + tmp_43*tmp_44) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_45 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_46) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_45 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_46);
      real_t a_2_0 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_47 - tmp_33*tmp_48) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_47 - Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_49) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_47 - Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_49);
      real_t a_2_1 = tmp_21*(-tmp_33*tmp_44 + tmp_42*tmp_43) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_50 - Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_50 - Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51);
      real_t a_2_2 = tmp_39*tmp_52 + tmp_40*tmp_52 + tmp_41*tmp_52;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
   }

   void p1_full_stokesvar_0_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = tmp_4*(p_affine_0_0 - p_affine_2_0);
      real_t tmp_7 = tmp_3*tmp_4;
      real_t tmp_8 = tmp_4*(p_affine_0_1 - p_affine_1_1);
      real_t tmp_9 = -2.0/3.0*tmp_7 - 2.0/3.0*tmp_8;
      real_t tmp_10 = tmp_9*(-tmp_5 - tmp_6);
      real_t tmp_11 = -0.5*tmp_5 - 0.5*tmp_6;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2.0*tmp_7 - 2.0*tmp_8;
      real_t tmp_14 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_15 = 0.16666666666666666*tmp_14;
      real_t tmp_16 = tmp_11*tmp_13;
      real_t tmp_17 = 0.16666666666666666*tmp_14;
      real_t tmp_18 = 0.16666666666666666*tmp_14;
      real_t tmp_19 = tmp_6*tmp_9;
      real_t tmp_20 = 2.0*tmp_7;
      real_t tmp_21 = tmp_11*tmp_20;
      real_t tmp_22 = tmp_5*tmp_9;
      real_t tmp_23 = 2.0*tmp_8;
      real_t tmp_24 = tmp_11*tmp_23;
      real_t a_0_0 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_10 + tmp_12*tmp_13) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_16) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_16);
      real_t a_0_1 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_19 + tmp_12*tmp_20) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_19 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_21) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_19 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_21);
      real_t a_0_2 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_22 + tmp_12*tmp_23) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_22 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_22 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
   }

   void p1_full_stokesvar_0_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_8;
      real_t tmp_22 = tmp_12 - tmp_18;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_16 - tmp_17;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = tmp_25*tmp_33;
      real_t tmp_58 = 2.0*tmp_32;
      real_t tmp_59 = tmp_35*tmp_58;
      real_t tmp_60 = tmp_23*tmp_33;
      real_t tmp_61 = 2.0*tmp_30;
      real_t tmp_62 = tmp_35*tmp_61;
      real_t tmp_63 = tmp_21*tmp_33;
      real_t tmp_64 = 2.0*tmp_28;
      real_t tmp_65 = tmp_35*tmp_64;
      real_t tmp_66 = 2.0*tmp_37;
      real_t tmp_67 = tmp_25*tmp_66;
      real_t tmp_68 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_69 = tmp_26*tmp_32;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = tmp_22*tmp_72;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_80 = tmp_29*tmp_71;
      real_t tmp_81 = tmp_24*tmp_80;
      real_t tmp_82 = (2.0/3.0)*tmp_78;
      real_t tmp_83 = 1.0*tmp_81;
      real_t tmp_84 = tmp_72*tmp_8;
      real_t tmp_85 = tmp_27*tmp_71;
      real_t tmp_86 = tmp_24*tmp_85;
      real_t tmp_87 = (2.0/3.0)*tmp_84;
      real_t tmp_88 = 1.0*tmp_86;
      real_t tmp_89 = tmp_23*tmp_66;
      real_t tmp_90 = tmp_26*tmp_30;
      real_t tmp_91 = (2.0/3.0)*tmp_90;
      real_t tmp_92 = 1.0*tmp_78;
      real_t tmp_93 = (2.0/3.0)*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_80;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_8*tmp_80;
      real_t tmp_98 = tmp_22*tmp_85;
      real_t tmp_99 = (2.0/3.0)*tmp_97;
      real_t tmp_100 = 1.0*tmp_98;
      real_t tmp_101 = tmp_21*tmp_66;
      real_t tmp_102 = tmp_26*tmp_28;
      real_t tmp_103 = (2.0/3.0)*tmp_102;
      real_t tmp_104 = 1.0*tmp_84;
      real_t tmp_105 = (2.0/3.0)*tmp_86;
      real_t tmp_106 = 1.0*tmp_97;
      real_t tmp_107 = (2.0/3.0)*tmp_98;
      real_t tmp_108 = tmp_8*tmp_85;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_57 + tmp_36*tmp_58) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_60 + tmp_36*tmp_61) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_63 + tmp_36*tmp_64) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_67 - tmp_68*tmp_69) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_68*tmp_78 + tmp_79*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_68*tmp_84 + tmp_79*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89 - tmp_68*tmp_90) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_68*tmp_81 + tmp_78*tmp_79) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_68*tmp_97 + tmp_79*tmp_98) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_101 - tmp_102*tmp_68) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_68*tmp_86 + tmp_79*tmp_84) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_68*tmp_98 + tmp_79*tmp_97) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_0_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = p_affine_3_2 + tmp_2;
      real_t tmp_11 = tmp_10*tmp_5;
      real_t tmp_12 = p_affine_3_1 + tmp_8;
      real_t tmp_13 = p_affine_1_1 + tmp_8;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = tmp_1*tmp_10;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = 1.0 / (tmp_11*tmp_9 + tmp_12*tmp_4 - tmp_12*tmp_7 + tmp_13*tmp_15 - tmp_13*tmp_16 - tmp_17*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_4 - tmp_7);
      real_t tmp_20 = tmp_18*(tmp_11 - tmp_17);
      real_t tmp_21 = tmp_18*(tmp_15 - tmp_16);
      real_t tmp_22 = tmp_18*(tmp_13*tmp_6 - tmp_3*tmp_9);
      real_t tmp_23 = tmp_18*(-tmp_10*tmp_13 + tmp_12*tmp_3);
      real_t tmp_24 = tmp_18*(tmp_10*tmp_9 - tmp_12*tmp_6);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = tmp_21*tmp_25;
      real_t tmp_49 = 2.0*tmp_24;
      real_t tmp_50 = tmp_27*tmp_49;
      real_t tmp_51 = tmp_20*tmp_25;
      real_t tmp_52 = 2.0*tmp_23;
      real_t tmp_53 = tmp_27*tmp_52;
      real_t tmp_54 = tmp_19*tmp_25;
      real_t tmp_55 = 2.0*tmp_22;
      real_t tmp_56 = tmp_27*tmp_55;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_48 + tmp_28*tmp_49) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_51 + tmp_28*tmp_52) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_54 + tmp_28*tmp_55) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_0_1_affine_q2::Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_2D_mu( Point3D( {in_0, in_1, 0} ) );
   }

   void p1_full_stokesvar_0_1_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_0_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_0_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_0_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_8;
      real_t tmp_22 = tmp_16 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_13 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = tmp_25*tmp_33;
      real_t tmp_58 = 2.0*tmp_32;
      real_t tmp_59 = tmp_35*tmp_58;
      real_t tmp_60 = tmp_23*tmp_33;
      real_t tmp_61 = 2.0*tmp_30;
      real_t tmp_62 = tmp_35*tmp_61;
      real_t tmp_63 = tmp_21*tmp_33;
      real_t tmp_64 = 2.0*tmp_28;
      real_t tmp_65 = tmp_35*tmp_64;
      real_t tmp_66 = 2.0*tmp_37;
      real_t tmp_67 = tmp_25*tmp_66;
      real_t tmp_68 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_69 = tmp_26*tmp_32;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = tmp_22*tmp_72;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_80 = tmp_29*tmp_71;
      real_t tmp_81 = tmp_24*tmp_80;
      real_t tmp_82 = (2.0/3.0)*tmp_78;
      real_t tmp_83 = 1.0*tmp_81;
      real_t tmp_84 = tmp_72*tmp_8;
      real_t tmp_85 = tmp_27*tmp_71;
      real_t tmp_86 = tmp_24*tmp_85;
      real_t tmp_87 = (2.0/3.0)*tmp_84;
      real_t tmp_88 = 1.0*tmp_86;
      real_t tmp_89 = tmp_23*tmp_66;
      real_t tmp_90 = tmp_26*tmp_30;
      real_t tmp_91 = (2.0/3.0)*tmp_90;
      real_t tmp_92 = 1.0*tmp_78;
      real_t tmp_93 = (2.0/3.0)*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_80;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_8*tmp_80;
      real_t tmp_98 = tmp_22*tmp_85;
      real_t tmp_99 = (2.0/3.0)*tmp_97;
      real_t tmp_100 = 1.0*tmp_98;
      real_t tmp_101 = tmp_21*tmp_66;
      real_t tmp_102 = tmp_26*tmp_28;
      real_t tmp_103 = (2.0/3.0)*tmp_102;
      real_t tmp_104 = 1.0*tmp_84;
      real_t tmp_105 = (2.0/3.0)*tmp_86;
      real_t tmp_106 = 1.0*tmp_97;
      real_t tmp_107 = (2.0/3.0)*tmp_98;
      real_t tmp_108 = tmp_8*tmp_85;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_57 + tmp_36*tmp_58) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_60 + tmp_36*tmp_61) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_63 + tmp_36*tmp_64) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_67 - tmp_68*tmp_69) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_68*tmp_78 + tmp_79*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_68*tmp_84 + tmp_79*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89 - tmp_68*tmp_90) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_68*tmp_81 + tmp_78*tmp_79) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_68*tmp_97 + tmp_79*tmp_98) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_101 - tmp_102*tmp_68) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_68*tmp_86 + tmp_79*tmp_84) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_68*tmp_98 + tmp_79*tmp_97) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_0_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_8;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_2 + tmp_8;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = tmp_1*tmp_11;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_16 + tmp_4*tmp_9 - tmp_7*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_4 - tmp_7);
      real_t tmp_20 = tmp_18*(tmp_15 - tmp_16);
      real_t tmp_21 = tmp_18*(tmp_12 - tmp_17);
      real_t tmp_22 = tmp_18*(-tmp_10*tmp_3 + tmp_13*tmp_6);
      real_t tmp_23 = tmp_18*(tmp_10*tmp_11 - tmp_6*tmp_9);
      real_t tmp_24 = tmp_18*(-tmp_11*tmp_13 + tmp_3*tmp_9);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = tmp_21*tmp_25;
      real_t tmp_49 = 2.0*tmp_24;
      real_t tmp_50 = tmp_27*tmp_49;
      real_t tmp_51 = tmp_20*tmp_25;
      real_t tmp_52 = 2.0*tmp_23;
      real_t tmp_53 = tmp_27*tmp_52;
      real_t tmp_54 = tmp_19*tmp_25;
      real_t tmp_55 = 2.0*tmp_22;
      real_t tmp_56 = tmp_27*tmp_55;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_48 + tmp_28*tmp_49) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_51 + tmp_28*tmp_52) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_54 + tmp_28*tmp_55) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_0_2_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_1_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = tmp_1*tmp_6;
      real_t tmp_8 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_9 = tmp_6*tmp_8;
      real_t tmp_10 = -tmp_7 - tmp_9;
      real_t tmp_11 = tmp_3*tmp_6;
      real_t tmp_12 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_13 = tmp_12*tmp_6;
      real_t tmp_14 = -2.0/3.0*tmp_11 - 2.0/3.0*tmp_13;
      real_t tmp_15 = tmp_10*tmp_14;
      real_t tmp_16 = -0.5*tmp_7 - 0.5*tmp_9;
      real_t tmp_17 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_16;
      real_t tmp_18 = -0.5*tmp_11 - 0.5*tmp_13;
      real_t tmp_19 = 4*tmp_18;
      real_t tmp_20 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_21 = 0.16666666666666666*tmp_20;
      real_t tmp_22 = tmp_16*tmp_19;
      real_t tmp_23 = 0.16666666666666666*tmp_20;
      real_t tmp_24 = 0.16666666666666666*tmp_20;
      real_t tmp_25 = 2.0*tmp_13;
      real_t tmp_26 = tmp_14*tmp_7;
      real_t tmp_27 = tmp_16*tmp_25;
      real_t tmp_28 = 2.0*tmp_11;
      real_t tmp_29 = tmp_14*tmp_9;
      real_t tmp_30 = tmp_16*tmp_28;
      real_t tmp_31 = (2.0/3.0)*Scalar_Variable_Coefficient_2D_mu_out0_id0;
      real_t tmp_32 = tmp_10*tmp_13;
      real_t tmp_33 = 2.0*tmp_18;
      real_t tmp_34 = tmp_33*tmp_7;
      real_t tmp_35 = (2.0/3.0)*tmp_32;
      real_t tmp_36 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_37 = 0.33333333333333337*tmp_36;
      real_t tmp_38 = tmp_1*tmp_12*tmp_37;
      real_t tmp_39 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_21;
      real_t tmp_40 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_23;
      real_t tmp_41 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24;
      real_t tmp_42 = tmp_36*tmp_4;
      real_t tmp_43 = 1.0*tmp_42;
      real_t tmp_44 = tmp_31*tmp_36;
      real_t tmp_45 = tmp_12*tmp_8;
      real_t tmp_46 = (2.0/3.0)*Scalar_Variable_Coefficient_2D_mu_out0_id1;
      real_t tmp_47 = tmp_36*tmp_45;
      real_t tmp_48 = (2.0/3.0)*Scalar_Variable_Coefficient_2D_mu_out0_id2;
      real_t tmp_49 = tmp_10*tmp_11;
      real_t tmp_50 = tmp_33*tmp_9;
      real_t tmp_51 = 1.0*tmp_47;
      real_t tmp_52 = tmp_3*tmp_37*tmp_8;
      real_t a_0_0 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_15 + tmp_17*tmp_19) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_15 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_22) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_15 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_22);
      real_t a_0_1 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_26 + tmp_17*tmp_25) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_27) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_27);
      real_t a_0_2 = tmp_21*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_29 + tmp_17*tmp_28) + tmp_23*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_29 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_30) + tmp_24*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_29 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_30);
      real_t a_1_0 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_34 - tmp_31*tmp_32) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_34 - Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_35) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_34 - Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_35);
      real_t a_1_1 = tmp_38*tmp_39 + tmp_38*tmp_40 + tmp_38*tmp_41;
      real_t a_1_2 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_43 - tmp_44*tmp_45) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_43 - tmp_46*tmp_47) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_43 - tmp_47*tmp_48);
      real_t a_2_0 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_50 - tmp_31*tmp_49) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_50 - tmp_46*tmp_49) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_50 - tmp_48*tmp_49);
      real_t a_2_1 = tmp_21*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_51 - tmp_4*tmp_44) + tmp_23*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_51 - tmp_42*tmp_46) + tmp_24*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_51 - tmp_42*tmp_48);
      real_t a_2_2 = tmp_39*tmp_52 + tmp_40*tmp_52 + tmp_41*tmp_52;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
   }

   void p1_full_stokesvar_1_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = tmp_4*(p_affine_0_1 - p_affine_1_1);
      real_t tmp_7 = tmp_3*tmp_4;
      real_t tmp_8 = tmp_4*(p_affine_0_0 - p_affine_2_0);
      real_t tmp_9 = -2.0/3.0*tmp_7 - 2.0/3.0*tmp_8;
      real_t tmp_10 = tmp_9*(-tmp_5 - tmp_6);
      real_t tmp_11 = -0.5*tmp_5 - 0.5*tmp_6;
      real_t tmp_12 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_11;
      real_t tmp_13 = -2.0*tmp_7 - 2.0*tmp_8;
      real_t tmp_14 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_15 = 0.16666666666666666*tmp_14;
      real_t tmp_16 = tmp_11*tmp_13;
      real_t tmp_17 = 0.16666666666666666*tmp_14;
      real_t tmp_18 = 0.16666666666666666*tmp_14;
      real_t tmp_19 = 2.0*tmp_8;
      real_t tmp_20 = tmp_5*tmp_9;
      real_t tmp_21 = tmp_11*tmp_19;
      real_t tmp_22 = 2.0*tmp_7;
      real_t tmp_23 = tmp_6*tmp_9;
      real_t tmp_24 = tmp_11*tmp_22;
      real_t a_0_0 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_10 + tmp_12*tmp_13) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_16) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_16);
      real_t a_0_1 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_20 + tmp_12*tmp_19) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_20 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_21) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_20 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_21);
      real_t a_0_2 = tmp_15*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_23 + tmp_12*tmp_22) + tmp_17*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_23 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_24) + tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_23 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_24);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
   }

   void p1_full_stokesvar_1_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = p_affine_2_0 + tmp_7;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_3_0 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = tmp_3*tmp_8;
      real_t tmp_17 = tmp_12*tmp_9;
      real_t tmp_18 = tmp_14*tmp_5;
      real_t tmp_19 = tmp_1*tmp_15 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_11*tmp_13 - tmp_11*tmp_16 - tmp_18*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_6;
      real_t tmp_22 = -tmp_1*tmp_9 + tmp_11*tmp_5;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = -tmp_11*tmp_3 + tmp_4*tmp_9;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = tmp_13 - tmp_16;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = tmp_10 - tmp_18;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = tmp_15 - tmp_17;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = 2.0*tmp_32;
      real_t tmp_58 = tmp_25*tmp_33;
      real_t tmp_59 = tmp_35*tmp_57;
      real_t tmp_60 = 2.0*tmp_30;
      real_t tmp_61 = tmp_23*tmp_33;
      real_t tmp_62 = tmp_35*tmp_60;
      real_t tmp_63 = 2.0*tmp_28;
      real_t tmp_64 = tmp_21*tmp_33;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_67 = tmp_26*tmp_32;
      real_t tmp_68 = 2.0*tmp_37;
      real_t tmp_69 = tmp_25*tmp_68;
      real_t tmp_70 = (2.0/3.0)*tmp_67;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_79 = tmp_29*tmp_71;
      real_t tmp_80 = tmp_24*tmp_79;
      real_t tmp_81 = tmp_22*tmp_72;
      real_t tmp_82 = 1.0*tmp_80;
      real_t tmp_83 = (2.0/3.0)*tmp_81;
      real_t tmp_84 = tmp_27*tmp_71;
      real_t tmp_85 = tmp_24*tmp_84;
      real_t tmp_86 = tmp_6*tmp_72;
      real_t tmp_87 = 1.0*tmp_85;
      real_t tmp_88 = (2.0/3.0)*tmp_86;
      real_t tmp_89 = tmp_26*tmp_30;
      real_t tmp_90 = tmp_23*tmp_68;
      real_t tmp_91 = (2.0/3.0)*tmp_89;
      real_t tmp_92 = (2.0/3.0)*tmp_80;
      real_t tmp_93 = 1.0*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_79;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_22*tmp_84;
      real_t tmp_98 = tmp_6*tmp_79;
      real_t tmp_99 = 1.0*tmp_97;
      real_t tmp_100 = (2.0/3.0)*tmp_98;
      real_t tmp_101 = tmp_26*tmp_28;
      real_t tmp_102 = tmp_21*tmp_68;
      real_t tmp_103 = (2.0/3.0)*tmp_101;
      real_t tmp_104 = (2.0/3.0)*tmp_85;
      real_t tmp_105 = 1.0*tmp_86;
      real_t tmp_106 = (2.0/3.0)*tmp_97;
      real_t tmp_107 = 1.0*tmp_98;
      real_t tmp_108 = tmp_6*tmp_84;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58 + tmp_36*tmp_57) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_61 + tmp_36*tmp_60) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_64 + tmp_36*tmp_63) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_69 - tmp_66*tmp_67) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_66*tmp_81 + tmp_78*tmp_80) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_66*tmp_86 + tmp_78*tmp_85) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_90 - tmp_66*tmp_89) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_66*tmp_80 + tmp_78*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_66*tmp_98 + tmp_78*tmp_97) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_102 - tmp_101*tmp_66) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_66*tmp_85 + tmp_78*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_66*tmp_97 + tmp_78*tmp_98) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_1_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = -p_affine_0_0;
      real_t tmp_7 = p_affine_1_0 + tmp_6;
      real_t tmp_8 = p_affine_3_2 + tmp_2;
      real_t tmp_9 = tmp_7*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_0;
      real_t tmp_11 = p_affine_2_0 + tmp_6;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_0 + tmp_6;
      real_t tmp_14 = tmp_13*tmp_3;
      real_t tmp_15 = tmp_3*tmp_7;
      real_t tmp_16 = tmp_11*tmp_8;
      real_t tmp_17 = tmp_13*tmp_5;
      real_t tmp_18 = 1.0 / (tmp_1*tmp_14 - tmp_1*tmp_16 + tmp_10*tmp_12 - tmp_10*tmp_15 - tmp_17*tmp_4 + tmp_4*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_1*tmp_3 - tmp_4*tmp_5);
      real_t tmp_20 = tmp_18*(-tmp_1*tmp_8 + tmp_10*tmp_5);
      real_t tmp_21 = tmp_18*(-tmp_10*tmp_3 + tmp_4*tmp_8);
      real_t tmp_22 = tmp_18*(tmp_12 - tmp_15);
      real_t tmp_23 = tmp_18*(-tmp_17 + tmp_9);
      real_t tmp_24 = tmp_18*(tmp_14 - tmp_16);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = 2.0*tmp_24;
      real_t tmp_49 = tmp_21*tmp_25;
      real_t tmp_50 = tmp_27*tmp_48;
      real_t tmp_51 = 2.0*tmp_23;
      real_t tmp_52 = tmp_20*tmp_25;
      real_t tmp_53 = tmp_27*tmp_51;
      real_t tmp_54 = 2.0*tmp_22;
      real_t tmp_55 = tmp_19*tmp_25;
      real_t tmp_56 = tmp_27*tmp_54;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_49 + tmp_28*tmp_48) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52 + tmp_28*tmp_51) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_55 + tmp_28*tmp_54) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_1_0_affine_q2::Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_2D_mu( Point3D( {in_0, in_1, 0} ) );
   }

   void p1_full_stokesvar_1_0_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_1_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = tmp_1*tmp_5;
      real_t tmp_7 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = -tmp_6 - tmp_8;
      real_t tmp_10 = (2.0/3.0)*(tmp_9*tmp_9);
      real_t tmp_11 = -1.0*tmp_6 - 1.0*tmp_8;
      real_t tmp_12 = 2*(tmp_11*tmp_11);
      real_t tmp_13 = tmp_3*tmp_5;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = 1.0*((-tmp_13 - tmp_15)*(-tmp_13 - tmp_15));
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 0.16666666666666666*tmp_17;
      real_t tmp_20 = 0.16666666666666666*tmp_17;
      real_t tmp_21 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_8;
      real_t tmp_22 = (2.0/3.0)*tmp_9;
      real_t tmp_23 = 2.0*tmp_11;
      real_t tmp_24 = -1.0*tmp_13 - 1.0*tmp_15;
      real_t tmp_25 = tmp_13*tmp_24;
      real_t tmp_26 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_8;
      real_t tmp_27 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_8;
      real_t tmp_28 = tmp_18*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_25 - tmp_21*tmp_22 + tmp_21*tmp_23) + tmp_19*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_25 - tmp_22*tmp_26 + tmp_23*tmp_26) + tmp_20*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_25 - tmp_22*tmp_27 + tmp_23*tmp_27);
      real_t tmp_29 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_6;
      real_t tmp_30 = tmp_15*tmp_24;
      real_t tmp_31 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_6;
      real_t tmp_32 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_6;
      real_t tmp_33 = tmp_18*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_30 - tmp_22*tmp_29 + tmp_23*tmp_29) + tmp_19*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_30 - tmp_22*tmp_31 + tmp_23*tmp_31) + tmp_20*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_30 - tmp_22*tmp_32 + tmp_23*tmp_32);
      real_t tmp_34 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_35 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_34;
      real_t tmp_36 = 1.3333333333333335*(tmp_7*tmp_7);
      real_t tmp_37 = 1.0*(tmp_3*tmp_3);
      real_t tmp_38 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_34;
      real_t tmp_39 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_34;
      real_t tmp_40 = 1.3333333333333335*tmp_1*tmp_7;
      real_t tmp_41 = 1.0*tmp_14*tmp_3;
      real_t tmp_42 = tmp_18*(tmp_35*tmp_40 + tmp_35*tmp_41) + tmp_19*(tmp_38*tmp_40 + tmp_38*tmp_41) + tmp_20*(tmp_39*tmp_40 + tmp_39*tmp_41);
      real_t tmp_43 = 1.3333333333333335*(tmp_1*tmp_1);
      real_t tmp_44 = 1.0*(tmp_14*tmp_14);
      real_t a_0_0 = tmp_18*(-Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_12 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_16) + tmp_19*(-Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_12 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_16) + tmp_20*(-Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_12 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_16);
      real_t a_0_1 = tmp_28;
      real_t a_0_2 = tmp_33;
      real_t a_1_0 = tmp_28;
      real_t a_1_1 = tmp_18*(tmp_35*tmp_36 + tmp_35*tmp_37) + tmp_19*(tmp_36*tmp_38 + tmp_37*tmp_38) + tmp_20*(tmp_36*tmp_39 + tmp_37*tmp_39);
      real_t a_1_2 = tmp_42;
      real_t a_2_0 = tmp_33;
      real_t a_2_1 = tmp_42;
      real_t a_2_2 = tmp_18*(tmp_35*tmp_43 + tmp_35*tmp_44) + tmp_19*(tmp_38*tmp_43 + tmp_38*tmp_44) + tmp_20*(tmp_39*tmp_43 + tmp_39*tmp_44);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
   }

   void p1_full_stokesvar_1_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_2D_mu_out0_id2 = 0;
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id0 );
      Scalar_Variable_Coefficient_2D_mu( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id1 );
      Scalar_Variable_Coefficient_2D_mu( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_mu_out0_id2 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = tmp_1*tmp_4;
      real_t tmp_6 = tmp_4*(p_affine_0_0 - p_affine_2_0);
      real_t tmp_7 = -tmp_5 - tmp_6;
      real_t tmp_8 = (2.0/3.0)*(tmp_7*tmp_7);
      real_t tmp_9 = -1.0*tmp_5 - 1.0*tmp_6;
      real_t tmp_10 = 2*(tmp_9*tmp_9);
      real_t tmp_11 = tmp_3*tmp_4;
      real_t tmp_12 = tmp_4*(p_affine_0_1 - p_affine_1_1);
      real_t tmp_13 = 1.0*((-tmp_11 - tmp_12)*(-tmp_11 - tmp_12));
      real_t tmp_14 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_15 = 0.16666666666666666*tmp_14;
      real_t tmp_16 = 0.16666666666666666*tmp_14;
      real_t tmp_17 = 0.16666666666666666*tmp_14;
      real_t tmp_18 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_6;
      real_t tmp_19 = (2.0/3.0)*tmp_7;
      real_t tmp_20 = 2.0*tmp_9;
      real_t tmp_21 = -1.0*tmp_11 - 1.0*tmp_12;
      real_t tmp_22 = tmp_11*tmp_21;
      real_t tmp_23 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_6;
      real_t tmp_24 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_6;
      real_t tmp_25 = Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_5;
      real_t tmp_26 = tmp_12*tmp_21;
      real_t tmp_27 = Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_5;
      real_t tmp_28 = Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_5;
      real_t a_0_0 = tmp_15*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_13 - Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_8) + tmp_16*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_13 - Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_8) + tmp_17*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_10 + Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_13 - Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_8);
      real_t a_0_1 = tmp_15*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_22 - tmp_18*tmp_19 + tmp_18*tmp_20) + tmp_16*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_22 - tmp_19*tmp_23 + tmp_20*tmp_23) + tmp_17*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_22 - tmp_19*tmp_24 + tmp_20*tmp_24);
      real_t a_0_2 = tmp_15*(Scalar_Variable_Coefficient_2D_mu_out0_id0*tmp_26 - tmp_19*tmp_25 + tmp_20*tmp_25) + tmp_16*(Scalar_Variable_Coefficient_2D_mu_out0_id1*tmp_26 - tmp_19*tmp_27 + tmp_20*tmp_27) + tmp_17*(Scalar_Variable_Coefficient_2D_mu_out0_id2*tmp_26 - tmp_19*tmp_28 + tmp_20*tmp_28);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
   }

   void p1_full_stokesvar_1_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_6;
      real_t tmp_22 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = ((-tmp_21 - tmp_23 - tmp_25)*(-tmp_21 - tmp_23 - tmp_25));
      real_t tmp_27 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_28 = tmp_12 - tmp_16;
      real_t tmp_29 = tmp_20*tmp_28;
      real_t tmp_30 = -tmp_18 + tmp_9;
      real_t tmp_31 = tmp_20*tmp_30;
      real_t tmp_32 = tmp_15 - tmp_17;
      real_t tmp_33 = tmp_20*tmp_32;
      real_t tmp_34 = -tmp_29 - tmp_31 - tmp_33;
      real_t tmp_35 = (2.0/3.0)*(tmp_34*tmp_34);
      real_t tmp_36 = -1.0*tmp_29 - 1.0*tmp_31 - 1.0*tmp_33;
      real_t tmp_37 = 2*(tmp_36*tmp_36);
      real_t tmp_38 = -tmp_11*tmp_3 + tmp_14*tmp_5;
      real_t tmp_39 = tmp_20*tmp_38;
      real_t tmp_40 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_41 = tmp_20*tmp_40;
      real_t tmp_42 = -tmp_10*tmp_14 + tmp_3*tmp_8;
      real_t tmp_43 = tmp_20*tmp_42;
      real_t tmp_44 = ((-tmp_39 - tmp_41 - tmp_43)*(-tmp_39 - tmp_41 - tmp_43));
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_60 = 0.041666666666666657*tmp_57;
      real_t tmp_61 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_62 = 0.041666666666666657*tmp_57;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_64 = 0.041666666666666657*tmp_57;
      real_t tmp_65 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_66 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_67 = tmp_25*tmp_66;
      real_t tmp_68 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_33;
      real_t tmp_69 = (2.0/3.0)*tmp_34;
      real_t tmp_70 = 2.0*tmp_36;
      real_t tmp_71 = -0.5*tmp_39 - 0.5*tmp_41 - 0.5*tmp_43;
      real_t tmp_72 = tmp_43*tmp_71;
      real_t tmp_73 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_33;
      real_t tmp_75 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_33;
      real_t tmp_77 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_78 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_33;
      real_t tmp_79 = tmp_58*(tmp_65*tmp_67 + tmp_65*tmp_72 - tmp_68*tmp_69 + tmp_68*tmp_70) + tmp_60*(tmp_67*tmp_73 - tmp_69*tmp_74 + tmp_70*tmp_74 + tmp_72*tmp_73) + tmp_62*(tmp_67*tmp_75 - tmp_69*tmp_76 + tmp_70*tmp_76 + tmp_72*tmp_75) + tmp_64*(tmp_67*tmp_77 - tmp_69*tmp_78 + tmp_70*tmp_78 + tmp_72*tmp_77);
      real_t tmp_80 = tmp_23*tmp_66;
      real_t tmp_81 = tmp_31*tmp_69;
      real_t tmp_82 = tmp_36*tmp_65;
      real_t tmp_83 = tmp_41*tmp_71;
      real_t tmp_84 = tmp_31*tmp_70;
      real_t tmp_85 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_81 + tmp_31*tmp_82 + tmp_65*tmp_80 + tmp_65*tmp_83) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_81 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_84 + tmp_73*tmp_80 + tmp_73*tmp_83) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_81 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_84 + tmp_75*tmp_80 + tmp_75*tmp_83) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_81 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_84 + tmp_77*tmp_80 + tmp_77*tmp_83);
      real_t tmp_86 = tmp_21*tmp_66;
      real_t tmp_87 = tmp_29*tmp_69;
      real_t tmp_88 = tmp_39*tmp_71;
      real_t tmp_89 = tmp_29*tmp_70;
      real_t tmp_90 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_87 + tmp_29*tmp_82 + tmp_65*tmp_86 + tmp_65*tmp_88) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89 + tmp_73*tmp_86 + tmp_73*tmp_88) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89 + tmp_75*tmp_86 + tmp_75*tmp_88) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89 + tmp_77*tmp_86 + tmp_77*tmp_88);
      real_t tmp_91 = (tmp_24*tmp_24);
      real_t tmp_92 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_93 = tmp_27*tmp_92;
      real_t tmp_94 = 1.3333333333333335*tmp_92;
      real_t tmp_95 = (tmp_32*tmp_32)*tmp_94;
      real_t tmp_96 = (tmp_42*tmp_42);
      real_t tmp_97 = tmp_59*tmp_92;
      real_t tmp_98 = tmp_61*tmp_92;
      real_t tmp_99 = tmp_63*tmp_92;
      real_t tmp_100 = tmp_22*tmp_24;
      real_t tmp_101 = tmp_32*tmp_94;
      real_t tmp_102 = tmp_101*tmp_30;
      real_t tmp_103 = tmp_40*tmp_42;
      real_t tmp_104 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_102 + tmp_100*tmp_93 + tmp_103*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_102 + tmp_100*tmp_97 + tmp_103*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_102 + tmp_100*tmp_98 + tmp_103*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_102 + tmp_100*tmp_99 + tmp_103*tmp_99);
      real_t tmp_105 = tmp_24*tmp_6;
      real_t tmp_106 = tmp_101*tmp_28;
      real_t tmp_107 = tmp_38*tmp_42;
      real_t tmp_108 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_106 + tmp_105*tmp_93 + tmp_107*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 + tmp_105*tmp_97 + tmp_107*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 + tmp_105*tmp_98 + tmp_107*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 + tmp_105*tmp_99 + tmp_107*tmp_99);
      real_t tmp_109 = (tmp_22*tmp_22);
      real_t tmp_110 = (tmp_30*tmp_30)*tmp_94;
      real_t tmp_111 = (tmp_40*tmp_40);
      real_t tmp_112 = tmp_22*tmp_6;
      real_t tmp_113 = tmp_28*tmp_30*tmp_94;
      real_t tmp_114 = tmp_38*tmp_40;
      real_t tmp_115 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_113 + tmp_112*tmp_93 + tmp_114*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_113 + tmp_112*tmp_97 + tmp_114*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_113 + tmp_112*tmp_98 + tmp_114*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_113 + tmp_112*tmp_99 + tmp_114*tmp_99);
      real_t tmp_116 = (tmp_6*tmp_6);
      real_t tmp_117 = (tmp_28*tmp_28)*tmp_94;
      real_t tmp_118 = (tmp_38*tmp_38);
      real_t a_0_0 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_37 + tmp_26*tmp_27 + tmp_27*tmp_44) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_35 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_37 + tmp_26*tmp_59 + tmp_44*tmp_59) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_35 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_37 + tmp_26*tmp_61 + tmp_44*tmp_61) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_35 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_37 + tmp_26*tmp_63 + tmp_44*tmp_63);
      real_t a_0_1 = tmp_79;
      real_t a_0_2 = tmp_85;
      real_t a_0_3 = tmp_90;
      real_t a_1_0 = tmp_79;
      real_t a_1_1 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_95 + tmp_91*tmp_93 + tmp_93*tmp_96) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_95 + tmp_91*tmp_97 + tmp_96*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_95 + tmp_91*tmp_98 + tmp_96*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_95 + tmp_91*tmp_99 + tmp_96*tmp_99);
      real_t a_1_2 = tmp_104;
      real_t a_1_3 = tmp_108;
      real_t a_2_0 = tmp_85;
      real_t a_2_1 = tmp_104;
      real_t a_2_2 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_110 + tmp_109*tmp_93 + tmp_111*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_110 + tmp_109*tmp_97 + tmp_111*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_110 + tmp_109*tmp_98 + tmp_111*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_110 + tmp_109*tmp_99 + tmp_111*tmp_99);
      real_t a_2_3 = tmp_115;
      real_t a_3_0 = tmp_90;
      real_t a_3_1 = tmp_108;
      real_t a_3_2 = tmp_115;
      real_t a_3_3 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_117 + tmp_116*tmp_93 + tmp_118*tmp_93) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_117 + tmp_116*tmp_97 + tmp_118*tmp_97) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_117 + tmp_116*tmp_98 + tmp_118*tmp_98) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_117 + tmp_116*tmp_99 + tmp_118*tmp_99);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_1_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = -p_affine_0_2;
      real_t tmp_7 = p_affine_3_2 + tmp_6;
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_3_1 + tmp_2;
      real_t tmp_10 = p_affine_1_2 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_4;
      real_t tmp_12 = p_affine_3_0 + tmp_0;
      real_t tmp_13 = p_affine_2_2 + tmp_6;
      real_t tmp_14 = tmp_12*tmp_13;
      real_t tmp_15 = tmp_1*tmp_13;
      real_t tmp_16 = tmp_4*tmp_7;
      real_t tmp_17 = tmp_10*tmp_12;
      real_t tmp_18 = 1.0 / (tmp_11*tmp_9 + tmp_14*tmp_5 - tmp_15*tmp_9 - tmp_16*tmp_5 - tmp_17*tmp_3 + tmp_3*tmp_8);
      real_t tmp_19 = tmp_18*(tmp_1*tmp_3 - tmp_4*tmp_5);
      real_t tmp_20 = tmp_18*(-tmp_1*tmp_9 + tmp_12*tmp_5);
      real_t tmp_21 = tmp_18*(-tmp_12*tmp_3 + tmp_4*tmp_9);
      real_t tmp_22 = ((-tmp_19 - tmp_20 - tmp_21)*(-tmp_19 - tmp_20 - tmp_21));
      real_t tmp_23 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_24 = tmp_18*(tmp_11 - tmp_15);
      real_t tmp_25 = tmp_18*(-tmp_17 + tmp_8);
      real_t tmp_26 = tmp_18*(tmp_14 - tmp_16);
      real_t tmp_27 = -tmp_24 - tmp_25 - tmp_26;
      real_t tmp_28 = (2.0/3.0)*(tmp_27*tmp_27);
      real_t tmp_29 = -1.0*tmp_24 - 1.0*tmp_25 - 1.0*tmp_26;
      real_t tmp_30 = 2*(tmp_29*tmp_29);
      real_t tmp_31 = tmp_18*(-tmp_10*tmp_3 + tmp_13*tmp_5);
      real_t tmp_32 = tmp_18*(tmp_10*tmp_9 - tmp_5*tmp_7);
      real_t tmp_33 = tmp_18*(-tmp_13*tmp_9 + tmp_3*tmp_7);
      real_t tmp_34 = ((-tmp_31 - tmp_32 - tmp_33)*(-tmp_31 - tmp_32 - tmp_33));
      real_t tmp_35 = p_affine_0_0*p_affine_1_1;
      real_t tmp_36 = p_affine_0_0*p_affine_1_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_2;
      real_t tmp_38 = p_affine_0_1*p_affine_1_0;
      real_t tmp_39 = p_affine_0_1*p_affine_1_2;
      real_t tmp_40 = p_affine_2_2*p_affine_3_0;
      real_t tmp_41 = p_affine_0_2*p_affine_1_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_1;
      real_t tmp_44 = p_affine_2_2*p_affine_3_1;
      real_t tmp_45 = p_affine_2_0*p_affine_3_2;
      real_t tmp_46 = p_affine_2_1*p_affine_3_0;
      real_t tmp_47 = std::abs(p_affine_0_0*tmp_37 - p_affine_0_0*tmp_44 + p_affine_0_1*tmp_40 - p_affine_0_1*tmp_45 + p_affine_0_2*tmp_43 - p_affine_0_2*tmp_46 - p_affine_1_0*tmp_37 + p_affine_1_0*tmp_44 - p_affine_1_1*tmp_40 + p_affine_1_1*tmp_45 - p_affine_1_2*tmp_43 + p_affine_1_2*tmp_46 + p_affine_2_0*tmp_39 - p_affine_2_0*tmp_42 - p_affine_2_1*tmp_36 + p_affine_2_1*tmp_41 + p_affine_2_2*tmp_35 - p_affine_2_2*tmp_38 - p_affine_3_0*tmp_39 + p_affine_3_0*tmp_42 + p_affine_3_1*tmp_36 - p_affine_3_1*tmp_41 - p_affine_3_2*tmp_35 + p_affine_3_2*tmp_38);
      real_t tmp_48 = 0.041666666666666657*tmp_47;
      real_t tmp_49 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_50 = 0.041666666666666657*tmp_47;
      real_t tmp_51 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_52 = 0.041666666666666657*tmp_47;
      real_t tmp_53 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_54 = 0.041666666666666657*tmp_47;
      real_t tmp_55 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_56 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_57 = tmp_21*tmp_56;
      real_t tmp_58 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26;
      real_t tmp_59 = (2.0/3.0)*tmp_27;
      real_t tmp_60 = 2.0*tmp_29;
      real_t tmp_61 = -0.5*tmp_31 - 0.5*tmp_32 - 0.5*tmp_33;
      real_t tmp_62 = tmp_33*tmp_61;
      real_t tmp_63 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_64 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26;
      real_t tmp_65 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_66 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26;
      real_t tmp_67 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_68 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26;
      real_t tmp_69 = tmp_20*tmp_56;
      real_t tmp_70 = tmp_25*tmp_59;
      real_t tmp_71 = tmp_29*tmp_55;
      real_t tmp_72 = tmp_32*tmp_61;
      real_t tmp_73 = tmp_25*tmp_60;
      real_t tmp_74 = tmp_19*tmp_56;
      real_t tmp_75 = tmp_24*tmp_59;
      real_t tmp_76 = tmp_31*tmp_61;
      real_t tmp_77 = tmp_24*tmp_60;
      real_t a_0_0 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_28 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_30 + tmp_22*tmp_23 + tmp_23*tmp_34) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_28 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_30 + tmp_22*tmp_49 + tmp_34*tmp_49) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_28 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_30 + tmp_22*tmp_51 + tmp_34*tmp_51) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_28 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_30 + tmp_22*tmp_53 + tmp_34*tmp_53);
      real_t a_0_1 = tmp_48*(tmp_55*tmp_57 + tmp_55*tmp_62 - tmp_58*tmp_59 + tmp_58*tmp_60) + tmp_50*(tmp_57*tmp_63 - tmp_59*tmp_64 + tmp_60*tmp_64 + tmp_62*tmp_63) + tmp_52*(tmp_57*tmp_65 - tmp_59*tmp_66 + tmp_60*tmp_66 + tmp_62*tmp_65) + tmp_54*(tmp_57*tmp_67 - tmp_59*tmp_68 + tmp_60*tmp_68 + tmp_62*tmp_67);
      real_t a_0_2 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_70 + tmp_25*tmp_71 + tmp_55*tmp_69 + tmp_55*tmp_72) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_73 + tmp_63*tmp_69 + tmp_63*tmp_72) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_73 + tmp_65*tmp_69 + tmp_65*tmp_72) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_73 + tmp_67*tmp_69 + tmp_67*tmp_72);
      real_t a_0_3 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_75 + tmp_24*tmp_71 + tmp_55*tmp_74 + tmp_55*tmp_76) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_75 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_77 + tmp_63*tmp_74 + tmp_63*tmp_76) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_75 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_77 + tmp_65*tmp_74 + tmp_65*tmp_76) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_75 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_77 + tmp_67*tmp_74 + tmp_67*tmp_76);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_1_1_affine_q2::Scalar_Variable_Coefficient_2D_mu( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_2D_mu( Point3D( {in_0, in_1, 0} ) );
   }

   void p1_full_stokesvar_1_1_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_1_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_1_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_1_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_8;
      real_t tmp_22 = tmp_16 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_13 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = tmp_25*tmp_33;
      real_t tmp_58 = 2.0*tmp_32;
      real_t tmp_59 = tmp_35*tmp_58;
      real_t tmp_60 = tmp_23*tmp_33;
      real_t tmp_61 = 2.0*tmp_30;
      real_t tmp_62 = tmp_35*tmp_61;
      real_t tmp_63 = tmp_21*tmp_33;
      real_t tmp_64 = 2.0*tmp_28;
      real_t tmp_65 = tmp_35*tmp_64;
      real_t tmp_66 = 2.0*tmp_37;
      real_t tmp_67 = tmp_25*tmp_66;
      real_t tmp_68 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_69 = tmp_26*tmp_32;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = tmp_22*tmp_72;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_80 = tmp_29*tmp_71;
      real_t tmp_81 = tmp_24*tmp_80;
      real_t tmp_82 = (2.0/3.0)*tmp_78;
      real_t tmp_83 = 1.0*tmp_81;
      real_t tmp_84 = tmp_72*tmp_8;
      real_t tmp_85 = tmp_27*tmp_71;
      real_t tmp_86 = tmp_24*tmp_85;
      real_t tmp_87 = (2.0/3.0)*tmp_84;
      real_t tmp_88 = 1.0*tmp_86;
      real_t tmp_89 = tmp_23*tmp_66;
      real_t tmp_90 = tmp_26*tmp_30;
      real_t tmp_91 = (2.0/3.0)*tmp_90;
      real_t tmp_92 = 1.0*tmp_78;
      real_t tmp_93 = (2.0/3.0)*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_80;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_8*tmp_80;
      real_t tmp_98 = tmp_22*tmp_85;
      real_t tmp_99 = (2.0/3.0)*tmp_97;
      real_t tmp_100 = 1.0*tmp_98;
      real_t tmp_101 = tmp_21*tmp_66;
      real_t tmp_102 = tmp_26*tmp_28;
      real_t tmp_103 = (2.0/3.0)*tmp_102;
      real_t tmp_104 = 1.0*tmp_84;
      real_t tmp_105 = (2.0/3.0)*tmp_86;
      real_t tmp_106 = 1.0*tmp_97;
      real_t tmp_107 = (2.0/3.0)*tmp_98;
      real_t tmp_108 = tmp_8*tmp_85;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_57 + tmp_36*tmp_58) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_57 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_60 + tmp_36*tmp_61) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_60 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_63 + tmp_36*tmp_64) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_63 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_67 - tmp_68*tmp_69) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_67 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_68*tmp_78 + tmp_79*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_68*tmp_84 + tmp_79*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_89 - tmp_68*tmp_90) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_89 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_68*tmp_81 + tmp_78*tmp_79) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_68*tmp_97 + tmp_79*tmp_98) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_101 - tmp_102*tmp_68) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_101 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_68*tmp_86 + tmp_79*tmp_84) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_68*tmp_98 + tmp_79*tmp_97) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_1_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_8;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_2 + tmp_8;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = tmp_1*tmp_11;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_16 + tmp_4*tmp_9 - tmp_7*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_4 - tmp_7);
      real_t tmp_20 = tmp_18*(tmp_15 - tmp_16);
      real_t tmp_21 = tmp_18*(tmp_12 - tmp_17);
      real_t tmp_22 = tmp_18*(-tmp_1*tmp_13 + tmp_10*tmp_5);
      real_t tmp_23 = tmp_18*(tmp_1*tmp_9 - tmp_10*tmp_14);
      real_t tmp_24 = tmp_18*(tmp_13*tmp_14 - tmp_5*tmp_9);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = tmp_21*tmp_25;
      real_t tmp_49 = 2.0*tmp_24;
      real_t tmp_50 = tmp_27*tmp_49;
      real_t tmp_51 = tmp_20*tmp_25;
      real_t tmp_52 = 2.0*tmp_23;
      real_t tmp_53 = tmp_27*tmp_52;
      real_t tmp_54 = tmp_19*tmp_25;
      real_t tmp_55 = 2.0*tmp_22;
      real_t tmp_56 = tmp_27*tmp_55;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_48 + tmp_28*tmp_49) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_48 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_51 + tmp_28*tmp_52) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_51 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_54 + tmp_28*tmp_55) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_54 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_1_2_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_2_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_0;
      real_t tmp_9 = p_affine_1_0 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_8;
      real_t tmp_12 = p_affine_3_1 + tmp_0;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_0 + tmp_8;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_12*tmp_9;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_14*tmp_4;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_13*tmp_5 + tmp_15*tmp_3 - tmp_16*tmp_3 - tmp_17*tmp_7 - tmp_18*tmp_5;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_6;
      real_t tmp_22 = -tmp_1*tmp_7 + tmp_12*tmp_5;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = -tmp_12*tmp_3 + tmp_4*tmp_7;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = tmp_10 - tmp_17;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_16;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = tmp_13 - tmp_18;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = 2.0*tmp_32;
      real_t tmp_58 = tmp_25*tmp_33;
      real_t tmp_59 = tmp_35*tmp_57;
      real_t tmp_60 = 2.0*tmp_30;
      real_t tmp_61 = tmp_23*tmp_33;
      real_t tmp_62 = tmp_35*tmp_60;
      real_t tmp_63 = 2.0*tmp_28;
      real_t tmp_64 = tmp_21*tmp_33;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_67 = tmp_26*tmp_32;
      real_t tmp_68 = 2.0*tmp_37;
      real_t tmp_69 = tmp_25*tmp_68;
      real_t tmp_70 = (2.0/3.0)*tmp_67;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_79 = tmp_29*tmp_71;
      real_t tmp_80 = tmp_24*tmp_79;
      real_t tmp_81 = tmp_22*tmp_72;
      real_t tmp_82 = 1.0*tmp_80;
      real_t tmp_83 = (2.0/3.0)*tmp_81;
      real_t tmp_84 = tmp_27*tmp_71;
      real_t tmp_85 = tmp_24*tmp_84;
      real_t tmp_86 = tmp_6*tmp_72;
      real_t tmp_87 = 1.0*tmp_85;
      real_t tmp_88 = (2.0/3.0)*tmp_86;
      real_t tmp_89 = tmp_26*tmp_30;
      real_t tmp_90 = tmp_23*tmp_68;
      real_t tmp_91 = (2.0/3.0)*tmp_89;
      real_t tmp_92 = (2.0/3.0)*tmp_80;
      real_t tmp_93 = 1.0*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_79;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_22*tmp_84;
      real_t tmp_98 = tmp_6*tmp_79;
      real_t tmp_99 = 1.0*tmp_97;
      real_t tmp_100 = (2.0/3.0)*tmp_98;
      real_t tmp_101 = tmp_26*tmp_28;
      real_t tmp_102 = tmp_21*tmp_68;
      real_t tmp_103 = (2.0/3.0)*tmp_101;
      real_t tmp_104 = (2.0/3.0)*tmp_85;
      real_t tmp_105 = 1.0*tmp_86;
      real_t tmp_106 = (2.0/3.0)*tmp_97;
      real_t tmp_107 = 1.0*tmp_98;
      real_t tmp_108 = tmp_6*tmp_84;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58 + tmp_36*tmp_57) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_61 + tmp_36*tmp_60) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_64 + tmp_36*tmp_63) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_69 - tmp_66*tmp_67) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_66*tmp_81 + tmp_78*tmp_80) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_66*tmp_86 + tmp_78*tmp_85) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_90 - tmp_66*tmp_89) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_66*tmp_80 + tmp_78*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_66*tmp_98 + tmp_78*tmp_97) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_102 - tmp_101*tmp_66) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_66*tmp_85 + tmp_78*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_66*tmp_97 + tmp_78*tmp_98) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_2_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = p_affine_3_2 + tmp_2;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = tmp_4*tmp_8;
      real_t tmp_10 = p_affine_2_0 + tmp_7;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_7;
      real_t tmp_14 = tmp_1*tmp_13;
      real_t tmp_15 = tmp_11*tmp_8;
      real_t tmp_16 = tmp_1*tmp_10;
      real_t tmp_17 = tmp_13*tmp_4;
      real_t tmp_18 = 1.0 / (tmp_12*tmp_5 + tmp_14*tmp_3 - tmp_15*tmp_3 - tmp_16*tmp_6 - tmp_17*tmp_5 + tmp_6*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_1*tmp_3 - tmp_4*tmp_5);
      real_t tmp_20 = tmp_18*(-tmp_1*tmp_6 + tmp_11*tmp_5);
      real_t tmp_21 = tmp_18*(-tmp_11*tmp_3 + tmp_4*tmp_6);
      real_t tmp_22 = tmp_18*(-tmp_16 + tmp_9);
      real_t tmp_23 = tmp_18*(tmp_14 - tmp_15);
      real_t tmp_24 = tmp_18*(tmp_12 - tmp_17);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = 2.0*tmp_24;
      real_t tmp_49 = tmp_21*tmp_25;
      real_t tmp_50 = tmp_27*tmp_48;
      real_t tmp_51 = 2.0*tmp_23;
      real_t tmp_52 = tmp_20*tmp_25;
      real_t tmp_53 = tmp_27*tmp_51;
      real_t tmp_54 = 2.0*tmp_22;
      real_t tmp_55 = tmp_19*tmp_25;
      real_t tmp_56 = tmp_27*tmp_54;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_49 + tmp_28*tmp_48) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52 + tmp_28*tmp_51) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_55 + tmp_28*tmp_54) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_2_0_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_2_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_6;
      real_t tmp_22 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = tmp_10 - tmp_17;
      real_t tmp_28 = tmp_20*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_16;
      real_t tmp_30 = tmp_20*tmp_29;
      real_t tmp_31 = tmp_12 - tmp_18;
      real_t tmp_32 = tmp_20*tmp_31;
      real_t tmp_33 = -2.0/3.0*tmp_28 - 2.0/3.0*tmp_30 - 2.0/3.0*tmp_32;
      real_t tmp_34 = tmp_26*tmp_33;
      real_t tmp_35 = -0.5*tmp_21 - 0.5*tmp_23 - 0.5*tmp_25;
      real_t tmp_36 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_35;
      real_t tmp_37 = -0.5*tmp_28 - 0.5*tmp_30 - 0.5*tmp_32;
      real_t tmp_38 = 4*tmp_37;
      real_t tmp_39 = p_affine_0_0*p_affine_1_1;
      real_t tmp_40 = p_affine_0_0*p_affine_1_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_2;
      real_t tmp_42 = p_affine_0_1*p_affine_1_0;
      real_t tmp_43 = p_affine_0_1*p_affine_1_2;
      real_t tmp_44 = p_affine_2_2*p_affine_3_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_0;
      real_t tmp_46 = p_affine_0_2*p_affine_1_1;
      real_t tmp_47 = p_affine_2_0*p_affine_3_1;
      real_t tmp_48 = p_affine_2_2*p_affine_3_1;
      real_t tmp_49 = p_affine_2_0*p_affine_3_2;
      real_t tmp_50 = p_affine_2_1*p_affine_3_0;
      real_t tmp_51 = std::abs(p_affine_0_0*tmp_41 - p_affine_0_0*tmp_48 + p_affine_0_1*tmp_44 - p_affine_0_1*tmp_49 + p_affine_0_2*tmp_47 - p_affine_0_2*tmp_50 - p_affine_1_0*tmp_41 + p_affine_1_0*tmp_48 - p_affine_1_1*tmp_44 + p_affine_1_1*tmp_49 - p_affine_1_2*tmp_47 + p_affine_1_2*tmp_50 + p_affine_2_0*tmp_43 - p_affine_2_0*tmp_46 - p_affine_2_1*tmp_40 + p_affine_2_1*tmp_45 + p_affine_2_2*tmp_39 - p_affine_2_2*tmp_42 - p_affine_3_0*tmp_43 + p_affine_3_0*tmp_46 + p_affine_3_1*tmp_40 - p_affine_3_1*tmp_45 - p_affine_3_2*tmp_39 + p_affine_3_2*tmp_42);
      real_t tmp_52 = 0.041666666666666657*tmp_51;
      real_t tmp_53 = tmp_35*tmp_38;
      real_t tmp_54 = 0.041666666666666657*tmp_51;
      real_t tmp_55 = 0.041666666666666657*tmp_51;
      real_t tmp_56 = 0.041666666666666657*tmp_51;
      real_t tmp_57 = 2.0*tmp_32;
      real_t tmp_58 = tmp_25*tmp_33;
      real_t tmp_59 = tmp_35*tmp_57;
      real_t tmp_60 = 2.0*tmp_30;
      real_t tmp_61 = tmp_23*tmp_33;
      real_t tmp_62 = tmp_35*tmp_60;
      real_t tmp_63 = 2.0*tmp_28;
      real_t tmp_64 = tmp_21*tmp_33;
      real_t tmp_65 = tmp_35*tmp_63;
      real_t tmp_66 = (2.0/3.0)*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_67 = tmp_26*tmp_32;
      real_t tmp_68 = 2.0*tmp_37;
      real_t tmp_69 = tmp_25*tmp_68;
      real_t tmp_70 = (2.0/3.0)*tmp_67;
      real_t tmp_71 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_72 = tmp_31*tmp_71;
      real_t tmp_73 = 0.33333333333333337*tmp_24*tmp_72;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_54;
      real_t tmp_76 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_79 = tmp_29*tmp_71;
      real_t tmp_80 = tmp_24*tmp_79;
      real_t tmp_81 = tmp_22*tmp_72;
      real_t tmp_82 = 1.0*tmp_80;
      real_t tmp_83 = (2.0/3.0)*tmp_81;
      real_t tmp_84 = tmp_27*tmp_71;
      real_t tmp_85 = tmp_24*tmp_84;
      real_t tmp_86 = tmp_6*tmp_72;
      real_t tmp_87 = 1.0*tmp_85;
      real_t tmp_88 = (2.0/3.0)*tmp_86;
      real_t tmp_89 = tmp_26*tmp_30;
      real_t tmp_90 = tmp_23*tmp_68;
      real_t tmp_91 = (2.0/3.0)*tmp_89;
      real_t tmp_92 = (2.0/3.0)*tmp_80;
      real_t tmp_93 = 1.0*tmp_81;
      real_t tmp_94 = 0.33333333333333337*tmp_74;
      real_t tmp_95 = tmp_22*tmp_79;
      real_t tmp_96 = 0.33333333333333337*tmp_95;
      real_t tmp_97 = tmp_22*tmp_84;
      real_t tmp_98 = tmp_6*tmp_79;
      real_t tmp_99 = 1.0*tmp_97;
      real_t tmp_100 = (2.0/3.0)*tmp_98;
      real_t tmp_101 = tmp_26*tmp_28;
      real_t tmp_102 = tmp_21*tmp_68;
      real_t tmp_103 = (2.0/3.0)*tmp_101;
      real_t tmp_104 = (2.0/3.0)*tmp_85;
      real_t tmp_105 = 1.0*tmp_86;
      real_t tmp_106 = (2.0/3.0)*tmp_97;
      real_t tmp_107 = 1.0*tmp_98;
      real_t tmp_108 = tmp_6*tmp_84;
      real_t tmp_109 = 0.33333333333333337*tmp_108;
      real_t a_0_0 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_34 + tmp_36*tmp_38) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_34 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_1 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_58 + tmp_36*tmp_57) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_59) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_59) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_58 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_59);
      real_t a_0_2 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_61 + tmp_36*tmp_60) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_62) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_62) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_61 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_62);
      real_t a_0_3 = tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_64 + tmp_36*tmp_63) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_65) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_65) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_64 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_65);
      real_t a_1_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_69 - tmp_66*tmp_67) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_70) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_70) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_69 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_70);
      real_t a_1_1 = tmp_73*tmp_74 + tmp_73*tmp_75 + tmp_73*tmp_76 + tmp_73*tmp_77;
      real_t a_1_2 = tmp_52*(-tmp_66*tmp_81 + tmp_78*tmp_80) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_83) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_83) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_82 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_83);
      real_t a_1_3 = tmp_52*(-tmp_66*tmp_86 + tmp_78*tmp_85) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_88) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_88) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_87 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_88);
      real_t a_2_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_90 - tmp_66*tmp_89) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_91) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_91) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_90 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_91);
      real_t a_2_1 = tmp_52*(-tmp_66*tmp_80 + tmp_78*tmp_81) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_93) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_93) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_92 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_93);
      real_t a_2_2 = tmp_75*tmp_96 + tmp_76*tmp_96 + tmp_77*tmp_96 + tmp_94*tmp_95;
      real_t a_2_3 = tmp_52*(-tmp_66*tmp_98 + tmp_78*tmp_97) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_99) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_99) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_100 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_99);
      real_t a_3_0 = tmp_52*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_102 - tmp_101*tmp_66) + tmp_54*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_103) + tmp_55*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_103) + tmp_56*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_102 - Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_103);
      real_t a_3_1 = tmp_52*(-tmp_66*tmp_85 + tmp_78*tmp_86) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_105) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_105) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_105);
      real_t a_3_2 = tmp_52*(-tmp_66*tmp_97 + tmp_78*tmp_98) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_107) + tmp_55*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_107) + tmp_56*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_106 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_107);
      real_t a_3_3 = tmp_108*tmp_94 + tmp_109*tmp_75 + tmp_109*tmp_76 + tmp_109*tmp_77;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_2_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = p_affine_3_2 + tmp_2;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = tmp_4*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_7;
      real_t tmp_11 = tmp_1*tmp_10;
      real_t tmp_12 = p_affine_3_0 + tmp_0;
      real_t tmp_13 = p_affine_1_1 + tmp_7;
      real_t tmp_14 = tmp_12*tmp_13;
      real_t tmp_15 = tmp_10*tmp_4;
      real_t tmp_16 = tmp_1*tmp_13;
      real_t tmp_17 = tmp_12*tmp_8;
      real_t tmp_18 = 1.0 / (tmp_11*tmp_3 + tmp_14*tmp_5 - tmp_15*tmp_5 - tmp_16*tmp_6 - tmp_17*tmp_3 + tmp_6*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_1*tmp_3 - tmp_4*tmp_5);
      real_t tmp_20 = tmp_18*(-tmp_12*tmp_3 + tmp_4*tmp_6);
      real_t tmp_21 = tmp_18*(-tmp_1*tmp_6 + tmp_12*tmp_5);
      real_t tmp_22 = tmp_18*(-tmp_16 + tmp_9);
      real_t tmp_23 = tmp_18*(tmp_14 - tmp_15);
      real_t tmp_24 = tmp_18*(tmp_11 - tmp_17);
      real_t tmp_25 = -2.0/3.0*tmp_22 - 2.0/3.0*tmp_23 - 2.0/3.0*tmp_24;
      real_t tmp_26 = tmp_25*(-tmp_19 - tmp_20 - tmp_21);
      real_t tmp_27 = -0.5*tmp_19 - 0.5*tmp_20 - 0.5*tmp_21;
      real_t tmp_28 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27;
      real_t tmp_29 = -2.0*tmp_22 - 2.0*tmp_23 - 2.0*tmp_24;
      real_t tmp_30 = p_affine_0_0*p_affine_1_1;
      real_t tmp_31 = p_affine_0_0*p_affine_1_2;
      real_t tmp_32 = p_affine_2_1*p_affine_3_2;
      real_t tmp_33 = p_affine_0_1*p_affine_1_0;
      real_t tmp_34 = p_affine_0_1*p_affine_1_2;
      real_t tmp_35 = p_affine_2_2*p_affine_3_0;
      real_t tmp_36 = p_affine_0_2*p_affine_1_0;
      real_t tmp_37 = p_affine_0_2*p_affine_1_1;
      real_t tmp_38 = p_affine_2_0*p_affine_3_1;
      real_t tmp_39 = p_affine_2_2*p_affine_3_1;
      real_t tmp_40 = p_affine_2_0*p_affine_3_2;
      real_t tmp_41 = p_affine_2_1*p_affine_3_0;
      real_t tmp_42 = std::abs(p_affine_0_0*tmp_32 - p_affine_0_0*tmp_39 + p_affine_0_1*tmp_35 - p_affine_0_1*tmp_40 + p_affine_0_2*tmp_38 - p_affine_0_2*tmp_41 - p_affine_1_0*tmp_32 + p_affine_1_0*tmp_39 - p_affine_1_1*tmp_35 + p_affine_1_1*tmp_40 - p_affine_1_2*tmp_38 + p_affine_1_2*tmp_41 + p_affine_2_0*tmp_34 - p_affine_2_0*tmp_37 - p_affine_2_1*tmp_31 + p_affine_2_1*tmp_36 + p_affine_2_2*tmp_30 - p_affine_2_2*tmp_33 - p_affine_3_0*tmp_34 + p_affine_3_0*tmp_37 + p_affine_3_1*tmp_31 - p_affine_3_1*tmp_36 - p_affine_3_2*tmp_30 + p_affine_3_2*tmp_33);
      real_t tmp_43 = 0.041666666666666657*tmp_42;
      real_t tmp_44 = tmp_27*tmp_29;
      real_t tmp_45 = 0.041666666666666657*tmp_42;
      real_t tmp_46 = 0.041666666666666657*tmp_42;
      real_t tmp_47 = 0.041666666666666657*tmp_42;
      real_t tmp_48 = 2.0*tmp_24;
      real_t tmp_49 = tmp_21*tmp_25;
      real_t tmp_50 = tmp_27*tmp_48;
      real_t tmp_51 = 2.0*tmp_23;
      real_t tmp_52 = tmp_20*tmp_25;
      real_t tmp_53 = tmp_27*tmp_51;
      real_t tmp_54 = 2.0*tmp_22;
      real_t tmp_55 = tmp_19*tmp_25;
      real_t tmp_56 = tmp_27*tmp_54;
      real_t a_0_0 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_26 + tmp_28*tmp_29) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_44) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_44) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_26 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_44);
      real_t a_0_1 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_49 + tmp_28*tmp_48) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_50) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_50) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_49 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_50);
      real_t a_0_2 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_52 + tmp_28*tmp_51) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_53) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_53) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_52 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_53);
      real_t a_0_3 = tmp_43*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_55 + tmp_28*tmp_54) + tmp_45*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_56) + tmp_46*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_56) + tmp_47*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_55 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_56);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_2_1_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

   void p1_full_stokesvar_2_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 3, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 3 >&  ) const
   {
      
   }

   void p1_full_stokesvar_2_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = tmp_20*tmp_8;
      real_t tmp_22 = tmp_16 - tmp_17;
      real_t tmp_23 = tmp_20*tmp_22;
      real_t tmp_24 = tmp_13 - tmp_18;
      real_t tmp_25 = tmp_20*tmp_24;
      real_t tmp_26 = -tmp_21 - tmp_23 - tmp_25;
      real_t tmp_27 = (2.0/3.0)*(tmp_26*tmp_26);
      real_t tmp_28 = -1.0*tmp_21 - 1.0*tmp_23 - 1.0*tmp_25;
      real_t tmp_29 = 2*(tmp_28*tmp_28);
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_31 = tmp_20*tmp_30;
      real_t tmp_32 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_33 = tmp_20*tmp_32;
      real_t tmp_34 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_35 = tmp_20*tmp_34;
      real_t tmp_36 = ((-tmp_31 - tmp_33 - tmp_35)*(-tmp_31 - tmp_33 - tmp_35));
      real_t tmp_37 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_38 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_20*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_41 = tmp_20*tmp_40;
      real_t tmp_42 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_43 = tmp_20*tmp_42;
      real_t tmp_44 = ((-tmp_39 - tmp_41 - tmp_43)*(-tmp_39 - tmp_41 - tmp_43));
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_60 = 0.041666666666666657*tmp_57;
      real_t tmp_61 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_62 = 0.041666666666666657*tmp_57;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_64 = 0.041666666666666657*tmp_57;
      real_t tmp_65 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_25;
      real_t tmp_66 = (2.0/3.0)*tmp_26;
      real_t tmp_67 = 2.0*tmp_28;
      real_t tmp_68 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_69 = -0.5*tmp_31 - 0.5*tmp_33 - 0.5*tmp_35;
      real_t tmp_70 = tmp_35*tmp_69;
      real_t tmp_71 = -0.5*tmp_39 - 0.5*tmp_41 - 0.5*tmp_43;
      real_t tmp_72 = tmp_43*tmp_71;
      real_t tmp_73 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_25;
      real_t tmp_74 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_25;
      real_t tmp_76 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_77 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_25;
      real_t tmp_78 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_79 = tmp_58*(-tmp_65*tmp_66 + tmp_65*tmp_67 + tmp_68*tmp_70 + tmp_68*tmp_72) + tmp_60*(-tmp_66*tmp_73 + tmp_67*tmp_73 + tmp_70*tmp_74 + tmp_72*tmp_74) + tmp_62*(-tmp_66*tmp_75 + tmp_67*tmp_75 + tmp_70*tmp_76 + tmp_72*tmp_76) + tmp_64*(-tmp_66*tmp_77 + tmp_67*tmp_77 + tmp_70*tmp_78 + tmp_72*tmp_78);
      real_t tmp_80 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_23;
      real_t tmp_81 = tmp_33*tmp_69;
      real_t tmp_82 = tmp_41*tmp_71;
      real_t tmp_83 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_23;
      real_t tmp_84 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_23;
      real_t tmp_85 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_23;
      real_t tmp_86 = tmp_58*(-tmp_66*tmp_80 + tmp_67*tmp_80 + tmp_68*tmp_81 + tmp_68*tmp_82) + tmp_60*(-tmp_66*tmp_83 + tmp_67*tmp_83 + tmp_74*tmp_81 + tmp_74*tmp_82) + tmp_62*(-tmp_66*tmp_84 + tmp_67*tmp_84 + tmp_76*tmp_81 + tmp_76*tmp_82) + tmp_64*(-tmp_66*tmp_85 + tmp_67*tmp_85 + tmp_78*tmp_81 + tmp_78*tmp_82);
      real_t tmp_87 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_21;
      real_t tmp_88 = tmp_31*tmp_69;
      real_t tmp_89 = tmp_39*tmp_71;
      real_t tmp_90 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_21;
      real_t tmp_91 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_21;
      real_t tmp_92 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_21;
      real_t tmp_93 = tmp_58*(-tmp_66*tmp_87 + tmp_67*tmp_87 + tmp_68*tmp_88 + tmp_68*tmp_89) + tmp_60*(-tmp_66*tmp_90 + tmp_67*tmp_90 + tmp_74*tmp_88 + tmp_74*tmp_89) + tmp_62*(-tmp_66*tmp_91 + tmp_67*tmp_91 + tmp_76*tmp_88 + tmp_76*tmp_89) + tmp_64*(-tmp_66*tmp_92 + tmp_67*tmp_92 + tmp_78*tmp_88 + tmp_78*tmp_89);
      real_t tmp_94 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_95 = 1.3333333333333335*tmp_94;
      real_t tmp_96 = (tmp_24*tmp_24)*tmp_95;
      real_t tmp_97 = (tmp_34*tmp_34);
      real_t tmp_98 = tmp_37*tmp_94;
      real_t tmp_99 = (tmp_42*tmp_42);
      real_t tmp_100 = tmp_59*tmp_94;
      real_t tmp_101 = tmp_61*tmp_94;
      real_t tmp_102 = tmp_63*tmp_94;
      real_t tmp_103 = tmp_24*tmp_95;
      real_t tmp_104 = tmp_103*tmp_22;
      real_t tmp_105 = tmp_32*tmp_34;
      real_t tmp_106 = tmp_40*tmp_42;
      real_t tmp_107 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_104 + tmp_105*tmp_98 + tmp_106*tmp_98) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_104 + tmp_100*tmp_105 + tmp_100*tmp_106) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_104 + tmp_101*tmp_105 + tmp_101*tmp_106) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_104 + tmp_102*tmp_105 + tmp_102*tmp_106);
      real_t tmp_108 = tmp_103*tmp_8;
      real_t tmp_109 = tmp_30*tmp_34;
      real_t tmp_110 = tmp_38*tmp_42;
      real_t tmp_111 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_108 + tmp_109*tmp_98 + tmp_110*tmp_98) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_108 + tmp_100*tmp_109 + tmp_100*tmp_110) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_108 + tmp_101*tmp_109 + tmp_101*tmp_110) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_108 + tmp_102*tmp_109 + tmp_102*tmp_110);
      real_t tmp_112 = (tmp_22*tmp_22)*tmp_95;
      real_t tmp_113 = (tmp_32*tmp_32);
      real_t tmp_114 = (tmp_40*tmp_40);
      real_t tmp_115 = tmp_22*tmp_8*tmp_95;
      real_t tmp_116 = tmp_30*tmp_32;
      real_t tmp_117 = tmp_38*tmp_40;
      real_t tmp_118 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_115 + tmp_116*tmp_98 + tmp_117*tmp_98) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_115 + tmp_100*tmp_116 + tmp_100*tmp_117) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_115 + tmp_101*tmp_116 + tmp_101*tmp_117) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_115 + tmp_102*tmp_116 + tmp_102*tmp_117);
      real_t tmp_119 = (tmp_8*tmp_8)*tmp_95;
      real_t tmp_120 = (tmp_30*tmp_30);
      real_t tmp_121 = (tmp_38*tmp_38);
      real_t a_0_0 = tmp_58*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_27 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_29 + tmp_36*tmp_37 + tmp_37*tmp_44) + tmp_60*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_27 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_29 + tmp_36*tmp_59 + tmp_44*tmp_59) + tmp_62*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_27 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_29 + tmp_36*tmp_61 + tmp_44*tmp_61) + tmp_64*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_27 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_29 + tmp_36*tmp_63 + tmp_44*tmp_63);
      real_t a_0_1 = tmp_79;
      real_t a_0_2 = tmp_86;
      real_t a_0_3 = tmp_93;
      real_t a_1_0 = tmp_79;
      real_t a_1_1 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_96 + tmp_97*tmp_98 + tmp_98*tmp_99) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_96 + tmp_100*tmp_97 + tmp_100*tmp_99) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_96 + tmp_101*tmp_97 + tmp_101*tmp_99) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_96 + tmp_102*tmp_97 + tmp_102*tmp_99);
      real_t a_1_2 = tmp_107;
      real_t a_1_3 = tmp_111;
      real_t a_2_0 = tmp_86;
      real_t a_2_1 = tmp_107;
      real_t a_2_2 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_112 + tmp_113*tmp_98 + tmp_114*tmp_98) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_112 + tmp_100*tmp_113 + tmp_100*tmp_114) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_112 + tmp_101*tmp_113 + tmp_101*tmp_114) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_112 + tmp_102*tmp_113 + tmp_102*tmp_114);
      real_t a_2_3 = tmp_118;
      real_t a_3_0 = tmp_93;
      real_t a_3_1 = tmp_111;
      real_t a_3_2 = tmp_118;
      real_t a_3_3 = tmp_58*(Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_119 + tmp_120*tmp_98 + tmp_121*tmp_98) + tmp_60*(Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_119 + tmp_100*tmp_120 + tmp_100*tmp_121) + tmp_62*(Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_119 + tmp_101*tmp_120 + tmp_101*tmp_121) + tmp_64*(Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_119 + tmp_102*tmp_120 + tmp_102*tmp_121);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
   }

   void p1_full_stokesvar_2_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id0 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id1 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id2 = 0;
      real_t Scalar_Variable_Coefficient_3D_mu_out0_id3 = 0;
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id0 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id1 );
      Scalar_Variable_Coefficient_3D_mu( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id2 );
      Scalar_Variable_Coefficient_3D_mu( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_mu_out0_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = -p_affine_0_2;
      real_t tmp_9 = p_affine_3_2 + tmp_8;
      real_t tmp_10 = p_affine_1_2 + tmp_8;
      real_t tmp_11 = p_affine_3_1 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_2 + tmp_8;
      real_t tmp_14 = p_affine_3_0 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = tmp_1*tmp_11;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_16 + tmp_4*tmp_9 - tmp_7*tmp_9);
      real_t tmp_19 = tmp_18*(tmp_4 - tmp_7);
      real_t tmp_20 = tmp_18*(tmp_15 - tmp_16);
      real_t tmp_21 = tmp_18*(tmp_12 - tmp_17);
      real_t tmp_22 = -tmp_19 - tmp_20 - tmp_21;
      real_t tmp_23 = (2.0/3.0)*(tmp_22*tmp_22);
      real_t tmp_24 = -1.0*tmp_19 - 1.0*tmp_20 - 1.0*tmp_21;
      real_t tmp_25 = 2*(tmp_24*tmp_24);
      real_t tmp_26 = tmp_18*(-tmp_1*tmp_13 + tmp_10*tmp_5);
      real_t tmp_27 = tmp_18*(tmp_1*tmp_9 - tmp_10*tmp_14);
      real_t tmp_28 = tmp_18*(tmp_13*tmp_14 - tmp_5*tmp_9);
      real_t tmp_29 = ((-tmp_26 - tmp_27 - tmp_28)*(-tmp_26 - tmp_27 - tmp_28));
      real_t tmp_30 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_31 = tmp_18*(-tmp_10*tmp_3 + tmp_13*tmp_6);
      real_t tmp_32 = tmp_18*(tmp_10*tmp_11 - tmp_6*tmp_9);
      real_t tmp_33 = tmp_18*(-tmp_11*tmp_13 + tmp_3*tmp_9);
      real_t tmp_34 = ((-tmp_31 - tmp_32 - tmp_33)*(-tmp_31 - tmp_32 - tmp_33));
      real_t tmp_35 = p_affine_0_0*p_affine_1_1;
      real_t tmp_36 = p_affine_0_0*p_affine_1_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_2;
      real_t tmp_38 = p_affine_0_1*p_affine_1_0;
      real_t tmp_39 = p_affine_0_1*p_affine_1_2;
      real_t tmp_40 = p_affine_2_2*p_affine_3_0;
      real_t tmp_41 = p_affine_0_2*p_affine_1_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_1;
      real_t tmp_44 = p_affine_2_2*p_affine_3_1;
      real_t tmp_45 = p_affine_2_0*p_affine_3_2;
      real_t tmp_46 = p_affine_2_1*p_affine_3_0;
      real_t tmp_47 = std::abs(p_affine_0_0*tmp_37 - p_affine_0_0*tmp_44 + p_affine_0_1*tmp_40 - p_affine_0_1*tmp_45 + p_affine_0_2*tmp_43 - p_affine_0_2*tmp_46 - p_affine_1_0*tmp_37 + p_affine_1_0*tmp_44 - p_affine_1_1*tmp_40 + p_affine_1_1*tmp_45 - p_affine_1_2*tmp_43 + p_affine_1_2*tmp_46 + p_affine_2_0*tmp_39 - p_affine_2_0*tmp_42 - p_affine_2_1*tmp_36 + p_affine_2_1*tmp_41 + p_affine_2_2*tmp_35 - p_affine_2_2*tmp_38 - p_affine_3_0*tmp_39 + p_affine_3_0*tmp_42 + p_affine_3_1*tmp_36 - p_affine_3_1*tmp_41 - p_affine_3_2*tmp_35 + p_affine_3_2*tmp_38);
      real_t tmp_48 = 0.041666666666666657*tmp_47;
      real_t tmp_49 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_50 = 0.041666666666666657*tmp_47;
      real_t tmp_51 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_52 = 0.041666666666666657*tmp_47;
      real_t tmp_53 = 1.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_54 = 0.041666666666666657*tmp_47;
      real_t tmp_55 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_21;
      real_t tmp_56 = (2.0/3.0)*tmp_22;
      real_t tmp_57 = 2.0*tmp_24;
      real_t tmp_58 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id0;
      real_t tmp_59 = -0.5*tmp_26 - 0.5*tmp_27 - 0.5*tmp_28;
      real_t tmp_60 = tmp_28*tmp_59;
      real_t tmp_61 = -0.5*tmp_31 - 0.5*tmp_32 - 0.5*tmp_33;
      real_t tmp_62 = tmp_33*tmp_61;
      real_t tmp_63 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_21;
      real_t tmp_64 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id1;
      real_t tmp_65 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_21;
      real_t tmp_66 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id2;
      real_t tmp_67 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_21;
      real_t tmp_68 = 2.0*Scalar_Variable_Coefficient_3D_mu_out0_id3;
      real_t tmp_69 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_20;
      real_t tmp_70 = tmp_27*tmp_59;
      real_t tmp_71 = tmp_32*tmp_61;
      real_t tmp_72 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_20;
      real_t tmp_73 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_20;
      real_t tmp_74 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_20;
      real_t tmp_75 = Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_19;
      real_t tmp_76 = tmp_26*tmp_59;
      real_t tmp_77 = tmp_31*tmp_61;
      real_t tmp_78 = Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_19;
      real_t tmp_79 = Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_19;
      real_t tmp_80 = Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_19;
      real_t a_0_0 = tmp_48*(-Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_23 + Scalar_Variable_Coefficient_3D_mu_out0_id0*tmp_25 + tmp_29*tmp_30 + tmp_30*tmp_34) + tmp_50*(-Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_23 + Scalar_Variable_Coefficient_3D_mu_out0_id1*tmp_25 + tmp_29*tmp_49 + tmp_34*tmp_49) + tmp_52*(-Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_23 + Scalar_Variable_Coefficient_3D_mu_out0_id2*tmp_25 + tmp_29*tmp_51 + tmp_34*tmp_51) + tmp_54*(-Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_23 + Scalar_Variable_Coefficient_3D_mu_out0_id3*tmp_25 + tmp_29*tmp_53 + tmp_34*tmp_53);
      real_t a_0_1 = tmp_48*(-tmp_55*tmp_56 + tmp_55*tmp_57 + tmp_58*tmp_60 + tmp_58*tmp_62) + tmp_50*(-tmp_56*tmp_63 + tmp_57*tmp_63 + tmp_60*tmp_64 + tmp_62*tmp_64) + tmp_52*(-tmp_56*tmp_65 + tmp_57*tmp_65 + tmp_60*tmp_66 + tmp_62*tmp_66) + tmp_54*(-tmp_56*tmp_67 + tmp_57*tmp_67 + tmp_60*tmp_68 + tmp_62*tmp_68);
      real_t a_0_2 = tmp_48*(-tmp_56*tmp_69 + tmp_57*tmp_69 + tmp_58*tmp_70 + tmp_58*tmp_71) + tmp_50*(-tmp_56*tmp_72 + tmp_57*tmp_72 + tmp_64*tmp_70 + tmp_64*tmp_71) + tmp_52*(-tmp_56*tmp_73 + tmp_57*tmp_73 + tmp_66*tmp_70 + tmp_66*tmp_71) + tmp_54*(-tmp_56*tmp_74 + tmp_57*tmp_74 + tmp_68*tmp_70 + tmp_68*tmp_71);
      real_t a_0_3 = tmp_48*(-tmp_56*tmp_75 + tmp_57*tmp_75 + tmp_58*tmp_76 + tmp_58*tmp_77) + tmp_50*(-tmp_56*tmp_78 + tmp_57*tmp_78 + tmp_64*tmp_76 + tmp_64*tmp_77) + tmp_52*(-tmp_56*tmp_79 + tmp_57*tmp_79 + tmp_66*tmp_76 + tmp_66*tmp_77) + tmp_54*(-tmp_56*tmp_80 + tmp_57*tmp_80 + tmp_68*tmp_76 + tmp_68*tmp_77);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
   }

   void p1_full_stokesvar_2_2_affine_q2::Scalar_Variable_Coefficient_3D_mu( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback_Scalar_Variable_Coefficient_3D_mu( Point3D( {in_0, in_1, in_2} ) );
   }

} // namespace forms
} // namespace hyteg
