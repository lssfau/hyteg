/*
* Copyright (c) 2023 Andreas Burkhart
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

// This file has been generated with the AHFC. If buggy try fixing the generator itself.

#include "p2_to_p1_divT_blending_q3.hpp"

namespace hyteg {
namespace forms {

   void p2_to_p1_divT_0_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 6 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(1, 0);
      const real_t tmp8 = tmp6*J_B_1(1, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp12 = tmp11*std::abs(tmp5);
      const real_t tmp13 = tmp12*(-tmp10 - tmp9);
      const real_t tmp14 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp15 = tmp4/tmp14;
      const real_t tmp16 = tmp15*J_B_2(1, 0);
      const real_t tmp17 = tmp15*J_B_2(1, 1);
      const real_t tmp18 = tmp0*tmp16 - tmp17*tmp2;
      const real_t tmp19 = tmp1*tmp16 - tmp17*tmp3;
      const real_t tmp20 = tmp11*std::abs(tmp14);
      const real_t tmp21 = tmp20*(-tmp18 - tmp19);
      const real_t tmp22 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp23 = tmp4/tmp22;
      const real_t tmp24 = tmp23*J_B_3(1, 0);
      const real_t tmp25 = tmp23*J_B_3(1, 1);
      const real_t tmp26 = tmp0*tmp24 - tmp2*tmp25;
      const real_t tmp27 = tmp1*tmp24 - tmp25*tmp3;
      const real_t tmp28 = tmp11*std::abs(tmp22);
      const real_t tmp29 = tmp28*(-tmp26 - tmp27);
      const real_t tmp30 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp31 = std::abs(tmp30);
      const real_t tmp32 = tmp4/tmp30;
      const real_t tmp33 = tmp32*J_B_4(1, 0);
      const real_t tmp34 = tmp32*J_B_4(1, 1);
      const real_t tmp35 = tmp0*tmp33 - tmp2*tmp34;
      const real_t tmp36 = tmp1*tmp33 - tmp3*tmp34;
      const real_t tmp37 = -tmp35 - tmp36;
      const real_t tmp38 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp39 = tmp4/tmp38;
      const real_t tmp40 = tmp39*J_B_5(1, 0);
      const real_t tmp41 = tmp39*J_B_5(1, 1);
      const real_t tmp42 = tmp0*tmp40 - tmp2*tmp41;
      const real_t tmp43 = tmp1*tmp40 - tmp3*tmp41;
      const real_t tmp44 = -tmp42 - tmp43;
      const real_t tmp45 = std::abs(tmp38);
      const real_t tmp46 = tmp11*tmp45;
      const real_t tmp47 = tmp44*tmp46;
      const real_t tmp48 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp49 = tmp4/tmp48;
      const real_t tmp50 = tmp49*J_B_6(1, 0);
      const real_t tmp51 = tmp49*J_B_6(1, 1);
      const real_t tmp52 = tmp0*tmp50 - tmp2*tmp51;
      const real_t tmp53 = tmp1*tmp50 - tmp3*tmp51;
      const real_t tmp54 = -tmp52 - tmp53;
      const real_t tmp55 = std::abs(tmp48);
      const real_t tmp56 = tmp11*tmp55;
      const real_t tmp57 = tmp54*tmp56;
      const real_t tmp58 = tmp11*tmp31;
      const real_t tmp59 = tmp37*tmp58;
      const real_t tmp60 = 0.021537728144454479*tmp13 + 0.016449618187943313*tmp57;
      const real_t tmp61 = tmp12*tmp9;
      const real_t tmp62 = tmp18*tmp20;
      const real_t tmp63 = tmp26*tmp28;
      const real_t tmp64 = tmp42*tmp46;
      const real_t tmp65 = tmp52*tmp56;
      const real_t tmp66 = tmp35*tmp58;
      const real_t tmp67 = 0.021537728144454479*tmp61 + 0.016449618187943313*tmp65;
      const real_t tmp68 = tmp10*tmp12;
      const real_t tmp69 = tmp19*tmp20;
      const real_t tmp70 = tmp27*tmp28;
      const real_t tmp71 = tmp43*tmp46;
      const real_t tmp72 = tmp53*tmp56;
      const real_t tmp73 = tmp36*tmp58;
      const real_t tmp74 = 0.021537728144454479*tmp68 + 0.016449618187943313*tmp72;
      elMat(0,0) = 0.028457289286966149*tmp11*tmp31*tmp37 - 0.0053844320361136127*tmp13 - 0.0094636161207672757*tmp21 - 0.0053844320361136231*tmp29 - 0.0041124045469858117*tmp47 - 0.0041124045469858326*tmp57;
      elMat(0,1) = 0.028457289286966173*tmp11*tmp44*tmp45 - 0.0053844320361136223*tmp13 - 0.0053844320361136032*tmp21 - 0.0094636161207672567*tmp29 - 0.0041124045469858282*tmp57 - 0.0041124045469858516*tmp59;
      elMat(0,2) = 0.028457289286966198*tmp11*tmp54*tmp55 - 0.0094636161207672688*tmp13 - 0.0053844320361136466*tmp21 - 0.0053844320361135928*tmp29 - 0.0041124045469858395*tmp47 - 0.0041124045469858204*tmp59;
      elMat(0,3) = 0.088847818743091167*tmp21 + 0.021537728144454461*tmp29 + 0.016449618187943368*tmp47 + 0.0018441552587796545*tmp59 + tmp60;
      elMat(0,4) = 0.021537728144454475*tmp21 + 0.088847818743091223*tmp29 + 0.0018441552587796499*tmp47 + 0.016449618187943264*tmp59 + tmp60;
      elMat(0,5) = 0.088847818743091181*tmp13 + 0.021537728144454499*tmp21 + 0.021537728144454441*tmp29 + 0.016449618187943289*tmp47 + 0.0018441552587796454*tmp57 + 0.016449618187943424*tmp59;
      elMat(1,0) = 0.028457289286966149*tmp11*tmp31*tmp35 - 0.0053844320361136127*tmp61 - 0.0094636161207672757*tmp62 - 0.0053844320361136231*tmp63 - 0.0041124045469858117*tmp64 - 0.0041124045469858326*tmp65;
      elMat(1,1) = 0.028457289286966173*tmp11*tmp42*tmp45 - 0.0053844320361136223*tmp61 - 0.0053844320361136032*tmp62 - 0.0094636161207672567*tmp63 - 0.0041124045469858282*tmp65 - 0.0041124045469858516*tmp66;
      elMat(1,2) = 0.028457289286966198*tmp11*tmp52*tmp55 - 0.0094636161207672688*tmp61 - 0.0053844320361136466*tmp62 - 0.0053844320361135928*tmp63 - 0.0041124045469858395*tmp64 - 0.0041124045469858204*tmp66;
      elMat(1,3) = 0.088847818743091167*tmp62 + 0.021537728144454461*tmp63 + 0.016449618187943368*tmp64 + 0.0018441552587796545*tmp66 + tmp67;
      elMat(1,4) = 0.021537728144454475*tmp62 + 0.088847818743091223*tmp63 + 0.0018441552587796499*tmp64 + 0.016449618187943264*tmp66 + tmp67;
      elMat(1,5) = 0.088847818743091181*tmp61 + 0.021537728144454499*tmp62 + 0.021537728144454441*tmp63 + 0.016449618187943289*tmp64 + 0.0018441552587796454*tmp65 + 0.016449618187943424*tmp66;
      elMat(2,0) = 0.028457289286966149*tmp11*tmp31*tmp36 - 0.0053844320361136127*tmp68 - 0.0094636161207672757*tmp69 - 0.0053844320361136231*tmp70 - 0.0041124045469858117*tmp71 - 0.0041124045469858326*tmp72;
      elMat(2,1) = 0.028457289286966173*tmp11*tmp43*tmp45 - 0.0053844320361136223*tmp68 - 0.0053844320361136032*tmp69 - 0.0094636161207672567*tmp70 - 0.0041124045469858282*tmp72 - 0.0041124045469858516*tmp73;
      elMat(2,2) = 0.028457289286966198*tmp11*tmp53*tmp55 - 0.0094636161207672688*tmp68 - 0.0053844320361136466*tmp69 - 0.0053844320361135928*tmp70 - 0.0041124045469858395*tmp71 - 0.0041124045469858204*tmp73;
      elMat(2,3) = 0.088847818743091167*tmp69 + 0.021537728144454461*tmp70 + 0.016449618187943368*tmp71 + 0.0018441552587796545*tmp73 + tmp74;
      elMat(2,4) = 0.021537728144454475*tmp69 + 0.088847818743091223*tmp70 + 0.0018441552587796499*tmp71 + 0.016449618187943264*tmp73 + tmp74;
      elMat(2,5) = 0.088847818743091181*tmp68 + 0.021537728144454499*tmp69 + 0.021537728144454441*tmp70 + 0.016449618187943289*tmp71 + 0.0018441552587796454*tmp72 + 0.016449618187943424*tmp73;
   }

   void p2_to_p1_divT_0_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][0] - coords[2][0];
      const real_t tmp4 = coords[0][1] - coords[1][1];
      const real_t tmp5 = 1.0 / (tmp1*tmp2 - tmp3*tmp4);
      const real_t tmp6 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = 1.0 / (tmp6);
      const real_t tmp8 = tmp5*tmp7*J_B_1(1, 0);
      const real_t tmp9 = tmp0*(-tmp1*tmp8 + tmp2*tmp5*tmp7*J_B_1(1, 1) - tmp3*tmp8 + tmp4*tmp5*tmp7*J_B_1(1, 1))*std::abs(tmp6);
      const real_t tmp10 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp11 = 1.0 / (tmp10);
      const real_t tmp12 = tmp11*tmp5*J_B_2(1, 0);
      const real_t tmp13 = tmp0*(-tmp1*tmp12 + tmp11*tmp2*tmp5*J_B_2(1, 1) + tmp11*tmp4*tmp5*J_B_2(1, 1) - tmp12*tmp3)*std::abs(tmp10);
      const real_t tmp14 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp15 = 1.0 / (tmp14);
      const real_t tmp16 = tmp15*tmp5*J_B_3(1, 0);
      const real_t tmp17 = tmp0*(-tmp1*tmp16 + tmp15*tmp2*tmp5*J_B_3(1, 1) + tmp15*tmp4*tmp5*J_B_3(1, 1) - tmp16*tmp3)*std::abs(tmp14);
      const real_t tmp18 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp19 = std::abs(tmp18);
      const real_t tmp20 = 1.0 / (tmp18);
      const real_t tmp21 = tmp20*tmp5*J_B_4(1, 0);
      const real_t tmp22 = -tmp1*tmp21 + tmp2*tmp20*tmp5*J_B_4(1, 1) + tmp20*tmp4*tmp5*J_B_4(1, 1) - tmp21*tmp3;
      const real_t tmp23 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp24 = 1.0 / (tmp23);
      const real_t tmp25 = tmp24*tmp5*J_B_5(1, 0);
      const real_t tmp26 = -tmp1*tmp25 + tmp2*tmp24*tmp5*J_B_5(1, 1) + tmp24*tmp4*tmp5*J_B_5(1, 1) - tmp25*tmp3;
      const real_t tmp27 = std::abs(tmp23);
      const real_t tmp28 = tmp0*tmp26*tmp27;
      const real_t tmp29 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp30 = 1.0 / (tmp29);
      const real_t tmp31 = tmp30*tmp5*J_B_6(1, 0);
      const real_t tmp32 = -tmp1*tmp31 + tmp2*tmp30*tmp5*J_B_6(1, 1) - tmp3*tmp31 + tmp30*tmp4*tmp5*J_B_6(1, 1);
      const real_t tmp33 = std::abs(tmp29);
      const real_t tmp34 = tmp0*tmp32*tmp33;
      const real_t tmp35 = tmp0*tmp19*tmp22;
      const real_t tmp36 = 0.016449618187943313*tmp34 + 0.021537728144454479*tmp9;
      elMat(0,0) = 0.028457289286966149*tmp0*tmp19*tmp22 - 0.0094636161207672757*tmp13 - 0.0053844320361136231*tmp17 - 0.0041124045469858117*tmp28 - 0.0041124045469858326*tmp34 - 0.0053844320361136127*tmp9;
      elMat(0,1) = 0.028457289286966173*tmp0*tmp26*tmp27 - 0.0053844320361136032*tmp13 - 0.0094636161207672567*tmp17 - 0.0041124045469858282*tmp34 - 0.0041124045469858516*tmp35 - 0.0053844320361136223*tmp9;
      elMat(0,2) = 0.028457289286966198*tmp0*tmp32*tmp33 - 0.0053844320361136466*tmp13 - 0.0053844320361135928*tmp17 - 0.0041124045469858395*tmp28 - 0.0041124045469858204*tmp35 - 0.0094636161207672688*tmp9;
      elMat(0,3) = 0.088847818743091167*tmp13 + 0.021537728144454461*tmp17 + 0.016449618187943368*tmp28 + 0.0018441552587796545*tmp35 + tmp36;
      elMat(0,4) = 0.021537728144454475*tmp13 + 0.088847818743091223*tmp17 + 0.0018441552587796499*tmp28 + 0.016449618187943264*tmp35 + tmp36;
      elMat(0,5) = 0.021537728144454499*tmp13 + 0.021537728144454441*tmp17 + 0.016449618187943289*tmp28 + 0.0018441552587796454*tmp34 + 0.016449618187943424*tmp35 + 0.088847818743091181*tmp9;
   }

   void p2_to_p1_divT_0_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 10 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp6 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp20 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp21 = tmp18*J_B_1(0, 0) - tmp19*J_B_1(0, 0) - tmp20*J_B_1(0, 1) + tmp5*J_B_1(0, 2) - tmp6*J_B_1(0, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp20 + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp19);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = coords[0][0]*coords[1][1];
      const real_t tmp38 = coords[0][0]*coords[1][2];
      const real_t tmp39 = coords[2][1]*coords[3][2];
      const real_t tmp40 = coords[0][1]*coords[1][0];
      const real_t tmp41 = coords[0][1]*coords[1][2];
      const real_t tmp42 = coords[2][2]*coords[3][0];
      const real_t tmp43 = coords[0][2]*coords[1][0];
      const real_t tmp44 = coords[0][2]*coords[1][1];
      const real_t tmp45 = coords[2][0]*coords[3][1];
      const real_t tmp46 = coords[2][2]*coords[3][1];
      const real_t tmp47 = coords[2][0]*coords[3][2];
      const real_t tmp48 = coords[2][1]*coords[3][0];
      const real_t tmp49 = std::abs(coords[0][0]*tmp39 - coords[0][0]*tmp46 + coords[0][1]*tmp42 - coords[0][1]*tmp47 + coords[0][2]*tmp45 - coords[0][2]*tmp48 - coords[1][0]*tmp39 + coords[1][0]*tmp46 - coords[1][1]*tmp42 + coords[1][1]*tmp47 - coords[1][2]*tmp45 + coords[1][2]*tmp48 + coords[2][0]*tmp41 - coords[2][0]*tmp44 - coords[2][1]*tmp38 + coords[2][1]*tmp43 + coords[2][2]*tmp37 - coords[2][2]*tmp40 - coords[3][0]*tmp41 + coords[3][0]*tmp44 + coords[3][1]*tmp38 - coords[3][1]*tmp43 - coords[3][2]*tmp37 + coords[3][2]*tmp40);
      const real_t tmp50 = tmp49*std::abs(tmp21);
      const real_t tmp51 = tmp50*(tmp28 + tmp32 + tmp36);
      const real_t tmp52 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp53 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp54 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp55 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp56 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp57 = tmp52*J_B_2(0, 2) - tmp53*J_B_2(0, 2) + tmp54*J_B_2(0, 0) - tmp55*J_B_2(0, 0) - tmp56*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp58 = tmp17/tmp57;
      const real_t tmp59 = tmp58*(tmp52 - tmp53);
      const real_t tmp60 = tmp58*(-tmp56 + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp61 = tmp58*(tmp54 - tmp55);
      const real_t tmp62 = tmp24*tmp60 + tmp26*tmp61 + tmp4*tmp59;
      const real_t tmp63 = tmp29*tmp59 + tmp30*tmp60 + tmp31*tmp61;
      const real_t tmp64 = tmp33*tmp59 + tmp34*tmp60 + tmp35*tmp61;
      const real_t tmp65 = tmp62 + tmp63 + tmp64;
      const real_t tmp66 = std::abs(tmp57);
      const real_t tmp67 = tmp49*tmp66;
      const real_t tmp68 = tmp65*tmp67;
      const real_t tmp69 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp70 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp71 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp72 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp73 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp74 = tmp69*J_B_3(0, 2) - tmp70*J_B_3(0, 2) + tmp71*J_B_3(0, 0) - tmp72*J_B_3(0, 0) - tmp73*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp75 = tmp17/tmp74;
      const real_t tmp76 = tmp75*(tmp69 - tmp70);
      const real_t tmp77 = tmp75*(-tmp73 + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp78 = tmp75*(tmp71 - tmp72);
      const real_t tmp79 = tmp24*tmp77 + tmp26*tmp78 + tmp4*tmp76;
      const real_t tmp80 = tmp29*tmp76 + tmp30*tmp77 + tmp31*tmp78;
      const real_t tmp81 = tmp33*tmp76 + tmp34*tmp77 + tmp35*tmp78;
      const real_t tmp82 = tmp49*std::abs(tmp74);
      const real_t tmp83 = tmp82*(tmp79 + tmp80 + tmp81);
      const real_t tmp84 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp85 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp86 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp87 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp88 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp89 = tmp84*J_B_4(0, 2) - tmp85*J_B_4(0, 2) + tmp86*J_B_4(0, 0) - tmp87*J_B_4(0, 0) - tmp88*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp90 = tmp17/tmp89;
      const real_t tmp91 = tmp90*(tmp84 - tmp85);
      const real_t tmp92 = tmp90*(-tmp88 + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp93 = tmp90*(tmp86 - tmp87);
      const real_t tmp94 = tmp24*tmp92 + tmp26*tmp93 + tmp4*tmp91;
      const real_t tmp95 = tmp29*tmp91 + tmp30*tmp92 + tmp31*tmp93;
      const real_t tmp96 = tmp33*tmp91 + tmp34*tmp92 + tmp35*tmp93;
      const real_t tmp97 = tmp94 + tmp95 + tmp96;
      const real_t tmp98 = std::abs(tmp89);
      const real_t tmp99 = tmp49*tmp98;
      const real_t tmp100 = tmp97*tmp99;
      const real_t tmp101 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp102 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp103 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp104 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp105 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp106 = tmp101*J_B_5(0, 0) + tmp102*J_B_5(0, 2) - tmp103*J_B_5(0, 0) - tmp104*J_B_5(0, 1) - tmp105*J_B_5(0, 2) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp107 = std::abs(tmp106);
      const real_t tmp108 = tmp17/tmp106;
      const real_t tmp109 = tmp108*(tmp102 - tmp105);
      const real_t tmp110 = tmp108*(-tmp104 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp111 = tmp108*(tmp101 - tmp103);
      const real_t tmp112 = tmp109*tmp4 + tmp110*tmp24 + tmp111*tmp26;
      const real_t tmp113 = tmp109*tmp29 + tmp110*tmp30 + tmp111*tmp31;
      const real_t tmp114 = tmp109*tmp33 + tmp110*tmp34 + tmp111*tmp35;
      const real_t tmp115 = tmp112 + tmp113 + tmp114;
      const real_t tmp116 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp117 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp118 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp119 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp120 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp121 = tmp116*J_B_6(0, 2) - tmp117*J_B_6(0, 2) + tmp118*J_B_6(0, 0) - tmp119*J_B_6(0, 0) - tmp120*J_B_6(0, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp122 = tmp17/tmp121;
      const real_t tmp123 = tmp122*(tmp116 - tmp117);
      const real_t tmp124 = tmp122*(-tmp120 + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp125 = tmp122*(tmp118 - tmp119);
      const real_t tmp126 = tmp123*tmp4 + tmp124*tmp24 + tmp125*tmp26;
      const real_t tmp127 = tmp123*tmp29 + tmp124*tmp30 + tmp125*tmp31;
      const real_t tmp128 = tmp123*tmp33 + tmp124*tmp34 + tmp125*tmp35;
      const real_t tmp129 = tmp126 + tmp127 + tmp128;
      const real_t tmp130 = std::abs(tmp121);
      const real_t tmp131 = tmp130*tmp49;
      const real_t tmp132 = tmp129*tmp131;
      const real_t tmp133 = tmp107*tmp49;
      const real_t tmp134 = tmp115*tmp133;
      const real_t tmp135 = -tmp28*tmp50;
      const real_t tmp136 = -tmp62;
      const real_t tmp137 = tmp136*tmp67;
      const real_t tmp138 = -tmp79*tmp82;
      const real_t tmp139 = -tmp94;
      const real_t tmp140 = tmp139*tmp99;
      const real_t tmp141 = -tmp112;
      const real_t tmp142 = -tmp126;
      const real_t tmp143 = tmp131*tmp142;
      const real_t tmp144 = tmp133*tmp141;
      const real_t tmp145 = -tmp32*tmp50;
      const real_t tmp146 = -tmp63;
      const real_t tmp147 = tmp146*tmp67;
      const real_t tmp148 = -tmp80*tmp82;
      const real_t tmp149 = -tmp95;
      const real_t tmp150 = tmp149*tmp99;
      const real_t tmp151 = -tmp113;
      const real_t tmp152 = -tmp127;
      const real_t tmp153 = tmp131*tmp152;
      const real_t tmp154 = tmp133*tmp151;
      const real_t tmp155 = -tmp36*tmp50;
      const real_t tmp156 = -tmp64;
      const real_t tmp157 = tmp156*tmp67;
      const real_t tmp158 = -tmp81*tmp82;
      const real_t tmp159 = -tmp96;
      const real_t tmp160 = tmp159*tmp99;
      const real_t tmp161 = -tmp114;
      const real_t tmp162 = -tmp128;
      const real_t tmp163 = tmp131*tmp162;
      const real_t tmp164 = tmp133*tmp161;
      elMat(0,0) = -0.0042405447626545044*tmp100 + 0.0041450002922359102*tmp107*tmp115*tmp49 - 0.00025269386627013875*tmp132 - 0.0022404676699064132*tmp51 - 0.0036132788939563306*tmp68 - 0.0021313484327818407*tmp83;
      elMat(0,1) = -0.0022326318989993247*tmp132 - 0.0026357720909823278*tmp134 + 0.0034176928206344891*tmp49*tmp97*tmp98 - 0.0026033720926380141*tmp51 - 0.0040515615452833059*tmp68 - 0.00022768852606484032*tmp83;
      elMat(0,2) = -0.0042608838854467819*tmp100 + 0.0036989065262070654*tmp129*tmp130*tmp49 - 0.00082038196529565332*tmp134 - 0.0011689663037258728*tmp51 - 0.0035028348104554873*tmp68 - 0.0022791728946165873*tmp83;
      elMat(0,3) = -0.0043575000963585958*tmp100 - 0.0023699571574974814*tmp132 - 0.002486974873195249*tmp134 + 0.0037529336676914667*tmp49*tmp65*tmp66 - 0.0002462066126594296*tmp51 - 0.0026256282613140542*tmp83;
      elMat(0,4) = 0.0034921734127835191*tmp100 + 0.0096167187137706934*tmp132 + 0.00054257326398419006*tmp134 + 0.00044329479947359041*tmp51 + 0.010935536503362953*tmp68 + 0.0083030366399583916*tmp83;
      elMat(0,5) = 0.014099389531484405*tmp100 + 0.0024288282171041273*tmp132 + 0.0024472327245663697*tmp134 + 0.00019160205543901311*tmp51 + 0.01390416498932678*tmp68 + 0.00026211581541268848*tmp83;
      elMat(0,6) = 0.013577744969985461*tmp100 + 0.0084738635129386185*tmp132 + 0.00060647705014558399*tmp134 + 0.007390637873140378*tmp51 + 0.002962980367302638*tmp68 + 0.00032162955982062511*tmp83;
      elMat(0,7) = 0.003464776967145998*tmp100 + 0.0001906817440645623*tmp132 + 0.0091474641436934817*tmp134 + 0.00036142199952063125*tmp51 + 0.011464969934767404*tmp68 + 0.0087040185441412451*tmp83;
      elMat(0,8) = 0.0033365882921907761*tmp100 + 0.00066526362886985618*tmp132 + 0.0022669389038848914*tmp134 + 0.013941077572069804*tmp51 + 0.0024431874085576156*tmp68 + 0.01068027752776031*tmp83;
      elMat(0,9) = 0.013471226218485708*tmp100 + 0.0001680210393695334*tmp132 + 0.010224844161029978*tmp134 + 0.0060256495700271246*tmp51 + 0.0031064301982791655*tmp68 + 0.00033716214614184028*tmp83;
      elMat(1,0) = 0.0041450002922359102*tmp107*tmp141*tmp49 - 0.0022404676699064132*tmp135 - 0.0036132788939563306*tmp137 - 0.0021313484327818407*tmp138 - 0.0042405447626545044*tmp140 - 0.00025269386627013875*tmp143;
      elMat(1,1) = -0.0026033720926380141*tmp135 - 0.0040515615452833059*tmp137 - 0.00022768852606484032*tmp138 + 0.0034176928206344891*tmp139*tmp49*tmp98 - 0.0022326318989993247*tmp143 - 0.0026357720909823278*tmp144;
      elMat(1,2) = 0.0036989065262070654*tmp130*tmp142*tmp49 - 0.0011689663037258728*tmp135 - 0.0035028348104554873*tmp137 - 0.0022791728946165873*tmp138 - 0.0042608838854467819*tmp140 - 0.00082038196529565332*tmp144;
      elMat(1,3) = -0.0002462066126594296*tmp135 + 0.0037529336676914667*tmp136*tmp49*tmp66 - 0.0026256282613140542*tmp138 - 0.0043575000963585958*tmp140 - 0.0023699571574974814*tmp143 - 0.002486974873195249*tmp144;
      elMat(1,4) = 0.00044329479947359041*tmp135 + 0.010935536503362953*tmp137 + 0.0083030366399583916*tmp138 + 0.0034921734127835191*tmp140 + 0.0096167187137706934*tmp143 + 0.00054257326398419006*tmp144;
      elMat(1,5) = 0.00019160205543901311*tmp135 + 0.01390416498932678*tmp137 + 0.00026211581541268848*tmp138 + 0.014099389531484405*tmp140 + 0.0024288282171041273*tmp143 + 0.0024472327245663697*tmp144;
      elMat(1,6) = 0.007390637873140378*tmp135 + 0.002962980367302638*tmp137 + 0.00032162955982062511*tmp138 + 0.013577744969985461*tmp140 + 0.0084738635129386185*tmp143 + 0.00060647705014558399*tmp144;
      elMat(1,7) = 0.00036142199952063125*tmp135 + 0.011464969934767404*tmp137 + 0.0087040185441412451*tmp138 + 0.003464776967145998*tmp140 + 0.0001906817440645623*tmp143 + 0.0091474641436934817*tmp144;
      elMat(1,8) = 0.013941077572069804*tmp135 + 0.0024431874085576156*tmp137 + 0.01068027752776031*tmp138 + 0.0033365882921907761*tmp140 + 0.00066526362886985618*tmp143 + 0.0022669389038848914*tmp144;
      elMat(1,9) = 0.0060256495700271246*tmp135 + 0.0031064301982791655*tmp137 + 0.00033716214614184028*tmp138 + 0.013471226218485708*tmp140 + 0.0001680210393695334*tmp143 + 0.010224844161029978*tmp144;
      elMat(2,0) = 0.0041450002922359102*tmp107*tmp151*tmp49 - 0.0022404676699064132*tmp145 - 0.0036132788939563306*tmp147 - 0.0021313484327818407*tmp148 - 0.0042405447626545044*tmp150 - 0.00025269386627013875*tmp153;
      elMat(2,1) = -0.0026033720926380141*tmp145 - 0.0040515615452833059*tmp147 - 0.00022768852606484032*tmp148 + 0.0034176928206344891*tmp149*tmp49*tmp98 - 0.0022326318989993247*tmp153 - 0.0026357720909823278*tmp154;
      elMat(2,2) = 0.0036989065262070654*tmp130*tmp152*tmp49 - 0.0011689663037258728*tmp145 - 0.0035028348104554873*tmp147 - 0.0022791728946165873*tmp148 - 0.0042608838854467819*tmp150 - 0.00082038196529565332*tmp154;
      elMat(2,3) = -0.0002462066126594296*tmp145 + 0.0037529336676914667*tmp146*tmp49*tmp66 - 0.0026256282613140542*tmp148 - 0.0043575000963585958*tmp150 - 0.0023699571574974814*tmp153 - 0.002486974873195249*tmp154;
      elMat(2,4) = 0.00044329479947359041*tmp145 + 0.010935536503362953*tmp147 + 0.0083030366399583916*tmp148 + 0.0034921734127835191*tmp150 + 0.0096167187137706934*tmp153 + 0.00054257326398419006*tmp154;
      elMat(2,5) = 0.00019160205543901311*tmp145 + 0.01390416498932678*tmp147 + 0.00026211581541268848*tmp148 + 0.014099389531484405*tmp150 + 0.0024288282171041273*tmp153 + 0.0024472327245663697*tmp154;
      elMat(2,6) = 0.007390637873140378*tmp145 + 0.002962980367302638*tmp147 + 0.00032162955982062511*tmp148 + 0.013577744969985461*tmp150 + 0.0084738635129386185*tmp153 + 0.00060647705014558399*tmp154;
      elMat(2,7) = 0.00036142199952063125*tmp145 + 0.011464969934767404*tmp147 + 0.0087040185441412451*tmp148 + 0.003464776967145998*tmp150 + 0.0001906817440645623*tmp153 + 0.0091474641436934817*tmp154;
      elMat(2,8) = 0.013941077572069804*tmp145 + 0.0024431874085576156*tmp147 + 0.01068027752776031*tmp148 + 0.0033365882921907761*tmp150 + 0.00066526362886985618*tmp153 + 0.0022669389038848914*tmp154;
      elMat(2,9) = 0.0060256495700271246*tmp145 + 0.0031064301982791655*tmp147 + 0.00033716214614184028*tmp148 + 0.013471226218485708*tmp150 + 0.0001680210393695334*tmp153 + 0.010224844161029978*tmp154;
      elMat(3,0) = 0.0041450002922359102*tmp107*tmp161*tmp49 - 0.0022404676699064132*tmp155 - 0.0036132788939563306*tmp157 - 0.0021313484327818407*tmp158 - 0.0042405447626545044*tmp160 - 0.00025269386627013875*tmp163;
      elMat(3,1) = -0.0026033720926380141*tmp155 - 0.0040515615452833059*tmp157 - 0.00022768852606484032*tmp158 + 0.0034176928206344891*tmp159*tmp49*tmp98 - 0.0022326318989993247*tmp163 - 0.0026357720909823278*tmp164;
      elMat(3,2) = 0.0036989065262070654*tmp130*tmp162*tmp49 - 0.0011689663037258728*tmp155 - 0.0035028348104554873*tmp157 - 0.0022791728946165873*tmp158 - 0.0042608838854467819*tmp160 - 0.00082038196529565332*tmp164;
      elMat(3,3) = -0.0002462066126594296*tmp155 + 0.0037529336676914667*tmp156*tmp49*tmp66 - 0.0026256282613140542*tmp158 - 0.0043575000963585958*tmp160 - 0.0023699571574974814*tmp163 - 0.002486974873195249*tmp164;
      elMat(3,4) = 0.00044329479947359041*tmp155 + 0.010935536503362953*tmp157 + 0.0083030366399583916*tmp158 + 0.0034921734127835191*tmp160 + 0.0096167187137706934*tmp163 + 0.00054257326398419006*tmp164;
      elMat(3,5) = 0.00019160205543901311*tmp155 + 0.01390416498932678*tmp157 + 0.00026211581541268848*tmp158 + 0.014099389531484405*tmp160 + 0.0024288282171041273*tmp163 + 0.0024472327245663697*tmp164;
      elMat(3,6) = 0.007390637873140378*tmp155 + 0.002962980367302638*tmp157 + 0.00032162955982062511*tmp158 + 0.013577744969985461*tmp160 + 0.0084738635129386185*tmp163 + 0.00060647705014558399*tmp164;
      elMat(3,7) = 0.00036142199952063125*tmp155 + 0.011464969934767404*tmp157 + 0.0087040185441412451*tmp158 + 0.003464776967145998*tmp160 + 0.0001906817440645623*tmp163 + 0.0091474641436934817*tmp164;
      elMat(3,8) = 0.013941077572069804*tmp155 + 0.0024431874085576156*tmp157 + 0.01068027752776031*tmp158 + 0.0033365882921907761*tmp160 + 0.00066526362886985618*tmp163 + 0.0022669389038848914*tmp164;
      elMat(3,9) = 0.0060256495700271246*tmp155 + 0.0031064301982791655*tmp157 + 0.00033716214614184028*tmp158 + 0.013471226218485708*tmp160 + 0.0001680210393695334*tmp163 + 0.010224844161029978*tmp164;
   }

   void p2_to_p1_divT_0_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = coords[0][0]*coords[1][1];
      const real_t tmp1 = coords[0][0]*coords[1][2];
      const real_t tmp2 = coords[2][1]*coords[3][2];
      const real_t tmp3 = coords[0][1]*coords[1][0];
      const real_t tmp4 = coords[0][1]*coords[1][2];
      const real_t tmp5 = coords[2][2]*coords[3][0];
      const real_t tmp6 = coords[0][2]*coords[1][0];
      const real_t tmp7 = coords[0][2]*coords[1][1];
      const real_t tmp8 = coords[2][0]*coords[3][1];
      const real_t tmp9 = coords[2][2]*coords[3][1];
      const real_t tmp10 = coords[2][0]*coords[3][2];
      const real_t tmp11 = coords[2][1]*coords[3][0];
      const real_t tmp12 = std::abs(coords[0][0]*tmp2 - coords[0][0]*tmp9 - coords[0][1]*tmp10 + coords[0][1]*tmp5 - coords[0][2]*tmp11 + coords[0][2]*tmp8 - coords[1][0]*tmp2 + coords[1][0]*tmp9 + coords[1][1]*tmp10 - coords[1][1]*tmp5 + coords[1][2]*tmp11 - coords[1][2]*tmp8 + coords[2][0]*tmp4 - coords[2][0]*tmp7 - coords[2][1]*tmp1 + coords[2][1]*tmp6 + coords[2][2]*tmp0 - coords[2][2]*tmp3 - coords[3][0]*tmp4 + coords[3][0]*tmp7 + coords[3][1]*tmp1 - coords[3][1]*tmp6 - coords[3][2]*tmp0 + coords[3][2]*tmp3);
      const real_t tmp13 = -coords[0][0] + coords[1][0];
      const real_t tmp14 = -coords[0][1] + coords[2][1];
      const real_t tmp15 = tmp13*tmp14;
      const real_t tmp16 = -coords[0][0] + coords[2][0];
      const real_t tmp17 = -coords[0][1] + coords[1][1];
      const real_t tmp18 = tmp16*tmp17;
      const real_t tmp19 = tmp15 - tmp18;
      const real_t tmp20 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp21 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp22 = -coords[0][2] + coords[3][2];
      const real_t tmp23 = -coords[0][1] + coords[3][1];
      const real_t tmp24 = -coords[0][2] + coords[1][2];
      const real_t tmp25 = -coords[0][0] + coords[3][0];
      const real_t tmp26 = -coords[0][2] + coords[2][2];
      const real_t tmp27 = tmp17*tmp26;
      const real_t tmp28 = tmp13*tmp23;
      const real_t tmp29 = tmp24*tmp25;
      const real_t tmp30 = 1.0 / (-tmp14*tmp29 + tmp15*tmp22 + tmp16*tmp23*tmp24 - tmp18*tmp22 + tmp25*tmp27 - tmp26*tmp28);
      const real_t tmp31 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp32 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp33 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp34 = tmp20*J_B_1(0, 2) - tmp21*J_B_1(0, 2) + tmp31*J_B_1(0, 0) - tmp32*J_B_1(0, 0) - tmp33*J_B_1(0, 1) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp35 = tmp30/tmp34;
      const real_t tmp36 = tmp35*(tmp20 - tmp21);
      const real_t tmp37 = tmp17*tmp25 - tmp28;
      const real_t tmp38 = -tmp13*tmp26 + tmp16*tmp24;
      const real_t tmp39 = tmp35*(-tmp33 + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp40 = tmp13*tmp22 - tmp29;
      const real_t tmp41 = -tmp14*tmp25 + tmp16*tmp23;
      const real_t tmp42 = -tmp16*tmp22 + tmp25*tmp26;
      const real_t tmp43 = -tmp14*tmp24 + tmp27;
      const real_t tmp44 = tmp35*(tmp31 - tmp32);
      const real_t tmp45 = -tmp17*tmp22 + tmp23*tmp24;
      const real_t tmp46 = tmp14*tmp22 - tmp23*tmp26;
      const real_t tmp47 = tmp12*(tmp19*tmp36 + tmp36*tmp37 + tmp36*tmp41 + tmp38*tmp39 + tmp39*tmp40 + tmp39*tmp42 + tmp43*tmp44 + tmp44*tmp45 + tmp44*tmp46)*std::abs(tmp34);
      const real_t tmp48 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp49 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp50 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp51 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp52 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp53 = tmp48*J_B_2(0, 2) - tmp49*J_B_2(0, 2) + tmp50*J_B_2(0, 0) - tmp51*J_B_2(0, 0) - tmp52*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp54 = tmp30/tmp53;
      const real_t tmp55 = tmp54*(tmp48 - tmp49);
      const real_t tmp56 = tmp54*(-tmp52 + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp57 = tmp54*(tmp50 - tmp51);
      const real_t tmp58 = tmp19*tmp55 + tmp37*tmp55 + tmp38*tmp56 + tmp40*tmp56 + tmp41*tmp55 + tmp42*tmp56 + tmp43*tmp57 + tmp45*tmp57 + tmp46*tmp57;
      const real_t tmp59 = std::abs(tmp53);
      const real_t tmp60 = tmp12*tmp58*tmp59;
      const real_t tmp61 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp62 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp63 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp64 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp65 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp66 = tmp61*J_B_3(0, 2) - tmp62*J_B_3(0, 2) + tmp63*J_B_3(0, 0) - tmp64*J_B_3(0, 0) - tmp65*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp67 = tmp30/tmp66;
      const real_t tmp68 = tmp67*(tmp61 - tmp62);
      const real_t tmp69 = tmp67*(-tmp65 + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp70 = tmp67*(tmp63 - tmp64);
      const real_t tmp71 = tmp12*(tmp19*tmp68 + tmp37*tmp68 + tmp38*tmp69 + tmp40*tmp69 + tmp41*tmp68 + tmp42*tmp69 + tmp43*tmp70 + tmp45*tmp70 + tmp46*tmp70)*std::abs(tmp66);
      const real_t tmp72 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp73 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp74 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp75 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp76 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp77 = tmp72*J_B_4(0, 2) - tmp73*J_B_4(0, 2) + tmp74*J_B_4(0, 0) - tmp75*J_B_4(0, 0) - tmp76*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp78 = tmp30/tmp77;
      const real_t tmp79 = tmp78*(tmp72 - tmp73);
      const real_t tmp80 = tmp78*(-tmp76 + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp81 = tmp78*(tmp74 - tmp75);
      const real_t tmp82 = tmp19*tmp79 + tmp37*tmp79 + tmp38*tmp80 + tmp40*tmp80 + tmp41*tmp79 + tmp42*tmp80 + tmp43*tmp81 + tmp45*tmp81 + tmp46*tmp81;
      const real_t tmp83 = std::abs(tmp77);
      const real_t tmp84 = tmp12*tmp82*tmp83;
      const real_t tmp85 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp86 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp87 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp88 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp89 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp90 = tmp85*J_B_5(0, 0) + tmp86*J_B_5(0, 2) - tmp87*J_B_5(0, 0) - tmp88*J_B_5(0, 1) - tmp89*J_B_5(0, 2) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp91 = std::abs(tmp90);
      const real_t tmp92 = tmp30/tmp90;
      const real_t tmp93 = tmp92*(tmp86 - tmp89);
      const real_t tmp94 = tmp92*(-tmp88 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp95 = tmp92*(tmp85 - tmp87);
      const real_t tmp96 = tmp19*tmp93 + tmp37*tmp93 + tmp38*tmp94 + tmp40*tmp94 + tmp41*tmp93 + tmp42*tmp94 + tmp43*tmp95 + tmp45*tmp95 + tmp46*tmp95;
      const real_t tmp97 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp98 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp99 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp100 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp101 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp102 = -tmp100*J_B_6(0, 0) - tmp101*J_B_6(0, 1) + tmp97*J_B_6(0, 2) - tmp98*J_B_6(0, 2) + tmp99*J_B_6(0, 0) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp103 = tmp30/tmp102;
      const real_t tmp104 = tmp103*(tmp97 - tmp98);
      const real_t tmp105 = tmp103*(-tmp101 + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp106 = tmp103*(-tmp100 + tmp99);
      const real_t tmp107 = tmp104*tmp19 + tmp104*tmp37 + tmp104*tmp41 + tmp105*tmp38 + tmp105*tmp40 + tmp105*tmp42 + tmp106*tmp43 + tmp106*tmp45 + tmp106*tmp46;
      const real_t tmp108 = std::abs(tmp102);
      const real_t tmp109 = tmp107*tmp108*tmp12;
      const real_t tmp110 = tmp12*tmp91*tmp96;
      elMat(0,0) = -0.00025269386627013875*tmp109 + 0.0041450002922359102*tmp12*tmp91*tmp96 - 0.0022404676699064132*tmp47 - 0.0036132788939563306*tmp60 - 0.0021313484327818407*tmp71 - 0.0042405447626545044*tmp84;
      elMat(0,1) = -0.0022326318989993247*tmp109 - 0.0026357720909823278*tmp110 + 0.0034176928206344891*tmp12*tmp82*tmp83 - 0.0026033720926380141*tmp47 - 0.0040515615452833059*tmp60 - 0.00022768852606484032*tmp71;
      elMat(0,2) = 0.0036989065262070654*tmp107*tmp108*tmp12 - 0.00082038196529565332*tmp110 - 0.0011689663037258728*tmp47 - 0.0035028348104554873*tmp60 - 0.0022791728946165873*tmp71 - 0.0042608838854467819*tmp84;
      elMat(0,3) = -0.0023699571574974814*tmp109 - 0.002486974873195249*tmp110 + 0.0037529336676914667*tmp12*tmp58*tmp59 - 0.0002462066126594296*tmp47 - 0.0026256282613140542*tmp71 - 0.0043575000963585958*tmp84;
      elMat(0,4) = 0.0096167187137706934*tmp109 + 0.00054257326398419006*tmp110 + 0.00044329479947359041*tmp47 + 0.010935536503362953*tmp60 + 0.0083030366399583916*tmp71 + 0.0034921734127835191*tmp84;
      elMat(0,5) = 0.0024288282171041273*tmp109 + 0.0024472327245663697*tmp110 + 0.00019160205543901311*tmp47 + 0.01390416498932678*tmp60 + 0.00026211581541268848*tmp71 + 0.014099389531484405*tmp84;
      elMat(0,6) = 0.0084738635129386185*tmp109 + 0.00060647705014558399*tmp110 + 0.007390637873140378*tmp47 + 0.002962980367302638*tmp60 + 0.00032162955982062511*tmp71 + 0.013577744969985461*tmp84;
      elMat(0,7) = 0.0001906817440645623*tmp109 + 0.0091474641436934817*tmp110 + 0.00036142199952063125*tmp47 + 0.011464969934767404*tmp60 + 0.0087040185441412451*tmp71 + 0.003464776967145998*tmp84;
      elMat(0,8) = 0.00066526362886985618*tmp109 + 0.0022669389038848914*tmp110 + 0.013941077572069804*tmp47 + 0.0024431874085576156*tmp60 + 0.01068027752776031*tmp71 + 0.0033365882921907761*tmp84;
      elMat(0,9) = 0.0001680210393695334*tmp109 + 0.010224844161029978*tmp110 + 0.0060256495700271246*tmp47 + 0.0031064301982791655*tmp60 + 0.00033716214614184028*tmp71 + 0.013471226218485708*tmp84;
   }

   void p2_to_p1_divT_1_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 6 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(0, 0);
      const real_t tmp8 = tmp6*J_B_1(0, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp12 = tmp11*std::abs(tmp5);
      const real_t tmp13 = tmp12*(tmp10 + tmp9);
      const real_t tmp14 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp15 = tmp4/tmp14;
      const real_t tmp16 = tmp15*J_B_2(0, 0);
      const real_t tmp17 = tmp15*J_B_2(0, 1);
      const real_t tmp18 = tmp0*tmp16 - tmp17*tmp2;
      const real_t tmp19 = tmp1*tmp16 - tmp17*tmp3;
      const real_t tmp20 = tmp11*std::abs(tmp14);
      const real_t tmp21 = tmp20*(tmp18 + tmp19);
      const real_t tmp22 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp23 = tmp4/tmp22;
      const real_t tmp24 = tmp23*J_B_3(0, 0);
      const real_t tmp25 = tmp23*J_B_3(0, 1);
      const real_t tmp26 = tmp0*tmp24 - tmp2*tmp25;
      const real_t tmp27 = tmp1*tmp24 - tmp25*tmp3;
      const real_t tmp28 = tmp11*std::abs(tmp22);
      const real_t tmp29 = tmp28*(tmp26 + tmp27);
      const real_t tmp30 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp31 = std::abs(tmp30);
      const real_t tmp32 = tmp4/tmp30;
      const real_t tmp33 = tmp32*J_B_4(0, 0);
      const real_t tmp34 = tmp32*J_B_4(0, 1);
      const real_t tmp35 = tmp0*tmp33 - tmp2*tmp34;
      const real_t tmp36 = tmp1*tmp33 - tmp3*tmp34;
      const real_t tmp37 = tmp35 + tmp36;
      const real_t tmp38 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp39 = tmp4/tmp38;
      const real_t tmp40 = tmp39*J_B_5(0, 0);
      const real_t tmp41 = tmp39*J_B_5(0, 1);
      const real_t tmp42 = tmp0*tmp40 - tmp2*tmp41;
      const real_t tmp43 = tmp1*tmp40 - tmp3*tmp41;
      const real_t tmp44 = tmp42 + tmp43;
      const real_t tmp45 = std::abs(tmp38);
      const real_t tmp46 = tmp11*tmp45;
      const real_t tmp47 = tmp44*tmp46;
      const real_t tmp48 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp49 = tmp4/tmp48;
      const real_t tmp50 = tmp49*J_B_6(0, 0);
      const real_t tmp51 = tmp49*J_B_6(0, 1);
      const real_t tmp52 = tmp0*tmp50 - tmp2*tmp51;
      const real_t tmp53 = tmp1*tmp50 - tmp3*tmp51;
      const real_t tmp54 = tmp52 + tmp53;
      const real_t tmp55 = std::abs(tmp48);
      const real_t tmp56 = tmp11*tmp55;
      const real_t tmp57 = tmp54*tmp56;
      const real_t tmp58 = tmp11*tmp31;
      const real_t tmp59 = tmp37*tmp58;
      const real_t tmp60 = 0.021537728144454479*tmp13 + 0.016449618187943313*tmp57;
      const real_t tmp61 = -tmp12*tmp9;
      const real_t tmp62 = -tmp18*tmp20;
      const real_t tmp63 = -tmp26*tmp28;
      const real_t tmp64 = -tmp35;
      const real_t tmp65 = -tmp42;
      const real_t tmp66 = tmp46*tmp65;
      const real_t tmp67 = -tmp52;
      const real_t tmp68 = tmp56*tmp67;
      const real_t tmp69 = tmp58*tmp64;
      const real_t tmp70 = 0.021537728144454479*tmp61 + 0.016449618187943313*tmp68;
      const real_t tmp71 = -tmp10*tmp12;
      const real_t tmp72 = -tmp19*tmp20;
      const real_t tmp73 = -tmp27*tmp28;
      const real_t tmp74 = -tmp36;
      const real_t tmp75 = -tmp43;
      const real_t tmp76 = tmp46*tmp75;
      const real_t tmp77 = -tmp53;
      const real_t tmp78 = tmp56*tmp77;
      const real_t tmp79 = tmp58*tmp74;
      const real_t tmp80 = 0.021537728144454479*tmp71 + 0.016449618187943313*tmp78;
      elMat(0,0) = 0.028457289286966149*tmp11*tmp31*tmp37 - 0.0053844320361136127*tmp13 - 0.0094636161207672757*tmp21 - 0.0053844320361136231*tmp29 - 0.0041124045469858117*tmp47 - 0.0041124045469858326*tmp57;
      elMat(0,1) = 0.028457289286966173*tmp11*tmp44*tmp45 - 0.0053844320361136223*tmp13 - 0.0053844320361136032*tmp21 - 0.0094636161207672567*tmp29 - 0.0041124045469858282*tmp57 - 0.0041124045469858516*tmp59;
      elMat(0,2) = 0.028457289286966198*tmp11*tmp54*tmp55 - 0.0094636161207672688*tmp13 - 0.0053844320361136466*tmp21 - 0.0053844320361135928*tmp29 - 0.0041124045469858395*tmp47 - 0.0041124045469858204*tmp59;
      elMat(0,3) = 0.088847818743091167*tmp21 + 0.021537728144454461*tmp29 + 0.016449618187943368*tmp47 + 0.0018441552587796545*tmp59 + tmp60;
      elMat(0,4) = 0.021537728144454475*tmp21 + 0.088847818743091223*tmp29 + 0.0018441552587796499*tmp47 + 0.016449618187943264*tmp59 + tmp60;
      elMat(0,5) = 0.088847818743091181*tmp13 + 0.021537728144454499*tmp21 + 0.021537728144454441*tmp29 + 0.016449618187943289*tmp47 + 0.0018441552587796454*tmp57 + 0.016449618187943424*tmp59;
      elMat(1,0) = 0.028457289286966149*tmp11*tmp31*tmp64 - 0.0053844320361136127*tmp61 - 0.0094636161207672757*tmp62 - 0.0053844320361136231*tmp63 - 0.0041124045469858117*tmp66 - 0.0041124045469858326*tmp68;
      elMat(1,1) = 0.028457289286966173*tmp11*tmp45*tmp65 - 0.0053844320361136223*tmp61 - 0.0053844320361136032*tmp62 - 0.0094636161207672567*tmp63 - 0.0041124045469858282*tmp68 - 0.0041124045469858516*tmp69;
      elMat(1,2) = 0.028457289286966198*tmp11*tmp55*tmp67 - 0.0094636161207672688*tmp61 - 0.0053844320361136466*tmp62 - 0.0053844320361135928*tmp63 - 0.0041124045469858395*tmp66 - 0.0041124045469858204*tmp69;
      elMat(1,3) = 0.088847818743091167*tmp62 + 0.021537728144454461*tmp63 + 0.016449618187943368*tmp66 + 0.0018441552587796545*tmp69 + tmp70;
      elMat(1,4) = 0.021537728144454475*tmp62 + 0.088847818743091223*tmp63 + 0.0018441552587796499*tmp66 + 0.016449618187943264*tmp69 + tmp70;
      elMat(1,5) = 0.088847818743091181*tmp61 + 0.021537728144454499*tmp62 + 0.021537728144454441*tmp63 + 0.016449618187943289*tmp66 + 0.0018441552587796454*tmp68 + 0.016449618187943424*tmp69;
      elMat(2,0) = 0.028457289286966149*tmp11*tmp31*tmp74 - 0.0053844320361136127*tmp71 - 0.0094636161207672757*tmp72 - 0.0053844320361136231*tmp73 - 0.0041124045469858117*tmp76 - 0.0041124045469858326*tmp78;
      elMat(2,1) = 0.028457289286966173*tmp11*tmp45*tmp75 - 0.0053844320361136223*tmp71 - 0.0053844320361136032*tmp72 - 0.0094636161207672567*tmp73 - 0.0041124045469858282*tmp78 - 0.0041124045469858516*tmp79;
      elMat(2,2) = 0.028457289286966198*tmp11*tmp55*tmp77 - 0.0094636161207672688*tmp71 - 0.0053844320361136466*tmp72 - 0.0053844320361135928*tmp73 - 0.0041124045469858395*tmp76 - 0.0041124045469858204*tmp79;
      elMat(2,3) = 0.088847818743091167*tmp72 + 0.021537728144454461*tmp73 + 0.016449618187943368*tmp76 + 0.0018441552587796545*tmp79 + tmp80;
      elMat(2,4) = 0.021537728144454475*tmp72 + 0.088847818743091223*tmp73 + 0.0018441552587796499*tmp76 + 0.016449618187943264*tmp79 + tmp80;
      elMat(2,5) = 0.088847818743091181*tmp71 + 0.021537728144454499*tmp72 + 0.021537728144454441*tmp73 + 0.016449618187943289*tmp76 + 0.0018441552587796454*tmp78 + 0.016449618187943424*tmp79;
   }

   void p2_to_p1_divT_1_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][0] - coords[2][0];
      const real_t tmp4 = coords[0][1] - coords[1][1];
      const real_t tmp5 = 1.0 / (tmp1*tmp2 - tmp3*tmp4);
      const real_t tmp6 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = tmp5/tmp6;
      const real_t tmp8 = tmp7*J_B_1(0, 0);
      const real_t tmp9 = tmp7*J_B_1(0, 1);
      const real_t tmp10 = tmp0*(tmp1*tmp8 - tmp2*tmp9 + tmp3*tmp8 - tmp4*tmp9)*std::abs(tmp6);
      const real_t tmp11 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp12 = tmp5/tmp11;
      const real_t tmp13 = tmp12*J_B_2(0, 0);
      const real_t tmp14 = tmp12*J_B_2(0, 1);
      const real_t tmp15 = tmp0*(tmp1*tmp13 + tmp13*tmp3 - tmp14*tmp2 - tmp14*tmp4)*std::abs(tmp11);
      const real_t tmp16 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp17 = tmp5/tmp16;
      const real_t tmp18 = tmp17*J_B_3(0, 0);
      const real_t tmp19 = tmp17*J_B_3(0, 1);
      const real_t tmp20 = tmp0*(tmp1*tmp18 + tmp18*tmp3 - tmp19*tmp2 - tmp19*tmp4)*std::abs(tmp16);
      const real_t tmp21 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp22 = std::abs(tmp21);
      const real_t tmp23 = tmp5/tmp21;
      const real_t tmp24 = tmp23*J_B_4(0, 0);
      const real_t tmp25 = tmp23*J_B_4(0, 1);
      const real_t tmp26 = tmp1*tmp24 - tmp2*tmp25 + tmp24*tmp3 - tmp25*tmp4;
      const real_t tmp27 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp28 = tmp5/tmp27;
      const real_t tmp29 = tmp28*J_B_5(0, 0);
      const real_t tmp30 = tmp28*J_B_5(0, 1);
      const real_t tmp31 = tmp1*tmp29 - tmp2*tmp30 + tmp29*tmp3 - tmp30*tmp4;
      const real_t tmp32 = std::abs(tmp27);
      const real_t tmp33 = tmp0*tmp31*tmp32;
      const real_t tmp34 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp35 = tmp5/tmp34;
      const real_t tmp36 = tmp35*J_B_6(0, 0);
      const real_t tmp37 = tmp35*J_B_6(0, 1);
      const real_t tmp38 = tmp1*tmp36 - tmp2*tmp37 + tmp3*tmp36 - tmp37*tmp4;
      const real_t tmp39 = std::abs(tmp34);
      const real_t tmp40 = tmp0*tmp38*tmp39;
      const real_t tmp41 = tmp0*tmp22*tmp26;
      const real_t tmp42 = 0.021537728144454479*tmp10 + 0.016449618187943313*tmp40;
      elMat(0,0) = 0.028457289286966149*tmp0*tmp22*tmp26 - 0.0053844320361136127*tmp10 - 0.0094636161207672757*tmp15 - 0.0053844320361136231*tmp20 - 0.0041124045469858117*tmp33 - 0.0041124045469858326*tmp40;
      elMat(0,1) = 0.028457289286966173*tmp0*tmp31*tmp32 - 0.0053844320361136223*tmp10 - 0.0053844320361136032*tmp15 - 0.0094636161207672567*tmp20 - 0.0041124045469858282*tmp40 - 0.0041124045469858516*tmp41;
      elMat(0,2) = 0.028457289286966198*tmp0*tmp38*tmp39 - 0.0094636161207672688*tmp10 - 0.0053844320361136466*tmp15 - 0.0053844320361135928*tmp20 - 0.0041124045469858395*tmp33 - 0.0041124045469858204*tmp41;
      elMat(0,3) = 0.088847818743091167*tmp15 + 0.021537728144454461*tmp20 + 0.016449618187943368*tmp33 + 0.0018441552587796545*tmp41 + tmp42;
      elMat(0,4) = 0.021537728144454475*tmp15 + 0.088847818743091223*tmp20 + 0.0018441552587796499*tmp33 + 0.016449618187943264*tmp41 + tmp42;
      elMat(0,5) = 0.088847818743091181*tmp10 + 0.021537728144454499*tmp15 + 0.021537728144454441*tmp20 + 0.016449618187943289*tmp33 + 0.0018441552587796454*tmp40 + 0.016449618187943424*tmp41;
   }

   void p2_to_p1_divT_1_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 10 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp6 = -coords[0][2] + coords[3][2];
      const real_t tmp7 = -coords[0][0] + coords[1][0];
      const real_t tmp8 = tmp3*tmp7;
      const real_t tmp9 = -coords[0][2] + coords[1][2];
      const real_t tmp10 = -coords[0][1] + coords[1][1];
      const real_t tmp11 = -coords[0][2] + coords[2][2];
      const real_t tmp12 = tmp10*tmp11;
      const real_t tmp13 = tmp1*tmp7;
      const real_t tmp14 = tmp0*tmp10;
      const real_t tmp15 = tmp2*tmp9;
      const real_t tmp16 = 1.0 / (tmp0*tmp1*tmp9 - tmp11*tmp13 + tmp12*tmp2 - tmp14*tmp6 - tmp15*tmp3 + tmp6*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp20 = tmp17*J_B_1(1, 1) - tmp18*J_B_1(1, 0) - tmp19*J_B_1(1, 1) - tmp5*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp21 = tmp16/tmp20;
      const real_t tmp22 = tmp21*(-tmp5 + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp23 = -tmp0*tmp6 + tmp11*tmp2;
      const real_t tmp24 = tmp21*(tmp17 - tmp19);
      const real_t tmp25 = -tmp1*tmp11 + tmp3*tmp6;
      const real_t tmp26 = tmp21*(-tmp18 + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp27 = tmp22*tmp4 + tmp23*tmp24 + tmp25*tmp26;
      const real_t tmp28 = tmp10*tmp2 - tmp13;
      const real_t tmp29 = -tmp15 + tmp6*tmp7;
      const real_t tmp30 = tmp1*tmp9 - tmp10*tmp6;
      const real_t tmp31 = tmp22*tmp28 + tmp24*tmp29 + tmp26*tmp30;
      const real_t tmp32 = -tmp14 + tmp8;
      const real_t tmp33 = tmp0*tmp9 - tmp11*tmp7;
      const real_t tmp34 = tmp12 - tmp3*tmp9;
      const real_t tmp35 = tmp22*tmp32 + tmp24*tmp33 + tmp26*tmp34;
      const real_t tmp36 = coords[0][0]*coords[1][1];
      const real_t tmp37 = coords[0][0]*coords[1][2];
      const real_t tmp38 = coords[2][1]*coords[3][2];
      const real_t tmp39 = coords[0][1]*coords[1][0];
      const real_t tmp40 = coords[0][1]*coords[1][2];
      const real_t tmp41 = coords[2][2]*coords[3][0];
      const real_t tmp42 = coords[0][2]*coords[1][0];
      const real_t tmp43 = coords[0][2]*coords[1][1];
      const real_t tmp44 = coords[2][0]*coords[3][1];
      const real_t tmp45 = coords[2][2]*coords[3][1];
      const real_t tmp46 = coords[2][0]*coords[3][2];
      const real_t tmp47 = coords[2][1]*coords[3][0];
      const real_t tmp48 = std::abs(coords[0][0]*tmp38 - coords[0][0]*tmp45 + coords[0][1]*tmp41 - coords[0][1]*tmp46 + coords[0][2]*tmp44 - coords[0][2]*tmp47 - coords[1][0]*tmp38 + coords[1][0]*tmp45 - coords[1][1]*tmp41 + coords[1][1]*tmp46 - coords[1][2]*tmp44 + coords[1][2]*tmp47 + coords[2][0]*tmp40 - coords[2][0]*tmp43 - coords[2][1]*tmp37 + coords[2][1]*tmp42 + coords[2][2]*tmp36 - coords[2][2]*tmp39 - coords[3][0]*tmp40 + coords[3][0]*tmp43 + coords[3][1]*tmp37 - coords[3][1]*tmp42 - coords[3][2]*tmp36 + coords[3][2]*tmp39);
      const real_t tmp49 = tmp48*std::abs(tmp20);
      const real_t tmp50 = tmp49*(tmp27 + tmp31 + tmp35);
      const real_t tmp51 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp52 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp53 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp54 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp55 = -tmp51*J_B_2(1, 2) + tmp52*J_B_2(1, 1) - tmp53*J_B_2(1, 0) - tmp54*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp56 = tmp16/tmp55;
      const real_t tmp57 = tmp56*(-tmp51 + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp58 = tmp56*(tmp52 - tmp54);
      const real_t tmp59 = tmp56*(-tmp53 + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp60 = tmp23*tmp58 + tmp25*tmp59 + tmp4*tmp57;
      const real_t tmp61 = tmp28*tmp57 + tmp29*tmp58 + tmp30*tmp59;
      const real_t tmp62 = tmp32*tmp57 + tmp33*tmp58 + tmp34*tmp59;
      const real_t tmp63 = tmp60 + tmp61 + tmp62;
      const real_t tmp64 = std::abs(tmp55);
      const real_t tmp65 = tmp48*tmp64;
      const real_t tmp66 = tmp63*tmp65;
      const real_t tmp67 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp68 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp69 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp70 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp71 = -tmp67*J_B_3(1, 2) + tmp68*J_B_3(1, 1) - tmp69*J_B_3(1, 0) - tmp70*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp72 = tmp16/tmp71;
      const real_t tmp73 = tmp72*(-tmp67 + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp74 = tmp72*(tmp68 - tmp70);
      const real_t tmp75 = tmp72*(-tmp69 + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp76 = tmp23*tmp74 + tmp25*tmp75 + tmp4*tmp73;
      const real_t tmp77 = tmp28*tmp73 + tmp29*tmp74 + tmp30*tmp75;
      const real_t tmp78 = tmp32*tmp73 + tmp33*tmp74 + tmp34*tmp75;
      const real_t tmp79 = tmp48*std::abs(tmp71);
      const real_t tmp80 = tmp79*(tmp76 + tmp77 + tmp78);
      const real_t tmp81 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp82 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp83 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp84 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp85 = -tmp81*J_B_4(1, 2) + tmp82*J_B_4(1, 1) - tmp83*J_B_4(1, 0) - tmp84*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp86 = tmp16/tmp85;
      const real_t tmp87 = tmp86*(-tmp81 + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp88 = tmp86*(tmp82 - tmp84);
      const real_t tmp89 = tmp86*(-tmp83 + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp90 = tmp23*tmp88 + tmp25*tmp89 + tmp4*tmp87;
      const real_t tmp91 = tmp28*tmp87 + tmp29*tmp88 + tmp30*tmp89;
      const real_t tmp92 = tmp32*tmp87 + tmp33*tmp88 + tmp34*tmp89;
      const real_t tmp93 = tmp90 + tmp91 + tmp92;
      const real_t tmp94 = std::abs(tmp85);
      const real_t tmp95 = tmp48*tmp94;
      const real_t tmp96 = tmp93*tmp95;
      const real_t tmp97 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp98 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp99 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp100 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp101 = -tmp100*J_B_5(1, 1) + tmp97*J_B_5(1, 1) - tmp98*J_B_5(1, 2) - tmp99*J_B_5(1, 0) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp102 = std::abs(tmp101);
      const real_t tmp103 = tmp16/tmp101;
      const real_t tmp104 = tmp103*(-tmp98 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp105 = tmp103*(-tmp100 + tmp97);
      const real_t tmp106 = tmp103*(-tmp99 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp107 = tmp104*tmp4 + tmp105*tmp23 + tmp106*tmp25;
      const real_t tmp108 = tmp104*tmp28 + tmp105*tmp29 + tmp106*tmp30;
      const real_t tmp109 = tmp104*tmp32 + tmp105*tmp33 + tmp106*tmp34;
      const real_t tmp110 = tmp107 + tmp108 + tmp109;
      const real_t tmp111 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp112 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp113 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp114 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp115 = -tmp111*J_B_6(1, 2) + tmp112*J_B_6(1, 1) - tmp113*J_B_6(1, 0) - tmp114*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp116 = tmp16/tmp115;
      const real_t tmp117 = tmp116*(-tmp111 + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp118 = tmp116*(tmp112 - tmp114);
      const real_t tmp119 = tmp116*(-tmp113 + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp120 = tmp117*tmp4 + tmp118*tmp23 + tmp119*tmp25;
      const real_t tmp121 = tmp117*tmp28 + tmp118*tmp29 + tmp119*tmp30;
      const real_t tmp122 = tmp117*tmp32 + tmp118*tmp33 + tmp119*tmp34;
      const real_t tmp123 = tmp120 + tmp121 + tmp122;
      const real_t tmp124 = std::abs(tmp115);
      const real_t tmp125 = tmp124*tmp48;
      const real_t tmp126 = tmp123*tmp125;
      const real_t tmp127 = tmp102*tmp48;
      const real_t tmp128 = tmp110*tmp127;
      const real_t tmp129 = -tmp27*tmp49;
      const real_t tmp130 = -tmp60;
      const real_t tmp131 = tmp130*tmp65;
      const real_t tmp132 = -tmp76*tmp79;
      const real_t tmp133 = -tmp90;
      const real_t tmp134 = tmp133*tmp95;
      const real_t tmp135 = -tmp107;
      const real_t tmp136 = -tmp120;
      const real_t tmp137 = tmp125*tmp136;
      const real_t tmp138 = tmp127*tmp135;
      const real_t tmp139 = -tmp31*tmp49;
      const real_t tmp140 = -tmp61;
      const real_t tmp141 = tmp140*tmp65;
      const real_t tmp142 = -tmp77*tmp79;
      const real_t tmp143 = -tmp91;
      const real_t tmp144 = tmp143*tmp95;
      const real_t tmp145 = -tmp108;
      const real_t tmp146 = -tmp121;
      const real_t tmp147 = tmp125*tmp146;
      const real_t tmp148 = tmp127*tmp145;
      const real_t tmp149 = -tmp35*tmp49;
      const real_t tmp150 = -tmp62;
      const real_t tmp151 = tmp150*tmp65;
      const real_t tmp152 = -tmp78*tmp79;
      const real_t tmp153 = -tmp92;
      const real_t tmp154 = tmp153*tmp95;
      const real_t tmp155 = -tmp109;
      const real_t tmp156 = -tmp122;
      const real_t tmp157 = tmp125*tmp156;
      const real_t tmp158 = tmp127*tmp155;
      elMat(0,0) = 0.0041450002922359102*tmp102*tmp110*tmp48 - 0.00025269386627013875*tmp126 - 0.0022404676699064132*tmp50 - 0.0036132788939563306*tmp66 - 0.0021313484327818407*tmp80 - 0.0042405447626545044*tmp96;
      elMat(0,1) = -0.0022326318989993247*tmp126 - 0.0026357720909823278*tmp128 + 0.0034176928206344891*tmp48*tmp93*tmp94 - 0.0026033720926380141*tmp50 - 0.0040515615452833059*tmp66 - 0.00022768852606484032*tmp80;
      elMat(0,2) = 0.0036989065262070654*tmp123*tmp124*tmp48 - 0.00082038196529565332*tmp128 - 0.0011689663037258728*tmp50 - 0.0035028348104554873*tmp66 - 0.0022791728946165873*tmp80 - 0.0042608838854467819*tmp96;
      elMat(0,3) = -0.0023699571574974814*tmp126 - 0.002486974873195249*tmp128 + 0.0037529336676914667*tmp48*tmp63*tmp64 - 0.0002462066126594296*tmp50 - 0.0026256282613140542*tmp80 - 0.0043575000963585958*tmp96;
      elMat(0,4) = 0.0096167187137706934*tmp126 + 0.00054257326398419006*tmp128 + 0.00044329479947359041*tmp50 + 0.010935536503362953*tmp66 + 0.0083030366399583916*tmp80 + 0.0034921734127835191*tmp96;
      elMat(0,5) = 0.0024288282171041273*tmp126 + 0.0024472327245663697*tmp128 + 0.00019160205543901311*tmp50 + 0.01390416498932678*tmp66 + 0.00026211581541268848*tmp80 + 0.014099389531484405*tmp96;
      elMat(0,6) = 0.0084738635129386185*tmp126 + 0.00060647705014558399*tmp128 + 0.007390637873140378*tmp50 + 0.002962980367302638*tmp66 + 0.00032162955982062511*tmp80 + 0.013577744969985461*tmp96;
      elMat(0,7) = 0.0001906817440645623*tmp126 + 0.0091474641436934817*tmp128 + 0.00036142199952063125*tmp50 + 0.011464969934767404*tmp66 + 0.0087040185441412451*tmp80 + 0.003464776967145998*tmp96;
      elMat(0,8) = 0.00066526362886985618*tmp126 + 0.0022669389038848914*tmp128 + 0.013941077572069804*tmp50 + 0.0024431874085576156*tmp66 + 0.01068027752776031*tmp80 + 0.0033365882921907761*tmp96;
      elMat(0,9) = 0.0001680210393695334*tmp126 + 0.010224844161029978*tmp128 + 0.0060256495700271246*tmp50 + 0.0031064301982791655*tmp66 + 0.00033716214614184028*tmp80 + 0.013471226218485708*tmp96;
      elMat(1,0) = 0.0041450002922359102*tmp102*tmp135*tmp48 - 0.0022404676699064132*tmp129 - 0.0036132788939563306*tmp131 - 0.0021313484327818407*tmp132 - 0.0042405447626545044*tmp134 - 0.00025269386627013875*tmp137;
      elMat(1,1) = -0.0026033720926380141*tmp129 - 0.0040515615452833059*tmp131 - 0.00022768852606484032*tmp132 + 0.0034176928206344891*tmp133*tmp48*tmp94 - 0.0022326318989993247*tmp137 - 0.0026357720909823278*tmp138;
      elMat(1,2) = 0.0036989065262070654*tmp124*tmp136*tmp48 - 0.0011689663037258728*tmp129 - 0.0035028348104554873*tmp131 - 0.0022791728946165873*tmp132 - 0.0042608838854467819*tmp134 - 0.00082038196529565332*tmp138;
      elMat(1,3) = -0.0002462066126594296*tmp129 + 0.0037529336676914667*tmp130*tmp48*tmp64 - 0.0026256282613140542*tmp132 - 0.0043575000963585958*tmp134 - 0.0023699571574974814*tmp137 - 0.002486974873195249*tmp138;
      elMat(1,4) = 0.00044329479947359041*tmp129 + 0.010935536503362953*tmp131 + 0.0083030366399583916*tmp132 + 0.0034921734127835191*tmp134 + 0.0096167187137706934*tmp137 + 0.00054257326398419006*tmp138;
      elMat(1,5) = 0.00019160205543901311*tmp129 + 0.01390416498932678*tmp131 + 0.00026211581541268848*tmp132 + 0.014099389531484405*tmp134 + 0.0024288282171041273*tmp137 + 0.0024472327245663697*tmp138;
      elMat(1,6) = 0.007390637873140378*tmp129 + 0.002962980367302638*tmp131 + 0.00032162955982062511*tmp132 + 0.013577744969985461*tmp134 + 0.0084738635129386185*tmp137 + 0.00060647705014558399*tmp138;
      elMat(1,7) = 0.00036142199952063125*tmp129 + 0.011464969934767404*tmp131 + 0.0087040185441412451*tmp132 + 0.003464776967145998*tmp134 + 0.0001906817440645623*tmp137 + 0.0091474641436934817*tmp138;
      elMat(1,8) = 0.013941077572069804*tmp129 + 0.0024431874085576156*tmp131 + 0.01068027752776031*tmp132 + 0.0033365882921907761*tmp134 + 0.00066526362886985618*tmp137 + 0.0022669389038848914*tmp138;
      elMat(1,9) = 0.0060256495700271246*tmp129 + 0.0031064301982791655*tmp131 + 0.00033716214614184028*tmp132 + 0.013471226218485708*tmp134 + 0.0001680210393695334*tmp137 + 0.010224844161029978*tmp138;
      elMat(2,0) = 0.0041450002922359102*tmp102*tmp145*tmp48 - 0.0022404676699064132*tmp139 - 0.0036132788939563306*tmp141 - 0.0021313484327818407*tmp142 - 0.0042405447626545044*tmp144 - 0.00025269386627013875*tmp147;
      elMat(2,1) = -0.0026033720926380141*tmp139 - 0.0040515615452833059*tmp141 - 0.00022768852606484032*tmp142 + 0.0034176928206344891*tmp143*tmp48*tmp94 - 0.0022326318989993247*tmp147 - 0.0026357720909823278*tmp148;
      elMat(2,2) = 0.0036989065262070654*tmp124*tmp146*tmp48 - 0.0011689663037258728*tmp139 - 0.0035028348104554873*tmp141 - 0.0022791728946165873*tmp142 - 0.0042608838854467819*tmp144 - 0.00082038196529565332*tmp148;
      elMat(2,3) = -0.0002462066126594296*tmp139 + 0.0037529336676914667*tmp140*tmp48*tmp64 - 0.0026256282613140542*tmp142 - 0.0043575000963585958*tmp144 - 0.0023699571574974814*tmp147 - 0.002486974873195249*tmp148;
      elMat(2,4) = 0.00044329479947359041*tmp139 + 0.010935536503362953*tmp141 + 0.0083030366399583916*tmp142 + 0.0034921734127835191*tmp144 + 0.0096167187137706934*tmp147 + 0.00054257326398419006*tmp148;
      elMat(2,5) = 0.00019160205543901311*tmp139 + 0.01390416498932678*tmp141 + 0.00026211581541268848*tmp142 + 0.014099389531484405*tmp144 + 0.0024288282171041273*tmp147 + 0.0024472327245663697*tmp148;
      elMat(2,6) = 0.007390637873140378*tmp139 + 0.002962980367302638*tmp141 + 0.00032162955982062511*tmp142 + 0.013577744969985461*tmp144 + 0.0084738635129386185*tmp147 + 0.00060647705014558399*tmp148;
      elMat(2,7) = 0.00036142199952063125*tmp139 + 0.011464969934767404*tmp141 + 0.0087040185441412451*tmp142 + 0.003464776967145998*tmp144 + 0.0001906817440645623*tmp147 + 0.0091474641436934817*tmp148;
      elMat(2,8) = 0.013941077572069804*tmp139 + 0.0024431874085576156*tmp141 + 0.01068027752776031*tmp142 + 0.0033365882921907761*tmp144 + 0.00066526362886985618*tmp147 + 0.0022669389038848914*tmp148;
      elMat(2,9) = 0.0060256495700271246*tmp139 + 0.0031064301982791655*tmp141 + 0.00033716214614184028*tmp142 + 0.013471226218485708*tmp144 + 0.0001680210393695334*tmp147 + 0.010224844161029978*tmp148;
      elMat(3,0) = 0.0041450002922359102*tmp102*tmp155*tmp48 - 0.0022404676699064132*tmp149 - 0.0036132788939563306*tmp151 - 0.0021313484327818407*tmp152 - 0.0042405447626545044*tmp154 - 0.00025269386627013875*tmp157;
      elMat(3,1) = -0.0026033720926380141*tmp149 - 0.0040515615452833059*tmp151 - 0.00022768852606484032*tmp152 + 0.0034176928206344891*tmp153*tmp48*tmp94 - 0.0022326318989993247*tmp157 - 0.0026357720909823278*tmp158;
      elMat(3,2) = 0.0036989065262070654*tmp124*tmp156*tmp48 - 0.0011689663037258728*tmp149 - 0.0035028348104554873*tmp151 - 0.0022791728946165873*tmp152 - 0.0042608838854467819*tmp154 - 0.00082038196529565332*tmp158;
      elMat(3,3) = -0.0002462066126594296*tmp149 + 0.0037529336676914667*tmp150*tmp48*tmp64 - 0.0026256282613140542*tmp152 - 0.0043575000963585958*tmp154 - 0.0023699571574974814*tmp157 - 0.002486974873195249*tmp158;
      elMat(3,4) = 0.00044329479947359041*tmp149 + 0.010935536503362953*tmp151 + 0.0083030366399583916*tmp152 + 0.0034921734127835191*tmp154 + 0.0096167187137706934*tmp157 + 0.00054257326398419006*tmp158;
      elMat(3,5) = 0.00019160205543901311*tmp149 + 0.01390416498932678*tmp151 + 0.00026211581541268848*tmp152 + 0.014099389531484405*tmp154 + 0.0024288282171041273*tmp157 + 0.0024472327245663697*tmp158;
      elMat(3,6) = 0.007390637873140378*tmp149 + 0.002962980367302638*tmp151 + 0.00032162955982062511*tmp152 + 0.013577744969985461*tmp154 + 0.0084738635129386185*tmp157 + 0.00060647705014558399*tmp158;
      elMat(3,7) = 0.00036142199952063125*tmp149 + 0.011464969934767404*tmp151 + 0.0087040185441412451*tmp152 + 0.003464776967145998*tmp154 + 0.0001906817440645623*tmp157 + 0.0091474641436934817*tmp158;
      elMat(3,8) = 0.013941077572069804*tmp149 + 0.0024431874085576156*tmp151 + 0.01068027752776031*tmp152 + 0.0033365882921907761*tmp154 + 0.00066526362886985618*tmp157 + 0.0022669389038848914*tmp158;
      elMat(3,9) = 0.0060256495700271246*tmp149 + 0.0031064301982791655*tmp151 + 0.00033716214614184028*tmp152 + 0.013471226218485708*tmp154 + 0.0001680210393695334*tmp157 + 0.010224844161029978*tmp158;
   }

   void p2_to_p1_divT_1_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = coords[0][0]*coords[1][1];
      const real_t tmp1 = coords[0][0]*coords[1][2];
      const real_t tmp2 = coords[2][1]*coords[3][2];
      const real_t tmp3 = coords[0][1]*coords[1][0];
      const real_t tmp4 = coords[0][1]*coords[1][2];
      const real_t tmp5 = coords[2][2]*coords[3][0];
      const real_t tmp6 = coords[0][2]*coords[1][0];
      const real_t tmp7 = coords[0][2]*coords[1][1];
      const real_t tmp8 = coords[2][0]*coords[3][1];
      const real_t tmp9 = coords[2][2]*coords[3][1];
      const real_t tmp10 = coords[2][0]*coords[3][2];
      const real_t tmp11 = coords[2][1]*coords[3][0];
      const real_t tmp12 = std::abs(coords[0][0]*tmp2 - coords[0][0]*tmp9 - coords[0][1]*tmp10 + coords[0][1]*tmp5 - coords[0][2]*tmp11 + coords[0][2]*tmp8 - coords[1][0]*tmp2 + coords[1][0]*tmp9 + coords[1][1]*tmp10 - coords[1][1]*tmp5 + coords[1][2]*tmp11 - coords[1][2]*tmp8 + coords[2][0]*tmp4 - coords[2][0]*tmp7 - coords[2][1]*tmp1 + coords[2][1]*tmp6 + coords[2][2]*tmp0 - coords[2][2]*tmp3 - coords[3][0]*tmp4 + coords[3][0]*tmp7 + coords[3][1]*tmp1 - coords[3][1]*tmp6 - coords[3][2]*tmp0 + coords[3][2]*tmp3);
      const real_t tmp13 = -coords[0][0] + coords[1][0];
      const real_t tmp14 = -coords[0][1] + coords[2][1];
      const real_t tmp15 = tmp13*tmp14;
      const real_t tmp16 = -coords[0][0] + coords[2][0];
      const real_t tmp17 = -coords[0][1] + coords[1][1];
      const real_t tmp18 = tmp16*tmp17;
      const real_t tmp19 = tmp15 - tmp18;
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp21 = -coords[0][2] + coords[3][2];
      const real_t tmp22 = -coords[0][1] + coords[3][1];
      const real_t tmp23 = -coords[0][2] + coords[1][2];
      const real_t tmp24 = -coords[0][0] + coords[3][0];
      const real_t tmp25 = -coords[0][2] + coords[2][2];
      const real_t tmp26 = tmp17*tmp25;
      const real_t tmp27 = tmp13*tmp22;
      const real_t tmp28 = tmp23*tmp24;
      const real_t tmp29 = 1.0 / (-tmp14*tmp28 + tmp15*tmp21 + tmp16*tmp22*tmp23 - tmp18*tmp21 + tmp24*tmp26 - tmp25*tmp27);
      const real_t tmp30 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp31 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp32 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp33 = -tmp20*J_B_1(1, 2) + tmp30*J_B_1(1, 1) - tmp31*J_B_1(1, 0) - tmp32*J_B_1(1, 1) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp34 = tmp29/tmp33;
      const real_t tmp35 = tmp34*(-tmp20 + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp36 = tmp17*tmp24 - tmp27;
      const real_t tmp37 = -tmp13*tmp25 + tmp16*tmp23;
      const real_t tmp38 = tmp34*(tmp30 - tmp32);
      const real_t tmp39 = tmp13*tmp21 - tmp28;
      const real_t tmp40 = -tmp14*tmp24 + tmp16*tmp22;
      const real_t tmp41 = -tmp16*tmp21 + tmp24*tmp25;
      const real_t tmp42 = -tmp14*tmp23 + tmp26;
      const real_t tmp43 = tmp34*(-tmp31 + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp44 = -tmp17*tmp21 + tmp22*tmp23;
      const real_t tmp45 = tmp14*tmp21 - tmp22*tmp25;
      const real_t tmp46 = tmp12*(tmp19*tmp35 + tmp35*tmp36 + tmp35*tmp40 + tmp37*tmp38 + tmp38*tmp39 + tmp38*tmp41 + tmp42*tmp43 + tmp43*tmp44 + tmp43*tmp45)*std::abs(tmp33);
      const real_t tmp47 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp48 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp49 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp50 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp51 = -tmp47*J_B_2(1, 2) + tmp48*J_B_2(1, 1) - tmp49*J_B_2(1, 0) - tmp50*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp52 = tmp29/tmp51;
      const real_t tmp53 = tmp52*(-tmp47 + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp54 = tmp52*(tmp48 - tmp50);
      const real_t tmp55 = tmp52*(-tmp49 + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp56 = tmp19*tmp53 + tmp36*tmp53 + tmp37*tmp54 + tmp39*tmp54 + tmp40*tmp53 + tmp41*tmp54 + tmp42*tmp55 + tmp44*tmp55 + tmp45*tmp55;
      const real_t tmp57 = std::abs(tmp51);
      const real_t tmp58 = tmp12*tmp56*tmp57;
      const real_t tmp59 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp60 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp61 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp62 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp63 = -tmp59*J_B_3(1, 2) + tmp60*J_B_3(1, 1) - tmp61*J_B_3(1, 0) - tmp62*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp64 = tmp29/tmp63;
      const real_t tmp65 = tmp64*(-tmp59 + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp66 = tmp64*(tmp60 - tmp62);
      const real_t tmp67 = tmp64*(-tmp61 + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp68 = tmp12*(tmp19*tmp65 + tmp36*tmp65 + tmp37*tmp66 + tmp39*tmp66 + tmp40*tmp65 + tmp41*tmp66 + tmp42*tmp67 + tmp44*tmp67 + tmp45*tmp67)*std::abs(tmp63);
      const real_t tmp69 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp70 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp71 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp72 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp73 = -tmp69*J_B_4(1, 2) + tmp70*J_B_4(1, 1) - tmp71*J_B_4(1, 0) - tmp72*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp74 = tmp29/tmp73;
      const real_t tmp75 = tmp74*(-tmp69 + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp76 = tmp74*(tmp70 - tmp72);
      const real_t tmp77 = tmp74*(-tmp71 + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp78 = tmp19*tmp75 + tmp36*tmp75 + tmp37*tmp76 + tmp39*tmp76 + tmp40*tmp75 + tmp41*tmp76 + tmp42*tmp77 + tmp44*tmp77 + tmp45*tmp77;
      const real_t tmp79 = std::abs(tmp73);
      const real_t tmp80 = tmp12*tmp78*tmp79;
      const real_t tmp81 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp82 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp83 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp84 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp85 = tmp81*J_B_5(1, 1) - tmp82*J_B_5(1, 2) - tmp83*J_B_5(1, 0) - tmp84*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp86 = std::abs(tmp85);
      const real_t tmp87 = tmp29/tmp85;
      const real_t tmp88 = tmp87*(-tmp82 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp89 = tmp87*(tmp81 - tmp84);
      const real_t tmp90 = tmp87*(-tmp83 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp91 = tmp19*tmp88 + tmp36*tmp88 + tmp37*tmp89 + tmp39*tmp89 + tmp40*tmp88 + tmp41*tmp89 + tmp42*tmp90 + tmp44*tmp90 + tmp45*tmp90;
      const real_t tmp92 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp93 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp94 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp95 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp96 = -tmp92*J_B_6(1, 2) + tmp93*J_B_6(1, 1) - tmp94*J_B_6(1, 0) - tmp95*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp97 = tmp29/tmp96;
      const real_t tmp98 = tmp97*(-tmp92 + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp99 = tmp97*(tmp93 - tmp95);
      const real_t tmp100 = tmp97*(-tmp94 + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp101 = tmp100*tmp42 + tmp100*tmp44 + tmp100*tmp45 + tmp19*tmp98 + tmp36*tmp98 + tmp37*tmp99 + tmp39*tmp99 + tmp40*tmp98 + tmp41*tmp99;
      const real_t tmp102 = std::abs(tmp96);
      const real_t tmp103 = tmp101*tmp102*tmp12;
      const real_t tmp104 = tmp12*tmp86*tmp91;
      elMat(0,0) = -0.00025269386627013875*tmp103 + 0.0041450002922359102*tmp12*tmp86*tmp91 - 0.0022404676699064132*tmp46 - 0.0036132788939563306*tmp58 - 0.0021313484327818407*tmp68 - 0.0042405447626545044*tmp80;
      elMat(0,1) = -0.0022326318989993247*tmp103 - 0.0026357720909823278*tmp104 + 0.0034176928206344891*tmp12*tmp78*tmp79 - 0.0026033720926380141*tmp46 - 0.0040515615452833059*tmp58 - 0.00022768852606484032*tmp68;
      elMat(0,2) = 0.0036989065262070654*tmp101*tmp102*tmp12 - 0.00082038196529565332*tmp104 - 0.0011689663037258728*tmp46 - 0.0035028348104554873*tmp58 - 0.0022791728946165873*tmp68 - 0.0042608838854467819*tmp80;
      elMat(0,3) = -0.0023699571574974814*tmp103 - 0.002486974873195249*tmp104 + 0.0037529336676914667*tmp12*tmp56*tmp57 - 0.0002462066126594296*tmp46 - 0.0026256282613140542*tmp68 - 0.0043575000963585958*tmp80;
      elMat(0,4) = 0.0096167187137706934*tmp103 + 0.00054257326398419006*tmp104 + 0.00044329479947359041*tmp46 + 0.010935536503362953*tmp58 + 0.0083030366399583916*tmp68 + 0.0034921734127835191*tmp80;
      elMat(0,5) = 0.0024288282171041273*tmp103 + 0.0024472327245663697*tmp104 + 0.00019160205543901311*tmp46 + 0.01390416498932678*tmp58 + 0.00026211581541268848*tmp68 + 0.014099389531484405*tmp80;
      elMat(0,6) = 0.0084738635129386185*tmp103 + 0.00060647705014558399*tmp104 + 0.007390637873140378*tmp46 + 0.002962980367302638*tmp58 + 0.00032162955982062511*tmp68 + 0.013577744969985461*tmp80;
      elMat(0,7) = 0.0001906817440645623*tmp103 + 0.0091474641436934817*tmp104 + 0.00036142199952063125*tmp46 + 0.011464969934767404*tmp58 + 0.0087040185441412451*tmp68 + 0.003464776967145998*tmp80;
      elMat(0,8) = 0.00066526362886985618*tmp103 + 0.0022669389038848914*tmp104 + 0.013941077572069804*tmp46 + 0.0024431874085576156*tmp58 + 0.01068027752776031*tmp68 + 0.0033365882921907761*tmp80;
      elMat(0,9) = 0.0001680210393695334*tmp103 + 0.010224844161029978*tmp104 + 0.0060256495700271246*tmp46 + 0.0031064301982791655*tmp58 + 0.00033716214614184028*tmp68 + 0.013471226218485708*tmp80;
   }

   void p2_to_p1_divT_2_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 3, 6 >& elMat ) const
   {
      (void)(coords);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
   }

   void p2_to_p1_divT_2_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_to_p1_divT_2_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 4, 10 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp21 = tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp20);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = coords[0][0]*coords[1][1];
      const real_t tmp38 = coords[0][0]*coords[1][2];
      const real_t tmp39 = coords[2][1]*coords[3][2];
      const real_t tmp40 = coords[0][1]*coords[1][0];
      const real_t tmp41 = coords[0][1]*coords[1][2];
      const real_t tmp42 = coords[2][2]*coords[3][0];
      const real_t tmp43 = coords[0][2]*coords[1][0];
      const real_t tmp44 = coords[0][2]*coords[1][1];
      const real_t tmp45 = coords[2][0]*coords[3][1];
      const real_t tmp46 = coords[2][2]*coords[3][1];
      const real_t tmp47 = coords[2][0]*coords[3][2];
      const real_t tmp48 = coords[2][1]*coords[3][0];
      const real_t tmp49 = std::abs(coords[0][0]*tmp39 - coords[0][0]*tmp46 + coords[0][1]*tmp42 - coords[0][1]*tmp47 + coords[0][2]*tmp45 - coords[0][2]*tmp48 - coords[1][0]*tmp39 + coords[1][0]*tmp46 - coords[1][1]*tmp42 + coords[1][1]*tmp47 - coords[1][2]*tmp45 + coords[1][2]*tmp48 + coords[2][0]*tmp41 - coords[2][0]*tmp44 - coords[2][1]*tmp38 + coords[2][1]*tmp43 + coords[2][2]*tmp37 - coords[2][2]*tmp40 - coords[3][0]*tmp41 + coords[3][0]*tmp44 + coords[3][1]*tmp38 - coords[3][1]*tmp43 - coords[3][2]*tmp37 + coords[3][2]*tmp40);
      const real_t tmp50 = tmp49*std::abs(tmp21);
      const real_t tmp51 = tmp50*(tmp28 + tmp32 + tmp36);
      const real_t tmp52 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp53 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp54 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp55 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp56 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp57 = tmp52*J_B_2(2, 2) - tmp53*J_B_2(2, 2) + tmp54*J_B_2(2, 0) - tmp55*J_B_2(2, 1) - tmp56*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp58 = tmp17/tmp57;
      const real_t tmp59 = tmp58*(tmp52 - tmp53);
      const real_t tmp60 = tmp58*(-tmp55 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp61 = tmp58*(tmp54 - tmp56);
      const real_t tmp62 = tmp24*tmp60 + tmp26*tmp61 + tmp4*tmp59;
      const real_t tmp63 = tmp29*tmp59 + tmp30*tmp60 + tmp31*tmp61;
      const real_t tmp64 = tmp33*tmp59 + tmp34*tmp60 + tmp35*tmp61;
      const real_t tmp65 = tmp62 + tmp63 + tmp64;
      const real_t tmp66 = std::abs(tmp57);
      const real_t tmp67 = tmp49*tmp66;
      const real_t tmp68 = tmp65*tmp67;
      const real_t tmp69 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp70 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp71 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp72 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp73 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp74 = tmp69*J_B_3(2, 2) - tmp70*J_B_3(2, 2) + tmp71*J_B_3(2, 0) - tmp72*J_B_3(2, 1) - tmp73*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp75 = tmp17/tmp74;
      const real_t tmp76 = tmp75*(tmp69 - tmp70);
      const real_t tmp77 = tmp75*(-tmp72 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp78 = tmp75*(tmp71 - tmp73);
      const real_t tmp79 = tmp24*tmp77 + tmp26*tmp78 + tmp4*tmp76;
      const real_t tmp80 = tmp29*tmp76 + tmp30*tmp77 + tmp31*tmp78;
      const real_t tmp81 = tmp33*tmp76 + tmp34*tmp77 + tmp35*tmp78;
      const real_t tmp82 = tmp49*std::abs(tmp74);
      const real_t tmp83 = tmp82*(tmp79 + tmp80 + tmp81);
      const real_t tmp84 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp85 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp86 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp87 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp88 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp89 = tmp84*J_B_4(2, 2) - tmp85*J_B_4(2, 2) + tmp86*J_B_4(2, 0) - tmp87*J_B_4(2, 1) - tmp88*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp90 = tmp17/tmp89;
      const real_t tmp91 = tmp90*(tmp84 - tmp85);
      const real_t tmp92 = tmp90*(-tmp87 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp93 = tmp90*(tmp86 - tmp88);
      const real_t tmp94 = tmp24*tmp92 + tmp26*tmp93 + tmp4*tmp91;
      const real_t tmp95 = tmp29*tmp91 + tmp30*tmp92 + tmp31*tmp93;
      const real_t tmp96 = tmp33*tmp91 + tmp34*tmp92 + tmp35*tmp93;
      const real_t tmp97 = tmp94 + tmp95 + tmp96;
      const real_t tmp98 = std::abs(tmp89);
      const real_t tmp99 = tmp49*tmp98;
      const real_t tmp100 = tmp97*tmp99;
      const real_t tmp101 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp102 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp103 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp104 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp105 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp106 = tmp101*J_B_5(2, 2) + tmp102*J_B_5(2, 0) - tmp103*J_B_5(2, 1) - tmp104*J_B_5(2, 2) - tmp105*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp107 = std::abs(tmp106);
      const real_t tmp108 = tmp17/tmp106;
      const real_t tmp109 = tmp108*(tmp101 - tmp104);
      const real_t tmp110 = tmp108*(-tmp103 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp111 = tmp108*(tmp102 - tmp105);
      const real_t tmp112 = tmp109*tmp4 + tmp110*tmp24 + tmp111*tmp26;
      const real_t tmp113 = tmp109*tmp29 + tmp110*tmp30 + tmp111*tmp31;
      const real_t tmp114 = tmp109*tmp33 + tmp110*tmp34 + tmp111*tmp35;
      const real_t tmp115 = tmp112 + tmp113 + tmp114;
      const real_t tmp116 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp117 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp118 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp119 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp120 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp121 = tmp116*J_B_6(2, 2) - tmp117*J_B_6(2, 2) + tmp118*J_B_6(2, 0) - tmp119*J_B_6(2, 1) - tmp120*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp122 = tmp17/tmp121;
      const real_t tmp123 = tmp122*(tmp116 - tmp117);
      const real_t tmp124 = tmp122*(-tmp119 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp125 = tmp122*(tmp118 - tmp120);
      const real_t tmp126 = tmp123*tmp4 + tmp124*tmp24 + tmp125*tmp26;
      const real_t tmp127 = tmp123*tmp29 + tmp124*tmp30 + tmp125*tmp31;
      const real_t tmp128 = tmp123*tmp33 + tmp124*tmp34 + tmp125*tmp35;
      const real_t tmp129 = tmp126 + tmp127 + tmp128;
      const real_t tmp130 = std::abs(tmp121);
      const real_t tmp131 = tmp130*tmp49;
      const real_t tmp132 = tmp129*tmp131;
      const real_t tmp133 = tmp107*tmp49;
      const real_t tmp134 = tmp115*tmp133;
      const real_t tmp135 = -tmp28*tmp50;
      const real_t tmp136 = -tmp62;
      const real_t tmp137 = tmp136*tmp67;
      const real_t tmp138 = -tmp79*tmp82;
      const real_t tmp139 = -tmp94;
      const real_t tmp140 = tmp139*tmp99;
      const real_t tmp141 = -tmp112;
      const real_t tmp142 = -tmp126;
      const real_t tmp143 = tmp131*tmp142;
      const real_t tmp144 = tmp133*tmp141;
      const real_t tmp145 = -tmp32*tmp50;
      const real_t tmp146 = -tmp63;
      const real_t tmp147 = tmp146*tmp67;
      const real_t tmp148 = -tmp80*tmp82;
      const real_t tmp149 = -tmp95;
      const real_t tmp150 = tmp149*tmp99;
      const real_t tmp151 = -tmp113;
      const real_t tmp152 = -tmp127;
      const real_t tmp153 = tmp131*tmp152;
      const real_t tmp154 = tmp133*tmp151;
      const real_t tmp155 = -tmp36*tmp50;
      const real_t tmp156 = -tmp64;
      const real_t tmp157 = tmp156*tmp67;
      const real_t tmp158 = -tmp81*tmp82;
      const real_t tmp159 = -tmp96;
      const real_t tmp160 = tmp159*tmp99;
      const real_t tmp161 = -tmp114;
      const real_t tmp162 = -tmp128;
      const real_t tmp163 = tmp131*tmp162;
      const real_t tmp164 = tmp133*tmp161;
      elMat(0,0) = -0.0042405447626545044*tmp100 + 0.0041450002922359102*tmp107*tmp115*tmp49 - 0.00025269386627013875*tmp132 - 0.0022404676699064132*tmp51 - 0.0036132788939563306*tmp68 - 0.0021313484327818407*tmp83;
      elMat(0,1) = -0.0022326318989993247*tmp132 - 0.0026357720909823278*tmp134 + 0.0034176928206344891*tmp49*tmp97*tmp98 - 0.0026033720926380141*tmp51 - 0.0040515615452833059*tmp68 - 0.00022768852606484032*tmp83;
      elMat(0,2) = -0.0042608838854467819*tmp100 + 0.0036989065262070654*tmp129*tmp130*tmp49 - 0.00082038196529565332*tmp134 - 0.0011689663037258728*tmp51 - 0.0035028348104554873*tmp68 - 0.0022791728946165873*tmp83;
      elMat(0,3) = -0.0043575000963585958*tmp100 - 0.0023699571574974814*tmp132 - 0.002486974873195249*tmp134 + 0.0037529336676914667*tmp49*tmp65*tmp66 - 0.0002462066126594296*tmp51 - 0.0026256282613140542*tmp83;
      elMat(0,4) = 0.0034921734127835191*tmp100 + 0.0096167187137706934*tmp132 + 0.00054257326398419006*tmp134 + 0.00044329479947359041*tmp51 + 0.010935536503362953*tmp68 + 0.0083030366399583916*tmp83;
      elMat(0,5) = 0.014099389531484405*tmp100 + 0.0024288282171041273*tmp132 + 0.0024472327245663697*tmp134 + 0.00019160205543901311*tmp51 + 0.01390416498932678*tmp68 + 0.00026211581541268848*tmp83;
      elMat(0,6) = 0.013577744969985461*tmp100 + 0.0084738635129386185*tmp132 + 0.00060647705014558399*tmp134 + 0.007390637873140378*tmp51 + 0.002962980367302638*tmp68 + 0.00032162955982062511*tmp83;
      elMat(0,7) = 0.003464776967145998*tmp100 + 0.0001906817440645623*tmp132 + 0.0091474641436934817*tmp134 + 0.00036142199952063125*tmp51 + 0.011464969934767404*tmp68 + 0.0087040185441412451*tmp83;
      elMat(0,8) = 0.0033365882921907761*tmp100 + 0.00066526362886985618*tmp132 + 0.0022669389038848914*tmp134 + 0.013941077572069804*tmp51 + 0.0024431874085576156*tmp68 + 0.01068027752776031*tmp83;
      elMat(0,9) = 0.013471226218485708*tmp100 + 0.0001680210393695334*tmp132 + 0.010224844161029978*tmp134 + 0.0060256495700271246*tmp51 + 0.0031064301982791655*tmp68 + 0.00033716214614184028*tmp83;
      elMat(1,0) = 0.0041450002922359102*tmp107*tmp141*tmp49 - 0.0022404676699064132*tmp135 - 0.0036132788939563306*tmp137 - 0.0021313484327818407*tmp138 - 0.0042405447626545044*tmp140 - 0.00025269386627013875*tmp143;
      elMat(1,1) = -0.0026033720926380141*tmp135 - 0.0040515615452833059*tmp137 - 0.00022768852606484032*tmp138 + 0.0034176928206344891*tmp139*tmp49*tmp98 - 0.0022326318989993247*tmp143 - 0.0026357720909823278*tmp144;
      elMat(1,2) = 0.0036989065262070654*tmp130*tmp142*tmp49 - 0.0011689663037258728*tmp135 - 0.0035028348104554873*tmp137 - 0.0022791728946165873*tmp138 - 0.0042608838854467819*tmp140 - 0.00082038196529565332*tmp144;
      elMat(1,3) = -0.0002462066126594296*tmp135 + 0.0037529336676914667*tmp136*tmp49*tmp66 - 0.0026256282613140542*tmp138 - 0.0043575000963585958*tmp140 - 0.0023699571574974814*tmp143 - 0.002486974873195249*tmp144;
      elMat(1,4) = 0.00044329479947359041*tmp135 + 0.010935536503362953*tmp137 + 0.0083030366399583916*tmp138 + 0.0034921734127835191*tmp140 + 0.0096167187137706934*tmp143 + 0.00054257326398419006*tmp144;
      elMat(1,5) = 0.00019160205543901311*tmp135 + 0.01390416498932678*tmp137 + 0.00026211581541268848*tmp138 + 0.014099389531484405*tmp140 + 0.0024288282171041273*tmp143 + 0.0024472327245663697*tmp144;
      elMat(1,6) = 0.007390637873140378*tmp135 + 0.002962980367302638*tmp137 + 0.00032162955982062511*tmp138 + 0.013577744969985461*tmp140 + 0.0084738635129386185*tmp143 + 0.00060647705014558399*tmp144;
      elMat(1,7) = 0.00036142199952063125*tmp135 + 0.011464969934767404*tmp137 + 0.0087040185441412451*tmp138 + 0.003464776967145998*tmp140 + 0.0001906817440645623*tmp143 + 0.0091474641436934817*tmp144;
      elMat(1,8) = 0.013941077572069804*tmp135 + 0.0024431874085576156*tmp137 + 0.01068027752776031*tmp138 + 0.0033365882921907761*tmp140 + 0.00066526362886985618*tmp143 + 0.0022669389038848914*tmp144;
      elMat(1,9) = 0.0060256495700271246*tmp135 + 0.0031064301982791655*tmp137 + 0.00033716214614184028*tmp138 + 0.013471226218485708*tmp140 + 0.0001680210393695334*tmp143 + 0.010224844161029978*tmp144;
      elMat(2,0) = 0.0041450002922359102*tmp107*tmp151*tmp49 - 0.0022404676699064132*tmp145 - 0.0036132788939563306*tmp147 - 0.0021313484327818407*tmp148 - 0.0042405447626545044*tmp150 - 0.00025269386627013875*tmp153;
      elMat(2,1) = -0.0026033720926380141*tmp145 - 0.0040515615452833059*tmp147 - 0.00022768852606484032*tmp148 + 0.0034176928206344891*tmp149*tmp49*tmp98 - 0.0022326318989993247*tmp153 - 0.0026357720909823278*tmp154;
      elMat(2,2) = 0.0036989065262070654*tmp130*tmp152*tmp49 - 0.0011689663037258728*tmp145 - 0.0035028348104554873*tmp147 - 0.0022791728946165873*tmp148 - 0.0042608838854467819*tmp150 - 0.00082038196529565332*tmp154;
      elMat(2,3) = -0.0002462066126594296*tmp145 + 0.0037529336676914667*tmp146*tmp49*tmp66 - 0.0026256282613140542*tmp148 - 0.0043575000963585958*tmp150 - 0.0023699571574974814*tmp153 - 0.002486974873195249*tmp154;
      elMat(2,4) = 0.00044329479947359041*tmp145 + 0.010935536503362953*tmp147 + 0.0083030366399583916*tmp148 + 0.0034921734127835191*tmp150 + 0.0096167187137706934*tmp153 + 0.00054257326398419006*tmp154;
      elMat(2,5) = 0.00019160205543901311*tmp145 + 0.01390416498932678*tmp147 + 0.00026211581541268848*tmp148 + 0.014099389531484405*tmp150 + 0.0024288282171041273*tmp153 + 0.0024472327245663697*tmp154;
      elMat(2,6) = 0.007390637873140378*tmp145 + 0.002962980367302638*tmp147 + 0.00032162955982062511*tmp148 + 0.013577744969985461*tmp150 + 0.0084738635129386185*tmp153 + 0.00060647705014558399*tmp154;
      elMat(2,7) = 0.00036142199952063125*tmp145 + 0.011464969934767404*tmp147 + 0.0087040185441412451*tmp148 + 0.003464776967145998*tmp150 + 0.0001906817440645623*tmp153 + 0.0091474641436934817*tmp154;
      elMat(2,8) = 0.013941077572069804*tmp145 + 0.0024431874085576156*tmp147 + 0.01068027752776031*tmp148 + 0.0033365882921907761*tmp150 + 0.00066526362886985618*tmp153 + 0.0022669389038848914*tmp154;
      elMat(2,9) = 0.0060256495700271246*tmp145 + 0.0031064301982791655*tmp147 + 0.00033716214614184028*tmp148 + 0.013471226218485708*tmp150 + 0.0001680210393695334*tmp153 + 0.010224844161029978*tmp154;
      elMat(3,0) = 0.0041450002922359102*tmp107*tmp161*tmp49 - 0.0022404676699064132*tmp155 - 0.0036132788939563306*tmp157 - 0.0021313484327818407*tmp158 - 0.0042405447626545044*tmp160 - 0.00025269386627013875*tmp163;
      elMat(3,1) = -0.0026033720926380141*tmp155 - 0.0040515615452833059*tmp157 - 0.00022768852606484032*tmp158 + 0.0034176928206344891*tmp159*tmp49*tmp98 - 0.0022326318989993247*tmp163 - 0.0026357720909823278*tmp164;
      elMat(3,2) = 0.0036989065262070654*tmp130*tmp162*tmp49 - 0.0011689663037258728*tmp155 - 0.0035028348104554873*tmp157 - 0.0022791728946165873*tmp158 - 0.0042608838854467819*tmp160 - 0.00082038196529565332*tmp164;
      elMat(3,3) = -0.0002462066126594296*tmp155 + 0.0037529336676914667*tmp156*tmp49*tmp66 - 0.0026256282613140542*tmp158 - 0.0043575000963585958*tmp160 - 0.0023699571574974814*tmp163 - 0.002486974873195249*tmp164;
      elMat(3,4) = 0.00044329479947359041*tmp155 + 0.010935536503362953*tmp157 + 0.0083030366399583916*tmp158 + 0.0034921734127835191*tmp160 + 0.0096167187137706934*tmp163 + 0.00054257326398419006*tmp164;
      elMat(3,5) = 0.00019160205543901311*tmp155 + 0.01390416498932678*tmp157 + 0.00026211581541268848*tmp158 + 0.014099389531484405*tmp160 + 0.0024288282171041273*tmp163 + 0.0024472327245663697*tmp164;
      elMat(3,6) = 0.007390637873140378*tmp155 + 0.002962980367302638*tmp157 + 0.00032162955982062511*tmp158 + 0.013577744969985461*tmp160 + 0.0084738635129386185*tmp163 + 0.00060647705014558399*tmp164;
      elMat(3,7) = 0.00036142199952063125*tmp155 + 0.011464969934767404*tmp157 + 0.0087040185441412451*tmp158 + 0.003464776967145998*tmp160 + 0.0001906817440645623*tmp163 + 0.0091474641436934817*tmp164;
      elMat(3,8) = 0.013941077572069804*tmp155 + 0.0024431874085576156*tmp157 + 0.01068027752776031*tmp158 + 0.0033365882921907761*tmp160 + 0.00066526362886985618*tmp163 + 0.0022669389038848914*tmp164;
      elMat(3,9) = 0.0060256495700271246*tmp155 + 0.0031064301982791655*tmp157 + 0.00033716214614184028*tmp158 + 0.013471226218485708*tmp160 + 0.0001680210393695334*tmp163 + 0.010224844161029978*tmp164;
   }

   void p2_to_p1_divT_2_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = coords[0][0]*coords[1][1];
      const real_t tmp1 = coords[0][0]*coords[1][2];
      const real_t tmp2 = coords[2][1]*coords[3][2];
      const real_t tmp3 = coords[0][1]*coords[1][0];
      const real_t tmp4 = coords[0][1]*coords[1][2];
      const real_t tmp5 = coords[2][2]*coords[3][0];
      const real_t tmp6 = coords[0][2]*coords[1][0];
      const real_t tmp7 = coords[0][2]*coords[1][1];
      const real_t tmp8 = coords[2][0]*coords[3][1];
      const real_t tmp9 = coords[2][2]*coords[3][1];
      const real_t tmp10 = coords[2][0]*coords[3][2];
      const real_t tmp11 = coords[2][1]*coords[3][0];
      const real_t tmp12 = std::abs(coords[0][0]*tmp2 - coords[0][0]*tmp9 - coords[0][1]*tmp10 + coords[0][1]*tmp5 - coords[0][2]*tmp11 + coords[0][2]*tmp8 - coords[1][0]*tmp2 + coords[1][0]*tmp9 + coords[1][1]*tmp10 - coords[1][1]*tmp5 + coords[1][2]*tmp11 - coords[1][2]*tmp8 + coords[2][0]*tmp4 - coords[2][0]*tmp7 - coords[2][1]*tmp1 + coords[2][1]*tmp6 + coords[2][2]*tmp0 - coords[2][2]*tmp3 - coords[3][0]*tmp4 + coords[3][0]*tmp7 + coords[3][1]*tmp1 - coords[3][1]*tmp6 - coords[3][2]*tmp0 + coords[3][2]*tmp3);
      const real_t tmp13 = -coords[0][0] + coords[1][0];
      const real_t tmp14 = -coords[0][1] + coords[2][1];
      const real_t tmp15 = tmp13*tmp14;
      const real_t tmp16 = -coords[0][0] + coords[2][0];
      const real_t tmp17 = -coords[0][1] + coords[1][1];
      const real_t tmp18 = tmp16*tmp17;
      const real_t tmp19 = tmp15 - tmp18;
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp21 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp22 = -coords[0][2] + coords[3][2];
      const real_t tmp23 = -coords[0][1] + coords[3][1];
      const real_t tmp24 = -coords[0][2] + coords[1][2];
      const real_t tmp25 = -coords[0][0] + coords[3][0];
      const real_t tmp26 = -coords[0][2] + coords[2][2];
      const real_t tmp27 = tmp17*tmp26;
      const real_t tmp28 = tmp13*tmp23;
      const real_t tmp29 = tmp24*tmp25;
      const real_t tmp30 = 1.0 / (-tmp14*tmp29 + tmp15*tmp22 + tmp16*tmp23*tmp24 - tmp18*tmp22 + tmp25*tmp27 - tmp26*tmp28);
      const real_t tmp31 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp32 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp33 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp34 = tmp20*J_B_1(2, 2) - tmp21*J_B_1(2, 2) + tmp31*J_B_1(2, 0) - tmp32*J_B_1(2, 1) - tmp33*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp35 = tmp30/tmp34;
      const real_t tmp36 = tmp35*(tmp20 - tmp21);
      const real_t tmp37 = tmp17*tmp25 - tmp28;
      const real_t tmp38 = -tmp13*tmp26 + tmp16*tmp24;
      const real_t tmp39 = tmp35*(-tmp32 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp40 = tmp13*tmp22 - tmp29;
      const real_t tmp41 = -tmp14*tmp25 + tmp16*tmp23;
      const real_t tmp42 = -tmp16*tmp22 + tmp25*tmp26;
      const real_t tmp43 = -tmp14*tmp24 + tmp27;
      const real_t tmp44 = tmp35*(tmp31 - tmp33);
      const real_t tmp45 = -tmp17*tmp22 + tmp23*tmp24;
      const real_t tmp46 = tmp14*tmp22 - tmp23*tmp26;
      const real_t tmp47 = tmp12*(tmp19*tmp36 + tmp36*tmp37 + tmp36*tmp41 + tmp38*tmp39 + tmp39*tmp40 + tmp39*tmp42 + tmp43*tmp44 + tmp44*tmp45 + tmp44*tmp46)*std::abs(tmp34);
      const real_t tmp48 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp49 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp50 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp51 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp52 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp53 = tmp48*J_B_2(2, 2) - tmp49*J_B_2(2, 2) + tmp50*J_B_2(2, 0) - tmp51*J_B_2(2, 1) - tmp52*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp54 = tmp30/tmp53;
      const real_t tmp55 = tmp54*(tmp48 - tmp49);
      const real_t tmp56 = tmp54*(-tmp51 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp57 = tmp54*(tmp50 - tmp52);
      const real_t tmp58 = tmp19*tmp55 + tmp37*tmp55 + tmp38*tmp56 + tmp40*tmp56 + tmp41*tmp55 + tmp42*tmp56 + tmp43*tmp57 + tmp45*tmp57 + tmp46*tmp57;
      const real_t tmp59 = std::abs(tmp53);
      const real_t tmp60 = tmp12*tmp58*tmp59;
      const real_t tmp61 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp62 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp63 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp64 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp65 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp66 = tmp61*J_B_3(2, 2) - tmp62*J_B_3(2, 2) + tmp63*J_B_3(2, 0) - tmp64*J_B_3(2, 1) - tmp65*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp67 = tmp30/tmp66;
      const real_t tmp68 = tmp67*(tmp61 - tmp62);
      const real_t tmp69 = tmp67*(-tmp64 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp70 = tmp67*(tmp63 - tmp65);
      const real_t tmp71 = tmp12*(tmp19*tmp68 + tmp37*tmp68 + tmp38*tmp69 + tmp40*tmp69 + tmp41*tmp68 + tmp42*tmp69 + tmp43*tmp70 + tmp45*tmp70 + tmp46*tmp70)*std::abs(tmp66);
      const real_t tmp72 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp73 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp74 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp75 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp76 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp77 = tmp72*J_B_4(2, 2) - tmp73*J_B_4(2, 2) + tmp74*J_B_4(2, 0) - tmp75*J_B_4(2, 1) - tmp76*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp78 = tmp30/tmp77;
      const real_t tmp79 = tmp78*(tmp72 - tmp73);
      const real_t tmp80 = tmp78*(-tmp75 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp81 = tmp78*(tmp74 - tmp76);
      const real_t tmp82 = tmp19*tmp79 + tmp37*tmp79 + tmp38*tmp80 + tmp40*tmp80 + tmp41*tmp79 + tmp42*tmp80 + tmp43*tmp81 + tmp45*tmp81 + tmp46*tmp81;
      const real_t tmp83 = std::abs(tmp77);
      const real_t tmp84 = tmp12*tmp82*tmp83;
      const real_t tmp85 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp86 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp87 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp88 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp89 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp90 = tmp85*J_B_5(2, 2) + tmp86*J_B_5(2, 0) - tmp87*J_B_5(2, 1) - tmp88*J_B_5(2, 2) - tmp89*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp91 = std::abs(tmp90);
      const real_t tmp92 = tmp30/tmp90;
      const real_t tmp93 = tmp92*(tmp85 - tmp88);
      const real_t tmp94 = tmp92*(-tmp87 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp95 = tmp92*(tmp86 - tmp89);
      const real_t tmp96 = tmp19*tmp93 + tmp37*tmp93 + tmp38*tmp94 + tmp40*tmp94 + tmp41*tmp93 + tmp42*tmp94 + tmp43*tmp95 + tmp45*tmp95 + tmp46*tmp95;
      const real_t tmp97 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp98 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp99 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp100 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp101 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp102 = -tmp100*J_B_6(2, 1) - tmp101*J_B_6(2, 0) + tmp97*J_B_6(2, 2) - tmp98*J_B_6(2, 2) + tmp99*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp103 = tmp30/tmp102;
      const real_t tmp104 = tmp103*(tmp97 - tmp98);
      const real_t tmp105 = tmp103*(-tmp100 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp106 = tmp103*(-tmp101 + tmp99);
      const real_t tmp107 = tmp104*tmp19 + tmp104*tmp37 + tmp104*tmp41 + tmp105*tmp38 + tmp105*tmp40 + tmp105*tmp42 + tmp106*tmp43 + tmp106*tmp45 + tmp106*tmp46;
      const real_t tmp108 = std::abs(tmp102);
      const real_t tmp109 = tmp107*tmp108*tmp12;
      const real_t tmp110 = tmp12*tmp91*tmp96;
      elMat(0,0) = -0.00025269386627013875*tmp109 + 0.0041450002922359102*tmp12*tmp91*tmp96 - 0.0022404676699064132*tmp47 - 0.0036132788939563306*tmp60 - 0.0021313484327818407*tmp71 - 0.0042405447626545044*tmp84;
      elMat(0,1) = -0.0022326318989993247*tmp109 - 0.0026357720909823278*tmp110 + 0.0034176928206344891*tmp12*tmp82*tmp83 - 0.0026033720926380141*tmp47 - 0.0040515615452833059*tmp60 - 0.00022768852606484032*tmp71;
      elMat(0,2) = 0.0036989065262070654*tmp107*tmp108*tmp12 - 0.00082038196529565332*tmp110 - 0.0011689663037258728*tmp47 - 0.0035028348104554873*tmp60 - 0.0022791728946165873*tmp71 - 0.0042608838854467819*tmp84;
      elMat(0,3) = -0.0023699571574974814*tmp109 - 0.002486974873195249*tmp110 + 0.0037529336676914667*tmp12*tmp58*tmp59 - 0.0002462066126594296*tmp47 - 0.0026256282613140542*tmp71 - 0.0043575000963585958*tmp84;
      elMat(0,4) = 0.0096167187137706934*tmp109 + 0.00054257326398419006*tmp110 + 0.00044329479947359041*tmp47 + 0.010935536503362953*tmp60 + 0.0083030366399583916*tmp71 + 0.0034921734127835191*tmp84;
      elMat(0,5) = 0.0024288282171041273*tmp109 + 0.0024472327245663697*tmp110 + 0.00019160205543901311*tmp47 + 0.01390416498932678*tmp60 + 0.00026211581541268848*tmp71 + 0.014099389531484405*tmp84;
      elMat(0,6) = 0.0084738635129386185*tmp109 + 0.00060647705014558399*tmp110 + 0.007390637873140378*tmp47 + 0.002962980367302638*tmp60 + 0.00032162955982062511*tmp71 + 0.013577744969985461*tmp84;
      elMat(0,7) = 0.0001906817440645623*tmp109 + 0.0091474641436934817*tmp110 + 0.00036142199952063125*tmp47 + 0.011464969934767404*tmp60 + 0.0087040185441412451*tmp71 + 0.003464776967145998*tmp84;
      elMat(0,8) = 0.00066526362886985618*tmp109 + 0.0022669389038848914*tmp110 + 0.013941077572069804*tmp47 + 0.0024431874085576156*tmp60 + 0.01068027752776031*tmp71 + 0.0033365882921907761*tmp84;
      elMat(0,9) = 0.0001680210393695334*tmp109 + 0.010224844161029978*tmp110 + 0.0060256495700271246*tmp47 + 0.0031064301982791655*tmp60 + 0.00033716214614184028*tmp71 + 0.013471226218485708*tmp84;
   }

} // namespace forms
} // namespace hyteg