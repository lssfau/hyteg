/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsilonvar_2_2_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_epsilonvar_2_2_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_2_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_2_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_F_Tetrahedron_0_0 = 0;
      real_t Blending_F_Tetrahedron_0_1 = 0;
      real_t Blending_F_Tetrahedron_0_2 = 0;
      real_t Blending_F_Tetrahedron_1_0 = 0;
      real_t Blending_F_Tetrahedron_1_1 = 0;
      real_t Blending_F_Tetrahedron_1_2 = 0;
      real_t Blending_F_Tetrahedron_2_0 = 0;
      real_t Blending_F_Tetrahedron_2_1 = 0;
      real_t Blending_F_Tetrahedron_2_2 = 0;
      real_t Blending_F_Tetrahedron_3_0 = 0;
      real_t Blending_F_Tetrahedron_3_1 = 0;
      real_t Blending_F_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Blending_F_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_F_Tetrahedron_0_0, &Blending_F_Tetrahedron_0_1, &Blending_F_Tetrahedron_0_2 );
      Blending_F_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_1_0, &Blending_F_Tetrahedron_1_1, &Blending_F_Tetrahedron_1_2 );
      Blending_F_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_2_0, &Blending_F_Tetrahedron_2_1, &Blending_F_Tetrahedron_2_2 );
      Blending_F_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_3_0, &Blending_F_Tetrahedron_3_1, &Blending_F_Tetrahedron_3_2 );
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_0_0, Blending_F_Tetrahedron_0_1, Blending_F_Tetrahedron_0_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_1_0, Blending_F_Tetrahedron_1_1, Blending_F_Tetrahedron_1_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_2_0, Blending_F_Tetrahedron_2_1, Blending_F_Tetrahedron_2_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_3_0, Blending_F_Tetrahedron_3_1, Blending_F_Tetrahedron_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_14 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_15 - Blending_DF_Tetrahedron_0_7*tmp_16 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_17;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_50 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_51 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_53 = tmp_12*tmp_50 + tmp_33*tmp_51 + tmp_35*tmp_52;
      real_t tmp_54 = tmp_3*tmp_53;
      real_t tmp_55 = tmp_39*tmp_50 + tmp_40*tmp_51 + tmp_41*tmp_52;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_44*tmp_50 + tmp_45*tmp_51 + tmp_46*tmp_52;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_31*(tmp_13 - tmp_17);
      real_t tmp_60 = tmp_31*(tmp_15 - tmp_16);
      real_t tmp_61 = tmp_31*(tmp_14 - tmp_18);
      real_t tmp_62 = tmp_12*tmp_59 + tmp_33*tmp_60 + tmp_35*tmp_61;
      real_t tmp_63 = 1.0*tmp_3;
      real_t tmp_64 = tmp_39*tmp_59 + tmp_40*tmp_60 + tmp_41*tmp_61;
      real_t tmp_65 = tmp_44*tmp_59 + tmp_45*tmp_60 + tmp_46*tmp_61;
      real_t tmp_66 = tmp_62*tmp_63 + tmp_63*tmp_64 + tmp_63*tmp_65;
      real_t tmp_67 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_68 = p_affine_0_0*p_affine_1_1;
      real_t tmp_69 = p_affine_0_0*p_affine_1_2;
      real_t tmp_70 = p_affine_2_1*p_affine_3_2;
      real_t tmp_71 = p_affine_0_1*p_affine_1_0;
      real_t tmp_72 = p_affine_0_1*p_affine_1_2;
      real_t tmp_73 = p_affine_2_2*p_affine_3_0;
      real_t tmp_74 = p_affine_0_2*p_affine_1_0;
      real_t tmp_75 = p_affine_0_2*p_affine_1_1;
      real_t tmp_76 = p_affine_2_0*p_affine_3_1;
      real_t tmp_77 = p_affine_2_2*p_affine_3_1;
      real_t tmp_78 = p_affine_2_0*p_affine_3_2;
      real_t tmp_79 = p_affine_2_1*p_affine_3_0;
      real_t tmp_80 = std::abs(p_affine_0_0*tmp_70 - p_affine_0_0*tmp_77 + p_affine_0_1*tmp_73 - p_affine_0_1*tmp_78 + p_affine_0_2*tmp_76 - p_affine_0_2*tmp_79 - p_affine_1_0*tmp_70 + p_affine_1_0*tmp_77 - p_affine_1_1*tmp_73 + p_affine_1_1*tmp_78 - p_affine_1_2*tmp_76 + p_affine_1_2*tmp_79 + p_affine_2_0*tmp_72 - p_affine_2_0*tmp_75 - p_affine_2_1*tmp_69 + p_affine_2_1*tmp_74 + p_affine_2_2*tmp_68 - p_affine_2_2*tmp_71 - p_affine_3_0*tmp_72 + p_affine_3_0*tmp_75 + p_affine_3_1*tmp_69 - p_affine_3_1*tmp_74 - p_affine_3_2*tmp_68 + p_affine_3_2*tmp_71);
      real_t tmp_81 = 0.041666666666666657*tmp_80*std::abs(tmp_19);
      real_t tmp_82 = 0.55278640450004235;
      real_t tmp_83 = 2.3416407864998732;
      real_t tmp_84 = 0.55278640450004235;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84 - 3.0;
      real_t tmp_86 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_87 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_88 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_6*tmp_87 - Blending_DF_Tetrahedron_1_6*tmp_91 + Blending_DF_Tetrahedron_1_7*tmp_88 - Blending_DF_Tetrahedron_1_7*tmp_89 + Blending_DF_Tetrahedron_1_8*tmp_86 - Blending_DF_Tetrahedron_1_8*tmp_90;
      real_t tmp_93 = tmp_30/tmp_92;
      real_t tmp_94 = tmp_93*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_95 = tmp_93*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_96 = tmp_93*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_97 = tmp_12*tmp_94 + tmp_33*tmp_95 + tmp_35*tmp_96;
      real_t tmp_98 = tmp_85*tmp_97;
      real_t tmp_99 = tmp_39*tmp_94 + tmp_40*tmp_95 + tmp_41*tmp_96;
      real_t tmp_100 = tmp_85*tmp_99;
      real_t tmp_101 = tmp_44*tmp_94 + tmp_45*tmp_95 + tmp_46*tmp_96;
      real_t tmp_102 = tmp_101*tmp_85;
      real_t tmp_103 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_104 = tmp_93*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_105 = tmp_93*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_106 = tmp_93*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_107 = tmp_104*tmp_12 + tmp_105*tmp_33 + tmp_106*tmp_35;
      real_t tmp_108 = tmp_107*tmp_85;
      real_t tmp_109 = tmp_104*tmp_39 + tmp_105*tmp_40 + tmp_106*tmp_41;
      real_t tmp_110 = tmp_109*tmp_85;
      real_t tmp_111 = tmp_104*tmp_44 + tmp_105*tmp_45 + tmp_106*tmp_46;
      real_t tmp_112 = tmp_111*tmp_85;
      real_t tmp_113 = tmp_93*(tmp_86 - tmp_90);
      real_t tmp_114 = tmp_93*(tmp_88 - tmp_89);
      real_t tmp_115 = tmp_93*(tmp_87 - tmp_91);
      real_t tmp_116 = tmp_113*tmp_12 + tmp_114*tmp_33 + tmp_115*tmp_35;
      real_t tmp_117 = 1.0*tmp_85;
      real_t tmp_118 = tmp_113*tmp_39 + tmp_114*tmp_40 + tmp_115*tmp_41;
      real_t tmp_119 = tmp_113*tmp_44 + tmp_114*tmp_45 + tmp_115*tmp_46;
      real_t tmp_120 = tmp_116*tmp_117 + tmp_117*tmp_118 + tmp_117*tmp_119;
      real_t tmp_121 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_122 = 0.041666666666666657*tmp_80*std::abs(tmp_92);
      real_t tmp_123 = 2.3416407864998732;
      real_t tmp_124 = 0.55278640450004235;
      real_t tmp_125 = 0.55278640450004235;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125 - 3.0;
      real_t tmp_127 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_128 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_129 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_130 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_131 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_132 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_6*tmp_128 - Blending_DF_Tetrahedron_2_6*tmp_132 + Blending_DF_Tetrahedron_2_7*tmp_129 - Blending_DF_Tetrahedron_2_7*tmp_130 + Blending_DF_Tetrahedron_2_8*tmp_127 - Blending_DF_Tetrahedron_2_8*tmp_131;
      real_t tmp_134 = tmp_30/tmp_133;
      real_t tmp_135 = tmp_134*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_136 = tmp_134*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_137 = tmp_134*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_138 = tmp_12*tmp_135 + tmp_136*tmp_33 + tmp_137*tmp_35;
      real_t tmp_139 = tmp_126*tmp_138;
      real_t tmp_140 = tmp_135*tmp_39 + tmp_136*tmp_40 + tmp_137*tmp_41;
      real_t tmp_141 = tmp_126*tmp_140;
      real_t tmp_142 = tmp_135*tmp_44 + tmp_136*tmp_45 + tmp_137*tmp_46;
      real_t tmp_143 = tmp_126*tmp_142;
      real_t tmp_144 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_145 = tmp_134*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_146 = tmp_134*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_147 = tmp_134*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_148 = tmp_12*tmp_145 + tmp_146*tmp_33 + tmp_147*tmp_35;
      real_t tmp_149 = tmp_126*tmp_148;
      real_t tmp_150 = tmp_145*tmp_39 + tmp_146*tmp_40 + tmp_147*tmp_41;
      real_t tmp_151 = tmp_126*tmp_150;
      real_t tmp_152 = tmp_145*tmp_44 + tmp_146*tmp_45 + tmp_147*tmp_46;
      real_t tmp_153 = tmp_126*tmp_152;
      real_t tmp_154 = tmp_134*(tmp_127 - tmp_131);
      real_t tmp_155 = tmp_134*(tmp_129 - tmp_130);
      real_t tmp_156 = tmp_134*(tmp_128 - tmp_132);
      real_t tmp_157 = tmp_12*tmp_154 + tmp_155*tmp_33 + tmp_156*tmp_35;
      real_t tmp_158 = 1.0*tmp_126;
      real_t tmp_159 = tmp_154*tmp_39 + tmp_155*tmp_40 + tmp_156*tmp_41;
      real_t tmp_160 = tmp_154*tmp_44 + tmp_155*tmp_45 + tmp_156*tmp_46;
      real_t tmp_161 = tmp_157*tmp_158 + tmp_158*tmp_159 + tmp_158*tmp_160;
      real_t tmp_162 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_163 = 0.041666666666666657*tmp_80*std::abs(tmp_133);
      real_t tmp_164 = 0.55278640450004235;
      real_t tmp_165 = 0.55278640450004235;
      real_t tmp_166 = 0.55278640450004235;
      real_t tmp_167 = tmp_164 + tmp_165 + tmp_166 - 3.0;
      real_t tmp_168 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_169 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_170 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_171 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_172 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_173 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_174 = Blending_DF_Tetrahedron_3_6*tmp_169 - Blending_DF_Tetrahedron_3_6*tmp_173 + Blending_DF_Tetrahedron_3_7*tmp_170 - Blending_DF_Tetrahedron_3_7*tmp_171 + Blending_DF_Tetrahedron_3_8*tmp_168 - Blending_DF_Tetrahedron_3_8*tmp_172;
      real_t tmp_175 = tmp_30/tmp_174;
      real_t tmp_176 = tmp_175*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_177 = tmp_175*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_178 = tmp_175*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_179 = tmp_12*tmp_176 + tmp_177*tmp_33 + tmp_178*tmp_35;
      real_t tmp_180 = tmp_167*tmp_179;
      real_t tmp_181 = tmp_176*tmp_39 + tmp_177*tmp_40 + tmp_178*tmp_41;
      real_t tmp_182 = tmp_167*tmp_181;
      real_t tmp_183 = tmp_176*tmp_44 + tmp_177*tmp_45 + tmp_178*tmp_46;
      real_t tmp_184 = tmp_167*tmp_183;
      real_t tmp_185 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_186 = tmp_175*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_187 = tmp_175*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_188 = tmp_175*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_189 = tmp_12*tmp_186 + tmp_187*tmp_33 + tmp_188*tmp_35;
      real_t tmp_190 = tmp_167*tmp_189;
      real_t tmp_191 = tmp_186*tmp_39 + tmp_187*tmp_40 + tmp_188*tmp_41;
      real_t tmp_192 = tmp_167*tmp_191;
      real_t tmp_193 = tmp_186*tmp_44 + tmp_187*tmp_45 + tmp_188*tmp_46;
      real_t tmp_194 = tmp_167*tmp_193;
      real_t tmp_195 = tmp_175*(tmp_168 - tmp_172);
      real_t tmp_196 = tmp_175*(tmp_170 - tmp_171);
      real_t tmp_197 = tmp_175*(tmp_169 - tmp_173);
      real_t tmp_198 = tmp_12*tmp_195 + tmp_196*tmp_33 + tmp_197*tmp_35;
      real_t tmp_199 = 1.0*tmp_167;
      real_t tmp_200 = tmp_195*tmp_39 + tmp_196*tmp_40 + tmp_197*tmp_41;
      real_t tmp_201 = tmp_195*tmp_44 + tmp_196*tmp_45 + tmp_197*tmp_46;
      real_t tmp_202 = tmp_198*tmp_199 + tmp_199*tmp_200 + tmp_199*tmp_201;
      real_t tmp_203 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_204 = 0.041666666666666657*tmp_80*std::abs(tmp_174);
      real_t tmp_205 = tmp_0 - 1.0;
      real_t tmp_206 = 2.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_207 = tmp_205*tmp_206;
      real_t tmp_208 = tmp_207*tmp_65;
      real_t tmp_209 = tmp_205*tmp_47;
      real_t tmp_210 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_211 = tmp_206*tmp_210;
      real_t tmp_212 = 0.5*tmp_54 + 0.5*tmp_56 + 0.5*tmp_58;
      real_t tmp_213 = tmp_207*tmp_57;
      real_t tmp_214 = tmp_82 - 1.0;
      real_t tmp_215 = 2.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_216 = tmp_214*tmp_215;
      real_t tmp_217 = tmp_119*tmp_216;
      real_t tmp_218 = tmp_101*tmp_214;
      real_t tmp_219 = 0.5*tmp_100 + 0.5*tmp_102 + 0.5*tmp_98;
      real_t tmp_220 = tmp_215*tmp_219;
      real_t tmp_221 = 0.5*tmp_108 + 0.5*tmp_110 + 0.5*tmp_112;
      real_t tmp_222 = tmp_111*tmp_216;
      real_t tmp_223 = tmp_123 - 1.0;
      real_t tmp_224 = 2.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_225 = tmp_223*tmp_224;
      real_t tmp_226 = tmp_160*tmp_225;
      real_t tmp_227 = tmp_142*tmp_223;
      real_t tmp_228 = 0.5*tmp_139 + 0.5*tmp_141 + 0.5*tmp_143;
      real_t tmp_229 = tmp_224*tmp_228;
      real_t tmp_230 = 0.5*tmp_149 + 0.5*tmp_151 + 0.5*tmp_153;
      real_t tmp_231 = tmp_152*tmp_225;
      real_t tmp_232 = tmp_164 - 1.0;
      real_t tmp_233 = 2.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_234 = tmp_232*tmp_233;
      real_t tmp_235 = tmp_201*tmp_234;
      real_t tmp_236 = tmp_183*tmp_232;
      real_t tmp_237 = 0.5*tmp_180 + 0.5*tmp_182 + 0.5*tmp_184;
      real_t tmp_238 = tmp_233*tmp_237;
      real_t tmp_239 = 0.5*tmp_190 + 0.5*tmp_192 + 0.5*tmp_194;
      real_t tmp_240 = tmp_193*tmp_234;
      real_t tmp_241 = tmp_122*(tmp_120*tmp_217 + tmp_218*tmp_220 + tmp_221*tmp_222) + tmp_163*(tmp_161*tmp_226 + tmp_227*tmp_229 + tmp_230*tmp_231) + tmp_204*(tmp_202*tmp_235 + tmp_236*tmp_238 + tmp_239*tmp_240) + tmp_81*(tmp_208*tmp_66 + tmp_209*tmp_211 + tmp_212*tmp_213);
      real_t tmp_242 = tmp_1 - 1.0;
      real_t tmp_243 = tmp_206*tmp_242;
      real_t tmp_244 = tmp_243*tmp_64;
      real_t tmp_245 = tmp_242*tmp_42;
      real_t tmp_246 = tmp_243*tmp_55;
      real_t tmp_247 = tmp_83 - 1.0;
      real_t tmp_248 = tmp_215*tmp_247;
      real_t tmp_249 = tmp_118*tmp_248;
      real_t tmp_250 = tmp_247*tmp_99;
      real_t tmp_251 = tmp_109*tmp_248;
      real_t tmp_252 = tmp_124 - 1.0;
      real_t tmp_253 = tmp_224*tmp_252;
      real_t tmp_254 = tmp_159*tmp_253;
      real_t tmp_255 = tmp_140*tmp_252;
      real_t tmp_256 = tmp_150*tmp_253;
      real_t tmp_257 = tmp_165 - 1.0;
      real_t tmp_258 = tmp_233*tmp_257;
      real_t tmp_259 = tmp_200*tmp_258;
      real_t tmp_260 = tmp_181*tmp_257;
      real_t tmp_261 = tmp_191*tmp_258;
      real_t tmp_262 = tmp_122*(tmp_120*tmp_249 + tmp_220*tmp_250 + tmp_221*tmp_251) + tmp_163*(tmp_161*tmp_254 + tmp_229*tmp_255 + tmp_230*tmp_256) + tmp_204*(tmp_202*tmp_259 + tmp_238*tmp_260 + tmp_239*tmp_261) + tmp_81*(tmp_211*tmp_245 + tmp_212*tmp_246 + tmp_244*tmp_66);
      real_t tmp_263 = tmp_2 - 1.0;
      real_t tmp_264 = tmp_206*tmp_263;
      real_t tmp_265 = tmp_264*tmp_62;
      real_t tmp_266 = tmp_263*tmp_37;
      real_t tmp_267 = tmp_264*tmp_53;
      real_t tmp_268 = tmp_84 - 1.0;
      real_t tmp_269 = tmp_215*tmp_268;
      real_t tmp_270 = tmp_116*tmp_269;
      real_t tmp_271 = tmp_268*tmp_97;
      real_t tmp_272 = tmp_107*tmp_269;
      real_t tmp_273 = tmp_125 - 1.0;
      real_t tmp_274 = tmp_224*tmp_273;
      real_t tmp_275 = tmp_157*tmp_274;
      real_t tmp_276 = tmp_138*tmp_273;
      real_t tmp_277 = tmp_148*tmp_274;
      real_t tmp_278 = tmp_166 - 1.0;
      real_t tmp_279 = tmp_233*tmp_278;
      real_t tmp_280 = tmp_198*tmp_279;
      real_t tmp_281 = tmp_179*tmp_278;
      real_t tmp_282 = tmp_189*tmp_279;
      real_t tmp_283 = tmp_122*(tmp_120*tmp_270 + tmp_220*tmp_271 + tmp_221*tmp_272) + tmp_163*(tmp_161*tmp_275 + tmp_229*tmp_276 + tmp_230*tmp_277) + tmp_204*(tmp_202*tmp_280 + tmp_238*tmp_281 + tmp_239*tmp_282) + tmp_81*(tmp_211*tmp_266 + tmp_212*tmp_267 + tmp_265*tmp_66);
      real_t tmp_284 = tmp_1*tmp_62;
      real_t tmp_285 = tmp_2*tmp_64;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_66*tmp_67;
      real_t tmp_288 = 0.13819660112501059*tmp_37;
      real_t tmp_289 = 2.0*tmp_288;
      real_t tmp_290 = 0.58541019662496829*tmp_42;
      real_t tmp_291 = 2.0*tmp_290;
      real_t tmp_292 = tmp_289 + tmp_291;
      real_t tmp_293 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_294 = tmp_210*tmp_293;
      real_t tmp_295 = 0.13819660112501059*tmp_53;
      real_t tmp_296 = 2.0*tmp_295;
      real_t tmp_297 = 0.58541019662496829*tmp_55;
      real_t tmp_298 = 2.0*tmp_297;
      real_t tmp_299 = tmp_296 + tmp_298;
      real_t tmp_300 = tmp_212*tmp_293;
      real_t tmp_301 = tmp_116*tmp_83;
      real_t tmp_302 = tmp_118*tmp_84;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = tmp_120*tmp_121;
      real_t tmp_305 = 0.58541019662496829*tmp_97;
      real_t tmp_306 = 2.0*tmp_305;
      real_t tmp_307 = 0.13819660112501059*tmp_99;
      real_t tmp_308 = 2.0*tmp_307;
      real_t tmp_309 = tmp_306 + tmp_308;
      real_t tmp_310 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_311 = tmp_219*tmp_310;
      real_t tmp_312 = 0.58541019662496829*tmp_107;
      real_t tmp_313 = 2.0*tmp_312;
      real_t tmp_314 = 0.13819660112501059*tmp_109;
      real_t tmp_315 = 2.0*tmp_314;
      real_t tmp_316 = tmp_313 + tmp_315;
      real_t tmp_317 = tmp_221*tmp_310;
      real_t tmp_318 = tmp_124*tmp_157;
      real_t tmp_319 = tmp_125*tmp_159;
      real_t tmp_320 = tmp_318 + tmp_319;
      real_t tmp_321 = tmp_161*tmp_162;
      real_t tmp_322 = 0.13819660112501059*tmp_138;
      real_t tmp_323 = 2.0*tmp_322;
      real_t tmp_324 = 0.13819660112501059*tmp_140;
      real_t tmp_325 = 2.0*tmp_324;
      real_t tmp_326 = tmp_323 + tmp_325;
      real_t tmp_327 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_328 = tmp_228*tmp_327;
      real_t tmp_329 = 0.13819660112501059*tmp_148;
      real_t tmp_330 = 2.0*tmp_329;
      real_t tmp_331 = 0.13819660112501059*tmp_150;
      real_t tmp_332 = 2.0*tmp_331;
      real_t tmp_333 = tmp_330 + tmp_332;
      real_t tmp_334 = tmp_230*tmp_327;
      real_t tmp_335 = tmp_165*tmp_198;
      real_t tmp_336 = tmp_166*tmp_200;
      real_t tmp_337 = tmp_335 + tmp_336;
      real_t tmp_338 = tmp_202*tmp_203;
      real_t tmp_339 = 0.13819660112501059*tmp_179;
      real_t tmp_340 = 2.0*tmp_339;
      real_t tmp_341 = 0.13819660112501059*tmp_181;
      real_t tmp_342 = 2.0*tmp_341;
      real_t tmp_343 = tmp_340 + tmp_342;
      real_t tmp_344 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_345 = tmp_237*tmp_344;
      real_t tmp_346 = 0.13819660112501059*tmp_189;
      real_t tmp_347 = 2.0*tmp_346;
      real_t tmp_348 = 0.13819660112501059*tmp_191;
      real_t tmp_349 = 2.0*tmp_348;
      real_t tmp_350 = tmp_347 + tmp_349;
      real_t tmp_351 = tmp_239*tmp_344;
      real_t tmp_352 = tmp_122*(tmp_303*tmp_304 + tmp_309*tmp_311 + tmp_316*tmp_317) + tmp_163*(tmp_320*tmp_321 + tmp_326*tmp_328 + tmp_333*tmp_334) + tmp_204*(tmp_337*tmp_338 + tmp_343*tmp_345 + tmp_350*tmp_351) + tmp_81*(tmp_286*tmp_287 + tmp_292*tmp_294 + tmp_299*tmp_300);
      real_t tmp_353 = tmp_0*tmp_62;
      real_t tmp_354 = tmp_2*tmp_65;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = 0.13819660112501059*tmp_37;
      real_t tmp_357 = 2.0*tmp_356;
      real_t tmp_358 = 0.58541019662496829*tmp_47;
      real_t tmp_359 = 2.0*tmp_358;
      real_t tmp_360 = tmp_357 + tmp_359;
      real_t tmp_361 = 0.13819660112501059*tmp_53;
      real_t tmp_362 = 2.0*tmp_361;
      real_t tmp_363 = 0.58541019662496829*tmp_57;
      real_t tmp_364 = 2.0*tmp_363;
      real_t tmp_365 = tmp_362 + tmp_364;
      real_t tmp_366 = tmp_116*tmp_82;
      real_t tmp_367 = tmp_119*tmp_84;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = 0.13819660112501059*tmp_97;
      real_t tmp_370 = 2.0*tmp_369;
      real_t tmp_371 = 0.13819660112501059*tmp_101;
      real_t tmp_372 = 2.0*tmp_371;
      real_t tmp_373 = tmp_370 + tmp_372;
      real_t tmp_374 = 0.13819660112501059*tmp_107;
      real_t tmp_375 = 2.0*tmp_374;
      real_t tmp_376 = 0.13819660112501059*tmp_111;
      real_t tmp_377 = 2.0*tmp_376;
      real_t tmp_378 = tmp_375 + tmp_377;
      real_t tmp_379 = tmp_123*tmp_157;
      real_t tmp_380 = tmp_125*tmp_160;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = 0.58541019662496829*tmp_138;
      real_t tmp_383 = 2.0*tmp_382;
      real_t tmp_384 = 0.13819660112501059*tmp_142;
      real_t tmp_385 = 2.0*tmp_384;
      real_t tmp_386 = tmp_383 + tmp_385;
      real_t tmp_387 = 0.58541019662496829*tmp_148;
      real_t tmp_388 = 2.0*tmp_387;
      real_t tmp_389 = 0.13819660112501059*tmp_152;
      real_t tmp_390 = 2.0*tmp_389;
      real_t tmp_391 = tmp_388 + tmp_390;
      real_t tmp_392 = tmp_164*tmp_198;
      real_t tmp_393 = tmp_166*tmp_201;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = 0.13819660112501059*tmp_179;
      real_t tmp_396 = 2.0*tmp_395;
      real_t tmp_397 = 0.13819660112501059*tmp_183;
      real_t tmp_398 = 2.0*tmp_397;
      real_t tmp_399 = tmp_396 + tmp_398;
      real_t tmp_400 = 0.13819660112501059*tmp_189;
      real_t tmp_401 = 2.0*tmp_400;
      real_t tmp_402 = 0.13819660112501059*tmp_193;
      real_t tmp_403 = 2.0*tmp_402;
      real_t tmp_404 = tmp_401 + tmp_403;
      real_t tmp_405 = tmp_122*(tmp_304*tmp_368 + tmp_311*tmp_373 + tmp_317*tmp_378) + tmp_163*(tmp_321*tmp_381 + tmp_328*tmp_386 + tmp_334*tmp_391) + tmp_204*(tmp_338*tmp_394 + tmp_345*tmp_399 + tmp_351*tmp_404) + tmp_81*(tmp_287*tmp_355 + tmp_294*tmp_360 + tmp_300*tmp_365);
      real_t tmp_406 = tmp_0*tmp_64;
      real_t tmp_407 = tmp_1*tmp_65;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = 0.13819660112501059*tmp_42;
      real_t tmp_410 = 2.0*tmp_409;
      real_t tmp_411 = 0.13819660112501059*tmp_47;
      real_t tmp_412 = 2.0*tmp_411;
      real_t tmp_413 = tmp_410 + tmp_412;
      real_t tmp_414 = 0.13819660112501059*tmp_55;
      real_t tmp_415 = 2.0*tmp_414;
      real_t tmp_416 = 0.13819660112501059*tmp_57;
      real_t tmp_417 = 2.0*tmp_416;
      real_t tmp_418 = tmp_415 + tmp_417;
      real_t tmp_419 = tmp_118*tmp_82;
      real_t tmp_420 = tmp_119*tmp_83;
      real_t tmp_421 = tmp_419 + tmp_420;
      real_t tmp_422 = 0.13819660112501059*tmp_99;
      real_t tmp_423 = 2.0*tmp_422;
      real_t tmp_424 = 0.58541019662496829*tmp_101;
      real_t tmp_425 = 2.0*tmp_424;
      real_t tmp_426 = tmp_423 + tmp_425;
      real_t tmp_427 = 0.13819660112501059*tmp_109;
      real_t tmp_428 = 2.0*tmp_427;
      real_t tmp_429 = 0.58541019662496829*tmp_111;
      real_t tmp_430 = 2.0*tmp_429;
      real_t tmp_431 = tmp_428 + tmp_430;
      real_t tmp_432 = tmp_123*tmp_159;
      real_t tmp_433 = tmp_124*tmp_160;
      real_t tmp_434 = tmp_432 + tmp_433;
      real_t tmp_435 = 0.58541019662496829*tmp_140;
      real_t tmp_436 = 2.0*tmp_435;
      real_t tmp_437 = 0.13819660112501059*tmp_142;
      real_t tmp_438 = 2.0*tmp_437;
      real_t tmp_439 = tmp_436 + tmp_438;
      real_t tmp_440 = 0.58541019662496829*tmp_150;
      real_t tmp_441 = 2.0*tmp_440;
      real_t tmp_442 = 0.13819660112501059*tmp_152;
      real_t tmp_443 = 2.0*tmp_442;
      real_t tmp_444 = tmp_441 + tmp_443;
      real_t tmp_445 = tmp_164*tmp_200;
      real_t tmp_446 = tmp_165*tmp_201;
      real_t tmp_447 = tmp_445 + tmp_446;
      real_t tmp_448 = 0.13819660112501059*tmp_181;
      real_t tmp_449 = 2.0*tmp_448;
      real_t tmp_450 = 0.13819660112501059*tmp_183;
      real_t tmp_451 = 2.0*tmp_450;
      real_t tmp_452 = tmp_449 + tmp_451;
      real_t tmp_453 = 0.13819660112501059*tmp_191;
      real_t tmp_454 = 2.0*tmp_453;
      real_t tmp_455 = 0.13819660112501059*tmp_193;
      real_t tmp_456 = 2.0*tmp_455;
      real_t tmp_457 = tmp_454 + tmp_456;
      real_t tmp_458 = tmp_122*(tmp_304*tmp_421 + tmp_311*tmp_426 + tmp_317*tmp_431) + tmp_163*(tmp_321*tmp_434 + tmp_328*tmp_439 + tmp_334*tmp_444) + tmp_204*(tmp_338*tmp_447 + tmp_345*tmp_452 + tmp_351*tmp_457) + tmp_81*(tmp_287*tmp_408 + tmp_294*tmp_413 + tmp_300*tmp_418);
      real_t tmp_459 = -tmp_1;
      real_t tmp_460 = 4.0 - tmp_0;
      real_t tmp_461 = tmp_459 + tmp_460 - 4.6832815729997463;
      real_t tmp_462 = tmp_461*tmp_62;
      real_t tmp_463 = -tmp_285 - tmp_354 + 1.0*tmp_462;
      real_t tmp_464 = 0.5*tmp_461;
      real_t tmp_465 = -tmp_291 - tmp_359 + tmp_37*tmp_464;
      real_t tmp_466 = -tmp_298 - tmp_364 + tmp_464*tmp_53;
      real_t tmp_467 = -tmp_83;
      real_t tmp_468 = 4.0 - tmp_82;
      real_t tmp_469 = tmp_467 + tmp_468 - 1.1055728090000847;
      real_t tmp_470 = tmp_116*tmp_469;
      real_t tmp_471 = -tmp_302 - tmp_367 + 1.0*tmp_470;
      real_t tmp_472 = 0.5*tmp_469;
      real_t tmp_473 = -tmp_308 - tmp_372 + tmp_472*tmp_97;
      real_t tmp_474 = tmp_107*tmp_472 - tmp_315 - tmp_377;
      real_t tmp_475 = -tmp_124;
      real_t tmp_476 = 4.0 - tmp_123;
      real_t tmp_477 = tmp_475 + tmp_476 - 1.1055728090000847;
      real_t tmp_478 = tmp_157*tmp_477;
      real_t tmp_479 = -tmp_319 - tmp_380 + 1.0*tmp_478;
      real_t tmp_480 = 0.5*tmp_477;
      real_t tmp_481 = tmp_138*tmp_480 - tmp_325 - tmp_385;
      real_t tmp_482 = tmp_148*tmp_480 - tmp_332 - tmp_390;
      real_t tmp_483 = -tmp_165;
      real_t tmp_484 = 4.0 - tmp_164;
      real_t tmp_485 = tmp_483 + tmp_484 - 1.1055728090000847;
      real_t tmp_486 = tmp_198*tmp_485;
      real_t tmp_487 = -tmp_336 - tmp_393 + 1.0*tmp_486;
      real_t tmp_488 = 0.5*tmp_485;
      real_t tmp_489 = tmp_179*tmp_488 - tmp_342 - tmp_398;
      real_t tmp_490 = tmp_189*tmp_488 - tmp_349 - tmp_403;
      real_t tmp_491 = tmp_122*(tmp_304*tmp_471 + tmp_311*tmp_473 + tmp_317*tmp_474) + tmp_163*(tmp_321*tmp_479 + tmp_328*tmp_481 + tmp_334*tmp_482) + tmp_204*(tmp_338*tmp_487 + tmp_345*tmp_489 + tmp_351*tmp_490) + tmp_81*(tmp_287*tmp_463 + tmp_294*tmp_465 + tmp_300*tmp_466);
      real_t tmp_492 = -tmp_2;
      real_t tmp_493 = tmp_460 + tmp_492 - 1.1055728090000847;
      real_t tmp_494 = tmp_493*tmp_64;
      real_t tmp_495 = -tmp_284 - tmp_407 + 1.0*tmp_494;
      real_t tmp_496 = 0.5*tmp_493;
      real_t tmp_497 = -tmp_289 - tmp_412 + tmp_42*tmp_496;
      real_t tmp_498 = -tmp_296 - tmp_417 + tmp_496*tmp_55;
      real_t tmp_499 = -tmp_84;
      real_t tmp_500 = tmp_468 + tmp_499 - 4.6832815729997463;
      real_t tmp_501 = tmp_118*tmp_500;
      real_t tmp_502 = -tmp_301 - tmp_420 + 1.0*tmp_501;
      real_t tmp_503 = 0.5*tmp_500;
      real_t tmp_504 = -tmp_306 - tmp_425 + tmp_503*tmp_99;
      real_t tmp_505 = tmp_109*tmp_503 - tmp_313 - tmp_430;
      real_t tmp_506 = -tmp_125;
      real_t tmp_507 = tmp_476 + tmp_506 - 1.1055728090000847;
      real_t tmp_508 = tmp_159*tmp_507;
      real_t tmp_509 = -tmp_318 - tmp_433 + 1.0*tmp_508;
      real_t tmp_510 = 0.5*tmp_507;
      real_t tmp_511 = tmp_140*tmp_510 - tmp_323 - tmp_438;
      real_t tmp_512 = tmp_150*tmp_510 - tmp_330 - tmp_443;
      real_t tmp_513 = -tmp_166;
      real_t tmp_514 = tmp_484 + tmp_513 - 1.1055728090000847;
      real_t tmp_515 = tmp_200*tmp_514;
      real_t tmp_516 = -tmp_335 - tmp_446 + 1.0*tmp_515;
      real_t tmp_517 = 0.5*tmp_514;
      real_t tmp_518 = tmp_181*tmp_517 - tmp_340 - tmp_451;
      real_t tmp_519 = tmp_191*tmp_517 - tmp_347 - tmp_456;
      real_t tmp_520 = tmp_122*(tmp_304*tmp_502 + tmp_311*tmp_504 + tmp_317*tmp_505) + tmp_163*(tmp_321*tmp_509 + tmp_328*tmp_511 + tmp_334*tmp_512) + tmp_204*(tmp_338*tmp_516 + tmp_345*tmp_518 + tmp_351*tmp_519) + tmp_81*(tmp_287*tmp_495 + tmp_294*tmp_497 + tmp_300*tmp_498);
      real_t tmp_521 = tmp_459 + tmp_492 + 2.8944271909999153;
      real_t tmp_522 = tmp_521*tmp_65;
      real_t tmp_523 = -tmp_353 - tmp_406 + 1.0*tmp_522;
      real_t tmp_524 = 0.5*tmp_521;
      real_t tmp_525 = -tmp_357 - tmp_410 + tmp_47*tmp_524;
      real_t tmp_526 = -tmp_362 - tmp_415 + tmp_524*tmp_57;
      real_t tmp_527 = tmp_467 + tmp_499 + 2.8944271909999153;
      real_t tmp_528 = tmp_119*tmp_527;
      real_t tmp_529 = -tmp_366 - tmp_419 + 1.0*tmp_528;
      real_t tmp_530 = 0.5*tmp_527;
      real_t tmp_531 = tmp_101*tmp_530 - tmp_370 - tmp_423;
      real_t tmp_532 = tmp_111*tmp_530 - tmp_375 - tmp_428;
      real_t tmp_533 = tmp_475 + tmp_506 - 0.68328157299974634;
      real_t tmp_534 = tmp_160*tmp_533;
      real_t tmp_535 = -tmp_379 - tmp_432 + 1.0*tmp_534;
      real_t tmp_536 = 0.5*tmp_533;
      real_t tmp_537 = tmp_142*tmp_536 - tmp_383 - tmp_436;
      real_t tmp_538 = tmp_152*tmp_536 - tmp_388 - tmp_441;
      real_t tmp_539 = tmp_483 + tmp_513 + 2.8944271909999153;
      real_t tmp_540 = tmp_201*tmp_539;
      real_t tmp_541 = -tmp_392 - tmp_445 + 1.0*tmp_540;
      real_t tmp_542 = 0.5*tmp_539;
      real_t tmp_543 = tmp_183*tmp_542 - tmp_396 - tmp_449;
      real_t tmp_544 = tmp_193*tmp_542 - tmp_401 - tmp_454;
      real_t tmp_545 = tmp_122*(tmp_304*tmp_529 + tmp_311*tmp_531 + tmp_317*tmp_532) + tmp_163*(tmp_321*tmp_535 + tmp_328*tmp_537 + tmp_334*tmp_538) + tmp_204*(tmp_338*tmp_541 + tmp_345*tmp_543 + tmp_351*tmp_544) + tmp_81*(tmp_287*tmp_523 + tmp_294*tmp_525 + tmp_300*tmp_526);
      real_t tmp_546 = 0.012499999999999983;
      real_t tmp_547 = 32.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_548 = 16.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_549 = tmp_546*tmp_548;
      real_t tmp_550 = 0.012499999999999983;
      real_t tmp_551 = 32.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_552 = 16.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_553 = tmp_550*tmp_552;
      real_t tmp_554 = 0.11249999999999989;
      real_t tmp_555 = 32.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_556 = 16.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_557 = tmp_554*tmp_556;
      real_t tmp_558 = 0.012499999999999983;
      real_t tmp_559 = 32.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_560 = 16.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_561 = tmp_558*tmp_560;
      real_t tmp_562 = tmp_209*tmp_49;
      real_t tmp_563 = tmp_205*tmp_49*tmp_57;
      real_t tmp_564 = tmp_242*tmp_55;
      real_t tmp_565 = tmp_103*tmp_218;
      real_t tmp_566 = tmp_103*tmp_111*tmp_214;
      real_t tmp_567 = tmp_109*tmp_247;
      real_t tmp_568 = tmp_144*tmp_227;
      real_t tmp_569 = tmp_144*tmp_152*tmp_223;
      real_t tmp_570 = tmp_150*tmp_252;
      real_t tmp_571 = tmp_185*tmp_236;
      real_t tmp_572 = tmp_185*tmp_193*tmp_232;
      real_t tmp_573 = tmp_191*tmp_257;
      real_t tmp_574 = tmp_122*(tmp_118*tmp_217*tmp_247 + tmp_250*tmp_565 + tmp_566*tmp_567) + tmp_163*(tmp_159*tmp_226*tmp_252 + tmp_255*tmp_568 + tmp_569*tmp_570) + tmp_204*(tmp_200*tmp_235*tmp_257 + tmp_260*tmp_571 + tmp_572*tmp_573) + tmp_81*(tmp_208*tmp_242*tmp_64 + tmp_245*tmp_562 + tmp_563*tmp_564);
      real_t tmp_575 = tmp_263*tmp_62;
      real_t tmp_576 = tmp_263*tmp_53;
      real_t tmp_577 = tmp_116*tmp_268;
      real_t tmp_578 = tmp_107*tmp_268;
      real_t tmp_579 = tmp_157*tmp_273;
      real_t tmp_580 = tmp_148*tmp_273;
      real_t tmp_581 = tmp_198*tmp_278;
      real_t tmp_582 = tmp_189*tmp_278;
      real_t tmp_583 = tmp_122*(tmp_217*tmp_577 + tmp_271*tmp_565 + tmp_566*tmp_578) + tmp_163*(tmp_226*tmp_579 + tmp_276*tmp_568 + tmp_569*tmp_580) + tmp_204*(tmp_235*tmp_581 + tmp_281*tmp_571 + tmp_572*tmp_582) + tmp_81*(tmp_208*tmp_575 + tmp_266*tmp_562 + tmp_563*tmp_576);
      real_t tmp_584 = tmp_206*tmp_209;
      real_t tmp_585 = tmp_215*tmp_218;
      real_t tmp_586 = tmp_224*tmp_227;
      real_t tmp_587 = tmp_233*tmp_236;
      real_t tmp_588 = tmp_122*(tmp_217*tmp_303 + tmp_222*tmp_316 + tmp_309*tmp_585) + tmp_163*(tmp_226*tmp_320 + tmp_231*tmp_333 + tmp_326*tmp_586) + tmp_204*(tmp_235*tmp_337 + tmp_240*tmp_350 + tmp_343*tmp_587) + tmp_81*(tmp_208*tmp_286 + tmp_213*tmp_299 + tmp_292*tmp_584);
      real_t tmp_589 = tmp_122*(tmp_217*tmp_368 + tmp_222*tmp_378 + tmp_373*tmp_585) + tmp_163*(tmp_226*tmp_381 + tmp_231*tmp_391 + tmp_386*tmp_586) + tmp_204*(tmp_235*tmp_394 + tmp_240*tmp_404 + tmp_399*tmp_587) + tmp_81*(tmp_208*tmp_355 + tmp_213*tmp_365 + tmp_360*tmp_584);
      real_t tmp_590 = tmp_122*(tmp_217*tmp_421 + tmp_222*tmp_431 + tmp_426*tmp_585) + tmp_163*(tmp_226*tmp_434 + tmp_231*tmp_444 + tmp_439*tmp_586) + tmp_204*(tmp_235*tmp_447 + tmp_240*tmp_457 + tmp_452*tmp_587) + tmp_81*(tmp_208*tmp_408 + tmp_213*tmp_418 + tmp_413*tmp_584);
      real_t tmp_591 = tmp_122*(tmp_217*tmp_471 + tmp_222*tmp_474 + tmp_473*tmp_585) + tmp_163*(tmp_226*tmp_479 + tmp_231*tmp_482 + tmp_481*tmp_586) + tmp_204*(tmp_235*tmp_487 + tmp_240*tmp_490 + tmp_489*tmp_587) + tmp_81*(tmp_208*tmp_463 + tmp_213*tmp_466 + tmp_465*tmp_584);
      real_t tmp_592 = tmp_122*(tmp_217*tmp_502 + tmp_222*tmp_505 + tmp_504*tmp_585) + tmp_163*(tmp_226*tmp_509 + tmp_231*tmp_512 + tmp_511*tmp_586) + tmp_204*(tmp_235*tmp_516 + tmp_240*tmp_519 + tmp_518*tmp_587) + tmp_81*(tmp_208*tmp_495 + tmp_213*tmp_498 + tmp_497*tmp_584);
      real_t tmp_593 = tmp_122*(tmp_217*tmp_529 + tmp_222*tmp_532 + tmp_531*tmp_585) + tmp_163*(tmp_226*tmp_535 + tmp_231*tmp_538 + tmp_537*tmp_586) + tmp_204*(tmp_235*tmp_541 + tmp_240*tmp_544 + tmp_543*tmp_587) + tmp_81*(tmp_208*tmp_523 + tmp_213*tmp_526 + tmp_525*tmp_584);
      real_t tmp_594 = 0.012499999999999983;
      real_t tmp_595 = tmp_548*tmp_594;
      real_t tmp_596 = 0.11249999999999989;
      real_t tmp_597 = tmp_552*tmp_596;
      real_t tmp_598 = 0.012499999999999983;
      real_t tmp_599 = tmp_556*tmp_598;
      real_t tmp_600 = 0.012499999999999983;
      real_t tmp_601 = tmp_560*tmp_600;
      real_t tmp_602 = tmp_122*(tmp_103*tmp_250*tmp_271 + tmp_103*tmp_567*tmp_578 + tmp_249*tmp_577) + tmp_163*(tmp_144*tmp_255*tmp_276 + tmp_144*tmp_570*tmp_580 + tmp_254*tmp_579) + tmp_204*(tmp_185*tmp_260*tmp_281 + tmp_185*tmp_573*tmp_582 + tmp_259*tmp_581) + tmp_81*(tmp_244*tmp_575 + tmp_245*tmp_266*tmp_49 + tmp_49*tmp_564*tmp_576);
      real_t tmp_603 = tmp_206*tmp_245;
      real_t tmp_604 = tmp_215*tmp_250;
      real_t tmp_605 = tmp_224*tmp_255;
      real_t tmp_606 = tmp_233*tmp_260;
      real_t tmp_607 = tmp_122*(tmp_249*tmp_303 + tmp_251*tmp_316 + tmp_309*tmp_604) + tmp_163*(tmp_254*tmp_320 + tmp_256*tmp_333 + tmp_326*tmp_605) + tmp_204*(tmp_259*tmp_337 + tmp_261*tmp_350 + tmp_343*tmp_606) + tmp_81*(tmp_244*tmp_286 + tmp_246*tmp_299 + tmp_292*tmp_603);
      real_t tmp_608 = tmp_122*(tmp_249*tmp_368 + tmp_251*tmp_378 + tmp_373*tmp_604) + tmp_163*(tmp_254*tmp_381 + tmp_256*tmp_391 + tmp_386*tmp_605) + tmp_204*(tmp_259*tmp_394 + tmp_261*tmp_404 + tmp_399*tmp_606) + tmp_81*(tmp_244*tmp_355 + tmp_246*tmp_365 + tmp_360*tmp_603);
      real_t tmp_609 = tmp_122*(tmp_249*tmp_421 + tmp_251*tmp_431 + tmp_426*tmp_604) + tmp_163*(tmp_254*tmp_434 + tmp_256*tmp_444 + tmp_439*tmp_605) + tmp_204*(tmp_259*tmp_447 + tmp_261*tmp_457 + tmp_452*tmp_606) + tmp_81*(tmp_244*tmp_408 + tmp_246*tmp_418 + tmp_413*tmp_603);
      real_t tmp_610 = tmp_122*(tmp_249*tmp_471 + tmp_251*tmp_474 + tmp_473*tmp_604) + tmp_163*(tmp_254*tmp_479 + tmp_256*tmp_482 + tmp_481*tmp_605) + tmp_204*(tmp_259*tmp_487 + tmp_261*tmp_490 + tmp_489*tmp_606) + tmp_81*(tmp_244*tmp_463 + tmp_246*tmp_466 + tmp_465*tmp_603);
      real_t tmp_611 = tmp_122*(tmp_249*tmp_502 + tmp_251*tmp_505 + tmp_504*tmp_604) + tmp_163*(tmp_254*tmp_509 + tmp_256*tmp_512 + tmp_511*tmp_605) + tmp_204*(tmp_259*tmp_516 + tmp_261*tmp_519 + tmp_518*tmp_606) + tmp_81*(tmp_244*tmp_495 + tmp_246*tmp_498 + tmp_497*tmp_603);
      real_t tmp_612 = tmp_122*(tmp_249*tmp_529 + tmp_251*tmp_532 + tmp_531*tmp_604) + tmp_163*(tmp_254*tmp_535 + tmp_256*tmp_538 + tmp_537*tmp_605) + tmp_204*(tmp_259*tmp_541 + tmp_261*tmp_544 + tmp_543*tmp_606) + tmp_81*(tmp_244*tmp_523 + tmp_246*tmp_526 + tmp_525*tmp_603);
      real_t tmp_613 = 0.11249999999999989;
      real_t tmp_614 = tmp_548*tmp_613;
      real_t tmp_615 = 0.012499999999999983;
      real_t tmp_616 = tmp_552*tmp_615;
      real_t tmp_617 = 0.012499999999999983;
      real_t tmp_618 = tmp_556*tmp_617;
      real_t tmp_619 = 0.012499999999999983;
      real_t tmp_620 = tmp_560*tmp_619;
      real_t tmp_621 = tmp_206*tmp_266;
      real_t tmp_622 = tmp_215*tmp_271;
      real_t tmp_623 = tmp_224*tmp_276;
      real_t tmp_624 = tmp_233*tmp_281;
      real_t tmp_625 = tmp_122*(tmp_270*tmp_303 + tmp_272*tmp_316 + tmp_309*tmp_622) + tmp_163*(tmp_275*tmp_320 + tmp_277*tmp_333 + tmp_326*tmp_623) + tmp_204*(tmp_280*tmp_337 + tmp_282*tmp_350 + tmp_343*tmp_624) + tmp_81*(tmp_265*tmp_286 + tmp_267*tmp_299 + tmp_292*tmp_621);
      real_t tmp_626 = tmp_122*(tmp_270*tmp_368 + tmp_272*tmp_378 + tmp_373*tmp_622) + tmp_163*(tmp_275*tmp_381 + tmp_277*tmp_391 + tmp_386*tmp_623) + tmp_204*(tmp_280*tmp_394 + tmp_282*tmp_404 + tmp_399*tmp_624) + tmp_81*(tmp_265*tmp_355 + tmp_267*tmp_365 + tmp_360*tmp_621);
      real_t tmp_627 = tmp_122*(tmp_270*tmp_421 + tmp_272*tmp_431 + tmp_426*tmp_622) + tmp_163*(tmp_275*tmp_434 + tmp_277*tmp_444 + tmp_439*tmp_623) + tmp_204*(tmp_280*tmp_447 + tmp_282*tmp_457 + tmp_452*tmp_624) + tmp_81*(tmp_265*tmp_408 + tmp_267*tmp_418 + tmp_413*tmp_621);
      real_t tmp_628 = tmp_122*(tmp_270*tmp_471 + tmp_272*tmp_474 + tmp_473*tmp_622) + tmp_163*(tmp_275*tmp_479 + tmp_277*tmp_482 + tmp_481*tmp_623) + tmp_204*(tmp_280*tmp_487 + tmp_282*tmp_490 + tmp_489*tmp_624) + tmp_81*(tmp_265*tmp_463 + tmp_267*tmp_466 + tmp_465*tmp_621);
      real_t tmp_629 = tmp_122*(tmp_270*tmp_502 + tmp_272*tmp_505 + tmp_504*tmp_622) + tmp_163*(tmp_275*tmp_509 + tmp_277*tmp_512 + tmp_511*tmp_623) + tmp_204*(tmp_280*tmp_516 + tmp_282*tmp_519 + tmp_518*tmp_624) + tmp_81*(tmp_265*tmp_495 + tmp_267*tmp_498 + tmp_497*tmp_621);
      real_t tmp_630 = tmp_122*(tmp_270*tmp_529 + tmp_272*tmp_532 + tmp_531*tmp_622) + tmp_163*(tmp_275*tmp_535 + tmp_277*tmp_538 + tmp_537*tmp_623) + tmp_204*(tmp_280*tmp_541 + tmp_282*tmp_544 + tmp_543*tmp_624) + tmp_81*(tmp_265*tmp_523 + tmp_267*tmp_526 + tmp_525*tmp_621);
      real_t tmp_631 = 0.13819660112501059*tmp_62;
      real_t tmp_632 = 0.58541019662496829*tmp_64;
      real_t tmp_633 = 0.58541019662496829*tmp_116;
      real_t tmp_634 = 0.13819660112501059*tmp_118;
      real_t tmp_635 = 0.13819660112501059*tmp_157;
      real_t tmp_636 = 0.13819660112501059*tmp_159;
      real_t tmp_637 = 0.13819660112501059*tmp_198;
      real_t tmp_638 = 0.13819660112501059*tmp_200;
      real_t tmp_639 = tmp_286*tmp_67;
      real_t tmp_640 = tmp_292*tmp_293;
      real_t tmp_641 = tmp_293*tmp_299;
      real_t tmp_642 = tmp_121*tmp_303;
      real_t tmp_643 = tmp_309*tmp_310;
      real_t tmp_644 = tmp_310*tmp_316;
      real_t tmp_645 = tmp_162*tmp_320;
      real_t tmp_646 = tmp_326*tmp_327;
      real_t tmp_647 = tmp_327*tmp_333;
      real_t tmp_648 = tmp_203*tmp_337;
      real_t tmp_649 = tmp_343*tmp_344;
      real_t tmp_650 = tmp_344*tmp_350;
      real_t tmp_651 = tmp_122*(tmp_368*tmp_642 + tmp_373*tmp_643 + tmp_378*tmp_644) + tmp_163*(tmp_381*tmp_645 + tmp_386*tmp_646 + tmp_391*tmp_647) + tmp_204*(tmp_394*tmp_648 + tmp_399*tmp_649 + tmp_404*tmp_650) + tmp_81*(tmp_355*tmp_639 + tmp_360*tmp_640 + tmp_365*tmp_641);
      real_t tmp_652 = tmp_122*(tmp_421*tmp_642 + tmp_426*tmp_643 + tmp_431*tmp_644) + tmp_163*(tmp_434*tmp_645 + tmp_439*tmp_646 + tmp_444*tmp_647) + tmp_204*(tmp_447*tmp_648 + tmp_452*tmp_649 + tmp_457*tmp_650) + tmp_81*(tmp_408*tmp_639 + tmp_413*tmp_640 + tmp_418*tmp_641);
      real_t tmp_653 = tmp_122*(tmp_471*tmp_642 + tmp_473*tmp_643 + tmp_474*tmp_644) + tmp_163*(tmp_479*tmp_645 + tmp_481*tmp_646 + tmp_482*tmp_647) + tmp_204*(tmp_487*tmp_648 + tmp_489*tmp_649 + tmp_490*tmp_650) + tmp_81*(tmp_463*tmp_639 + tmp_465*tmp_640 + tmp_466*tmp_641);
      real_t tmp_654 = tmp_122*(tmp_502*tmp_642 + tmp_504*tmp_643 + tmp_505*tmp_644) + tmp_163*(tmp_509*tmp_645 + tmp_511*tmp_646 + tmp_512*tmp_647) + tmp_204*(tmp_516*tmp_648 + tmp_518*tmp_649 + tmp_519*tmp_650) + tmp_81*(tmp_495*tmp_639 + tmp_497*tmp_640 + tmp_498*tmp_641);
      real_t tmp_655 = tmp_122*(tmp_529*tmp_642 + tmp_531*tmp_643 + tmp_532*tmp_644) + tmp_163*(tmp_535*tmp_645 + tmp_537*tmp_646 + tmp_538*tmp_647) + tmp_204*(tmp_541*tmp_648 + tmp_543*tmp_649 + tmp_544*tmp_650) + tmp_81*(tmp_523*tmp_639 + tmp_525*tmp_640 + tmp_526*tmp_641);
      real_t tmp_656 = 0.13819660112501059*tmp_62;
      real_t tmp_657 = 0.58541019662496829*tmp_65;
      real_t tmp_658 = 0.13819660112501059*tmp_116;
      real_t tmp_659 = 0.13819660112501059*tmp_119;
      real_t tmp_660 = 0.58541019662496829*tmp_157;
      real_t tmp_661 = 0.13819660112501059*tmp_160;
      real_t tmp_662 = 0.13819660112501059*tmp_198;
      real_t tmp_663 = 0.13819660112501059*tmp_201;
      real_t tmp_664 = tmp_355*tmp_67;
      real_t tmp_665 = tmp_293*tmp_360;
      real_t tmp_666 = tmp_293*tmp_365;
      real_t tmp_667 = tmp_121*tmp_368;
      real_t tmp_668 = tmp_310*tmp_373;
      real_t tmp_669 = tmp_310*tmp_378;
      real_t tmp_670 = tmp_162*tmp_381;
      real_t tmp_671 = tmp_327*tmp_386;
      real_t tmp_672 = tmp_327*tmp_391;
      real_t tmp_673 = tmp_203*tmp_394;
      real_t tmp_674 = tmp_344*tmp_399;
      real_t tmp_675 = tmp_344*tmp_404;
      real_t tmp_676 = tmp_122*(tmp_421*tmp_667 + tmp_426*tmp_668 + tmp_431*tmp_669) + tmp_163*(tmp_434*tmp_670 + tmp_439*tmp_671 + tmp_444*tmp_672) + tmp_204*(tmp_447*tmp_673 + tmp_452*tmp_674 + tmp_457*tmp_675) + tmp_81*(tmp_408*tmp_664 + tmp_413*tmp_665 + tmp_418*tmp_666);
      real_t tmp_677 = tmp_122*(tmp_471*tmp_667 + tmp_473*tmp_668 + tmp_474*tmp_669) + tmp_163*(tmp_479*tmp_670 + tmp_481*tmp_671 + tmp_482*tmp_672) + tmp_204*(tmp_487*tmp_673 + tmp_489*tmp_674 + tmp_490*tmp_675) + tmp_81*(tmp_463*tmp_664 + tmp_465*tmp_665 + tmp_466*tmp_666);
      real_t tmp_678 = tmp_122*(tmp_502*tmp_667 + tmp_504*tmp_668 + tmp_505*tmp_669) + tmp_163*(tmp_509*tmp_670 + tmp_511*tmp_671 + tmp_512*tmp_672) + tmp_204*(tmp_516*tmp_673 + tmp_518*tmp_674 + tmp_519*tmp_675) + tmp_81*(tmp_495*tmp_664 + tmp_497*tmp_665 + tmp_498*tmp_666);
      real_t tmp_679 = tmp_122*(tmp_529*tmp_667 + tmp_531*tmp_668 + tmp_532*tmp_669) + tmp_163*(tmp_535*tmp_670 + tmp_537*tmp_671 + tmp_538*tmp_672) + tmp_204*(tmp_541*tmp_673 + tmp_543*tmp_674 + tmp_544*tmp_675) + tmp_81*(tmp_523*tmp_664 + tmp_525*tmp_665 + tmp_526*tmp_666);
      real_t tmp_680 = 0.13819660112501059*tmp_64;
      real_t tmp_681 = 0.13819660112501059*tmp_65;
      real_t tmp_682 = 0.13819660112501059*tmp_118;
      real_t tmp_683 = 0.58541019662496829*tmp_119;
      real_t tmp_684 = 0.58541019662496829*tmp_159;
      real_t tmp_685 = 0.13819660112501059*tmp_160;
      real_t tmp_686 = 0.13819660112501059*tmp_200;
      real_t tmp_687 = 0.13819660112501059*tmp_201;
      real_t tmp_688 = tmp_408*tmp_67;
      real_t tmp_689 = tmp_293*tmp_413;
      real_t tmp_690 = tmp_293*tmp_418;
      real_t tmp_691 = tmp_121*tmp_421;
      real_t tmp_692 = tmp_310*tmp_426;
      real_t tmp_693 = tmp_310*tmp_431;
      real_t tmp_694 = tmp_162*tmp_434;
      real_t tmp_695 = tmp_327*tmp_439;
      real_t tmp_696 = tmp_327*tmp_444;
      real_t tmp_697 = tmp_203*tmp_447;
      real_t tmp_698 = tmp_344*tmp_452;
      real_t tmp_699 = tmp_344*tmp_457;
      real_t tmp_700 = tmp_122*(tmp_471*tmp_691 + tmp_473*tmp_692 + tmp_474*tmp_693) + tmp_163*(tmp_479*tmp_694 + tmp_481*tmp_695 + tmp_482*tmp_696) + tmp_204*(tmp_487*tmp_697 + tmp_489*tmp_698 + tmp_490*tmp_699) + tmp_81*(tmp_463*tmp_688 + tmp_465*tmp_689 + tmp_466*tmp_690);
      real_t tmp_701 = tmp_122*(tmp_502*tmp_691 + tmp_504*tmp_692 + tmp_505*tmp_693) + tmp_163*(tmp_509*tmp_694 + tmp_511*tmp_695 + tmp_512*tmp_696) + tmp_204*(tmp_516*tmp_697 + tmp_518*tmp_698 + tmp_519*tmp_699) + tmp_81*(tmp_495*tmp_688 + tmp_497*tmp_689 + tmp_498*tmp_690);
      real_t tmp_702 = tmp_122*(tmp_529*tmp_691 + tmp_531*tmp_692 + tmp_532*tmp_693) + tmp_163*(tmp_535*tmp_694 + tmp_537*tmp_695 + tmp_538*tmp_696) + tmp_204*(tmp_541*tmp_697 + tmp_543*tmp_698 + tmp_544*tmp_699) + tmp_81*(tmp_523*tmp_688 + tmp_525*tmp_689 + tmp_526*tmp_690);
      real_t tmp_703 = 0.25*tmp_461;
      real_t tmp_704 = 0.25*tmp_469;
      real_t tmp_705 = 0.25*tmp_477;
      real_t tmp_706 = 0.25*tmp_485;
      real_t tmp_707 = tmp_463*tmp_67;
      real_t tmp_708 = tmp_293*tmp_465;
      real_t tmp_709 = tmp_293*tmp_466;
      real_t tmp_710 = tmp_121*tmp_471;
      real_t tmp_711 = tmp_310*tmp_473;
      real_t tmp_712 = tmp_310*tmp_474;
      real_t tmp_713 = tmp_162*tmp_479;
      real_t tmp_714 = tmp_327*tmp_481;
      real_t tmp_715 = tmp_327*tmp_482;
      real_t tmp_716 = tmp_203*tmp_487;
      real_t tmp_717 = tmp_344*tmp_489;
      real_t tmp_718 = tmp_344*tmp_490;
      real_t tmp_719 = tmp_122*(tmp_502*tmp_710 + tmp_504*tmp_711 + tmp_505*tmp_712) + tmp_163*(tmp_509*tmp_713 + tmp_511*tmp_714 + tmp_512*tmp_715) + tmp_204*(tmp_516*tmp_716 + tmp_518*tmp_717 + tmp_519*tmp_718) + tmp_81*(tmp_495*tmp_707 + tmp_497*tmp_708 + tmp_498*tmp_709);
      real_t tmp_720 = tmp_122*(tmp_529*tmp_710 + tmp_531*tmp_711 + tmp_532*tmp_712) + tmp_163*(tmp_535*tmp_713 + tmp_537*tmp_714 + tmp_538*tmp_715) + tmp_204*(tmp_541*tmp_716 + tmp_543*tmp_717 + tmp_544*tmp_718) + tmp_81*(tmp_523*tmp_707 + tmp_525*tmp_708 + tmp_526*tmp_709);
      real_t tmp_721 = 0.25*tmp_493;
      real_t tmp_722 = 0.25*tmp_500;
      real_t tmp_723 = 0.25*tmp_507;
      real_t tmp_724 = 0.25*tmp_514;
      real_t tmp_725 = tmp_122*(tmp_121*tmp_502*tmp_529 + tmp_310*tmp_504*tmp_531 + tmp_310*tmp_505*tmp_532) + tmp_163*(tmp_162*tmp_509*tmp_535 + tmp_327*tmp_511*tmp_537 + tmp_327*tmp_512*tmp_538) + tmp_204*(tmp_203*tmp_516*tmp_541 + tmp_344*tmp_518*tmp_543 + tmp_344*tmp_519*tmp_544) + tmp_81*(tmp_293*tmp_497*tmp_525 + tmp_293*tmp_498*tmp_526 + tmp_495*tmp_523*tmp_67);
      real_t tmp_726 = 0.25*tmp_521;
      real_t tmp_727 = 0.25*tmp_527;
      real_t tmp_728 = 0.25*tmp_533;
      real_t tmp_729 = 0.25*tmp_539;
      real_t a_0_0 = tmp_122*(tmp_103*((tmp_100 + tmp_102 + tmp_98)*(tmp_100 + tmp_102 + tmp_98)) + tmp_103*((tmp_108 + tmp_110 + tmp_112)*(tmp_108 + tmp_110 + tmp_112)) + (tmp_120*tmp_120)*tmp_121) + tmp_163*(tmp_144*((tmp_139 + tmp_141 + tmp_143)*(tmp_139 + tmp_141 + tmp_143)) + tmp_144*((tmp_149 + tmp_151 + tmp_153)*(tmp_149 + tmp_151 + tmp_153)) + (tmp_161*tmp_161)*tmp_162) + tmp_204*(tmp_185*((tmp_180 + tmp_182 + tmp_184)*(tmp_180 + tmp_182 + tmp_184)) + tmp_185*((tmp_190 + tmp_192 + tmp_194)*(tmp_190 + tmp_192 + tmp_194)) + (tmp_202*tmp_202)*tmp_203) + tmp_81*(tmp_49*((tmp_38 + tmp_43 + tmp_48)*(tmp_38 + tmp_43 + tmp_48)) + tmp_49*((tmp_54 + tmp_56 + tmp_58)*(tmp_54 + tmp_56 + tmp_58)) + (tmp_66*tmp_66)*tmp_67);
      real_t a_0_1 = tmp_241;
      real_t a_0_2 = tmp_262;
      real_t a_0_3 = tmp_283;
      real_t a_0_4 = tmp_352;
      real_t a_0_5 = tmp_405;
      real_t a_0_6 = tmp_458;
      real_t a_0_7 = tmp_491;
      real_t a_0_8 = tmp_520;
      real_t a_0_9 = tmp_545;
      real_t a_1_0 = tmp_241;
      real_t a_1_1 = tmp_122*((tmp_101*tmp_101)*tmp_553 + (tmp_111*tmp_111)*tmp_553 + (tmp_119*tmp_119)*tmp_550*tmp_551) + tmp_163*((tmp_142*tmp_142)*tmp_557 + (tmp_152*tmp_152)*tmp_557 + (tmp_160*tmp_160)*tmp_554*tmp_555) + tmp_204*((tmp_183*tmp_183)*tmp_561 + (tmp_193*tmp_193)*tmp_561 + (tmp_201*tmp_201)*tmp_558*tmp_559) + tmp_81*((tmp_47*tmp_47)*tmp_549 + tmp_546*tmp_547*(tmp_65*tmp_65) + tmp_549*(tmp_57*tmp_57));
      real_t a_1_2 = tmp_574;
      real_t a_1_3 = tmp_583;
      real_t a_1_4 = tmp_588;
      real_t a_1_5 = tmp_589;
      real_t a_1_6 = tmp_590;
      real_t a_1_7 = tmp_591;
      real_t a_1_8 = tmp_592;
      real_t a_1_9 = tmp_593;
      real_t a_2_0 = tmp_262;
      real_t a_2_1 = tmp_574;
      real_t a_2_2 = tmp_122*((tmp_109*tmp_109)*tmp_597 + (tmp_118*tmp_118)*tmp_551*tmp_596 + tmp_597*(tmp_99*tmp_99)) + tmp_163*((tmp_140*tmp_140)*tmp_599 + (tmp_150*tmp_150)*tmp_599 + (tmp_159*tmp_159)*tmp_555*tmp_598) + tmp_204*((tmp_181*tmp_181)*tmp_601 + (tmp_191*tmp_191)*tmp_601 + (tmp_200*tmp_200)*tmp_559*tmp_600) + tmp_81*((tmp_42*tmp_42)*tmp_595 + tmp_547*tmp_594*(tmp_64*tmp_64) + (tmp_55*tmp_55)*tmp_595);
      real_t a_2_3 = tmp_602;
      real_t a_2_4 = tmp_607;
      real_t a_2_5 = tmp_608;
      real_t a_2_6 = tmp_609;
      real_t a_2_7 = tmp_610;
      real_t a_2_8 = tmp_611;
      real_t a_2_9 = tmp_612;
      real_t a_3_0 = tmp_283;
      real_t a_3_1 = tmp_583;
      real_t a_3_2 = tmp_602;
      real_t a_3_3 = tmp_122*((tmp_107*tmp_107)*tmp_616 + (tmp_116*tmp_116)*tmp_551*tmp_615 + tmp_616*(tmp_97*tmp_97)) + tmp_163*((tmp_138*tmp_138)*tmp_618 + (tmp_148*tmp_148)*tmp_618 + (tmp_157*tmp_157)*tmp_555*tmp_617) + tmp_204*((tmp_179*tmp_179)*tmp_620 + (tmp_189*tmp_189)*tmp_620 + (tmp_198*tmp_198)*tmp_559*tmp_619) + tmp_81*((tmp_37*tmp_37)*tmp_614 + (tmp_53*tmp_53)*tmp_614 + tmp_547*tmp_613*(tmp_62*tmp_62));
      real_t a_3_4 = tmp_625;
      real_t a_3_5 = tmp_626;
      real_t a_3_6 = tmp_627;
      real_t a_3_7 = tmp_628;
      real_t a_3_8 = tmp_629;
      real_t a_3_9 = tmp_630;
      real_t a_4_0 = tmp_352;
      real_t a_4_1 = tmp_588;
      real_t a_4_2 = tmp_607;
      real_t a_4_3 = tmp_625;
      real_t a_4_4 = tmp_122*(tmp_551*((tmp_633 + tmp_634)*(tmp_633 + tmp_634)) + tmp_552*((tmp_305 + tmp_307)*(tmp_305 + tmp_307)) + tmp_552*((tmp_312 + tmp_314)*(tmp_312 + tmp_314))) + tmp_163*(tmp_555*((tmp_635 + tmp_636)*(tmp_635 + tmp_636)) + tmp_556*((tmp_322 + tmp_324)*(tmp_322 + tmp_324)) + tmp_556*((tmp_329 + tmp_331)*(tmp_329 + tmp_331))) + tmp_204*(tmp_559*((tmp_637 + tmp_638)*(tmp_637 + tmp_638)) + tmp_560*((tmp_339 + tmp_341)*(tmp_339 + tmp_341)) + tmp_560*((tmp_346 + tmp_348)*(tmp_346 + tmp_348))) + tmp_81*(tmp_547*((tmp_631 + tmp_632)*(tmp_631 + tmp_632)) + tmp_548*((tmp_288 + tmp_290)*(tmp_288 + tmp_290)) + tmp_548*((tmp_295 + tmp_297)*(tmp_295 + tmp_297)));
      real_t a_4_5 = tmp_651;
      real_t a_4_6 = tmp_652;
      real_t a_4_7 = tmp_653;
      real_t a_4_8 = tmp_654;
      real_t a_4_9 = tmp_655;
      real_t a_5_0 = tmp_405;
      real_t a_5_1 = tmp_589;
      real_t a_5_2 = tmp_608;
      real_t a_5_3 = tmp_626;
      real_t a_5_4 = tmp_651;
      real_t a_5_5 = tmp_122*(tmp_551*((tmp_658 + tmp_659)*(tmp_658 + tmp_659)) + tmp_552*((tmp_369 + tmp_371)*(tmp_369 + tmp_371)) + tmp_552*((tmp_374 + tmp_376)*(tmp_374 + tmp_376))) + tmp_163*(tmp_555*((tmp_660 + tmp_661)*(tmp_660 + tmp_661)) + tmp_556*((tmp_382 + tmp_384)*(tmp_382 + tmp_384)) + tmp_556*((tmp_387 + tmp_389)*(tmp_387 + tmp_389))) + tmp_204*(tmp_559*((tmp_662 + tmp_663)*(tmp_662 + tmp_663)) + tmp_560*((tmp_395 + tmp_397)*(tmp_395 + tmp_397)) + tmp_560*((tmp_400 + tmp_402)*(tmp_400 + tmp_402))) + tmp_81*(tmp_547*((tmp_656 + tmp_657)*(tmp_656 + tmp_657)) + tmp_548*((tmp_356 + tmp_358)*(tmp_356 + tmp_358)) + tmp_548*((tmp_361 + tmp_363)*(tmp_361 + tmp_363)));
      real_t a_5_6 = tmp_676;
      real_t a_5_7 = tmp_677;
      real_t a_5_8 = tmp_678;
      real_t a_5_9 = tmp_679;
      real_t a_6_0 = tmp_458;
      real_t a_6_1 = tmp_590;
      real_t a_6_2 = tmp_609;
      real_t a_6_3 = tmp_627;
      real_t a_6_4 = tmp_652;
      real_t a_6_5 = tmp_676;
      real_t a_6_6 = tmp_122*(tmp_551*((tmp_682 + tmp_683)*(tmp_682 + tmp_683)) + tmp_552*((tmp_422 + tmp_424)*(tmp_422 + tmp_424)) + tmp_552*((tmp_427 + tmp_429)*(tmp_427 + tmp_429))) + tmp_163*(tmp_555*((tmp_684 + tmp_685)*(tmp_684 + tmp_685)) + tmp_556*((tmp_435 + tmp_437)*(tmp_435 + tmp_437)) + tmp_556*((tmp_440 + tmp_442)*(tmp_440 + tmp_442))) + tmp_204*(tmp_559*((tmp_686 + tmp_687)*(tmp_686 + tmp_687)) + tmp_560*((tmp_448 + tmp_450)*(tmp_448 + tmp_450)) + tmp_560*((tmp_453 + tmp_455)*(tmp_453 + tmp_455))) + tmp_81*(tmp_547*((tmp_680 + tmp_681)*(tmp_680 + tmp_681)) + tmp_548*((tmp_409 + tmp_411)*(tmp_409 + tmp_411)) + tmp_548*((tmp_414 + tmp_416)*(tmp_414 + tmp_416)));
      real_t a_6_7 = tmp_700;
      real_t a_6_8 = tmp_701;
      real_t a_6_9 = tmp_702;
      real_t a_7_0 = tmp_491;
      real_t a_7_1 = tmp_591;
      real_t a_7_2 = tmp_610;
      real_t a_7_3 = tmp_628;
      real_t a_7_4 = tmp_653;
      real_t a_7_5 = tmp_677;
      real_t a_7_6 = tmp_700;
      real_t a_7_7 = tmp_122*(tmp_551*((0.25*tmp_470 - tmp_634 - tmp_659)*(0.25*tmp_470 - tmp_634 - tmp_659)) + tmp_552*((-tmp_307 - tmp_371 + tmp_704*tmp_97)*(-tmp_307 - tmp_371 + tmp_704*tmp_97)) + tmp_552*((tmp_107*tmp_704 - tmp_314 - tmp_376)*(tmp_107*tmp_704 - tmp_314 - tmp_376))) + tmp_163*(tmp_555*((0.25*tmp_478 - tmp_636 - tmp_661)*(0.25*tmp_478 - tmp_636 - tmp_661)) + tmp_556*((tmp_138*tmp_705 - tmp_324 - tmp_384)*(tmp_138*tmp_705 - tmp_324 - tmp_384)) + tmp_556*((tmp_148*tmp_705 - tmp_331 - tmp_389)*(tmp_148*tmp_705 - tmp_331 - tmp_389))) + tmp_204*(tmp_559*((0.25*tmp_486 - tmp_638 - tmp_663)*(0.25*tmp_486 - tmp_638 - tmp_663)) + tmp_560*((tmp_179*tmp_706 - tmp_341 - tmp_397)*(tmp_179*tmp_706 - tmp_341 - tmp_397)) + tmp_560*((tmp_189*tmp_706 - tmp_348 - tmp_402)*(tmp_189*tmp_706 - tmp_348 - tmp_402))) + tmp_81*(tmp_547*((0.25*tmp_462 - tmp_632 - tmp_657)*(0.25*tmp_462 - tmp_632 - tmp_657)) + tmp_548*((-tmp_290 - tmp_358 + tmp_37*tmp_703)*(-tmp_290 - tmp_358 + tmp_37*tmp_703)) + tmp_548*((-tmp_297 - tmp_363 + tmp_53*tmp_703)*(-tmp_297 - tmp_363 + tmp_53*tmp_703)));
      real_t a_7_8 = tmp_719;
      real_t a_7_9 = tmp_720;
      real_t a_8_0 = tmp_520;
      real_t a_8_1 = tmp_592;
      real_t a_8_2 = tmp_611;
      real_t a_8_3 = tmp_629;
      real_t a_8_4 = tmp_654;
      real_t a_8_5 = tmp_678;
      real_t a_8_6 = tmp_701;
      real_t a_8_7 = tmp_719;
      real_t a_8_8 = tmp_122*(tmp_551*((0.25*tmp_501 - tmp_633 - tmp_683)*(0.25*tmp_501 - tmp_633 - tmp_683)) + tmp_552*((-tmp_305 - tmp_424 + tmp_722*tmp_99)*(-tmp_305 - tmp_424 + tmp_722*tmp_99)) + tmp_552*((tmp_109*tmp_722 - tmp_312 - tmp_429)*(tmp_109*tmp_722 - tmp_312 - tmp_429))) + tmp_163*(tmp_555*((0.25*tmp_508 - tmp_635 - tmp_685)*(0.25*tmp_508 - tmp_635 - tmp_685)) + tmp_556*((tmp_140*tmp_723 - tmp_322 - tmp_437)*(tmp_140*tmp_723 - tmp_322 - tmp_437)) + tmp_556*((tmp_150*tmp_723 - tmp_329 - tmp_442)*(tmp_150*tmp_723 - tmp_329 - tmp_442))) + tmp_204*(tmp_559*((0.25*tmp_515 - tmp_637 - tmp_687)*(0.25*tmp_515 - tmp_637 - tmp_687)) + tmp_560*((tmp_181*tmp_724 - tmp_339 - tmp_450)*(tmp_181*tmp_724 - tmp_339 - tmp_450)) + tmp_560*((tmp_191*tmp_724 - tmp_346 - tmp_455)*(tmp_191*tmp_724 - tmp_346 - tmp_455))) + tmp_81*(tmp_547*((0.25*tmp_494 - tmp_631 - tmp_681)*(0.25*tmp_494 - tmp_631 - tmp_681)) + tmp_548*((-tmp_288 - tmp_411 + tmp_42*tmp_721)*(-tmp_288 - tmp_411 + tmp_42*tmp_721)) + tmp_548*((-tmp_295 - tmp_416 + tmp_55*tmp_721)*(-tmp_295 - tmp_416 + tmp_55*tmp_721)));
      real_t a_8_9 = tmp_725;
      real_t a_9_0 = tmp_545;
      real_t a_9_1 = tmp_593;
      real_t a_9_2 = tmp_612;
      real_t a_9_3 = tmp_630;
      real_t a_9_4 = tmp_655;
      real_t a_9_5 = tmp_679;
      real_t a_9_6 = tmp_702;
      real_t a_9_7 = tmp_720;
      real_t a_9_8 = tmp_725;
      real_t a_9_9 = tmp_122*(tmp_551*((0.25*tmp_528 - tmp_658 - tmp_682)*(0.25*tmp_528 - tmp_658 - tmp_682)) + tmp_552*((tmp_101*tmp_727 - tmp_369 - tmp_422)*(tmp_101*tmp_727 - tmp_369 - tmp_422)) + tmp_552*((tmp_111*tmp_727 - tmp_374 - tmp_427)*(tmp_111*tmp_727 - tmp_374 - tmp_427))) + tmp_163*(tmp_555*((0.25*tmp_534 - tmp_660 - tmp_684)*(0.25*tmp_534 - tmp_660 - tmp_684)) + tmp_556*((tmp_142*tmp_728 - tmp_382 - tmp_435)*(tmp_142*tmp_728 - tmp_382 - tmp_435)) + tmp_556*((tmp_152*tmp_728 - tmp_387 - tmp_440)*(tmp_152*tmp_728 - tmp_387 - tmp_440))) + tmp_204*(tmp_559*((0.25*tmp_540 - tmp_662 - tmp_686)*(0.25*tmp_540 - tmp_662 - tmp_686)) + tmp_560*((tmp_183*tmp_729 - tmp_395 - tmp_448)*(tmp_183*tmp_729 - tmp_395 - tmp_448)) + tmp_560*((tmp_193*tmp_729 - tmp_400 - tmp_453)*(tmp_193*tmp_729 - tmp_400 - tmp_453))) + tmp_81*(tmp_547*((0.25*tmp_522 - tmp_656 - tmp_680)*(0.25*tmp_522 - tmp_656 - tmp_680)) + tmp_548*((-tmp_356 - tmp_409 + tmp_47*tmp_726)*(-tmp_356 - tmp_409 + tmp_47*tmp_726)) + tmp_548*((-tmp_361 - tmp_414 + tmp_57*tmp_726)*(-tmp_361 - tmp_414 + tmp_57*tmp_726)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_2_2_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_F_Tetrahedron_0_0 = 0;
      real_t Blending_F_Tetrahedron_0_1 = 0;
      real_t Blending_F_Tetrahedron_0_2 = 0;
      real_t Blending_F_Tetrahedron_1_0 = 0;
      real_t Blending_F_Tetrahedron_1_1 = 0;
      real_t Blending_F_Tetrahedron_1_2 = 0;
      real_t Blending_F_Tetrahedron_2_0 = 0;
      real_t Blending_F_Tetrahedron_2_1 = 0;
      real_t Blending_F_Tetrahedron_2_2 = 0;
      real_t Blending_F_Tetrahedron_3_0 = 0;
      real_t Blending_F_Tetrahedron_3_1 = 0;
      real_t Blending_F_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Blending_F_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_F_Tetrahedron_0_0, &Blending_F_Tetrahedron_0_1, &Blending_F_Tetrahedron_0_2 );
      Blending_F_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_1_0, &Blending_F_Tetrahedron_1_1, &Blending_F_Tetrahedron_1_2 );
      Blending_F_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_2_0, &Blending_F_Tetrahedron_2_1, &Blending_F_Tetrahedron_2_2 );
      Blending_F_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_3_0, &Blending_F_Tetrahedron_3_1, &Blending_F_Tetrahedron_3_2 );
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_0_0, Blending_F_Tetrahedron_0_1, Blending_F_Tetrahedron_0_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_1_0, Blending_F_Tetrahedron_1_1, Blending_F_Tetrahedron_1_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_2_0, Blending_F_Tetrahedron_2_1, Blending_F_Tetrahedron_2_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_3_0, Blending_F_Tetrahedron_3_1, Blending_F_Tetrahedron_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_14 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_15 - Blending_DF_Tetrahedron_0_7*tmp_16 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_17;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_50 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_51 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_53 = tmp_12*tmp_50 + tmp_33*tmp_51 + tmp_35*tmp_52;
      real_t tmp_54 = tmp_3*tmp_53;
      real_t tmp_55 = tmp_39*tmp_50 + tmp_40*tmp_51 + tmp_41*tmp_52;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_44*tmp_50 + tmp_45*tmp_51 + tmp_46*tmp_52;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_31*(tmp_13 - tmp_17);
      real_t tmp_60 = tmp_31*(tmp_15 - tmp_16);
      real_t tmp_61 = tmp_31*(tmp_14 - tmp_18);
      real_t tmp_62 = tmp_12*tmp_59 + tmp_33*tmp_60 + tmp_35*tmp_61;
      real_t tmp_63 = 1.0*tmp_3;
      real_t tmp_64 = tmp_39*tmp_59 + tmp_40*tmp_60 + tmp_41*tmp_61;
      real_t tmp_65 = tmp_44*tmp_59 + tmp_45*tmp_60 + tmp_46*tmp_61;
      real_t tmp_66 = tmp_62*tmp_63 + tmp_63*tmp_64 + tmp_63*tmp_65;
      real_t tmp_67 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_68 = p_affine_0_0*p_affine_1_1;
      real_t tmp_69 = p_affine_0_0*p_affine_1_2;
      real_t tmp_70 = p_affine_2_1*p_affine_3_2;
      real_t tmp_71 = p_affine_0_1*p_affine_1_0;
      real_t tmp_72 = p_affine_0_1*p_affine_1_2;
      real_t tmp_73 = p_affine_2_2*p_affine_3_0;
      real_t tmp_74 = p_affine_0_2*p_affine_1_0;
      real_t tmp_75 = p_affine_0_2*p_affine_1_1;
      real_t tmp_76 = p_affine_2_0*p_affine_3_1;
      real_t tmp_77 = p_affine_2_2*p_affine_3_1;
      real_t tmp_78 = p_affine_2_0*p_affine_3_2;
      real_t tmp_79 = p_affine_2_1*p_affine_3_0;
      real_t tmp_80 = std::abs(p_affine_0_0*tmp_70 - p_affine_0_0*tmp_77 + p_affine_0_1*tmp_73 - p_affine_0_1*tmp_78 + p_affine_0_2*tmp_76 - p_affine_0_2*tmp_79 - p_affine_1_0*tmp_70 + p_affine_1_0*tmp_77 - p_affine_1_1*tmp_73 + p_affine_1_1*tmp_78 - p_affine_1_2*tmp_76 + p_affine_1_2*tmp_79 + p_affine_2_0*tmp_72 - p_affine_2_0*tmp_75 - p_affine_2_1*tmp_69 + p_affine_2_1*tmp_74 + p_affine_2_2*tmp_68 - p_affine_2_2*tmp_71 - p_affine_3_0*tmp_72 + p_affine_3_0*tmp_75 + p_affine_3_1*tmp_69 - p_affine_3_1*tmp_74 - p_affine_3_2*tmp_68 + p_affine_3_2*tmp_71);
      real_t tmp_81 = 0.041666666666666657*tmp_80*std::abs(tmp_19);
      real_t tmp_82 = 0.55278640450004235;
      real_t tmp_83 = 2.3416407864998732;
      real_t tmp_84 = 0.55278640450004235;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84 - 3.0;
      real_t tmp_86 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_87 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_88 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_6*tmp_87 - Blending_DF_Tetrahedron_1_6*tmp_91 + Blending_DF_Tetrahedron_1_7*tmp_88 - Blending_DF_Tetrahedron_1_7*tmp_89 + Blending_DF_Tetrahedron_1_8*tmp_86 - Blending_DF_Tetrahedron_1_8*tmp_90;
      real_t tmp_93 = tmp_30/tmp_92;
      real_t tmp_94 = tmp_93*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_95 = tmp_93*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_96 = tmp_93*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_97 = tmp_12*tmp_94 + tmp_33*tmp_95 + tmp_35*tmp_96;
      real_t tmp_98 = tmp_85*tmp_97;
      real_t tmp_99 = tmp_39*tmp_94 + tmp_40*tmp_95 + tmp_41*tmp_96;
      real_t tmp_100 = tmp_85*tmp_99;
      real_t tmp_101 = tmp_44*tmp_94 + tmp_45*tmp_95 + tmp_46*tmp_96;
      real_t tmp_102 = tmp_101*tmp_85;
      real_t tmp_103 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_104 = tmp_93*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_105 = tmp_93*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_106 = tmp_93*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_107 = tmp_104*tmp_12 + tmp_105*tmp_33 + tmp_106*tmp_35;
      real_t tmp_108 = tmp_107*tmp_85;
      real_t tmp_109 = tmp_104*tmp_39 + tmp_105*tmp_40 + tmp_106*tmp_41;
      real_t tmp_110 = tmp_109*tmp_85;
      real_t tmp_111 = tmp_104*tmp_44 + tmp_105*tmp_45 + tmp_106*tmp_46;
      real_t tmp_112 = tmp_111*tmp_85;
      real_t tmp_113 = tmp_93*(tmp_86 - tmp_90);
      real_t tmp_114 = tmp_93*(tmp_88 - tmp_89);
      real_t tmp_115 = tmp_93*(tmp_87 - tmp_91);
      real_t tmp_116 = tmp_113*tmp_12 + tmp_114*tmp_33 + tmp_115*tmp_35;
      real_t tmp_117 = 1.0*tmp_85;
      real_t tmp_118 = tmp_113*tmp_39 + tmp_114*tmp_40 + tmp_115*tmp_41;
      real_t tmp_119 = tmp_113*tmp_44 + tmp_114*tmp_45 + tmp_115*tmp_46;
      real_t tmp_120 = tmp_116*tmp_117 + tmp_117*tmp_118 + tmp_117*tmp_119;
      real_t tmp_121 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_122 = 0.041666666666666657*tmp_80*std::abs(tmp_92);
      real_t tmp_123 = 2.3416407864998732;
      real_t tmp_124 = 0.55278640450004235;
      real_t tmp_125 = 0.55278640450004235;
      real_t tmp_126 = tmp_123 + tmp_124 + tmp_125 - 3.0;
      real_t tmp_127 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_128 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_129 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_130 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_131 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_132 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_6*tmp_128 - Blending_DF_Tetrahedron_2_6*tmp_132 + Blending_DF_Tetrahedron_2_7*tmp_129 - Blending_DF_Tetrahedron_2_7*tmp_130 + Blending_DF_Tetrahedron_2_8*tmp_127 - Blending_DF_Tetrahedron_2_8*tmp_131;
      real_t tmp_134 = tmp_30/tmp_133;
      real_t tmp_135 = tmp_134*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_136 = tmp_134*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_137 = tmp_134*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_138 = tmp_12*tmp_135 + tmp_136*tmp_33 + tmp_137*tmp_35;
      real_t tmp_139 = tmp_126*tmp_138;
      real_t tmp_140 = tmp_135*tmp_39 + tmp_136*tmp_40 + tmp_137*tmp_41;
      real_t tmp_141 = tmp_126*tmp_140;
      real_t tmp_142 = tmp_135*tmp_44 + tmp_136*tmp_45 + tmp_137*tmp_46;
      real_t tmp_143 = tmp_126*tmp_142;
      real_t tmp_144 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_145 = tmp_134*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_146 = tmp_134*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_147 = tmp_134*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_148 = tmp_12*tmp_145 + tmp_146*tmp_33 + tmp_147*tmp_35;
      real_t tmp_149 = tmp_126*tmp_148;
      real_t tmp_150 = tmp_145*tmp_39 + tmp_146*tmp_40 + tmp_147*tmp_41;
      real_t tmp_151 = tmp_126*tmp_150;
      real_t tmp_152 = tmp_145*tmp_44 + tmp_146*tmp_45 + tmp_147*tmp_46;
      real_t tmp_153 = tmp_126*tmp_152;
      real_t tmp_154 = tmp_134*(tmp_127 - tmp_131);
      real_t tmp_155 = tmp_134*(tmp_129 - tmp_130);
      real_t tmp_156 = tmp_134*(tmp_128 - tmp_132);
      real_t tmp_157 = tmp_12*tmp_154 + tmp_155*tmp_33 + tmp_156*tmp_35;
      real_t tmp_158 = 1.0*tmp_126;
      real_t tmp_159 = tmp_154*tmp_39 + tmp_155*tmp_40 + tmp_156*tmp_41;
      real_t tmp_160 = tmp_154*tmp_44 + tmp_155*tmp_45 + tmp_156*tmp_46;
      real_t tmp_161 = tmp_157*tmp_158 + tmp_158*tmp_159 + tmp_158*tmp_160;
      real_t tmp_162 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_163 = 0.041666666666666657*tmp_80*std::abs(tmp_133);
      real_t tmp_164 = 0.55278640450004235;
      real_t tmp_165 = 0.55278640450004235;
      real_t tmp_166 = 0.55278640450004235;
      real_t tmp_167 = tmp_164 + tmp_165 + tmp_166 - 3.0;
      real_t tmp_168 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_169 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_170 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_171 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_172 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_173 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_174 = Blending_DF_Tetrahedron_3_6*tmp_169 - Blending_DF_Tetrahedron_3_6*tmp_173 + Blending_DF_Tetrahedron_3_7*tmp_170 - Blending_DF_Tetrahedron_3_7*tmp_171 + Blending_DF_Tetrahedron_3_8*tmp_168 - Blending_DF_Tetrahedron_3_8*tmp_172;
      real_t tmp_175 = tmp_30/tmp_174;
      real_t tmp_176 = tmp_175*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_177 = tmp_175*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_178 = tmp_175*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_179 = tmp_12*tmp_176 + tmp_177*tmp_33 + tmp_178*tmp_35;
      real_t tmp_180 = tmp_167*tmp_179;
      real_t tmp_181 = tmp_176*tmp_39 + tmp_177*tmp_40 + tmp_178*tmp_41;
      real_t tmp_182 = tmp_167*tmp_181;
      real_t tmp_183 = tmp_176*tmp_44 + tmp_177*tmp_45 + tmp_178*tmp_46;
      real_t tmp_184 = tmp_167*tmp_183;
      real_t tmp_185 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_186 = tmp_175*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_187 = tmp_175*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_188 = tmp_175*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_189 = tmp_12*tmp_186 + tmp_187*tmp_33 + tmp_188*tmp_35;
      real_t tmp_190 = tmp_167*tmp_189;
      real_t tmp_191 = tmp_186*tmp_39 + tmp_187*tmp_40 + tmp_188*tmp_41;
      real_t tmp_192 = tmp_167*tmp_191;
      real_t tmp_193 = tmp_186*tmp_44 + tmp_187*tmp_45 + tmp_188*tmp_46;
      real_t tmp_194 = tmp_167*tmp_193;
      real_t tmp_195 = tmp_175*(tmp_168 - tmp_172);
      real_t tmp_196 = tmp_175*(tmp_170 - tmp_171);
      real_t tmp_197 = tmp_175*(tmp_169 - tmp_173);
      real_t tmp_198 = tmp_12*tmp_195 + tmp_196*tmp_33 + tmp_197*tmp_35;
      real_t tmp_199 = 1.0*tmp_167;
      real_t tmp_200 = tmp_195*tmp_39 + tmp_196*tmp_40 + tmp_197*tmp_41;
      real_t tmp_201 = tmp_195*tmp_44 + tmp_196*tmp_45 + tmp_197*tmp_46;
      real_t tmp_202 = tmp_198*tmp_199 + tmp_199*tmp_200 + tmp_199*tmp_201;
      real_t tmp_203 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_204 = 0.041666666666666657*tmp_80*std::abs(tmp_174);
      real_t tmp_205 = 2.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_206 = tmp_205*(tmp_0 - 1.0);
      real_t tmp_207 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_208 = 0.5*tmp_54 + 0.5*tmp_56 + 0.5*tmp_58;
      real_t tmp_209 = 2.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_210 = tmp_209*(tmp_82 - 1.0);
      real_t tmp_211 = 0.5*tmp_100 + 0.5*tmp_102 + 0.5*tmp_98;
      real_t tmp_212 = 0.5*tmp_108 + 0.5*tmp_110 + 0.5*tmp_112;
      real_t tmp_213 = 2.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_214 = tmp_213*(tmp_123 - 1.0);
      real_t tmp_215 = 0.5*tmp_139 + 0.5*tmp_141 + 0.5*tmp_143;
      real_t tmp_216 = 0.5*tmp_149 + 0.5*tmp_151 + 0.5*tmp_153;
      real_t tmp_217 = 2.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_218 = tmp_217*(tmp_164 - 1.0);
      real_t tmp_219 = 0.5*tmp_180 + 0.5*tmp_182 + 0.5*tmp_184;
      real_t tmp_220 = 0.5*tmp_190 + 0.5*tmp_192 + 0.5*tmp_194;
      real_t tmp_221 = tmp_205*(tmp_1 - 1.0);
      real_t tmp_222 = tmp_209*(tmp_83 - 1.0);
      real_t tmp_223 = tmp_213*(tmp_124 - 1.0);
      real_t tmp_224 = tmp_217*(tmp_165 - 1.0);
      real_t tmp_225 = tmp_205*(tmp_2 - 1.0);
      real_t tmp_226 = tmp_209*(tmp_84 - 1.0);
      real_t tmp_227 = tmp_213*(tmp_125 - 1.0);
      real_t tmp_228 = tmp_217*(tmp_166 - 1.0);
      real_t tmp_229 = tmp_1*tmp_62;
      real_t tmp_230 = tmp_2*tmp_64;
      real_t tmp_231 = tmp_66*tmp_67;
      real_t tmp_232 = 0.27639320225002117;
      real_t tmp_233 = tmp_232*tmp_37;
      real_t tmp_234 = 1.1708203932499366;
      real_t tmp_235 = tmp_234*tmp_42;
      real_t tmp_236 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_237 = tmp_207*tmp_236;
      real_t tmp_238 = tmp_232*tmp_53;
      real_t tmp_239 = tmp_234*tmp_55;
      real_t tmp_240 = tmp_208*tmp_236;
      real_t tmp_241 = tmp_116*tmp_83;
      real_t tmp_242 = tmp_118*tmp_84;
      real_t tmp_243 = tmp_120*tmp_121;
      real_t tmp_244 = 1.1708203932499366;
      real_t tmp_245 = tmp_244*tmp_97;
      real_t tmp_246 = 0.27639320225002117;
      real_t tmp_247 = tmp_246*tmp_99;
      real_t tmp_248 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_249 = tmp_211*tmp_248;
      real_t tmp_250 = tmp_107*tmp_244;
      real_t tmp_251 = tmp_109*tmp_246;
      real_t tmp_252 = tmp_212*tmp_248;
      real_t tmp_253 = tmp_124*tmp_157;
      real_t tmp_254 = tmp_125*tmp_159;
      real_t tmp_255 = tmp_161*tmp_162;
      real_t tmp_256 = 0.27639320225002117;
      real_t tmp_257 = tmp_138*tmp_256;
      real_t tmp_258 = 0.27639320225002117;
      real_t tmp_259 = tmp_140*tmp_258;
      real_t tmp_260 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_261 = tmp_215*tmp_260;
      real_t tmp_262 = tmp_148*tmp_256;
      real_t tmp_263 = tmp_150*tmp_258;
      real_t tmp_264 = tmp_216*tmp_260;
      real_t tmp_265 = tmp_165*tmp_198;
      real_t tmp_266 = tmp_166*tmp_200;
      real_t tmp_267 = tmp_202*tmp_203;
      real_t tmp_268 = 0.27639320225002117;
      real_t tmp_269 = tmp_179*tmp_268;
      real_t tmp_270 = 0.27639320225002117;
      real_t tmp_271 = tmp_181*tmp_270;
      real_t tmp_272 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_273 = tmp_219*tmp_272;
      real_t tmp_274 = tmp_189*tmp_268;
      real_t tmp_275 = tmp_191*tmp_270;
      real_t tmp_276 = tmp_220*tmp_272;
      real_t tmp_277 = tmp_0*tmp_62;
      real_t tmp_278 = tmp_2*tmp_65;
      real_t tmp_279 = 0.27639320225002117;
      real_t tmp_280 = tmp_279*tmp_37;
      real_t tmp_281 = tmp_234*tmp_47;
      real_t tmp_282 = tmp_279*tmp_53;
      real_t tmp_283 = tmp_234*tmp_57;
      real_t tmp_284 = tmp_116*tmp_82;
      real_t tmp_285 = tmp_119*tmp_84;
      real_t tmp_286 = 0.27639320225002117;
      real_t tmp_287 = tmp_286*tmp_97;
      real_t tmp_288 = tmp_101*tmp_246;
      real_t tmp_289 = tmp_107*tmp_286;
      real_t tmp_290 = tmp_111*tmp_246;
      real_t tmp_291 = tmp_123*tmp_157;
      real_t tmp_292 = tmp_125*tmp_160;
      real_t tmp_293 = 1.1708203932499366;
      real_t tmp_294 = tmp_138*tmp_293;
      real_t tmp_295 = tmp_142*tmp_258;
      real_t tmp_296 = tmp_148*tmp_293;
      real_t tmp_297 = tmp_152*tmp_258;
      real_t tmp_298 = tmp_164*tmp_198;
      real_t tmp_299 = tmp_166*tmp_201;
      real_t tmp_300 = 0.27639320225002117;
      real_t tmp_301 = tmp_179*tmp_300;
      real_t tmp_302 = tmp_183*tmp_270;
      real_t tmp_303 = tmp_189*tmp_300;
      real_t tmp_304 = tmp_193*tmp_270;
      real_t tmp_305 = tmp_0*tmp_64;
      real_t tmp_306 = tmp_1*tmp_65;
      real_t tmp_307 = tmp_279*tmp_42;
      real_t tmp_308 = tmp_232*tmp_47;
      real_t tmp_309 = tmp_279*tmp_55;
      real_t tmp_310 = tmp_232*tmp_57;
      real_t tmp_311 = tmp_118*tmp_82;
      real_t tmp_312 = tmp_119*tmp_83;
      real_t tmp_313 = tmp_286*tmp_99;
      real_t tmp_314 = tmp_101*tmp_244;
      real_t tmp_315 = tmp_109*tmp_286;
      real_t tmp_316 = tmp_111*tmp_244;
      real_t tmp_317 = tmp_123*tmp_159;
      real_t tmp_318 = tmp_124*tmp_160;
      real_t tmp_319 = tmp_140*tmp_293;
      real_t tmp_320 = tmp_142*tmp_256;
      real_t tmp_321 = tmp_150*tmp_293;
      real_t tmp_322 = tmp_152*tmp_256;
      real_t tmp_323 = tmp_164*tmp_200;
      real_t tmp_324 = tmp_165*tmp_201;
      real_t tmp_325 = tmp_181*tmp_300;
      real_t tmp_326 = tmp_183*tmp_268;
      real_t tmp_327 = tmp_191*tmp_300;
      real_t tmp_328 = tmp_193*tmp_268;
      real_t tmp_329 = -tmp_1;
      real_t tmp_330 = 4.0 - tmp_0;
      real_t tmp_331 = tmp_329 + tmp_330 - 4.6832815729997463;
      real_t tmp_332 = 0.5*tmp_331;
      real_t tmp_333 = -tmp_83;
      real_t tmp_334 = 4.0 - tmp_82;
      real_t tmp_335 = tmp_333 + tmp_334 - 1.1055728090000847;
      real_t tmp_336 = 0.5*tmp_335;
      real_t tmp_337 = -tmp_124;
      real_t tmp_338 = 4.0 - tmp_123;
      real_t tmp_339 = tmp_337 + tmp_338 - 1.1055728090000847;
      real_t tmp_340 = 0.5*tmp_339;
      real_t tmp_341 = -tmp_165;
      real_t tmp_342 = 4.0 - tmp_164;
      real_t tmp_343 = tmp_341 + tmp_342 - 1.1055728090000847;
      real_t tmp_344 = 0.5*tmp_343;
      real_t tmp_345 = -tmp_2;
      real_t tmp_346 = tmp_330 + tmp_345 - 1.1055728090000847;
      real_t tmp_347 = 0.5*tmp_346;
      real_t tmp_348 = -tmp_84;
      real_t tmp_349 = tmp_334 + tmp_348 - 4.6832815729997463;
      real_t tmp_350 = 0.5*tmp_349;
      real_t tmp_351 = -tmp_125;
      real_t tmp_352 = tmp_338 + tmp_351 - 1.1055728090000847;
      real_t tmp_353 = 0.5*tmp_352;
      real_t tmp_354 = -tmp_166;
      real_t tmp_355 = tmp_342 + tmp_354 - 1.1055728090000847;
      real_t tmp_356 = 0.5*tmp_355;
      real_t tmp_357 = tmp_329 + tmp_345 + 2.8944271909999153;
      real_t tmp_358 = 0.5*tmp_357;
      real_t tmp_359 = tmp_333 + tmp_348 + 2.8944271909999153;
      real_t tmp_360 = 0.5*tmp_359;
      real_t tmp_361 = tmp_337 + tmp_351 - 0.68328157299974634;
      real_t tmp_362 = 0.5*tmp_361;
      real_t tmp_363 = tmp_341 + tmp_354 + 2.8944271909999153;
      real_t tmp_364 = 0.5*tmp_363;
      real_t a_0_0 = tmp_122*(tmp_103*((tmp_100 + tmp_102 + tmp_98)*(tmp_100 + tmp_102 + tmp_98)) + tmp_103*((tmp_108 + tmp_110 + tmp_112)*(tmp_108 + tmp_110 + tmp_112)) + (tmp_120*tmp_120)*tmp_121) + tmp_163*(tmp_144*((tmp_139 + tmp_141 + tmp_143)*(tmp_139 + tmp_141 + tmp_143)) + tmp_144*((tmp_149 + tmp_151 + tmp_153)*(tmp_149 + tmp_151 + tmp_153)) + (tmp_161*tmp_161)*tmp_162) + tmp_204*(tmp_185*((tmp_180 + tmp_182 + tmp_184)*(tmp_180 + tmp_182 + tmp_184)) + tmp_185*((tmp_190 + tmp_192 + tmp_194)*(tmp_190 + tmp_192 + tmp_194)) + (tmp_202*tmp_202)*tmp_203) + tmp_81*(tmp_49*((tmp_38 + tmp_43 + tmp_48)*(tmp_38 + tmp_43 + tmp_48)) + tmp_49*((tmp_54 + tmp_56 + tmp_58)*(tmp_54 + tmp_56 + tmp_58)) + (tmp_66*tmp_66)*tmp_67);
      real_t a_0_1 = tmp_122*(tmp_101*tmp_210*tmp_211 + tmp_111*tmp_210*tmp_212 + tmp_119*tmp_120*tmp_210) + tmp_163*(tmp_142*tmp_214*tmp_215 + tmp_152*tmp_214*tmp_216 + tmp_160*tmp_161*tmp_214) + tmp_204*(tmp_183*tmp_218*tmp_219 + tmp_193*tmp_218*tmp_220 + tmp_201*tmp_202*tmp_218) + tmp_81*(tmp_206*tmp_207*tmp_47 + tmp_206*tmp_208*tmp_57 + tmp_206*tmp_65*tmp_66);
      real_t a_0_2 = tmp_122*(tmp_109*tmp_212*tmp_222 + tmp_118*tmp_120*tmp_222 + tmp_211*tmp_222*tmp_99) + tmp_163*(tmp_140*tmp_215*tmp_223 + tmp_150*tmp_216*tmp_223 + tmp_159*tmp_161*tmp_223) + tmp_204*(tmp_181*tmp_219*tmp_224 + tmp_191*tmp_220*tmp_224 + tmp_200*tmp_202*tmp_224) + tmp_81*(tmp_207*tmp_221*tmp_42 + tmp_208*tmp_221*tmp_55 + tmp_221*tmp_64*tmp_66);
      real_t a_0_3 = tmp_122*(tmp_107*tmp_212*tmp_226 + tmp_116*tmp_120*tmp_226 + tmp_211*tmp_226*tmp_97) + tmp_163*(tmp_138*tmp_215*tmp_227 + tmp_148*tmp_216*tmp_227 + tmp_157*tmp_161*tmp_227) + tmp_204*(tmp_179*tmp_219*tmp_228 + tmp_189*tmp_220*tmp_228 + tmp_198*tmp_202*tmp_228) + tmp_81*(tmp_207*tmp_225*tmp_37 + tmp_208*tmp_225*tmp_53 + tmp_225*tmp_62*tmp_66);
      real_t a_0_4 = tmp_122*(tmp_243*(tmp_241 + tmp_242) + tmp_249*(tmp_245 + tmp_247) + tmp_252*(tmp_250 + tmp_251)) + tmp_163*(tmp_255*(tmp_253 + tmp_254) + tmp_261*(tmp_257 + tmp_259) + tmp_264*(tmp_262 + tmp_263)) + tmp_204*(tmp_267*(tmp_265 + tmp_266) + tmp_273*(tmp_269 + tmp_271) + tmp_276*(tmp_274 + tmp_275)) + tmp_81*(tmp_231*(tmp_229 + tmp_230) + tmp_237*(tmp_233 + tmp_235) + tmp_240*(tmp_238 + tmp_239));
      real_t a_0_5 = tmp_122*(tmp_243*(tmp_284 + tmp_285) + tmp_249*(tmp_287 + tmp_288) + tmp_252*(tmp_289 + tmp_290)) + tmp_163*(tmp_255*(tmp_291 + tmp_292) + tmp_261*(tmp_294 + tmp_295) + tmp_264*(tmp_296 + tmp_297)) + tmp_204*(tmp_267*(tmp_298 + tmp_299) + tmp_273*(tmp_301 + tmp_302) + tmp_276*(tmp_303 + tmp_304)) + tmp_81*(tmp_231*(tmp_277 + tmp_278) + tmp_237*(tmp_280 + tmp_281) + tmp_240*(tmp_282 + tmp_283));
      real_t a_0_6 = tmp_122*(tmp_243*(tmp_311 + tmp_312) + tmp_249*(tmp_313 + tmp_314) + tmp_252*(tmp_315 + tmp_316)) + tmp_163*(tmp_255*(tmp_317 + tmp_318) + tmp_261*(tmp_319 + tmp_320) + tmp_264*(tmp_321 + tmp_322)) + tmp_204*(tmp_267*(tmp_323 + tmp_324) + tmp_273*(tmp_325 + tmp_326) + tmp_276*(tmp_327 + tmp_328)) + tmp_81*(tmp_231*(tmp_305 + tmp_306) + tmp_237*(tmp_307 + tmp_308) + tmp_240*(tmp_309 + tmp_310));
      real_t a_0_7 = tmp_122*(tmp_243*(1.0*tmp_116*tmp_335 - tmp_242 - tmp_285) + tmp_249*(-tmp_247 - tmp_288 + tmp_336*tmp_97) + tmp_252*(tmp_107*tmp_336 - tmp_251 - tmp_290)) + tmp_163*(tmp_255*(1.0*tmp_157*tmp_339 - tmp_254 - tmp_292) + tmp_261*(tmp_138*tmp_340 - tmp_259 - tmp_295) + tmp_264*(tmp_148*tmp_340 - tmp_263 - tmp_297)) + tmp_204*(tmp_267*(1.0*tmp_198*tmp_343 - tmp_266 - tmp_299) + tmp_273*(tmp_179*tmp_344 - tmp_271 - tmp_302) + tmp_276*(tmp_189*tmp_344 - tmp_275 - tmp_304)) + tmp_81*(tmp_231*(-tmp_230 - tmp_278 + 1.0*tmp_331*tmp_62) + tmp_237*(-tmp_235 - tmp_281 + tmp_332*tmp_37) + tmp_240*(-tmp_239 - tmp_283 + tmp_332*tmp_53));
      real_t a_0_8 = tmp_122*(tmp_243*(1.0*tmp_118*tmp_349 - tmp_241 - tmp_312) + tmp_249*(-tmp_245 - tmp_314 + tmp_350*tmp_99) + tmp_252*(tmp_109*tmp_350 - tmp_250 - tmp_316)) + tmp_163*(tmp_255*(1.0*tmp_159*tmp_352 - tmp_253 - tmp_318) + tmp_261*(tmp_140*tmp_353 - tmp_257 - tmp_320) + tmp_264*(tmp_150*tmp_353 - tmp_262 - tmp_322)) + tmp_204*(tmp_267*(1.0*tmp_200*tmp_355 - tmp_265 - tmp_324) + tmp_273*(tmp_181*tmp_356 - tmp_269 - tmp_326) + tmp_276*(tmp_191*tmp_356 - tmp_274 - tmp_328)) + tmp_81*(tmp_231*(-tmp_229 - tmp_306 + 1.0*tmp_346*tmp_64) + tmp_237*(-tmp_233 - tmp_308 + tmp_347*tmp_42) + tmp_240*(-tmp_238 - tmp_310 + tmp_347*tmp_55));
      real_t a_0_9 = tmp_122*(tmp_243*(1.0*tmp_119*tmp_359 - tmp_284 - tmp_311) + tmp_249*(tmp_101*tmp_360 - tmp_287 - tmp_313) + tmp_252*(tmp_111*tmp_360 - tmp_289 - tmp_315)) + tmp_163*(tmp_255*(1.0*tmp_160*tmp_361 - tmp_291 - tmp_317) + tmp_261*(tmp_142*tmp_362 - tmp_294 - tmp_319) + tmp_264*(tmp_152*tmp_362 - tmp_296 - tmp_321)) + tmp_204*(tmp_267*(1.0*tmp_201*tmp_363 - tmp_298 - tmp_323) + tmp_273*(tmp_183*tmp_364 - tmp_301 - tmp_325) + tmp_276*(tmp_193*tmp_364 - tmp_303 - tmp_327)) + tmp_81*(tmp_231*(-tmp_277 - tmp_305 + 1.0*tmp_357*tmp_65) + tmp_237*(-tmp_280 - tmp_307 + tmp_358*tmp_47) + tmp_240*(-tmp_282 - tmp_309 + tmp_358*tmp_57));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_2_2_blending_q2::Blending_F_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2 ) const
   {
      Point3D  in( {in_0, in_1, in_2} );
      Point3D out;
      geometryMap_->evalF( in, out );
      *out_0 = out[0];
      *out_1 = out[1];
      *out_2 = out[2];
   }

   void p2_epsilonvar_2_2_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsilonvar_2_2_blending_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

} // namespace forms
} // namespace hyteg
