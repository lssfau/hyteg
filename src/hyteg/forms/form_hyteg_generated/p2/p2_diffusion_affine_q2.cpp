/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_diffusion_affine_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_diffusion_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = (p_affine_1_0*p_affine_1_0);
      real_t tmp_1 = p_affine_0_0*p_affine_1_1;
      real_t tmp_2 = p_affine_0_1*p_affine_2_0;
      real_t tmp_3 = p_affine_1_0*p_affine_2_1;
      real_t tmp_4 = p_affine_0_0*p_affine_2_1;
      real_t tmp_5 = p_affine_0_1*p_affine_1_0;
      real_t tmp_6 = p_affine_1_1*p_affine_2_0;
      real_t tmp_7 = std::abs(tmp_1 + tmp_2 + tmp_3 - tmp_4 - tmp_5 - tmp_6);
      real_t tmp_8 = 6*tmp_1;
      real_t tmp_9 = 6*p_affine_0_0;
      real_t tmp_10 = p_affine_0_1*tmp_3;
      real_t tmp_11 = 6*tmp_2;
      real_t tmp_12 = p_affine_2_0*p_affine_2_1;
      real_t tmp_13 = p_affine_1_0*p_affine_1_1;
      real_t tmp_14 = tmp_3*tmp_6;
      real_t tmp_15 = (p_affine_2_1*p_affine_2_1);
      real_t tmp_16 = p_affine_1_0*tmp_15;
      real_t tmp_17 = (p_affine_1_1*p_affine_1_1);
      real_t tmp_18 = p_affine_2_0*tmp_17;
      real_t tmp_19 = (p_affine_0_0*p_affine_0_0);
      real_t tmp_20 = p_affine_1_1*p_affine_2_1;
      real_t tmp_21 = tmp_19*tmp_20;
      real_t tmp_22 = p_affine_2_1*tmp_0;
      real_t tmp_23 = 6*p_affine_0_1;
      real_t tmp_24 = (p_affine_2_0*p_affine_2_0);
      real_t tmp_25 = p_affine_1_1*tmp_24;
      real_t tmp_26 = (p_affine_0_1*p_affine_0_1);
      real_t tmp_27 = p_affine_1_0*p_affine_2_0;
      real_t tmp_28 = tmp_26*tmp_27;
      real_t tmp_29 = tmp_17*tmp_19;
      real_t tmp_30 = tmp_15*tmp_19;
      real_t tmp_31 = tmp_0*tmp_26;
      real_t tmp_32 = tmp_24*tmp_26;
      real_t tmp_33 = tmp_0*tmp_15;
      real_t tmp_34 = tmp_17*tmp_24;
      real_t tmp_35 = tmp_7/(tmp_10*tmp_9 + tmp_11*tmp_13 + tmp_11*tmp_3 - tmp_11*tmp_4 + tmp_12*tmp_8 - 6*tmp_14 - tmp_16*tmp_9 - tmp_18*tmp_9 + tmp_2*tmp_8 - 6*tmp_21 - tmp_22*tmp_23 - tmp_23*tmp_25 - 6*tmp_28 + 3*tmp_29 + tmp_3*tmp_8 + 3*tmp_30 + 3*tmp_31 + 3*tmp_32 + 3*tmp_33 + 3*tmp_34 - tmp_5*tmp_8);
      real_t tmp_36 = 3*tmp_35;
      real_t tmp_37 = 2*tmp_1;
      real_t tmp_38 = 2*p_affine_0_0;
      real_t tmp_39 = 2*tmp_2;
      real_t tmp_40 = 2*p_affine_0_1;
      real_t tmp_41 = tmp_7/(tmp_10*tmp_38 + tmp_12*tmp_37 + tmp_13*tmp_39 - 2*tmp_14 - tmp_16*tmp_38 - tmp_18*tmp_38 + tmp_2*tmp_37 - 2*tmp_21 - tmp_22*tmp_40 - tmp_25*tmp_40 - 2*tmp_28 + tmp_29 + tmp_3*tmp_37 + tmp_3*tmp_39 + tmp_30 + tmp_31 + tmp_32 + tmp_33 + tmp_34 - tmp_37*tmp_5 - tmp_39*tmp_4);
      real_t tmp_42 = tmp_0*tmp_41;
      real_t tmp_43 = tmp_17*tmp_41;
      real_t tmp_44 = tmp_27*tmp_35;
      real_t tmp_45 = 6*tmp_44;
      real_t tmp_46 = tmp_20*tmp_35;
      real_t tmp_47 = 6*tmp_46;
      real_t tmp_48 = 4*tmp_1;
      real_t tmp_49 = 4*p_affine_0_0;
      real_t tmp_50 = 4*tmp_2;
      real_t tmp_51 = 4*p_affine_0_1;
      real_t tmp_52 = tmp_7/(tmp_10*tmp_49 + tmp_12*tmp_48 + tmp_13*tmp_50 - 4*tmp_14 - tmp_16*tmp_49 - tmp_18*tmp_49 + tmp_2*tmp_48 - 4*tmp_21 - tmp_22*tmp_51 - tmp_25*tmp_51 - 4*tmp_28 + 2*tmp_29 + tmp_3*tmp_48 + tmp_3*tmp_50 + 2*tmp_30 + 2*tmp_31 + 2*tmp_32 + 2*tmp_33 + 2*tmp_34 - tmp_4*tmp_50 - tmp_48*tmp_5);
      real_t tmp_53 = tmp_27*tmp_52;
      real_t tmp_54 = tmp_20*tmp_52;
      real_t tmp_55 = 9*tmp_52;
      real_t tmp_56 = -tmp_0*tmp_55 - tmp_17*tmp_55;
      real_t tmp_57 = tmp_27*tmp_41;
      real_t tmp_58 = 8*tmp_57;
      real_t tmp_59 = tmp_20*tmp_41;
      real_t tmp_60 = 8*tmp_59;
      real_t tmp_61 = -tmp_58 - tmp_60;
      real_t tmp_62 = tmp_24*tmp_52;
      real_t tmp_63 = tmp_15*tmp_52;
      real_t tmp_64 = tmp_24*tmp_35;
      real_t tmp_65 = tmp_15*tmp_35;
      real_t tmp_66 = 4*tmp_41;
      real_t tmp_67 = tmp_15*tmp_66 + tmp_24*tmp_66;
      real_t tmp_68 = -9*tmp_62 - 9*tmp_63 + 3*tmp_64 + 3*tmp_65 + tmp_67;
      real_t tmp_69 = p_affine_0_0*p_affine_1_0;
      real_t tmp_70 = tmp_52*tmp_69;
      real_t tmp_71 = p_affine_0_0*p_affine_2_0;
      real_t tmp_72 = tmp_35*tmp_71;
      real_t tmp_73 = p_affine_0_1*p_affine_1_1;
      real_t tmp_74 = tmp_52*tmp_73;
      real_t tmp_75 = p_affine_0_1*p_affine_2_1;
      real_t tmp_76 = tmp_35*tmp_75;
      real_t tmp_77 = tmp_35*tmp_69;
      real_t tmp_78 = tmp_52*tmp_71;
      real_t tmp_79 = tmp_35*tmp_73;
      real_t tmp_80 = tmp_52*tmp_75;
      real_t tmp_81 = tmp_44 + tmp_46 - tmp_53 - tmp_54 + tmp_62 + tmp_63 - tmp_64 - tmp_65 + tmp_70 + tmp_72 + tmp_74 + tmp_76 - tmp_77 - tmp_78 - tmp_79 - tmp_80;
      real_t tmp_82 = 7*tmp_52;
      real_t tmp_83 = 14*tmp_35;
      real_t tmp_84 = tmp_41*tmp_71;
      real_t tmp_85 = tmp_41*tmp_75;
      real_t tmp_86 = 14*tmp_44;
      real_t tmp_87 = 14*tmp_46;
      real_t tmp_88 = 7*tmp_78;
      real_t tmp_89 = 7*tmp_80;
      real_t tmp_90 = 7*tmp_53;
      real_t tmp_91 = 7*tmp_54;
      real_t tmp_92 = 14*tmp_72;
      real_t tmp_93 = 14*tmp_76;
      real_t tmp_94 = tmp_41*tmp_69;
      real_t tmp_95 = tmp_41*tmp_73;
      real_t tmp_96 = 7*tmp_70 + 7*tmp_74 - 14*tmp_77 - 14*tmp_79 + tmp_94 + tmp_95;
      real_t tmp_97 = -tmp_0*tmp_82 + tmp_0*tmp_83 - tmp_17*tmp_82 + tmp_17*tmp_83 - tmp_42 - tmp_43 + tmp_57 + tmp_59 - tmp_84 - tmp_85 - tmp_86 - tmp_87 - tmp_88 - tmp_89 + tmp_90 + tmp_91 + tmp_92 + tmp_93 + tmp_96;
      real_t tmp_98 = tmp_35*tmp_9;
      real_t tmp_99 = tmp_23*tmp_35;
      real_t tmp_100 = tmp_38*tmp_41;
      real_t tmp_101 = tmp_40*tmp_41;
      real_t tmp_102 = p_affine_2_0*tmp_98;
      real_t tmp_103 = p_affine_2_1*tmp_99;
      real_t tmp_104 = -2*tmp_57 - 2*tmp_59;
      real_t tmp_105 = -p_affine_2_0*tmp_100 - p_affine_2_1*tmp_101;
      real_t tmp_106 = 2*tmp_41;
      real_t tmp_107 = tmp_106*tmp_15 + tmp_106*tmp_24 - 6*tmp_64 - 6*tmp_65;
      real_t tmp_108 = p_affine_1_0*tmp_100 - p_affine_1_0*tmp_98 + p_affine_1_1*tmp_101 - p_affine_1_1*tmp_99 + tmp_102 + tmp_103 + tmp_104 + tmp_105 + tmp_107 + tmp_45 + tmp_47;
      real_t tmp_109 = 26*tmp_35;
      real_t tmp_110 = 8*tmp_42;
      real_t tmp_111 = 8*tmp_43;
      real_t tmp_112 = tmp_110 + tmp_111;
      real_t tmp_113 = 20*tmp_72;
      real_t tmp_114 = 20*tmp_76;
      real_t tmp_115 = tmp_41*tmp_9;
      real_t tmp_116 = p_affine_2_0*tmp_115;
      real_t tmp_117 = tmp_23*tmp_41;
      real_t tmp_118 = p_affine_2_1*tmp_117;
      real_t tmp_119 = -tmp_113 - tmp_114 + tmp_116 + tmp_118;
      real_t tmp_120 = p_affine_1_0*tmp_115;
      real_t tmp_121 = p_affine_1_1*tmp_117;
      real_t tmp_122 = 20*tmp_77;
      real_t tmp_123 = 20*tmp_79;
      real_t tmp_124 = tmp_107 - tmp_120 - tmp_121 + tmp_122 + tmp_123;
      real_t tmp_125 = -tmp_0*tmp_109 - tmp_109*tmp_17 + tmp_112 + tmp_119 + tmp_124 + 32*tmp_44 + 32*tmp_46 - 10*tmp_57 - 10*tmp_59;
      real_t tmp_126 = 6*tmp_35;
      real_t tmp_127 = tmp_113 + tmp_114;
      real_t tmp_128 = -tmp_116 - tmp_118 + tmp_127;
      real_t tmp_129 = tmp_120 + tmp_121 - tmp_122 - tmp_123 - 14*tmp_64 - 14*tmp_65 + tmp_67;
      real_t tmp_130 = tmp_0*tmp_126 + tmp_104 + tmp_126*tmp_17 + tmp_128 + tmp_129 - 2*tmp_42 - 2*tmp_43 + 8*tmp_44 + 8*tmp_46;
      real_t tmp_131 = tmp_19*tmp_41;
      real_t tmp_132 = tmp_26*tmp_41;
      real_t tmp_133 = -tmp_19*tmp_55 - tmp_26*tmp_55;
      real_t tmp_134 = 8*tmp_84;
      real_t tmp_135 = 8*tmp_85;
      real_t tmp_136 = -tmp_134 - tmp_135;
      real_t tmp_137 = -tmp_131 - tmp_132 - tmp_19*tmp_82 + tmp_19*tmp_83 - tmp_26*tmp_82 + tmp_26*tmp_83 - tmp_57 - tmp_59 + tmp_84 + tmp_85 + tmp_86 + tmp_87 + tmp_88 + tmp_89 - tmp_90 - tmp_91 - tmp_92 - tmp_93 + tmp_96;
      real_t tmp_138 = 8*tmp_131;
      real_t tmp_139 = 8*tmp_132;
      real_t tmp_140 = tmp_138 + tmp_139;
      real_t tmp_141 = 20*tmp_44;
      real_t tmp_142 = 20*tmp_46;
      real_t tmp_143 = 6*tmp_57;
      real_t tmp_144 = 6*tmp_59;
      real_t tmp_145 = -tmp_141 - tmp_142 + tmp_143 + tmp_144;
      real_t tmp_146 = -tmp_109*tmp_19 - tmp_109*tmp_26 + tmp_124 + tmp_140 + tmp_145 + 32*tmp_72 + 32*tmp_76 - 10*tmp_84 - 10*tmp_85;
      real_t tmp_147 = tmp_141 + tmp_142;
      real_t tmp_148 = -tmp_143 - tmp_144 + tmp_147;
      real_t tmp_149 = tmp_105 + tmp_126*tmp_19 + tmp_126*tmp_26 + tmp_129 - 2*tmp_131 - 2*tmp_132 + tmp_148 + 8*tmp_72 + 8*tmp_76;
      real_t tmp_150 = 38*tmp_35;
      real_t tmp_151 = 18*tmp_35;
      real_t tmp_152 = 56*tmp_77 + 56*tmp_79 - 18*tmp_94 - 18*tmp_95;
      real_t tmp_153 = -tmp_0*tmp_151 + tmp_128 + 12*tmp_131 + 12*tmp_132 + tmp_145 - tmp_150*tmp_19 - tmp_150*tmp_26 - tmp_151*tmp_17 + tmp_152 + 6*tmp_42 + 6*tmp_43;
      real_t tmp_154 = -tmp_0*tmp_150 + tmp_119 + 6*tmp_131 + 6*tmp_132 + tmp_148 - tmp_150*tmp_17 - tmp_151*tmp_19 - tmp_151*tmp_26 + tmp_152 + 12*tmp_42 + 12*tmp_43;
      real_t tmp_155 = 52*tmp_35;
      real_t tmp_156 = -tmp_110 - tmp_111;
      real_t tmp_157 = 4*tmp_64;
      real_t tmp_158 = 4*tmp_65;
      real_t tmp_159 = tmp_157 + tmp_158 - 76*tmp_77 - 76*tmp_79 + 24*tmp_94 + 24*tmp_95;
      real_t tmp_160 = 28*tmp_35;
      real_t tmp_161 = tmp_0*tmp_160;
      real_t tmp_162 = tmp_160*tmp_17;
      real_t tmp_163 = tmp_134 + tmp_135 + tmp_161 + tmp_162 - 28*tmp_72 - 28*tmp_76;
      real_t tmp_164 = 24*tmp_35;
      real_t tmp_165 = tmp_164*tmp_19;
      real_t tmp_166 = tmp_164*tmp_26;
      real_t tmp_167 = tmp_0*tmp_164;
      real_t tmp_168 = tmp_164*tmp_17;
      real_t tmp_169 = 52*tmp_77;
      real_t tmp_170 = 52*tmp_79;
      real_t tmp_171 = 16*tmp_94;
      real_t tmp_172 = 16*tmp_95;
      real_t tmp_173 = 4*tmp_44;
      real_t tmp_174 = 4*tmp_46;
      real_t tmp_175 = tmp_173 + tmp_174;
      real_t tmp_176 = p_affine_2_0*tmp_35*tmp_49;
      real_t tmp_177 = p_affine_2_1*tmp_35*tmp_51;
      real_t tmp_178 = tmp_176 + tmp_177;
      real_t tmp_179 = -tmp_138 - tmp_139;
      real_t tmp_180 = tmp_156 + tmp_179;
      real_t tmp_181 = -tmp_157 - tmp_158 + tmp_165 + tmp_166 + tmp_167 + tmp_168 - tmp_169 - tmp_170 + tmp_171 + tmp_172 + tmp_175 + tmp_178 + tmp_180;
      real_t tmp_182 = tmp_112 + tmp_140 + tmp_169 + tmp_170 - tmp_171 - tmp_172;
      real_t tmp_183 = -tmp_161 - tmp_162 - tmp_165 - tmp_166 + tmp_175 - tmp_176 - tmp_177 + tmp_182;
      real_t tmp_184 = tmp_160*tmp_19;
      real_t tmp_185 = tmp_160*tmp_26;
      real_t tmp_186 = tmp_184 + tmp_185 - 28*tmp_44 - 28*tmp_46 + tmp_58 + tmp_60;
      real_t tmp_187 = -tmp_167 - tmp_168 - tmp_173 - tmp_174 + tmp_178 + tmp_182 - tmp_184 - tmp_185;
      real_t tmp_188 = 8*tmp_41;
      real_t a_0_0 = tmp_0*tmp_36 + tmp_17*tmp_36 + 4*tmp_42 + 4*tmp_43 - tmp_45 - tmp_47 + 18*tmp_53 + 18*tmp_54 + tmp_56 + tmp_61 + tmp_68;
      real_t a_0_1 = tmp_81;
      real_t a_0_2 = tmp_97;
      real_t a_0_3 = tmp_108;
      real_t a_0_4 = tmp_125;
      real_t a_0_5 = tmp_130;
      real_t a_1_0 = tmp_81;
      real_t a_1_1 = -tmp_102 - tmp_103 + 4*tmp_131 + 4*tmp_132 + tmp_133 + tmp_136 + tmp_19*tmp_36 + tmp_26*tmp_36 + tmp_68 + 18*tmp_78 + 18*tmp_80;
      real_t a_1_2 = tmp_137;
      real_t a_1_3 = tmp_146;
      real_t a_1_4 = tmp_108;
      real_t a_1_5 = tmp_149;
      real_t a_2_0 = tmp_97;
      real_t a_2_1 = tmp_137;
      real_t a_2_2 = 5*tmp_131 + 5*tmp_132 + tmp_133 + 5*tmp_42 + 5*tmp_43 + tmp_56 + 18*tmp_70 + 18*tmp_74 - 10*tmp_94 - 10*tmp_95;
      real_t a_2_3 = tmp_153;
      real_t a_2_4 = tmp_154;
      real_t a_2_5 = 0;
      real_t a_3_0 = tmp_108;
      real_t a_3_1 = tmp_146;
      real_t a_3_2 = tmp_153;
      real_t a_3_3 = -16*tmp_131 - 16*tmp_132 + tmp_147 + tmp_155*tmp_19 + tmp_155*tmp_26 + tmp_156 + tmp_159 + tmp_163 + tmp_61;
      real_t a_3_4 = tmp_181;
      real_t a_3_5 = tmp_183;
      real_t a_4_0 = tmp_125;
      real_t a_4_1 = tmp_108;
      real_t a_4_2 = tmp_154;
      real_t a_4_3 = tmp_181;
      real_t a_4_4 = tmp_0*tmp_155 + tmp_127 + tmp_136 + tmp_155*tmp_17 + tmp_159 + tmp_179 + tmp_186 - 16*tmp_42 - 16*tmp_43;
      real_t a_4_5 = tmp_187;
      real_t a_5_0 = tmp_130;
      real_t a_5_1 = tmp_149;
      real_t a_5_2 = 0;
      real_t a_5_3 = tmp_183;
      real_t a_5_4 = tmp_187;
      real_t a_5_5 = -tmp_15*tmp_188 + tmp_163 + tmp_180 + tmp_186 - tmp_188*tmp_24 + 28*tmp_64 + 28*tmp_65 - 28*tmp_77 - 28*tmp_79 + 8*tmp_94 + 8*tmp_95;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_diffusion_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = tmp_13 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_29 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_30 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_31 = tmp_24*tmp_28 + tmp_24*tmp_29 + tmp_24*tmp_30;
      real_t tmp_32 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_33 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_34 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_35 = tmp_24*tmp_32 + tmp_24*tmp_33 + tmp_24*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_20*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_25*tmp_53 + tmp_26*tmp_53 + tmp_53*tmp_8;
      real_t tmp_55 = tmp_28*tmp_53 + tmp_29*tmp_53 + tmp_30*tmp_53;
      real_t tmp_56 = tmp_32*tmp_53 + tmp_33*tmp_53 + tmp_34*tmp_53;
      real_t tmp_57 = 0.041666666666666657*tmp_48;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = tmp_28*tmp_61 + tmp_29*tmp_61 + tmp_30*tmp_61;
      real_t tmp_64 = tmp_32*tmp_61 + tmp_33*tmp_61 + tmp_34*tmp_61;
      real_t tmp_65 = 0.041666666666666657*tmp_48;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_20*(tmp_66 + tmp_67 + tmp_68 - 3.0);
      real_t tmp_70 = tmp_25*tmp_69 + tmp_26*tmp_69 + tmp_69*tmp_8;
      real_t tmp_71 = tmp_28*tmp_69 + tmp_29*tmp_69 + tmp_30*tmp_69;
      real_t tmp_72 = tmp_32*tmp_69 + tmp_33*tmp_69 + tmp_34*tmp_69;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = tmp_21 - 1.0;
      real_t tmp_75 = tmp_20*tmp_74;
      real_t tmp_76 = tmp_26*tmp_75;
      real_t tmp_77 = tmp_30*tmp_75;
      real_t tmp_78 = tmp_34*tmp_75;
      real_t tmp_79 = tmp_50 - 1.0;
      real_t tmp_80 = tmp_20*tmp_79;
      real_t tmp_81 = tmp_26*tmp_80;
      real_t tmp_82 = tmp_30*tmp_80;
      real_t tmp_83 = tmp_34*tmp_80;
      real_t tmp_84 = tmp_58 - 1.0;
      real_t tmp_85 = tmp_20*tmp_84;
      real_t tmp_86 = tmp_26*tmp_85;
      real_t tmp_87 = tmp_30*tmp_85;
      real_t tmp_88 = tmp_34*tmp_85;
      real_t tmp_89 = tmp_66 - 1.0;
      real_t tmp_90 = tmp_20*tmp_89;
      real_t tmp_91 = tmp_26*tmp_90;
      real_t tmp_92 = tmp_30*tmp_90;
      real_t tmp_93 = tmp_34*tmp_90;
      real_t tmp_94 = tmp_49*(tmp_27*tmp_76 + tmp_31*tmp_77 + tmp_35*tmp_78) + tmp_57*(tmp_54*tmp_81 + tmp_55*tmp_82 + tmp_56*tmp_83) + tmp_65*(tmp_62*tmp_86 + tmp_63*tmp_87 + tmp_64*tmp_88) + tmp_73*(tmp_70*tmp_91 + tmp_71*tmp_92 + tmp_72*tmp_93);
      real_t tmp_95 = tmp_22 - 1.0;
      real_t tmp_96 = tmp_20*tmp_95;
      real_t tmp_97 = tmp_25*tmp_96;
      real_t tmp_98 = tmp_29*tmp_96;
      real_t tmp_99 = tmp_33*tmp_96;
      real_t tmp_100 = tmp_51 - 1.0;
      real_t tmp_101 = tmp_100*tmp_20;
      real_t tmp_102 = tmp_101*tmp_25;
      real_t tmp_103 = tmp_101*tmp_29;
      real_t tmp_104 = tmp_101*tmp_33;
      real_t tmp_105 = tmp_59 - 1.0;
      real_t tmp_106 = tmp_105*tmp_20;
      real_t tmp_107 = tmp_106*tmp_25;
      real_t tmp_108 = tmp_106*tmp_29;
      real_t tmp_109 = tmp_106*tmp_33;
      real_t tmp_110 = tmp_67 - 1.0;
      real_t tmp_111 = tmp_110*tmp_20;
      real_t tmp_112 = tmp_111*tmp_25;
      real_t tmp_113 = tmp_111*tmp_29;
      real_t tmp_114 = tmp_111*tmp_33;
      real_t tmp_115 = tmp_49*(tmp_27*tmp_97 + tmp_31*tmp_98 + tmp_35*tmp_99) + tmp_57*(tmp_102*tmp_54 + tmp_103*tmp_55 + tmp_104*tmp_56) + tmp_65*(tmp_107*tmp_62 + tmp_108*tmp_63 + tmp_109*tmp_64) + tmp_73*(tmp_112*tmp_70 + tmp_113*tmp_71 + tmp_114*tmp_72);
      real_t tmp_116 = tmp_23 - 1.0;
      real_t tmp_117 = tmp_116*tmp_20;
      real_t tmp_118 = tmp_117*tmp_8;
      real_t tmp_119 = tmp_117*tmp_28;
      real_t tmp_120 = tmp_117*tmp_32;
      real_t tmp_121 = tmp_52 - 1.0;
      real_t tmp_122 = tmp_121*tmp_20;
      real_t tmp_123 = tmp_122*tmp_8;
      real_t tmp_124 = tmp_122*tmp_28;
      real_t tmp_125 = tmp_122*tmp_32;
      real_t tmp_126 = tmp_60 - 1.0;
      real_t tmp_127 = tmp_126*tmp_20;
      real_t tmp_128 = tmp_127*tmp_8;
      real_t tmp_129 = tmp_127*tmp_28;
      real_t tmp_130 = tmp_127*tmp_32;
      real_t tmp_131 = tmp_68 - 1.0;
      real_t tmp_132 = tmp_131*tmp_20;
      real_t tmp_133 = tmp_132*tmp_8;
      real_t tmp_134 = tmp_132*tmp_28;
      real_t tmp_135 = tmp_132*tmp_32;
      real_t tmp_136 = tmp_49*(tmp_118*tmp_27 + tmp_119*tmp_31 + tmp_120*tmp_35) + tmp_57*(tmp_123*tmp_54 + tmp_124*tmp_55 + tmp_125*tmp_56) + tmp_65*(tmp_128*tmp_62 + tmp_129*tmp_63 + tmp_130*tmp_64) + tmp_73*(tmp_133*tmp_70 + tmp_134*tmp_71 + tmp_135*tmp_72);
      real_t tmp_137 = tmp_20*tmp_22;
      real_t tmp_138 = tmp_137*tmp_8;
      real_t tmp_139 = tmp_20*tmp_23;
      real_t tmp_140 = tmp_139*tmp_25;
      real_t tmp_141 = tmp_138 + tmp_140;
      real_t tmp_142 = tmp_137*tmp_28;
      real_t tmp_143 = tmp_139*tmp_29;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_137*tmp_32;
      real_t tmp_146 = tmp_139*tmp_33;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = tmp_20*tmp_51;
      real_t tmp_149 = tmp_148*tmp_8;
      real_t tmp_150 = tmp_20*tmp_52;
      real_t tmp_151 = tmp_150*tmp_25;
      real_t tmp_152 = tmp_149 + tmp_151;
      real_t tmp_153 = tmp_148*tmp_28;
      real_t tmp_154 = tmp_150*tmp_29;
      real_t tmp_155 = tmp_153 + tmp_154;
      real_t tmp_156 = tmp_148*tmp_32;
      real_t tmp_157 = tmp_150*tmp_33;
      real_t tmp_158 = tmp_156 + tmp_157;
      real_t tmp_159 = tmp_20*tmp_59;
      real_t tmp_160 = tmp_159*tmp_8;
      real_t tmp_161 = tmp_20*tmp_60;
      real_t tmp_162 = tmp_161*tmp_25;
      real_t tmp_163 = tmp_160 + tmp_162;
      real_t tmp_164 = tmp_159*tmp_28;
      real_t tmp_165 = tmp_161*tmp_29;
      real_t tmp_166 = tmp_164 + tmp_165;
      real_t tmp_167 = tmp_159*tmp_32;
      real_t tmp_168 = tmp_161*tmp_33;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_20*tmp_67;
      real_t tmp_171 = tmp_170*tmp_8;
      real_t tmp_172 = tmp_20*tmp_68;
      real_t tmp_173 = tmp_172*tmp_25;
      real_t tmp_174 = tmp_171 + tmp_173;
      real_t tmp_175 = tmp_170*tmp_28;
      real_t tmp_176 = tmp_172*tmp_29;
      real_t tmp_177 = tmp_175 + tmp_176;
      real_t tmp_178 = tmp_170*tmp_32;
      real_t tmp_179 = tmp_172*tmp_33;
      real_t tmp_180 = tmp_178 + tmp_179;
      real_t tmp_181 = tmp_49*(tmp_141*tmp_27 + tmp_144*tmp_31 + tmp_147*tmp_35) + tmp_57*(tmp_152*tmp_54 + tmp_155*tmp_55 + tmp_158*tmp_56) + tmp_65*(tmp_163*tmp_62 + tmp_166*tmp_63 + tmp_169*tmp_64) + tmp_73*(tmp_174*tmp_70 + tmp_177*tmp_71 + tmp_180*tmp_72);
      real_t tmp_182 = tmp_20*tmp_21;
      real_t tmp_183 = tmp_182*tmp_8;
      real_t tmp_184 = tmp_139*tmp_26;
      real_t tmp_185 = tmp_183 + tmp_184;
      real_t tmp_186 = tmp_182*tmp_28;
      real_t tmp_187 = tmp_139*tmp_30;
      real_t tmp_188 = tmp_186 + tmp_187;
      real_t tmp_189 = tmp_182*tmp_32;
      real_t tmp_190 = tmp_139*tmp_34;
      real_t tmp_191 = tmp_189 + tmp_190;
      real_t tmp_192 = tmp_20*tmp_50;
      real_t tmp_193 = tmp_192*tmp_8;
      real_t tmp_194 = tmp_150*tmp_26;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_192*tmp_28;
      real_t tmp_197 = tmp_150*tmp_30;
      real_t tmp_198 = tmp_196 + tmp_197;
      real_t tmp_199 = tmp_192*tmp_32;
      real_t tmp_200 = tmp_150*tmp_34;
      real_t tmp_201 = tmp_199 + tmp_200;
      real_t tmp_202 = tmp_20*tmp_58;
      real_t tmp_203 = tmp_202*tmp_8;
      real_t tmp_204 = tmp_161*tmp_26;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_202*tmp_28;
      real_t tmp_207 = tmp_161*tmp_30;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_202*tmp_32;
      real_t tmp_210 = tmp_161*tmp_34;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_20*tmp_66;
      real_t tmp_213 = tmp_212*tmp_8;
      real_t tmp_214 = tmp_172*tmp_26;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_212*tmp_28;
      real_t tmp_217 = tmp_172*tmp_30;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_212*tmp_32;
      real_t tmp_220 = tmp_172*tmp_34;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_49*(tmp_185*tmp_27 + tmp_188*tmp_31 + tmp_191*tmp_35) + tmp_57*(tmp_195*tmp_54 + tmp_198*tmp_55 + tmp_201*tmp_56) + tmp_65*(tmp_205*tmp_62 + tmp_208*tmp_63 + tmp_211*tmp_64) + tmp_73*(tmp_215*tmp_70 + tmp_218*tmp_71 + tmp_221*tmp_72);
      real_t tmp_223 = tmp_182*tmp_25;
      real_t tmp_224 = tmp_137*tmp_26;
      real_t tmp_225 = tmp_223 + tmp_224;
      real_t tmp_226 = tmp_182*tmp_29;
      real_t tmp_227 = tmp_137*tmp_30;
      real_t tmp_228 = tmp_226 + tmp_227;
      real_t tmp_229 = tmp_182*tmp_33;
      real_t tmp_230 = tmp_137*tmp_34;
      real_t tmp_231 = tmp_229 + tmp_230;
      real_t tmp_232 = tmp_192*tmp_25;
      real_t tmp_233 = tmp_148*tmp_26;
      real_t tmp_234 = tmp_232 + tmp_233;
      real_t tmp_235 = tmp_192*tmp_29;
      real_t tmp_236 = tmp_148*tmp_30;
      real_t tmp_237 = tmp_235 + tmp_236;
      real_t tmp_238 = tmp_192*tmp_33;
      real_t tmp_239 = tmp_148*tmp_34;
      real_t tmp_240 = tmp_238 + tmp_239;
      real_t tmp_241 = tmp_202*tmp_25;
      real_t tmp_242 = tmp_159*tmp_26;
      real_t tmp_243 = tmp_241 + tmp_242;
      real_t tmp_244 = tmp_202*tmp_29;
      real_t tmp_245 = tmp_159*tmp_30;
      real_t tmp_246 = tmp_244 + tmp_245;
      real_t tmp_247 = tmp_202*tmp_33;
      real_t tmp_248 = tmp_159*tmp_34;
      real_t tmp_249 = tmp_247 + tmp_248;
      real_t tmp_250 = tmp_212*tmp_25;
      real_t tmp_251 = tmp_170*tmp_26;
      real_t tmp_252 = tmp_250 + tmp_251;
      real_t tmp_253 = tmp_212*tmp_29;
      real_t tmp_254 = tmp_170*tmp_30;
      real_t tmp_255 = tmp_253 + tmp_254;
      real_t tmp_256 = tmp_212*tmp_33;
      real_t tmp_257 = tmp_170*tmp_34;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_49*(tmp_225*tmp_27 + tmp_228*tmp_31 + tmp_231*tmp_35) + tmp_57*(tmp_234*tmp_54 + tmp_237*tmp_55 + tmp_240*tmp_56) + tmp_65*(tmp_243*tmp_62 + tmp_246*tmp_63 + tmp_249*tmp_64) + tmp_73*(tmp_252*tmp_70 + tmp_255*tmp_71 + tmp_258*tmp_72);
      real_t tmp_260 = -tmp_22;
      real_t tmp_261 = 4.0 - tmp_21;
      real_t tmp_262 = tmp_20*(tmp_260 + tmp_261 - 4.6832815729997463);
      real_t tmp_263 = tmp_262*tmp_8;
      real_t tmp_264 = -tmp_140 - tmp_184 + tmp_263;
      real_t tmp_265 = tmp_262*tmp_28;
      real_t tmp_266 = -tmp_143 - tmp_187 + tmp_265;
      real_t tmp_267 = tmp_262*tmp_32;
      real_t tmp_268 = -tmp_146 - tmp_190 + tmp_267;
      real_t tmp_269 = -tmp_51;
      real_t tmp_270 = 4.0 - tmp_50;
      real_t tmp_271 = tmp_20*(tmp_269 + tmp_270 - 1.1055728090000847);
      real_t tmp_272 = tmp_271*tmp_8;
      real_t tmp_273 = -tmp_151 - tmp_194 + tmp_272;
      real_t tmp_274 = tmp_271*tmp_28;
      real_t tmp_275 = -tmp_154 - tmp_197 + tmp_274;
      real_t tmp_276 = tmp_271*tmp_32;
      real_t tmp_277 = -tmp_157 - tmp_200 + tmp_276;
      real_t tmp_278 = -tmp_59;
      real_t tmp_279 = 4.0 - tmp_58;
      real_t tmp_280 = tmp_20*(tmp_278 + tmp_279 - 1.1055728090000847);
      real_t tmp_281 = tmp_280*tmp_8;
      real_t tmp_282 = -tmp_162 - tmp_204 + tmp_281;
      real_t tmp_283 = tmp_28*tmp_280;
      real_t tmp_284 = -tmp_165 - tmp_207 + tmp_283;
      real_t tmp_285 = tmp_280*tmp_32;
      real_t tmp_286 = -tmp_168 - tmp_210 + tmp_285;
      real_t tmp_287 = -tmp_67;
      real_t tmp_288 = 4.0 - tmp_66;
      real_t tmp_289 = tmp_20*(tmp_287 + tmp_288 - 1.1055728090000847);
      real_t tmp_290 = tmp_289*tmp_8;
      real_t tmp_291 = -tmp_173 - tmp_214 + tmp_290;
      real_t tmp_292 = tmp_28*tmp_289;
      real_t tmp_293 = -tmp_176 - tmp_217 + tmp_292;
      real_t tmp_294 = tmp_289*tmp_32;
      real_t tmp_295 = -tmp_179 - tmp_220 + tmp_294;
      real_t tmp_296 = tmp_49*(tmp_264*tmp_27 + tmp_266*tmp_31 + tmp_268*tmp_35) + tmp_57*(tmp_273*tmp_54 + tmp_275*tmp_55 + tmp_277*tmp_56) + tmp_65*(tmp_282*tmp_62 + tmp_284*tmp_63 + tmp_286*tmp_64) + tmp_73*(tmp_291*tmp_70 + tmp_293*tmp_71 + tmp_295*tmp_72);
      real_t tmp_297 = -tmp_23;
      real_t tmp_298 = tmp_20*(tmp_261 + tmp_297 - 1.1055728090000847);
      real_t tmp_299 = tmp_25*tmp_298;
      real_t tmp_300 = -tmp_138 - tmp_224 + tmp_299;
      real_t tmp_301 = tmp_29*tmp_298;
      real_t tmp_302 = -tmp_142 - tmp_227 + tmp_301;
      real_t tmp_303 = tmp_298*tmp_33;
      real_t tmp_304 = -tmp_145 - tmp_230 + tmp_303;
      real_t tmp_305 = -tmp_52;
      real_t tmp_306 = tmp_20*(tmp_270 + tmp_305 - 4.6832815729997463);
      real_t tmp_307 = tmp_25*tmp_306;
      real_t tmp_308 = -tmp_149 - tmp_233 + tmp_307;
      real_t tmp_309 = tmp_29*tmp_306;
      real_t tmp_310 = -tmp_153 - tmp_236 + tmp_309;
      real_t tmp_311 = tmp_306*tmp_33;
      real_t tmp_312 = -tmp_156 - tmp_239 + tmp_311;
      real_t tmp_313 = -tmp_60;
      real_t tmp_314 = tmp_20*(tmp_279 + tmp_313 - 1.1055728090000847);
      real_t tmp_315 = tmp_25*tmp_314;
      real_t tmp_316 = -tmp_160 - tmp_242 + tmp_315;
      real_t tmp_317 = tmp_29*tmp_314;
      real_t tmp_318 = -tmp_164 - tmp_245 + tmp_317;
      real_t tmp_319 = tmp_314*tmp_33;
      real_t tmp_320 = -tmp_167 - tmp_248 + tmp_319;
      real_t tmp_321 = -tmp_68;
      real_t tmp_322 = tmp_20*(tmp_288 + tmp_321 - 1.1055728090000847);
      real_t tmp_323 = tmp_25*tmp_322;
      real_t tmp_324 = -tmp_171 - tmp_251 + tmp_323;
      real_t tmp_325 = tmp_29*tmp_322;
      real_t tmp_326 = -tmp_175 - tmp_254 + tmp_325;
      real_t tmp_327 = tmp_322*tmp_33;
      real_t tmp_328 = -tmp_178 - tmp_257 + tmp_327;
      real_t tmp_329 = tmp_49*(tmp_27*tmp_300 + tmp_302*tmp_31 + tmp_304*tmp_35) + tmp_57*(tmp_308*tmp_54 + tmp_310*tmp_55 + tmp_312*tmp_56) + tmp_65*(tmp_316*tmp_62 + tmp_318*tmp_63 + tmp_320*tmp_64) + tmp_73*(tmp_324*tmp_70 + tmp_326*tmp_71 + tmp_328*tmp_72);
      real_t tmp_330 = tmp_20*(tmp_260 + tmp_297 + 2.8944271909999153);
      real_t tmp_331 = tmp_26*tmp_330;
      real_t tmp_332 = -tmp_183 - tmp_223 + tmp_331;
      real_t tmp_333 = tmp_30*tmp_330;
      real_t tmp_334 = -tmp_186 - tmp_226 + tmp_333;
      real_t tmp_335 = tmp_330*tmp_34;
      real_t tmp_336 = -tmp_189 - tmp_229 + tmp_335;
      real_t tmp_337 = tmp_20*(tmp_269 + tmp_305 + 2.8944271909999153);
      real_t tmp_338 = tmp_26*tmp_337;
      real_t tmp_339 = -tmp_193 - tmp_232 + tmp_338;
      real_t tmp_340 = tmp_30*tmp_337;
      real_t tmp_341 = -tmp_196 - tmp_235 + tmp_340;
      real_t tmp_342 = tmp_337*tmp_34;
      real_t tmp_343 = -tmp_199 - tmp_238 + tmp_342;
      real_t tmp_344 = tmp_20*(tmp_278 + tmp_313 - 0.68328157299974634);
      real_t tmp_345 = tmp_26*tmp_344;
      real_t tmp_346 = -tmp_203 - tmp_241 + tmp_345;
      real_t tmp_347 = tmp_30*tmp_344;
      real_t tmp_348 = -tmp_206 - tmp_244 + tmp_347;
      real_t tmp_349 = tmp_34*tmp_344;
      real_t tmp_350 = -tmp_209 - tmp_247 + tmp_349;
      real_t tmp_351 = tmp_20*(tmp_287 + tmp_321 + 2.8944271909999153);
      real_t tmp_352 = tmp_26*tmp_351;
      real_t tmp_353 = -tmp_213 - tmp_250 + tmp_352;
      real_t tmp_354 = tmp_30*tmp_351;
      real_t tmp_355 = -tmp_216 - tmp_253 + tmp_354;
      real_t tmp_356 = tmp_34*tmp_351;
      real_t tmp_357 = -tmp_219 - tmp_256 + tmp_356;
      real_t tmp_358 = tmp_49*(tmp_27*tmp_332 + tmp_31*tmp_334 + tmp_336*tmp_35) + tmp_57*(tmp_339*tmp_54 + tmp_341*tmp_55 + tmp_343*tmp_56) + tmp_65*(tmp_346*tmp_62 + tmp_348*tmp_63 + tmp_350*tmp_64) + tmp_73*(tmp_353*tmp_70 + tmp_355*tmp_71 + tmp_357*tmp_72);
      real_t tmp_359 = (tmp_26*tmp_26);
      real_t tmp_360 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_361 = 16.0*tmp_360;
      real_t tmp_362 = 0.012499999999999983*tmp_361;
      real_t tmp_363 = (tmp_30*tmp_30);
      real_t tmp_364 = (tmp_34*tmp_34);
      real_t tmp_365 = 0.012499999999999983*tmp_361;
      real_t tmp_366 = 0.11249999999999989*tmp_361;
      real_t tmp_367 = 0.012499999999999983*tmp_361;
      real_t tmp_368 = tmp_360*tmp_74;
      real_t tmp_369 = tmp_368*tmp_95;
      real_t tmp_370 = tmp_25*tmp_26;
      real_t tmp_371 = tmp_29*tmp_30;
      real_t tmp_372 = tmp_33*tmp_34;
      real_t tmp_373 = tmp_100*tmp_79;
      real_t tmp_374 = tmp_360*tmp_373;
      real_t tmp_375 = tmp_360*tmp_371;
      real_t tmp_376 = tmp_105*tmp_84;
      real_t tmp_377 = tmp_360*tmp_376;
      real_t tmp_378 = tmp_110*tmp_89;
      real_t tmp_379 = tmp_360*tmp_378;
      real_t tmp_380 = tmp_49*(tmp_369*tmp_370 + tmp_369*tmp_371 + tmp_369*tmp_372) + tmp_57*(tmp_370*tmp_374 + tmp_372*tmp_374 + tmp_373*tmp_375) + tmp_65*(tmp_370*tmp_377 + tmp_372*tmp_377 + tmp_375*tmp_376) + tmp_73*(tmp_370*tmp_379 + tmp_372*tmp_379 + tmp_375*tmp_378);
      real_t tmp_381 = tmp_116*tmp_368;
      real_t tmp_382 = tmp_26*tmp_8;
      real_t tmp_383 = tmp_28*tmp_30;
      real_t tmp_384 = tmp_32*tmp_34;
      real_t tmp_385 = tmp_360*tmp_382;
      real_t tmp_386 = tmp_121*tmp_79;
      real_t tmp_387 = tmp_360*tmp_386;
      real_t tmp_388 = tmp_126*tmp_84;
      real_t tmp_389 = tmp_360*tmp_388;
      real_t tmp_390 = tmp_131*tmp_89;
      real_t tmp_391 = tmp_360*tmp_390;
      real_t tmp_392 = tmp_49*(tmp_381*tmp_382 + tmp_381*tmp_383 + tmp_381*tmp_384) + tmp_57*(tmp_383*tmp_387 + tmp_384*tmp_387 + tmp_385*tmp_386) + tmp_65*(tmp_383*tmp_389 + tmp_384*tmp_389 + tmp_385*tmp_388) + tmp_73*(tmp_383*tmp_391 + tmp_384*tmp_391 + tmp_385*tmp_390);
      real_t tmp_393 = tmp_49*(tmp_141*tmp_76 + tmp_144*tmp_77 + tmp_147*tmp_78) + tmp_57*(tmp_152*tmp_81 + tmp_155*tmp_82 + tmp_158*tmp_83) + tmp_65*(tmp_163*tmp_86 + tmp_166*tmp_87 + tmp_169*tmp_88) + tmp_73*(tmp_174*tmp_91 + tmp_177*tmp_92 + tmp_180*tmp_93);
      real_t tmp_394 = tmp_49*(tmp_185*tmp_76 + tmp_188*tmp_77 + tmp_191*tmp_78) + tmp_57*(tmp_195*tmp_81 + tmp_198*tmp_82 + tmp_201*tmp_83) + tmp_65*(tmp_205*tmp_86 + tmp_208*tmp_87 + tmp_211*tmp_88) + tmp_73*(tmp_215*tmp_91 + tmp_218*tmp_92 + tmp_221*tmp_93);
      real_t tmp_395 = tmp_49*(tmp_225*tmp_76 + tmp_228*tmp_77 + tmp_231*tmp_78) + tmp_57*(tmp_234*tmp_81 + tmp_237*tmp_82 + tmp_240*tmp_83) + tmp_65*(tmp_243*tmp_86 + tmp_246*tmp_87 + tmp_249*tmp_88) + tmp_73*(tmp_252*tmp_91 + tmp_255*tmp_92 + tmp_258*tmp_93);
      real_t tmp_396 = tmp_49*(tmp_264*tmp_76 + tmp_266*tmp_77 + tmp_268*tmp_78) + tmp_57*(tmp_273*tmp_81 + tmp_275*tmp_82 + tmp_277*tmp_83) + tmp_65*(tmp_282*tmp_86 + tmp_284*tmp_87 + tmp_286*tmp_88) + tmp_73*(tmp_291*tmp_91 + tmp_293*tmp_92 + tmp_295*tmp_93);
      real_t tmp_397 = tmp_49*(tmp_300*tmp_76 + tmp_302*tmp_77 + tmp_304*tmp_78) + tmp_57*(tmp_308*tmp_81 + tmp_310*tmp_82 + tmp_312*tmp_83) + tmp_65*(tmp_316*tmp_86 + tmp_318*tmp_87 + tmp_320*tmp_88) + tmp_73*(tmp_324*tmp_91 + tmp_326*tmp_92 + tmp_328*tmp_93);
      real_t tmp_398 = tmp_49*(tmp_332*tmp_76 + tmp_334*tmp_77 + tmp_336*tmp_78) + tmp_57*(tmp_339*tmp_81 + tmp_341*tmp_82 + tmp_343*tmp_83) + tmp_65*(tmp_346*tmp_86 + tmp_348*tmp_87 + tmp_350*tmp_88) + tmp_73*(tmp_353*tmp_91 + tmp_355*tmp_92 + tmp_357*tmp_93);
      real_t tmp_399 = (tmp_25*tmp_25);
      real_t tmp_400 = 0.012499999999999983*tmp_361;
      real_t tmp_401 = (tmp_29*tmp_29);
      real_t tmp_402 = (tmp_33*tmp_33);
      real_t tmp_403 = 0.11249999999999989*tmp_361;
      real_t tmp_404 = 0.012499999999999983*tmp_361;
      real_t tmp_405 = 0.012499999999999983*tmp_361;
      real_t tmp_406 = tmp_116*tmp_360*tmp_95;
      real_t tmp_407 = tmp_25*tmp_8;
      real_t tmp_408 = tmp_28*tmp_29;
      real_t tmp_409 = tmp_32*tmp_33;
      real_t tmp_410 = tmp_360*tmp_407;
      real_t tmp_411 = tmp_100*tmp_121;
      real_t tmp_412 = tmp_360*tmp_411;
      real_t tmp_413 = tmp_105*tmp_126;
      real_t tmp_414 = tmp_360*tmp_413;
      real_t tmp_415 = tmp_110*tmp_131;
      real_t tmp_416 = tmp_360*tmp_415;
      real_t tmp_417 = tmp_49*(tmp_406*tmp_407 + tmp_406*tmp_408 + tmp_406*tmp_409) + tmp_57*(tmp_408*tmp_412 + tmp_409*tmp_412 + tmp_410*tmp_411) + tmp_65*(tmp_408*tmp_414 + tmp_409*tmp_414 + tmp_410*tmp_413) + tmp_73*(tmp_408*tmp_416 + tmp_409*tmp_416 + tmp_410*tmp_415);
      real_t tmp_418 = tmp_49*(tmp_141*tmp_97 + tmp_144*tmp_98 + tmp_147*tmp_99) + tmp_57*(tmp_102*tmp_152 + tmp_103*tmp_155 + tmp_104*tmp_158) + tmp_65*(tmp_107*tmp_163 + tmp_108*tmp_166 + tmp_109*tmp_169) + tmp_73*(tmp_112*tmp_174 + tmp_113*tmp_177 + tmp_114*tmp_180);
      real_t tmp_419 = tmp_49*(tmp_185*tmp_97 + tmp_188*tmp_98 + tmp_191*tmp_99) + tmp_57*(tmp_102*tmp_195 + tmp_103*tmp_198 + tmp_104*tmp_201) + tmp_65*(tmp_107*tmp_205 + tmp_108*tmp_208 + tmp_109*tmp_211) + tmp_73*(tmp_112*tmp_215 + tmp_113*tmp_218 + tmp_114*tmp_221);
      real_t tmp_420 = tmp_49*(tmp_225*tmp_97 + tmp_228*tmp_98 + tmp_231*tmp_99) + tmp_57*(tmp_102*tmp_234 + tmp_103*tmp_237 + tmp_104*tmp_240) + tmp_65*(tmp_107*tmp_243 + tmp_108*tmp_246 + tmp_109*tmp_249) + tmp_73*(tmp_112*tmp_252 + tmp_113*tmp_255 + tmp_114*tmp_258);
      real_t tmp_421 = tmp_49*(tmp_264*tmp_97 + tmp_266*tmp_98 + tmp_268*tmp_99) + tmp_57*(tmp_102*tmp_273 + tmp_103*tmp_275 + tmp_104*tmp_277) + tmp_65*(tmp_107*tmp_282 + tmp_108*tmp_284 + tmp_109*tmp_286) + tmp_73*(tmp_112*tmp_291 + tmp_113*tmp_293 + tmp_114*tmp_295);
      real_t tmp_422 = tmp_49*(tmp_300*tmp_97 + tmp_302*tmp_98 + tmp_304*tmp_99) + tmp_57*(tmp_102*tmp_308 + tmp_103*tmp_310 + tmp_104*tmp_312) + tmp_65*(tmp_107*tmp_316 + tmp_108*tmp_318 + tmp_109*tmp_320) + tmp_73*(tmp_112*tmp_324 + tmp_113*tmp_326 + tmp_114*tmp_328);
      real_t tmp_423 = tmp_49*(tmp_332*tmp_97 + tmp_334*tmp_98 + tmp_336*tmp_99) + tmp_57*(tmp_102*tmp_339 + tmp_103*tmp_341 + tmp_104*tmp_343) + tmp_65*(tmp_107*tmp_346 + tmp_108*tmp_348 + tmp_109*tmp_350) + tmp_73*(tmp_112*tmp_353 + tmp_113*tmp_355 + tmp_114*tmp_357);
      real_t tmp_424 = (tmp_8*tmp_8);
      real_t tmp_425 = 0.11249999999999989*tmp_361;
      real_t tmp_426 = (tmp_28*tmp_28);
      real_t tmp_427 = (tmp_32*tmp_32);
      real_t tmp_428 = 0.012499999999999983*tmp_361;
      real_t tmp_429 = 0.012499999999999983*tmp_361;
      real_t tmp_430 = 0.012499999999999983*tmp_361;
      real_t tmp_431 = tmp_49*(tmp_118*tmp_141 + tmp_119*tmp_144 + tmp_120*tmp_147) + tmp_57*(tmp_123*tmp_152 + tmp_124*tmp_155 + tmp_125*tmp_158) + tmp_65*(tmp_128*tmp_163 + tmp_129*tmp_166 + tmp_130*tmp_169) + tmp_73*(tmp_133*tmp_174 + tmp_134*tmp_177 + tmp_135*tmp_180);
      real_t tmp_432 = tmp_49*(tmp_118*tmp_185 + tmp_119*tmp_188 + tmp_120*tmp_191) + tmp_57*(tmp_123*tmp_195 + tmp_124*tmp_198 + tmp_125*tmp_201) + tmp_65*(tmp_128*tmp_205 + tmp_129*tmp_208 + tmp_130*tmp_211) + tmp_73*(tmp_133*tmp_215 + tmp_134*tmp_218 + tmp_135*tmp_221);
      real_t tmp_433 = tmp_49*(tmp_118*tmp_225 + tmp_119*tmp_228 + tmp_120*tmp_231) + tmp_57*(tmp_123*tmp_234 + tmp_124*tmp_237 + tmp_125*tmp_240) + tmp_65*(tmp_128*tmp_243 + tmp_129*tmp_246 + tmp_130*tmp_249) + tmp_73*(tmp_133*tmp_252 + tmp_134*tmp_255 + tmp_135*tmp_258);
      real_t tmp_434 = tmp_49*(tmp_118*tmp_264 + tmp_119*tmp_266 + tmp_120*tmp_268) + tmp_57*(tmp_123*tmp_273 + tmp_124*tmp_275 + tmp_125*tmp_277) + tmp_65*(tmp_128*tmp_282 + tmp_129*tmp_284 + tmp_130*tmp_286) + tmp_73*(tmp_133*tmp_291 + tmp_134*tmp_293 + tmp_135*tmp_295);
      real_t tmp_435 = tmp_49*(tmp_118*tmp_300 + tmp_119*tmp_302 + tmp_120*tmp_304) + tmp_57*(tmp_123*tmp_308 + tmp_124*tmp_310 + tmp_125*tmp_312) + tmp_65*(tmp_128*tmp_316 + tmp_129*tmp_318 + tmp_130*tmp_320) + tmp_73*(tmp_133*tmp_324 + tmp_134*tmp_326 + tmp_135*tmp_328);
      real_t tmp_436 = tmp_49*(tmp_118*tmp_332 + tmp_119*tmp_334 + tmp_120*tmp_336) + tmp_57*(tmp_123*tmp_339 + tmp_124*tmp_341 + tmp_125*tmp_343) + tmp_65*(tmp_128*tmp_346 + tmp_129*tmp_348 + tmp_130*tmp_350) + tmp_73*(tmp_133*tmp_353 + tmp_134*tmp_355 + tmp_135*tmp_357);
      real_t tmp_437 = 0.13819660112501059*tmp_20;
      real_t tmp_438 = tmp_437*tmp_8;
      real_t tmp_439 = 0.58541019662496829*tmp_20;
      real_t tmp_440 = tmp_25*tmp_439;
      real_t tmp_441 = tmp_28*tmp_437;
      real_t tmp_442 = tmp_29*tmp_439;
      real_t tmp_443 = tmp_32*tmp_437;
      real_t tmp_444 = tmp_33*tmp_439;
      real_t tmp_445 = 0.58541019662496829*tmp_20;
      real_t tmp_446 = tmp_445*tmp_8;
      real_t tmp_447 = 0.13819660112501059*tmp_20;
      real_t tmp_448 = tmp_25*tmp_447;
      real_t tmp_449 = tmp_28*tmp_445;
      real_t tmp_450 = tmp_29*tmp_447;
      real_t tmp_451 = tmp_32*tmp_445;
      real_t tmp_452 = tmp_33*tmp_447;
      real_t tmp_453 = 0.13819660112501059*tmp_20;
      real_t tmp_454 = tmp_453*tmp_8;
      real_t tmp_455 = 0.13819660112501059*tmp_20;
      real_t tmp_456 = tmp_25*tmp_455;
      real_t tmp_457 = tmp_28*tmp_453;
      real_t tmp_458 = tmp_29*tmp_455;
      real_t tmp_459 = tmp_32*tmp_453;
      real_t tmp_460 = tmp_33*tmp_455;
      real_t tmp_461 = 0.13819660112501059*tmp_20;
      real_t tmp_462 = tmp_461*tmp_8;
      real_t tmp_463 = 0.13819660112501059*tmp_20;
      real_t tmp_464 = tmp_25*tmp_463;
      real_t tmp_465 = tmp_28*tmp_461;
      real_t tmp_466 = tmp_29*tmp_463;
      real_t tmp_467 = tmp_32*tmp_461;
      real_t tmp_468 = tmp_33*tmp_463;
      real_t tmp_469 = tmp_49*(tmp_141*tmp_185 + tmp_144*tmp_188 + tmp_147*tmp_191) + tmp_57*(tmp_152*tmp_195 + tmp_155*tmp_198 + tmp_158*tmp_201) + tmp_65*(tmp_163*tmp_205 + tmp_166*tmp_208 + tmp_169*tmp_211) + tmp_73*(tmp_174*tmp_215 + tmp_177*tmp_218 + tmp_180*tmp_221);
      real_t tmp_470 = tmp_49*(tmp_141*tmp_225 + tmp_144*tmp_228 + tmp_147*tmp_231) + tmp_57*(tmp_152*tmp_234 + tmp_155*tmp_237 + tmp_158*tmp_240) + tmp_65*(tmp_163*tmp_243 + tmp_166*tmp_246 + tmp_169*tmp_249) + tmp_73*(tmp_174*tmp_252 + tmp_177*tmp_255 + tmp_180*tmp_258);
      real_t tmp_471 = tmp_49*(tmp_141*tmp_264 + tmp_144*tmp_266 + tmp_147*tmp_268) + tmp_57*(tmp_152*tmp_273 + tmp_155*tmp_275 + tmp_158*tmp_277) + tmp_65*(tmp_163*tmp_282 + tmp_166*tmp_284 + tmp_169*tmp_286) + tmp_73*(tmp_174*tmp_291 + tmp_177*tmp_293 + tmp_180*tmp_295);
      real_t tmp_472 = tmp_49*(tmp_141*tmp_300 + tmp_144*tmp_302 + tmp_147*tmp_304) + tmp_57*(tmp_152*tmp_308 + tmp_155*tmp_310 + tmp_158*tmp_312) + tmp_65*(tmp_163*tmp_316 + tmp_166*tmp_318 + tmp_169*tmp_320) + tmp_73*(tmp_174*tmp_324 + tmp_177*tmp_326 + tmp_180*tmp_328);
      real_t tmp_473 = tmp_49*(tmp_141*tmp_332 + tmp_144*tmp_334 + tmp_147*tmp_336) + tmp_57*(tmp_152*tmp_339 + tmp_155*tmp_341 + tmp_158*tmp_343) + tmp_65*(tmp_163*tmp_346 + tmp_166*tmp_348 + tmp_169*tmp_350) + tmp_73*(tmp_174*tmp_353 + tmp_177*tmp_355 + tmp_180*tmp_357);
      real_t tmp_474 = 0.13819660112501059*tmp_20;
      real_t tmp_475 = tmp_474*tmp_8;
      real_t tmp_476 = tmp_26*tmp_439;
      real_t tmp_477 = tmp_28*tmp_474;
      real_t tmp_478 = tmp_30*tmp_439;
      real_t tmp_479 = tmp_32*tmp_474;
      real_t tmp_480 = tmp_34*tmp_439;
      real_t tmp_481 = 0.13819660112501059*tmp_20;
      real_t tmp_482 = tmp_481*tmp_8;
      real_t tmp_483 = tmp_26*tmp_447;
      real_t tmp_484 = tmp_28*tmp_481;
      real_t tmp_485 = tmp_30*tmp_447;
      real_t tmp_486 = tmp_32*tmp_481;
      real_t tmp_487 = tmp_34*tmp_447;
      real_t tmp_488 = 0.58541019662496829*tmp_20;
      real_t tmp_489 = tmp_488*tmp_8;
      real_t tmp_490 = tmp_26*tmp_455;
      real_t tmp_491 = tmp_28*tmp_488;
      real_t tmp_492 = tmp_30*tmp_455;
      real_t tmp_493 = tmp_32*tmp_488;
      real_t tmp_494 = tmp_34*tmp_455;
      real_t tmp_495 = 0.13819660112501059*tmp_20;
      real_t tmp_496 = tmp_495*tmp_8;
      real_t tmp_497 = tmp_26*tmp_463;
      real_t tmp_498 = tmp_28*tmp_495;
      real_t tmp_499 = tmp_30*tmp_463;
      real_t tmp_500 = tmp_32*tmp_495;
      real_t tmp_501 = tmp_34*tmp_463;
      real_t tmp_502 = tmp_49*(tmp_185*tmp_225 + tmp_188*tmp_228 + tmp_191*tmp_231) + tmp_57*(tmp_195*tmp_234 + tmp_198*tmp_237 + tmp_201*tmp_240) + tmp_65*(tmp_205*tmp_243 + tmp_208*tmp_246 + tmp_211*tmp_249) + tmp_73*(tmp_215*tmp_252 + tmp_218*tmp_255 + tmp_221*tmp_258);
      real_t tmp_503 = tmp_49*(tmp_185*tmp_264 + tmp_188*tmp_266 + tmp_191*tmp_268) + tmp_57*(tmp_195*tmp_273 + tmp_198*tmp_275 + tmp_201*tmp_277) + tmp_65*(tmp_205*tmp_282 + tmp_208*tmp_284 + tmp_211*tmp_286) + tmp_73*(tmp_215*tmp_291 + tmp_218*tmp_293 + tmp_221*tmp_295);
      real_t tmp_504 = tmp_49*(tmp_185*tmp_300 + tmp_188*tmp_302 + tmp_191*tmp_304) + tmp_57*(tmp_195*tmp_308 + tmp_198*tmp_310 + tmp_201*tmp_312) + tmp_65*(tmp_205*tmp_316 + tmp_208*tmp_318 + tmp_211*tmp_320) + tmp_73*(tmp_215*tmp_324 + tmp_218*tmp_326 + tmp_221*tmp_328);
      real_t tmp_505 = tmp_49*(tmp_185*tmp_332 + tmp_188*tmp_334 + tmp_191*tmp_336) + tmp_57*(tmp_195*tmp_339 + tmp_198*tmp_341 + tmp_201*tmp_343) + tmp_65*(tmp_205*tmp_346 + tmp_208*tmp_348 + tmp_211*tmp_350) + tmp_73*(tmp_215*tmp_353 + tmp_218*tmp_355 + tmp_221*tmp_357);
      real_t tmp_506 = tmp_25*tmp_474;
      real_t tmp_507 = tmp_26*tmp_437;
      real_t tmp_508 = tmp_29*tmp_474;
      real_t tmp_509 = tmp_30*tmp_437;
      real_t tmp_510 = tmp_33*tmp_474;
      real_t tmp_511 = tmp_34*tmp_437;
      real_t tmp_512 = tmp_25*tmp_481;
      real_t tmp_513 = tmp_26*tmp_445;
      real_t tmp_514 = tmp_29*tmp_481;
      real_t tmp_515 = tmp_30*tmp_445;
      real_t tmp_516 = tmp_33*tmp_481;
      real_t tmp_517 = tmp_34*tmp_445;
      real_t tmp_518 = tmp_25*tmp_488;
      real_t tmp_519 = tmp_26*tmp_453;
      real_t tmp_520 = tmp_29*tmp_488;
      real_t tmp_521 = tmp_30*tmp_453;
      real_t tmp_522 = tmp_33*tmp_488;
      real_t tmp_523 = tmp_34*tmp_453;
      real_t tmp_524 = tmp_25*tmp_495;
      real_t tmp_525 = tmp_26*tmp_461;
      real_t tmp_526 = tmp_29*tmp_495;
      real_t tmp_527 = tmp_30*tmp_461;
      real_t tmp_528 = tmp_33*tmp_495;
      real_t tmp_529 = tmp_34*tmp_461;
      real_t tmp_530 = tmp_49*(tmp_225*tmp_264 + tmp_228*tmp_266 + tmp_231*tmp_268) + tmp_57*(tmp_234*tmp_273 + tmp_237*tmp_275 + tmp_240*tmp_277) + tmp_65*(tmp_243*tmp_282 + tmp_246*tmp_284 + tmp_249*tmp_286) + tmp_73*(tmp_252*tmp_291 + tmp_255*tmp_293 + tmp_258*tmp_295);
      real_t tmp_531 = tmp_49*(tmp_225*tmp_300 + tmp_228*tmp_302 + tmp_231*tmp_304) + tmp_57*(tmp_234*tmp_308 + tmp_237*tmp_310 + tmp_240*tmp_312) + tmp_65*(tmp_243*tmp_316 + tmp_246*tmp_318 + tmp_249*tmp_320) + tmp_73*(tmp_252*tmp_324 + tmp_255*tmp_326 + tmp_258*tmp_328);
      real_t tmp_532 = tmp_49*(tmp_225*tmp_332 + tmp_228*tmp_334 + tmp_231*tmp_336) + tmp_57*(tmp_234*tmp_339 + tmp_237*tmp_341 + tmp_240*tmp_343) + tmp_65*(tmp_243*tmp_346 + tmp_246*tmp_348 + tmp_249*tmp_350) + tmp_73*(tmp_252*tmp_353 + tmp_255*tmp_355 + tmp_258*tmp_357);
      real_t tmp_533 = tmp_49*(tmp_264*tmp_300 + tmp_266*tmp_302 + tmp_268*tmp_304) + tmp_57*(tmp_273*tmp_308 + tmp_275*tmp_310 + tmp_277*tmp_312) + tmp_65*(tmp_282*tmp_316 + tmp_284*tmp_318 + tmp_286*tmp_320) + tmp_73*(tmp_291*tmp_324 + tmp_293*tmp_326 + tmp_295*tmp_328);
      real_t tmp_534 = tmp_49*(tmp_264*tmp_332 + tmp_266*tmp_334 + tmp_268*tmp_336) + tmp_57*(tmp_273*tmp_339 + tmp_275*tmp_341 + tmp_277*tmp_343) + tmp_65*(tmp_282*tmp_346 + tmp_284*tmp_348 + tmp_286*tmp_350) + tmp_73*(tmp_291*tmp_353 + tmp_293*tmp_355 + tmp_295*tmp_357);
      real_t tmp_535 = tmp_49*(tmp_300*tmp_332 + tmp_302*tmp_334 + tmp_304*tmp_336) + tmp_57*(tmp_308*tmp_339 + tmp_310*tmp_341 + tmp_312*tmp_343) + tmp_65*(tmp_316*tmp_346 + tmp_318*tmp_348 + tmp_320*tmp_350) + tmp_73*(tmp_324*tmp_353 + tmp_326*tmp_355 + tmp_328*tmp_357);
      real_t a_0_0 = tmp_49*((tmp_27*tmp_27) + (tmp_31*tmp_31) + (tmp_35*tmp_35)) + tmp_57*((tmp_54*tmp_54) + (tmp_55*tmp_55) + (tmp_56*tmp_56)) + tmp_65*((tmp_62*tmp_62) + (tmp_63*tmp_63) + (tmp_64*tmp_64)) + tmp_73*((tmp_70*tmp_70) + (tmp_71*tmp_71) + (tmp_72*tmp_72));
      real_t a_0_1 = tmp_94;
      real_t a_0_2 = tmp_115;
      real_t a_0_3 = tmp_136;
      real_t a_0_4 = tmp_181;
      real_t a_0_5 = tmp_222;
      real_t a_0_6 = tmp_259;
      real_t a_0_7 = tmp_296;
      real_t a_0_8 = tmp_329;
      real_t a_0_9 = tmp_358;
      real_t a_1_0 = tmp_94;
      real_t a_1_1 = tmp_49*(tmp_359*tmp_362 + tmp_362*tmp_363 + tmp_362*tmp_364) + tmp_57*(tmp_359*tmp_365 + tmp_363*tmp_365 + tmp_364*tmp_365) + tmp_65*(tmp_359*tmp_366 + tmp_363*tmp_366 + tmp_364*tmp_366) + tmp_73*(tmp_359*tmp_367 + tmp_363*tmp_367 + tmp_364*tmp_367);
      real_t a_1_2 = tmp_380;
      real_t a_1_3 = tmp_392;
      real_t a_1_4 = tmp_393;
      real_t a_1_5 = tmp_394;
      real_t a_1_6 = tmp_395;
      real_t a_1_7 = tmp_396;
      real_t a_1_8 = tmp_397;
      real_t a_1_9 = tmp_398;
      real_t a_2_0 = tmp_115;
      real_t a_2_1 = tmp_380;
      real_t a_2_2 = tmp_49*(tmp_399*tmp_400 + tmp_400*tmp_401 + tmp_400*tmp_402) + tmp_57*(tmp_399*tmp_403 + tmp_401*tmp_403 + tmp_402*tmp_403) + tmp_65*(tmp_399*tmp_404 + tmp_401*tmp_404 + tmp_402*tmp_404) + tmp_73*(tmp_399*tmp_405 + tmp_401*tmp_405 + tmp_402*tmp_405);
      real_t a_2_3 = tmp_417;
      real_t a_2_4 = tmp_418;
      real_t a_2_5 = tmp_419;
      real_t a_2_6 = tmp_420;
      real_t a_2_7 = tmp_421;
      real_t a_2_8 = tmp_422;
      real_t a_2_9 = tmp_423;
      real_t a_3_0 = tmp_136;
      real_t a_3_1 = tmp_392;
      real_t a_3_2 = tmp_417;
      real_t a_3_3 = tmp_49*(tmp_424*tmp_425 + tmp_425*tmp_426 + tmp_425*tmp_427) + tmp_57*(tmp_424*tmp_428 + tmp_426*tmp_428 + tmp_427*tmp_428) + tmp_65*(tmp_424*tmp_429 + tmp_426*tmp_429 + tmp_427*tmp_429) + tmp_73*(tmp_424*tmp_430 + tmp_426*tmp_430 + tmp_427*tmp_430);
      real_t a_3_4 = tmp_431;
      real_t a_3_5 = tmp_432;
      real_t a_3_6 = tmp_433;
      real_t a_3_7 = tmp_434;
      real_t a_3_8 = tmp_435;
      real_t a_3_9 = tmp_436;
      real_t a_4_0 = tmp_181;
      real_t a_4_1 = tmp_393;
      real_t a_4_2 = tmp_418;
      real_t a_4_3 = tmp_431;
      real_t a_4_4 = tmp_49*(16.0*((tmp_438 + tmp_440)*(tmp_438 + tmp_440)) + 16.0*((tmp_441 + tmp_442)*(tmp_441 + tmp_442)) + 16.0*((tmp_443 + tmp_444)*(tmp_443 + tmp_444))) + tmp_57*(16.0*((tmp_446 + tmp_448)*(tmp_446 + tmp_448)) + 16.0*((tmp_449 + tmp_450)*(tmp_449 + tmp_450)) + 16.0*((tmp_451 + tmp_452)*(tmp_451 + tmp_452))) + tmp_65*(16.0*((tmp_454 + tmp_456)*(tmp_454 + tmp_456)) + 16.0*((tmp_457 + tmp_458)*(tmp_457 + tmp_458)) + 16.0*((tmp_459 + tmp_460)*(tmp_459 + tmp_460))) + tmp_73*(16.0*((tmp_462 + tmp_464)*(tmp_462 + tmp_464)) + 16.0*((tmp_465 + tmp_466)*(tmp_465 + tmp_466)) + 16.0*((tmp_467 + tmp_468)*(tmp_467 + tmp_468)));
      real_t a_4_5 = tmp_469;
      real_t a_4_6 = tmp_470;
      real_t a_4_7 = tmp_471;
      real_t a_4_8 = tmp_472;
      real_t a_4_9 = tmp_473;
      real_t a_5_0 = tmp_222;
      real_t a_5_1 = tmp_394;
      real_t a_5_2 = tmp_419;
      real_t a_5_3 = tmp_432;
      real_t a_5_4 = tmp_469;
      real_t a_5_5 = tmp_49*(16.0*((tmp_475 + tmp_476)*(tmp_475 + tmp_476)) + 16.0*((tmp_477 + tmp_478)*(tmp_477 + tmp_478)) + 16.0*((tmp_479 + tmp_480)*(tmp_479 + tmp_480))) + tmp_57*(16.0*((tmp_482 + tmp_483)*(tmp_482 + tmp_483)) + 16.0*((tmp_484 + tmp_485)*(tmp_484 + tmp_485)) + 16.0*((tmp_486 + tmp_487)*(tmp_486 + tmp_487))) + tmp_65*(16.0*((tmp_489 + tmp_490)*(tmp_489 + tmp_490)) + 16.0*((tmp_491 + tmp_492)*(tmp_491 + tmp_492)) + 16.0*((tmp_493 + tmp_494)*(tmp_493 + tmp_494))) + tmp_73*(16.0*((tmp_496 + tmp_497)*(tmp_496 + tmp_497)) + 16.0*((tmp_498 + tmp_499)*(tmp_498 + tmp_499)) + 16.0*((tmp_500 + tmp_501)*(tmp_500 + tmp_501)));
      real_t a_5_6 = tmp_502;
      real_t a_5_7 = tmp_503;
      real_t a_5_8 = tmp_504;
      real_t a_5_9 = tmp_505;
      real_t a_6_0 = tmp_259;
      real_t a_6_1 = tmp_395;
      real_t a_6_2 = tmp_420;
      real_t a_6_3 = tmp_433;
      real_t a_6_4 = tmp_470;
      real_t a_6_5 = tmp_502;
      real_t a_6_6 = tmp_49*(16.0*((tmp_506 + tmp_507)*(tmp_506 + tmp_507)) + 16.0*((tmp_508 + tmp_509)*(tmp_508 + tmp_509)) + 16.0*((tmp_510 + tmp_511)*(tmp_510 + tmp_511))) + tmp_57*(16.0*((tmp_512 + tmp_513)*(tmp_512 + tmp_513)) + 16.0*((tmp_514 + tmp_515)*(tmp_514 + tmp_515)) + 16.0*((tmp_516 + tmp_517)*(tmp_516 + tmp_517))) + tmp_65*(16.0*((tmp_518 + tmp_519)*(tmp_518 + tmp_519)) + 16.0*((tmp_520 + tmp_521)*(tmp_520 + tmp_521)) + 16.0*((tmp_522 + tmp_523)*(tmp_522 + tmp_523))) + tmp_73*(16.0*((tmp_524 + tmp_525)*(tmp_524 + tmp_525)) + 16.0*((tmp_526 + tmp_527)*(tmp_526 + tmp_527)) + 16.0*((tmp_528 + tmp_529)*(tmp_528 + tmp_529)));
      real_t a_6_7 = tmp_530;
      real_t a_6_8 = tmp_531;
      real_t a_6_9 = tmp_532;
      real_t a_7_0 = tmp_296;
      real_t a_7_1 = tmp_396;
      real_t a_7_2 = tmp_421;
      real_t a_7_3 = tmp_434;
      real_t a_7_4 = tmp_471;
      real_t a_7_5 = tmp_503;
      real_t a_7_6 = tmp_530;
      real_t a_7_7 = tmp_49*(16.0*((0.25*tmp_263 - tmp_440 - tmp_476)*(0.25*tmp_263 - tmp_440 - tmp_476)) + 16.0*((0.25*tmp_265 - tmp_442 - tmp_478)*(0.25*tmp_265 - tmp_442 - tmp_478)) + 16.0*((0.25*tmp_267 - tmp_444 - tmp_480)*(0.25*tmp_267 - tmp_444 - tmp_480))) + tmp_57*(16.0*((0.25*tmp_272 - tmp_448 - tmp_483)*(0.25*tmp_272 - tmp_448 - tmp_483)) + 16.0*((0.25*tmp_274 - tmp_450 - tmp_485)*(0.25*tmp_274 - tmp_450 - tmp_485)) + 16.0*((0.25*tmp_276 - tmp_452 - tmp_487)*(0.25*tmp_276 - tmp_452 - tmp_487))) + tmp_65*(16.0*((0.25*tmp_281 - tmp_456 - tmp_490)*(0.25*tmp_281 - tmp_456 - tmp_490)) + 16.0*((0.25*tmp_283 - tmp_458 - tmp_492)*(0.25*tmp_283 - tmp_458 - tmp_492)) + 16.0*((0.25*tmp_285 - tmp_460 - tmp_494)*(0.25*tmp_285 - tmp_460 - tmp_494))) + tmp_73*(16.0*((0.25*tmp_290 - tmp_464 - tmp_497)*(0.25*tmp_290 - tmp_464 - tmp_497)) + 16.0*((0.25*tmp_292 - tmp_466 - tmp_499)*(0.25*tmp_292 - tmp_466 - tmp_499)) + 16.0*((0.25*tmp_294 - tmp_468 - tmp_501)*(0.25*tmp_294 - tmp_468 - tmp_501)));
      real_t a_7_8 = tmp_533;
      real_t a_7_9 = tmp_534;
      real_t a_8_0 = tmp_329;
      real_t a_8_1 = tmp_397;
      real_t a_8_2 = tmp_422;
      real_t a_8_3 = tmp_435;
      real_t a_8_4 = tmp_472;
      real_t a_8_5 = tmp_504;
      real_t a_8_6 = tmp_531;
      real_t a_8_7 = tmp_533;
      real_t a_8_8 = tmp_49*(16.0*((0.25*tmp_299 - tmp_438 - tmp_507)*(0.25*tmp_299 - tmp_438 - tmp_507)) + 16.0*((0.25*tmp_301 - tmp_441 - tmp_509)*(0.25*tmp_301 - tmp_441 - tmp_509)) + 16.0*((0.25*tmp_303 - tmp_443 - tmp_511)*(0.25*tmp_303 - tmp_443 - tmp_511))) + tmp_57*(16.0*((0.25*tmp_307 - tmp_446 - tmp_513)*(0.25*tmp_307 - tmp_446 - tmp_513)) + 16.0*((0.25*tmp_309 - tmp_449 - tmp_515)*(0.25*tmp_309 - tmp_449 - tmp_515)) + 16.0*((0.25*tmp_311 - tmp_451 - tmp_517)*(0.25*tmp_311 - tmp_451 - tmp_517))) + tmp_65*(16.0*((0.25*tmp_315 - tmp_454 - tmp_519)*(0.25*tmp_315 - tmp_454 - tmp_519)) + 16.0*((0.25*tmp_317 - tmp_457 - tmp_521)*(0.25*tmp_317 - tmp_457 - tmp_521)) + 16.0*((0.25*tmp_319 - tmp_459 - tmp_523)*(0.25*tmp_319 - tmp_459 - tmp_523))) + tmp_73*(16.0*((0.25*tmp_323 - tmp_462 - tmp_525)*(0.25*tmp_323 - tmp_462 - tmp_525)) + 16.0*((0.25*tmp_325 - tmp_465 - tmp_527)*(0.25*tmp_325 - tmp_465 - tmp_527)) + 16.0*((0.25*tmp_327 - tmp_467 - tmp_529)*(0.25*tmp_327 - tmp_467 - tmp_529)));
      real_t a_8_9 = tmp_535;
      real_t a_9_0 = tmp_358;
      real_t a_9_1 = tmp_398;
      real_t a_9_2 = tmp_423;
      real_t a_9_3 = tmp_436;
      real_t a_9_4 = tmp_473;
      real_t a_9_5 = tmp_505;
      real_t a_9_6 = tmp_532;
      real_t a_9_7 = tmp_534;
      real_t a_9_8 = tmp_535;
      real_t a_9_9 = tmp_49*(16.0*((0.25*tmp_331 - tmp_475 - tmp_506)*(0.25*tmp_331 - tmp_475 - tmp_506)) + 16.0*((0.25*tmp_333 - tmp_477 - tmp_508)*(0.25*tmp_333 - tmp_477 - tmp_508)) + 16.0*((0.25*tmp_335 - tmp_479 - tmp_510)*(0.25*tmp_335 - tmp_479 - tmp_510))) + tmp_57*(16.0*((0.25*tmp_338 - tmp_482 - tmp_512)*(0.25*tmp_338 - tmp_482 - tmp_512)) + 16.0*((0.25*tmp_340 - tmp_484 - tmp_514)*(0.25*tmp_340 - tmp_484 - tmp_514)) + 16.0*((0.25*tmp_342 - tmp_486 - tmp_516)*(0.25*tmp_342 - tmp_486 - tmp_516))) + tmp_65*(16.0*((0.25*tmp_345 - tmp_489 - tmp_518)*(0.25*tmp_345 - tmp_489 - tmp_518)) + 16.0*((0.25*tmp_347 - tmp_491 - tmp_520)*(0.25*tmp_347 - tmp_491 - tmp_520)) + 16.0*((0.25*tmp_349 - tmp_493 - tmp_522)*(0.25*tmp_349 - tmp_493 - tmp_522))) + tmp_73*(16.0*((0.25*tmp_352 - tmp_496 - tmp_524)*(0.25*tmp_352 - tmp_496 - tmp_524)) + 16.0*((0.25*tmp_354 - tmp_498 - tmp_526)*(0.25*tmp_354 - tmp_498 - tmp_526)) + 16.0*((0.25*tmp_356 - tmp_500 - tmp_528)*(0.25*tmp_356 - tmp_500 - tmp_528)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

} // namespace forms
} // namespace hyteg
