/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_full_stokescc_affine_q3.hpp"

namespace hyteg {
namespace forms {

   void p2_full_stokescc_0_0_affine_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.71423491305446574;
      real_t tmp_7 = 0.62020410288672878;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = tmp_3*tmp_8;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_14*tmp_8;
      real_t tmp_16 = tmp_13 + tmp_15;
      real_t tmp_17 = 0.5*tmp_13 + 0.5*tmp_15;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = 1.0*tmp_11 + 1.0*tmp_9;
      real_t tmp_20 = 2.0*tmp_11 + 2.0*tmp_9;
      real_t tmp_21 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_22 = 0.15902069087198858*tmp_21;
      real_t tmp_23 = 0.3001244408904325;
      real_t tmp_24 = 2.5797958971132711;
      real_t tmp_25 = tmp_5*(tmp_23 + tmp_24 - 3);
      real_t tmp_26 = tmp_1*tmp_25;
      real_t tmp_27 = tmp_10*tmp_25;
      real_t tmp_28 = tmp_26 + tmp_27;
      real_t tmp_29 = tmp_25*tmp_3;
      real_t tmp_30 = tmp_14*tmp_25;
      real_t tmp_31 = tmp_29 + tmp_30;
      real_t tmp_32 = 0.5*tmp_29 + 0.5*tmp_30;
      real_t tmp_33 = 2*tmp_32;
      real_t tmp_34 = 1.0*tmp_26 + 1.0*tmp_27;
      real_t tmp_35 = 2.0*tmp_26 + 2.0*tmp_27;
      real_t tmp_36 = 0.090979309128011415*tmp_21;
      real_t tmp_37 = 2.6655609840588057;
      real_t tmp_38 = 0.62020410288672878;
      real_t tmp_39 = tmp_5*(tmp_37 + tmp_38 - 3);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_40 + tmp_41;
      real_t tmp_43 = tmp_3*tmp_39;
      real_t tmp_44 = tmp_14*tmp_39;
      real_t tmp_45 = tmp_43 + tmp_44;
      real_t tmp_46 = 0.5*tmp_43 + 0.5*tmp_44;
      real_t tmp_47 = 2*tmp_46;
      real_t tmp_48 = 1.0*tmp_40 + 1.0*tmp_41;
      real_t tmp_49 = 2.0*tmp_40 + 2.0*tmp_41;
      real_t tmp_50 = 0.15902069087198858*tmp_21;
      real_t tmp_51 = 1.1200796619962963;
      real_t tmp_52 = 2.5797958971132711;
      real_t tmp_53 = tmp_5*(tmp_51 + tmp_52 - 3);
      real_t tmp_54 = tmp_1*tmp_53;
      real_t tmp_55 = tmp_10*tmp_53;
      real_t tmp_56 = tmp_54 + tmp_55;
      real_t tmp_57 = tmp_3*tmp_53;
      real_t tmp_58 = tmp_14*tmp_53;
      real_t tmp_59 = tmp_57 + tmp_58;
      real_t tmp_60 = 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = 1.0*tmp_54 + 1.0*tmp_55;
      real_t tmp_63 = 2.0*tmp_54 + 2.0*tmp_55;
      real_t tmp_64 = 0.090979309128011415*tmp_21;
      real_t tmp_65 = (2.0/3.0)*tmp_12;
      real_t tmp_66 = tmp_6 - 1;
      real_t tmp_67 = tmp_1*tmp_5;
      real_t tmp_68 = tmp_66*tmp_67;
      real_t tmp_69 = -tmp_65*tmp_68;
      real_t tmp_70 = 2.0*tmp_5;
      real_t tmp_71 = tmp_14*tmp_70;
      real_t tmp_72 = tmp_66*tmp_71;
      real_t tmp_73 = 2.0*tmp_19;
      real_t tmp_74 = (2.0/3.0)*tmp_28;
      real_t tmp_75 = tmp_23 - 1;
      real_t tmp_76 = tmp_67*tmp_75;
      real_t tmp_77 = -tmp_74*tmp_76;
      real_t tmp_78 = tmp_71*tmp_75;
      real_t tmp_79 = 2.0*tmp_34;
      real_t tmp_80 = (2.0/3.0)*tmp_42;
      real_t tmp_81 = tmp_37 - 1;
      real_t tmp_82 = tmp_67*tmp_81;
      real_t tmp_83 = -tmp_80*tmp_82;
      real_t tmp_84 = tmp_71*tmp_81;
      real_t tmp_85 = 2.0*tmp_48;
      real_t tmp_86 = (2.0/3.0)*tmp_56;
      real_t tmp_87 = tmp_51 - 1;
      real_t tmp_88 = tmp_67*tmp_87;
      real_t tmp_89 = -tmp_86*tmp_88;
      real_t tmp_90 = tmp_71*tmp_87;
      real_t tmp_91 = 2.0*tmp_62;
      real_t tmp_92 = tmp_7 - 1;
      real_t tmp_93 = tmp_10*tmp_5;
      real_t tmp_94 = tmp_92*tmp_93;
      real_t tmp_95 = -tmp_65*tmp_94;
      real_t tmp_96 = tmp_3*tmp_70;
      real_t tmp_97 = tmp_92*tmp_96;
      real_t tmp_98 = tmp_24 - 1;
      real_t tmp_99 = tmp_93*tmp_98;
      real_t tmp_100 = -tmp_74*tmp_99;
      real_t tmp_101 = tmp_96*tmp_98;
      real_t tmp_102 = tmp_38 - 1;
      real_t tmp_103 = tmp_102*tmp_93;
      real_t tmp_104 = -tmp_103*tmp_80;
      real_t tmp_105 = tmp_102*tmp_96;
      real_t tmp_106 = tmp_52 - 1;
      real_t tmp_107 = tmp_106*tmp_93;
      real_t tmp_108 = -tmp_107*tmp_86;
      real_t tmp_109 = tmp_106*tmp_96;
      real_t tmp_110 = tmp_6*tmp_93;
      real_t tmp_111 = tmp_67*tmp_7;
      real_t tmp_112 = tmp_110 + tmp_111;
      real_t tmp_113 = -tmp_112*tmp_65;
      real_t tmp_114 = 8.0*tmp_5;
      real_t tmp_115 = tmp_10*tmp_114;
      real_t tmp_116 = 0.17855872826361643*tmp_115;
      real_t tmp_117 = tmp_1*tmp_114;
      real_t tmp_118 = 0.1550510257216822*tmp_117;
      real_t tmp_119 = tmp_116 + tmp_118;
      real_t tmp_120 = 4.0*tmp_5;
      real_t tmp_121 = tmp_120*tmp_3;
      real_t tmp_122 = 0.17855872826361643*tmp_121;
      real_t tmp_123 = tmp_120*tmp_14;
      real_t tmp_124 = 0.1550510257216822*tmp_123;
      real_t tmp_125 = tmp_122 + tmp_124;
      real_t tmp_126 = tmp_23*tmp_93;
      real_t tmp_127 = tmp_24*tmp_67;
      real_t tmp_128 = tmp_126 + tmp_127;
      real_t tmp_129 = -tmp_128*tmp_74;
      real_t tmp_130 = 0.075031110222608124*tmp_115;
      real_t tmp_131 = 0.64494897427831777*tmp_117;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.075031110222608124*tmp_121;
      real_t tmp_134 = 0.64494897427831777*tmp_123;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_37*tmp_93;
      real_t tmp_137 = tmp_38*tmp_67;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = -tmp_138*tmp_80;
      real_t tmp_140 = 0.66639024601470143*tmp_115;
      real_t tmp_141 = 0.1550510257216822*tmp_117;
      real_t tmp_142 = tmp_140 + tmp_141;
      real_t tmp_143 = 0.66639024601470143*tmp_121;
      real_t tmp_144 = 0.1550510257216822*tmp_123;
      real_t tmp_145 = tmp_143 + tmp_144;
      real_t tmp_146 = tmp_51*tmp_93;
      real_t tmp_147 = tmp_52*tmp_67;
      real_t tmp_148 = tmp_146 + tmp_147;
      real_t tmp_149 = -tmp_148*tmp_86;
      real_t tmp_150 = 0.28001991549907407*tmp_115;
      real_t tmp_151 = 0.64494897427831777*tmp_117;
      real_t tmp_152 = tmp_150 + tmp_151;
      real_t tmp_153 = 0.28001991549907407*tmp_121;
      real_t tmp_154 = 0.64494897427831777*tmp_123;
      real_t tmp_155 = tmp_153 + tmp_154;
      real_t tmp_156 = tmp_5*(2.7595917942265427 - tmp_6);
      real_t tmp_157 = tmp_10*tmp_156;
      real_t tmp_158 = -tmp_111 + tmp_157;
      real_t tmp_159 = -tmp_158*tmp_65;
      real_t tmp_160 = tmp_156*tmp_3;
      real_t tmp_161 = -tmp_124 + tmp_160;
      real_t tmp_162 = -tmp_118 + 2.0*tmp_157;
      real_t tmp_163 = tmp_5*(-tmp_23 - 1.1595917942265421);
      real_t tmp_164 = tmp_10*tmp_163;
      real_t tmp_165 = -tmp_127 + tmp_164;
      real_t tmp_166 = -tmp_165*tmp_74;
      real_t tmp_167 = tmp_163*tmp_3;
      real_t tmp_168 = -tmp_134 + tmp_167;
      real_t tmp_169 = -tmp_131 + 2.0*tmp_164;
      real_t tmp_170 = tmp_5*(2.7595917942265427 - tmp_37);
      real_t tmp_171 = tmp_10*tmp_170;
      real_t tmp_172 = -tmp_137 + tmp_171;
      real_t tmp_173 = -tmp_172*tmp_80;
      real_t tmp_174 = tmp_170*tmp_3;
      real_t tmp_175 = -tmp_144 + tmp_174;
      real_t tmp_176 = -tmp_141 + 2.0*tmp_171;
      real_t tmp_177 = tmp_5*(-tmp_51 - 1.1595917942265421);
      real_t tmp_178 = tmp_10*tmp_177;
      real_t tmp_179 = -tmp_147 + tmp_178;
      real_t tmp_180 = -tmp_179*tmp_86;
      real_t tmp_181 = tmp_177*tmp_3;
      real_t tmp_182 = -tmp_154 + tmp_181;
      real_t tmp_183 = -tmp_151 + 2.0*tmp_178;
      real_t tmp_184 = tmp_5*(2.5715301738910687 - tmp_7);
      real_t tmp_185 = tmp_1*tmp_184;
      real_t tmp_186 = -tmp_110 + tmp_185;
      real_t tmp_187 = -tmp_186*tmp_65;
      real_t tmp_188 = tmp_14*tmp_184;
      real_t tmp_189 = -tmp_122 + tmp_188;
      real_t tmp_190 = -tmp_116 + 2.0*tmp_185;
      real_t tmp_191 = tmp_5*(3.3997511182191351 - tmp_24);
      real_t tmp_192 = tmp_1*tmp_191;
      real_t tmp_193 = -tmp_126 + tmp_192;
      real_t tmp_194 = -tmp_193*tmp_74;
      real_t tmp_195 = tmp_14*tmp_191;
      real_t tmp_196 = -tmp_133 + tmp_195;
      real_t tmp_197 = -tmp_130 + 2.0*tmp_192;
      real_t tmp_198 = tmp_5*(-tmp_38 - 1.3311219681176114);
      real_t tmp_199 = tmp_1*tmp_198;
      real_t tmp_200 = -tmp_136 + tmp_199;
      real_t tmp_201 = -tmp_200*tmp_80;
      real_t tmp_202 = tmp_14*tmp_198;
      real_t tmp_203 = -tmp_143 + tmp_202;
      real_t tmp_204 = -tmp_140 + 2.0*tmp_199;
      real_t tmp_205 = tmp_5*(1.7598406760074075 - tmp_52);
      real_t tmp_206 = tmp_1*tmp_205;
      real_t tmp_207 = -tmp_146 + tmp_206;
      real_t tmp_208 = -tmp_207*tmp_86;
      real_t tmp_209 = tmp_14*tmp_205;
      real_t tmp_210 = -tmp_153 + tmp_209;
      real_t tmp_211 = -tmp_150 + 2.0*tmp_206;
      real_t tmp_212 = 1.0*tmp_5;
      real_t tmp_213 = tmp_14*tmp_212;
      real_t tmp_214 = tmp_213*tmp_66;
      real_t tmp_215 = 1.0*tmp_68;
      real_t tmp_216 = tmp_213*tmp_75;
      real_t tmp_217 = 1.0*tmp_76;
      real_t tmp_218 = tmp_213*tmp_81;
      real_t tmp_219 = 1.0*tmp_82;
      real_t tmp_220 = tmp_213*tmp_87;
      real_t tmp_221 = 1.0*tmp_88;
      real_t tmp_222 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_223 = tmp_222*(tmp_66*tmp_66);
      real_t tmp_224 = 1.0*(tmp_14*tmp_14);
      real_t tmp_225 = 1.3333333333333335*(tmp_1*tmp_1);
      real_t tmp_226 = tmp_222*(tmp_75*tmp_75);
      real_t tmp_227 = tmp_222*(tmp_81*tmp_81);
      real_t tmp_228 = tmp_222*(tmp_87*tmp_87);
      real_t tmp_229 = tmp_222*tmp_66*tmp_92;
      real_t tmp_230 = 1.0*tmp_14*tmp_3;
      real_t tmp_231 = 1.3333333333333335*tmp_1*tmp_10;
      real_t tmp_232 = tmp_222*tmp_230;
      real_t tmp_233 = tmp_75*tmp_98;
      real_t tmp_234 = tmp_222*tmp_231;
      real_t tmp_235 = tmp_102*tmp_81;
      real_t tmp_236 = tmp_106*tmp_87;
      real_t tmp_237 = tmp_22*(tmp_229*tmp_230 + tmp_229*tmp_231) + tmp_36*(tmp_232*tmp_233 + tmp_233*tmp_234) + tmp_50*(tmp_232*tmp_235 + tmp_234*tmp_235) + tmp_64*(tmp_232*tmp_236 + tmp_234*tmp_236);
      real_t tmp_238 = (2.0/3.0)*tmp_112;
      real_t tmp_239 = -tmp_238*tmp_68;
      real_t tmp_240 = (2.0/3.0)*tmp_128;
      real_t tmp_241 = -tmp_240*tmp_76;
      real_t tmp_242 = (2.0/3.0)*tmp_138;
      real_t tmp_243 = -tmp_242*tmp_82;
      real_t tmp_244 = (2.0/3.0)*tmp_148;
      real_t tmp_245 = -tmp_244*tmp_88;
      real_t tmp_246 = (2.0/3.0)*tmp_158;
      real_t tmp_247 = -tmp_246*tmp_68;
      real_t tmp_248 = (2.0/3.0)*tmp_165;
      real_t tmp_249 = -tmp_248*tmp_76;
      real_t tmp_250 = (2.0/3.0)*tmp_172;
      real_t tmp_251 = -tmp_250*tmp_82;
      real_t tmp_252 = (2.0/3.0)*tmp_179;
      real_t tmp_253 = -tmp_252*tmp_88;
      real_t tmp_254 = (2.0/3.0)*tmp_186;
      real_t tmp_255 = -tmp_254*tmp_68;
      real_t tmp_256 = (2.0/3.0)*tmp_193;
      real_t tmp_257 = -tmp_256*tmp_76;
      real_t tmp_258 = (2.0/3.0)*tmp_200;
      real_t tmp_259 = -tmp_258*tmp_82;
      real_t tmp_260 = (2.0/3.0)*tmp_207;
      real_t tmp_261 = -tmp_260*tmp_88;
      real_t tmp_262 = tmp_212*tmp_3;
      real_t tmp_263 = tmp_262*tmp_92;
      real_t tmp_264 = 1.0*tmp_94;
      real_t tmp_265 = tmp_262*tmp_98;
      real_t tmp_266 = 1.0*tmp_99;
      real_t tmp_267 = tmp_102*tmp_262;
      real_t tmp_268 = 1.0*tmp_103;
      real_t tmp_269 = tmp_106*tmp_262;
      real_t tmp_270 = 1.0*tmp_107;
      real_t tmp_271 = tmp_222*(tmp_92*tmp_92);
      real_t tmp_272 = 1.0*(tmp_3*tmp_3);
      real_t tmp_273 = 1.3333333333333335*(tmp_10*tmp_10);
      real_t tmp_274 = tmp_222*(tmp_98*tmp_98);
      real_t tmp_275 = (tmp_102*tmp_102)*tmp_222;
      real_t tmp_276 = (tmp_106*tmp_106)*tmp_222;
      real_t tmp_277 = -tmp_238*tmp_94;
      real_t tmp_278 = -tmp_240*tmp_99;
      real_t tmp_279 = -tmp_103*tmp_242;
      real_t tmp_280 = -tmp_107*tmp_244;
      real_t tmp_281 = -tmp_246*tmp_94;
      real_t tmp_282 = -tmp_248*tmp_99;
      real_t tmp_283 = -tmp_103*tmp_250;
      real_t tmp_284 = -tmp_107*tmp_252;
      real_t tmp_285 = -tmp_254*tmp_94;
      real_t tmp_286 = -tmp_256*tmp_99;
      real_t tmp_287 = -tmp_103*tmp_258;
      real_t tmp_288 = -tmp_107*tmp_260;
      real_t tmp_289 = 0.17855872826361643*tmp_96;
      real_t tmp_290 = 0.1550510257216822*tmp_71;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = 2*tmp_291;
      real_t tmp_293 = tmp_10*tmp_120;
      real_t tmp_294 = 0.17855872826361643*tmp_293;
      real_t tmp_295 = tmp_1*tmp_120;
      real_t tmp_296 = 0.1550510257216822*tmp_295;
      real_t tmp_297 = tmp_294 + tmp_296;
      real_t tmp_298 = 0.075031110222608124*tmp_96;
      real_t tmp_299 = 0.64494897427831777*tmp_71;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = 2*tmp_300;
      real_t tmp_302 = 0.075031110222608124*tmp_293;
      real_t tmp_303 = 0.64494897427831777*tmp_295;
      real_t tmp_304 = tmp_302 + tmp_303;
      real_t tmp_305 = 0.66639024601470143*tmp_96;
      real_t tmp_306 = 0.1550510257216822*tmp_71;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = 2*tmp_307;
      real_t tmp_309 = 0.66639024601470143*tmp_293;
      real_t tmp_310 = 0.1550510257216822*tmp_295;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = 0.28001991549907407*tmp_96;
      real_t tmp_313 = 0.64494897427831777*tmp_71;
      real_t tmp_314 = tmp_312 + tmp_313;
      real_t tmp_315 = 2*tmp_314;
      real_t tmp_316 = 0.28001991549907407*tmp_293;
      real_t tmp_317 = 0.64494897427831777*tmp_295;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = 2.0*tmp_297;
      real_t tmp_320 = 2.0*tmp_304;
      real_t tmp_321 = 2.0*tmp_311;
      real_t tmp_322 = 2.0*tmp_318;
      real_t tmp_323 = -tmp_158*tmp_238;
      real_t tmp_324 = -tmp_165*tmp_240;
      real_t tmp_325 = -tmp_172*tmp_242;
      real_t tmp_326 = -tmp_179*tmp_244;
      real_t tmp_327 = -tmp_186*tmp_238;
      real_t tmp_328 = -tmp_193*tmp_240;
      real_t tmp_329 = -tmp_200*tmp_242;
      real_t tmp_330 = -tmp_207*tmp_244;
      real_t tmp_331 = 0.5*tmp_160 - tmp_290;
      real_t tmp_332 = 2*tmp_331;
      real_t tmp_333 = 1.0*tmp_157 - tmp_296;
      real_t tmp_334 = 0.5*tmp_167 - tmp_299;
      real_t tmp_335 = 2*tmp_334;
      real_t tmp_336 = 1.0*tmp_164 - tmp_303;
      real_t tmp_337 = 0.5*tmp_174 - tmp_306;
      real_t tmp_338 = 2*tmp_337;
      real_t tmp_339 = 1.0*tmp_171 - tmp_310;
      real_t tmp_340 = 0.5*tmp_181 - tmp_313;
      real_t tmp_341 = 2*tmp_340;
      real_t tmp_342 = 1.0*tmp_178 - tmp_317;
      real_t tmp_343 = 2.0*tmp_333;
      real_t tmp_344 = 2.0*tmp_336;
      real_t tmp_345 = 2.0*tmp_339;
      real_t tmp_346 = 2.0*tmp_342;
      real_t tmp_347 = -tmp_186*tmp_246;
      real_t tmp_348 = -tmp_193*tmp_248;
      real_t tmp_349 = -tmp_200*tmp_250;
      real_t tmp_350 = -tmp_207*tmp_252;
      real_t tmp_351 = 0.5*tmp_188 - tmp_289;
      real_t tmp_352 = 2*tmp_351;
      real_t tmp_353 = 1.0*tmp_185 - tmp_294;
      real_t tmp_354 = 0.5*tmp_195 - tmp_298;
      real_t tmp_355 = 2*tmp_354;
      real_t tmp_356 = 1.0*tmp_192 - tmp_302;
      real_t tmp_357 = 0.5*tmp_202 - tmp_305;
      real_t tmp_358 = 2*tmp_357;
      real_t tmp_359 = 1.0*tmp_199 - tmp_309;
      real_t tmp_360 = 0.5*tmp_209 - tmp_312;
      real_t tmp_361 = 2*tmp_360;
      real_t tmp_362 = 1.0*tmp_206 - tmp_316;
      real_t tmp_363 = 2.0*tmp_353;
      real_t tmp_364 = 2.0*tmp_356;
      real_t tmp_365 = 2.0*tmp_359;
      real_t tmp_366 = 2.0*tmp_362;
      real_t a_0_0 = tmp_22*(-2.0/3.0*(tmp_12*tmp_12) + tmp_16*tmp_18 + tmp_19*tmp_20) + tmp_36*(-2.0/3.0*(tmp_28*tmp_28) + tmp_31*tmp_33 + tmp_34*tmp_35) + tmp_50*(-2.0/3.0*(tmp_42*tmp_42) + tmp_45*tmp_47 + tmp_48*tmp_49) + tmp_64*(-2.0/3.0*(tmp_56*tmp_56) + tmp_59*tmp_61 + tmp_62*tmp_63);
      real_t a_0_1 = tmp_22*(tmp_17*tmp_72 + tmp_68*tmp_73 + tmp_69) + tmp_36*(tmp_32*tmp_78 + tmp_76*tmp_79 + tmp_77) + tmp_50*(tmp_46*tmp_84 + tmp_82*tmp_85 + tmp_83) + tmp_64*(tmp_60*tmp_90 + tmp_88*tmp_91 + tmp_89);
      real_t a_0_2 = tmp_22*(tmp_17*tmp_97 + tmp_73*tmp_94 + tmp_95) + tmp_36*(tmp_100 + tmp_101*tmp_32 + tmp_79*tmp_99) + tmp_50*(tmp_103*tmp_85 + tmp_104 + tmp_105*tmp_46) + tmp_64*(tmp_107*tmp_91 + tmp_108 + tmp_109*tmp_60);
      real_t a_0_3 = tmp_22*(tmp_113 + tmp_119*tmp_19 + tmp_125*tmp_18) + tmp_36*(tmp_129 + tmp_132*tmp_34 + tmp_135*tmp_33) + tmp_50*(tmp_139 + tmp_142*tmp_48 + tmp_145*tmp_47) + tmp_64*(tmp_149 + tmp_152*tmp_62 + tmp_155*tmp_61);
      real_t a_0_4 = tmp_22*(tmp_159 + tmp_161*tmp_18 + tmp_162*tmp_19) + tmp_36*(tmp_166 + tmp_168*tmp_33 + tmp_169*tmp_34) + tmp_50*(tmp_173 + tmp_175*tmp_47 + tmp_176*tmp_48) + tmp_64*(tmp_180 + tmp_182*tmp_61 + tmp_183*tmp_62);
      real_t a_0_5 = tmp_22*(tmp_18*tmp_189 + tmp_187 + tmp_19*tmp_190) + tmp_36*(tmp_194 + tmp_196*tmp_33 + tmp_197*tmp_34) + tmp_50*(tmp_201 + tmp_203*tmp_47 + tmp_204*tmp_48) + tmp_64*(tmp_208 + tmp_210*tmp_61 + tmp_211*tmp_62);
      real_t a_1_0 = tmp_22*(tmp_16*tmp_214 + tmp_20*tmp_215 + tmp_69) + tmp_36*(tmp_216*tmp_31 + tmp_217*tmp_35 + tmp_77) + tmp_50*(tmp_218*tmp_45 + tmp_219*tmp_49 + tmp_83) + tmp_64*(tmp_220*tmp_59 + tmp_221*tmp_63 + tmp_89);
      real_t a_1_1 = tmp_22*(tmp_223*tmp_224 + tmp_223*tmp_225) + tmp_36*(tmp_224*tmp_226 + tmp_225*tmp_226) + tmp_50*(tmp_224*tmp_227 + tmp_225*tmp_227) + tmp_64*(tmp_224*tmp_228 + tmp_225*tmp_228);
      real_t a_1_2 = tmp_237;
      real_t a_1_3 = tmp_22*(tmp_119*tmp_215 + tmp_125*tmp_214 + tmp_239) + tmp_36*(tmp_132*tmp_217 + tmp_135*tmp_216 + tmp_241) + tmp_50*(tmp_142*tmp_219 + tmp_145*tmp_218 + tmp_243) + tmp_64*(tmp_152*tmp_221 + tmp_155*tmp_220 + tmp_245);
      real_t a_1_4 = tmp_22*(tmp_161*tmp_214 + tmp_162*tmp_215 + tmp_247) + tmp_36*(tmp_168*tmp_216 + tmp_169*tmp_217 + tmp_249) + tmp_50*(tmp_175*tmp_218 + tmp_176*tmp_219 + tmp_251) + tmp_64*(tmp_182*tmp_220 + tmp_183*tmp_221 + tmp_253);
      real_t a_1_5 = tmp_22*(tmp_189*tmp_214 + tmp_190*tmp_215 + tmp_255) + tmp_36*(tmp_196*tmp_216 + tmp_197*tmp_217 + tmp_257) + tmp_50*(tmp_203*tmp_218 + tmp_204*tmp_219 + tmp_259) + tmp_64*(tmp_210*tmp_220 + tmp_211*tmp_221 + tmp_261);
      real_t a_2_0 = tmp_22*(tmp_16*tmp_263 + tmp_20*tmp_264 + tmp_95) + tmp_36*(tmp_100 + tmp_265*tmp_31 + tmp_266*tmp_35) + tmp_50*(tmp_104 + tmp_267*tmp_45 + tmp_268*tmp_49) + tmp_64*(tmp_108 + tmp_269*tmp_59 + tmp_270*tmp_63);
      real_t a_2_1 = tmp_237;
      real_t a_2_2 = tmp_22*(tmp_271*tmp_272 + tmp_271*tmp_273) + tmp_36*(tmp_272*tmp_274 + tmp_273*tmp_274) + tmp_50*(tmp_272*tmp_275 + tmp_273*tmp_275) + tmp_64*(tmp_272*tmp_276 + tmp_273*tmp_276);
      real_t a_2_3 = tmp_22*(tmp_119*tmp_264 + tmp_125*tmp_263 + tmp_277) + tmp_36*(tmp_132*tmp_266 + tmp_135*tmp_265 + tmp_278) + tmp_50*(tmp_142*tmp_268 + tmp_145*tmp_267 + tmp_279) + tmp_64*(tmp_152*tmp_270 + tmp_155*tmp_269 + tmp_280);
      real_t a_2_4 = tmp_22*(tmp_161*tmp_263 + tmp_162*tmp_264 + tmp_281) + tmp_36*(tmp_168*tmp_265 + tmp_169*tmp_266 + tmp_282) + tmp_50*(tmp_175*tmp_267 + tmp_176*tmp_268 + tmp_283) + tmp_64*(tmp_182*tmp_269 + tmp_183*tmp_270 + tmp_284);
      real_t a_2_5 = tmp_22*(tmp_189*tmp_263 + tmp_190*tmp_264 + tmp_285) + tmp_36*(tmp_196*tmp_265 + tmp_197*tmp_266 + tmp_286) + tmp_50*(tmp_203*tmp_267 + tmp_204*tmp_268 + tmp_287) + tmp_64*(tmp_210*tmp_269 + tmp_211*tmp_270 + tmp_288);
      real_t a_3_0 = tmp_22*(tmp_113 + tmp_16*tmp_292 + tmp_20*tmp_297) + tmp_36*(tmp_129 + tmp_301*tmp_31 + tmp_304*tmp_35) + tmp_50*(tmp_139 + tmp_308*tmp_45 + tmp_311*tmp_49) + tmp_64*(tmp_149 + tmp_315*tmp_59 + tmp_318*tmp_63);
      real_t a_3_1 = tmp_22*(tmp_239 + tmp_291*tmp_72 + tmp_319*tmp_68) + tmp_36*(tmp_241 + tmp_300*tmp_78 + tmp_320*tmp_76) + tmp_50*(tmp_243 + tmp_307*tmp_84 + tmp_321*tmp_82) + tmp_64*(tmp_245 + tmp_314*tmp_90 + tmp_322*tmp_88);
      real_t a_3_2 = tmp_22*(tmp_277 + tmp_291*tmp_97 + tmp_319*tmp_94) + tmp_36*(tmp_101*tmp_300 + tmp_278 + tmp_320*tmp_99) + tmp_50*(tmp_103*tmp_321 + tmp_105*tmp_307 + tmp_279) + tmp_64*(tmp_107*tmp_322 + tmp_109*tmp_314 + tmp_280);
      real_t a_3_3 = tmp_22*(-2.0/3.0*(tmp_112*tmp_112) + tmp_119*tmp_297 + tmp_125*tmp_292) + tmp_36*(-2.0/3.0*(tmp_128*tmp_128) + tmp_132*tmp_304 + tmp_135*tmp_301) + tmp_50*(-2.0/3.0*(tmp_138*tmp_138) + tmp_142*tmp_311 + tmp_145*tmp_308) + tmp_64*(-2.0/3.0*(tmp_148*tmp_148) + tmp_152*tmp_318 + tmp_155*tmp_315);
      real_t a_3_4 = tmp_22*(tmp_161*tmp_292 + tmp_162*tmp_297 + tmp_323) + tmp_36*(tmp_168*tmp_301 + tmp_169*tmp_304 + tmp_324) + tmp_50*(tmp_175*tmp_308 + tmp_176*tmp_311 + tmp_325) + tmp_64*(tmp_182*tmp_315 + tmp_183*tmp_318 + tmp_326);
      real_t a_3_5 = tmp_22*(tmp_189*tmp_292 + tmp_190*tmp_297 + tmp_327) + tmp_36*(tmp_196*tmp_301 + tmp_197*tmp_304 + tmp_328) + tmp_50*(tmp_203*tmp_308 + tmp_204*tmp_311 + tmp_329) + tmp_64*(tmp_210*tmp_315 + tmp_211*tmp_318 + tmp_330);
      real_t a_4_0 = tmp_22*(tmp_159 + tmp_16*tmp_332 + tmp_20*tmp_333) + tmp_36*(tmp_166 + tmp_31*tmp_335 + tmp_336*tmp_35) + tmp_50*(tmp_173 + tmp_338*tmp_45 + tmp_339*tmp_49) + tmp_64*(tmp_180 + tmp_341*tmp_59 + tmp_342*tmp_63);
      real_t a_4_1 = tmp_22*(tmp_247 + tmp_331*tmp_72 + tmp_343*tmp_68) + tmp_36*(tmp_249 + tmp_334*tmp_78 + tmp_344*tmp_76) + tmp_50*(tmp_251 + tmp_337*tmp_84 + tmp_345*tmp_82) + tmp_64*(tmp_253 + tmp_340*tmp_90 + tmp_346*tmp_88);
      real_t a_4_2 = tmp_22*(tmp_281 + tmp_331*tmp_97 + tmp_343*tmp_94) + tmp_36*(tmp_101*tmp_334 + tmp_282 + tmp_344*tmp_99) + tmp_50*(tmp_103*tmp_345 + tmp_105*tmp_337 + tmp_283) + tmp_64*(tmp_107*tmp_346 + tmp_109*tmp_340 + tmp_284);
      real_t a_4_3 = tmp_22*(tmp_119*tmp_333 + tmp_125*tmp_332 + tmp_323) + tmp_36*(tmp_132*tmp_336 + tmp_135*tmp_335 + tmp_324) + tmp_50*(tmp_142*tmp_339 + tmp_145*tmp_338 + tmp_325) + tmp_64*(tmp_152*tmp_342 + tmp_155*tmp_341 + tmp_326);
      real_t a_4_4 = tmp_22*(-2.0/3.0*(tmp_158*tmp_158) + tmp_161*tmp_332 + tmp_162*tmp_333) + tmp_36*(-2.0/3.0*(tmp_165*tmp_165) + tmp_168*tmp_335 + tmp_169*tmp_336) + tmp_50*(-2.0/3.0*(tmp_172*tmp_172) + tmp_175*tmp_338 + tmp_176*tmp_339) + tmp_64*(-2.0/3.0*(tmp_179*tmp_179) + tmp_182*tmp_341 + tmp_183*tmp_342);
      real_t a_4_5 = tmp_22*(tmp_189*tmp_332 + tmp_190*tmp_333 + tmp_347) + tmp_36*(tmp_196*tmp_335 + tmp_197*tmp_336 + tmp_348) + tmp_50*(tmp_203*tmp_338 + tmp_204*tmp_339 + tmp_349) + tmp_64*(tmp_210*tmp_341 + tmp_211*tmp_342 + tmp_350);
      real_t a_5_0 = tmp_22*(tmp_16*tmp_352 + tmp_187 + tmp_20*tmp_353) + tmp_36*(tmp_194 + tmp_31*tmp_355 + tmp_35*tmp_356) + tmp_50*(tmp_201 + tmp_358*tmp_45 + tmp_359*tmp_49) + tmp_64*(tmp_208 + tmp_361*tmp_59 + tmp_362*tmp_63);
      real_t a_5_1 = tmp_22*(tmp_255 + tmp_351*tmp_72 + tmp_363*tmp_68) + tmp_36*(tmp_257 + tmp_354*tmp_78 + tmp_364*tmp_76) + tmp_50*(tmp_259 + tmp_357*tmp_84 + tmp_365*tmp_82) + tmp_64*(tmp_261 + tmp_360*tmp_90 + tmp_366*tmp_88);
      real_t a_5_2 = tmp_22*(tmp_285 + tmp_351*tmp_97 + tmp_363*tmp_94) + tmp_36*(tmp_101*tmp_354 + tmp_286 + tmp_364*tmp_99) + tmp_50*(tmp_103*tmp_365 + tmp_105*tmp_357 + tmp_287) + tmp_64*(tmp_107*tmp_366 + tmp_109*tmp_360 + tmp_288);
      real_t a_5_3 = tmp_22*(tmp_119*tmp_353 + tmp_125*tmp_352 + tmp_327) + tmp_36*(tmp_132*tmp_356 + tmp_135*tmp_355 + tmp_328) + tmp_50*(tmp_142*tmp_359 + tmp_145*tmp_358 + tmp_329) + tmp_64*(tmp_152*tmp_362 + tmp_155*tmp_361 + tmp_330);
      real_t a_5_4 = tmp_22*(tmp_161*tmp_352 + tmp_162*tmp_353 + tmp_347) + tmp_36*(tmp_168*tmp_355 + tmp_169*tmp_356 + tmp_348) + tmp_50*(tmp_175*tmp_358 + tmp_176*tmp_359 + tmp_349) + tmp_64*(tmp_182*tmp_361 + tmp_183*tmp_362 + tmp_350);
      real_t a_5_5 = tmp_22*(-2.0/3.0*(tmp_186*tmp_186) + tmp_189*tmp_352 + tmp_190*tmp_353) + tmp_36*(-2.0/3.0*(tmp_193*tmp_193) + tmp_196*tmp_355 + tmp_197*tmp_356) + tmp_50*(-2.0/3.0*(tmp_200*tmp_200) + tmp_203*tmp_358 + tmp_204*tmp_359) + tmp_64*(-2.0/3.0*(tmp_207*tmp_207) + tmp_210*tmp_361 + tmp_211*tmp_362);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_0_0_affine_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.71423491305446574;
      real_t tmp_6 = 0.62020410288672878;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = tmp_10 + tmp_8;
      real_t tmp_12 = tmp_3*tmp_7;
      real_t tmp_13 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_14 = tmp_13*tmp_7;
      real_t tmp_15 = 0.5*tmp_12 + 0.5*tmp_14;
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 1.0*tmp_10 + 1.0*tmp_8;
      real_t tmp_18 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_19 = 0.15902069087198858*tmp_18;
      real_t tmp_20 = 0.3001244408904325;
      real_t tmp_21 = 2.5797958971132711;
      real_t tmp_22 = tmp_4*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22;
      real_t tmp_24 = tmp_22*tmp_9;
      real_t tmp_25 = tmp_23 + tmp_24;
      real_t tmp_26 = tmp_22*tmp_3;
      real_t tmp_27 = tmp_13*tmp_22;
      real_t tmp_28 = 0.5*tmp_26 + 0.5*tmp_27;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_23 + 1.0*tmp_24;
      real_t tmp_31 = 0.090979309128011415*tmp_18;
      real_t tmp_32 = 2.6655609840588057;
      real_t tmp_33 = 0.62020410288672878;
      real_t tmp_34 = tmp_4*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_34*tmp_9;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_3*tmp_34;
      real_t tmp_39 = tmp_13*tmp_34;
      real_t tmp_40 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 1.0*tmp_35 + 1.0*tmp_36;
      real_t tmp_43 = 0.15902069087198858*tmp_18;
      real_t tmp_44 = 1.1200796619962963;
      real_t tmp_45 = 2.5797958971132711;
      real_t tmp_46 = tmp_4*(tmp_44 + tmp_45 - 3);
      real_t tmp_47 = tmp_1*tmp_46;
      real_t tmp_48 = tmp_46*tmp_9;
      real_t tmp_49 = tmp_47 + tmp_48;
      real_t tmp_50 = tmp_3*tmp_46;
      real_t tmp_51 = tmp_13*tmp_46;
      real_t tmp_52 = 0.5*tmp_50 + 0.5*tmp_51;
      real_t tmp_53 = 2*tmp_52;
      real_t tmp_54 = 1.0*tmp_47 + 1.0*tmp_48;
      real_t tmp_55 = 0.090979309128011415*tmp_18;
      real_t tmp_56 = (2.0/3.0)*tmp_11;
      real_t tmp_57 = tmp_5 - 1;
      real_t tmp_58 = tmp_1*tmp_4;
      real_t tmp_59 = tmp_57*tmp_58;
      real_t tmp_60 = 2.0*tmp_4;
      real_t tmp_61 = tmp_13*tmp_60;
      real_t tmp_62 = 2.0*tmp_17;
      real_t tmp_63 = (2.0/3.0)*tmp_25;
      real_t tmp_64 = tmp_20 - 1;
      real_t tmp_65 = tmp_58*tmp_64;
      real_t tmp_66 = 2.0*tmp_30;
      real_t tmp_67 = (2.0/3.0)*tmp_37;
      real_t tmp_68 = tmp_32 - 1;
      real_t tmp_69 = tmp_58*tmp_68;
      real_t tmp_70 = 2.0*tmp_42;
      real_t tmp_71 = (2.0/3.0)*tmp_49;
      real_t tmp_72 = tmp_44 - 1;
      real_t tmp_73 = tmp_58*tmp_72;
      real_t tmp_74 = 2.0*tmp_54;
      real_t tmp_75 = tmp_6 - 1;
      real_t tmp_76 = tmp_4*tmp_9;
      real_t tmp_77 = tmp_75*tmp_76;
      real_t tmp_78 = tmp_3*tmp_60;
      real_t tmp_79 = tmp_21 - 1;
      real_t tmp_80 = tmp_76*tmp_79;
      real_t tmp_81 = tmp_33 - 1;
      real_t tmp_82 = tmp_76*tmp_81;
      real_t tmp_83 = tmp_45 - 1;
      real_t tmp_84 = tmp_76*tmp_83;
      real_t tmp_85 = tmp_5*tmp_76;
      real_t tmp_86 = tmp_58*tmp_6;
      real_t tmp_87 = 8.0*tmp_4;
      real_t tmp_88 = tmp_87*tmp_9;
      real_t tmp_89 = 0.17855872826361643*tmp_88;
      real_t tmp_90 = tmp_1*tmp_87;
      real_t tmp_91 = 0.1550510257216822*tmp_90;
      real_t tmp_92 = 4.0*tmp_4;
      real_t tmp_93 = tmp_3*tmp_92;
      real_t tmp_94 = 0.17855872826361643*tmp_93;
      real_t tmp_95 = tmp_13*tmp_92;
      real_t tmp_96 = 0.1550510257216822*tmp_95;
      real_t tmp_97 = tmp_20*tmp_76;
      real_t tmp_98 = tmp_21*tmp_58;
      real_t tmp_99 = 0.075031110222608124*tmp_88;
      real_t tmp_100 = 0.64494897427831777*tmp_90;
      real_t tmp_101 = 0.075031110222608124*tmp_93;
      real_t tmp_102 = 0.64494897427831777*tmp_95;
      real_t tmp_103 = tmp_32*tmp_76;
      real_t tmp_104 = tmp_33*tmp_58;
      real_t tmp_105 = 0.66639024601470143*tmp_88;
      real_t tmp_106 = 0.1550510257216822*tmp_90;
      real_t tmp_107 = 0.66639024601470143*tmp_93;
      real_t tmp_108 = 0.1550510257216822*tmp_95;
      real_t tmp_109 = tmp_44*tmp_76;
      real_t tmp_110 = tmp_45*tmp_58;
      real_t tmp_111 = 0.28001991549907407*tmp_88;
      real_t tmp_112 = 0.64494897427831777*tmp_90;
      real_t tmp_113 = 0.28001991549907407*tmp_93;
      real_t tmp_114 = 0.64494897427831777*tmp_95;
      real_t tmp_115 = tmp_4*(2.7595917942265427 - tmp_5);
      real_t tmp_116 = tmp_115*tmp_9;
      real_t tmp_117 = tmp_4*(-tmp_20 - 1.1595917942265421);
      real_t tmp_118 = tmp_117*tmp_9;
      real_t tmp_119 = tmp_4*(2.7595917942265427 - tmp_32);
      real_t tmp_120 = tmp_119*tmp_9;
      real_t tmp_121 = tmp_4*(-tmp_44 - 1.1595917942265421);
      real_t tmp_122 = tmp_121*tmp_9;
      real_t tmp_123 = tmp_4*(2.5715301738910687 - tmp_6);
      real_t tmp_124 = tmp_1*tmp_123;
      real_t tmp_125 = tmp_4*(3.3997511182191351 - tmp_21);
      real_t tmp_126 = tmp_1*tmp_125;
      real_t tmp_127 = tmp_4*(-tmp_33 - 1.3311219681176114);
      real_t tmp_128 = tmp_1*tmp_127;
      real_t tmp_129 = tmp_4*(1.7598406760074075 - tmp_45);
      real_t tmp_130 = tmp_1*tmp_129;
      real_t a_0_0 = tmp_19*(-2.0/3.0*(tmp_11*tmp_11) + tmp_16*(tmp_12 + tmp_14) + tmp_17*(2.0*tmp_10 + 2.0*tmp_8)) + tmp_31*(-2.0/3.0*(tmp_25*tmp_25) + tmp_29*(tmp_26 + tmp_27) + tmp_30*(2.0*tmp_23 + 2.0*tmp_24)) + tmp_43*(-2.0/3.0*(tmp_37*tmp_37) + tmp_41*(tmp_38 + tmp_39) + tmp_42*(2.0*tmp_35 + 2.0*tmp_36)) + tmp_55*(-2.0/3.0*(tmp_49*tmp_49) + tmp_53*(tmp_50 + tmp_51) + tmp_54*(2.0*tmp_47 + 2.0*tmp_48));
      real_t a_0_1 = tmp_19*(tmp_15*tmp_57*tmp_61 - tmp_56*tmp_59 + tmp_59*tmp_62) + tmp_31*(tmp_28*tmp_61*tmp_64 - tmp_63*tmp_65 + tmp_65*tmp_66) + tmp_43*(tmp_40*tmp_61*tmp_68 - tmp_67*tmp_69 + tmp_69*tmp_70) + tmp_55*(tmp_52*tmp_61*tmp_72 - tmp_71*tmp_73 + tmp_73*tmp_74);
      real_t a_0_2 = tmp_19*(tmp_15*tmp_75*tmp_78 - tmp_56*tmp_77 + tmp_62*tmp_77) + tmp_31*(tmp_28*tmp_78*tmp_79 - tmp_63*tmp_80 + tmp_66*tmp_80) + tmp_43*(tmp_40*tmp_78*tmp_81 - tmp_67*tmp_82 + tmp_70*tmp_82) + tmp_55*(tmp_52*tmp_78*tmp_83 - tmp_71*tmp_84 + tmp_74*tmp_84);
      real_t a_0_3 = tmp_19*(tmp_16*(tmp_94 + tmp_96) + tmp_17*(tmp_89 + tmp_91) - tmp_56*(tmp_85 + tmp_86)) + tmp_31*(tmp_29*(tmp_101 + tmp_102) + tmp_30*(tmp_100 + tmp_99) - tmp_63*(tmp_97 + tmp_98)) + tmp_43*(tmp_41*(tmp_107 + tmp_108) + tmp_42*(tmp_105 + tmp_106) - tmp_67*(tmp_103 + tmp_104)) + tmp_55*(tmp_53*(tmp_113 + tmp_114) + tmp_54*(tmp_111 + tmp_112) - tmp_71*(tmp_109 + tmp_110));
      real_t a_0_4 = tmp_19*(tmp_16*(tmp_115*tmp_3 - tmp_96) + tmp_17*(2.0*tmp_116 - tmp_91) - tmp_56*(tmp_116 - tmp_86)) + tmp_31*(tmp_29*(-tmp_102 + tmp_117*tmp_3) + tmp_30*(-tmp_100 + 2.0*tmp_118) - tmp_63*(tmp_118 - tmp_98)) + tmp_43*(tmp_41*(-tmp_108 + tmp_119*tmp_3) + tmp_42*(-tmp_106 + 2.0*tmp_120) - tmp_67*(-tmp_104 + tmp_120)) + tmp_55*(tmp_53*(-tmp_114 + tmp_121*tmp_3) + tmp_54*(-tmp_112 + 2.0*tmp_122) - tmp_71*(-tmp_110 + tmp_122));
      real_t a_0_5 = tmp_19*(tmp_16*(tmp_123*tmp_13 - tmp_94) + tmp_17*(2.0*tmp_124 - tmp_89) - tmp_56*(tmp_124 - tmp_85)) + tmp_31*(tmp_29*(-tmp_101 + tmp_125*tmp_13) + tmp_30*(2.0*tmp_126 - tmp_99) - tmp_63*(tmp_126 - tmp_97)) + tmp_43*(tmp_41*(-tmp_107 + tmp_127*tmp_13) + tmp_42*(-tmp_105 + 2.0*tmp_128) - tmp_67*(-tmp_103 + tmp_128)) + tmp_55*(tmp_53*(-tmp_113 + tmp_129*tmp_13) + tmp_54*(-tmp_111 + 2.0*tmp_130) - tmp_71*(-tmp_109 + tmp_130));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_0_0_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_15 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_12 - tmp_17;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = -0.1333333333333333*tmp_63;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 0.66666666666666663;
      real_t tmp_67 = 2.0;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.074999999999999983*tmp_63;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = 2.0;
      real_t tmp_90 = 0.66666666666666663;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.074999999999999983*tmp_63;
      real_t tmp_111 = 2.0;
      real_t tmp_112 = 0.66666666666666663;
      real_t tmp_113 = 0.66666666666666663;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.074999999999999983*tmp_63;
      real_t tmp_134 = 0.66666666666666663;
      real_t tmp_135 = 0.66666666666666663;
      real_t tmp_136 = 0.66666666666666663;
      real_t tmp_137 = tmp_20*(tmp_134 + tmp_135 + tmp_136 - 3.0);
      real_t tmp_138 = tmp_137*tmp_8;
      real_t tmp_139 = tmp_137*tmp_26;
      real_t tmp_140 = tmp_137*tmp_28;
      real_t tmp_141 = tmp_138 + tmp_139 + tmp_140;
      real_t tmp_142 = tmp_137*tmp_31;
      real_t tmp_143 = tmp_137*tmp_33;
      real_t tmp_144 = tmp_137*tmp_35;
      real_t tmp_145 = tmp_142 + tmp_143 + tmp_144;
      real_t tmp_146 = 0.5*tmp_142 + 0.5*tmp_143 + 0.5*tmp_144;
      real_t tmp_147 = 2*tmp_146;
      real_t tmp_148 = tmp_137*tmp_40;
      real_t tmp_149 = tmp_137*tmp_42;
      real_t tmp_150 = tmp_137*tmp_44;
      real_t tmp_151 = tmp_148 + tmp_149 + tmp_150;
      real_t tmp_152 = 0.5*tmp_148 + 0.5*tmp_149 + 0.5*tmp_150;
      real_t tmp_153 = 2*tmp_152;
      real_t tmp_154 = 1.0*tmp_138 + 1.0*tmp_139 + 1.0*tmp_140;
      real_t tmp_155 = 2.0*tmp_138 + 2.0*tmp_139 + 2.0*tmp_140;
      real_t tmp_156 = 0.074999999999999983*tmp_63;
      real_t tmp_157 = (2.0/3.0)*tmp_30;
      real_t tmp_158 = tmp_21 - 1.0;
      real_t tmp_159 = tmp_20*tmp_28;
      real_t tmp_160 = tmp_158*tmp_159;
      real_t tmp_161 = -tmp_157*tmp_160;
      real_t tmp_162 = 2.0*tmp_20;
      real_t tmp_163 = tmp_158*tmp_162;
      real_t tmp_164 = tmp_163*tmp_35;
      real_t tmp_165 = tmp_163*tmp_44;
      real_t tmp_166 = 2.0*tmp_49;
      real_t tmp_167 = (2.0/3.0)*tmp_72;
      real_t tmp_168 = tmp_65 - 1.0;
      real_t tmp_169 = tmp_159*tmp_168;
      real_t tmp_170 = -tmp_167*tmp_169;
      real_t tmp_171 = tmp_162*tmp_168;
      real_t tmp_172 = tmp_171*tmp_35;
      real_t tmp_173 = tmp_171*tmp_44;
      real_t tmp_174 = 2.0*tmp_85;
      real_t tmp_175 = (2.0/3.0)*tmp_95;
      real_t tmp_176 = tmp_88 - 1.0;
      real_t tmp_177 = tmp_159*tmp_176;
      real_t tmp_178 = -tmp_175*tmp_177;
      real_t tmp_179 = tmp_162*tmp_176;
      real_t tmp_180 = tmp_179*tmp_35;
      real_t tmp_181 = tmp_179*tmp_44;
      real_t tmp_182 = 2.0*tmp_108;
      real_t tmp_183 = (2.0/3.0)*tmp_118;
      real_t tmp_184 = tmp_111 - 1.0;
      real_t tmp_185 = tmp_159*tmp_184;
      real_t tmp_186 = -tmp_183*tmp_185;
      real_t tmp_187 = tmp_162*tmp_184;
      real_t tmp_188 = tmp_187*tmp_35;
      real_t tmp_189 = tmp_187*tmp_44;
      real_t tmp_190 = 2.0*tmp_131;
      real_t tmp_191 = (2.0/3.0)*tmp_141;
      real_t tmp_192 = tmp_134 - 1.0;
      real_t tmp_193 = tmp_159*tmp_192;
      real_t tmp_194 = -tmp_191*tmp_193;
      real_t tmp_195 = tmp_162*tmp_192;
      real_t tmp_196 = tmp_195*tmp_35;
      real_t tmp_197 = tmp_195*tmp_44;
      real_t tmp_198 = 2.0*tmp_154;
      real_t tmp_199 = tmp_22 - 1.0;
      real_t tmp_200 = tmp_20*tmp_26;
      real_t tmp_201 = tmp_199*tmp_200;
      real_t tmp_202 = -tmp_157*tmp_201;
      real_t tmp_203 = tmp_162*tmp_199;
      real_t tmp_204 = tmp_203*tmp_33;
      real_t tmp_205 = tmp_203*tmp_42;
      real_t tmp_206 = tmp_66 - 1.0;
      real_t tmp_207 = tmp_200*tmp_206;
      real_t tmp_208 = -tmp_167*tmp_207;
      real_t tmp_209 = tmp_162*tmp_206;
      real_t tmp_210 = tmp_209*tmp_33;
      real_t tmp_211 = tmp_209*tmp_42;
      real_t tmp_212 = tmp_89 - 1.0;
      real_t tmp_213 = tmp_200*tmp_212;
      real_t tmp_214 = -tmp_175*tmp_213;
      real_t tmp_215 = tmp_162*tmp_212;
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_215*tmp_42;
      real_t tmp_218 = tmp_112 - 1.0;
      real_t tmp_219 = tmp_200*tmp_218;
      real_t tmp_220 = -tmp_183*tmp_219;
      real_t tmp_221 = tmp_162*tmp_218;
      real_t tmp_222 = tmp_221*tmp_33;
      real_t tmp_223 = tmp_221*tmp_42;
      real_t tmp_224 = tmp_135 - 1.0;
      real_t tmp_225 = tmp_200*tmp_224;
      real_t tmp_226 = -tmp_191*tmp_225;
      real_t tmp_227 = tmp_162*tmp_224;
      real_t tmp_228 = tmp_227*tmp_33;
      real_t tmp_229 = tmp_227*tmp_42;
      real_t tmp_230 = tmp_23 - 1.0;
      real_t tmp_231 = tmp_20*tmp_8;
      real_t tmp_232 = tmp_230*tmp_231;
      real_t tmp_233 = -tmp_157*tmp_232;
      real_t tmp_234 = tmp_162*tmp_230;
      real_t tmp_235 = tmp_234*tmp_31;
      real_t tmp_236 = tmp_234*tmp_40;
      real_t tmp_237 = tmp_67 - 1.0;
      real_t tmp_238 = tmp_231*tmp_237;
      real_t tmp_239 = -tmp_167*tmp_238;
      real_t tmp_240 = tmp_162*tmp_237;
      real_t tmp_241 = tmp_240*tmp_31;
      real_t tmp_242 = tmp_240*tmp_40;
      real_t tmp_243 = tmp_90 - 1.0;
      real_t tmp_244 = tmp_231*tmp_243;
      real_t tmp_245 = -tmp_175*tmp_244;
      real_t tmp_246 = tmp_162*tmp_243;
      real_t tmp_247 = tmp_246*tmp_31;
      real_t tmp_248 = tmp_246*tmp_40;
      real_t tmp_249 = tmp_113 - 1.0;
      real_t tmp_250 = tmp_231*tmp_249;
      real_t tmp_251 = -tmp_183*tmp_250;
      real_t tmp_252 = tmp_162*tmp_249;
      real_t tmp_253 = tmp_252*tmp_31;
      real_t tmp_254 = tmp_252*tmp_40;
      real_t tmp_255 = tmp_136 - 1.0;
      real_t tmp_256 = tmp_231*tmp_255;
      real_t tmp_257 = -tmp_191*tmp_256;
      real_t tmp_258 = tmp_162*tmp_255;
      real_t tmp_259 = tmp_258*tmp_31;
      real_t tmp_260 = tmp_258*tmp_40;
      real_t tmp_261 = tmp_22*tmp_231;
      real_t tmp_262 = tmp_200*tmp_23;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = -tmp_157*tmp_263;
      real_t tmp_265 = 2.0;
      real_t tmp_266 = tmp_231*tmp_265;
      real_t tmp_267 = 2.0;
      real_t tmp_268 = tmp_200*tmp_267;
      real_t tmp_269 = tmp_266 + tmp_268;
      real_t tmp_270 = tmp_20*tmp_22;
      real_t tmp_271 = tmp_270*tmp_31;
      real_t tmp_272 = tmp_20*tmp_23;
      real_t tmp_273 = tmp_272*tmp_33;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_270*tmp_40;
      real_t tmp_276 = tmp_272*tmp_42;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = tmp_231*tmp_66;
      real_t tmp_279 = tmp_200*tmp_67;
      real_t tmp_280 = tmp_278 + tmp_279;
      real_t tmp_281 = -tmp_167*tmp_280;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_231*tmp_282;
      real_t tmp_284 = 4.0;
      real_t tmp_285 = tmp_200*tmp_284;
      real_t tmp_286 = tmp_283 + tmp_285;
      real_t tmp_287 = tmp_20*tmp_66;
      real_t tmp_288 = tmp_287*tmp_31;
      real_t tmp_289 = tmp_20*tmp_67;
      real_t tmp_290 = tmp_289*tmp_33;
      real_t tmp_291 = tmp_288 + tmp_290;
      real_t tmp_292 = tmp_287*tmp_40;
      real_t tmp_293 = tmp_289*tmp_42;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_231*tmp_89;
      real_t tmp_296 = tmp_200*tmp_90;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = -tmp_175*tmp_297;
      real_t tmp_299 = 4.0;
      real_t tmp_300 = tmp_231*tmp_299;
      real_t tmp_301 = 1.3333333333333333;
      real_t tmp_302 = tmp_200*tmp_301;
      real_t tmp_303 = tmp_300 + tmp_302;
      real_t tmp_304 = tmp_20*tmp_89;
      real_t tmp_305 = tmp_304*tmp_31;
      real_t tmp_306 = tmp_20*tmp_90;
      real_t tmp_307 = tmp_306*tmp_33;
      real_t tmp_308 = tmp_305 + tmp_307;
      real_t tmp_309 = tmp_304*tmp_40;
      real_t tmp_310 = tmp_306*tmp_42;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_112*tmp_231;
      real_t tmp_313 = tmp_113*tmp_200;
      real_t tmp_314 = tmp_312 + tmp_313;
      real_t tmp_315 = -tmp_183*tmp_314;
      real_t tmp_316 = 1.3333333333333333;
      real_t tmp_317 = tmp_231*tmp_316;
      real_t tmp_318 = 1.3333333333333333;
      real_t tmp_319 = tmp_200*tmp_318;
      real_t tmp_320 = tmp_317 + tmp_319;
      real_t tmp_321 = tmp_112*tmp_20;
      real_t tmp_322 = tmp_31*tmp_321;
      real_t tmp_323 = tmp_113*tmp_20;
      real_t tmp_324 = tmp_323*tmp_33;
      real_t tmp_325 = tmp_322 + tmp_324;
      real_t tmp_326 = tmp_321*tmp_40;
      real_t tmp_327 = tmp_323*tmp_42;
      real_t tmp_328 = tmp_326 + tmp_327;
      real_t tmp_329 = tmp_135*tmp_231;
      real_t tmp_330 = tmp_136*tmp_200;
      real_t tmp_331 = tmp_329 + tmp_330;
      real_t tmp_332 = -tmp_191*tmp_331;
      real_t tmp_333 = 1.3333333333333333;
      real_t tmp_334 = tmp_231*tmp_333;
      real_t tmp_335 = 1.3333333333333333;
      real_t tmp_336 = tmp_200*tmp_335;
      real_t tmp_337 = tmp_334 + tmp_336;
      real_t tmp_338 = tmp_135*tmp_20;
      real_t tmp_339 = tmp_31*tmp_338;
      real_t tmp_340 = tmp_136*tmp_20;
      real_t tmp_341 = tmp_33*tmp_340;
      real_t tmp_342 = tmp_339 + tmp_341;
      real_t tmp_343 = tmp_338*tmp_40;
      real_t tmp_344 = tmp_340*tmp_42;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_21*tmp_231;
      real_t tmp_347 = tmp_159*tmp_23;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_157*tmp_348;
      real_t tmp_350 = 2.0;
      real_t tmp_351 = tmp_231*tmp_350;
      real_t tmp_352 = tmp_159*tmp_267;
      real_t tmp_353 = tmp_351 + tmp_352;
      real_t tmp_354 = tmp_20*tmp_21;
      real_t tmp_355 = tmp_31*tmp_354;
      real_t tmp_356 = tmp_272*tmp_35;
      real_t tmp_357 = tmp_355 + tmp_356;
      real_t tmp_358 = tmp_354*tmp_40;
      real_t tmp_359 = tmp_272*tmp_44;
      real_t tmp_360 = tmp_358 + tmp_359;
      real_t tmp_361 = tmp_231*tmp_65;
      real_t tmp_362 = tmp_159*tmp_67;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = -tmp_167*tmp_363;
      real_t tmp_365 = 1.3333333333333333;
      real_t tmp_366 = tmp_231*tmp_365;
      real_t tmp_367 = tmp_159*tmp_284;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_20*tmp_65;
      real_t tmp_370 = tmp_31*tmp_369;
      real_t tmp_371 = tmp_289*tmp_35;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_369*tmp_40;
      real_t tmp_374 = tmp_289*tmp_44;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_231*tmp_88;
      real_t tmp_377 = tmp_159*tmp_90;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = -tmp_175*tmp_378;
      real_t tmp_380 = 1.3333333333333333;
      real_t tmp_381 = tmp_231*tmp_380;
      real_t tmp_382 = tmp_159*tmp_301;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_20*tmp_88;
      real_t tmp_385 = tmp_31*tmp_384;
      real_t tmp_386 = tmp_306*tmp_35;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_384*tmp_40;
      real_t tmp_389 = tmp_306*tmp_44;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_111*tmp_231;
      real_t tmp_392 = tmp_113*tmp_159;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = -tmp_183*tmp_393;
      real_t tmp_395 = 4.0;
      real_t tmp_396 = tmp_231*tmp_395;
      real_t tmp_397 = tmp_159*tmp_318;
      real_t tmp_398 = tmp_396 + tmp_397;
      real_t tmp_399 = tmp_111*tmp_20;
      real_t tmp_400 = tmp_31*tmp_399;
      real_t tmp_401 = tmp_323*tmp_35;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_399*tmp_40;
      real_t tmp_404 = tmp_323*tmp_44;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_134*tmp_231;
      real_t tmp_407 = tmp_136*tmp_159;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_191*tmp_408;
      real_t tmp_410 = 1.3333333333333333;
      real_t tmp_411 = tmp_231*tmp_410;
      real_t tmp_412 = tmp_159*tmp_335;
      real_t tmp_413 = tmp_411 + tmp_412;
      real_t tmp_414 = tmp_134*tmp_20;
      real_t tmp_415 = tmp_31*tmp_414;
      real_t tmp_416 = tmp_340*tmp_35;
      real_t tmp_417 = tmp_415 + tmp_416;
      real_t tmp_418 = tmp_40*tmp_414;
      real_t tmp_419 = tmp_340*tmp_44;
      real_t tmp_420 = tmp_418 + tmp_419;
      real_t tmp_421 = tmp_200*tmp_21;
      real_t tmp_422 = tmp_159*tmp_22;
      real_t tmp_423 = tmp_421 + tmp_422;
      real_t tmp_424 = -tmp_157*tmp_423;
      real_t tmp_425 = tmp_200*tmp_350;
      real_t tmp_426 = tmp_159*tmp_265;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = tmp_33*tmp_354;
      real_t tmp_429 = tmp_270*tmp_35;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = tmp_354*tmp_42;
      real_t tmp_432 = tmp_270*tmp_44;
      real_t tmp_433 = tmp_431 + tmp_432;
      real_t tmp_434 = tmp_200*tmp_65;
      real_t tmp_435 = tmp_159*tmp_66;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = -tmp_167*tmp_436;
      real_t tmp_438 = tmp_200*tmp_365;
      real_t tmp_439 = tmp_159*tmp_282;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = tmp_33*tmp_369;
      real_t tmp_442 = tmp_287*tmp_35;
      real_t tmp_443 = tmp_441 + tmp_442;
      real_t tmp_444 = tmp_369*tmp_42;
      real_t tmp_445 = tmp_287*tmp_44;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = tmp_200*tmp_88;
      real_t tmp_448 = tmp_159*tmp_89;
      real_t tmp_449 = tmp_447 + tmp_448;
      real_t tmp_450 = -tmp_175*tmp_449;
      real_t tmp_451 = tmp_200*tmp_380;
      real_t tmp_452 = tmp_159*tmp_299;
      real_t tmp_453 = tmp_451 + tmp_452;
      real_t tmp_454 = tmp_33*tmp_384;
      real_t tmp_455 = tmp_304*tmp_35;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = tmp_384*tmp_42;
      real_t tmp_458 = tmp_304*tmp_44;
      real_t tmp_459 = tmp_457 + tmp_458;
      real_t tmp_460 = tmp_111*tmp_200;
      real_t tmp_461 = tmp_112*tmp_159;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = -tmp_183*tmp_462;
      real_t tmp_464 = tmp_200*tmp_395;
      real_t tmp_465 = tmp_159*tmp_316;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = tmp_33*tmp_399;
      real_t tmp_468 = tmp_321*tmp_35;
      real_t tmp_469 = tmp_467 + tmp_468;
      real_t tmp_470 = tmp_399*tmp_42;
      real_t tmp_471 = tmp_321*tmp_44;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = tmp_134*tmp_200;
      real_t tmp_474 = tmp_135*tmp_159;
      real_t tmp_475 = tmp_473 + tmp_474;
      real_t tmp_476 = -tmp_191*tmp_475;
      real_t tmp_477 = tmp_200*tmp_410;
      real_t tmp_478 = tmp_159*tmp_333;
      real_t tmp_479 = tmp_477 + tmp_478;
      real_t tmp_480 = tmp_33*tmp_414;
      real_t tmp_481 = tmp_338*tmp_35;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = tmp_414*tmp_42;
      real_t tmp_484 = tmp_338*tmp_44;
      real_t tmp_485 = tmp_483 + tmp_484;
      real_t tmp_486 = -tmp_22;
      real_t tmp_487 = 4.0 - tmp_21;
      real_t tmp_488 = tmp_20*(-tmp_267 + tmp_486 + tmp_487);
      real_t tmp_489 = tmp_488*tmp_8;
      real_t tmp_490 = -tmp_262 - tmp_347;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = -tmp_157*tmp_491;
      real_t tmp_493 = tmp_31*tmp_488;
      real_t tmp_494 = -tmp_273 - tmp_356 + tmp_493;
      real_t tmp_495 = tmp_40*tmp_488;
      real_t tmp_496 = -tmp_276 - tmp_359 + tmp_495;
      real_t tmp_497 = -tmp_268 - tmp_352 + 2.0*tmp_489;
      real_t tmp_498 = -tmp_66;
      real_t tmp_499 = 4.0 - tmp_65;
      real_t tmp_500 = tmp_20*(-tmp_284 + tmp_498 + tmp_499);
      real_t tmp_501 = tmp_500*tmp_8;
      real_t tmp_502 = -tmp_279 - tmp_362;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_167*tmp_503;
      real_t tmp_505 = tmp_31*tmp_500;
      real_t tmp_506 = -tmp_290 - tmp_371 + tmp_505;
      real_t tmp_507 = tmp_40*tmp_500;
      real_t tmp_508 = -tmp_293 - tmp_374 + tmp_507;
      real_t tmp_509 = -tmp_285 - tmp_367 + 2.0*tmp_501;
      real_t tmp_510 = -tmp_89;
      real_t tmp_511 = 4.0 - tmp_88;
      real_t tmp_512 = tmp_20*(-tmp_301 + tmp_510 + tmp_511);
      real_t tmp_513 = tmp_512*tmp_8;
      real_t tmp_514 = -tmp_296 - tmp_377;
      real_t tmp_515 = tmp_513 + tmp_514;
      real_t tmp_516 = -tmp_175*tmp_515;
      real_t tmp_517 = tmp_31*tmp_512;
      real_t tmp_518 = -tmp_307 - tmp_386 + tmp_517;
      real_t tmp_519 = tmp_40*tmp_512;
      real_t tmp_520 = -tmp_310 - tmp_389 + tmp_519;
      real_t tmp_521 = -tmp_302 - tmp_382 + 2.0*tmp_513;
      real_t tmp_522 = -tmp_112;
      real_t tmp_523 = 4.0 - tmp_111;
      real_t tmp_524 = tmp_20*(-tmp_318 + tmp_522 + tmp_523);
      real_t tmp_525 = tmp_524*tmp_8;
      real_t tmp_526 = -tmp_313 - tmp_392;
      real_t tmp_527 = tmp_525 + tmp_526;
      real_t tmp_528 = -tmp_183*tmp_527;
      real_t tmp_529 = tmp_31*tmp_524;
      real_t tmp_530 = -tmp_324 - tmp_401 + tmp_529;
      real_t tmp_531 = tmp_40*tmp_524;
      real_t tmp_532 = -tmp_327 - tmp_404 + tmp_531;
      real_t tmp_533 = -tmp_319 - tmp_397 + 2.0*tmp_525;
      real_t tmp_534 = -tmp_135;
      real_t tmp_535 = 4.0 - tmp_134;
      real_t tmp_536 = tmp_20*(-tmp_335 + tmp_534 + tmp_535);
      real_t tmp_537 = tmp_536*tmp_8;
      real_t tmp_538 = -tmp_330 - tmp_407;
      real_t tmp_539 = tmp_537 + tmp_538;
      real_t tmp_540 = -tmp_191*tmp_539;
      real_t tmp_541 = tmp_31*tmp_536;
      real_t tmp_542 = -tmp_341 - tmp_416 + tmp_541;
      real_t tmp_543 = tmp_40*tmp_536;
      real_t tmp_544 = -tmp_344 - tmp_419 + tmp_543;
      real_t tmp_545 = -tmp_336 - tmp_412 + 2.0*tmp_537;
      real_t tmp_546 = -tmp_23;
      real_t tmp_547 = tmp_20*(-tmp_265 + tmp_487 + tmp_546);
      real_t tmp_548 = tmp_26*tmp_547;
      real_t tmp_549 = -tmp_261 - tmp_422;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = -tmp_157*tmp_550;
      real_t tmp_552 = tmp_33*tmp_547;
      real_t tmp_553 = -tmp_271 - tmp_429 + tmp_552;
      real_t tmp_554 = tmp_42*tmp_547;
      real_t tmp_555 = -tmp_275 - tmp_432 + tmp_554;
      real_t tmp_556 = -tmp_266 - tmp_426 + 2.0*tmp_548;
      real_t tmp_557 = -tmp_67;
      real_t tmp_558 = tmp_20*(-tmp_282 + tmp_499 + tmp_557);
      real_t tmp_559 = tmp_26*tmp_558;
      real_t tmp_560 = -tmp_278 - tmp_435;
      real_t tmp_561 = tmp_559 + tmp_560;
      real_t tmp_562 = -tmp_167*tmp_561;
      real_t tmp_563 = tmp_33*tmp_558;
      real_t tmp_564 = -tmp_288 - tmp_442 + tmp_563;
      real_t tmp_565 = tmp_42*tmp_558;
      real_t tmp_566 = -tmp_292 - tmp_445 + tmp_565;
      real_t tmp_567 = -tmp_283 - tmp_439 + 2.0*tmp_559;
      real_t tmp_568 = -tmp_90;
      real_t tmp_569 = tmp_20*(-tmp_299 + tmp_511 + tmp_568);
      real_t tmp_570 = tmp_26*tmp_569;
      real_t tmp_571 = -tmp_295 - tmp_448;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = -tmp_175*tmp_572;
      real_t tmp_574 = tmp_33*tmp_569;
      real_t tmp_575 = -tmp_305 - tmp_455 + tmp_574;
      real_t tmp_576 = tmp_42*tmp_569;
      real_t tmp_577 = -tmp_309 - tmp_458 + tmp_576;
      real_t tmp_578 = -tmp_300 - tmp_452 + 2.0*tmp_570;
      real_t tmp_579 = -tmp_113;
      real_t tmp_580 = tmp_20*(-tmp_316 + tmp_523 + tmp_579);
      real_t tmp_581 = tmp_26*tmp_580;
      real_t tmp_582 = -tmp_312 - tmp_461;
      real_t tmp_583 = tmp_581 + tmp_582;
      real_t tmp_584 = -tmp_183*tmp_583;
      real_t tmp_585 = tmp_33*tmp_580;
      real_t tmp_586 = -tmp_322 - tmp_468 + tmp_585;
      real_t tmp_587 = tmp_42*tmp_580;
      real_t tmp_588 = -tmp_326 - tmp_471 + tmp_587;
      real_t tmp_589 = -tmp_317 - tmp_465 + 2.0*tmp_581;
      real_t tmp_590 = -tmp_136;
      real_t tmp_591 = tmp_20*(-tmp_333 + tmp_535 + tmp_590);
      real_t tmp_592 = tmp_26*tmp_591;
      real_t tmp_593 = -tmp_329 - tmp_474;
      real_t tmp_594 = tmp_592 + tmp_593;
      real_t tmp_595 = -tmp_191*tmp_594;
      real_t tmp_596 = tmp_33*tmp_591;
      real_t tmp_597 = -tmp_339 - tmp_481 + tmp_596;
      real_t tmp_598 = tmp_42*tmp_591;
      real_t tmp_599 = -tmp_343 - tmp_484 + tmp_598;
      real_t tmp_600 = -tmp_334 - tmp_478 + 2.0*tmp_592;
      real_t tmp_601 = tmp_20*(-tmp_350 + tmp_486 + tmp_546 + 4.0);
      real_t tmp_602 = tmp_28*tmp_601;
      real_t tmp_603 = -tmp_346 - tmp_421;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = -tmp_157*tmp_604;
      real_t tmp_606 = tmp_35*tmp_601;
      real_t tmp_607 = -tmp_355 - tmp_428 + tmp_606;
      real_t tmp_608 = tmp_44*tmp_601;
      real_t tmp_609 = -tmp_358 - tmp_431 + tmp_608;
      real_t tmp_610 = -tmp_351 - tmp_425 + 2.0*tmp_602;
      real_t tmp_611 = tmp_20*(-tmp_365 + tmp_498 + tmp_557 + 4.0);
      real_t tmp_612 = tmp_28*tmp_611;
      real_t tmp_613 = -tmp_361 - tmp_434;
      real_t tmp_614 = tmp_612 + tmp_613;
      real_t tmp_615 = -tmp_167*tmp_614;
      real_t tmp_616 = tmp_35*tmp_611;
      real_t tmp_617 = -tmp_370 - tmp_441 + tmp_616;
      real_t tmp_618 = tmp_44*tmp_611;
      real_t tmp_619 = -tmp_373 - tmp_444 + tmp_618;
      real_t tmp_620 = -tmp_366 - tmp_438 + 2.0*tmp_612;
      real_t tmp_621 = tmp_20*(-tmp_380 + tmp_510 + tmp_568 + 4.0);
      real_t tmp_622 = tmp_28*tmp_621;
      real_t tmp_623 = -tmp_376 - tmp_447;
      real_t tmp_624 = tmp_622 + tmp_623;
      real_t tmp_625 = -tmp_175*tmp_624;
      real_t tmp_626 = tmp_35*tmp_621;
      real_t tmp_627 = -tmp_385 - tmp_454 + tmp_626;
      real_t tmp_628 = tmp_44*tmp_621;
      real_t tmp_629 = -tmp_388 - tmp_457 + tmp_628;
      real_t tmp_630 = -tmp_381 - tmp_451 + 2.0*tmp_622;
      real_t tmp_631 = tmp_20*(-tmp_395 + tmp_522 + tmp_579 + 4.0);
      real_t tmp_632 = tmp_28*tmp_631;
      real_t tmp_633 = -tmp_391 - tmp_460;
      real_t tmp_634 = tmp_632 + tmp_633;
      real_t tmp_635 = -tmp_183*tmp_634;
      real_t tmp_636 = tmp_35*tmp_631;
      real_t tmp_637 = -tmp_400 - tmp_467 + tmp_636;
      real_t tmp_638 = tmp_44*tmp_631;
      real_t tmp_639 = -tmp_403 - tmp_470 + tmp_638;
      real_t tmp_640 = -tmp_396 - tmp_464 + 2.0*tmp_632;
      real_t tmp_641 = tmp_20*(-tmp_410 + tmp_534 + tmp_590 + 4.0);
      real_t tmp_642 = tmp_28*tmp_641;
      real_t tmp_643 = -tmp_406 - tmp_473;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = -tmp_191*tmp_644;
      real_t tmp_646 = tmp_35*tmp_641;
      real_t tmp_647 = -tmp_415 - tmp_480 + tmp_646;
      real_t tmp_648 = tmp_44*tmp_641;
      real_t tmp_649 = -tmp_418 - tmp_483 + tmp_648;
      real_t tmp_650 = -tmp_411 - tmp_477 + 2.0*tmp_642;
      real_t tmp_651 = 1.0*tmp_20;
      real_t tmp_652 = tmp_158*tmp_651;
      real_t tmp_653 = tmp_35*tmp_652;
      real_t tmp_654 = tmp_44*tmp_652;
      real_t tmp_655 = 1.0*tmp_160;
      real_t tmp_656 = tmp_168*tmp_651;
      real_t tmp_657 = tmp_35*tmp_656;
      real_t tmp_658 = tmp_44*tmp_656;
      real_t tmp_659 = 1.0*tmp_169;
      real_t tmp_660 = tmp_176*tmp_651;
      real_t tmp_661 = tmp_35*tmp_660;
      real_t tmp_662 = tmp_44*tmp_660;
      real_t tmp_663 = 1.0*tmp_177;
      real_t tmp_664 = tmp_184*tmp_651;
      real_t tmp_665 = tmp_35*tmp_664;
      real_t tmp_666 = tmp_44*tmp_664;
      real_t tmp_667 = 1.0*tmp_185;
      real_t tmp_668 = tmp_192*tmp_651;
      real_t tmp_669 = tmp_35*tmp_668;
      real_t tmp_670 = tmp_44*tmp_668;
      real_t tmp_671 = 1.0*tmp_193;
      real_t tmp_672 = (tmp_35*tmp_35);
      real_t tmp_673 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_674 = 0;
      real_t tmp_675 = 16.0*tmp_674;
      real_t tmp_676 = (tmp_44*tmp_44);
      real_t tmp_677 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_678 = 0.0069444444444444458*tmp_673;
      real_t tmp_679 = 16.0*tmp_678;
      real_t tmp_680 = 0.0069444444444444458*tmp_673;
      real_t tmp_681 = 16.0*tmp_680;
      real_t tmp_682 = 0.0625*tmp_673;
      real_t tmp_683 = 16.0*tmp_682;
      real_t tmp_684 = 0.0069444444444444458*tmp_673;
      real_t tmp_685 = 16.0*tmp_684;
      real_t tmp_686 = tmp_158*tmp_199;
      real_t tmp_687 = 1.0*tmp_673;
      real_t tmp_688 = tmp_35*tmp_687;
      real_t tmp_689 = tmp_33*tmp_688;
      real_t tmp_690 = tmp_44*tmp_687;
      real_t tmp_691 = tmp_42*tmp_690;
      real_t tmp_692 = 1.3333333333333335*tmp_28*tmp_673;
      real_t tmp_693 = tmp_26*tmp_692;
      real_t tmp_694 = tmp_168*tmp_206;
      real_t tmp_695 = tmp_176*tmp_212;
      real_t tmp_696 = tmp_184*tmp_218;
      real_t tmp_697 = tmp_192*tmp_224;
      real_t tmp_698 = tmp_110*(tmp_689*tmp_695 + tmp_691*tmp_695 + tmp_693*tmp_695) + tmp_133*(tmp_689*tmp_696 + tmp_691*tmp_696 + tmp_693*tmp_696) + tmp_156*(tmp_689*tmp_697 + tmp_691*tmp_697 + tmp_693*tmp_697) + tmp_64*(tmp_686*tmp_689 + tmp_686*tmp_691 + tmp_686*tmp_693) + tmp_87*(tmp_689*tmp_694 + tmp_691*tmp_694 + tmp_693*tmp_694);
      real_t tmp_699 = tmp_158*tmp_230;
      real_t tmp_700 = tmp_31*tmp_688;
      real_t tmp_701 = tmp_40*tmp_690;
      real_t tmp_702 = tmp_692*tmp_8;
      real_t tmp_703 = tmp_168*tmp_237;
      real_t tmp_704 = tmp_176*tmp_243;
      real_t tmp_705 = tmp_184*tmp_249;
      real_t tmp_706 = tmp_192*tmp_255;
      real_t tmp_707 = tmp_110*(tmp_700*tmp_704 + tmp_701*tmp_704 + tmp_702*tmp_704) + tmp_133*(tmp_700*tmp_705 + tmp_701*tmp_705 + tmp_702*tmp_705) + tmp_156*(tmp_700*tmp_706 + tmp_701*tmp_706 + tmp_702*tmp_706) + tmp_64*(tmp_699*tmp_700 + tmp_699*tmp_701 + tmp_699*tmp_702) + tmp_87*(tmp_700*tmp_703 + tmp_701*tmp_703 + tmp_702*tmp_703);
      real_t tmp_708 = (2.0/3.0)*tmp_263;
      real_t tmp_709 = (2.0/3.0)*tmp_280;
      real_t tmp_710 = (2.0/3.0)*tmp_297;
      real_t tmp_711 = (2.0/3.0)*tmp_314;
      real_t tmp_712 = (2.0/3.0)*tmp_331;
      real_t tmp_713 = (2.0/3.0)*tmp_348;
      real_t tmp_714 = (2.0/3.0)*tmp_363;
      real_t tmp_715 = (2.0/3.0)*tmp_378;
      real_t tmp_716 = (2.0/3.0)*tmp_393;
      real_t tmp_717 = (2.0/3.0)*tmp_408;
      real_t tmp_718 = (2.0/3.0)*tmp_423;
      real_t tmp_719 = (2.0/3.0)*tmp_436;
      real_t tmp_720 = (2.0/3.0)*tmp_449;
      real_t tmp_721 = (2.0/3.0)*tmp_462;
      real_t tmp_722 = (2.0/3.0)*tmp_475;
      real_t tmp_723 = (2.0/3.0)*tmp_491;
      real_t tmp_724 = -tmp_160*tmp_723;
      real_t tmp_725 = (2.0/3.0)*tmp_503;
      real_t tmp_726 = -tmp_169*tmp_725;
      real_t tmp_727 = (2.0/3.0)*tmp_515;
      real_t tmp_728 = -tmp_177*tmp_727;
      real_t tmp_729 = (2.0/3.0)*tmp_527;
      real_t tmp_730 = -tmp_185*tmp_729;
      real_t tmp_731 = (2.0/3.0)*tmp_539;
      real_t tmp_732 = -tmp_193*tmp_731;
      real_t tmp_733 = (2.0/3.0)*tmp_550;
      real_t tmp_734 = -tmp_160*tmp_733;
      real_t tmp_735 = (2.0/3.0)*tmp_561;
      real_t tmp_736 = -tmp_169*tmp_735;
      real_t tmp_737 = (2.0/3.0)*tmp_572;
      real_t tmp_738 = -tmp_177*tmp_737;
      real_t tmp_739 = (2.0/3.0)*tmp_583;
      real_t tmp_740 = -tmp_185*tmp_739;
      real_t tmp_741 = (2.0/3.0)*tmp_594;
      real_t tmp_742 = -tmp_193*tmp_741;
      real_t tmp_743 = (2.0/3.0)*tmp_604;
      real_t tmp_744 = -tmp_160*tmp_743;
      real_t tmp_745 = (2.0/3.0)*tmp_614;
      real_t tmp_746 = -tmp_169*tmp_745;
      real_t tmp_747 = (2.0/3.0)*tmp_624;
      real_t tmp_748 = -tmp_177*tmp_747;
      real_t tmp_749 = (2.0/3.0)*tmp_634;
      real_t tmp_750 = -tmp_185*tmp_749;
      real_t tmp_751 = (2.0/3.0)*tmp_644;
      real_t tmp_752 = -tmp_193*tmp_751;
      real_t tmp_753 = tmp_199*tmp_651;
      real_t tmp_754 = tmp_33*tmp_753;
      real_t tmp_755 = tmp_42*tmp_753;
      real_t tmp_756 = 1.0*tmp_201;
      real_t tmp_757 = tmp_206*tmp_651;
      real_t tmp_758 = tmp_33*tmp_757;
      real_t tmp_759 = tmp_42*tmp_757;
      real_t tmp_760 = 1.0*tmp_207;
      real_t tmp_761 = tmp_212*tmp_651;
      real_t tmp_762 = tmp_33*tmp_761;
      real_t tmp_763 = tmp_42*tmp_761;
      real_t tmp_764 = 1.0*tmp_213;
      real_t tmp_765 = tmp_218*tmp_651;
      real_t tmp_766 = tmp_33*tmp_765;
      real_t tmp_767 = tmp_42*tmp_765;
      real_t tmp_768 = 1.0*tmp_219;
      real_t tmp_769 = tmp_224*tmp_651;
      real_t tmp_770 = tmp_33*tmp_769;
      real_t tmp_771 = tmp_42*tmp_769;
      real_t tmp_772 = 1.0*tmp_225;
      real_t tmp_773 = (tmp_33*tmp_33);
      real_t tmp_774 = 0;
      real_t tmp_775 = 16.0*tmp_774;
      real_t tmp_776 = (tmp_42*tmp_42);
      real_t tmp_777 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_778 = 0.0069444444444444458*tmp_673;
      real_t tmp_779 = 16.0*tmp_778;
      real_t tmp_780 = 0.0625*tmp_673;
      real_t tmp_781 = 16.0*tmp_780;
      real_t tmp_782 = 0.0069444444444444458*tmp_673;
      real_t tmp_783 = 16.0*tmp_782;
      real_t tmp_784 = 0.0069444444444444458*tmp_673;
      real_t tmp_785 = 16.0*tmp_784;
      real_t tmp_786 = tmp_199*tmp_230;
      real_t tmp_787 = tmp_687*tmp_786;
      real_t tmp_788 = tmp_31*tmp_33;
      real_t tmp_789 = tmp_40*tmp_42;
      real_t tmp_790 = 1.3333333333333335*tmp_26*tmp_673*tmp_8;
      real_t tmp_791 = tmp_206*tmp_237;
      real_t tmp_792 = tmp_687*tmp_788;
      real_t tmp_793 = tmp_687*tmp_789;
      real_t tmp_794 = tmp_212*tmp_243;
      real_t tmp_795 = tmp_218*tmp_249;
      real_t tmp_796 = tmp_224*tmp_255;
      real_t tmp_797 = tmp_110*(tmp_790*tmp_794 + tmp_792*tmp_794 + tmp_793*tmp_794) + tmp_133*(tmp_790*tmp_795 + tmp_792*tmp_795 + tmp_793*tmp_795) + tmp_156*(tmp_790*tmp_796 + tmp_792*tmp_796 + tmp_793*tmp_796) + tmp_64*(tmp_786*tmp_790 + tmp_787*tmp_788 + tmp_787*tmp_789) + tmp_87*(tmp_790*tmp_791 + tmp_791*tmp_792 + tmp_791*tmp_793);
      real_t tmp_798 = -tmp_201*tmp_723;
      real_t tmp_799 = -tmp_207*tmp_725;
      real_t tmp_800 = -tmp_213*tmp_727;
      real_t tmp_801 = -tmp_219*tmp_729;
      real_t tmp_802 = -tmp_225*tmp_731;
      real_t tmp_803 = -tmp_201*tmp_733;
      real_t tmp_804 = -tmp_207*tmp_735;
      real_t tmp_805 = -tmp_213*tmp_737;
      real_t tmp_806 = -tmp_219*tmp_739;
      real_t tmp_807 = -tmp_225*tmp_741;
      real_t tmp_808 = -tmp_201*tmp_743;
      real_t tmp_809 = -tmp_207*tmp_745;
      real_t tmp_810 = -tmp_213*tmp_747;
      real_t tmp_811 = -tmp_219*tmp_749;
      real_t tmp_812 = -tmp_225*tmp_751;
      real_t tmp_813 = tmp_230*tmp_651;
      real_t tmp_814 = tmp_31*tmp_813;
      real_t tmp_815 = tmp_40*tmp_813;
      real_t tmp_816 = 1.0*tmp_232;
      real_t tmp_817 = tmp_237*tmp_651;
      real_t tmp_818 = tmp_31*tmp_817;
      real_t tmp_819 = tmp_40*tmp_817;
      real_t tmp_820 = 1.0*tmp_238;
      real_t tmp_821 = tmp_243*tmp_651;
      real_t tmp_822 = tmp_31*tmp_821;
      real_t tmp_823 = tmp_40*tmp_821;
      real_t tmp_824 = 1.0*tmp_244;
      real_t tmp_825 = tmp_249*tmp_651;
      real_t tmp_826 = tmp_31*tmp_825;
      real_t tmp_827 = tmp_40*tmp_825;
      real_t tmp_828 = 1.0*tmp_250;
      real_t tmp_829 = tmp_255*tmp_651;
      real_t tmp_830 = tmp_31*tmp_829;
      real_t tmp_831 = tmp_40*tmp_829;
      real_t tmp_832 = 1.0*tmp_256;
      real_t tmp_833 = (tmp_31*tmp_31);
      real_t tmp_834 = 0;
      real_t tmp_835 = 16.0*tmp_834;
      real_t tmp_836 = (tmp_40*tmp_40);
      real_t tmp_837 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_838 = 0.0625*tmp_673;
      real_t tmp_839 = 16.0*tmp_838;
      real_t tmp_840 = 0.0069444444444444458*tmp_673;
      real_t tmp_841 = 16.0*tmp_840;
      real_t tmp_842 = 0.0069444444444444458*tmp_673;
      real_t tmp_843 = 16.0*tmp_842;
      real_t tmp_844 = 0.0069444444444444458*tmp_673;
      real_t tmp_845 = 16.0*tmp_844;
      real_t tmp_846 = -tmp_232*tmp_723;
      real_t tmp_847 = -tmp_238*tmp_725;
      real_t tmp_848 = -tmp_244*tmp_727;
      real_t tmp_849 = -tmp_250*tmp_729;
      real_t tmp_850 = -tmp_256*tmp_731;
      real_t tmp_851 = -tmp_232*tmp_733;
      real_t tmp_852 = -tmp_238*tmp_735;
      real_t tmp_853 = -tmp_244*tmp_737;
      real_t tmp_854 = -tmp_250*tmp_739;
      real_t tmp_855 = -tmp_256*tmp_741;
      real_t tmp_856 = -tmp_232*tmp_743;
      real_t tmp_857 = -tmp_238*tmp_745;
      real_t tmp_858 = -tmp_244*tmp_747;
      real_t tmp_859 = -tmp_250*tmp_749;
      real_t tmp_860 = -tmp_256*tmp_751;
      real_t tmp_861 = 0.25*tmp_162;
      real_t tmp_862 = tmp_31*tmp_861;
      real_t tmp_863 = 0.25*tmp_162;
      real_t tmp_864 = tmp_33*tmp_863;
      real_t tmp_865 = tmp_862 + tmp_864;
      real_t tmp_866 = 2*tmp_865;
      real_t tmp_867 = tmp_40*tmp_861;
      real_t tmp_868 = tmp_42*tmp_863;
      real_t tmp_869 = tmp_867 + tmp_868;
      real_t tmp_870 = 2*tmp_869;
      real_t tmp_871 = 0.16666666666666666*tmp_162;
      real_t tmp_872 = tmp_31*tmp_871;
      real_t tmp_873 = 0.5*tmp_162;
      real_t tmp_874 = tmp_33*tmp_873;
      real_t tmp_875 = tmp_872 + tmp_874;
      real_t tmp_876 = 2*tmp_875;
      real_t tmp_877 = tmp_40*tmp_871;
      real_t tmp_878 = tmp_42*tmp_873;
      real_t tmp_879 = tmp_877 + tmp_878;
      real_t tmp_880 = 2*tmp_879;
      real_t tmp_881 = 0.5*tmp_162;
      real_t tmp_882 = tmp_31*tmp_881;
      real_t tmp_883 = 0.16666666666666666*tmp_162;
      real_t tmp_884 = tmp_33*tmp_883;
      real_t tmp_885 = tmp_882 + tmp_884;
      real_t tmp_886 = 2*tmp_885;
      real_t tmp_887 = tmp_40*tmp_881;
      real_t tmp_888 = tmp_42*tmp_883;
      real_t tmp_889 = tmp_887 + tmp_888;
      real_t tmp_890 = 2*tmp_889;
      real_t tmp_891 = 0.16666666666666666*tmp_162;
      real_t tmp_892 = tmp_31*tmp_891;
      real_t tmp_893 = 0.16666666666666666*tmp_162;
      real_t tmp_894 = tmp_33*tmp_893;
      real_t tmp_895 = tmp_892 + tmp_894;
      real_t tmp_896 = 2*tmp_895;
      real_t tmp_897 = tmp_40*tmp_891;
      real_t tmp_898 = tmp_42*tmp_893;
      real_t tmp_899 = tmp_897 + tmp_898;
      real_t tmp_900 = 2*tmp_899;
      real_t tmp_901 = 0.16666666666666666*tmp_162;
      real_t tmp_902 = tmp_31*tmp_901;
      real_t tmp_903 = 0.16666666666666666*tmp_162;
      real_t tmp_904 = tmp_33*tmp_903;
      real_t tmp_905 = tmp_902 + tmp_904;
      real_t tmp_906 = 2*tmp_905;
      real_t tmp_907 = tmp_40*tmp_901;
      real_t tmp_908 = tmp_42*tmp_903;
      real_t tmp_909 = tmp_907 + tmp_908;
      real_t tmp_910 = 2*tmp_909;
      real_t tmp_911 = 1.3333333333333335*tmp_263;
      real_t tmp_912 = 1.3333333333333335*tmp_280;
      real_t tmp_913 = 1.3333333333333335*tmp_297;
      real_t tmp_914 = 1.3333333333333335*tmp_314;
      real_t tmp_915 = 1.3333333333333335*tmp_331;
      real_t tmp_916 = 0.25*tmp_231;
      real_t tmp_917 = 0.25*tmp_200;
      real_t tmp_918 = 0.16666666666666666*tmp_231;
      real_t tmp_919 = 0.5*tmp_200;
      real_t tmp_920 = 0.5*tmp_231;
      real_t tmp_921 = 0.16666666666666666*tmp_200;
      real_t tmp_922 = 0.16666666666666666*tmp_231;
      real_t tmp_923 = 0.16666666666666666*tmp_200;
      real_t tmp_924 = 0.16666666666666666*tmp_231;
      real_t tmp_925 = 0.16666666666666666*tmp_200;
      real_t tmp_926 = -tmp_348*tmp_708;
      real_t tmp_927 = -tmp_363*tmp_709;
      real_t tmp_928 = -tmp_378*tmp_710;
      real_t tmp_929 = -tmp_393*tmp_711;
      real_t tmp_930 = -tmp_408*tmp_712;
      real_t tmp_931 = -tmp_423*tmp_708;
      real_t tmp_932 = -tmp_436*tmp_709;
      real_t tmp_933 = -tmp_449*tmp_710;
      real_t tmp_934 = -tmp_462*tmp_711;
      real_t tmp_935 = -tmp_475*tmp_712;
      real_t tmp_936 = -tmp_491*tmp_708;
      real_t tmp_937 = -tmp_503*tmp_709;
      real_t tmp_938 = -tmp_515*tmp_710;
      real_t tmp_939 = -tmp_527*tmp_711;
      real_t tmp_940 = -tmp_539*tmp_712;
      real_t tmp_941 = -tmp_550*tmp_708;
      real_t tmp_942 = -tmp_561*tmp_709;
      real_t tmp_943 = -tmp_572*tmp_710;
      real_t tmp_944 = -tmp_583*tmp_711;
      real_t tmp_945 = -tmp_594*tmp_712;
      real_t tmp_946 = -tmp_604*tmp_708;
      real_t tmp_947 = -tmp_614*tmp_709;
      real_t tmp_948 = -tmp_624*tmp_710;
      real_t tmp_949 = -tmp_634*tmp_711;
      real_t tmp_950 = -tmp_644*tmp_712;
      real_t tmp_951 = 0.25*tmp_162;
      real_t tmp_952 = tmp_31*tmp_951;
      real_t tmp_953 = tmp_35*tmp_863;
      real_t tmp_954 = tmp_952 + tmp_953;
      real_t tmp_955 = 2*tmp_954;
      real_t tmp_956 = tmp_40*tmp_951;
      real_t tmp_957 = tmp_44*tmp_863;
      real_t tmp_958 = tmp_956 + tmp_957;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 0.16666666666666666*tmp_162;
      real_t tmp_961 = tmp_31*tmp_960;
      real_t tmp_962 = tmp_35*tmp_873;
      real_t tmp_963 = tmp_961 + tmp_962;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = tmp_40*tmp_960;
      real_t tmp_966 = tmp_44*tmp_873;
      real_t tmp_967 = tmp_965 + tmp_966;
      real_t tmp_968 = 2*tmp_967;
      real_t tmp_969 = 0.16666666666666666*tmp_162;
      real_t tmp_970 = tmp_31*tmp_969;
      real_t tmp_971 = tmp_35*tmp_883;
      real_t tmp_972 = tmp_970 + tmp_971;
      real_t tmp_973 = 2*tmp_972;
      real_t tmp_974 = tmp_40*tmp_969;
      real_t tmp_975 = tmp_44*tmp_883;
      real_t tmp_976 = tmp_974 + tmp_975;
      real_t tmp_977 = 2*tmp_976;
      real_t tmp_978 = 0.5*tmp_162;
      real_t tmp_979 = tmp_31*tmp_978;
      real_t tmp_980 = tmp_35*tmp_893;
      real_t tmp_981 = tmp_979 + tmp_980;
      real_t tmp_982 = 2*tmp_981;
      real_t tmp_983 = tmp_40*tmp_978;
      real_t tmp_984 = tmp_44*tmp_893;
      real_t tmp_985 = tmp_983 + tmp_984;
      real_t tmp_986 = 2*tmp_985;
      real_t tmp_987 = 0.16666666666666666*tmp_162;
      real_t tmp_988 = tmp_31*tmp_987;
      real_t tmp_989 = tmp_35*tmp_903;
      real_t tmp_990 = tmp_988 + tmp_989;
      real_t tmp_991 = 2*tmp_990;
      real_t tmp_992 = tmp_40*tmp_987;
      real_t tmp_993 = tmp_44*tmp_903;
      real_t tmp_994 = tmp_992 + tmp_993;
      real_t tmp_995 = 2*tmp_994;
      real_t tmp_996 = 1.3333333333333335*tmp_348;
      real_t tmp_997 = 1.3333333333333335*tmp_363;
      real_t tmp_998 = 1.3333333333333335*tmp_378;
      real_t tmp_999 = 1.3333333333333335*tmp_393;
      real_t tmp_1000 = 1.3333333333333335*tmp_408;
      real_t tmp_1001 = 0.25*tmp_231;
      real_t tmp_1002 = 0.25*tmp_159;
      real_t tmp_1003 = 0.16666666666666666*tmp_231;
      real_t tmp_1004 = 0.5*tmp_159;
      real_t tmp_1005 = 0.16666666666666666*tmp_231;
      real_t tmp_1006 = 0.16666666666666666*tmp_159;
      real_t tmp_1007 = 0.5*tmp_231;
      real_t tmp_1008 = 0.16666666666666666*tmp_159;
      real_t tmp_1009 = 0.16666666666666666*tmp_231;
      real_t tmp_1010 = 0.16666666666666666*tmp_159;
      real_t tmp_1011 = -tmp_423*tmp_713;
      real_t tmp_1012 = -tmp_436*tmp_714;
      real_t tmp_1013 = -tmp_449*tmp_715;
      real_t tmp_1014 = -tmp_462*tmp_716;
      real_t tmp_1015 = -tmp_475*tmp_717;
      real_t tmp_1016 = -tmp_491*tmp_713;
      real_t tmp_1017 = -tmp_503*tmp_714;
      real_t tmp_1018 = -tmp_515*tmp_715;
      real_t tmp_1019 = -tmp_527*tmp_716;
      real_t tmp_1020 = -tmp_539*tmp_717;
      real_t tmp_1021 = -tmp_550*tmp_713;
      real_t tmp_1022 = -tmp_561*tmp_714;
      real_t tmp_1023 = -tmp_572*tmp_715;
      real_t tmp_1024 = -tmp_583*tmp_716;
      real_t tmp_1025 = -tmp_594*tmp_717;
      real_t tmp_1026 = -tmp_604*tmp_713;
      real_t tmp_1027 = -tmp_614*tmp_714;
      real_t tmp_1028 = -tmp_624*tmp_715;
      real_t tmp_1029 = -tmp_634*tmp_716;
      real_t tmp_1030 = -tmp_644*tmp_717;
      real_t tmp_1031 = tmp_33*tmp_951;
      real_t tmp_1032 = tmp_35*tmp_861;
      real_t tmp_1033 = tmp_1031 + tmp_1032;
      real_t tmp_1034 = 2*tmp_1033;
      real_t tmp_1035 = tmp_42*tmp_951;
      real_t tmp_1036 = tmp_44*tmp_861;
      real_t tmp_1037 = tmp_1035 + tmp_1036;
      real_t tmp_1038 = 2*tmp_1037;
      real_t tmp_1039 = tmp_33*tmp_960;
      real_t tmp_1040 = tmp_35*tmp_871;
      real_t tmp_1041 = tmp_1039 + tmp_1040;
      real_t tmp_1042 = 2*tmp_1041;
      real_t tmp_1043 = tmp_42*tmp_960;
      real_t tmp_1044 = tmp_44*tmp_871;
      real_t tmp_1045 = tmp_1043 + tmp_1044;
      real_t tmp_1046 = 2*tmp_1045;
      real_t tmp_1047 = tmp_33*tmp_969;
      real_t tmp_1048 = tmp_35*tmp_881;
      real_t tmp_1049 = tmp_1047 + tmp_1048;
      real_t tmp_1050 = 2*tmp_1049;
      real_t tmp_1051 = tmp_42*tmp_969;
      real_t tmp_1052 = tmp_44*tmp_881;
      real_t tmp_1053 = tmp_1051 + tmp_1052;
      real_t tmp_1054 = 2*tmp_1053;
      real_t tmp_1055 = tmp_33*tmp_978;
      real_t tmp_1056 = tmp_35*tmp_891;
      real_t tmp_1057 = tmp_1055 + tmp_1056;
      real_t tmp_1058 = 2*tmp_1057;
      real_t tmp_1059 = tmp_42*tmp_978;
      real_t tmp_1060 = tmp_44*tmp_891;
      real_t tmp_1061 = tmp_1059 + tmp_1060;
      real_t tmp_1062 = 2*tmp_1061;
      real_t tmp_1063 = tmp_33*tmp_987;
      real_t tmp_1064 = tmp_35*tmp_901;
      real_t tmp_1065 = tmp_1063 + tmp_1064;
      real_t tmp_1066 = 2*tmp_1065;
      real_t tmp_1067 = tmp_42*tmp_987;
      real_t tmp_1068 = tmp_44*tmp_901;
      real_t tmp_1069 = tmp_1067 + tmp_1068;
      real_t tmp_1070 = 2*tmp_1069;
      real_t tmp_1071 = 1.3333333333333335*tmp_423;
      real_t tmp_1072 = 1.3333333333333335*tmp_436;
      real_t tmp_1073 = 1.3333333333333335*tmp_449;
      real_t tmp_1074 = 1.3333333333333335*tmp_462;
      real_t tmp_1075 = 1.3333333333333335*tmp_475;
      real_t tmp_1076 = 0.25*tmp_200;
      real_t tmp_1077 = 0.25*tmp_159;
      real_t tmp_1078 = 0.16666666666666666*tmp_200;
      real_t tmp_1079 = 0.16666666666666666*tmp_159;
      real_t tmp_1080 = 0.16666666666666666*tmp_200;
      real_t tmp_1081 = 0.5*tmp_159;
      real_t tmp_1082 = 0.5*tmp_200;
      real_t tmp_1083 = 0.16666666666666666*tmp_159;
      real_t tmp_1084 = 0.16666666666666666*tmp_200;
      real_t tmp_1085 = 0.16666666666666666*tmp_159;
      real_t tmp_1086 = -tmp_491*tmp_718;
      real_t tmp_1087 = -tmp_503*tmp_719;
      real_t tmp_1088 = -tmp_515*tmp_720;
      real_t tmp_1089 = -tmp_527*tmp_721;
      real_t tmp_1090 = -tmp_539*tmp_722;
      real_t tmp_1091 = -tmp_550*tmp_718;
      real_t tmp_1092 = -tmp_561*tmp_719;
      real_t tmp_1093 = -tmp_572*tmp_720;
      real_t tmp_1094 = -tmp_583*tmp_721;
      real_t tmp_1095 = -tmp_594*tmp_722;
      real_t tmp_1096 = -tmp_604*tmp_718;
      real_t tmp_1097 = -tmp_614*tmp_719;
      real_t tmp_1098 = -tmp_624*tmp_720;
      real_t tmp_1099 = -tmp_634*tmp_721;
      real_t tmp_1100 = -tmp_644*tmp_722;
      real_t tmp_1101 = 0.5*tmp_493 - tmp_864 - tmp_953;
      real_t tmp_1102 = 2*tmp_1101;
      real_t tmp_1103 = 0.5*tmp_495 - tmp_868 - tmp_957;
      real_t tmp_1104 = 2*tmp_1103;
      real_t tmp_1105 = 1.0*tmp_489 + tmp_490;
      real_t tmp_1106 = 0.5*tmp_505 - tmp_874 - tmp_962;
      real_t tmp_1107 = 2*tmp_1106;
      real_t tmp_1108 = 0.5*tmp_507 - tmp_878 - tmp_966;
      real_t tmp_1109 = 2*tmp_1108;
      real_t tmp_1110 = 1.0*tmp_501 + tmp_502;
      real_t tmp_1111 = 0.5*tmp_517 - tmp_884 - tmp_971;
      real_t tmp_1112 = 2*tmp_1111;
      real_t tmp_1113 = 0.5*tmp_519 - tmp_888 - tmp_975;
      real_t tmp_1114 = 2*tmp_1113;
      real_t tmp_1115 = 1.0*tmp_513 + tmp_514;
      real_t tmp_1116 = 0.5*tmp_529 - tmp_894 - tmp_980;
      real_t tmp_1117 = 2*tmp_1116;
      real_t tmp_1118 = 0.5*tmp_531 - tmp_898 - tmp_984;
      real_t tmp_1119 = 2*tmp_1118;
      real_t tmp_1120 = 1.0*tmp_525 + tmp_526;
      real_t tmp_1121 = 0.5*tmp_541 - tmp_904 - tmp_989;
      real_t tmp_1122 = 2*tmp_1121;
      real_t tmp_1123 = 0.5*tmp_543 - tmp_908 - tmp_993;
      real_t tmp_1124 = 2*tmp_1123;
      real_t tmp_1125 = 1.0*tmp_537 + tmp_538;
      real_t tmp_1126 = 2.0*tmp_1105;
      real_t tmp_1127 = 2.0*tmp_1110;
      real_t tmp_1128 = 2.0*tmp_1115;
      real_t tmp_1129 = 2.0*tmp_1120;
      real_t tmp_1130 = 2.0*tmp_1125;
      real_t tmp_1131 = -tmp_550*tmp_723;
      real_t tmp_1132 = -tmp_561*tmp_725;
      real_t tmp_1133 = -tmp_572*tmp_727;
      real_t tmp_1134 = -tmp_583*tmp_729;
      real_t tmp_1135 = -tmp_594*tmp_731;
      real_t tmp_1136 = -tmp_604*tmp_723;
      real_t tmp_1137 = -tmp_614*tmp_725;
      real_t tmp_1138 = -tmp_624*tmp_727;
      real_t tmp_1139 = -tmp_634*tmp_729;
      real_t tmp_1140 = -tmp_644*tmp_731;
      real_t tmp_1141 = -tmp_1032 + 0.5*tmp_552 - tmp_862;
      real_t tmp_1142 = 2*tmp_1141;
      real_t tmp_1143 = -tmp_1036 + 0.5*tmp_554 - tmp_867;
      real_t tmp_1144 = 2*tmp_1143;
      real_t tmp_1145 = 1.0*tmp_548 + tmp_549;
      real_t tmp_1146 = -tmp_1040 + 0.5*tmp_563 - tmp_872;
      real_t tmp_1147 = 2*tmp_1146;
      real_t tmp_1148 = -tmp_1044 + 0.5*tmp_565 - tmp_877;
      real_t tmp_1149 = 2*tmp_1148;
      real_t tmp_1150 = 1.0*tmp_559 + tmp_560;
      real_t tmp_1151 = -tmp_1048 + 0.5*tmp_574 - tmp_882;
      real_t tmp_1152 = 2*tmp_1151;
      real_t tmp_1153 = -tmp_1052 + 0.5*tmp_576 - tmp_887;
      real_t tmp_1154 = 2*tmp_1153;
      real_t tmp_1155 = 1.0*tmp_570 + tmp_571;
      real_t tmp_1156 = -tmp_1056 + 0.5*tmp_585 - tmp_892;
      real_t tmp_1157 = 2*tmp_1156;
      real_t tmp_1158 = -tmp_1060 + 0.5*tmp_587 - tmp_897;
      real_t tmp_1159 = 2*tmp_1158;
      real_t tmp_1160 = 1.0*tmp_581 + tmp_582;
      real_t tmp_1161 = -tmp_1064 + 0.5*tmp_596 - tmp_902;
      real_t tmp_1162 = 2*tmp_1161;
      real_t tmp_1163 = -tmp_1068 + 0.5*tmp_598 - tmp_907;
      real_t tmp_1164 = 2*tmp_1163;
      real_t tmp_1165 = 1.0*tmp_592 + tmp_593;
      real_t tmp_1166 = 2.0*tmp_1145;
      real_t tmp_1167 = 2.0*tmp_1150;
      real_t tmp_1168 = 2.0*tmp_1155;
      real_t tmp_1169 = 2.0*tmp_1160;
      real_t tmp_1170 = 2.0*tmp_1165;
      real_t tmp_1171 = -tmp_604*tmp_733;
      real_t tmp_1172 = -tmp_614*tmp_735;
      real_t tmp_1173 = -tmp_624*tmp_737;
      real_t tmp_1174 = -tmp_634*tmp_739;
      real_t tmp_1175 = -tmp_644*tmp_741;
      real_t tmp_1176 = -tmp_1031 + 0.5*tmp_606 - tmp_952;
      real_t tmp_1177 = 2*tmp_1176;
      real_t tmp_1178 = -tmp_1035 + 0.5*tmp_608 - tmp_956;
      real_t tmp_1179 = 2*tmp_1178;
      real_t tmp_1180 = 1.0*tmp_602 + tmp_603;
      real_t tmp_1181 = -tmp_1039 + 0.5*tmp_616 - tmp_961;
      real_t tmp_1182 = 2*tmp_1181;
      real_t tmp_1183 = -tmp_1043 + 0.5*tmp_618 - tmp_965;
      real_t tmp_1184 = 2*tmp_1183;
      real_t tmp_1185 = 1.0*tmp_612 + tmp_613;
      real_t tmp_1186 = -tmp_1047 + 0.5*tmp_626 - tmp_970;
      real_t tmp_1187 = 2*tmp_1186;
      real_t tmp_1188 = -tmp_1051 + 0.5*tmp_628 - tmp_974;
      real_t tmp_1189 = 2*tmp_1188;
      real_t tmp_1190 = 1.0*tmp_622 + tmp_623;
      real_t tmp_1191 = -tmp_1055 + 0.5*tmp_636 - tmp_979;
      real_t tmp_1192 = 2*tmp_1191;
      real_t tmp_1193 = -tmp_1059 + 0.5*tmp_638 - tmp_983;
      real_t tmp_1194 = 2*tmp_1193;
      real_t tmp_1195 = 1.0*tmp_632 + tmp_633;
      real_t tmp_1196 = -tmp_1063 + 0.5*tmp_646 - tmp_988;
      real_t tmp_1197 = 2*tmp_1196;
      real_t tmp_1198 = -tmp_1067 + 0.5*tmp_648 - tmp_992;
      real_t tmp_1199 = 2*tmp_1198;
      real_t tmp_1200 = 1.0*tmp_642 + tmp_643;
      real_t tmp_1201 = 2.0*tmp_1180;
      real_t tmp_1202 = 2.0*tmp_1185;
      real_t tmp_1203 = 2.0*tmp_1190;
      real_t tmp_1204 = 2.0*tmp_1195;
      real_t tmp_1205 = 2.0*tmp_1200;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_156*(-2.0/3.0*(tmp_141*tmp_141) + tmp_145*tmp_147 + tmp_151*tmp_153 + tmp_154*tmp_155) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_180 + tmp_106*tmp_181 + tmp_177*tmp_182 + tmp_178) + tmp_133*(tmp_123*tmp_188 + tmp_129*tmp_189 + tmp_185*tmp_190 + tmp_186) + tmp_156*(tmp_146*tmp_196 + tmp_152*tmp_197 + tmp_193*tmp_198 + tmp_194) + tmp_64*(tmp_160*tmp_166 + tmp_161 + tmp_164*tmp_38 + tmp_165*tmp_47) + tmp_87*(tmp_169*tmp_174 + tmp_170 + tmp_172*tmp_77 + tmp_173*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_216 + tmp_106*tmp_217 + tmp_182*tmp_213 + tmp_214) + tmp_133*(tmp_123*tmp_222 + tmp_129*tmp_223 + tmp_190*tmp_219 + tmp_220) + tmp_156*(tmp_146*tmp_228 + tmp_152*tmp_229 + tmp_198*tmp_225 + tmp_226) + tmp_64*(tmp_166*tmp_201 + tmp_202 + tmp_204*tmp_38 + tmp_205*tmp_47) + tmp_87*(tmp_174*tmp_207 + tmp_208 + tmp_210*tmp_77 + tmp_211*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_247 + tmp_106*tmp_248 + tmp_182*tmp_244 + tmp_245) + tmp_133*(tmp_123*tmp_253 + tmp_129*tmp_254 + tmp_190*tmp_250 + tmp_251) + tmp_156*(tmp_146*tmp_259 + tmp_152*tmp_260 + tmp_198*tmp_256 + tmp_257) + tmp_64*(tmp_166*tmp_232 + tmp_233 + tmp_235*tmp_38 + tmp_236*tmp_47) + tmp_87*(tmp_174*tmp_238 + tmp_239 + tmp_241*tmp_77 + tmp_242*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_308 + tmp_107*tmp_311 + tmp_108*tmp_303 + tmp_298) + tmp_133*(tmp_124*tmp_325 + tmp_130*tmp_328 + tmp_131*tmp_320 + tmp_315) + tmp_156*(tmp_147*tmp_342 + tmp_153*tmp_345 + tmp_154*tmp_337 + tmp_332) + tmp_64*(tmp_264 + tmp_269*tmp_49 + tmp_274*tmp_39 + tmp_277*tmp_48) + tmp_87*(tmp_281 + tmp_286*tmp_85 + tmp_291*tmp_78 + tmp_294*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_387 + tmp_107*tmp_390 + tmp_108*tmp_383 + tmp_379) + tmp_133*(tmp_124*tmp_402 + tmp_130*tmp_405 + tmp_131*tmp_398 + tmp_394) + tmp_156*(tmp_147*tmp_417 + tmp_153*tmp_420 + tmp_154*tmp_413 + tmp_409) + tmp_64*(tmp_349 + tmp_353*tmp_49 + tmp_357*tmp_39 + tmp_360*tmp_48) + tmp_87*(tmp_364 + tmp_368*tmp_85 + tmp_372*tmp_78 + tmp_375*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_456 + tmp_107*tmp_459 + tmp_108*tmp_453 + tmp_450) + tmp_133*(tmp_124*tmp_469 + tmp_130*tmp_472 + tmp_131*tmp_466 + tmp_463) + tmp_156*(tmp_147*tmp_482 + tmp_153*tmp_485 + tmp_154*tmp_479 + tmp_476) + tmp_64*(tmp_39*tmp_430 + tmp_424 + tmp_427*tmp_49 + tmp_433*tmp_48) + tmp_87*(tmp_437 + tmp_440*tmp_85 + tmp_443*tmp_78 + tmp_446*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_518 + tmp_107*tmp_520 + tmp_108*tmp_521 + tmp_516) + tmp_133*(tmp_124*tmp_530 + tmp_130*tmp_532 + tmp_131*tmp_533 + tmp_528) + tmp_156*(tmp_147*tmp_542 + tmp_153*tmp_544 + tmp_154*tmp_545 + tmp_540) + tmp_64*(tmp_39*tmp_494 + tmp_48*tmp_496 + tmp_49*tmp_497 + tmp_492) + tmp_87*(tmp_504 + tmp_506*tmp_78 + tmp_508*tmp_84 + tmp_509*tmp_85);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_575 + tmp_107*tmp_577 + tmp_108*tmp_578 + tmp_573) + tmp_133*(tmp_124*tmp_586 + tmp_130*tmp_588 + tmp_131*tmp_589 + tmp_584) + tmp_156*(tmp_147*tmp_597 + tmp_153*tmp_599 + tmp_154*tmp_600 + tmp_595) + tmp_64*(tmp_39*tmp_553 + tmp_48*tmp_555 + tmp_49*tmp_556 + tmp_551) + tmp_87*(tmp_562 + tmp_564*tmp_78 + tmp_566*tmp_84 + tmp_567*tmp_85);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_627 + tmp_107*tmp_629 + tmp_108*tmp_630 + tmp_625) + tmp_133*(tmp_124*tmp_637 + tmp_130*tmp_639 + tmp_131*tmp_640 + tmp_635) + tmp_156*(tmp_147*tmp_647 + tmp_153*tmp_649 + tmp_154*tmp_650 + tmp_645) + tmp_64*(tmp_39*tmp_607 + tmp_48*tmp_609 + tmp_49*tmp_610 + tmp_605) + tmp_87*(tmp_615 + tmp_617*tmp_78 + tmp_619*tmp_84 + tmp_620*tmp_85);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_662 + tmp_109*tmp_663 + tmp_178 + tmp_661*tmp_99) + tmp_133*(tmp_122*tmp_665 + tmp_128*tmp_666 + tmp_132*tmp_667 + tmp_186) + tmp_156*(tmp_145*tmp_669 + tmp_151*tmp_670 + tmp_155*tmp_671 + tmp_194) + tmp_64*(tmp_161 + tmp_37*tmp_653 + tmp_46*tmp_654 + tmp_50*tmp_655) + tmp_87*(tmp_170 + tmp_657*tmp_76 + tmp_658*tmp_82 + tmp_659*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_672*tmp_681 + tmp_676*tmp_681 + tmp_677*tmp_680) + tmp_133*(tmp_672*tmp_683 + tmp_676*tmp_683 + tmp_677*tmp_682) + tmp_156*(tmp_672*tmp_685 + tmp_676*tmp_685 + tmp_677*tmp_684) + tmp_64*(tmp_672*tmp_675 + tmp_674*tmp_677 + tmp_675*tmp_676) + tmp_87*(tmp_672*tmp_679 + tmp_676*tmp_679 + tmp_677*tmp_678);
      real_t a_1_2 = tmp_698;
      real_t a_1_3 = tmp_707;
      real_t a_1_4 = tmp_110*(-tmp_177*tmp_710 + tmp_303*tmp_663 + tmp_308*tmp_661 + tmp_311*tmp_662) + tmp_133*(-tmp_185*tmp_711 + tmp_320*tmp_667 + tmp_325*tmp_665 + tmp_328*tmp_666) + tmp_156*(-tmp_193*tmp_712 + tmp_337*tmp_671 + tmp_342*tmp_669 + tmp_345*tmp_670) + tmp_64*(-tmp_160*tmp_708 + tmp_269*tmp_655 + tmp_274*tmp_653 + tmp_277*tmp_654) + tmp_87*(-tmp_169*tmp_709 + tmp_286*tmp_659 + tmp_291*tmp_657 + tmp_294*tmp_658);
      real_t a_1_5 = tmp_110*(-tmp_177*tmp_715 + tmp_383*tmp_663 + tmp_387*tmp_661 + tmp_390*tmp_662) + tmp_133*(-tmp_185*tmp_716 + tmp_398*tmp_667 + tmp_402*tmp_665 + tmp_405*tmp_666) + tmp_156*(-tmp_193*tmp_717 + tmp_413*tmp_671 + tmp_417*tmp_669 + tmp_420*tmp_670) + tmp_64*(-tmp_160*tmp_713 + tmp_353*tmp_655 + tmp_357*tmp_653 + tmp_360*tmp_654) + tmp_87*(-tmp_169*tmp_714 + tmp_368*tmp_659 + tmp_372*tmp_657 + tmp_375*tmp_658);
      real_t a_1_6 = tmp_110*(-tmp_177*tmp_720 + tmp_453*tmp_663 + tmp_456*tmp_661 + tmp_459*tmp_662) + tmp_133*(-tmp_185*tmp_721 + tmp_466*tmp_667 + tmp_469*tmp_665 + tmp_472*tmp_666) + tmp_156*(-tmp_193*tmp_722 + tmp_479*tmp_671 + tmp_482*tmp_669 + tmp_485*tmp_670) + tmp_64*(-tmp_160*tmp_718 + tmp_427*tmp_655 + tmp_430*tmp_653 + tmp_433*tmp_654) + tmp_87*(-tmp_169*tmp_719 + tmp_440*tmp_659 + tmp_443*tmp_657 + tmp_446*tmp_658);
      real_t a_1_7 = tmp_110*(tmp_518*tmp_661 + tmp_520*tmp_662 + tmp_521*tmp_663 + tmp_728) + tmp_133*(tmp_530*tmp_665 + tmp_532*tmp_666 + tmp_533*tmp_667 + tmp_730) + tmp_156*(tmp_542*tmp_669 + tmp_544*tmp_670 + tmp_545*tmp_671 + tmp_732) + tmp_64*(tmp_494*tmp_653 + tmp_496*tmp_654 + tmp_497*tmp_655 + tmp_724) + tmp_87*(tmp_506*tmp_657 + tmp_508*tmp_658 + tmp_509*tmp_659 + tmp_726);
      real_t a_1_8 = tmp_110*(tmp_575*tmp_661 + tmp_577*tmp_662 + tmp_578*tmp_663 + tmp_738) + tmp_133*(tmp_586*tmp_665 + tmp_588*tmp_666 + tmp_589*tmp_667 + tmp_740) + tmp_156*(tmp_597*tmp_669 + tmp_599*tmp_670 + tmp_600*tmp_671 + tmp_742) + tmp_64*(tmp_553*tmp_653 + tmp_555*tmp_654 + tmp_556*tmp_655 + tmp_734) + tmp_87*(tmp_564*tmp_657 + tmp_566*tmp_658 + tmp_567*tmp_659 + tmp_736);
      real_t a_1_9 = tmp_110*(tmp_627*tmp_661 + tmp_629*tmp_662 + tmp_630*tmp_663 + tmp_748) + tmp_133*(tmp_637*tmp_665 + tmp_639*tmp_666 + tmp_640*tmp_667 + tmp_750) + tmp_156*(tmp_647*tmp_669 + tmp_649*tmp_670 + tmp_650*tmp_671 + tmp_752) + tmp_64*(tmp_607*tmp_653 + tmp_609*tmp_654 + tmp_610*tmp_655 + tmp_744) + tmp_87*(tmp_617*tmp_657 + tmp_619*tmp_658 + tmp_620*tmp_659 + tmp_746);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_763 + tmp_109*tmp_764 + tmp_214 + tmp_762*tmp_99) + tmp_133*(tmp_122*tmp_766 + tmp_128*tmp_767 + tmp_132*tmp_768 + tmp_220) + tmp_156*(tmp_145*tmp_770 + tmp_151*tmp_771 + tmp_155*tmp_772 + tmp_226) + tmp_64*(tmp_202 + tmp_37*tmp_754 + tmp_46*tmp_755 + tmp_50*tmp_756) + tmp_87*(tmp_208 + tmp_758*tmp_76 + tmp_759*tmp_82 + tmp_760*tmp_86);
      real_t a_2_1 = tmp_698;
      real_t a_2_2 = tmp_110*(tmp_773*tmp_781 + tmp_776*tmp_781 + tmp_777*tmp_780) + tmp_133*(tmp_773*tmp_783 + tmp_776*tmp_783 + tmp_777*tmp_782) + tmp_156*(tmp_773*tmp_785 + tmp_776*tmp_785 + tmp_777*tmp_784) + tmp_64*(tmp_773*tmp_775 + tmp_774*tmp_777 + tmp_775*tmp_776) + tmp_87*(tmp_773*tmp_779 + tmp_776*tmp_779 + tmp_777*tmp_778);
      real_t a_2_3 = tmp_797;
      real_t a_2_4 = tmp_110*(-tmp_213*tmp_710 + tmp_303*tmp_764 + tmp_308*tmp_762 + tmp_311*tmp_763) + tmp_133*(-tmp_219*tmp_711 + tmp_320*tmp_768 + tmp_325*tmp_766 + tmp_328*tmp_767) + tmp_156*(-tmp_225*tmp_712 + tmp_337*tmp_772 + tmp_342*tmp_770 + tmp_345*tmp_771) + tmp_64*(-tmp_201*tmp_708 + tmp_269*tmp_756 + tmp_274*tmp_754 + tmp_277*tmp_755) + tmp_87*(-tmp_207*tmp_709 + tmp_286*tmp_760 + tmp_291*tmp_758 + tmp_294*tmp_759);
      real_t a_2_5 = tmp_110*(-tmp_213*tmp_715 + tmp_383*tmp_764 + tmp_387*tmp_762 + tmp_390*tmp_763) + tmp_133*(-tmp_219*tmp_716 + tmp_398*tmp_768 + tmp_402*tmp_766 + tmp_405*tmp_767) + tmp_156*(-tmp_225*tmp_717 + tmp_413*tmp_772 + tmp_417*tmp_770 + tmp_420*tmp_771) + tmp_64*(-tmp_201*tmp_713 + tmp_353*tmp_756 + tmp_357*tmp_754 + tmp_360*tmp_755) + tmp_87*(-tmp_207*tmp_714 + tmp_368*tmp_760 + tmp_372*tmp_758 + tmp_375*tmp_759);
      real_t a_2_6 = tmp_110*(-tmp_213*tmp_720 + tmp_453*tmp_764 + tmp_456*tmp_762 + tmp_459*tmp_763) + tmp_133*(-tmp_219*tmp_721 + tmp_466*tmp_768 + tmp_469*tmp_766 + tmp_472*tmp_767) + tmp_156*(-tmp_225*tmp_722 + tmp_479*tmp_772 + tmp_482*tmp_770 + tmp_485*tmp_771) + tmp_64*(-tmp_201*tmp_718 + tmp_427*tmp_756 + tmp_430*tmp_754 + tmp_433*tmp_755) + tmp_87*(-tmp_207*tmp_719 + tmp_440*tmp_760 + tmp_443*tmp_758 + tmp_446*tmp_759);
      real_t a_2_7 = tmp_110*(tmp_518*tmp_762 + tmp_520*tmp_763 + tmp_521*tmp_764 + tmp_800) + tmp_133*(tmp_530*tmp_766 + tmp_532*tmp_767 + tmp_533*tmp_768 + tmp_801) + tmp_156*(tmp_542*tmp_770 + tmp_544*tmp_771 + tmp_545*tmp_772 + tmp_802) + tmp_64*(tmp_494*tmp_754 + tmp_496*tmp_755 + tmp_497*tmp_756 + tmp_798) + tmp_87*(tmp_506*tmp_758 + tmp_508*tmp_759 + tmp_509*tmp_760 + tmp_799);
      real_t a_2_8 = tmp_110*(tmp_575*tmp_762 + tmp_577*tmp_763 + tmp_578*tmp_764 + tmp_805) + tmp_133*(tmp_586*tmp_766 + tmp_588*tmp_767 + tmp_589*tmp_768 + tmp_806) + tmp_156*(tmp_597*tmp_770 + tmp_599*tmp_771 + tmp_600*tmp_772 + tmp_807) + tmp_64*(tmp_553*tmp_754 + tmp_555*tmp_755 + tmp_556*tmp_756 + tmp_803) + tmp_87*(tmp_564*tmp_758 + tmp_566*tmp_759 + tmp_567*tmp_760 + tmp_804);
      real_t a_2_9 = tmp_110*(tmp_627*tmp_762 + tmp_629*tmp_763 + tmp_630*tmp_764 + tmp_810) + tmp_133*(tmp_637*tmp_766 + tmp_639*tmp_767 + tmp_640*tmp_768 + tmp_811) + tmp_156*(tmp_647*tmp_770 + tmp_649*tmp_771 + tmp_650*tmp_772 + tmp_812) + tmp_64*(tmp_607*tmp_754 + tmp_609*tmp_755 + tmp_610*tmp_756 + tmp_808) + tmp_87*(tmp_617*tmp_758 + tmp_619*tmp_759 + tmp_620*tmp_760 + tmp_809);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_823 + tmp_109*tmp_824 + tmp_245 + tmp_822*tmp_99) + tmp_133*(tmp_122*tmp_826 + tmp_128*tmp_827 + tmp_132*tmp_828 + tmp_251) + tmp_156*(tmp_145*tmp_830 + tmp_151*tmp_831 + tmp_155*tmp_832 + tmp_257) + tmp_64*(tmp_233 + tmp_37*tmp_814 + tmp_46*tmp_815 + tmp_50*tmp_816) + tmp_87*(tmp_239 + tmp_76*tmp_818 + tmp_819*tmp_82 + tmp_820*tmp_86);
      real_t a_3_1 = tmp_707;
      real_t a_3_2 = tmp_797;
      real_t a_3_3 = tmp_110*(tmp_833*tmp_841 + tmp_836*tmp_841 + tmp_837*tmp_840) + tmp_133*(tmp_833*tmp_843 + tmp_836*tmp_843 + tmp_837*tmp_842) + tmp_156*(tmp_833*tmp_845 + tmp_836*tmp_845 + tmp_837*tmp_844) + tmp_64*(tmp_833*tmp_835 + tmp_834*tmp_837 + tmp_835*tmp_836) + tmp_87*(tmp_833*tmp_839 + tmp_836*tmp_839 + tmp_837*tmp_838);
      real_t a_3_4 = tmp_110*(-tmp_244*tmp_710 + tmp_303*tmp_824 + tmp_308*tmp_822 + tmp_311*tmp_823) + tmp_133*(-tmp_250*tmp_711 + tmp_320*tmp_828 + tmp_325*tmp_826 + tmp_328*tmp_827) + tmp_156*(-tmp_256*tmp_712 + tmp_337*tmp_832 + tmp_342*tmp_830 + tmp_345*tmp_831) + tmp_64*(-tmp_232*tmp_708 + tmp_269*tmp_816 + tmp_274*tmp_814 + tmp_277*tmp_815) + tmp_87*(-tmp_238*tmp_709 + tmp_286*tmp_820 + tmp_291*tmp_818 + tmp_294*tmp_819);
      real_t a_3_5 = tmp_110*(-tmp_244*tmp_715 + tmp_383*tmp_824 + tmp_387*tmp_822 + tmp_390*tmp_823) + tmp_133*(-tmp_250*tmp_716 + tmp_398*tmp_828 + tmp_402*tmp_826 + tmp_405*tmp_827) + tmp_156*(-tmp_256*tmp_717 + tmp_413*tmp_832 + tmp_417*tmp_830 + tmp_420*tmp_831) + tmp_64*(-tmp_232*tmp_713 + tmp_353*tmp_816 + tmp_357*tmp_814 + tmp_360*tmp_815) + tmp_87*(-tmp_238*tmp_714 + tmp_368*tmp_820 + tmp_372*tmp_818 + tmp_375*tmp_819);
      real_t a_3_6 = tmp_110*(-tmp_244*tmp_720 + tmp_453*tmp_824 + tmp_456*tmp_822 + tmp_459*tmp_823) + tmp_133*(-tmp_250*tmp_721 + tmp_466*tmp_828 + tmp_469*tmp_826 + tmp_472*tmp_827) + tmp_156*(-tmp_256*tmp_722 + tmp_479*tmp_832 + tmp_482*tmp_830 + tmp_485*tmp_831) + tmp_64*(-tmp_232*tmp_718 + tmp_427*tmp_816 + tmp_430*tmp_814 + tmp_433*tmp_815) + tmp_87*(-tmp_238*tmp_719 + tmp_440*tmp_820 + tmp_443*tmp_818 + tmp_446*tmp_819);
      real_t a_3_7 = tmp_110*(tmp_518*tmp_822 + tmp_520*tmp_823 + tmp_521*tmp_824 + tmp_848) + tmp_133*(tmp_530*tmp_826 + tmp_532*tmp_827 + tmp_533*tmp_828 + tmp_849) + tmp_156*(tmp_542*tmp_830 + tmp_544*tmp_831 + tmp_545*tmp_832 + tmp_850) + tmp_64*(tmp_494*tmp_814 + tmp_496*tmp_815 + tmp_497*tmp_816 + tmp_846) + tmp_87*(tmp_506*tmp_818 + tmp_508*tmp_819 + tmp_509*tmp_820 + tmp_847);
      real_t a_3_8 = tmp_110*(tmp_575*tmp_822 + tmp_577*tmp_823 + tmp_578*tmp_824 + tmp_853) + tmp_133*(tmp_586*tmp_826 + tmp_588*tmp_827 + tmp_589*tmp_828 + tmp_854) + tmp_156*(tmp_597*tmp_830 + tmp_599*tmp_831 + tmp_600*tmp_832 + tmp_855) + tmp_64*(tmp_553*tmp_814 + tmp_555*tmp_815 + tmp_556*tmp_816 + tmp_851) + tmp_87*(tmp_564*tmp_818 + tmp_566*tmp_819 + tmp_567*tmp_820 + tmp_852);
      real_t a_3_9 = tmp_110*(tmp_627*tmp_822 + tmp_629*tmp_823 + tmp_630*tmp_824 + tmp_858) + tmp_133*(tmp_637*tmp_826 + tmp_639*tmp_827 + tmp_640*tmp_828 + tmp_859) + tmp_156*(tmp_647*tmp_830 + tmp_649*tmp_831 + tmp_650*tmp_832 + tmp_860) + tmp_64*(tmp_607*tmp_814 + tmp_609*tmp_815 + tmp_610*tmp_816 + tmp_856) + tmp_87*(tmp_617*tmp_818 + tmp_619*tmp_819 + tmp_620*tmp_820 + tmp_857);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_890 + tmp_109*tmp_297 + tmp_298 + tmp_886*tmp_99) + tmp_133*(tmp_122*tmp_896 + tmp_128*tmp_900 + tmp_132*tmp_314 + tmp_315) + tmp_156*(tmp_145*tmp_906 + tmp_151*tmp_910 + tmp_155*tmp_331 + tmp_332) + tmp_64*(tmp_263*tmp_50 + tmp_264 + tmp_37*tmp_866 + tmp_46*tmp_870) + tmp_87*(tmp_280*tmp_86 + tmp_281 + tmp_76*tmp_876 + tmp_82*tmp_880);
      real_t a_4_1 = tmp_110*(tmp_177*tmp_913 + tmp_180*tmp_885 + tmp_181*tmp_889) + tmp_133*(tmp_185*tmp_914 + tmp_188*tmp_895 + tmp_189*tmp_899) + tmp_156*(tmp_193*tmp_915 + tmp_196*tmp_905 + tmp_197*tmp_909) + tmp_64*(tmp_160*tmp_911 + tmp_164*tmp_865 + tmp_165*tmp_869) + tmp_87*(tmp_169*tmp_912 + tmp_172*tmp_875 + tmp_173*tmp_879);
      real_t a_4_2 = tmp_110*(tmp_213*tmp_913 + tmp_216*tmp_885 + tmp_217*tmp_889) + tmp_133*(tmp_219*tmp_914 + tmp_222*tmp_895 + tmp_223*tmp_899) + tmp_156*(tmp_225*tmp_915 + tmp_228*tmp_905 + tmp_229*tmp_909) + tmp_64*(tmp_201*tmp_911 + tmp_204*tmp_865 + tmp_205*tmp_869) + tmp_87*(tmp_207*tmp_912 + tmp_210*tmp_875 + tmp_211*tmp_879);
      real_t a_4_3 = tmp_110*(tmp_244*tmp_913 + tmp_247*tmp_885 + tmp_248*tmp_889) + tmp_133*(tmp_250*tmp_914 + tmp_253*tmp_895 + tmp_254*tmp_899) + tmp_156*(tmp_256*tmp_915 + tmp_259*tmp_905 + tmp_260*tmp_909) + tmp_64*(tmp_232*tmp_911 + tmp_235*tmp_865 + tmp_236*tmp_869) + tmp_87*(tmp_238*tmp_912 + tmp_241*tmp_875 + tmp_242*tmp_879);
      real_t a_4_4 = tmp_110*(tmp_297*tmp_303 + tmp_308*tmp_886 + tmp_311*tmp_890 - 10.666666666666666*((tmp_920 + tmp_921)*(tmp_920 + tmp_921))) + tmp_133*(tmp_314*tmp_320 + tmp_325*tmp_896 + tmp_328*tmp_900 - 10.666666666666666*((tmp_922 + tmp_923)*(tmp_922 + tmp_923))) + tmp_156*(tmp_331*tmp_337 + tmp_342*tmp_906 + tmp_345*tmp_910 - 10.666666666666666*((tmp_924 + tmp_925)*(tmp_924 + tmp_925))) + tmp_64*(tmp_263*tmp_269 + tmp_274*tmp_866 + tmp_277*tmp_870 - 10.666666666666666*((tmp_916 + tmp_917)*(tmp_916 + tmp_917))) + tmp_87*(tmp_280*tmp_286 + tmp_291*tmp_876 + tmp_294*tmp_880 - 10.666666666666666*((tmp_918 + tmp_919)*(tmp_918 + tmp_919)));
      real_t a_4_5 = tmp_110*(tmp_297*tmp_383 + tmp_387*tmp_886 + tmp_390*tmp_890 + tmp_928) + tmp_133*(tmp_314*tmp_398 + tmp_402*tmp_896 + tmp_405*tmp_900 + tmp_929) + tmp_156*(tmp_331*tmp_413 + tmp_417*tmp_906 + tmp_420*tmp_910 + tmp_930) + tmp_64*(tmp_263*tmp_353 + tmp_357*tmp_866 + tmp_360*tmp_870 + tmp_926) + tmp_87*(tmp_280*tmp_368 + tmp_372*tmp_876 + tmp_375*tmp_880 + tmp_927);
      real_t a_4_6 = tmp_110*(tmp_297*tmp_453 + tmp_456*tmp_886 + tmp_459*tmp_890 + tmp_933) + tmp_133*(tmp_314*tmp_466 + tmp_469*tmp_896 + tmp_472*tmp_900 + tmp_934) + tmp_156*(tmp_331*tmp_479 + tmp_482*tmp_906 + tmp_485*tmp_910 + tmp_935) + tmp_64*(tmp_263*tmp_427 + tmp_430*tmp_866 + tmp_433*tmp_870 + tmp_931) + tmp_87*(tmp_280*tmp_440 + tmp_443*tmp_876 + tmp_446*tmp_880 + tmp_932);
      real_t a_4_7 = tmp_110*(tmp_297*tmp_521 + tmp_518*tmp_886 + tmp_520*tmp_890 + tmp_938) + tmp_133*(tmp_314*tmp_533 + tmp_530*tmp_896 + tmp_532*tmp_900 + tmp_939) + tmp_156*(tmp_331*tmp_545 + tmp_542*tmp_906 + tmp_544*tmp_910 + tmp_940) + tmp_64*(tmp_263*tmp_497 + tmp_494*tmp_866 + tmp_496*tmp_870 + tmp_936) + tmp_87*(tmp_280*tmp_509 + tmp_506*tmp_876 + tmp_508*tmp_880 + tmp_937);
      real_t a_4_8 = tmp_110*(tmp_297*tmp_578 + tmp_575*tmp_886 + tmp_577*tmp_890 + tmp_943) + tmp_133*(tmp_314*tmp_589 + tmp_586*tmp_896 + tmp_588*tmp_900 + tmp_944) + tmp_156*(tmp_331*tmp_600 + tmp_597*tmp_906 + tmp_599*tmp_910 + tmp_945) + tmp_64*(tmp_263*tmp_556 + tmp_553*tmp_866 + tmp_555*tmp_870 + tmp_941) + tmp_87*(tmp_280*tmp_567 + tmp_564*tmp_876 + tmp_566*tmp_880 + tmp_942);
      real_t a_4_9 = tmp_110*(tmp_297*tmp_630 + tmp_627*tmp_886 + tmp_629*tmp_890 + tmp_948) + tmp_133*(tmp_314*tmp_640 + tmp_637*tmp_896 + tmp_639*tmp_900 + tmp_949) + tmp_156*(tmp_331*tmp_650 + tmp_647*tmp_906 + tmp_649*tmp_910 + tmp_950) + tmp_64*(tmp_263*tmp_610 + tmp_607*tmp_866 + tmp_609*tmp_870 + tmp_946) + tmp_87*(tmp_280*tmp_620 + tmp_617*tmp_876 + tmp_619*tmp_880 + tmp_947);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_977 + tmp_109*tmp_378 + tmp_379 + tmp_973*tmp_99) + tmp_133*(tmp_122*tmp_982 + tmp_128*tmp_986 + tmp_132*tmp_393 + tmp_394) + tmp_156*(tmp_145*tmp_991 + tmp_151*tmp_995 + tmp_155*tmp_408 + tmp_409) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_955 + tmp_46*tmp_959) + tmp_87*(tmp_363*tmp_86 + tmp_364 + tmp_76*tmp_964 + tmp_82*tmp_968);
      real_t a_5_1 = tmp_110*(tmp_177*tmp_998 + tmp_180*tmp_972 + tmp_181*tmp_976) + tmp_133*(tmp_185*tmp_999 + tmp_188*tmp_981 + tmp_189*tmp_985) + tmp_156*(tmp_1000*tmp_193 + tmp_196*tmp_990 + tmp_197*tmp_994) + tmp_64*(tmp_160*tmp_996 + tmp_164*tmp_954 + tmp_165*tmp_958) + tmp_87*(tmp_169*tmp_997 + tmp_172*tmp_963 + tmp_173*tmp_967);
      real_t a_5_2 = tmp_110*(tmp_213*tmp_998 + tmp_216*tmp_972 + tmp_217*tmp_976) + tmp_133*(tmp_219*tmp_999 + tmp_222*tmp_981 + tmp_223*tmp_985) + tmp_156*(tmp_1000*tmp_225 + tmp_228*tmp_990 + tmp_229*tmp_994) + tmp_64*(tmp_201*tmp_996 + tmp_204*tmp_954 + tmp_205*tmp_958) + tmp_87*(tmp_207*tmp_997 + tmp_210*tmp_963 + tmp_211*tmp_967);
      real_t a_5_3 = tmp_110*(tmp_244*tmp_998 + tmp_247*tmp_972 + tmp_248*tmp_976) + tmp_133*(tmp_250*tmp_999 + tmp_253*tmp_981 + tmp_254*tmp_985) + tmp_156*(tmp_1000*tmp_256 + tmp_259*tmp_990 + tmp_260*tmp_994) + tmp_64*(tmp_232*tmp_996 + tmp_235*tmp_954 + tmp_236*tmp_958) + tmp_87*(tmp_238*tmp_997 + tmp_241*tmp_963 + tmp_242*tmp_967);
      real_t a_5_4 = tmp_110*(tmp_303*tmp_378 + tmp_308*tmp_973 + tmp_311*tmp_977 + tmp_928) + tmp_133*(tmp_320*tmp_393 + tmp_325*tmp_982 + tmp_328*tmp_986 + tmp_929) + tmp_156*(tmp_337*tmp_408 + tmp_342*tmp_991 + tmp_345*tmp_995 + tmp_930) + tmp_64*(tmp_269*tmp_348 + tmp_274*tmp_955 + tmp_277*tmp_959 + tmp_926) + tmp_87*(tmp_286*tmp_363 + tmp_291*tmp_964 + tmp_294*tmp_968 + tmp_927);
      real_t a_5_5 = tmp_110*(tmp_378*tmp_383 + tmp_387*tmp_973 + tmp_390*tmp_977 - 10.666666666666666*((tmp_1005 + tmp_1006)*(tmp_1005 + tmp_1006))) + tmp_133*(tmp_393*tmp_398 + tmp_402*tmp_982 + tmp_405*tmp_986 - 10.666666666666666*((tmp_1007 + tmp_1008)*(tmp_1007 + tmp_1008))) + tmp_156*(tmp_408*tmp_413 + tmp_417*tmp_991 + tmp_420*tmp_995 - 10.666666666666666*((tmp_1009 + tmp_1010)*(tmp_1009 + tmp_1010))) + tmp_64*(tmp_348*tmp_353 + tmp_357*tmp_955 + tmp_360*tmp_959 - 10.666666666666666*((tmp_1001 + tmp_1002)*(tmp_1001 + tmp_1002))) + tmp_87*(tmp_363*tmp_368 + tmp_372*tmp_964 + tmp_375*tmp_968 - 10.666666666666666*((tmp_1003 + tmp_1004)*(tmp_1003 + tmp_1004)));
      real_t a_5_6 = tmp_110*(tmp_1013 + tmp_378*tmp_453 + tmp_456*tmp_973 + tmp_459*tmp_977) + tmp_133*(tmp_1014 + tmp_393*tmp_466 + tmp_469*tmp_982 + tmp_472*tmp_986) + tmp_156*(tmp_1015 + tmp_408*tmp_479 + tmp_482*tmp_991 + tmp_485*tmp_995) + tmp_64*(tmp_1011 + tmp_348*tmp_427 + tmp_430*tmp_955 + tmp_433*tmp_959) + tmp_87*(tmp_1012 + tmp_363*tmp_440 + tmp_443*tmp_964 + tmp_446*tmp_968);
      real_t a_5_7 = tmp_110*(tmp_1018 + tmp_378*tmp_521 + tmp_518*tmp_973 + tmp_520*tmp_977) + tmp_133*(tmp_1019 + tmp_393*tmp_533 + tmp_530*tmp_982 + tmp_532*tmp_986) + tmp_156*(tmp_1020 + tmp_408*tmp_545 + tmp_542*tmp_991 + tmp_544*tmp_995) + tmp_64*(tmp_1016 + tmp_348*tmp_497 + tmp_494*tmp_955 + tmp_496*tmp_959) + tmp_87*(tmp_1017 + tmp_363*tmp_509 + tmp_506*tmp_964 + tmp_508*tmp_968);
      real_t a_5_8 = tmp_110*(tmp_1023 + tmp_378*tmp_578 + tmp_575*tmp_973 + tmp_577*tmp_977) + tmp_133*(tmp_1024 + tmp_393*tmp_589 + tmp_586*tmp_982 + tmp_588*tmp_986) + tmp_156*(tmp_1025 + tmp_408*tmp_600 + tmp_597*tmp_991 + tmp_599*tmp_995) + tmp_64*(tmp_1021 + tmp_348*tmp_556 + tmp_553*tmp_955 + tmp_555*tmp_959) + tmp_87*(tmp_1022 + tmp_363*tmp_567 + tmp_564*tmp_964 + tmp_566*tmp_968);
      real_t a_5_9 = tmp_110*(tmp_1028 + tmp_378*tmp_630 + tmp_627*tmp_973 + tmp_629*tmp_977) + tmp_133*(tmp_1029 + tmp_393*tmp_640 + tmp_637*tmp_982 + tmp_639*tmp_986) + tmp_156*(tmp_1030 + tmp_408*tmp_650 + tmp_647*tmp_991 + tmp_649*tmp_995) + tmp_64*(tmp_1026 + tmp_348*tmp_610 + tmp_607*tmp_955 + tmp_609*tmp_959) + tmp_87*(tmp_1027 + tmp_363*tmp_620 + tmp_617*tmp_964 + tmp_619*tmp_968);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_1054 + tmp_1050*tmp_99 + tmp_109*tmp_449 + tmp_450) + tmp_133*(tmp_1058*tmp_122 + tmp_1062*tmp_128 + tmp_132*tmp_462 + tmp_463) + tmp_156*(tmp_1066*tmp_145 + tmp_1070*tmp_151 + tmp_155*tmp_475 + tmp_476) + tmp_64*(tmp_1034*tmp_37 + tmp_1038*tmp_46 + tmp_423*tmp_50 + tmp_424) + tmp_87*(tmp_1042*tmp_76 + tmp_1046*tmp_82 + tmp_436*tmp_86 + tmp_437);
      real_t a_6_1 = tmp_110*(tmp_1049*tmp_180 + tmp_1053*tmp_181 + tmp_1073*tmp_177) + tmp_133*(tmp_1057*tmp_188 + tmp_1061*tmp_189 + tmp_1074*tmp_185) + tmp_156*(tmp_1065*tmp_196 + tmp_1069*tmp_197 + tmp_1075*tmp_193) + tmp_64*(tmp_1033*tmp_164 + tmp_1037*tmp_165 + tmp_1071*tmp_160) + tmp_87*(tmp_1041*tmp_172 + tmp_1045*tmp_173 + tmp_1072*tmp_169);
      real_t a_6_2 = tmp_110*(tmp_1049*tmp_216 + tmp_1053*tmp_217 + tmp_1073*tmp_213) + tmp_133*(tmp_1057*tmp_222 + tmp_1061*tmp_223 + tmp_1074*tmp_219) + tmp_156*(tmp_1065*tmp_228 + tmp_1069*tmp_229 + tmp_1075*tmp_225) + tmp_64*(tmp_1033*tmp_204 + tmp_1037*tmp_205 + tmp_1071*tmp_201) + tmp_87*(tmp_1041*tmp_210 + tmp_1045*tmp_211 + tmp_1072*tmp_207);
      real_t a_6_3 = tmp_110*(tmp_1049*tmp_247 + tmp_1053*tmp_248 + tmp_1073*tmp_244) + tmp_133*(tmp_1057*tmp_253 + tmp_1061*tmp_254 + tmp_1074*tmp_250) + tmp_156*(tmp_1065*tmp_259 + tmp_1069*tmp_260 + tmp_1075*tmp_256) + tmp_64*(tmp_1033*tmp_235 + tmp_1037*tmp_236 + tmp_1071*tmp_232) + tmp_87*(tmp_1041*tmp_241 + tmp_1045*tmp_242 + tmp_1072*tmp_238);
      real_t a_6_4 = tmp_110*(tmp_1050*tmp_308 + tmp_1054*tmp_311 + tmp_303*tmp_449 + tmp_933) + tmp_133*(tmp_1058*tmp_325 + tmp_1062*tmp_328 + tmp_320*tmp_462 + tmp_934) + tmp_156*(tmp_1066*tmp_342 + tmp_1070*tmp_345 + tmp_337*tmp_475 + tmp_935) + tmp_64*(tmp_1034*tmp_274 + tmp_1038*tmp_277 + tmp_269*tmp_423 + tmp_931) + tmp_87*(tmp_1042*tmp_291 + tmp_1046*tmp_294 + tmp_286*tmp_436 + tmp_932);
      real_t a_6_5 = tmp_110*(tmp_1013 + tmp_1050*tmp_387 + tmp_1054*tmp_390 + tmp_383*tmp_449) + tmp_133*(tmp_1014 + tmp_1058*tmp_402 + tmp_1062*tmp_405 + tmp_398*tmp_462) + tmp_156*(tmp_1015 + tmp_1066*tmp_417 + tmp_1070*tmp_420 + tmp_413*tmp_475) + tmp_64*(tmp_1011 + tmp_1034*tmp_357 + tmp_1038*tmp_360 + tmp_353*tmp_423) + tmp_87*(tmp_1012 + tmp_1042*tmp_372 + tmp_1046*tmp_375 + tmp_368*tmp_436);
      real_t a_6_6 = tmp_110*(tmp_1050*tmp_456 + tmp_1054*tmp_459 + tmp_449*tmp_453 - 10.666666666666666*((tmp_1080 + tmp_1081)*(tmp_1080 + tmp_1081))) + tmp_133*(tmp_1058*tmp_469 + tmp_1062*tmp_472 + tmp_462*tmp_466 - 10.666666666666666*((tmp_1082 + tmp_1083)*(tmp_1082 + tmp_1083))) + tmp_156*(tmp_1066*tmp_482 + tmp_1070*tmp_485 + tmp_475*tmp_479 - 10.666666666666666*((tmp_1084 + tmp_1085)*(tmp_1084 + tmp_1085))) + tmp_64*(tmp_1034*tmp_430 + tmp_1038*tmp_433 + tmp_423*tmp_427 - 10.666666666666666*((tmp_1076 + tmp_1077)*(tmp_1076 + tmp_1077))) + tmp_87*(tmp_1042*tmp_443 + tmp_1046*tmp_446 + tmp_436*tmp_440 - 10.666666666666666*((tmp_1078 + tmp_1079)*(tmp_1078 + tmp_1079)));
      real_t a_6_7 = tmp_110*(tmp_1050*tmp_518 + tmp_1054*tmp_520 + tmp_1088 + tmp_449*tmp_521) + tmp_133*(tmp_1058*tmp_530 + tmp_1062*tmp_532 + tmp_1089 + tmp_462*tmp_533) + tmp_156*(tmp_1066*tmp_542 + tmp_1070*tmp_544 + tmp_1090 + tmp_475*tmp_545) + tmp_64*(tmp_1034*tmp_494 + tmp_1038*tmp_496 + tmp_1086 + tmp_423*tmp_497) + tmp_87*(tmp_1042*tmp_506 + tmp_1046*tmp_508 + tmp_1087 + tmp_436*tmp_509);
      real_t a_6_8 = tmp_110*(tmp_1050*tmp_575 + tmp_1054*tmp_577 + tmp_1093 + tmp_449*tmp_578) + tmp_133*(tmp_1058*tmp_586 + tmp_1062*tmp_588 + tmp_1094 + tmp_462*tmp_589) + tmp_156*(tmp_1066*tmp_597 + tmp_1070*tmp_599 + tmp_1095 + tmp_475*tmp_600) + tmp_64*(tmp_1034*tmp_553 + tmp_1038*tmp_555 + tmp_1091 + tmp_423*tmp_556) + tmp_87*(tmp_1042*tmp_564 + tmp_1046*tmp_566 + tmp_1092 + tmp_436*tmp_567);
      real_t a_6_9 = tmp_110*(tmp_1050*tmp_627 + tmp_1054*tmp_629 + tmp_1098 + tmp_449*tmp_630) + tmp_133*(tmp_1058*tmp_637 + tmp_1062*tmp_639 + tmp_1099 + tmp_462*tmp_640) + tmp_156*(tmp_1066*tmp_647 + tmp_1070*tmp_649 + tmp_1100 + tmp_475*tmp_650) + tmp_64*(tmp_1034*tmp_607 + tmp_1038*tmp_609 + tmp_1096 + tmp_423*tmp_610) + tmp_87*(tmp_1042*tmp_617 + tmp_1046*tmp_619 + tmp_1097 + tmp_436*tmp_620);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_1114 + tmp_109*tmp_1115 + tmp_1112*tmp_99 + tmp_516) + tmp_133*(tmp_1117*tmp_122 + tmp_1119*tmp_128 + tmp_1120*tmp_132 + tmp_528) + tmp_156*(tmp_1122*tmp_145 + tmp_1124*tmp_151 + tmp_1125*tmp_155 + tmp_540) + tmp_64*(tmp_1102*tmp_37 + tmp_1104*tmp_46 + tmp_1105*tmp_50 + tmp_492) + tmp_87*(tmp_1107*tmp_76 + tmp_1109*tmp_82 + tmp_1110*tmp_86 + tmp_504);
      real_t a_7_1 = tmp_110*(tmp_1111*tmp_180 + tmp_1113*tmp_181 + tmp_1128*tmp_177 + tmp_728) + tmp_133*(tmp_1116*tmp_188 + tmp_1118*tmp_189 + tmp_1129*tmp_185 + tmp_730) + tmp_156*(tmp_1121*tmp_196 + tmp_1123*tmp_197 + tmp_1130*tmp_193 + tmp_732) + tmp_64*(tmp_1101*tmp_164 + tmp_1103*tmp_165 + tmp_1126*tmp_160 + tmp_724) + tmp_87*(tmp_1106*tmp_172 + tmp_1108*tmp_173 + tmp_1127*tmp_169 + tmp_726);
      real_t a_7_2 = tmp_110*(tmp_1111*tmp_216 + tmp_1113*tmp_217 + tmp_1128*tmp_213 + tmp_800) + tmp_133*(tmp_1116*tmp_222 + tmp_1118*tmp_223 + tmp_1129*tmp_219 + tmp_801) + tmp_156*(tmp_1121*tmp_228 + tmp_1123*tmp_229 + tmp_1130*tmp_225 + tmp_802) + tmp_64*(tmp_1101*tmp_204 + tmp_1103*tmp_205 + tmp_1126*tmp_201 + tmp_798) + tmp_87*(tmp_1106*tmp_210 + tmp_1108*tmp_211 + tmp_1127*tmp_207 + tmp_799);
      real_t a_7_3 = tmp_110*(tmp_1111*tmp_247 + tmp_1113*tmp_248 + tmp_1128*tmp_244 + tmp_848) + tmp_133*(tmp_1116*tmp_253 + tmp_1118*tmp_254 + tmp_1129*tmp_250 + tmp_849) + tmp_156*(tmp_1121*tmp_259 + tmp_1123*tmp_260 + tmp_1130*tmp_256 + tmp_850) + tmp_64*(tmp_1101*tmp_235 + tmp_1103*tmp_236 + tmp_1126*tmp_232 + tmp_846) + tmp_87*(tmp_1106*tmp_241 + tmp_1108*tmp_242 + tmp_1127*tmp_238 + tmp_847);
      real_t a_7_4 = tmp_110*(tmp_1112*tmp_308 + tmp_1114*tmp_311 + tmp_1115*tmp_303 + tmp_938) + tmp_133*(tmp_1117*tmp_325 + tmp_1119*tmp_328 + tmp_1120*tmp_320 + tmp_939) + tmp_156*(tmp_1122*tmp_342 + tmp_1124*tmp_345 + tmp_1125*tmp_337 + tmp_940) + tmp_64*(tmp_1102*tmp_274 + tmp_1104*tmp_277 + tmp_1105*tmp_269 + tmp_936) + tmp_87*(tmp_1107*tmp_291 + tmp_1109*tmp_294 + tmp_1110*tmp_286 + tmp_937);
      real_t a_7_5 = tmp_110*(tmp_1018 + tmp_1112*tmp_387 + tmp_1114*tmp_390 + tmp_1115*tmp_383) + tmp_133*(tmp_1019 + tmp_1117*tmp_402 + tmp_1119*tmp_405 + tmp_1120*tmp_398) + tmp_156*(tmp_1020 + tmp_1122*tmp_417 + tmp_1124*tmp_420 + tmp_1125*tmp_413) + tmp_64*(tmp_1016 + tmp_1102*tmp_357 + tmp_1104*tmp_360 + tmp_1105*tmp_353) + tmp_87*(tmp_1017 + tmp_1107*tmp_372 + tmp_1109*tmp_375 + tmp_1110*tmp_368);
      real_t a_7_6 = tmp_110*(tmp_1088 + tmp_1112*tmp_456 + tmp_1114*tmp_459 + tmp_1115*tmp_453) + tmp_133*(tmp_1089 + tmp_1117*tmp_469 + tmp_1119*tmp_472 + tmp_1120*tmp_466) + tmp_156*(tmp_1090 + tmp_1122*tmp_482 + tmp_1124*tmp_485 + tmp_1125*tmp_479) + tmp_64*(tmp_1086 + tmp_1102*tmp_430 + tmp_1104*tmp_433 + tmp_1105*tmp_427) + tmp_87*(tmp_1087 + tmp_1107*tmp_443 + tmp_1109*tmp_446 + tmp_1110*tmp_440);
      real_t a_7_7 = tmp_110*(tmp_1112*tmp_518 + tmp_1114*tmp_520 + tmp_1115*tmp_521 - 10.666666666666666*((-tmp_1006 + 0.25*tmp_513 - tmp_921)*(-tmp_1006 + 0.25*tmp_513 - tmp_921))) + tmp_133*(tmp_1117*tmp_530 + tmp_1119*tmp_532 + tmp_1120*tmp_533 - 10.666666666666666*((-tmp_1008 + 0.25*tmp_525 - tmp_923)*(-tmp_1008 + 0.25*tmp_525 - tmp_923))) + tmp_156*(tmp_1122*tmp_542 + tmp_1124*tmp_544 + tmp_1125*tmp_545 - 10.666666666666666*((-tmp_1010 + 0.25*tmp_537 - tmp_925)*(-tmp_1010 + 0.25*tmp_537 - tmp_925))) + tmp_64*(tmp_1102*tmp_494 + tmp_1104*tmp_496 + tmp_1105*tmp_497 - 10.666666666666666*((-tmp_1002 + 0.25*tmp_489 - tmp_917)*(-tmp_1002 + 0.25*tmp_489 - tmp_917))) + tmp_87*(tmp_1107*tmp_506 + tmp_1109*tmp_508 + tmp_1110*tmp_509 - 10.666666666666666*((-tmp_1004 + 0.25*tmp_501 - tmp_919)*(-tmp_1004 + 0.25*tmp_501 - tmp_919)));
      real_t a_7_8 = tmp_110*(tmp_1112*tmp_575 + tmp_1114*tmp_577 + tmp_1115*tmp_578 + tmp_1133) + tmp_133*(tmp_1117*tmp_586 + tmp_1119*tmp_588 + tmp_1120*tmp_589 + tmp_1134) + tmp_156*(tmp_1122*tmp_597 + tmp_1124*tmp_599 + tmp_1125*tmp_600 + tmp_1135) + tmp_64*(tmp_1102*tmp_553 + tmp_1104*tmp_555 + tmp_1105*tmp_556 + tmp_1131) + tmp_87*(tmp_1107*tmp_564 + tmp_1109*tmp_566 + tmp_1110*tmp_567 + tmp_1132);
      real_t a_7_9 = tmp_110*(tmp_1112*tmp_627 + tmp_1114*tmp_629 + tmp_1115*tmp_630 + tmp_1138) + tmp_133*(tmp_1117*tmp_637 + tmp_1119*tmp_639 + tmp_1120*tmp_640 + tmp_1139) + tmp_156*(tmp_1122*tmp_647 + tmp_1124*tmp_649 + tmp_1125*tmp_650 + tmp_1140) + tmp_64*(tmp_1102*tmp_607 + tmp_1104*tmp_609 + tmp_1105*tmp_610 + tmp_1136) + tmp_87*(tmp_1107*tmp_617 + tmp_1109*tmp_619 + tmp_1110*tmp_620 + tmp_1137);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_1154 + tmp_109*tmp_1155 + tmp_1152*tmp_99 + tmp_573) + tmp_133*(tmp_1157*tmp_122 + tmp_1159*tmp_128 + tmp_1160*tmp_132 + tmp_584) + tmp_156*(tmp_1162*tmp_145 + tmp_1164*tmp_151 + tmp_1165*tmp_155 + tmp_595) + tmp_64*(tmp_1142*tmp_37 + tmp_1144*tmp_46 + tmp_1145*tmp_50 + tmp_551) + tmp_87*(tmp_1147*tmp_76 + tmp_1149*tmp_82 + tmp_1150*tmp_86 + tmp_562);
      real_t a_8_1 = tmp_110*(tmp_1151*tmp_180 + tmp_1153*tmp_181 + tmp_1168*tmp_177 + tmp_738) + tmp_133*(tmp_1156*tmp_188 + tmp_1158*tmp_189 + tmp_1169*tmp_185 + tmp_740) + tmp_156*(tmp_1161*tmp_196 + tmp_1163*tmp_197 + tmp_1170*tmp_193 + tmp_742) + tmp_64*(tmp_1141*tmp_164 + tmp_1143*tmp_165 + tmp_1166*tmp_160 + tmp_734) + tmp_87*(tmp_1146*tmp_172 + tmp_1148*tmp_173 + tmp_1167*tmp_169 + tmp_736);
      real_t a_8_2 = tmp_110*(tmp_1151*tmp_216 + tmp_1153*tmp_217 + tmp_1168*tmp_213 + tmp_805) + tmp_133*(tmp_1156*tmp_222 + tmp_1158*tmp_223 + tmp_1169*tmp_219 + tmp_806) + tmp_156*(tmp_1161*tmp_228 + tmp_1163*tmp_229 + tmp_1170*tmp_225 + tmp_807) + tmp_64*(tmp_1141*tmp_204 + tmp_1143*tmp_205 + tmp_1166*tmp_201 + tmp_803) + tmp_87*(tmp_1146*tmp_210 + tmp_1148*tmp_211 + tmp_1167*tmp_207 + tmp_804);
      real_t a_8_3 = tmp_110*(tmp_1151*tmp_247 + tmp_1153*tmp_248 + tmp_1168*tmp_244 + tmp_853) + tmp_133*(tmp_1156*tmp_253 + tmp_1158*tmp_254 + tmp_1169*tmp_250 + tmp_854) + tmp_156*(tmp_1161*tmp_259 + tmp_1163*tmp_260 + tmp_1170*tmp_256 + tmp_855) + tmp_64*(tmp_1141*tmp_235 + tmp_1143*tmp_236 + tmp_1166*tmp_232 + tmp_851) + tmp_87*(tmp_1146*tmp_241 + tmp_1148*tmp_242 + tmp_1167*tmp_238 + tmp_852);
      real_t a_8_4 = tmp_110*(tmp_1152*tmp_308 + tmp_1154*tmp_311 + tmp_1155*tmp_303 + tmp_943) + tmp_133*(tmp_1157*tmp_325 + tmp_1159*tmp_328 + tmp_1160*tmp_320 + tmp_944) + tmp_156*(tmp_1162*tmp_342 + tmp_1164*tmp_345 + tmp_1165*tmp_337 + tmp_945) + tmp_64*(tmp_1142*tmp_274 + tmp_1144*tmp_277 + tmp_1145*tmp_269 + tmp_941) + tmp_87*(tmp_1147*tmp_291 + tmp_1149*tmp_294 + tmp_1150*tmp_286 + tmp_942);
      real_t a_8_5 = tmp_110*(tmp_1023 + tmp_1152*tmp_387 + tmp_1154*tmp_390 + tmp_1155*tmp_383) + tmp_133*(tmp_1024 + tmp_1157*tmp_402 + tmp_1159*tmp_405 + tmp_1160*tmp_398) + tmp_156*(tmp_1025 + tmp_1162*tmp_417 + tmp_1164*tmp_420 + tmp_1165*tmp_413) + tmp_64*(tmp_1021 + tmp_1142*tmp_357 + tmp_1144*tmp_360 + tmp_1145*tmp_353) + tmp_87*(tmp_1022 + tmp_1147*tmp_372 + tmp_1149*tmp_375 + tmp_1150*tmp_368);
      real_t a_8_6 = tmp_110*(tmp_1093 + tmp_1152*tmp_456 + tmp_1154*tmp_459 + tmp_1155*tmp_453) + tmp_133*(tmp_1094 + tmp_1157*tmp_469 + tmp_1159*tmp_472 + tmp_1160*tmp_466) + tmp_156*(tmp_1095 + tmp_1162*tmp_482 + tmp_1164*tmp_485 + tmp_1165*tmp_479) + tmp_64*(tmp_1091 + tmp_1142*tmp_430 + tmp_1144*tmp_433 + tmp_1145*tmp_427) + tmp_87*(tmp_1092 + tmp_1147*tmp_443 + tmp_1149*tmp_446 + tmp_1150*tmp_440);
      real_t a_8_7 = tmp_110*(tmp_1133 + tmp_1152*tmp_518 + tmp_1154*tmp_520 + tmp_1155*tmp_521) + tmp_133*(tmp_1134 + tmp_1157*tmp_530 + tmp_1159*tmp_532 + tmp_1160*tmp_533) + tmp_156*(tmp_1135 + tmp_1162*tmp_542 + tmp_1164*tmp_544 + tmp_1165*tmp_545) + tmp_64*(tmp_1131 + tmp_1142*tmp_494 + tmp_1144*tmp_496 + tmp_1145*tmp_497) + tmp_87*(tmp_1132 + tmp_1147*tmp_506 + tmp_1149*tmp_508 + tmp_1150*tmp_509);
      real_t a_8_8 = tmp_110*(tmp_1152*tmp_575 + tmp_1154*tmp_577 + tmp_1155*tmp_578 - 10.666666666666666*((-tmp_1081 + 0.25*tmp_570 - tmp_920)*(-tmp_1081 + 0.25*tmp_570 - tmp_920))) + tmp_133*(tmp_1157*tmp_586 + tmp_1159*tmp_588 + tmp_1160*tmp_589 - 10.666666666666666*((-tmp_1083 + 0.25*tmp_581 - tmp_922)*(-tmp_1083 + 0.25*tmp_581 - tmp_922))) + tmp_156*(tmp_1162*tmp_597 + tmp_1164*tmp_599 + tmp_1165*tmp_600 - 10.666666666666666*((-tmp_1085 + 0.25*tmp_592 - tmp_924)*(-tmp_1085 + 0.25*tmp_592 - tmp_924))) + tmp_64*(tmp_1142*tmp_553 + tmp_1144*tmp_555 + tmp_1145*tmp_556 - 10.666666666666666*((-tmp_1077 + 0.25*tmp_548 - tmp_916)*(-tmp_1077 + 0.25*tmp_548 - tmp_916))) + tmp_87*(tmp_1147*tmp_564 + tmp_1149*tmp_566 + tmp_1150*tmp_567 - 10.666666666666666*((-tmp_1079 + 0.25*tmp_559 - tmp_918)*(-tmp_1079 + 0.25*tmp_559 - tmp_918)));
      real_t a_8_9 = tmp_110*(tmp_1152*tmp_627 + tmp_1154*tmp_629 + tmp_1155*tmp_630 + tmp_1173) + tmp_133*(tmp_1157*tmp_637 + tmp_1159*tmp_639 + tmp_1160*tmp_640 + tmp_1174) + tmp_156*(tmp_1162*tmp_647 + tmp_1164*tmp_649 + tmp_1165*tmp_650 + tmp_1175) + tmp_64*(tmp_1142*tmp_607 + tmp_1144*tmp_609 + tmp_1145*tmp_610 + tmp_1171) + tmp_87*(tmp_1147*tmp_617 + tmp_1149*tmp_619 + tmp_1150*tmp_620 + tmp_1172);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_1189 + tmp_109*tmp_1190 + tmp_1187*tmp_99 + tmp_625) + tmp_133*(tmp_1192*tmp_122 + tmp_1194*tmp_128 + tmp_1195*tmp_132 + tmp_635) + tmp_156*(tmp_1197*tmp_145 + tmp_1199*tmp_151 + tmp_1200*tmp_155 + tmp_645) + tmp_64*(tmp_1177*tmp_37 + tmp_1179*tmp_46 + tmp_1180*tmp_50 + tmp_605) + tmp_87*(tmp_1182*tmp_76 + tmp_1184*tmp_82 + tmp_1185*tmp_86 + tmp_615);
      real_t a_9_1 = tmp_110*(tmp_1186*tmp_180 + tmp_1188*tmp_181 + tmp_1203*tmp_177 + tmp_748) + tmp_133*(tmp_1191*tmp_188 + tmp_1193*tmp_189 + tmp_1204*tmp_185 + tmp_750) + tmp_156*(tmp_1196*tmp_196 + tmp_1198*tmp_197 + tmp_1205*tmp_193 + tmp_752) + tmp_64*(tmp_1176*tmp_164 + tmp_1178*tmp_165 + tmp_1201*tmp_160 + tmp_744) + tmp_87*(tmp_1181*tmp_172 + tmp_1183*tmp_173 + tmp_1202*tmp_169 + tmp_746);
      real_t a_9_2 = tmp_110*(tmp_1186*tmp_216 + tmp_1188*tmp_217 + tmp_1203*tmp_213 + tmp_810) + tmp_133*(tmp_1191*tmp_222 + tmp_1193*tmp_223 + tmp_1204*tmp_219 + tmp_811) + tmp_156*(tmp_1196*tmp_228 + tmp_1198*tmp_229 + tmp_1205*tmp_225 + tmp_812) + tmp_64*(tmp_1176*tmp_204 + tmp_1178*tmp_205 + tmp_1201*tmp_201 + tmp_808) + tmp_87*(tmp_1181*tmp_210 + tmp_1183*tmp_211 + tmp_1202*tmp_207 + tmp_809);
      real_t a_9_3 = tmp_110*(tmp_1186*tmp_247 + tmp_1188*tmp_248 + tmp_1203*tmp_244 + tmp_858) + tmp_133*(tmp_1191*tmp_253 + tmp_1193*tmp_254 + tmp_1204*tmp_250 + tmp_859) + tmp_156*(tmp_1196*tmp_259 + tmp_1198*tmp_260 + tmp_1205*tmp_256 + tmp_860) + tmp_64*(tmp_1176*tmp_235 + tmp_1178*tmp_236 + tmp_1201*tmp_232 + tmp_856) + tmp_87*(tmp_1181*tmp_241 + tmp_1183*tmp_242 + tmp_1202*tmp_238 + tmp_857);
      real_t a_9_4 = tmp_110*(tmp_1187*tmp_308 + tmp_1189*tmp_311 + tmp_1190*tmp_303 + tmp_948) + tmp_133*(tmp_1192*tmp_325 + tmp_1194*tmp_328 + tmp_1195*tmp_320 + tmp_949) + tmp_156*(tmp_1197*tmp_342 + tmp_1199*tmp_345 + tmp_1200*tmp_337 + tmp_950) + tmp_64*(tmp_1177*tmp_274 + tmp_1179*tmp_277 + tmp_1180*tmp_269 + tmp_946) + tmp_87*(tmp_1182*tmp_291 + tmp_1184*tmp_294 + tmp_1185*tmp_286 + tmp_947);
      real_t a_9_5 = tmp_110*(tmp_1028 + tmp_1187*tmp_387 + tmp_1189*tmp_390 + tmp_1190*tmp_383) + tmp_133*(tmp_1029 + tmp_1192*tmp_402 + tmp_1194*tmp_405 + tmp_1195*tmp_398) + tmp_156*(tmp_1030 + tmp_1197*tmp_417 + tmp_1199*tmp_420 + tmp_1200*tmp_413) + tmp_64*(tmp_1026 + tmp_1177*tmp_357 + tmp_1179*tmp_360 + tmp_1180*tmp_353) + tmp_87*(tmp_1027 + tmp_1182*tmp_372 + tmp_1184*tmp_375 + tmp_1185*tmp_368);
      real_t a_9_6 = tmp_110*(tmp_1098 + tmp_1187*tmp_456 + tmp_1189*tmp_459 + tmp_1190*tmp_453) + tmp_133*(tmp_1099 + tmp_1192*tmp_469 + tmp_1194*tmp_472 + tmp_1195*tmp_466) + tmp_156*(tmp_1100 + tmp_1197*tmp_482 + tmp_1199*tmp_485 + tmp_1200*tmp_479) + tmp_64*(tmp_1096 + tmp_1177*tmp_430 + tmp_1179*tmp_433 + tmp_1180*tmp_427) + tmp_87*(tmp_1097 + tmp_1182*tmp_443 + tmp_1184*tmp_446 + tmp_1185*tmp_440);
      real_t a_9_7 = tmp_110*(tmp_1138 + tmp_1187*tmp_518 + tmp_1189*tmp_520 + tmp_1190*tmp_521) + tmp_133*(tmp_1139 + tmp_1192*tmp_530 + tmp_1194*tmp_532 + tmp_1195*tmp_533) + tmp_156*(tmp_1140 + tmp_1197*tmp_542 + tmp_1199*tmp_544 + tmp_1200*tmp_545) + tmp_64*(tmp_1136 + tmp_1177*tmp_494 + tmp_1179*tmp_496 + tmp_1180*tmp_497) + tmp_87*(tmp_1137 + tmp_1182*tmp_506 + tmp_1184*tmp_508 + tmp_1185*tmp_509);
      real_t a_9_8 = tmp_110*(tmp_1173 + tmp_1187*tmp_575 + tmp_1189*tmp_577 + tmp_1190*tmp_578) + tmp_133*(tmp_1174 + tmp_1192*tmp_586 + tmp_1194*tmp_588 + tmp_1195*tmp_589) + tmp_156*(tmp_1175 + tmp_1197*tmp_597 + tmp_1199*tmp_599 + tmp_1200*tmp_600) + tmp_64*(tmp_1171 + tmp_1177*tmp_553 + tmp_1179*tmp_555 + tmp_1180*tmp_556) + tmp_87*(tmp_1172 + tmp_1182*tmp_564 + tmp_1184*tmp_566 + tmp_1185*tmp_567);
      real_t a_9_9 = tmp_110*(tmp_1187*tmp_627 + tmp_1189*tmp_629 + tmp_1190*tmp_630 - 10.666666666666666*((-tmp_1005 - tmp_1080 + 0.25*tmp_622)*(-tmp_1005 - tmp_1080 + 0.25*tmp_622))) + tmp_133*(tmp_1192*tmp_637 + tmp_1194*tmp_639 + tmp_1195*tmp_640 - 10.666666666666666*((-tmp_1007 - tmp_1082 + 0.25*tmp_632)*(-tmp_1007 - tmp_1082 + 0.25*tmp_632))) + tmp_156*(tmp_1197*tmp_647 + tmp_1199*tmp_649 + tmp_1200*tmp_650 - 10.666666666666666*((-tmp_1009 - tmp_1084 + 0.25*tmp_642)*(-tmp_1009 - tmp_1084 + 0.25*tmp_642))) + tmp_64*(tmp_1177*tmp_607 + tmp_1179*tmp_609 + tmp_1180*tmp_610 - 10.666666666666666*((-tmp_1001 - tmp_1076 + 0.25*tmp_602)*(-tmp_1001 - tmp_1076 + 0.25*tmp_602))) + tmp_87*(tmp_1182*tmp_617 + tmp_1184*tmp_619 + tmp_1185*tmp_620 - 10.666666666666666*((-tmp_1003 - tmp_1078 + 0.25*tmp_612)*(-tmp_1003 - tmp_1078 + 0.25*tmp_612)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_0_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_15 - tmp_18;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_12 - tmp_17;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = -0.1333333333333333*tmp_59;
      real_t tmp_61 = 0.66666666666666663;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.074999999999999983*tmp_59;
      real_t tmp_81 = 0.66666666666666663;
      real_t tmp_82 = 2.0;
      real_t tmp_83 = 0.66666666666666663;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.074999999999999983*tmp_59;
      real_t tmp_101 = 2.0;
      real_t tmp_102 = 0.66666666666666663;
      real_t tmp_103 = 0.66666666666666663;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.074999999999999983*tmp_59;
      real_t tmp_121 = 0.66666666666666663;
      real_t tmp_122 = 0.66666666666666663;
      real_t tmp_123 = 0.66666666666666663;
      real_t tmp_124 = tmp_19*(tmp_121 + tmp_122 + tmp_123 - 3.0);
      real_t tmp_125 = tmp_124*tmp_8;
      real_t tmp_126 = tmp_124*tmp_25;
      real_t tmp_127 = tmp_124*tmp_27;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = tmp_124*tmp_30;
      real_t tmp_130 = tmp_124*tmp_32;
      real_t tmp_131 = tmp_124*tmp_34;
      real_t tmp_132 = 0.5*tmp_129 + 0.5*tmp_130 + 0.5*tmp_131;
      real_t tmp_133 = 2*tmp_132;
      real_t tmp_134 = tmp_124*tmp_38;
      real_t tmp_135 = tmp_124*tmp_40;
      real_t tmp_136 = tmp_124*tmp_42;
      real_t tmp_137 = 0.5*tmp_134 + 0.5*tmp_135 + 0.5*tmp_136;
      real_t tmp_138 = 2*tmp_137;
      real_t tmp_139 = 1.0*tmp_125 + 1.0*tmp_126 + 1.0*tmp_127;
      real_t tmp_140 = 0.074999999999999983*tmp_59;
      real_t tmp_141 = (2.0/3.0)*tmp_29;
      real_t tmp_142 = tmp_20 - 1.0;
      real_t tmp_143 = tmp_19*tmp_27;
      real_t tmp_144 = tmp_142*tmp_143;
      real_t tmp_145 = 2.0*tmp_19;
      real_t tmp_146 = tmp_142*tmp_145;
      real_t tmp_147 = 2.0*tmp_46;
      real_t tmp_148 = (2.0/3.0)*tmp_68;
      real_t tmp_149 = tmp_61 - 1.0;
      real_t tmp_150 = tmp_143*tmp_149;
      real_t tmp_151 = tmp_145*tmp_149;
      real_t tmp_152 = 2.0*tmp_79;
      real_t tmp_153 = (2.0/3.0)*tmp_88;
      real_t tmp_154 = tmp_81 - 1.0;
      real_t tmp_155 = tmp_143*tmp_154;
      real_t tmp_156 = tmp_145*tmp_154;
      real_t tmp_157 = 2.0*tmp_99;
      real_t tmp_158 = (2.0/3.0)*tmp_108;
      real_t tmp_159 = tmp_101 - 1.0;
      real_t tmp_160 = tmp_143*tmp_159;
      real_t tmp_161 = tmp_145*tmp_159;
      real_t tmp_162 = 2.0*tmp_119;
      real_t tmp_163 = (2.0/3.0)*tmp_128;
      real_t tmp_164 = tmp_121 - 1.0;
      real_t tmp_165 = tmp_143*tmp_164;
      real_t tmp_166 = tmp_145*tmp_164;
      real_t tmp_167 = 2.0*tmp_139;
      real_t tmp_168 = tmp_21 - 1.0;
      real_t tmp_169 = tmp_19*tmp_25;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = tmp_145*tmp_168;
      real_t tmp_172 = tmp_62 - 1.0;
      real_t tmp_173 = tmp_169*tmp_172;
      real_t tmp_174 = tmp_145*tmp_172;
      real_t tmp_175 = tmp_82 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = tmp_145*tmp_175;
      real_t tmp_178 = tmp_102 - 1.0;
      real_t tmp_179 = tmp_169*tmp_178;
      real_t tmp_180 = tmp_145*tmp_178;
      real_t tmp_181 = tmp_122 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = tmp_145*tmp_181;
      real_t tmp_184 = tmp_22 - 1.0;
      real_t tmp_185 = tmp_19*tmp_8;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_145*tmp_184;
      real_t tmp_188 = tmp_63 - 1.0;
      real_t tmp_189 = tmp_185*tmp_188;
      real_t tmp_190 = tmp_145*tmp_188;
      real_t tmp_191 = tmp_83 - 1.0;
      real_t tmp_192 = tmp_185*tmp_191;
      real_t tmp_193 = tmp_145*tmp_191;
      real_t tmp_194 = tmp_103 - 1.0;
      real_t tmp_195 = tmp_185*tmp_194;
      real_t tmp_196 = tmp_145*tmp_194;
      real_t tmp_197 = tmp_123 - 1.0;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_145*tmp_197;
      real_t tmp_200 = tmp_185*tmp_21;
      real_t tmp_201 = tmp_169*tmp_22;
      real_t tmp_202 = 2.0;
      real_t tmp_203 = tmp_185*tmp_202;
      real_t tmp_204 = 2.0;
      real_t tmp_205 = tmp_169*tmp_204;
      real_t tmp_206 = tmp_19*tmp_21;
      real_t tmp_207 = tmp_206*tmp_30;
      real_t tmp_208 = tmp_19*tmp_22;
      real_t tmp_209 = tmp_208*tmp_32;
      real_t tmp_210 = tmp_206*tmp_38;
      real_t tmp_211 = tmp_208*tmp_40;
      real_t tmp_212 = tmp_185*tmp_62;
      real_t tmp_213 = tmp_169*tmp_63;
      real_t tmp_214 = 1.3333333333333333;
      real_t tmp_215 = tmp_185*tmp_214;
      real_t tmp_216 = 4.0;
      real_t tmp_217 = tmp_169*tmp_216;
      real_t tmp_218 = tmp_19*tmp_62;
      real_t tmp_219 = tmp_218*tmp_30;
      real_t tmp_220 = tmp_19*tmp_63;
      real_t tmp_221 = tmp_220*tmp_32;
      real_t tmp_222 = tmp_218*tmp_38;
      real_t tmp_223 = tmp_220*tmp_40;
      real_t tmp_224 = tmp_185*tmp_82;
      real_t tmp_225 = tmp_169*tmp_83;
      real_t tmp_226 = 4.0;
      real_t tmp_227 = tmp_185*tmp_226;
      real_t tmp_228 = 1.3333333333333333;
      real_t tmp_229 = tmp_169*tmp_228;
      real_t tmp_230 = tmp_19*tmp_82;
      real_t tmp_231 = tmp_230*tmp_30;
      real_t tmp_232 = tmp_19*tmp_83;
      real_t tmp_233 = tmp_232*tmp_32;
      real_t tmp_234 = tmp_230*tmp_38;
      real_t tmp_235 = tmp_232*tmp_40;
      real_t tmp_236 = tmp_102*tmp_185;
      real_t tmp_237 = tmp_103*tmp_169;
      real_t tmp_238 = 1.3333333333333333;
      real_t tmp_239 = tmp_185*tmp_238;
      real_t tmp_240 = 1.3333333333333333;
      real_t tmp_241 = tmp_169*tmp_240;
      real_t tmp_242 = tmp_102*tmp_19;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_103*tmp_19;
      real_t tmp_245 = tmp_244*tmp_32;
      real_t tmp_246 = tmp_242*tmp_38;
      real_t tmp_247 = tmp_244*tmp_40;
      real_t tmp_248 = tmp_122*tmp_185;
      real_t tmp_249 = tmp_123*tmp_169;
      real_t tmp_250 = 1.3333333333333333;
      real_t tmp_251 = tmp_185*tmp_250;
      real_t tmp_252 = 1.3333333333333333;
      real_t tmp_253 = tmp_169*tmp_252;
      real_t tmp_254 = tmp_122*tmp_19;
      real_t tmp_255 = tmp_254*tmp_30;
      real_t tmp_256 = tmp_123*tmp_19;
      real_t tmp_257 = tmp_256*tmp_32;
      real_t tmp_258 = tmp_254*tmp_38;
      real_t tmp_259 = tmp_256*tmp_40;
      real_t tmp_260 = tmp_185*tmp_20;
      real_t tmp_261 = tmp_208*tmp_27;
      real_t tmp_262 = 2.0;
      real_t tmp_263 = tmp_185*tmp_262;
      real_t tmp_264 = tmp_143*tmp_204;
      real_t tmp_265 = tmp_19*tmp_20;
      real_t tmp_266 = tmp_265*tmp_30;
      real_t tmp_267 = tmp_208*tmp_34;
      real_t tmp_268 = tmp_265*tmp_38;
      real_t tmp_269 = tmp_208*tmp_42;
      real_t tmp_270 = tmp_185*tmp_61;
      real_t tmp_271 = tmp_220*tmp_27;
      real_t tmp_272 = 1.3333333333333333;
      real_t tmp_273 = tmp_185*tmp_272;
      real_t tmp_274 = tmp_143*tmp_216;
      real_t tmp_275 = tmp_19*tmp_61;
      real_t tmp_276 = tmp_275*tmp_30;
      real_t tmp_277 = tmp_220*tmp_34;
      real_t tmp_278 = tmp_275*tmp_38;
      real_t tmp_279 = tmp_220*tmp_42;
      real_t tmp_280 = tmp_185*tmp_81;
      real_t tmp_281 = tmp_232*tmp_27;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_185*tmp_282;
      real_t tmp_284 = tmp_143*tmp_228;
      real_t tmp_285 = tmp_19*tmp_81;
      real_t tmp_286 = tmp_285*tmp_30;
      real_t tmp_287 = tmp_232*tmp_34;
      real_t tmp_288 = tmp_285*tmp_38;
      real_t tmp_289 = tmp_232*tmp_42;
      real_t tmp_290 = tmp_101*tmp_185;
      real_t tmp_291 = tmp_244*tmp_27;
      real_t tmp_292 = 4.0;
      real_t tmp_293 = tmp_185*tmp_292;
      real_t tmp_294 = tmp_143*tmp_240;
      real_t tmp_295 = tmp_101*tmp_19;
      real_t tmp_296 = tmp_295*tmp_30;
      real_t tmp_297 = tmp_244*tmp_34;
      real_t tmp_298 = tmp_295*tmp_38;
      real_t tmp_299 = tmp_244*tmp_42;
      real_t tmp_300 = tmp_121*tmp_185;
      real_t tmp_301 = tmp_256*tmp_27;
      real_t tmp_302 = 1.3333333333333333;
      real_t tmp_303 = tmp_185*tmp_302;
      real_t tmp_304 = tmp_143*tmp_252;
      real_t tmp_305 = tmp_121*tmp_19;
      real_t tmp_306 = tmp_30*tmp_305;
      real_t tmp_307 = tmp_256*tmp_34;
      real_t tmp_308 = tmp_305*tmp_38;
      real_t tmp_309 = tmp_256*tmp_42;
      real_t tmp_310 = tmp_169*tmp_20;
      real_t tmp_311 = tmp_206*tmp_27;
      real_t tmp_312 = tmp_169*tmp_262;
      real_t tmp_313 = tmp_143*tmp_202;
      real_t tmp_314 = tmp_265*tmp_32;
      real_t tmp_315 = tmp_206*tmp_34;
      real_t tmp_316 = tmp_265*tmp_40;
      real_t tmp_317 = tmp_206*tmp_42;
      real_t tmp_318 = tmp_169*tmp_61;
      real_t tmp_319 = tmp_218*tmp_27;
      real_t tmp_320 = tmp_169*tmp_272;
      real_t tmp_321 = tmp_143*tmp_214;
      real_t tmp_322 = tmp_275*tmp_32;
      real_t tmp_323 = tmp_218*tmp_34;
      real_t tmp_324 = tmp_275*tmp_40;
      real_t tmp_325 = tmp_218*tmp_42;
      real_t tmp_326 = tmp_169*tmp_81;
      real_t tmp_327 = tmp_230*tmp_27;
      real_t tmp_328 = tmp_169*tmp_282;
      real_t tmp_329 = tmp_143*tmp_226;
      real_t tmp_330 = tmp_285*tmp_32;
      real_t tmp_331 = tmp_230*tmp_34;
      real_t tmp_332 = tmp_285*tmp_40;
      real_t tmp_333 = tmp_230*tmp_42;
      real_t tmp_334 = tmp_101*tmp_169;
      real_t tmp_335 = tmp_242*tmp_27;
      real_t tmp_336 = tmp_169*tmp_292;
      real_t tmp_337 = tmp_143*tmp_238;
      real_t tmp_338 = tmp_295*tmp_32;
      real_t tmp_339 = tmp_242*tmp_34;
      real_t tmp_340 = tmp_295*tmp_40;
      real_t tmp_341 = tmp_242*tmp_42;
      real_t tmp_342 = tmp_121*tmp_169;
      real_t tmp_343 = tmp_254*tmp_27;
      real_t tmp_344 = tmp_169*tmp_302;
      real_t tmp_345 = tmp_143*tmp_250;
      real_t tmp_346 = tmp_305*tmp_32;
      real_t tmp_347 = tmp_254*tmp_34;
      real_t tmp_348 = tmp_305*tmp_40;
      real_t tmp_349 = tmp_254*tmp_42;
      real_t tmp_350 = -tmp_21;
      real_t tmp_351 = 4.0 - tmp_20;
      real_t tmp_352 = tmp_19*(-tmp_204 + tmp_350 + tmp_351);
      real_t tmp_353 = tmp_352*tmp_8;
      real_t tmp_354 = -tmp_62;
      real_t tmp_355 = 4.0 - tmp_61;
      real_t tmp_356 = tmp_19*(-tmp_216 + tmp_354 + tmp_355);
      real_t tmp_357 = tmp_356*tmp_8;
      real_t tmp_358 = -tmp_82;
      real_t tmp_359 = 4.0 - tmp_81;
      real_t tmp_360 = tmp_19*(-tmp_228 + tmp_358 + tmp_359);
      real_t tmp_361 = tmp_360*tmp_8;
      real_t tmp_362 = -tmp_102;
      real_t tmp_363 = 4.0 - tmp_101;
      real_t tmp_364 = tmp_19*(-tmp_240 + tmp_362 + tmp_363);
      real_t tmp_365 = tmp_364*tmp_8;
      real_t tmp_366 = -tmp_122;
      real_t tmp_367 = 4.0 - tmp_121;
      real_t tmp_368 = tmp_19*(-tmp_252 + tmp_366 + tmp_367);
      real_t tmp_369 = tmp_368*tmp_8;
      real_t tmp_370 = -tmp_22;
      real_t tmp_371 = tmp_19*(-tmp_202 + tmp_351 + tmp_370);
      real_t tmp_372 = tmp_25*tmp_371;
      real_t tmp_373 = -tmp_63;
      real_t tmp_374 = tmp_19*(-tmp_214 + tmp_355 + tmp_373);
      real_t tmp_375 = tmp_25*tmp_374;
      real_t tmp_376 = -tmp_83;
      real_t tmp_377 = tmp_19*(-tmp_226 + tmp_359 + tmp_376);
      real_t tmp_378 = tmp_25*tmp_377;
      real_t tmp_379 = -tmp_103;
      real_t tmp_380 = tmp_19*(-tmp_238 + tmp_363 + tmp_379);
      real_t tmp_381 = tmp_25*tmp_380;
      real_t tmp_382 = -tmp_123;
      real_t tmp_383 = tmp_19*(-tmp_250 + tmp_367 + tmp_382);
      real_t tmp_384 = tmp_25*tmp_383;
      real_t tmp_385 = tmp_19*(-tmp_262 + tmp_350 + tmp_370 + 4.0);
      real_t tmp_386 = tmp_27*tmp_385;
      real_t tmp_387 = tmp_19*(-tmp_272 + tmp_354 + tmp_373 + 4.0);
      real_t tmp_388 = tmp_27*tmp_387;
      real_t tmp_389 = tmp_19*(-tmp_282 + tmp_358 + tmp_376 + 4.0);
      real_t tmp_390 = tmp_27*tmp_389;
      real_t tmp_391 = tmp_19*(-tmp_292 + tmp_362 + tmp_379 + 4.0);
      real_t tmp_392 = tmp_27*tmp_391;
      real_t tmp_393 = tmp_19*(-tmp_302 + tmp_366 + tmp_382 + 4.0);
      real_t tmp_394 = tmp_27*tmp_393;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_140*(-2.0/3.0*(tmp_128*tmp_128) + tmp_133*(tmp_129 + tmp_130 + tmp_131) + tmp_138*(tmp_134 + tmp_135 + tmp_136) + tmp_139*(2.0*tmp_125 + 2.0*tmp_126 + 2.0*tmp_127)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_153*tmp_155 + tmp_155*tmp_157 + tmp_156*tmp_34*tmp_92 + tmp_156*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_161*tmp_34 + tmp_117*tmp_161*tmp_42 - tmp_158*tmp_160 + tmp_160*tmp_162) + tmp_140*(tmp_132*tmp_166*tmp_34 + tmp_137*tmp_166*tmp_42 - tmp_163*tmp_165 + tmp_165*tmp_167) + tmp_60*(-tmp_141*tmp_144 + tmp_144*tmp_147 + tmp_146*tmp_34*tmp_36 + tmp_146*tmp_42*tmp_44) + tmp_80*(-tmp_148*tmp_150 + tmp_150*tmp_152 + tmp_151*tmp_34*tmp_72 + tmp_151*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_153*tmp_176 + tmp_157*tmp_176 + tmp_177*tmp_32*tmp_92 + tmp_177*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_180*tmp_32 + tmp_117*tmp_180*tmp_40 - tmp_158*tmp_179 + tmp_162*tmp_179) + tmp_140*(tmp_132*tmp_183*tmp_32 + tmp_137*tmp_183*tmp_40 - tmp_163*tmp_182 + tmp_167*tmp_182) + tmp_60*(-tmp_141*tmp_170 + tmp_147*tmp_170 + tmp_171*tmp_32*tmp_36 + tmp_171*tmp_40*tmp_44) + tmp_80*(-tmp_148*tmp_173 + tmp_152*tmp_173 + tmp_174*tmp_32*tmp_72 + tmp_174*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_153*tmp_192 + tmp_157*tmp_192 + tmp_193*tmp_30*tmp_92 + tmp_193*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_196*tmp_30 + tmp_117*tmp_196*tmp_38 - tmp_158*tmp_195 + tmp_162*tmp_195) + tmp_140*(tmp_132*tmp_199*tmp_30 + tmp_137*tmp_199*tmp_38 - tmp_163*tmp_198 + tmp_167*tmp_198) + tmp_60*(-tmp_141*tmp_186 + tmp_147*tmp_186 + tmp_187*tmp_30*tmp_36 + tmp_187*tmp_38*tmp_44) + tmp_80*(-tmp_148*tmp_189 + tmp_152*tmp_189 + tmp_190*tmp_30*tmp_72 + tmp_190*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_153*(tmp_224 + tmp_225) + tmp_93*(tmp_231 + tmp_233) + tmp_98*(tmp_234 + tmp_235) + tmp_99*(tmp_227 + tmp_229)) + tmp_120*(tmp_113*(tmp_243 + tmp_245) + tmp_118*(tmp_246 + tmp_247) + tmp_119*(tmp_239 + tmp_241) - tmp_158*(tmp_236 + tmp_237)) + tmp_140*(tmp_133*(tmp_255 + tmp_257) + tmp_138*(tmp_258 + tmp_259) + tmp_139*(tmp_251 + tmp_253) - tmp_163*(tmp_248 + tmp_249)) + tmp_60*(-tmp_141*(tmp_200 + tmp_201) + tmp_37*(tmp_207 + tmp_209) + tmp_45*(tmp_210 + tmp_211) + tmp_46*(tmp_203 + tmp_205)) + tmp_80*(-tmp_148*(tmp_212 + tmp_213) + tmp_73*(tmp_219 + tmp_221) + tmp_78*(tmp_222 + tmp_223) + tmp_79*(tmp_215 + tmp_217));
      real_t a_0_5 = tmp_100*(-tmp_153*(tmp_280 + tmp_281) + tmp_93*(tmp_286 + tmp_287) + tmp_98*(tmp_288 + tmp_289) + tmp_99*(tmp_283 + tmp_284)) + tmp_120*(tmp_113*(tmp_296 + tmp_297) + tmp_118*(tmp_298 + tmp_299) + tmp_119*(tmp_293 + tmp_294) - tmp_158*(tmp_290 + tmp_291)) + tmp_140*(tmp_133*(tmp_306 + tmp_307) + tmp_138*(tmp_308 + tmp_309) + tmp_139*(tmp_303 + tmp_304) - tmp_163*(tmp_300 + tmp_301)) + tmp_60*(-tmp_141*(tmp_260 + tmp_261) + tmp_37*(tmp_266 + tmp_267) + tmp_45*(tmp_268 + tmp_269) + tmp_46*(tmp_263 + tmp_264)) + tmp_80*(-tmp_148*(tmp_270 + tmp_271) + tmp_73*(tmp_276 + tmp_277) + tmp_78*(tmp_278 + tmp_279) + tmp_79*(tmp_273 + tmp_274));
      real_t a_0_6 = tmp_100*(-tmp_153*(tmp_326 + tmp_327) + tmp_93*(tmp_330 + tmp_331) + tmp_98*(tmp_332 + tmp_333) + tmp_99*(tmp_328 + tmp_329)) + tmp_120*(tmp_113*(tmp_338 + tmp_339) + tmp_118*(tmp_340 + tmp_341) + tmp_119*(tmp_336 + tmp_337) - tmp_158*(tmp_334 + tmp_335)) + tmp_140*(tmp_133*(tmp_346 + tmp_347) + tmp_138*(tmp_348 + tmp_349) + tmp_139*(tmp_344 + tmp_345) - tmp_163*(tmp_342 + tmp_343)) + tmp_60*(-tmp_141*(tmp_310 + tmp_311) + tmp_37*(tmp_314 + tmp_315) + tmp_45*(tmp_316 + tmp_317) + tmp_46*(tmp_312 + tmp_313)) + tmp_80*(-tmp_148*(tmp_318 + tmp_319) + tmp_73*(tmp_322 + tmp_323) + tmp_78*(tmp_324 + tmp_325) + tmp_79*(tmp_320 + tmp_321));
      real_t a_0_7 = tmp_100*(-tmp_153*(-tmp_225 - tmp_281 + tmp_361) + tmp_93*(-tmp_233 - tmp_287 + tmp_30*tmp_360) + tmp_98*(-tmp_235 - tmp_289 + tmp_360*tmp_38) + tmp_99*(-tmp_229 - tmp_284 + 2.0*tmp_361)) + tmp_120*(tmp_113*(-tmp_245 - tmp_297 + tmp_30*tmp_364) + tmp_118*(-tmp_247 - tmp_299 + tmp_364*tmp_38) + tmp_119*(-tmp_241 - tmp_294 + 2.0*tmp_365) - tmp_158*(-tmp_237 - tmp_291 + tmp_365)) + tmp_140*(tmp_133*(-tmp_257 + tmp_30*tmp_368 - tmp_307) + tmp_138*(-tmp_259 - tmp_309 + tmp_368*tmp_38) + tmp_139*(-tmp_253 - tmp_304 + 2.0*tmp_369) - tmp_163*(-tmp_249 - tmp_301 + tmp_369)) + tmp_60*(-tmp_141*(-tmp_201 - tmp_261 + tmp_353) + tmp_37*(-tmp_209 - tmp_267 + tmp_30*tmp_352) + tmp_45*(-tmp_211 - tmp_269 + tmp_352*tmp_38) + tmp_46*(-tmp_205 - tmp_264 + 2.0*tmp_353)) + tmp_80*(-tmp_148*(-tmp_213 - tmp_271 + tmp_357) + tmp_73*(-tmp_221 - tmp_277 + tmp_30*tmp_356) + tmp_78*(-tmp_223 - tmp_279 + tmp_356*tmp_38) + tmp_79*(-tmp_217 - tmp_274 + 2.0*tmp_357));
      real_t a_0_8 = tmp_100*(-tmp_153*(-tmp_224 - tmp_327 + tmp_378) + tmp_93*(-tmp_231 + tmp_32*tmp_377 - tmp_331) + tmp_98*(-tmp_234 - tmp_333 + tmp_377*tmp_40) + tmp_99*(-tmp_227 - tmp_329 + 2.0*tmp_378)) + tmp_120*(tmp_113*(-tmp_243 + tmp_32*tmp_380 - tmp_339) + tmp_118*(-tmp_246 - tmp_341 + tmp_380*tmp_40) + tmp_119*(-tmp_239 - tmp_337 + 2.0*tmp_381) - tmp_158*(-tmp_236 - tmp_335 + tmp_381)) + tmp_140*(tmp_133*(-tmp_255 + tmp_32*tmp_383 - tmp_347) + tmp_138*(-tmp_258 - tmp_349 + tmp_383*tmp_40) + tmp_139*(-tmp_251 - tmp_345 + 2.0*tmp_384) - tmp_163*(-tmp_248 - tmp_343 + tmp_384)) + tmp_60*(-tmp_141*(-tmp_200 - tmp_311 + tmp_372) + tmp_37*(-tmp_207 - tmp_315 + tmp_32*tmp_371) + tmp_45*(-tmp_210 - tmp_317 + tmp_371*tmp_40) + tmp_46*(-tmp_203 - tmp_313 + 2.0*tmp_372)) + tmp_80*(-tmp_148*(-tmp_212 - tmp_319 + tmp_375) + tmp_73*(-tmp_219 + tmp_32*tmp_374 - tmp_323) + tmp_78*(-tmp_222 - tmp_325 + tmp_374*tmp_40) + tmp_79*(-tmp_215 - tmp_321 + 2.0*tmp_375));
      real_t a_0_9 = tmp_100*(-tmp_153*(-tmp_280 - tmp_326 + tmp_390) + tmp_93*(-tmp_286 - tmp_330 + tmp_34*tmp_389) + tmp_98*(-tmp_288 - tmp_332 + tmp_389*tmp_42) + tmp_99*(-tmp_283 - tmp_328 + 2.0*tmp_390)) + tmp_120*(tmp_113*(-tmp_296 - tmp_338 + tmp_34*tmp_391) + tmp_118*(-tmp_298 - tmp_340 + tmp_391*tmp_42) + tmp_119*(-tmp_293 - tmp_336 + 2.0*tmp_392) - tmp_158*(-tmp_290 - tmp_334 + tmp_392)) + tmp_140*(tmp_133*(-tmp_306 + tmp_34*tmp_393 - tmp_346) + tmp_138*(-tmp_308 - tmp_348 + tmp_393*tmp_42) + tmp_139*(-tmp_303 - tmp_344 + 2.0*tmp_394) - tmp_163*(-tmp_300 - tmp_342 + tmp_394)) + tmp_60*(-tmp_141*(-tmp_260 - tmp_310 + tmp_386) + tmp_37*(-tmp_266 - tmp_314 + tmp_34*tmp_385) + tmp_45*(-tmp_268 - tmp_316 + tmp_385*tmp_42) + tmp_46*(-tmp_263 - tmp_312 + 2.0*tmp_386)) + tmp_80*(-tmp_148*(-tmp_270 - tmp_318 + tmp_388) + tmp_73*(-tmp_276 - tmp_322 + tmp_34*tmp_387) + tmp_78*(-tmp_278 - tmp_324 + tmp_387*tmp_42) + tmp_79*(-tmp_273 - tmp_320 + 2.0*tmp_388));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_0_1_affine_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.71423491305446574;
      real_t tmp_8 = 0.62020410288672878;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = tmp_1*tmp_9;
      real_t tmp_11 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_12 = tmp_11*tmp_9;
      real_t tmp_13 = tmp_10 + tmp_12;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_14*tmp_9 + tmp_3*tmp_9;
      real_t tmp_16 = (2.0/3.0)*tmp_15;
      real_t tmp_17 = 0.5*tmp_10 + 0.5*tmp_12;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_20 = 0.15902069087198858*tmp_19;
      real_t tmp_21 = 0.3001244408904325;
      real_t tmp_22 = 2.5797958971132711;
      real_t tmp_23 = tmp_6*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = tmp_1*tmp_23;
      real_t tmp_25 = tmp_11*tmp_23;
      real_t tmp_26 = tmp_24 + tmp_25;
      real_t tmp_27 = tmp_14*tmp_23 + tmp_23*tmp_3;
      real_t tmp_28 = (2.0/3.0)*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_25;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = 0.090979309128011415*tmp_19;
      real_t tmp_32 = 2.6655609840588057;
      real_t tmp_33 = 0.62020410288672878;
      real_t tmp_34 = tmp_6*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_11*tmp_34;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_14*tmp_34 + tmp_3*tmp_34;
      real_t tmp_39 = (2.0/3.0)*tmp_38;
      real_t tmp_40 = 0.5*tmp_35 + 0.5*tmp_36;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 0.15902069087198858*tmp_19;
      real_t tmp_43 = 1.1200796619962963;
      real_t tmp_44 = 2.5797958971132711;
      real_t tmp_45 = tmp_6*(tmp_43 + tmp_44 - 3);
      real_t tmp_46 = tmp_1*tmp_45;
      real_t tmp_47 = tmp_11*tmp_45;
      real_t tmp_48 = tmp_46 + tmp_47;
      real_t tmp_49 = tmp_14*tmp_45 + tmp_3*tmp_45;
      real_t tmp_50 = (2.0/3.0)*tmp_49;
      real_t tmp_51 = 0.5*tmp_46 + 0.5*tmp_47;
      real_t tmp_52 = 2*tmp_51;
      real_t tmp_53 = 0.090979309128011415*tmp_19;
      real_t tmp_54 = tmp_7 - 1;
      real_t tmp_55 = tmp_11*tmp_6;
      real_t tmp_56 = tmp_54*tmp_55;
      real_t tmp_57 = tmp_3*tmp_6;
      real_t tmp_58 = 2.0*tmp_57;
      real_t tmp_59 = tmp_54*tmp_58;
      real_t tmp_60 = tmp_21 - 1;
      real_t tmp_61 = tmp_55*tmp_60;
      real_t tmp_62 = tmp_58*tmp_60;
      real_t tmp_63 = tmp_32 - 1;
      real_t tmp_64 = tmp_55*tmp_63;
      real_t tmp_65 = tmp_58*tmp_63;
      real_t tmp_66 = tmp_43 - 1;
      real_t tmp_67 = tmp_55*tmp_66;
      real_t tmp_68 = tmp_58*tmp_66;
      real_t tmp_69 = tmp_8 - 1;
      real_t tmp_70 = tmp_1*tmp_6;
      real_t tmp_71 = tmp_69*tmp_70;
      real_t tmp_72 = tmp_14*tmp_6;
      real_t tmp_73 = 2.0*tmp_72;
      real_t tmp_74 = tmp_69*tmp_73;
      real_t tmp_75 = tmp_22 - 1;
      real_t tmp_76 = tmp_70*tmp_75;
      real_t tmp_77 = tmp_73*tmp_75;
      real_t tmp_78 = tmp_33 - 1;
      real_t tmp_79 = tmp_70*tmp_78;
      real_t tmp_80 = tmp_73*tmp_78;
      real_t tmp_81 = tmp_44 - 1;
      real_t tmp_82 = tmp_70*tmp_81;
      real_t tmp_83 = tmp_73*tmp_81;
      real_t tmp_84 = tmp_7*tmp_70;
      real_t tmp_85 = tmp_55*tmp_8;
      real_t tmp_86 = tmp_84 + tmp_85;
      real_t tmp_87 = 4.0*tmp_6;
      real_t tmp_88 = tmp_14*tmp_87;
      real_t tmp_89 = 0.17855872826361643*tmp_88;
      real_t tmp_90 = tmp_3*tmp_87;
      real_t tmp_91 = 0.1550510257216822*tmp_90;
      real_t tmp_92 = tmp_89 + tmp_91;
      real_t tmp_93 = tmp_21*tmp_70;
      real_t tmp_94 = tmp_22*tmp_55;
      real_t tmp_95 = tmp_93 + tmp_94;
      real_t tmp_96 = 0.075031110222608124*tmp_88;
      real_t tmp_97 = 0.64494897427831777*tmp_90;
      real_t tmp_98 = tmp_96 + tmp_97;
      real_t tmp_99 = tmp_32*tmp_70;
      real_t tmp_100 = tmp_33*tmp_55;
      real_t tmp_101 = tmp_100 + tmp_99;
      real_t tmp_102 = 0.66639024601470143*tmp_88;
      real_t tmp_103 = 0.1550510257216822*tmp_90;
      real_t tmp_104 = tmp_102 + tmp_103;
      real_t tmp_105 = tmp_43*tmp_70;
      real_t tmp_106 = tmp_44*tmp_55;
      real_t tmp_107 = tmp_105 + tmp_106;
      real_t tmp_108 = 0.28001991549907407*tmp_88;
      real_t tmp_109 = 0.64494897427831777*tmp_90;
      real_t tmp_110 = tmp_108 + tmp_109;
      real_t tmp_111 = tmp_6*(2.7595917942265427 - tmp_7);
      real_t tmp_112 = tmp_1*tmp_111;
      real_t tmp_113 = tmp_112 - tmp_85;
      real_t tmp_114 = tmp_111*tmp_14;
      real_t tmp_115 = tmp_114 - tmp_91;
      real_t tmp_116 = tmp_6*(-tmp_21 - 1.1595917942265421);
      real_t tmp_117 = tmp_1*tmp_116;
      real_t tmp_118 = tmp_117 - tmp_94;
      real_t tmp_119 = tmp_116*tmp_14;
      real_t tmp_120 = tmp_119 - tmp_97;
      real_t tmp_121 = tmp_6*(2.7595917942265427 - tmp_32);
      real_t tmp_122 = tmp_1*tmp_121;
      real_t tmp_123 = -tmp_100 + tmp_122;
      real_t tmp_124 = tmp_121*tmp_14;
      real_t tmp_125 = -tmp_103 + tmp_124;
      real_t tmp_126 = tmp_6*(-tmp_43 - 1.1595917942265421);
      real_t tmp_127 = tmp_1*tmp_126;
      real_t tmp_128 = -tmp_106 + tmp_127;
      real_t tmp_129 = tmp_126*tmp_14;
      real_t tmp_130 = -tmp_109 + tmp_129;
      real_t tmp_131 = tmp_6*(2.5715301738910687 - tmp_8);
      real_t tmp_132 = tmp_11*tmp_131;
      real_t tmp_133 = tmp_132 - tmp_84;
      real_t tmp_134 = tmp_131*tmp_3;
      real_t tmp_135 = tmp_134 - tmp_89;
      real_t tmp_136 = tmp_6*(3.3997511182191351 - tmp_22);
      real_t tmp_137 = tmp_11*tmp_136;
      real_t tmp_138 = tmp_137 - tmp_93;
      real_t tmp_139 = tmp_136*tmp_3;
      real_t tmp_140 = tmp_139 - tmp_96;
      real_t tmp_141 = tmp_6*(-tmp_33 - 1.3311219681176114);
      real_t tmp_142 = tmp_11*tmp_141;
      real_t tmp_143 = tmp_142 - tmp_99;
      real_t tmp_144 = tmp_141*tmp_3;
      real_t tmp_145 = -tmp_102 + tmp_144;
      real_t tmp_146 = tmp_6*(1.7598406760074075 - tmp_44);
      real_t tmp_147 = tmp_11*tmp_146;
      real_t tmp_148 = -tmp_105 + tmp_147;
      real_t tmp_149 = tmp_146*tmp_3;
      real_t tmp_150 = -tmp_108 + tmp_149;
      real_t tmp_151 = 1.0*tmp_56;
      real_t tmp_152 = (2.0/3.0)*tmp_57;
      real_t tmp_153 = tmp_152*tmp_54;
      real_t tmp_154 = 1.0*tmp_61;
      real_t tmp_155 = tmp_152*tmp_60;
      real_t tmp_156 = 1.0*tmp_64;
      real_t tmp_157 = tmp_152*tmp_63;
      real_t tmp_158 = 1.0*tmp_67;
      real_t tmp_159 = tmp_152*tmp_66;
      real_t tmp_160 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_161 = 0.33333333333333337*tmp_160;
      real_t tmp_162 = tmp_161*tmp_20;
      real_t tmp_163 = tmp_11*tmp_3;
      real_t tmp_164 = tmp_161*tmp_163;
      real_t tmp_165 = tmp_54*tmp_69;
      real_t tmp_166 = (2.0/3.0)*tmp_160;
      real_t tmp_167 = tmp_166*tmp_4;
      real_t tmp_168 = 1.0*tmp_160;
      real_t tmp_169 = tmp_11*tmp_14;
      real_t tmp_170 = tmp_165*tmp_169;
      real_t tmp_171 = tmp_60*tmp_75;
      real_t tmp_172 = tmp_168*tmp_169;
      real_t tmp_173 = tmp_63*tmp_78;
      real_t tmp_174 = tmp_66*tmp_81;
      real_t tmp_175 = 1.0*tmp_71;
      real_t tmp_176 = (2.0/3.0)*tmp_72;
      real_t tmp_177 = tmp_176*tmp_69;
      real_t tmp_178 = 1.0*tmp_76;
      real_t tmp_179 = tmp_176*tmp_75;
      real_t tmp_180 = 1.0*tmp_79;
      real_t tmp_181 = tmp_176*tmp_78;
      real_t tmp_182 = 1.0*tmp_82;
      real_t tmp_183 = tmp_176*tmp_81;
      real_t tmp_184 = tmp_168*tmp_4;
      real_t tmp_185 = tmp_166*tmp_169;
      real_t tmp_186 = tmp_1*tmp_14;
      real_t tmp_187 = tmp_161*tmp_186;
      real_t tmp_188 = 2.0*tmp_70;
      real_t tmp_189 = 0.17855872826361643*tmp_188;
      real_t tmp_190 = 2.0*tmp_55;
      real_t tmp_191 = 0.1550510257216822*tmp_190;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = 2*tmp_192;
      real_t tmp_194 = tmp_7*tmp_72;
      real_t tmp_195 = tmp_57*tmp_8;
      real_t tmp_196 = (2.0/3.0)*tmp_194 + (2.0/3.0)*tmp_195;
      real_t tmp_197 = 0.075031110222608124*tmp_188;
      real_t tmp_198 = 0.64494897427831777*tmp_190;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = 2*tmp_199;
      real_t tmp_201 = tmp_21*tmp_72;
      real_t tmp_202 = tmp_22*tmp_57;
      real_t tmp_203 = (2.0/3.0)*tmp_201 + (2.0/3.0)*tmp_202;
      real_t tmp_204 = 0.66639024601470143*tmp_188;
      real_t tmp_205 = 0.1550510257216822*tmp_190;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = 2*tmp_206;
      real_t tmp_208 = tmp_32*tmp_72;
      real_t tmp_209 = tmp_33*tmp_57;
      real_t tmp_210 = (2.0/3.0)*tmp_208 + (2.0/3.0)*tmp_209;
      real_t tmp_211 = 0.28001991549907407*tmp_188;
      real_t tmp_212 = 0.64494897427831777*tmp_190;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = 2*tmp_213;
      real_t tmp_215 = tmp_43*tmp_72;
      real_t tmp_216 = tmp_44*tmp_57;
      real_t tmp_217 = (2.0/3.0)*tmp_215 + (2.0/3.0)*tmp_216;
      real_t tmp_218 = (2.0/3.0)*tmp_114 - 2.0/3.0*tmp_195;
      real_t tmp_219 = 0.5*tmp_112 - tmp_191;
      real_t tmp_220 = 2*tmp_219;
      real_t tmp_221 = (2.0/3.0)*tmp_119 - 2.0/3.0*tmp_202;
      real_t tmp_222 = 0.5*tmp_117 - tmp_198;
      real_t tmp_223 = 2*tmp_222;
      real_t tmp_224 = (2.0/3.0)*tmp_124 - 2.0/3.0*tmp_209;
      real_t tmp_225 = 0.5*tmp_122 - tmp_205;
      real_t tmp_226 = 2*tmp_225;
      real_t tmp_227 = (2.0/3.0)*tmp_129 - 2.0/3.0*tmp_216;
      real_t tmp_228 = 0.5*tmp_127 - tmp_212;
      real_t tmp_229 = 2*tmp_228;
      real_t tmp_230 = (2.0/3.0)*tmp_134 - 2.0/3.0*tmp_194;
      real_t tmp_231 = 0.5*tmp_132 - tmp_189;
      real_t tmp_232 = 2*tmp_231;
      real_t tmp_233 = (2.0/3.0)*tmp_139 - 2.0/3.0*tmp_201;
      real_t tmp_234 = 0.5*tmp_137 - tmp_197;
      real_t tmp_235 = 2*tmp_234;
      real_t tmp_236 = (2.0/3.0)*tmp_144 - 2.0/3.0*tmp_208;
      real_t tmp_237 = 0.5*tmp_142 - tmp_204;
      real_t tmp_238 = 2*tmp_237;
      real_t tmp_239 = (2.0/3.0)*tmp_149 - 2.0/3.0*tmp_215;
      real_t tmp_240 = 0.5*tmp_147 - tmp_211;
      real_t tmp_241 = 2*tmp_240;
      real_t a_0_0 = tmp_20*(-tmp_13*tmp_16 + tmp_15*tmp_18) + tmp_31*(-tmp_26*tmp_28 + tmp_27*tmp_30) + tmp_42*(-tmp_37*tmp_39 + tmp_38*tmp_41) + tmp_53*(-tmp_48*tmp_50 + tmp_49*tmp_52);
      real_t a_0_1 = tmp_20*(-tmp_16*tmp_56 + tmp_17*tmp_59) + tmp_31*(-tmp_28*tmp_61 + tmp_29*tmp_62) + tmp_42*(-tmp_39*tmp_64 + tmp_40*tmp_65) + tmp_53*(-tmp_50*tmp_67 + tmp_51*tmp_68);
      real_t a_0_2 = tmp_20*(-tmp_16*tmp_71 + tmp_17*tmp_74) + tmp_31*(-tmp_28*tmp_76 + tmp_29*tmp_77) + tmp_42*(-tmp_39*tmp_79 + tmp_40*tmp_80) + tmp_53*(-tmp_50*tmp_82 + tmp_51*tmp_83);
      real_t a_0_3 = tmp_20*(-tmp_16*tmp_86 + tmp_18*tmp_92) + tmp_31*(-tmp_28*tmp_95 + tmp_30*tmp_98) + tmp_42*(-tmp_101*tmp_39 + tmp_104*tmp_41) + tmp_53*(-tmp_107*tmp_50 + tmp_110*tmp_52);
      real_t a_0_4 = tmp_20*(-tmp_113*tmp_16 + tmp_115*tmp_18) + tmp_31*(-tmp_118*tmp_28 + tmp_120*tmp_30) + tmp_42*(-tmp_123*tmp_39 + tmp_125*tmp_41) + tmp_53*(-tmp_128*tmp_50 + tmp_130*tmp_52);
      real_t a_0_5 = tmp_20*(-tmp_133*tmp_16 + tmp_135*tmp_18) + tmp_31*(-tmp_138*tmp_28 + tmp_140*tmp_30) + tmp_42*(-tmp_143*tmp_39 + tmp_145*tmp_41) + tmp_53*(-tmp_148*tmp_50 + tmp_150*tmp_52);
      real_t a_1_0 = tmp_20*(-tmp_13*tmp_153 + tmp_15*tmp_151) + tmp_31*(tmp_154*tmp_27 - tmp_155*tmp_26) + tmp_42*(tmp_156*tmp_38 - tmp_157*tmp_37) + tmp_53*(tmp_158*tmp_49 - tmp_159*tmp_48);
      real_t a_1_1 = tmp_162*tmp_163*(tmp_54*tmp_54) + tmp_164*tmp_31*(tmp_60*tmp_60) + tmp_164*tmp_42*(tmp_63*tmp_63) + tmp_164*tmp_53*(tmp_66*tmp_66);
      real_t a_1_2 = tmp_20*(-tmp_165*tmp_167 + tmp_168*tmp_170) + tmp_31*(-tmp_167*tmp_171 + tmp_171*tmp_172) + tmp_42*(-tmp_167*tmp_173 + tmp_172*tmp_173) + tmp_53*(-tmp_167*tmp_174 + tmp_172*tmp_174);
      real_t a_1_3 = tmp_20*(tmp_151*tmp_92 - tmp_153*tmp_86) + tmp_31*(tmp_154*tmp_98 - tmp_155*tmp_95) + tmp_42*(-tmp_101*tmp_157 + tmp_104*tmp_156) + tmp_53*(-tmp_107*tmp_159 + tmp_110*tmp_158);
      real_t a_1_4 = tmp_20*(-tmp_113*tmp_153 + tmp_115*tmp_151) + tmp_31*(-tmp_118*tmp_155 + tmp_120*tmp_154) + tmp_42*(-tmp_123*tmp_157 + tmp_125*tmp_156) + tmp_53*(-tmp_128*tmp_159 + tmp_130*tmp_158);
      real_t a_1_5 = tmp_20*(-tmp_133*tmp_153 + tmp_135*tmp_151) + tmp_31*(-tmp_138*tmp_155 + tmp_140*tmp_154) + tmp_42*(-tmp_143*tmp_157 + tmp_145*tmp_156) + tmp_53*(-tmp_148*tmp_159 + tmp_150*tmp_158);
      real_t a_2_0 = tmp_20*(-tmp_13*tmp_177 + tmp_15*tmp_175) + tmp_31*(tmp_178*tmp_27 - tmp_179*tmp_26) + tmp_42*(tmp_180*tmp_38 - tmp_181*tmp_37) + tmp_53*(tmp_182*tmp_49 - tmp_183*tmp_48);
      real_t a_2_1 = tmp_20*(tmp_165*tmp_184 - tmp_166*tmp_170) + tmp_31*(tmp_171*tmp_184 - tmp_171*tmp_185) + tmp_42*(tmp_173*tmp_184 - tmp_173*tmp_185) + tmp_53*(tmp_174*tmp_184 - tmp_174*tmp_185);
      real_t a_2_2 = tmp_162*tmp_186*(tmp_69*tmp_69) + tmp_187*tmp_31*(tmp_75*tmp_75) + tmp_187*tmp_42*(tmp_78*tmp_78) + tmp_187*tmp_53*(tmp_81*tmp_81);
      real_t a_2_3 = tmp_20*(tmp_175*tmp_92 - tmp_177*tmp_86) + tmp_31*(tmp_178*tmp_98 - tmp_179*tmp_95) + tmp_42*(-tmp_101*tmp_181 + tmp_104*tmp_180) + tmp_53*(-tmp_107*tmp_183 + tmp_110*tmp_182);
      real_t a_2_4 = tmp_20*(-tmp_113*tmp_177 + tmp_115*tmp_175) + tmp_31*(-tmp_118*tmp_179 + tmp_120*tmp_178) + tmp_42*(-tmp_123*tmp_181 + tmp_125*tmp_180) + tmp_53*(-tmp_128*tmp_183 + tmp_130*tmp_182);
      real_t a_2_5 = tmp_20*(-tmp_133*tmp_177 + tmp_135*tmp_175) + tmp_31*(-tmp_138*tmp_179 + tmp_140*tmp_178) + tmp_42*(-tmp_143*tmp_181 + tmp_145*tmp_180) + tmp_53*(-tmp_148*tmp_183 + tmp_150*tmp_182);
      real_t a_3_0 = tmp_20*(-tmp_13*tmp_196 + tmp_15*tmp_193) + tmp_31*(tmp_200*tmp_27 - tmp_203*tmp_26) + tmp_42*(tmp_207*tmp_38 - tmp_210*tmp_37) + tmp_53*(tmp_214*tmp_49 - tmp_217*tmp_48);
      real_t a_3_1 = tmp_20*(tmp_192*tmp_59 - tmp_196*tmp_56) + tmp_31*(tmp_199*tmp_62 - tmp_203*tmp_61) + tmp_42*(tmp_206*tmp_65 - tmp_210*tmp_64) + tmp_53*(tmp_213*tmp_68 - tmp_217*tmp_67);
      real_t a_3_2 = tmp_20*(tmp_192*tmp_74 - tmp_196*tmp_71) + tmp_31*(tmp_199*tmp_77 - tmp_203*tmp_76) + tmp_42*(tmp_206*tmp_80 - tmp_210*tmp_79) + tmp_53*(tmp_213*tmp_83 - tmp_217*tmp_82);
      real_t a_3_3 = tmp_20*(tmp_193*tmp_92 - tmp_196*tmp_86) + tmp_31*(tmp_200*tmp_98 - tmp_203*tmp_95) + tmp_42*(-tmp_101*tmp_210 + tmp_104*tmp_207) + tmp_53*(-tmp_107*tmp_217 + tmp_110*tmp_214);
      real_t a_3_4 = tmp_20*(-tmp_113*tmp_196 + tmp_115*tmp_193) + tmp_31*(-tmp_118*tmp_203 + tmp_120*tmp_200) + tmp_42*(-tmp_123*tmp_210 + tmp_125*tmp_207) + tmp_53*(-tmp_128*tmp_217 + tmp_130*tmp_214);
      real_t a_3_5 = tmp_20*(-tmp_133*tmp_196 + tmp_135*tmp_193) + tmp_31*(-tmp_138*tmp_203 + tmp_140*tmp_200) + tmp_42*(-tmp_143*tmp_210 + tmp_145*tmp_207) + tmp_53*(-tmp_148*tmp_217 + tmp_150*tmp_214);
      real_t a_4_0 = tmp_20*(-tmp_13*tmp_218 + tmp_15*tmp_220) + tmp_31*(-tmp_221*tmp_26 + tmp_223*tmp_27) + tmp_42*(-tmp_224*tmp_37 + tmp_226*tmp_38) + tmp_53*(-tmp_227*tmp_48 + tmp_229*tmp_49);
      real_t a_4_1 = tmp_20*(-tmp_218*tmp_56 + tmp_219*tmp_59) + tmp_31*(-tmp_221*tmp_61 + tmp_222*tmp_62) + tmp_42*(-tmp_224*tmp_64 + tmp_225*tmp_65) + tmp_53*(-tmp_227*tmp_67 + tmp_228*tmp_68);
      real_t a_4_2 = tmp_20*(-tmp_218*tmp_71 + tmp_219*tmp_74) + tmp_31*(-tmp_221*tmp_76 + tmp_222*tmp_77) + tmp_42*(-tmp_224*tmp_79 + tmp_225*tmp_80) + tmp_53*(-tmp_227*tmp_82 + tmp_228*tmp_83);
      real_t a_4_3 = tmp_20*(-tmp_218*tmp_86 + tmp_220*tmp_92) + tmp_31*(-tmp_221*tmp_95 + tmp_223*tmp_98) + tmp_42*(-tmp_101*tmp_224 + tmp_104*tmp_226) + tmp_53*(-tmp_107*tmp_227 + tmp_110*tmp_229);
      real_t a_4_4 = tmp_20*(-tmp_113*tmp_218 + tmp_115*tmp_220) + tmp_31*(-tmp_118*tmp_221 + tmp_120*tmp_223) + tmp_42*(-tmp_123*tmp_224 + tmp_125*tmp_226) + tmp_53*(-tmp_128*tmp_227 + tmp_130*tmp_229);
      real_t a_4_5 = tmp_20*(-tmp_133*tmp_218 + tmp_135*tmp_220) + tmp_31*(-tmp_138*tmp_221 + tmp_140*tmp_223) + tmp_42*(-tmp_143*tmp_224 + tmp_145*tmp_226) + tmp_53*(-tmp_148*tmp_227 + tmp_150*tmp_229);
      real_t a_5_0 = tmp_20*(-tmp_13*tmp_230 + tmp_15*tmp_232) + tmp_31*(-tmp_233*tmp_26 + tmp_235*tmp_27) + tmp_42*(-tmp_236*tmp_37 + tmp_238*tmp_38) + tmp_53*(-tmp_239*tmp_48 + tmp_241*tmp_49);
      real_t a_5_1 = tmp_20*(-tmp_230*tmp_56 + tmp_231*tmp_59) + tmp_31*(-tmp_233*tmp_61 + tmp_234*tmp_62) + tmp_42*(-tmp_236*tmp_64 + tmp_237*tmp_65) + tmp_53*(-tmp_239*tmp_67 + tmp_240*tmp_68);
      real_t a_5_2 = tmp_20*(-tmp_230*tmp_71 + tmp_231*tmp_74) + tmp_31*(-tmp_233*tmp_76 + tmp_234*tmp_77) + tmp_42*(-tmp_236*tmp_79 + tmp_237*tmp_80) + tmp_53*(-tmp_239*tmp_82 + tmp_240*tmp_83);
      real_t a_5_3 = tmp_20*(-tmp_230*tmp_86 + tmp_232*tmp_92) + tmp_31*(-tmp_233*tmp_95 + tmp_235*tmp_98) + tmp_42*(-tmp_101*tmp_236 + tmp_104*tmp_238) + tmp_53*(-tmp_107*tmp_239 + tmp_110*tmp_241);
      real_t a_5_4 = tmp_20*(-tmp_113*tmp_230 + tmp_115*tmp_232) + tmp_31*(-tmp_118*tmp_233 + tmp_120*tmp_235) + tmp_42*(-tmp_123*tmp_236 + tmp_125*tmp_238) + tmp_53*(-tmp_128*tmp_239 + tmp_130*tmp_241);
      real_t a_5_5 = tmp_20*(-tmp_133*tmp_230 + tmp_135*tmp_232) + tmp_31*(-tmp_138*tmp_233 + tmp_140*tmp_235) + tmp_42*(-tmp_143*tmp_236 + tmp_145*tmp_238) + tmp_53*(-tmp_148*tmp_239 + tmp_150*tmp_241);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_0_1_affine_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.71423491305446574;
      real_t tmp_6 = 0.62020410288672878;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_11*tmp_7 + tmp_3*tmp_7;
      real_t tmp_13 = (2.0/3.0)*tmp_12;
      real_t tmp_14 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_15 = 2*tmp_14;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 0.15902069087198858*tmp_16;
      real_t tmp_18 = 0.3001244408904325;
      real_t tmp_19 = 2.5797958971132711;
      real_t tmp_20 = tmp_4*(tmp_18 + tmp_19 - 3);
      real_t tmp_21 = tmp_1*tmp_20;
      real_t tmp_22 = tmp_20*tmp_9;
      real_t tmp_23 = tmp_11*tmp_20 + tmp_20*tmp_3;
      real_t tmp_24 = (2.0/3.0)*tmp_23;
      real_t tmp_25 = 0.5*tmp_21 + 0.5*tmp_22;
      real_t tmp_26 = 2*tmp_25;
      real_t tmp_27 = 0.090979309128011415*tmp_16;
      real_t tmp_28 = 2.6655609840588057;
      real_t tmp_29 = 0.62020410288672878;
      real_t tmp_30 = tmp_4*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_30*tmp_9;
      real_t tmp_33 = tmp_11*tmp_30 + tmp_3*tmp_30;
      real_t tmp_34 = (2.0/3.0)*tmp_33;
      real_t tmp_35 = 0.5*tmp_31 + 0.5*tmp_32;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 0.15902069087198858*tmp_16;
      real_t tmp_38 = 1.1200796619962963;
      real_t tmp_39 = 2.5797958971132711;
      real_t tmp_40 = tmp_4*(tmp_38 + tmp_39 - 3);
      real_t tmp_41 = tmp_1*tmp_40;
      real_t tmp_42 = tmp_40*tmp_9;
      real_t tmp_43 = tmp_11*tmp_40 + tmp_3*tmp_40;
      real_t tmp_44 = (2.0/3.0)*tmp_43;
      real_t tmp_45 = 0.5*tmp_41 + 0.5*tmp_42;
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.090979309128011415*tmp_16;
      real_t tmp_48 = tmp_5 - 1;
      real_t tmp_49 = tmp_4*tmp_9;
      real_t tmp_50 = 2.0*tmp_4;
      real_t tmp_51 = tmp_3*tmp_50;
      real_t tmp_52 = tmp_18 - 1;
      real_t tmp_53 = tmp_28 - 1;
      real_t tmp_54 = tmp_38 - 1;
      real_t tmp_55 = tmp_6 - 1;
      real_t tmp_56 = tmp_1*tmp_4;
      real_t tmp_57 = tmp_11*tmp_50;
      real_t tmp_58 = tmp_19 - 1;
      real_t tmp_59 = tmp_29 - 1;
      real_t tmp_60 = tmp_39 - 1;
      real_t tmp_61 = tmp_5*tmp_56;
      real_t tmp_62 = tmp_49*tmp_6;
      real_t tmp_63 = 4.0*tmp_4;
      real_t tmp_64 = tmp_11*tmp_63;
      real_t tmp_65 = 0.17855872826361643*tmp_64;
      real_t tmp_66 = tmp_3*tmp_63;
      real_t tmp_67 = 0.1550510257216822*tmp_66;
      real_t tmp_68 = tmp_18*tmp_56;
      real_t tmp_69 = tmp_19*tmp_49;
      real_t tmp_70 = 0.075031110222608124*tmp_64;
      real_t tmp_71 = 0.64494897427831777*tmp_66;
      real_t tmp_72 = tmp_28*tmp_56;
      real_t tmp_73 = tmp_29*tmp_49;
      real_t tmp_74 = 0.66639024601470143*tmp_64;
      real_t tmp_75 = 0.1550510257216822*tmp_66;
      real_t tmp_76 = tmp_38*tmp_56;
      real_t tmp_77 = tmp_39*tmp_49;
      real_t tmp_78 = 0.28001991549907407*tmp_64;
      real_t tmp_79 = 0.64494897427831777*tmp_66;
      real_t tmp_80 = tmp_4*(2.7595917942265427 - tmp_5);
      real_t tmp_81 = tmp_4*(-tmp_18 - 1.1595917942265421);
      real_t tmp_82 = tmp_4*(2.7595917942265427 - tmp_28);
      real_t tmp_83 = tmp_4*(-tmp_38 - 1.1595917942265421);
      real_t tmp_84 = tmp_4*(2.5715301738910687 - tmp_6);
      real_t tmp_85 = tmp_4*(3.3997511182191351 - tmp_19);
      real_t tmp_86 = tmp_4*(-tmp_29 - 1.3311219681176114);
      real_t tmp_87 = tmp_4*(1.7598406760074075 - tmp_39);
      real_t a_0_0 = tmp_17*(tmp_12*tmp_15 - tmp_13*(tmp_10 + tmp_8)) + tmp_27*(tmp_23*tmp_26 - tmp_24*(tmp_21 + tmp_22)) + tmp_37*(tmp_33*tmp_36 - tmp_34*(tmp_31 + tmp_32)) + tmp_47*(tmp_43*tmp_46 - tmp_44*(tmp_41 + tmp_42));
      real_t a_0_1 = tmp_17*(-tmp_13*tmp_48*tmp_49 + tmp_14*tmp_48*tmp_51) + tmp_27*(-tmp_24*tmp_49*tmp_52 + tmp_25*tmp_51*tmp_52) + tmp_37*(-tmp_34*tmp_49*tmp_53 + tmp_35*tmp_51*tmp_53) + tmp_47*(-tmp_44*tmp_49*tmp_54 + tmp_45*tmp_51*tmp_54);
      real_t a_0_2 = tmp_17*(-tmp_13*tmp_55*tmp_56 + tmp_14*tmp_55*tmp_57) + tmp_27*(-tmp_24*tmp_56*tmp_58 + tmp_25*tmp_57*tmp_58) + tmp_37*(-tmp_34*tmp_56*tmp_59 + tmp_35*tmp_57*tmp_59) + tmp_47*(-tmp_44*tmp_56*tmp_60 + tmp_45*tmp_57*tmp_60);
      real_t a_0_3 = tmp_17*(-tmp_13*(tmp_61 + tmp_62) + tmp_15*(tmp_65 + tmp_67)) + tmp_27*(-tmp_24*(tmp_68 + tmp_69) + tmp_26*(tmp_70 + tmp_71)) + tmp_37*(-tmp_34*(tmp_72 + tmp_73) + tmp_36*(tmp_74 + tmp_75)) + tmp_47*(-tmp_44*(tmp_76 + tmp_77) + tmp_46*(tmp_78 + tmp_79));
      real_t a_0_4 = tmp_17*(-tmp_13*(tmp_1*tmp_80 - tmp_62) + tmp_15*(tmp_11*tmp_80 - tmp_67)) + tmp_27*(-tmp_24*(tmp_1*tmp_81 - tmp_69) + tmp_26*(tmp_11*tmp_81 - tmp_71)) + tmp_37*(-tmp_34*(tmp_1*tmp_82 - tmp_73) + tmp_36*(tmp_11*tmp_82 - tmp_75)) + tmp_47*(-tmp_44*(tmp_1*tmp_83 - tmp_77) + tmp_46*(tmp_11*tmp_83 - tmp_79));
      real_t a_0_5 = tmp_17*(-tmp_13*(-tmp_61 + tmp_84*tmp_9) + tmp_15*(tmp_3*tmp_84 - tmp_65)) + tmp_27*(-tmp_24*(-tmp_68 + tmp_85*tmp_9) + tmp_26*(tmp_3*tmp_85 - tmp_70)) + tmp_37*(-tmp_34*(-tmp_72 + tmp_86*tmp_9) + tmp_36*(tmp_3*tmp_86 - tmp_74)) + tmp_47*(-tmp_44*(-tmp_76 + tmp_87*tmp_9) + tmp_46*(tmp_3*tmp_87 - tmp_78));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_0_1_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_3;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_11*tmp_5;
      real_t tmp_17 = tmp_14*tmp_9;
      real_t tmp_18 = tmp_3*tmp_8;
      real_t tmp_19 = tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_16*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_9;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_9 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_15 - tmp_18;
      real_t tmp_32 = tmp_12 - tmp_17;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = 1.0*tmp_106;
      real_t tmp_337 = tmp_104*tmp_33;
      real_t tmp_338 = (2.0/3.0)*tmp_20;
      real_t tmp_339 = tmp_30*tmp_338;
      real_t tmp_340 = 1.0*tmp_111;
      real_t tmp_341 = tmp_33*tmp_338;
      real_t tmp_342 = tmp_110*tmp_341;
      real_t tmp_343 = 1.0*tmp_114;
      real_t tmp_344 = tmp_113*tmp_341;
      real_t tmp_345 = 1.0*tmp_117;
      real_t tmp_346 = tmp_116*tmp_341;
      real_t tmp_347 = 1.0*tmp_120;
      real_t tmp_348 = tmp_119*tmp_341;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = (2.0/3.0)*tmp_349;
      real_t tmp_355 = tmp_26*tmp_354;
      real_t tmp_356 = tmp_122*tmp_337;
      real_t tmp_357 = 1.0*tmp_349;
      real_t tmp_358 = tmp_122*tmp_32;
      real_t tmp_359 = tmp_104*tmp_28;
      real_t tmp_360 = tmp_358*tmp_359;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_33*tmp_355;
      real_t tmp_363 = tmp_28*tmp_357;
      real_t tmp_364 = tmp_32*tmp_363;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_354*tmp_6;
      real_t tmp_369 = tmp_139*tmp_368;
      real_t tmp_370 = tmp_139*tmp_31;
      real_t tmp_371 = tmp_357*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_33*tmp_368;
      real_t tmp_374 = tmp_31*tmp_363;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_337*tmp_338;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = 1.0*tmp_128;
      real_t tmp_381 = tmp_32*tmp_338;
      real_t tmp_382 = tmp_127*tmp_381;
      real_t tmp_383 = 1.0*tmp_131;
      real_t tmp_384 = tmp_130*tmp_381;
      real_t tmp_385 = 1.0*tmp_134;
      real_t tmp_386 = tmp_133*tmp_381;
      real_t tmp_387 = 1.0*tmp_137;
      real_t tmp_388 = tmp_136*tmp_381;
      real_t tmp_389 = tmp_26*tmp_357;
      real_t tmp_390 = tmp_33*tmp_389;
      real_t tmp_391 = tmp_28*tmp_354;
      real_t tmp_392 = tmp_32*tmp_391;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_32*tmp_368;
      real_t tmp_397 = tmp_31*tmp_389;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_338*tmp_358;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = 1.0*tmp_145;
      real_t tmp_404 = tmp_31*tmp_338;
      real_t tmp_405 = tmp_144*tmp_404;
      real_t tmp_406 = 1.0*tmp_148;
      real_t tmp_407 = tmp_147*tmp_404;
      real_t tmp_408 = 1.0*tmp_151;
      real_t tmp_409 = tmp_150*tmp_404;
      real_t tmp_410 = 1.0*tmp_154;
      real_t tmp_411 = tmp_153*tmp_404;
      real_t tmp_412 = tmp_357*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_33*tmp_412;
      real_t tmp_415 = tmp_31*tmp_391;
      real_t tmp_416 = tmp_32*tmp_412;
      real_t tmp_417 = tmp_31*tmp_355;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_338*tmp_370;
      real_t tmp_421 = tmp_107*tmp_6;
      real_t tmp_422 = 0.25*tmp_421;
      real_t tmp_423 = tmp_107*tmp_26;
      real_t tmp_424 = 0.25*tmp_423;
      real_t tmp_425 = tmp_422 + tmp_424;
      real_t tmp_426 = 2*tmp_425;
      real_t tmp_427 = (2.0/3.0)*tmp_163;
      real_t tmp_428 = 0.16666666666666666*tmp_421;
      real_t tmp_429 = 0.5*tmp_423;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_171;
      real_t tmp_433 = 0.5*tmp_421;
      real_t tmp_434 = 0.16666666666666666*tmp_423;
      real_t tmp_435 = tmp_433 + tmp_434;
      real_t tmp_436 = 2*tmp_435;
      real_t tmp_437 = (2.0/3.0)*tmp_179;
      real_t tmp_438 = 0.16666666666666666*tmp_421;
      real_t tmp_439 = 0.16666666666666666*tmp_423;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = 2*tmp_440;
      real_t tmp_442 = (2.0/3.0)*tmp_187;
      real_t tmp_443 = 0.16666666666666666*tmp_421;
      real_t tmp_444 = 0.16666666666666666*tmp_423;
      real_t tmp_445 = tmp_443 + tmp_444;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_195;
      real_t tmp_448 = 0.25*tmp_421;
      real_t tmp_449 = tmp_107*tmp_28;
      real_t tmp_450 = 0.25*tmp_449;
      real_t tmp_451 = tmp_448 + tmp_450;
      real_t tmp_452 = 2*tmp_451;
      real_t tmp_453 = (2.0/3.0)*tmp_202;
      real_t tmp_454 = 0.16666666666666666*tmp_421;
      real_t tmp_455 = 0.5*tmp_449;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = 2*tmp_456;
      real_t tmp_458 = (2.0/3.0)*tmp_209;
      real_t tmp_459 = 0.16666666666666666*tmp_421;
      real_t tmp_460 = 0.16666666666666666*tmp_449;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = 2*tmp_461;
      real_t tmp_463 = (2.0/3.0)*tmp_216;
      real_t tmp_464 = 0.5*tmp_421;
      real_t tmp_465 = 0.16666666666666666*tmp_449;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = 2*tmp_466;
      real_t tmp_468 = (2.0/3.0)*tmp_223;
      real_t tmp_469 = 0.16666666666666666*tmp_421;
      real_t tmp_470 = 0.16666666666666666*tmp_449;
      real_t tmp_471 = tmp_469 + tmp_470;
      real_t tmp_472 = 2*tmp_471;
      real_t tmp_473 = (2.0/3.0)*tmp_230;
      real_t tmp_474 = 0.25*tmp_423;
      real_t tmp_475 = 0.25*tmp_449;
      real_t tmp_476 = tmp_474 + tmp_475;
      real_t tmp_477 = 2*tmp_476;
      real_t tmp_478 = (2.0/3.0)*tmp_236;
      real_t tmp_479 = 0.16666666666666666*tmp_423;
      real_t tmp_480 = 0.16666666666666666*tmp_449;
      real_t tmp_481 = tmp_479 + tmp_480;
      real_t tmp_482 = 2*tmp_481;
      real_t tmp_483 = (2.0/3.0)*tmp_242;
      real_t tmp_484 = 0.16666666666666666*tmp_423;
      real_t tmp_485 = 0.5*tmp_449;
      real_t tmp_486 = tmp_484 + tmp_485;
      real_t tmp_487 = 2*tmp_486;
      real_t tmp_488 = (2.0/3.0)*tmp_248;
      real_t tmp_489 = 0.5*tmp_423;
      real_t tmp_490 = 0.16666666666666666*tmp_449;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = 2*tmp_491;
      real_t tmp_493 = (2.0/3.0)*tmp_254;
      real_t tmp_494 = 0.16666666666666666*tmp_423;
      real_t tmp_495 = 0.16666666666666666*tmp_449;
      real_t tmp_496 = tmp_494 + tmp_495;
      real_t tmp_497 = 2*tmp_496;
      real_t tmp_498 = (2.0/3.0)*tmp_260;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_424 - tmp_450;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_429 - tmp_455;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_434 - tmp_460;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_439 - tmp_465;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_444 - tmp_470;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_422 - tmp_475;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_428 - tmp_480;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_433 - tmp_485;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_438 - tmp_490;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_443 - tmp_495;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_448 - tmp_474;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_454 - tmp_479;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_459 - tmp_484;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_464 - tmp_489;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_469 - tmp_494;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(tmp_347*tmp_99 - tmp_348*tmp_98) + tmp_51*(tmp_336*tmp_34 - tmp_337*tmp_339) + tmp_64*(tmp_340*tmp_60 - tmp_342*tmp_59) + tmp_77*(tmp_343*tmp_73 - tmp_344*tmp_72) + tmp_90*(tmp_345*tmp_86 - tmp_346*tmp_85);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(-tmp_362*tmp_367 + tmp_364*tmp_367) + tmp_51*(-tmp_355*tmp_356 + tmp_357*tmp_360) + tmp_64*(-tmp_361*tmp_362 + tmp_361*tmp_364) + tmp_77*(-tmp_362*tmp_365 + tmp_364*tmp_365) + tmp_90*(-tmp_362*tmp_366 + tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(-tmp_373*tmp_377 + tmp_374*tmp_377) + tmp_51*(-tmp_337*tmp_369 + tmp_359*tmp_371) + tmp_64*(-tmp_372*tmp_373 + tmp_372*tmp_374) + tmp_77*(-tmp_373*tmp_375 + tmp_374*tmp_375) + tmp_90*(-tmp_373*tmp_376 + tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_348 + tmp_195*tmp_347) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_336) + tmp_64*(-tmp_168*tmp_342 + tmp_171*tmp_340) + tmp_77*(-tmp_176*tmp_344 + tmp_179*tmp_343) + tmp_90*(-tmp_184*tmp_346 + tmp_187*tmp_345);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_348 + tmp_230*tmp_347) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_336) + tmp_64*(-tmp_206*tmp_342 + tmp_209*tmp_340) + tmp_77*(-tmp_213*tmp_344 + tmp_216*tmp_343) + tmp_90*(-tmp_220*tmp_346 + tmp_223*tmp_345);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_348 + tmp_260*tmp_347) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_336) + tmp_64*(-tmp_239*tmp_342 + tmp_242*tmp_340) + tmp_77*(-tmp_245*tmp_344 + tmp_248*tmp_343) + tmp_90*(-tmp_251*tmp_346 + tmp_254*tmp_345);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_348 + tmp_290*tmp_347) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_336) + tmp_64*(-tmp_271*tmp_342 + tmp_272*tmp_340) + tmp_77*(-tmp_277*tmp_344 + tmp_278*tmp_343) + tmp_90*(-tmp_283*tmp_346 + tmp_284*tmp_345);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_348 + tmp_315*tmp_347) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_336) + tmp_64*(-tmp_299*tmp_342 + tmp_300*tmp_340) + tmp_77*(-tmp_304*tmp_344 + tmp_305*tmp_343) + tmp_90*(-tmp_309*tmp_346 + tmp_310*tmp_345);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_348 + tmp_335*tmp_347) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_336) + tmp_64*(-tmp_322*tmp_342 + tmp_323*tmp_340) + tmp_77*(-tmp_326*tmp_344 + tmp_327*tmp_343) + tmp_90*(-tmp_330*tmp_346 + tmp_331*tmp_345);
      real_t a_2_0 = tmp_103*(tmp_387*tmp_99 - tmp_388*tmp_98) + tmp_51*(-tmp_339*tmp_358 + tmp_34*tmp_379) + tmp_64*(tmp_380*tmp_60 - tmp_382*tmp_59) + tmp_77*(tmp_383*tmp_73 - tmp_384*tmp_72) + tmp_90*(tmp_385*tmp_86 - tmp_386*tmp_85);
      real_t a_2_1 = tmp_103*(tmp_367*tmp_390 - tmp_367*tmp_392) + tmp_51*(-tmp_354*tmp_360 + tmp_356*tmp_389) + tmp_64*(tmp_361*tmp_390 - tmp_361*tmp_392) + tmp_77*(tmp_365*tmp_390 - tmp_365*tmp_392) + tmp_90*(tmp_366*tmp_390 - tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(-tmp_396*tmp_400 + tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_371 - tmp_358*tmp_369) + tmp_64*(-tmp_395*tmp_396 + tmp_395*tmp_397) + tmp_77*(-tmp_396*tmp_398 + tmp_397*tmp_398) + tmp_90*(-tmp_396*tmp_399 + tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_388 + tmp_195*tmp_387) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_382 + tmp_171*tmp_380) + tmp_77*(-tmp_176*tmp_384 + tmp_179*tmp_383) + tmp_90*(-tmp_184*tmp_386 + tmp_187*tmp_385);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_388 + tmp_230*tmp_387) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_382 + tmp_209*tmp_380) + tmp_77*(-tmp_213*tmp_384 + tmp_216*tmp_383) + tmp_90*(-tmp_220*tmp_386 + tmp_223*tmp_385);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_388 + tmp_260*tmp_387) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_382 + tmp_242*tmp_380) + tmp_77*(-tmp_245*tmp_384 + tmp_248*tmp_383) + tmp_90*(-tmp_251*tmp_386 + tmp_254*tmp_385);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_388 + tmp_290*tmp_387) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_382 + tmp_272*tmp_380) + tmp_77*(-tmp_277*tmp_384 + tmp_278*tmp_383) + tmp_90*(-tmp_283*tmp_386 + tmp_284*tmp_385);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_388 + tmp_315*tmp_387) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_382 + tmp_300*tmp_380) + tmp_77*(-tmp_304*tmp_384 + tmp_305*tmp_383) + tmp_90*(-tmp_309*tmp_386 + tmp_310*tmp_385);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_388 + tmp_335*tmp_387) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_382 + tmp_323*tmp_380) + tmp_77*(-tmp_326*tmp_384 + tmp_327*tmp_383) + tmp_90*(-tmp_330*tmp_386 + tmp_331*tmp_385);
      real_t a_3_0 = tmp_103*(tmp_410*tmp_99 - tmp_411*tmp_98) + tmp_51*(-tmp_339*tmp_370 + tmp_34*tmp_402) + tmp_64*(tmp_403*tmp_60 - tmp_405*tmp_59) + tmp_77*(tmp_406*tmp_73 - tmp_407*tmp_72) + tmp_90*(tmp_408*tmp_86 - tmp_409*tmp_85);
      real_t a_3_1 = tmp_103*(tmp_377*tmp_414 - tmp_377*tmp_415) + tmp_51*(tmp_337*tmp_413 - tmp_354*tmp_359*tmp_370) + tmp_64*(tmp_372*tmp_414 - tmp_372*tmp_415) + tmp_77*(tmp_375*tmp_414 - tmp_375*tmp_415) + tmp_90*(tmp_376*tmp_414 - tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(tmp_400*tmp_416 - tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_355*tmp_370 + tmp_358*tmp_413) + tmp_64*(tmp_395*tmp_416 - tmp_395*tmp_417) + tmp_77*(tmp_398*tmp_416 - tmp_398*tmp_417) + tmp_90*(tmp_399*tmp_416 - tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_411 + tmp_195*tmp_410) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_405 + tmp_171*tmp_403) + tmp_77*(-tmp_176*tmp_407 + tmp_179*tmp_406) + tmp_90*(-tmp_184*tmp_409 + tmp_187*tmp_408);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_411 + tmp_230*tmp_410) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_405 + tmp_209*tmp_403) + tmp_77*(-tmp_213*tmp_407 + tmp_216*tmp_406) + tmp_90*(-tmp_220*tmp_409 + tmp_223*tmp_408);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_411 + tmp_260*tmp_410) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_405 + tmp_242*tmp_403) + tmp_77*(-tmp_245*tmp_407 + tmp_248*tmp_406) + tmp_90*(-tmp_251*tmp_409 + tmp_254*tmp_408);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_411 + tmp_290*tmp_410) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_405 + tmp_272*tmp_403) + tmp_77*(-tmp_277*tmp_407 + tmp_278*tmp_406) + tmp_90*(-tmp_283*tmp_409 + tmp_284*tmp_408);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_411 + tmp_315*tmp_410) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_405 + tmp_300*tmp_403) + tmp_77*(-tmp_304*tmp_407 + tmp_305*tmp_406) + tmp_90*(-tmp_309*tmp_409 + tmp_310*tmp_408);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_411 + tmp_335*tmp_410) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_405 + tmp_323*tmp_403) + tmp_77*(-tmp_326*tmp_407 + tmp_327*tmp_406) + tmp_90*(-tmp_330*tmp_409 + tmp_331*tmp_408);
      real_t a_4_0 = tmp_103*(tmp_446*tmp_99 - tmp_447*tmp_98) + tmp_51*(-tmp_30*tmp_427 + tmp_34*tmp_426) + tmp_64*(tmp_431*tmp_60 - tmp_432*tmp_59) + tmp_77*(tmp_436*tmp_73 - tmp_437*tmp_72) + tmp_90*(tmp_441*tmp_86 - tmp_442*tmp_85);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_447 + tmp_121*tmp_445) + tmp_51*(-tmp_106*tmp_427 + tmp_109*tmp_425) + tmp_64*(-tmp_111*tmp_432 + tmp_112*tmp_430) + tmp_77*(-tmp_114*tmp_437 + tmp_115*tmp_435) + tmp_90*(-tmp_117*tmp_442 + tmp_118*tmp_440);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_447 + tmp_138*tmp_445) + tmp_51*(-tmp_124*tmp_427 + tmp_126*tmp_425) + tmp_64*(-tmp_128*tmp_432 + tmp_129*tmp_430) + tmp_77*(-tmp_131*tmp_437 + tmp_132*tmp_435) + tmp_90*(-tmp_134*tmp_442 + tmp_135*tmp_440);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_447 + tmp_155*tmp_445) + tmp_51*(-tmp_141*tmp_427 + tmp_143*tmp_425) + tmp_64*(-tmp_145*tmp_432 + tmp_146*tmp_430) + tmp_77*(-tmp_148*tmp_437 + tmp_149*tmp_435) + tmp_90*(-tmp_151*tmp_442 + tmp_152*tmp_440);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_447 + tmp_195*tmp_446) + tmp_51*(-tmp_160*tmp_427 + tmp_163*tmp_426) + tmp_64*(-tmp_168*tmp_432 + tmp_171*tmp_431) + tmp_77*(-tmp_176*tmp_437 + tmp_179*tmp_436) + tmp_90*(-tmp_184*tmp_442 + tmp_187*tmp_441);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_447 + tmp_230*tmp_446) + tmp_51*(-tmp_199*tmp_427 + tmp_202*tmp_426) + tmp_64*(-tmp_206*tmp_432 + tmp_209*tmp_431) + tmp_77*(-tmp_213*tmp_437 + tmp_216*tmp_436) + tmp_90*(-tmp_220*tmp_442 + tmp_223*tmp_441);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_447 + tmp_260*tmp_446) + tmp_51*(-tmp_233*tmp_427 + tmp_236*tmp_426) + tmp_64*(-tmp_239*tmp_432 + tmp_242*tmp_431) + tmp_77*(-tmp_245*tmp_437 + tmp_248*tmp_436) + tmp_90*(-tmp_251*tmp_442 + tmp_254*tmp_441);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_447 + tmp_290*tmp_446) + tmp_51*(-tmp_265*tmp_427 + tmp_266*tmp_426) + tmp_64*(-tmp_271*tmp_432 + tmp_272*tmp_431) + tmp_77*(-tmp_277*tmp_437 + tmp_278*tmp_436) + tmp_90*(-tmp_283*tmp_442 + tmp_284*tmp_441);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_447 + tmp_315*tmp_446) + tmp_51*(-tmp_294*tmp_427 + tmp_295*tmp_426) + tmp_64*(-tmp_299*tmp_432 + tmp_300*tmp_431) + tmp_77*(-tmp_304*tmp_437 + tmp_305*tmp_436) + tmp_90*(-tmp_309*tmp_442 + tmp_310*tmp_441);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_447 + tmp_335*tmp_446) + tmp_51*(-tmp_318*tmp_427 + tmp_319*tmp_426) + tmp_64*(-tmp_322*tmp_432 + tmp_323*tmp_431) + tmp_77*(-tmp_326*tmp_437 + tmp_327*tmp_436) + tmp_90*(-tmp_330*tmp_442 + tmp_331*tmp_441);
      real_t a_5_0 = tmp_103*(tmp_472*tmp_99 - tmp_473*tmp_98) + tmp_51*(-tmp_30*tmp_453 + tmp_34*tmp_452) + tmp_64*(tmp_457*tmp_60 - tmp_458*tmp_59) + tmp_77*(tmp_462*tmp_73 - tmp_463*tmp_72) + tmp_90*(tmp_467*tmp_86 - tmp_468*tmp_85);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_473 + tmp_121*tmp_471) + tmp_51*(-tmp_106*tmp_453 + tmp_109*tmp_451) + tmp_64*(-tmp_111*tmp_458 + tmp_112*tmp_456) + tmp_77*(-tmp_114*tmp_463 + tmp_115*tmp_461) + tmp_90*(-tmp_117*tmp_468 + tmp_118*tmp_466);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_473 + tmp_138*tmp_471) + tmp_51*(-tmp_124*tmp_453 + tmp_126*tmp_451) + tmp_64*(-tmp_128*tmp_458 + tmp_129*tmp_456) + tmp_77*(-tmp_131*tmp_463 + tmp_132*tmp_461) + tmp_90*(-tmp_134*tmp_468 + tmp_135*tmp_466);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_473 + tmp_155*tmp_471) + tmp_51*(-tmp_141*tmp_453 + tmp_143*tmp_451) + tmp_64*(-tmp_145*tmp_458 + tmp_146*tmp_456) + tmp_77*(-tmp_148*tmp_463 + tmp_149*tmp_461) + tmp_90*(-tmp_151*tmp_468 + tmp_152*tmp_466);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_473 + tmp_195*tmp_472) + tmp_51*(-tmp_160*tmp_453 + tmp_163*tmp_452) + tmp_64*(-tmp_168*tmp_458 + tmp_171*tmp_457) + tmp_77*(-tmp_176*tmp_463 + tmp_179*tmp_462) + tmp_90*(-tmp_184*tmp_468 + tmp_187*tmp_467);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_473 + tmp_230*tmp_472) + tmp_51*(-tmp_199*tmp_453 + tmp_202*tmp_452) + tmp_64*(-tmp_206*tmp_458 + tmp_209*tmp_457) + tmp_77*(-tmp_213*tmp_463 + tmp_216*tmp_462) + tmp_90*(-tmp_220*tmp_468 + tmp_223*tmp_467);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_473 + tmp_260*tmp_472) + tmp_51*(-tmp_233*tmp_453 + tmp_236*tmp_452) + tmp_64*(-tmp_239*tmp_458 + tmp_242*tmp_457) + tmp_77*(-tmp_245*tmp_463 + tmp_248*tmp_462) + tmp_90*(-tmp_251*tmp_468 + tmp_254*tmp_467);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_473 + tmp_290*tmp_472) + tmp_51*(-tmp_265*tmp_453 + tmp_266*tmp_452) + tmp_64*(-tmp_271*tmp_458 + tmp_272*tmp_457) + tmp_77*(-tmp_277*tmp_463 + tmp_278*tmp_462) + tmp_90*(-tmp_283*tmp_468 + tmp_284*tmp_467);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_473 + tmp_315*tmp_472) + tmp_51*(-tmp_294*tmp_453 + tmp_295*tmp_452) + tmp_64*(-tmp_299*tmp_458 + tmp_300*tmp_457) + tmp_77*(-tmp_304*tmp_463 + tmp_305*tmp_462) + tmp_90*(-tmp_309*tmp_468 + tmp_310*tmp_467);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_473 + tmp_335*tmp_472) + tmp_51*(-tmp_318*tmp_453 + tmp_319*tmp_452) + tmp_64*(-tmp_322*tmp_458 + tmp_323*tmp_457) + tmp_77*(-tmp_326*tmp_463 + tmp_327*tmp_462) + tmp_90*(-tmp_330*tmp_468 + tmp_331*tmp_467);
      real_t a_6_0 = tmp_103*(tmp_497*tmp_99 - tmp_498*tmp_98) + tmp_51*(-tmp_30*tmp_478 + tmp_34*tmp_477) + tmp_64*(tmp_482*tmp_60 - tmp_483*tmp_59) + tmp_77*(tmp_487*tmp_73 - tmp_488*tmp_72) + tmp_90*(tmp_492*tmp_86 - tmp_493*tmp_85);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_498 + tmp_121*tmp_496) + tmp_51*(-tmp_106*tmp_478 + tmp_109*tmp_476) + tmp_64*(-tmp_111*tmp_483 + tmp_112*tmp_481) + tmp_77*(-tmp_114*tmp_488 + tmp_115*tmp_486) + tmp_90*(-tmp_117*tmp_493 + tmp_118*tmp_491);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_498 + tmp_138*tmp_496) + tmp_51*(-tmp_124*tmp_478 + tmp_126*tmp_476) + tmp_64*(-tmp_128*tmp_483 + tmp_129*tmp_481) + tmp_77*(-tmp_131*tmp_488 + tmp_132*tmp_486) + tmp_90*(-tmp_134*tmp_493 + tmp_135*tmp_491);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_498 + tmp_155*tmp_496) + tmp_51*(-tmp_141*tmp_478 + tmp_143*tmp_476) + tmp_64*(-tmp_145*tmp_483 + tmp_146*tmp_481) + tmp_77*(-tmp_148*tmp_488 + tmp_149*tmp_486) + tmp_90*(-tmp_151*tmp_493 + tmp_152*tmp_491);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_498 + tmp_195*tmp_497) + tmp_51*(-tmp_160*tmp_478 + tmp_163*tmp_477) + tmp_64*(-tmp_168*tmp_483 + tmp_171*tmp_482) + tmp_77*(-tmp_176*tmp_488 + tmp_179*tmp_487) + tmp_90*(-tmp_184*tmp_493 + tmp_187*tmp_492);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_498 + tmp_230*tmp_497) + tmp_51*(-tmp_199*tmp_478 + tmp_202*tmp_477) + tmp_64*(-tmp_206*tmp_483 + tmp_209*tmp_482) + tmp_77*(-tmp_213*tmp_488 + tmp_216*tmp_487) + tmp_90*(-tmp_220*tmp_493 + tmp_223*tmp_492);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_498 + tmp_260*tmp_497) + tmp_51*(-tmp_233*tmp_478 + tmp_236*tmp_477) + tmp_64*(-tmp_239*tmp_483 + tmp_242*tmp_482) + tmp_77*(-tmp_245*tmp_488 + tmp_248*tmp_487) + tmp_90*(-tmp_251*tmp_493 + tmp_254*tmp_492);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_498 + tmp_290*tmp_497) + tmp_51*(-tmp_265*tmp_478 + tmp_266*tmp_477) + tmp_64*(-tmp_271*tmp_483 + tmp_272*tmp_482) + tmp_77*(-tmp_277*tmp_488 + tmp_278*tmp_487) + tmp_90*(-tmp_283*tmp_493 + tmp_284*tmp_492);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_498 + tmp_315*tmp_497) + tmp_51*(-tmp_294*tmp_478 + tmp_295*tmp_477) + tmp_64*(-tmp_299*tmp_483 + tmp_300*tmp_482) + tmp_77*(-tmp_304*tmp_488 + tmp_305*tmp_487) + tmp_90*(-tmp_309*tmp_493 + tmp_310*tmp_492);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_498 + tmp_335*tmp_497) + tmp_51*(-tmp_318*tmp_478 + tmp_319*tmp_477) + tmp_64*(-tmp_322*tmp_483 + tmp_323*tmp_482) + tmp_77*(-tmp_326*tmp_488 + tmp_327*tmp_487) + tmp_90*(-tmp_330*tmp_493 + tmp_331*tmp_492);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_1_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_3;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_11*tmp_5;
      real_t tmp_17 = tmp_14*tmp_9;
      real_t tmp_18 = tmp_3*tmp_8;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_16*tmp_4);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_9;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_9 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_18;
      real_t tmp_30 = tmp_12 - tmp_17;
      real_t tmp_31 = tmp_10 - tmp_16;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_0_2_affine_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_0_2_affine_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_0_2_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = -tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_15 - tmp_18;
      real_t tmp_32 = tmp_12 - tmp_17;
      real_t tmp_33 = -tmp_16 + tmp_9;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = 1.0*tmp_106;
      real_t tmp_337 = tmp_104*tmp_33;
      real_t tmp_338 = (2.0/3.0)*tmp_20;
      real_t tmp_339 = tmp_30*tmp_338;
      real_t tmp_340 = 1.0*tmp_111;
      real_t tmp_341 = tmp_33*tmp_338;
      real_t tmp_342 = tmp_110*tmp_341;
      real_t tmp_343 = 1.0*tmp_114;
      real_t tmp_344 = tmp_113*tmp_341;
      real_t tmp_345 = 1.0*tmp_117;
      real_t tmp_346 = tmp_116*tmp_341;
      real_t tmp_347 = 1.0*tmp_120;
      real_t tmp_348 = tmp_119*tmp_341;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = (2.0/3.0)*tmp_349;
      real_t tmp_355 = tmp_26*tmp_354;
      real_t tmp_356 = tmp_122*tmp_337;
      real_t tmp_357 = 1.0*tmp_349;
      real_t tmp_358 = tmp_122*tmp_32;
      real_t tmp_359 = tmp_104*tmp_28;
      real_t tmp_360 = tmp_358*tmp_359;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_33*tmp_355;
      real_t tmp_363 = tmp_28*tmp_357;
      real_t tmp_364 = tmp_32*tmp_363;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_354*tmp_6;
      real_t tmp_369 = tmp_139*tmp_368;
      real_t tmp_370 = tmp_139*tmp_31;
      real_t tmp_371 = tmp_357*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_33*tmp_368;
      real_t tmp_374 = tmp_31*tmp_363;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_337*tmp_338;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = 1.0*tmp_128;
      real_t tmp_381 = tmp_32*tmp_338;
      real_t tmp_382 = tmp_127*tmp_381;
      real_t tmp_383 = 1.0*tmp_131;
      real_t tmp_384 = tmp_130*tmp_381;
      real_t tmp_385 = 1.0*tmp_134;
      real_t tmp_386 = tmp_133*tmp_381;
      real_t tmp_387 = 1.0*tmp_137;
      real_t tmp_388 = tmp_136*tmp_381;
      real_t tmp_389 = tmp_26*tmp_357;
      real_t tmp_390 = tmp_33*tmp_389;
      real_t tmp_391 = tmp_28*tmp_354;
      real_t tmp_392 = tmp_32*tmp_391;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_32*tmp_368;
      real_t tmp_397 = tmp_31*tmp_389;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_338*tmp_358;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = 1.0*tmp_145;
      real_t tmp_404 = tmp_31*tmp_338;
      real_t tmp_405 = tmp_144*tmp_404;
      real_t tmp_406 = 1.0*tmp_148;
      real_t tmp_407 = tmp_147*tmp_404;
      real_t tmp_408 = 1.0*tmp_151;
      real_t tmp_409 = tmp_150*tmp_404;
      real_t tmp_410 = 1.0*tmp_154;
      real_t tmp_411 = tmp_153*tmp_404;
      real_t tmp_412 = tmp_357*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_33*tmp_412;
      real_t tmp_415 = tmp_31*tmp_391;
      real_t tmp_416 = tmp_32*tmp_412;
      real_t tmp_417 = tmp_31*tmp_355;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_338*tmp_370;
      real_t tmp_421 = tmp_107*tmp_6;
      real_t tmp_422 = 0.25*tmp_421;
      real_t tmp_423 = tmp_107*tmp_26;
      real_t tmp_424 = 0.25*tmp_423;
      real_t tmp_425 = tmp_422 + tmp_424;
      real_t tmp_426 = 2*tmp_425;
      real_t tmp_427 = (2.0/3.0)*tmp_163;
      real_t tmp_428 = 0.16666666666666666*tmp_421;
      real_t tmp_429 = 0.5*tmp_423;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_171;
      real_t tmp_433 = 0.5*tmp_421;
      real_t tmp_434 = 0.16666666666666666*tmp_423;
      real_t tmp_435 = tmp_433 + tmp_434;
      real_t tmp_436 = 2*tmp_435;
      real_t tmp_437 = (2.0/3.0)*tmp_179;
      real_t tmp_438 = 0.16666666666666666*tmp_421;
      real_t tmp_439 = 0.16666666666666666*tmp_423;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = 2*tmp_440;
      real_t tmp_442 = (2.0/3.0)*tmp_187;
      real_t tmp_443 = 0.16666666666666666*tmp_421;
      real_t tmp_444 = 0.16666666666666666*tmp_423;
      real_t tmp_445 = tmp_443 + tmp_444;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_195;
      real_t tmp_448 = 0.25*tmp_421;
      real_t tmp_449 = tmp_107*tmp_28;
      real_t tmp_450 = 0.25*tmp_449;
      real_t tmp_451 = tmp_448 + tmp_450;
      real_t tmp_452 = 2*tmp_451;
      real_t tmp_453 = (2.0/3.0)*tmp_202;
      real_t tmp_454 = 0.16666666666666666*tmp_421;
      real_t tmp_455 = 0.5*tmp_449;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = 2*tmp_456;
      real_t tmp_458 = (2.0/3.0)*tmp_209;
      real_t tmp_459 = 0.16666666666666666*tmp_421;
      real_t tmp_460 = 0.16666666666666666*tmp_449;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = 2*tmp_461;
      real_t tmp_463 = (2.0/3.0)*tmp_216;
      real_t tmp_464 = 0.5*tmp_421;
      real_t tmp_465 = 0.16666666666666666*tmp_449;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = 2*tmp_466;
      real_t tmp_468 = (2.0/3.0)*tmp_223;
      real_t tmp_469 = 0.16666666666666666*tmp_421;
      real_t tmp_470 = 0.16666666666666666*tmp_449;
      real_t tmp_471 = tmp_469 + tmp_470;
      real_t tmp_472 = 2*tmp_471;
      real_t tmp_473 = (2.0/3.0)*tmp_230;
      real_t tmp_474 = 0.25*tmp_423;
      real_t tmp_475 = 0.25*tmp_449;
      real_t tmp_476 = tmp_474 + tmp_475;
      real_t tmp_477 = 2*tmp_476;
      real_t tmp_478 = (2.0/3.0)*tmp_236;
      real_t tmp_479 = 0.16666666666666666*tmp_423;
      real_t tmp_480 = 0.16666666666666666*tmp_449;
      real_t tmp_481 = tmp_479 + tmp_480;
      real_t tmp_482 = 2*tmp_481;
      real_t tmp_483 = (2.0/3.0)*tmp_242;
      real_t tmp_484 = 0.16666666666666666*tmp_423;
      real_t tmp_485 = 0.5*tmp_449;
      real_t tmp_486 = tmp_484 + tmp_485;
      real_t tmp_487 = 2*tmp_486;
      real_t tmp_488 = (2.0/3.0)*tmp_248;
      real_t tmp_489 = 0.5*tmp_423;
      real_t tmp_490 = 0.16666666666666666*tmp_449;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = 2*tmp_491;
      real_t tmp_493 = (2.0/3.0)*tmp_254;
      real_t tmp_494 = 0.16666666666666666*tmp_423;
      real_t tmp_495 = 0.16666666666666666*tmp_449;
      real_t tmp_496 = tmp_494 + tmp_495;
      real_t tmp_497 = 2*tmp_496;
      real_t tmp_498 = (2.0/3.0)*tmp_260;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_424 - tmp_450;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_429 - tmp_455;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_434 - tmp_460;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_439 - tmp_465;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_444 - tmp_470;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_422 - tmp_475;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_428 - tmp_480;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_433 - tmp_485;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_438 - tmp_490;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_443 - tmp_495;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_448 - tmp_474;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_454 - tmp_479;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_459 - tmp_484;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_464 - tmp_489;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_469 - tmp_494;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(tmp_347*tmp_99 - tmp_348*tmp_98) + tmp_51*(tmp_336*tmp_34 - tmp_337*tmp_339) + tmp_64*(tmp_340*tmp_60 - tmp_342*tmp_59) + tmp_77*(tmp_343*tmp_73 - tmp_344*tmp_72) + tmp_90*(tmp_345*tmp_86 - tmp_346*tmp_85);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(-tmp_362*tmp_367 + tmp_364*tmp_367) + tmp_51*(-tmp_355*tmp_356 + tmp_357*tmp_360) + tmp_64*(-tmp_361*tmp_362 + tmp_361*tmp_364) + tmp_77*(-tmp_362*tmp_365 + tmp_364*tmp_365) + tmp_90*(-tmp_362*tmp_366 + tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(-tmp_373*tmp_377 + tmp_374*tmp_377) + tmp_51*(-tmp_337*tmp_369 + tmp_359*tmp_371) + tmp_64*(-tmp_372*tmp_373 + tmp_372*tmp_374) + tmp_77*(-tmp_373*tmp_375 + tmp_374*tmp_375) + tmp_90*(-tmp_373*tmp_376 + tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_348 + tmp_195*tmp_347) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_336) + tmp_64*(-tmp_168*tmp_342 + tmp_171*tmp_340) + tmp_77*(-tmp_176*tmp_344 + tmp_179*tmp_343) + tmp_90*(-tmp_184*tmp_346 + tmp_187*tmp_345);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_348 + tmp_230*tmp_347) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_336) + tmp_64*(-tmp_206*tmp_342 + tmp_209*tmp_340) + tmp_77*(-tmp_213*tmp_344 + tmp_216*tmp_343) + tmp_90*(-tmp_220*tmp_346 + tmp_223*tmp_345);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_348 + tmp_260*tmp_347) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_336) + tmp_64*(-tmp_239*tmp_342 + tmp_242*tmp_340) + tmp_77*(-tmp_245*tmp_344 + tmp_248*tmp_343) + tmp_90*(-tmp_251*tmp_346 + tmp_254*tmp_345);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_348 + tmp_290*tmp_347) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_336) + tmp_64*(-tmp_271*tmp_342 + tmp_272*tmp_340) + tmp_77*(-tmp_277*tmp_344 + tmp_278*tmp_343) + tmp_90*(-tmp_283*tmp_346 + tmp_284*tmp_345);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_348 + tmp_315*tmp_347) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_336) + tmp_64*(-tmp_299*tmp_342 + tmp_300*tmp_340) + tmp_77*(-tmp_304*tmp_344 + tmp_305*tmp_343) + tmp_90*(-tmp_309*tmp_346 + tmp_310*tmp_345);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_348 + tmp_335*tmp_347) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_336) + tmp_64*(-tmp_322*tmp_342 + tmp_323*tmp_340) + tmp_77*(-tmp_326*tmp_344 + tmp_327*tmp_343) + tmp_90*(-tmp_330*tmp_346 + tmp_331*tmp_345);
      real_t a_2_0 = tmp_103*(tmp_387*tmp_99 - tmp_388*tmp_98) + tmp_51*(-tmp_339*tmp_358 + tmp_34*tmp_379) + tmp_64*(tmp_380*tmp_60 - tmp_382*tmp_59) + tmp_77*(tmp_383*tmp_73 - tmp_384*tmp_72) + tmp_90*(tmp_385*tmp_86 - tmp_386*tmp_85);
      real_t a_2_1 = tmp_103*(tmp_367*tmp_390 - tmp_367*tmp_392) + tmp_51*(-tmp_354*tmp_360 + tmp_356*tmp_389) + tmp_64*(tmp_361*tmp_390 - tmp_361*tmp_392) + tmp_77*(tmp_365*tmp_390 - tmp_365*tmp_392) + tmp_90*(tmp_366*tmp_390 - tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(-tmp_396*tmp_400 + tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_371 - tmp_358*tmp_369) + tmp_64*(-tmp_395*tmp_396 + tmp_395*tmp_397) + tmp_77*(-tmp_396*tmp_398 + tmp_397*tmp_398) + tmp_90*(-tmp_396*tmp_399 + tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_388 + tmp_195*tmp_387) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_382 + tmp_171*tmp_380) + tmp_77*(-tmp_176*tmp_384 + tmp_179*tmp_383) + tmp_90*(-tmp_184*tmp_386 + tmp_187*tmp_385);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_388 + tmp_230*tmp_387) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_382 + tmp_209*tmp_380) + tmp_77*(-tmp_213*tmp_384 + tmp_216*tmp_383) + tmp_90*(-tmp_220*tmp_386 + tmp_223*tmp_385);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_388 + tmp_260*tmp_387) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_382 + tmp_242*tmp_380) + tmp_77*(-tmp_245*tmp_384 + tmp_248*tmp_383) + tmp_90*(-tmp_251*tmp_386 + tmp_254*tmp_385);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_388 + tmp_290*tmp_387) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_382 + tmp_272*tmp_380) + tmp_77*(-tmp_277*tmp_384 + tmp_278*tmp_383) + tmp_90*(-tmp_283*tmp_386 + tmp_284*tmp_385);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_388 + tmp_315*tmp_387) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_382 + tmp_300*tmp_380) + tmp_77*(-tmp_304*tmp_384 + tmp_305*tmp_383) + tmp_90*(-tmp_309*tmp_386 + tmp_310*tmp_385);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_388 + tmp_335*tmp_387) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_382 + tmp_323*tmp_380) + tmp_77*(-tmp_326*tmp_384 + tmp_327*tmp_383) + tmp_90*(-tmp_330*tmp_386 + tmp_331*tmp_385);
      real_t a_3_0 = tmp_103*(tmp_410*tmp_99 - tmp_411*tmp_98) + tmp_51*(-tmp_339*tmp_370 + tmp_34*tmp_402) + tmp_64*(tmp_403*tmp_60 - tmp_405*tmp_59) + tmp_77*(tmp_406*tmp_73 - tmp_407*tmp_72) + tmp_90*(tmp_408*tmp_86 - tmp_409*tmp_85);
      real_t a_3_1 = tmp_103*(tmp_377*tmp_414 - tmp_377*tmp_415) + tmp_51*(tmp_337*tmp_413 - tmp_354*tmp_359*tmp_370) + tmp_64*(tmp_372*tmp_414 - tmp_372*tmp_415) + tmp_77*(tmp_375*tmp_414 - tmp_375*tmp_415) + tmp_90*(tmp_376*tmp_414 - tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(tmp_400*tmp_416 - tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_355*tmp_370 + tmp_358*tmp_413) + tmp_64*(tmp_395*tmp_416 - tmp_395*tmp_417) + tmp_77*(tmp_398*tmp_416 - tmp_398*tmp_417) + tmp_90*(tmp_399*tmp_416 - tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_411 + tmp_195*tmp_410) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_405 + tmp_171*tmp_403) + tmp_77*(-tmp_176*tmp_407 + tmp_179*tmp_406) + tmp_90*(-tmp_184*tmp_409 + tmp_187*tmp_408);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_411 + tmp_230*tmp_410) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_405 + tmp_209*tmp_403) + tmp_77*(-tmp_213*tmp_407 + tmp_216*tmp_406) + tmp_90*(-tmp_220*tmp_409 + tmp_223*tmp_408);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_411 + tmp_260*tmp_410) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_405 + tmp_242*tmp_403) + tmp_77*(-tmp_245*tmp_407 + tmp_248*tmp_406) + tmp_90*(-tmp_251*tmp_409 + tmp_254*tmp_408);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_411 + tmp_290*tmp_410) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_405 + tmp_272*tmp_403) + tmp_77*(-tmp_277*tmp_407 + tmp_278*tmp_406) + tmp_90*(-tmp_283*tmp_409 + tmp_284*tmp_408);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_411 + tmp_315*tmp_410) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_405 + tmp_300*tmp_403) + tmp_77*(-tmp_304*tmp_407 + tmp_305*tmp_406) + tmp_90*(-tmp_309*tmp_409 + tmp_310*tmp_408);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_411 + tmp_335*tmp_410) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_405 + tmp_323*tmp_403) + tmp_77*(-tmp_326*tmp_407 + tmp_327*tmp_406) + tmp_90*(-tmp_330*tmp_409 + tmp_331*tmp_408);
      real_t a_4_0 = tmp_103*(tmp_446*tmp_99 - tmp_447*tmp_98) + tmp_51*(-tmp_30*tmp_427 + tmp_34*tmp_426) + tmp_64*(tmp_431*tmp_60 - tmp_432*tmp_59) + tmp_77*(tmp_436*tmp_73 - tmp_437*tmp_72) + tmp_90*(tmp_441*tmp_86 - tmp_442*tmp_85);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_447 + tmp_121*tmp_445) + tmp_51*(-tmp_106*tmp_427 + tmp_109*tmp_425) + tmp_64*(-tmp_111*tmp_432 + tmp_112*tmp_430) + tmp_77*(-tmp_114*tmp_437 + tmp_115*tmp_435) + tmp_90*(-tmp_117*tmp_442 + tmp_118*tmp_440);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_447 + tmp_138*tmp_445) + tmp_51*(-tmp_124*tmp_427 + tmp_126*tmp_425) + tmp_64*(-tmp_128*tmp_432 + tmp_129*tmp_430) + tmp_77*(-tmp_131*tmp_437 + tmp_132*tmp_435) + tmp_90*(-tmp_134*tmp_442 + tmp_135*tmp_440);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_447 + tmp_155*tmp_445) + tmp_51*(-tmp_141*tmp_427 + tmp_143*tmp_425) + tmp_64*(-tmp_145*tmp_432 + tmp_146*tmp_430) + tmp_77*(-tmp_148*tmp_437 + tmp_149*tmp_435) + tmp_90*(-tmp_151*tmp_442 + tmp_152*tmp_440);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_447 + tmp_195*tmp_446) + tmp_51*(-tmp_160*tmp_427 + tmp_163*tmp_426) + tmp_64*(-tmp_168*tmp_432 + tmp_171*tmp_431) + tmp_77*(-tmp_176*tmp_437 + tmp_179*tmp_436) + tmp_90*(-tmp_184*tmp_442 + tmp_187*tmp_441);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_447 + tmp_230*tmp_446) + tmp_51*(-tmp_199*tmp_427 + tmp_202*tmp_426) + tmp_64*(-tmp_206*tmp_432 + tmp_209*tmp_431) + tmp_77*(-tmp_213*tmp_437 + tmp_216*tmp_436) + tmp_90*(-tmp_220*tmp_442 + tmp_223*tmp_441);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_447 + tmp_260*tmp_446) + tmp_51*(-tmp_233*tmp_427 + tmp_236*tmp_426) + tmp_64*(-tmp_239*tmp_432 + tmp_242*tmp_431) + tmp_77*(-tmp_245*tmp_437 + tmp_248*tmp_436) + tmp_90*(-tmp_251*tmp_442 + tmp_254*tmp_441);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_447 + tmp_290*tmp_446) + tmp_51*(-tmp_265*tmp_427 + tmp_266*tmp_426) + tmp_64*(-tmp_271*tmp_432 + tmp_272*tmp_431) + tmp_77*(-tmp_277*tmp_437 + tmp_278*tmp_436) + tmp_90*(-tmp_283*tmp_442 + tmp_284*tmp_441);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_447 + tmp_315*tmp_446) + tmp_51*(-tmp_294*tmp_427 + tmp_295*tmp_426) + tmp_64*(-tmp_299*tmp_432 + tmp_300*tmp_431) + tmp_77*(-tmp_304*tmp_437 + tmp_305*tmp_436) + tmp_90*(-tmp_309*tmp_442 + tmp_310*tmp_441);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_447 + tmp_335*tmp_446) + tmp_51*(-tmp_318*tmp_427 + tmp_319*tmp_426) + tmp_64*(-tmp_322*tmp_432 + tmp_323*tmp_431) + tmp_77*(-tmp_326*tmp_437 + tmp_327*tmp_436) + tmp_90*(-tmp_330*tmp_442 + tmp_331*tmp_441);
      real_t a_5_0 = tmp_103*(tmp_472*tmp_99 - tmp_473*tmp_98) + tmp_51*(-tmp_30*tmp_453 + tmp_34*tmp_452) + tmp_64*(tmp_457*tmp_60 - tmp_458*tmp_59) + tmp_77*(tmp_462*tmp_73 - tmp_463*tmp_72) + tmp_90*(tmp_467*tmp_86 - tmp_468*tmp_85);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_473 + tmp_121*tmp_471) + tmp_51*(-tmp_106*tmp_453 + tmp_109*tmp_451) + tmp_64*(-tmp_111*tmp_458 + tmp_112*tmp_456) + tmp_77*(-tmp_114*tmp_463 + tmp_115*tmp_461) + tmp_90*(-tmp_117*tmp_468 + tmp_118*tmp_466);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_473 + tmp_138*tmp_471) + tmp_51*(-tmp_124*tmp_453 + tmp_126*tmp_451) + tmp_64*(-tmp_128*tmp_458 + tmp_129*tmp_456) + tmp_77*(-tmp_131*tmp_463 + tmp_132*tmp_461) + tmp_90*(-tmp_134*tmp_468 + tmp_135*tmp_466);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_473 + tmp_155*tmp_471) + tmp_51*(-tmp_141*tmp_453 + tmp_143*tmp_451) + tmp_64*(-tmp_145*tmp_458 + tmp_146*tmp_456) + tmp_77*(-tmp_148*tmp_463 + tmp_149*tmp_461) + tmp_90*(-tmp_151*tmp_468 + tmp_152*tmp_466);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_473 + tmp_195*tmp_472) + tmp_51*(-tmp_160*tmp_453 + tmp_163*tmp_452) + tmp_64*(-tmp_168*tmp_458 + tmp_171*tmp_457) + tmp_77*(-tmp_176*tmp_463 + tmp_179*tmp_462) + tmp_90*(-tmp_184*tmp_468 + tmp_187*tmp_467);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_473 + tmp_230*tmp_472) + tmp_51*(-tmp_199*tmp_453 + tmp_202*tmp_452) + tmp_64*(-tmp_206*tmp_458 + tmp_209*tmp_457) + tmp_77*(-tmp_213*tmp_463 + tmp_216*tmp_462) + tmp_90*(-tmp_220*tmp_468 + tmp_223*tmp_467);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_473 + tmp_260*tmp_472) + tmp_51*(-tmp_233*tmp_453 + tmp_236*tmp_452) + tmp_64*(-tmp_239*tmp_458 + tmp_242*tmp_457) + tmp_77*(-tmp_245*tmp_463 + tmp_248*tmp_462) + tmp_90*(-tmp_251*tmp_468 + tmp_254*tmp_467);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_473 + tmp_290*tmp_472) + tmp_51*(-tmp_265*tmp_453 + tmp_266*tmp_452) + tmp_64*(-tmp_271*tmp_458 + tmp_272*tmp_457) + tmp_77*(-tmp_277*tmp_463 + tmp_278*tmp_462) + tmp_90*(-tmp_283*tmp_468 + tmp_284*tmp_467);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_473 + tmp_315*tmp_472) + tmp_51*(-tmp_294*tmp_453 + tmp_295*tmp_452) + tmp_64*(-tmp_299*tmp_458 + tmp_300*tmp_457) + tmp_77*(-tmp_304*tmp_463 + tmp_305*tmp_462) + tmp_90*(-tmp_309*tmp_468 + tmp_310*tmp_467);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_473 + tmp_335*tmp_472) + tmp_51*(-tmp_318*tmp_453 + tmp_319*tmp_452) + tmp_64*(-tmp_322*tmp_458 + tmp_323*tmp_457) + tmp_77*(-tmp_326*tmp_463 + tmp_327*tmp_462) + tmp_90*(-tmp_330*tmp_468 + tmp_331*tmp_467);
      real_t a_6_0 = tmp_103*(tmp_497*tmp_99 - tmp_498*tmp_98) + tmp_51*(-tmp_30*tmp_478 + tmp_34*tmp_477) + tmp_64*(tmp_482*tmp_60 - tmp_483*tmp_59) + tmp_77*(tmp_487*tmp_73 - tmp_488*tmp_72) + tmp_90*(tmp_492*tmp_86 - tmp_493*tmp_85);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_498 + tmp_121*tmp_496) + tmp_51*(-tmp_106*tmp_478 + tmp_109*tmp_476) + tmp_64*(-tmp_111*tmp_483 + tmp_112*tmp_481) + tmp_77*(-tmp_114*tmp_488 + tmp_115*tmp_486) + tmp_90*(-tmp_117*tmp_493 + tmp_118*tmp_491);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_498 + tmp_138*tmp_496) + tmp_51*(-tmp_124*tmp_478 + tmp_126*tmp_476) + tmp_64*(-tmp_128*tmp_483 + tmp_129*tmp_481) + tmp_77*(-tmp_131*tmp_488 + tmp_132*tmp_486) + tmp_90*(-tmp_134*tmp_493 + tmp_135*tmp_491);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_498 + tmp_155*tmp_496) + tmp_51*(-tmp_141*tmp_478 + tmp_143*tmp_476) + tmp_64*(-tmp_145*tmp_483 + tmp_146*tmp_481) + tmp_77*(-tmp_148*tmp_488 + tmp_149*tmp_486) + tmp_90*(-tmp_151*tmp_493 + tmp_152*tmp_491);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_498 + tmp_195*tmp_497) + tmp_51*(-tmp_160*tmp_478 + tmp_163*tmp_477) + tmp_64*(-tmp_168*tmp_483 + tmp_171*tmp_482) + tmp_77*(-tmp_176*tmp_488 + tmp_179*tmp_487) + tmp_90*(-tmp_184*tmp_493 + tmp_187*tmp_492);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_498 + tmp_230*tmp_497) + tmp_51*(-tmp_199*tmp_478 + tmp_202*tmp_477) + tmp_64*(-tmp_206*tmp_483 + tmp_209*tmp_482) + tmp_77*(-tmp_213*tmp_488 + tmp_216*tmp_487) + tmp_90*(-tmp_220*tmp_493 + tmp_223*tmp_492);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_498 + tmp_260*tmp_497) + tmp_51*(-tmp_233*tmp_478 + tmp_236*tmp_477) + tmp_64*(-tmp_239*tmp_483 + tmp_242*tmp_482) + tmp_77*(-tmp_245*tmp_488 + tmp_248*tmp_487) + tmp_90*(-tmp_251*tmp_493 + tmp_254*tmp_492);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_498 + tmp_290*tmp_497) + tmp_51*(-tmp_265*tmp_478 + tmp_266*tmp_477) + tmp_64*(-tmp_271*tmp_483 + tmp_272*tmp_482) + tmp_77*(-tmp_277*tmp_488 + tmp_278*tmp_487) + tmp_90*(-tmp_283*tmp_493 + tmp_284*tmp_492);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_498 + tmp_315*tmp_497) + tmp_51*(-tmp_294*tmp_478 + tmp_295*tmp_477) + tmp_64*(-tmp_299*tmp_483 + tmp_300*tmp_482) + tmp_77*(-tmp_304*tmp_488 + tmp_305*tmp_487) + tmp_90*(-tmp_309*tmp_493 + tmp_310*tmp_492);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_498 + tmp_335*tmp_497) + tmp_51*(-tmp_318*tmp_478 + tmp_319*tmp_477) + tmp_64*(-tmp_322*tmp_483 + tmp_323*tmp_482) + tmp_77*(-tmp_326*tmp_488 + tmp_327*tmp_487) + tmp_90*(-tmp_330*tmp_493 + tmp_331*tmp_492);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_2_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_18;
      real_t tmp_30 = tmp_12 - tmp_17;
      real_t tmp_31 = -tmp_16 + tmp_9;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_0_affine_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.71423491305446574;
      real_t tmp_8 = 0.62020410288672878;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = tmp_1*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_11*tmp_9;
      real_t tmp_13 = tmp_10 + tmp_12;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_14*tmp_9 + tmp_3*tmp_9;
      real_t tmp_16 = (2.0/3.0)*tmp_15;
      real_t tmp_17 = 0.5*tmp_10 + 0.5*tmp_12;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_20 = 0.15902069087198858*tmp_19;
      real_t tmp_21 = 0.3001244408904325;
      real_t tmp_22 = 2.5797958971132711;
      real_t tmp_23 = tmp_6*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = tmp_1*tmp_23;
      real_t tmp_25 = tmp_11*tmp_23;
      real_t tmp_26 = tmp_24 + tmp_25;
      real_t tmp_27 = tmp_14*tmp_23 + tmp_23*tmp_3;
      real_t tmp_28 = (2.0/3.0)*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_25;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = 0.090979309128011415*tmp_19;
      real_t tmp_32 = 2.6655609840588057;
      real_t tmp_33 = 0.62020410288672878;
      real_t tmp_34 = tmp_6*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_11*tmp_34;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_14*tmp_34 + tmp_3*tmp_34;
      real_t tmp_39 = (2.0/3.0)*tmp_38;
      real_t tmp_40 = 0.5*tmp_35 + 0.5*tmp_36;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 0.15902069087198858*tmp_19;
      real_t tmp_43 = 1.1200796619962963;
      real_t tmp_44 = 2.5797958971132711;
      real_t tmp_45 = tmp_6*(tmp_43 + tmp_44 - 3);
      real_t tmp_46 = tmp_1*tmp_45;
      real_t tmp_47 = tmp_11*tmp_45;
      real_t tmp_48 = tmp_46 + tmp_47;
      real_t tmp_49 = tmp_14*tmp_45 + tmp_3*tmp_45;
      real_t tmp_50 = (2.0/3.0)*tmp_49;
      real_t tmp_51 = 0.5*tmp_46 + 0.5*tmp_47;
      real_t tmp_52 = 2*tmp_51;
      real_t tmp_53 = 0.090979309128011415*tmp_19;
      real_t tmp_54 = tmp_7 - 1;
      real_t tmp_55 = tmp_1*tmp_6;
      real_t tmp_56 = tmp_54*tmp_55;
      real_t tmp_57 = tmp_14*tmp_6;
      real_t tmp_58 = 2.0*tmp_57;
      real_t tmp_59 = tmp_54*tmp_58;
      real_t tmp_60 = tmp_21 - 1;
      real_t tmp_61 = tmp_55*tmp_60;
      real_t tmp_62 = tmp_58*tmp_60;
      real_t tmp_63 = tmp_32 - 1;
      real_t tmp_64 = tmp_55*tmp_63;
      real_t tmp_65 = tmp_58*tmp_63;
      real_t tmp_66 = tmp_43 - 1;
      real_t tmp_67 = tmp_55*tmp_66;
      real_t tmp_68 = tmp_58*tmp_66;
      real_t tmp_69 = tmp_8 - 1;
      real_t tmp_70 = tmp_11*tmp_6;
      real_t tmp_71 = tmp_69*tmp_70;
      real_t tmp_72 = tmp_3*tmp_6;
      real_t tmp_73 = 2.0*tmp_72;
      real_t tmp_74 = tmp_69*tmp_73;
      real_t tmp_75 = tmp_22 - 1;
      real_t tmp_76 = tmp_70*tmp_75;
      real_t tmp_77 = tmp_73*tmp_75;
      real_t tmp_78 = tmp_33 - 1;
      real_t tmp_79 = tmp_70*tmp_78;
      real_t tmp_80 = tmp_73*tmp_78;
      real_t tmp_81 = tmp_44 - 1;
      real_t tmp_82 = tmp_70*tmp_81;
      real_t tmp_83 = tmp_73*tmp_81;
      real_t tmp_84 = tmp_7*tmp_70;
      real_t tmp_85 = tmp_55*tmp_8;
      real_t tmp_86 = tmp_84 + tmp_85;
      real_t tmp_87 = 4.0*tmp_6;
      real_t tmp_88 = tmp_3*tmp_87;
      real_t tmp_89 = 0.17855872826361643*tmp_88;
      real_t tmp_90 = tmp_14*tmp_87;
      real_t tmp_91 = 0.1550510257216822*tmp_90;
      real_t tmp_92 = tmp_89 + tmp_91;
      real_t tmp_93 = tmp_21*tmp_70;
      real_t tmp_94 = tmp_22*tmp_55;
      real_t tmp_95 = tmp_93 + tmp_94;
      real_t tmp_96 = 0.075031110222608124*tmp_88;
      real_t tmp_97 = 0.64494897427831777*tmp_90;
      real_t tmp_98 = tmp_96 + tmp_97;
      real_t tmp_99 = tmp_32*tmp_70;
      real_t tmp_100 = tmp_33*tmp_55;
      real_t tmp_101 = tmp_100 + tmp_99;
      real_t tmp_102 = 0.66639024601470143*tmp_88;
      real_t tmp_103 = 0.1550510257216822*tmp_90;
      real_t tmp_104 = tmp_102 + tmp_103;
      real_t tmp_105 = tmp_43*tmp_70;
      real_t tmp_106 = tmp_44*tmp_55;
      real_t tmp_107 = tmp_105 + tmp_106;
      real_t tmp_108 = 0.28001991549907407*tmp_88;
      real_t tmp_109 = 0.64494897427831777*tmp_90;
      real_t tmp_110 = tmp_108 + tmp_109;
      real_t tmp_111 = tmp_6*(2.7595917942265427 - tmp_7);
      real_t tmp_112 = tmp_11*tmp_111;
      real_t tmp_113 = tmp_112 - tmp_85;
      real_t tmp_114 = tmp_111*tmp_3;
      real_t tmp_115 = tmp_114 - tmp_91;
      real_t tmp_116 = tmp_6*(-tmp_21 - 1.1595917942265421);
      real_t tmp_117 = tmp_11*tmp_116;
      real_t tmp_118 = tmp_117 - tmp_94;
      real_t tmp_119 = tmp_116*tmp_3;
      real_t tmp_120 = tmp_119 - tmp_97;
      real_t tmp_121 = tmp_6*(2.7595917942265427 - tmp_32);
      real_t tmp_122 = tmp_11*tmp_121;
      real_t tmp_123 = -tmp_100 + tmp_122;
      real_t tmp_124 = tmp_121*tmp_3;
      real_t tmp_125 = -tmp_103 + tmp_124;
      real_t tmp_126 = tmp_6*(-tmp_43 - 1.1595917942265421);
      real_t tmp_127 = tmp_11*tmp_126;
      real_t tmp_128 = -tmp_106 + tmp_127;
      real_t tmp_129 = tmp_126*tmp_3;
      real_t tmp_130 = -tmp_109 + tmp_129;
      real_t tmp_131 = tmp_6*(2.5715301738910687 - tmp_8);
      real_t tmp_132 = tmp_1*tmp_131;
      real_t tmp_133 = tmp_132 - tmp_84;
      real_t tmp_134 = tmp_131*tmp_14;
      real_t tmp_135 = tmp_134 - tmp_89;
      real_t tmp_136 = tmp_6*(3.3997511182191351 - tmp_22);
      real_t tmp_137 = tmp_1*tmp_136;
      real_t tmp_138 = tmp_137 - tmp_93;
      real_t tmp_139 = tmp_136*tmp_14;
      real_t tmp_140 = tmp_139 - tmp_96;
      real_t tmp_141 = tmp_6*(-tmp_33 - 1.3311219681176114);
      real_t tmp_142 = tmp_1*tmp_141;
      real_t tmp_143 = tmp_142 - tmp_99;
      real_t tmp_144 = tmp_14*tmp_141;
      real_t tmp_145 = -tmp_102 + tmp_144;
      real_t tmp_146 = tmp_6*(1.7598406760074075 - tmp_44);
      real_t tmp_147 = tmp_1*tmp_146;
      real_t tmp_148 = -tmp_105 + tmp_147;
      real_t tmp_149 = tmp_14*tmp_146;
      real_t tmp_150 = -tmp_108 + tmp_149;
      real_t tmp_151 = (2.0/3.0)*tmp_57;
      real_t tmp_152 = tmp_151*tmp_54;
      real_t tmp_153 = 1.0*tmp_56;
      real_t tmp_154 = tmp_151*tmp_60;
      real_t tmp_155 = 1.0*tmp_61;
      real_t tmp_156 = tmp_151*tmp_63;
      real_t tmp_157 = 1.0*tmp_64;
      real_t tmp_158 = tmp_151*tmp_66;
      real_t tmp_159 = 1.0*tmp_67;
      real_t tmp_160 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_161 = 0.33333333333333337*tmp_160;
      real_t tmp_162 = tmp_161*tmp_20;
      real_t tmp_163 = tmp_1*tmp_14;
      real_t tmp_164 = tmp_161*tmp_163;
      real_t tmp_165 = tmp_54*tmp_69;
      real_t tmp_166 = tmp_165*tmp_4;
      real_t tmp_167 = 1.0*tmp_160;
      real_t tmp_168 = (2.0/3.0)*tmp_160;
      real_t tmp_169 = tmp_11*tmp_14;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = tmp_60*tmp_75;
      real_t tmp_172 = tmp_167*tmp_4;
      real_t tmp_173 = tmp_63*tmp_78;
      real_t tmp_174 = tmp_66*tmp_81;
      real_t tmp_175 = (2.0/3.0)*tmp_72;
      real_t tmp_176 = tmp_175*tmp_69;
      real_t tmp_177 = 1.0*tmp_71;
      real_t tmp_178 = tmp_175*tmp_75;
      real_t tmp_179 = 1.0*tmp_76;
      real_t tmp_180 = tmp_175*tmp_78;
      real_t tmp_181 = 1.0*tmp_79;
      real_t tmp_182 = tmp_175*tmp_81;
      real_t tmp_183 = 1.0*tmp_82;
      real_t tmp_184 = tmp_167*tmp_169;
      real_t tmp_185 = tmp_168*tmp_4;
      real_t tmp_186 = tmp_11*tmp_3;
      real_t tmp_187 = tmp_161*tmp_186;
      real_t tmp_188 = tmp_7*tmp_72;
      real_t tmp_189 = tmp_57*tmp_8;
      real_t tmp_190 = (2.0/3.0)*tmp_188 + (2.0/3.0)*tmp_189;
      real_t tmp_191 = 2.0*tmp_70;
      real_t tmp_192 = 0.17855872826361643*tmp_191;
      real_t tmp_193 = 2.0*tmp_55;
      real_t tmp_194 = 0.1550510257216822*tmp_193;
      real_t tmp_195 = tmp_192 + tmp_194;
      real_t tmp_196 = 2*tmp_195;
      real_t tmp_197 = tmp_21*tmp_72;
      real_t tmp_198 = tmp_22*tmp_57;
      real_t tmp_199 = (2.0/3.0)*tmp_197 + (2.0/3.0)*tmp_198;
      real_t tmp_200 = 0.075031110222608124*tmp_191;
      real_t tmp_201 = 0.64494897427831777*tmp_193;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = 2*tmp_202;
      real_t tmp_204 = tmp_32*tmp_72;
      real_t tmp_205 = tmp_33*tmp_57;
      real_t tmp_206 = (2.0/3.0)*tmp_204 + (2.0/3.0)*tmp_205;
      real_t tmp_207 = 0.66639024601470143*tmp_191;
      real_t tmp_208 = 0.1550510257216822*tmp_193;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = 2*tmp_209;
      real_t tmp_211 = tmp_43*tmp_72;
      real_t tmp_212 = tmp_44*tmp_57;
      real_t tmp_213 = (2.0/3.0)*tmp_211 + (2.0/3.0)*tmp_212;
      real_t tmp_214 = 0.28001991549907407*tmp_191;
      real_t tmp_215 = 0.64494897427831777*tmp_193;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = (2.0/3.0)*tmp_114 - 2.0/3.0*tmp_189;
      real_t tmp_219 = 0.5*tmp_112 - tmp_194;
      real_t tmp_220 = 2*tmp_219;
      real_t tmp_221 = (2.0/3.0)*tmp_119 - 2.0/3.0*tmp_198;
      real_t tmp_222 = 0.5*tmp_117 - tmp_201;
      real_t tmp_223 = 2*tmp_222;
      real_t tmp_224 = (2.0/3.0)*tmp_124 - 2.0/3.0*tmp_205;
      real_t tmp_225 = 0.5*tmp_122 - tmp_208;
      real_t tmp_226 = 2*tmp_225;
      real_t tmp_227 = (2.0/3.0)*tmp_129 - 2.0/3.0*tmp_212;
      real_t tmp_228 = 0.5*tmp_127 - tmp_215;
      real_t tmp_229 = 2*tmp_228;
      real_t tmp_230 = (2.0/3.0)*tmp_134 - 2.0/3.0*tmp_188;
      real_t tmp_231 = 0.5*tmp_132 - tmp_192;
      real_t tmp_232 = 2*tmp_231;
      real_t tmp_233 = (2.0/3.0)*tmp_139 - 2.0/3.0*tmp_197;
      real_t tmp_234 = 0.5*tmp_137 - tmp_200;
      real_t tmp_235 = 2*tmp_234;
      real_t tmp_236 = (2.0/3.0)*tmp_144 - 2.0/3.0*tmp_204;
      real_t tmp_237 = 0.5*tmp_142 - tmp_207;
      real_t tmp_238 = 2*tmp_237;
      real_t tmp_239 = (2.0/3.0)*tmp_149 - 2.0/3.0*tmp_211;
      real_t tmp_240 = 0.5*tmp_147 - tmp_214;
      real_t tmp_241 = 2*tmp_240;
      real_t a_0_0 = tmp_20*(-tmp_13*tmp_16 + tmp_15*tmp_18) + tmp_31*(-tmp_26*tmp_28 + tmp_27*tmp_30) + tmp_42*(-tmp_37*tmp_39 + tmp_38*tmp_41) + tmp_53*(-tmp_48*tmp_50 + tmp_49*tmp_52);
      real_t a_0_1 = tmp_20*(-tmp_16*tmp_56 + tmp_17*tmp_59) + tmp_31*(-tmp_28*tmp_61 + tmp_29*tmp_62) + tmp_42*(-tmp_39*tmp_64 + tmp_40*tmp_65) + tmp_53*(-tmp_50*tmp_67 + tmp_51*tmp_68);
      real_t a_0_2 = tmp_20*(-tmp_16*tmp_71 + tmp_17*tmp_74) + tmp_31*(-tmp_28*tmp_76 + tmp_29*tmp_77) + tmp_42*(-tmp_39*tmp_79 + tmp_40*tmp_80) + tmp_53*(-tmp_50*tmp_82 + tmp_51*tmp_83);
      real_t a_0_3 = tmp_20*(-tmp_16*tmp_86 + tmp_18*tmp_92) + tmp_31*(-tmp_28*tmp_95 + tmp_30*tmp_98) + tmp_42*(-tmp_101*tmp_39 + tmp_104*tmp_41) + tmp_53*(-tmp_107*tmp_50 + tmp_110*tmp_52);
      real_t a_0_4 = tmp_20*(-tmp_113*tmp_16 + tmp_115*tmp_18) + tmp_31*(-tmp_118*tmp_28 + tmp_120*tmp_30) + tmp_42*(-tmp_123*tmp_39 + tmp_125*tmp_41) + tmp_53*(-tmp_128*tmp_50 + tmp_130*tmp_52);
      real_t a_0_5 = tmp_20*(-tmp_133*tmp_16 + tmp_135*tmp_18) + tmp_31*(-tmp_138*tmp_28 + tmp_140*tmp_30) + tmp_42*(-tmp_143*tmp_39 + tmp_145*tmp_41) + tmp_53*(-tmp_148*tmp_50 + tmp_150*tmp_52);
      real_t a_1_0 = tmp_20*(-tmp_13*tmp_152 + tmp_15*tmp_153) + tmp_31*(-tmp_154*tmp_26 + tmp_155*tmp_27) + tmp_42*(-tmp_156*tmp_37 + tmp_157*tmp_38) + tmp_53*(-tmp_158*tmp_48 + tmp_159*tmp_49);
      real_t a_1_1 = tmp_162*tmp_163*(tmp_54*tmp_54) + tmp_164*tmp_31*(tmp_60*tmp_60) + tmp_164*tmp_42*(tmp_63*tmp_63) + tmp_164*tmp_53*(tmp_66*tmp_66);
      real_t a_1_2 = tmp_20*(-tmp_165*tmp_170 + tmp_166*tmp_167) + tmp_31*(-tmp_170*tmp_171 + tmp_171*tmp_172) + tmp_42*(-tmp_170*tmp_173 + tmp_172*tmp_173) + tmp_53*(-tmp_170*tmp_174 + tmp_172*tmp_174);
      real_t a_1_3 = tmp_20*(-tmp_152*tmp_86 + tmp_153*tmp_92) + tmp_31*(-tmp_154*tmp_95 + tmp_155*tmp_98) + tmp_42*(-tmp_101*tmp_156 + tmp_104*tmp_157) + tmp_53*(-tmp_107*tmp_158 + tmp_110*tmp_159);
      real_t a_1_4 = tmp_20*(-tmp_113*tmp_152 + tmp_115*tmp_153) + tmp_31*(-tmp_118*tmp_154 + tmp_120*tmp_155) + tmp_42*(-tmp_123*tmp_156 + tmp_125*tmp_157) + tmp_53*(-tmp_128*tmp_158 + tmp_130*tmp_159);
      real_t a_1_5 = tmp_20*(-tmp_133*tmp_152 + tmp_135*tmp_153) + tmp_31*(-tmp_138*tmp_154 + tmp_140*tmp_155) + tmp_42*(-tmp_143*tmp_156 + tmp_145*tmp_157) + tmp_53*(-tmp_148*tmp_158 + tmp_150*tmp_159);
      real_t a_2_0 = tmp_20*(-tmp_13*tmp_176 + tmp_15*tmp_177) + tmp_31*(-tmp_178*tmp_26 + tmp_179*tmp_27) + tmp_42*(-tmp_180*tmp_37 + tmp_181*tmp_38) + tmp_53*(-tmp_182*tmp_48 + tmp_183*tmp_49);
      real_t a_2_1 = tmp_20*(tmp_165*tmp_184 - tmp_166*tmp_168) + tmp_31*(tmp_171*tmp_184 - tmp_171*tmp_185) + tmp_42*(tmp_173*tmp_184 - tmp_173*tmp_185) + tmp_53*(tmp_174*tmp_184 - tmp_174*tmp_185);
      real_t a_2_2 = tmp_162*tmp_186*(tmp_69*tmp_69) + tmp_187*tmp_31*(tmp_75*tmp_75) + tmp_187*tmp_42*(tmp_78*tmp_78) + tmp_187*tmp_53*(tmp_81*tmp_81);
      real_t a_2_3 = tmp_20*(-tmp_176*tmp_86 + tmp_177*tmp_92) + tmp_31*(-tmp_178*tmp_95 + tmp_179*tmp_98) + tmp_42*(-tmp_101*tmp_180 + tmp_104*tmp_181) + tmp_53*(-tmp_107*tmp_182 + tmp_110*tmp_183);
      real_t a_2_4 = tmp_20*(-tmp_113*tmp_176 + tmp_115*tmp_177) + tmp_31*(-tmp_118*tmp_178 + tmp_120*tmp_179) + tmp_42*(-tmp_123*tmp_180 + tmp_125*tmp_181) + tmp_53*(-tmp_128*tmp_182 + tmp_130*tmp_183);
      real_t a_2_5 = tmp_20*(-tmp_133*tmp_176 + tmp_135*tmp_177) + tmp_31*(-tmp_138*tmp_178 + tmp_140*tmp_179) + tmp_42*(-tmp_143*tmp_180 + tmp_145*tmp_181) + tmp_53*(-tmp_148*tmp_182 + tmp_150*tmp_183);
      real_t a_3_0 = tmp_20*(-tmp_13*tmp_190 + tmp_15*tmp_196) + tmp_31*(-tmp_199*tmp_26 + tmp_203*tmp_27) + tmp_42*(-tmp_206*tmp_37 + tmp_210*tmp_38) + tmp_53*(-tmp_213*tmp_48 + tmp_217*tmp_49);
      real_t a_3_1 = tmp_20*(-tmp_190*tmp_56 + tmp_195*tmp_59) + tmp_31*(-tmp_199*tmp_61 + tmp_202*tmp_62) + tmp_42*(-tmp_206*tmp_64 + tmp_209*tmp_65) + tmp_53*(-tmp_213*tmp_67 + tmp_216*tmp_68);
      real_t a_3_2 = tmp_20*(-tmp_190*tmp_71 + tmp_195*tmp_74) + tmp_31*(-tmp_199*tmp_76 + tmp_202*tmp_77) + tmp_42*(-tmp_206*tmp_79 + tmp_209*tmp_80) + tmp_53*(-tmp_213*tmp_82 + tmp_216*tmp_83);
      real_t a_3_3 = tmp_20*(-tmp_190*tmp_86 + tmp_196*tmp_92) + tmp_31*(-tmp_199*tmp_95 + tmp_203*tmp_98) + tmp_42*(-tmp_101*tmp_206 + tmp_104*tmp_210) + tmp_53*(-tmp_107*tmp_213 + tmp_110*tmp_217);
      real_t a_3_4 = tmp_20*(-tmp_113*tmp_190 + tmp_115*tmp_196) + tmp_31*(-tmp_118*tmp_199 + tmp_120*tmp_203) + tmp_42*(-tmp_123*tmp_206 + tmp_125*tmp_210) + tmp_53*(-tmp_128*tmp_213 + tmp_130*tmp_217);
      real_t a_3_5 = tmp_20*(-tmp_133*tmp_190 + tmp_135*tmp_196) + tmp_31*(-tmp_138*tmp_199 + tmp_140*tmp_203) + tmp_42*(-tmp_143*tmp_206 + tmp_145*tmp_210) + tmp_53*(-tmp_148*tmp_213 + tmp_150*tmp_217);
      real_t a_4_0 = tmp_20*(-tmp_13*tmp_218 + tmp_15*tmp_220) + tmp_31*(-tmp_221*tmp_26 + tmp_223*tmp_27) + tmp_42*(-tmp_224*tmp_37 + tmp_226*tmp_38) + tmp_53*(-tmp_227*tmp_48 + tmp_229*tmp_49);
      real_t a_4_1 = tmp_20*(-tmp_218*tmp_56 + tmp_219*tmp_59) + tmp_31*(-tmp_221*tmp_61 + tmp_222*tmp_62) + tmp_42*(-tmp_224*tmp_64 + tmp_225*tmp_65) + tmp_53*(-tmp_227*tmp_67 + tmp_228*tmp_68);
      real_t a_4_2 = tmp_20*(-tmp_218*tmp_71 + tmp_219*tmp_74) + tmp_31*(-tmp_221*tmp_76 + tmp_222*tmp_77) + tmp_42*(-tmp_224*tmp_79 + tmp_225*tmp_80) + tmp_53*(-tmp_227*tmp_82 + tmp_228*tmp_83);
      real_t a_4_3 = tmp_20*(-tmp_218*tmp_86 + tmp_220*tmp_92) + tmp_31*(-tmp_221*tmp_95 + tmp_223*tmp_98) + tmp_42*(-tmp_101*tmp_224 + tmp_104*tmp_226) + tmp_53*(-tmp_107*tmp_227 + tmp_110*tmp_229);
      real_t a_4_4 = tmp_20*(-tmp_113*tmp_218 + tmp_115*tmp_220) + tmp_31*(-tmp_118*tmp_221 + tmp_120*tmp_223) + tmp_42*(-tmp_123*tmp_224 + tmp_125*tmp_226) + tmp_53*(-tmp_128*tmp_227 + tmp_130*tmp_229);
      real_t a_4_5 = tmp_20*(-tmp_133*tmp_218 + tmp_135*tmp_220) + tmp_31*(-tmp_138*tmp_221 + tmp_140*tmp_223) + tmp_42*(-tmp_143*tmp_224 + tmp_145*tmp_226) + tmp_53*(-tmp_148*tmp_227 + tmp_150*tmp_229);
      real_t a_5_0 = tmp_20*(-tmp_13*tmp_230 + tmp_15*tmp_232) + tmp_31*(-tmp_233*tmp_26 + tmp_235*tmp_27) + tmp_42*(-tmp_236*tmp_37 + tmp_238*tmp_38) + tmp_53*(-tmp_239*tmp_48 + tmp_241*tmp_49);
      real_t a_5_1 = tmp_20*(-tmp_230*tmp_56 + tmp_231*tmp_59) + tmp_31*(-tmp_233*tmp_61 + tmp_234*tmp_62) + tmp_42*(-tmp_236*tmp_64 + tmp_237*tmp_65) + tmp_53*(-tmp_239*tmp_67 + tmp_240*tmp_68);
      real_t a_5_2 = tmp_20*(-tmp_230*tmp_71 + tmp_231*tmp_74) + tmp_31*(-tmp_233*tmp_76 + tmp_234*tmp_77) + tmp_42*(-tmp_236*tmp_79 + tmp_237*tmp_80) + tmp_53*(-tmp_239*tmp_82 + tmp_240*tmp_83);
      real_t a_5_3 = tmp_20*(-tmp_230*tmp_86 + tmp_232*tmp_92) + tmp_31*(-tmp_233*tmp_95 + tmp_235*tmp_98) + tmp_42*(-tmp_101*tmp_236 + tmp_104*tmp_238) + tmp_53*(-tmp_107*tmp_239 + tmp_110*tmp_241);
      real_t a_5_4 = tmp_20*(-tmp_113*tmp_230 + tmp_115*tmp_232) + tmp_31*(-tmp_118*tmp_233 + tmp_120*tmp_235) + tmp_42*(-tmp_123*tmp_236 + tmp_125*tmp_238) + tmp_53*(-tmp_128*tmp_239 + tmp_130*tmp_241);
      real_t a_5_5 = tmp_20*(-tmp_133*tmp_230 + tmp_135*tmp_232) + tmp_31*(-tmp_138*tmp_233 + tmp_140*tmp_235) + tmp_42*(-tmp_143*tmp_236 + tmp_145*tmp_238) + tmp_53*(-tmp_148*tmp_239 + tmp_150*tmp_241);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_1_0_affine_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.71423491305446574;
      real_t tmp_6 = 0.62020410288672878;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_12 = tmp_11*tmp_7 + tmp_3*tmp_7;
      real_t tmp_13 = (2.0/3.0)*tmp_12;
      real_t tmp_14 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_15 = 2*tmp_14;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 0.15902069087198858*tmp_16;
      real_t tmp_18 = 0.3001244408904325;
      real_t tmp_19 = 2.5797958971132711;
      real_t tmp_20 = tmp_4*(tmp_18 + tmp_19 - 3);
      real_t tmp_21 = tmp_1*tmp_20;
      real_t tmp_22 = tmp_20*tmp_9;
      real_t tmp_23 = tmp_11*tmp_20 + tmp_20*tmp_3;
      real_t tmp_24 = (2.0/3.0)*tmp_23;
      real_t tmp_25 = 0.5*tmp_21 + 0.5*tmp_22;
      real_t tmp_26 = 2*tmp_25;
      real_t tmp_27 = 0.090979309128011415*tmp_16;
      real_t tmp_28 = 2.6655609840588057;
      real_t tmp_29 = 0.62020410288672878;
      real_t tmp_30 = tmp_4*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_30*tmp_9;
      real_t tmp_33 = tmp_11*tmp_30 + tmp_3*tmp_30;
      real_t tmp_34 = (2.0/3.0)*tmp_33;
      real_t tmp_35 = 0.5*tmp_31 + 0.5*tmp_32;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 0.15902069087198858*tmp_16;
      real_t tmp_38 = 1.1200796619962963;
      real_t tmp_39 = 2.5797958971132711;
      real_t tmp_40 = tmp_4*(tmp_38 + tmp_39 - 3);
      real_t tmp_41 = tmp_1*tmp_40;
      real_t tmp_42 = tmp_40*tmp_9;
      real_t tmp_43 = tmp_11*tmp_40 + tmp_3*tmp_40;
      real_t tmp_44 = (2.0/3.0)*tmp_43;
      real_t tmp_45 = 0.5*tmp_41 + 0.5*tmp_42;
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.090979309128011415*tmp_16;
      real_t tmp_48 = tmp_5 - 1;
      real_t tmp_49 = tmp_1*tmp_4;
      real_t tmp_50 = 2.0*tmp_4;
      real_t tmp_51 = tmp_11*tmp_50;
      real_t tmp_52 = tmp_18 - 1;
      real_t tmp_53 = tmp_28 - 1;
      real_t tmp_54 = tmp_38 - 1;
      real_t tmp_55 = tmp_6 - 1;
      real_t tmp_56 = tmp_4*tmp_9;
      real_t tmp_57 = tmp_3*tmp_50;
      real_t tmp_58 = tmp_19 - 1;
      real_t tmp_59 = tmp_29 - 1;
      real_t tmp_60 = tmp_39 - 1;
      real_t tmp_61 = tmp_5*tmp_56;
      real_t tmp_62 = tmp_49*tmp_6;
      real_t tmp_63 = 4.0*tmp_4;
      real_t tmp_64 = tmp_3*tmp_63;
      real_t tmp_65 = 0.17855872826361643*tmp_64;
      real_t tmp_66 = tmp_11*tmp_63;
      real_t tmp_67 = 0.1550510257216822*tmp_66;
      real_t tmp_68 = tmp_18*tmp_56;
      real_t tmp_69 = tmp_19*tmp_49;
      real_t tmp_70 = 0.075031110222608124*tmp_64;
      real_t tmp_71 = 0.64494897427831777*tmp_66;
      real_t tmp_72 = tmp_28*tmp_56;
      real_t tmp_73 = tmp_29*tmp_49;
      real_t tmp_74 = 0.66639024601470143*tmp_64;
      real_t tmp_75 = 0.1550510257216822*tmp_66;
      real_t tmp_76 = tmp_38*tmp_56;
      real_t tmp_77 = tmp_39*tmp_49;
      real_t tmp_78 = 0.28001991549907407*tmp_64;
      real_t tmp_79 = 0.64494897427831777*tmp_66;
      real_t tmp_80 = tmp_4*(2.7595917942265427 - tmp_5);
      real_t tmp_81 = tmp_4*(-tmp_18 - 1.1595917942265421);
      real_t tmp_82 = tmp_4*(2.7595917942265427 - tmp_28);
      real_t tmp_83 = tmp_4*(-tmp_38 - 1.1595917942265421);
      real_t tmp_84 = tmp_4*(2.5715301738910687 - tmp_6);
      real_t tmp_85 = tmp_4*(3.3997511182191351 - tmp_19);
      real_t tmp_86 = tmp_4*(-tmp_29 - 1.3311219681176114);
      real_t tmp_87 = tmp_4*(1.7598406760074075 - tmp_39);
      real_t a_0_0 = tmp_17*(tmp_12*tmp_15 - tmp_13*(tmp_10 + tmp_8)) + tmp_27*(tmp_23*tmp_26 - tmp_24*(tmp_21 + tmp_22)) + tmp_37*(tmp_33*tmp_36 - tmp_34*(tmp_31 + tmp_32)) + tmp_47*(tmp_43*tmp_46 - tmp_44*(tmp_41 + tmp_42));
      real_t a_0_1 = tmp_17*(-tmp_13*tmp_48*tmp_49 + tmp_14*tmp_48*tmp_51) + tmp_27*(-tmp_24*tmp_49*tmp_52 + tmp_25*tmp_51*tmp_52) + tmp_37*(-tmp_34*tmp_49*tmp_53 + tmp_35*tmp_51*tmp_53) + tmp_47*(-tmp_44*tmp_49*tmp_54 + tmp_45*tmp_51*tmp_54);
      real_t a_0_2 = tmp_17*(-tmp_13*tmp_55*tmp_56 + tmp_14*tmp_55*tmp_57) + tmp_27*(-tmp_24*tmp_56*tmp_58 + tmp_25*tmp_57*tmp_58) + tmp_37*(-tmp_34*tmp_56*tmp_59 + tmp_35*tmp_57*tmp_59) + tmp_47*(-tmp_44*tmp_56*tmp_60 + tmp_45*tmp_57*tmp_60);
      real_t a_0_3 = tmp_17*(-tmp_13*(tmp_61 + tmp_62) + tmp_15*(tmp_65 + tmp_67)) + tmp_27*(-tmp_24*(tmp_68 + tmp_69) + tmp_26*(tmp_70 + tmp_71)) + tmp_37*(-tmp_34*(tmp_72 + tmp_73) + tmp_36*(tmp_74 + tmp_75)) + tmp_47*(-tmp_44*(tmp_76 + tmp_77) + tmp_46*(tmp_78 + tmp_79));
      real_t a_0_4 = tmp_17*(-tmp_13*(-tmp_62 + tmp_80*tmp_9) + tmp_15*(tmp_3*tmp_80 - tmp_67)) + tmp_27*(-tmp_24*(-tmp_69 + tmp_81*tmp_9) + tmp_26*(tmp_3*tmp_81 - tmp_71)) + tmp_37*(-tmp_34*(-tmp_73 + tmp_82*tmp_9) + tmp_36*(tmp_3*tmp_82 - tmp_75)) + tmp_47*(-tmp_44*(-tmp_77 + tmp_83*tmp_9) + tmp_46*(tmp_3*tmp_83 - tmp_79));
      real_t a_0_5 = tmp_17*(-tmp_13*(tmp_1*tmp_84 - tmp_61) + tmp_15*(tmp_11*tmp_84 - tmp_65)) + tmp_27*(-tmp_24*(tmp_1*tmp_85 - tmp_68) + tmp_26*(tmp_11*tmp_85 - tmp_70)) + tmp_37*(-tmp_34*(tmp_1*tmp_86 - tmp_72) + tmp_36*(tmp_11*tmp_86 - tmp_74)) + tmp_47*(-tmp_44*(tmp_1*tmp_87 - tmp_76) + tmp_46*(tmp_11*tmp_87 - tmp_78));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_1_0_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = p_affine_2_0 + tmp_7;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_3_0 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = tmp_3*tmp_8;
      real_t tmp_17 = tmp_12*tmp_9;
      real_t tmp_18 = tmp_14*tmp_5;
      real_t tmp_19 = tmp_1*tmp_15 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_11*tmp_13 - tmp_11*tmp_16 - tmp_18*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_9 + tmp_11*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_11*tmp_3 + tmp_4*tmp_9;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_13 - tmp_16;
      real_t tmp_32 = tmp_10 - tmp_18;
      real_t tmp_33 = tmp_15 - tmp_17;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = tmp_104*tmp_33;
      real_t tmp_337 = (2.0/3.0)*tmp_20;
      real_t tmp_338 = tmp_30*tmp_337;
      real_t tmp_339 = 1.0*tmp_106;
      real_t tmp_340 = tmp_33*tmp_337;
      real_t tmp_341 = tmp_110*tmp_340;
      real_t tmp_342 = 1.0*tmp_111;
      real_t tmp_343 = tmp_113*tmp_340;
      real_t tmp_344 = 1.0*tmp_114;
      real_t tmp_345 = tmp_116*tmp_340;
      real_t tmp_346 = 1.0*tmp_117;
      real_t tmp_347 = tmp_119*tmp_340;
      real_t tmp_348 = 1.0*tmp_120;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = 1.0*tmp_349;
      real_t tmp_355 = tmp_122*tmp_32;
      real_t tmp_356 = tmp_104*tmp_28;
      real_t tmp_357 = tmp_355*tmp_356;
      real_t tmp_358 = (2.0/3.0)*tmp_349;
      real_t tmp_359 = tmp_26*tmp_358;
      real_t tmp_360 = tmp_122*tmp_336;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_28*tmp_354;
      real_t tmp_363 = tmp_32*tmp_362;
      real_t tmp_364 = tmp_33*tmp_359;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_139*tmp_31;
      real_t tmp_369 = tmp_354*tmp_368;
      real_t tmp_370 = tmp_358*tmp_6;
      real_t tmp_371 = tmp_139*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_31*tmp_362;
      real_t tmp_374 = tmp_33*tmp_370;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_336*tmp_337;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = tmp_32*tmp_337;
      real_t tmp_381 = tmp_127*tmp_380;
      real_t tmp_382 = 1.0*tmp_128;
      real_t tmp_383 = tmp_130*tmp_380;
      real_t tmp_384 = 1.0*tmp_131;
      real_t tmp_385 = tmp_133*tmp_380;
      real_t tmp_386 = 1.0*tmp_134;
      real_t tmp_387 = tmp_136*tmp_380;
      real_t tmp_388 = 1.0*tmp_137;
      real_t tmp_389 = tmp_26*tmp_354;
      real_t tmp_390 = tmp_28*tmp_358;
      real_t tmp_391 = tmp_32*tmp_390;
      real_t tmp_392 = tmp_33*tmp_389;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_31*tmp_389;
      real_t tmp_397 = tmp_32*tmp_370;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_337*tmp_355;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = tmp_31*tmp_337;
      real_t tmp_404 = tmp_144*tmp_403;
      real_t tmp_405 = 1.0*tmp_145;
      real_t tmp_406 = tmp_147*tmp_403;
      real_t tmp_407 = 1.0*tmp_148;
      real_t tmp_408 = tmp_150*tmp_403;
      real_t tmp_409 = 1.0*tmp_151;
      real_t tmp_410 = tmp_153*tmp_403;
      real_t tmp_411 = 1.0*tmp_154;
      real_t tmp_412 = tmp_354*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_31*tmp_390;
      real_t tmp_415 = tmp_33*tmp_412;
      real_t tmp_416 = tmp_31*tmp_359;
      real_t tmp_417 = tmp_32*tmp_412;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_337*tmp_368;
      real_t tmp_421 = (2.0/3.0)*tmp_163;
      real_t tmp_422 = tmp_107*tmp_6;
      real_t tmp_423 = 0.25*tmp_422;
      real_t tmp_424 = tmp_107*tmp_26;
      real_t tmp_425 = 0.25*tmp_424;
      real_t tmp_426 = tmp_423 + tmp_425;
      real_t tmp_427 = 2*tmp_426;
      real_t tmp_428 = (2.0/3.0)*tmp_171;
      real_t tmp_429 = 0.16666666666666666*tmp_422;
      real_t tmp_430 = 0.5*tmp_424;
      real_t tmp_431 = tmp_429 + tmp_430;
      real_t tmp_432 = 2*tmp_431;
      real_t tmp_433 = (2.0/3.0)*tmp_179;
      real_t tmp_434 = 0.5*tmp_422;
      real_t tmp_435 = 0.16666666666666666*tmp_424;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_187;
      real_t tmp_439 = 0.16666666666666666*tmp_422;
      real_t tmp_440 = 0.16666666666666666*tmp_424;
      real_t tmp_441 = tmp_439 + tmp_440;
      real_t tmp_442 = 2*tmp_441;
      real_t tmp_443 = (2.0/3.0)*tmp_195;
      real_t tmp_444 = 0.16666666666666666*tmp_422;
      real_t tmp_445 = 0.16666666666666666*tmp_424;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = 2*tmp_446;
      real_t tmp_448 = (2.0/3.0)*tmp_202;
      real_t tmp_449 = 0.25*tmp_422;
      real_t tmp_450 = tmp_107*tmp_28;
      real_t tmp_451 = 0.25*tmp_450;
      real_t tmp_452 = tmp_449 + tmp_451;
      real_t tmp_453 = 2*tmp_452;
      real_t tmp_454 = (2.0/3.0)*tmp_209;
      real_t tmp_455 = 0.16666666666666666*tmp_422;
      real_t tmp_456 = 0.5*tmp_450;
      real_t tmp_457 = tmp_455 + tmp_456;
      real_t tmp_458 = 2*tmp_457;
      real_t tmp_459 = (2.0/3.0)*tmp_216;
      real_t tmp_460 = 0.16666666666666666*tmp_422;
      real_t tmp_461 = 0.16666666666666666*tmp_450;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = 2*tmp_462;
      real_t tmp_464 = (2.0/3.0)*tmp_223;
      real_t tmp_465 = 0.5*tmp_422;
      real_t tmp_466 = 0.16666666666666666*tmp_450;
      real_t tmp_467 = tmp_465 + tmp_466;
      real_t tmp_468 = 2*tmp_467;
      real_t tmp_469 = (2.0/3.0)*tmp_230;
      real_t tmp_470 = 0.16666666666666666*tmp_422;
      real_t tmp_471 = 0.16666666666666666*tmp_450;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = 2*tmp_472;
      real_t tmp_474 = (2.0/3.0)*tmp_236;
      real_t tmp_475 = 0.25*tmp_424;
      real_t tmp_476 = 0.25*tmp_450;
      real_t tmp_477 = tmp_475 + tmp_476;
      real_t tmp_478 = 2*tmp_477;
      real_t tmp_479 = (2.0/3.0)*tmp_242;
      real_t tmp_480 = 0.16666666666666666*tmp_424;
      real_t tmp_481 = 0.16666666666666666*tmp_450;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = 2*tmp_482;
      real_t tmp_484 = (2.0/3.0)*tmp_248;
      real_t tmp_485 = 0.16666666666666666*tmp_424;
      real_t tmp_486 = 0.5*tmp_450;
      real_t tmp_487 = tmp_485 + tmp_486;
      real_t tmp_488 = 2*tmp_487;
      real_t tmp_489 = (2.0/3.0)*tmp_254;
      real_t tmp_490 = 0.5*tmp_424;
      real_t tmp_491 = 0.16666666666666666*tmp_450;
      real_t tmp_492 = tmp_490 + tmp_491;
      real_t tmp_493 = 2*tmp_492;
      real_t tmp_494 = (2.0/3.0)*tmp_260;
      real_t tmp_495 = 0.16666666666666666*tmp_424;
      real_t tmp_496 = 0.16666666666666666*tmp_450;
      real_t tmp_497 = tmp_495 + tmp_496;
      real_t tmp_498 = 2*tmp_497;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_425 - tmp_451;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_430 - tmp_456;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_435 - tmp_461;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_440 - tmp_466;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_445 - tmp_471;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_423 - tmp_476;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_429 - tmp_481;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_434 - tmp_486;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_439 - tmp_491;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_444 - tmp_496;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_449 - tmp_475;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_455 - tmp_480;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_460 - tmp_485;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_465 - tmp_490;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_470 - tmp_495;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(-tmp_347*tmp_98 + tmp_348*tmp_99) + tmp_51*(-tmp_336*tmp_338 + tmp_339*tmp_34) + tmp_64*(-tmp_341*tmp_59 + tmp_342*tmp_60) + tmp_77*(-tmp_343*tmp_72 + tmp_344*tmp_73) + tmp_90*(-tmp_345*tmp_85 + tmp_346*tmp_86);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(tmp_363*tmp_367 - tmp_364*tmp_367) + tmp_51*(tmp_354*tmp_357 - tmp_359*tmp_360) + tmp_64*(tmp_361*tmp_363 - tmp_361*tmp_364) + tmp_77*(tmp_363*tmp_365 - tmp_364*tmp_365) + tmp_90*(tmp_363*tmp_366 - tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(tmp_373*tmp_377 - tmp_374*tmp_377) + tmp_51*(-tmp_336*tmp_371 + tmp_356*tmp_369) + tmp_64*(tmp_372*tmp_373 - tmp_372*tmp_374) + tmp_77*(tmp_373*tmp_375 - tmp_374*tmp_375) + tmp_90*(tmp_373*tmp_376 - tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_347 + tmp_195*tmp_348) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_339) + tmp_64*(-tmp_168*tmp_341 + tmp_171*tmp_342) + tmp_77*(-tmp_176*tmp_343 + tmp_179*tmp_344) + tmp_90*(-tmp_184*tmp_345 + tmp_187*tmp_346);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_347 + tmp_230*tmp_348) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_339) + tmp_64*(-tmp_206*tmp_341 + tmp_209*tmp_342) + tmp_77*(-tmp_213*tmp_343 + tmp_216*tmp_344) + tmp_90*(-tmp_220*tmp_345 + tmp_223*tmp_346);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_347 + tmp_260*tmp_348) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_339) + tmp_64*(-tmp_239*tmp_341 + tmp_242*tmp_342) + tmp_77*(-tmp_245*tmp_343 + tmp_248*tmp_344) + tmp_90*(-tmp_251*tmp_345 + tmp_254*tmp_346);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_347 + tmp_290*tmp_348) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_339) + tmp_64*(-tmp_271*tmp_341 + tmp_272*tmp_342) + tmp_77*(-tmp_277*tmp_343 + tmp_278*tmp_344) + tmp_90*(-tmp_283*tmp_345 + tmp_284*tmp_346);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_347 + tmp_315*tmp_348) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_339) + tmp_64*(-tmp_299*tmp_341 + tmp_300*tmp_342) + tmp_77*(-tmp_304*tmp_343 + tmp_305*tmp_344) + tmp_90*(-tmp_309*tmp_345 + tmp_310*tmp_346);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_347 + tmp_335*tmp_348) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_339) + tmp_64*(-tmp_322*tmp_341 + tmp_323*tmp_342) + tmp_77*(-tmp_326*tmp_343 + tmp_327*tmp_344) + tmp_90*(-tmp_330*tmp_345 + tmp_331*tmp_346);
      real_t a_2_0 = tmp_103*(-tmp_387*tmp_98 + tmp_388*tmp_99) + tmp_51*(-tmp_338*tmp_355 + tmp_34*tmp_379) + tmp_64*(-tmp_381*tmp_59 + tmp_382*tmp_60) + tmp_77*(-tmp_383*tmp_72 + tmp_384*tmp_73) + tmp_90*(-tmp_385*tmp_85 + tmp_386*tmp_86);
      real_t a_2_1 = tmp_103*(-tmp_367*tmp_391 + tmp_367*tmp_392) + tmp_51*(-tmp_357*tmp_358 + tmp_360*tmp_389) + tmp_64*(-tmp_361*tmp_391 + tmp_361*tmp_392) + tmp_77*(-tmp_365*tmp_391 + tmp_365*tmp_392) + tmp_90*(-tmp_366*tmp_391 + tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(tmp_396*tmp_400 - tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_369 - tmp_355*tmp_371) + tmp_64*(tmp_395*tmp_396 - tmp_395*tmp_397) + tmp_77*(tmp_396*tmp_398 - tmp_397*tmp_398) + tmp_90*(tmp_396*tmp_399 - tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_387 + tmp_195*tmp_388) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_381 + tmp_171*tmp_382) + tmp_77*(-tmp_176*tmp_383 + tmp_179*tmp_384) + tmp_90*(-tmp_184*tmp_385 + tmp_187*tmp_386);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_387 + tmp_230*tmp_388) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_381 + tmp_209*tmp_382) + tmp_77*(-tmp_213*tmp_383 + tmp_216*tmp_384) + tmp_90*(-tmp_220*tmp_385 + tmp_223*tmp_386);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_387 + tmp_260*tmp_388) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_381 + tmp_242*tmp_382) + tmp_77*(-tmp_245*tmp_383 + tmp_248*tmp_384) + tmp_90*(-tmp_251*tmp_385 + tmp_254*tmp_386);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_387 + tmp_290*tmp_388) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_381 + tmp_272*tmp_382) + tmp_77*(-tmp_277*tmp_383 + tmp_278*tmp_384) + tmp_90*(-tmp_283*tmp_385 + tmp_284*tmp_386);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_387 + tmp_315*tmp_388) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_381 + tmp_300*tmp_382) + tmp_77*(-tmp_304*tmp_383 + tmp_305*tmp_384) + tmp_90*(-tmp_309*tmp_385 + tmp_310*tmp_386);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_387 + tmp_335*tmp_388) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_381 + tmp_323*tmp_382) + tmp_77*(-tmp_326*tmp_383 + tmp_327*tmp_384) + tmp_90*(-tmp_330*tmp_385 + tmp_331*tmp_386);
      real_t a_3_0 = tmp_103*(-tmp_410*tmp_98 + tmp_411*tmp_99) + tmp_51*(-tmp_338*tmp_368 + tmp_34*tmp_402) + tmp_64*(-tmp_404*tmp_59 + tmp_405*tmp_60) + tmp_77*(-tmp_406*tmp_72 + tmp_407*tmp_73) + tmp_90*(-tmp_408*tmp_85 + tmp_409*tmp_86);
      real_t a_3_1 = tmp_103*(-tmp_377*tmp_414 + tmp_377*tmp_415) + tmp_51*(tmp_336*tmp_413 - tmp_356*tmp_358*tmp_368) + tmp_64*(-tmp_372*tmp_414 + tmp_372*tmp_415) + tmp_77*(-tmp_375*tmp_414 + tmp_375*tmp_415) + tmp_90*(-tmp_376*tmp_414 + tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(-tmp_400*tmp_416 + tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_359*tmp_368 + tmp_355*tmp_413) + tmp_64*(-tmp_395*tmp_416 + tmp_395*tmp_417) + tmp_77*(-tmp_398*tmp_416 + tmp_398*tmp_417) + tmp_90*(-tmp_399*tmp_416 + tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_410 + tmp_195*tmp_411) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_404 + tmp_171*tmp_405) + tmp_77*(-tmp_176*tmp_406 + tmp_179*tmp_407) + tmp_90*(-tmp_184*tmp_408 + tmp_187*tmp_409);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_410 + tmp_230*tmp_411) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_404 + tmp_209*tmp_405) + tmp_77*(-tmp_213*tmp_406 + tmp_216*tmp_407) + tmp_90*(-tmp_220*tmp_408 + tmp_223*tmp_409);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_410 + tmp_260*tmp_411) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_404 + tmp_242*tmp_405) + tmp_77*(-tmp_245*tmp_406 + tmp_248*tmp_407) + tmp_90*(-tmp_251*tmp_408 + tmp_254*tmp_409);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_410 + tmp_290*tmp_411) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_404 + tmp_272*tmp_405) + tmp_77*(-tmp_277*tmp_406 + tmp_278*tmp_407) + tmp_90*(-tmp_283*tmp_408 + tmp_284*tmp_409);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_410 + tmp_315*tmp_411) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_404 + tmp_300*tmp_405) + tmp_77*(-tmp_304*tmp_406 + tmp_305*tmp_407) + tmp_90*(-tmp_309*tmp_408 + tmp_310*tmp_409);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_410 + tmp_335*tmp_411) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_404 + tmp_323*tmp_405) + tmp_77*(-tmp_326*tmp_406 + tmp_327*tmp_407) + tmp_90*(-tmp_330*tmp_408 + tmp_331*tmp_409);
      real_t a_4_0 = tmp_103*(-tmp_443*tmp_98 + tmp_447*tmp_99) + tmp_51*(-tmp_30*tmp_421 + tmp_34*tmp_427) + tmp_64*(-tmp_428*tmp_59 + tmp_432*tmp_60) + tmp_77*(-tmp_433*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_442*tmp_86);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_443 + tmp_121*tmp_446) + tmp_51*(-tmp_106*tmp_421 + tmp_109*tmp_426) + tmp_64*(-tmp_111*tmp_428 + tmp_112*tmp_431) + tmp_77*(-tmp_114*tmp_433 + tmp_115*tmp_436) + tmp_90*(-tmp_117*tmp_438 + tmp_118*tmp_441);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_443 + tmp_138*tmp_446) + tmp_51*(-tmp_124*tmp_421 + tmp_126*tmp_426) + tmp_64*(-tmp_128*tmp_428 + tmp_129*tmp_431) + tmp_77*(-tmp_131*tmp_433 + tmp_132*tmp_436) + tmp_90*(-tmp_134*tmp_438 + tmp_135*tmp_441);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_443 + tmp_155*tmp_446) + tmp_51*(-tmp_141*tmp_421 + tmp_143*tmp_426) + tmp_64*(-tmp_145*tmp_428 + tmp_146*tmp_431) + tmp_77*(-tmp_148*tmp_433 + tmp_149*tmp_436) + tmp_90*(-tmp_151*tmp_438 + tmp_152*tmp_441);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_443 + tmp_195*tmp_447) + tmp_51*(-tmp_160*tmp_421 + tmp_163*tmp_427) + tmp_64*(-tmp_168*tmp_428 + tmp_171*tmp_432) + tmp_77*(-tmp_176*tmp_433 + tmp_179*tmp_437) + tmp_90*(-tmp_184*tmp_438 + tmp_187*tmp_442);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_443 + tmp_230*tmp_447) + tmp_51*(-tmp_199*tmp_421 + tmp_202*tmp_427) + tmp_64*(-tmp_206*tmp_428 + tmp_209*tmp_432) + tmp_77*(-tmp_213*tmp_433 + tmp_216*tmp_437) + tmp_90*(-tmp_220*tmp_438 + tmp_223*tmp_442);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_443 + tmp_260*tmp_447) + tmp_51*(-tmp_233*tmp_421 + tmp_236*tmp_427) + tmp_64*(-tmp_239*tmp_428 + tmp_242*tmp_432) + tmp_77*(-tmp_245*tmp_433 + tmp_248*tmp_437) + tmp_90*(-tmp_251*tmp_438 + tmp_254*tmp_442);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_443 + tmp_290*tmp_447) + tmp_51*(-tmp_265*tmp_421 + tmp_266*tmp_427) + tmp_64*(-tmp_271*tmp_428 + tmp_272*tmp_432) + tmp_77*(-tmp_277*tmp_433 + tmp_278*tmp_437) + tmp_90*(-tmp_283*tmp_438 + tmp_284*tmp_442);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_443 + tmp_315*tmp_447) + tmp_51*(-tmp_294*tmp_421 + tmp_295*tmp_427) + tmp_64*(-tmp_299*tmp_428 + tmp_300*tmp_432) + tmp_77*(-tmp_304*tmp_433 + tmp_305*tmp_437) + tmp_90*(-tmp_309*tmp_438 + tmp_310*tmp_442);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_443 + tmp_335*tmp_447) + tmp_51*(-tmp_318*tmp_421 + tmp_319*tmp_427) + tmp_64*(-tmp_322*tmp_428 + tmp_323*tmp_432) + tmp_77*(-tmp_326*tmp_433 + tmp_327*tmp_437) + tmp_90*(-tmp_330*tmp_438 + tmp_331*tmp_442);
      real_t a_5_0 = tmp_103*(-tmp_469*tmp_98 + tmp_473*tmp_99) + tmp_51*(-tmp_30*tmp_448 + tmp_34*tmp_453) + tmp_64*(-tmp_454*tmp_59 + tmp_458*tmp_60) + tmp_77*(-tmp_459*tmp_72 + tmp_463*tmp_73) + tmp_90*(-tmp_464*tmp_85 + tmp_468*tmp_86);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_469 + tmp_121*tmp_472) + tmp_51*(-tmp_106*tmp_448 + tmp_109*tmp_452) + tmp_64*(-tmp_111*tmp_454 + tmp_112*tmp_457) + tmp_77*(-tmp_114*tmp_459 + tmp_115*tmp_462) + tmp_90*(-tmp_117*tmp_464 + tmp_118*tmp_467);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_469 + tmp_138*tmp_472) + tmp_51*(-tmp_124*tmp_448 + tmp_126*tmp_452) + tmp_64*(-tmp_128*tmp_454 + tmp_129*tmp_457) + tmp_77*(-tmp_131*tmp_459 + tmp_132*tmp_462) + tmp_90*(-tmp_134*tmp_464 + tmp_135*tmp_467);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_469 + tmp_155*tmp_472) + tmp_51*(-tmp_141*tmp_448 + tmp_143*tmp_452) + tmp_64*(-tmp_145*tmp_454 + tmp_146*tmp_457) + tmp_77*(-tmp_148*tmp_459 + tmp_149*tmp_462) + tmp_90*(-tmp_151*tmp_464 + tmp_152*tmp_467);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_469 + tmp_195*tmp_473) + tmp_51*(-tmp_160*tmp_448 + tmp_163*tmp_453) + tmp_64*(-tmp_168*tmp_454 + tmp_171*tmp_458) + tmp_77*(-tmp_176*tmp_459 + tmp_179*tmp_463) + tmp_90*(-tmp_184*tmp_464 + tmp_187*tmp_468);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_469 + tmp_230*tmp_473) + tmp_51*(-tmp_199*tmp_448 + tmp_202*tmp_453) + tmp_64*(-tmp_206*tmp_454 + tmp_209*tmp_458) + tmp_77*(-tmp_213*tmp_459 + tmp_216*tmp_463) + tmp_90*(-tmp_220*tmp_464 + tmp_223*tmp_468);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_469 + tmp_260*tmp_473) + tmp_51*(-tmp_233*tmp_448 + tmp_236*tmp_453) + tmp_64*(-tmp_239*tmp_454 + tmp_242*tmp_458) + tmp_77*(-tmp_245*tmp_459 + tmp_248*tmp_463) + tmp_90*(-tmp_251*tmp_464 + tmp_254*tmp_468);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_469 + tmp_290*tmp_473) + tmp_51*(-tmp_265*tmp_448 + tmp_266*tmp_453) + tmp_64*(-tmp_271*tmp_454 + tmp_272*tmp_458) + tmp_77*(-tmp_277*tmp_459 + tmp_278*tmp_463) + tmp_90*(-tmp_283*tmp_464 + tmp_284*tmp_468);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_469 + tmp_315*tmp_473) + tmp_51*(-tmp_294*tmp_448 + tmp_295*tmp_453) + tmp_64*(-tmp_299*tmp_454 + tmp_300*tmp_458) + tmp_77*(-tmp_304*tmp_459 + tmp_305*tmp_463) + tmp_90*(-tmp_309*tmp_464 + tmp_310*tmp_468);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_469 + tmp_335*tmp_473) + tmp_51*(-tmp_318*tmp_448 + tmp_319*tmp_453) + tmp_64*(-tmp_322*tmp_454 + tmp_323*tmp_458) + tmp_77*(-tmp_326*tmp_459 + tmp_327*tmp_463) + tmp_90*(-tmp_330*tmp_464 + tmp_331*tmp_468);
      real_t a_6_0 = tmp_103*(-tmp_494*tmp_98 + tmp_498*tmp_99) + tmp_51*(-tmp_30*tmp_474 + tmp_34*tmp_478) + tmp_64*(-tmp_479*tmp_59 + tmp_483*tmp_60) + tmp_77*(-tmp_484*tmp_72 + tmp_488*tmp_73) + tmp_90*(-tmp_489*tmp_85 + tmp_493*tmp_86);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_494 + tmp_121*tmp_497) + tmp_51*(-tmp_106*tmp_474 + tmp_109*tmp_477) + tmp_64*(-tmp_111*tmp_479 + tmp_112*tmp_482) + tmp_77*(-tmp_114*tmp_484 + tmp_115*tmp_487) + tmp_90*(-tmp_117*tmp_489 + tmp_118*tmp_492);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_494 + tmp_138*tmp_497) + tmp_51*(-tmp_124*tmp_474 + tmp_126*tmp_477) + tmp_64*(-tmp_128*tmp_479 + tmp_129*tmp_482) + tmp_77*(-tmp_131*tmp_484 + tmp_132*tmp_487) + tmp_90*(-tmp_134*tmp_489 + tmp_135*tmp_492);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_494 + tmp_155*tmp_497) + tmp_51*(-tmp_141*tmp_474 + tmp_143*tmp_477) + tmp_64*(-tmp_145*tmp_479 + tmp_146*tmp_482) + tmp_77*(-tmp_148*tmp_484 + tmp_149*tmp_487) + tmp_90*(-tmp_151*tmp_489 + tmp_152*tmp_492);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_494 + tmp_195*tmp_498) + tmp_51*(-tmp_160*tmp_474 + tmp_163*tmp_478) + tmp_64*(-tmp_168*tmp_479 + tmp_171*tmp_483) + tmp_77*(-tmp_176*tmp_484 + tmp_179*tmp_488) + tmp_90*(-tmp_184*tmp_489 + tmp_187*tmp_493);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_494 + tmp_230*tmp_498) + tmp_51*(-tmp_199*tmp_474 + tmp_202*tmp_478) + tmp_64*(-tmp_206*tmp_479 + tmp_209*tmp_483) + tmp_77*(-tmp_213*tmp_484 + tmp_216*tmp_488) + tmp_90*(-tmp_220*tmp_489 + tmp_223*tmp_493);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_494 + tmp_260*tmp_498) + tmp_51*(-tmp_233*tmp_474 + tmp_236*tmp_478) + tmp_64*(-tmp_239*tmp_479 + tmp_242*tmp_483) + tmp_77*(-tmp_245*tmp_484 + tmp_248*tmp_488) + tmp_90*(-tmp_251*tmp_489 + tmp_254*tmp_493);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_494 + tmp_290*tmp_498) + tmp_51*(-tmp_265*tmp_474 + tmp_266*tmp_478) + tmp_64*(-tmp_271*tmp_479 + tmp_272*tmp_483) + tmp_77*(-tmp_277*tmp_484 + tmp_278*tmp_488) + tmp_90*(-tmp_283*tmp_489 + tmp_284*tmp_493);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_494 + tmp_315*tmp_498) + tmp_51*(-tmp_294*tmp_474 + tmp_295*tmp_478) + tmp_64*(-tmp_299*tmp_479 + tmp_300*tmp_483) + tmp_77*(-tmp_304*tmp_484 + tmp_305*tmp_488) + tmp_90*(-tmp_309*tmp_489 + tmp_310*tmp_493);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_494 + tmp_335*tmp_498) + tmp_51*(-tmp_318*tmp_474 + tmp_319*tmp_478) + tmp_64*(-tmp_322*tmp_479 + tmp_323*tmp_483) + tmp_77*(-tmp_326*tmp_484 + tmp_327*tmp_488) + tmp_90*(-tmp_330*tmp_489 + tmp_331*tmp_493);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_0_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = p_affine_2_0 + tmp_7;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_3_0 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = tmp_3*tmp_8;
      real_t tmp_17 = tmp_12*tmp_9;
      real_t tmp_18 = tmp_14*tmp_5;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_15 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_11*tmp_13 - tmp_11*tmp_16 - tmp_18*tmp_4);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_9 + tmp_11*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_11*tmp_3 + tmp_4*tmp_9;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_13 - tmp_16;
      real_t tmp_30 = tmp_10 - tmp_18;
      real_t tmp_31 = tmp_15 - tmp_17;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_1_affine_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.71423491305446574;
      real_t tmp_7 = 0.62020410288672878;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = tmp_3*tmp_8;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_14*tmp_8;
      real_t tmp_16 = tmp_13 + tmp_15;
      real_t tmp_17 = 0.5*tmp_13 + 0.5*tmp_15;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = 1.0*tmp_11 + 1.0*tmp_9;
      real_t tmp_20 = 2.0*tmp_11 + 2.0*tmp_9;
      real_t tmp_21 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_22 = 0.15902069087198858*tmp_21;
      real_t tmp_23 = 0.3001244408904325;
      real_t tmp_24 = 2.5797958971132711;
      real_t tmp_25 = tmp_5*(tmp_23 + tmp_24 - 3);
      real_t tmp_26 = tmp_1*tmp_25;
      real_t tmp_27 = tmp_10*tmp_25;
      real_t tmp_28 = tmp_26 + tmp_27;
      real_t tmp_29 = tmp_25*tmp_3;
      real_t tmp_30 = tmp_14*tmp_25;
      real_t tmp_31 = tmp_29 + tmp_30;
      real_t tmp_32 = 0.5*tmp_29 + 0.5*tmp_30;
      real_t tmp_33 = 2*tmp_32;
      real_t tmp_34 = 1.0*tmp_26 + 1.0*tmp_27;
      real_t tmp_35 = 2.0*tmp_26 + 2.0*tmp_27;
      real_t tmp_36 = 0.090979309128011415*tmp_21;
      real_t tmp_37 = 2.6655609840588057;
      real_t tmp_38 = 0.62020410288672878;
      real_t tmp_39 = tmp_5*(tmp_37 + tmp_38 - 3);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_40 + tmp_41;
      real_t tmp_43 = tmp_3*tmp_39;
      real_t tmp_44 = tmp_14*tmp_39;
      real_t tmp_45 = tmp_43 + tmp_44;
      real_t tmp_46 = 0.5*tmp_43 + 0.5*tmp_44;
      real_t tmp_47 = 2*tmp_46;
      real_t tmp_48 = 1.0*tmp_40 + 1.0*tmp_41;
      real_t tmp_49 = 2.0*tmp_40 + 2.0*tmp_41;
      real_t tmp_50 = 0.15902069087198858*tmp_21;
      real_t tmp_51 = 1.1200796619962963;
      real_t tmp_52 = 2.5797958971132711;
      real_t tmp_53 = tmp_5*(tmp_51 + tmp_52 - 3);
      real_t tmp_54 = tmp_1*tmp_53;
      real_t tmp_55 = tmp_10*tmp_53;
      real_t tmp_56 = tmp_54 + tmp_55;
      real_t tmp_57 = tmp_3*tmp_53;
      real_t tmp_58 = tmp_14*tmp_53;
      real_t tmp_59 = tmp_57 + tmp_58;
      real_t tmp_60 = 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = 1.0*tmp_54 + 1.0*tmp_55;
      real_t tmp_63 = 2.0*tmp_54 + 2.0*tmp_55;
      real_t tmp_64 = 0.090979309128011415*tmp_21;
      real_t tmp_65 = (2.0/3.0)*tmp_12;
      real_t tmp_66 = tmp_6 - 1;
      real_t tmp_67 = tmp_10*tmp_5;
      real_t tmp_68 = tmp_66*tmp_67;
      real_t tmp_69 = -tmp_65*tmp_68;
      real_t tmp_70 = 2.0*tmp_19;
      real_t tmp_71 = 2.0*tmp_5;
      real_t tmp_72 = tmp_3*tmp_71;
      real_t tmp_73 = tmp_66*tmp_72;
      real_t tmp_74 = (2.0/3.0)*tmp_28;
      real_t tmp_75 = tmp_23 - 1;
      real_t tmp_76 = tmp_67*tmp_75;
      real_t tmp_77 = -tmp_74*tmp_76;
      real_t tmp_78 = 2.0*tmp_34;
      real_t tmp_79 = tmp_72*tmp_75;
      real_t tmp_80 = (2.0/3.0)*tmp_42;
      real_t tmp_81 = tmp_37 - 1;
      real_t tmp_82 = tmp_67*tmp_81;
      real_t tmp_83 = -tmp_80*tmp_82;
      real_t tmp_84 = 2.0*tmp_48;
      real_t tmp_85 = tmp_72*tmp_81;
      real_t tmp_86 = (2.0/3.0)*tmp_56;
      real_t tmp_87 = tmp_51 - 1;
      real_t tmp_88 = tmp_67*tmp_87;
      real_t tmp_89 = -tmp_86*tmp_88;
      real_t tmp_90 = 2.0*tmp_62;
      real_t tmp_91 = tmp_72*tmp_87;
      real_t tmp_92 = tmp_7 - 1;
      real_t tmp_93 = tmp_1*tmp_5;
      real_t tmp_94 = tmp_92*tmp_93;
      real_t tmp_95 = -tmp_65*tmp_94;
      real_t tmp_96 = tmp_14*tmp_71;
      real_t tmp_97 = tmp_92*tmp_96;
      real_t tmp_98 = tmp_24 - 1;
      real_t tmp_99 = tmp_93*tmp_98;
      real_t tmp_100 = -tmp_74*tmp_99;
      real_t tmp_101 = tmp_96*tmp_98;
      real_t tmp_102 = tmp_38 - 1;
      real_t tmp_103 = tmp_102*tmp_93;
      real_t tmp_104 = -tmp_103*tmp_80;
      real_t tmp_105 = tmp_102*tmp_96;
      real_t tmp_106 = tmp_52 - 1;
      real_t tmp_107 = tmp_106*tmp_93;
      real_t tmp_108 = -tmp_107*tmp_86;
      real_t tmp_109 = tmp_106*tmp_96;
      real_t tmp_110 = tmp_6*tmp_93;
      real_t tmp_111 = tmp_67*tmp_7;
      real_t tmp_112 = tmp_110 + tmp_111;
      real_t tmp_113 = -tmp_112*tmp_65;
      real_t tmp_114 = 8.0*tmp_5;
      real_t tmp_115 = tmp_1*tmp_114;
      real_t tmp_116 = 0.17855872826361643*tmp_115;
      real_t tmp_117 = tmp_10*tmp_114;
      real_t tmp_118 = 0.1550510257216822*tmp_117;
      real_t tmp_119 = tmp_116 + tmp_118;
      real_t tmp_120 = 4.0*tmp_5;
      real_t tmp_121 = tmp_120*tmp_14;
      real_t tmp_122 = 0.17855872826361643*tmp_121;
      real_t tmp_123 = tmp_120*tmp_3;
      real_t tmp_124 = 0.1550510257216822*tmp_123;
      real_t tmp_125 = tmp_122 + tmp_124;
      real_t tmp_126 = tmp_23*tmp_93;
      real_t tmp_127 = tmp_24*tmp_67;
      real_t tmp_128 = tmp_126 + tmp_127;
      real_t tmp_129 = -tmp_128*tmp_74;
      real_t tmp_130 = 0.075031110222608124*tmp_115;
      real_t tmp_131 = 0.64494897427831777*tmp_117;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.075031110222608124*tmp_121;
      real_t tmp_134 = 0.64494897427831777*tmp_123;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_37*tmp_93;
      real_t tmp_137 = tmp_38*tmp_67;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = -tmp_138*tmp_80;
      real_t tmp_140 = 0.66639024601470143*tmp_115;
      real_t tmp_141 = 0.1550510257216822*tmp_117;
      real_t tmp_142 = tmp_140 + tmp_141;
      real_t tmp_143 = 0.66639024601470143*tmp_121;
      real_t tmp_144 = 0.1550510257216822*tmp_123;
      real_t tmp_145 = tmp_143 + tmp_144;
      real_t tmp_146 = tmp_51*tmp_93;
      real_t tmp_147 = tmp_52*tmp_67;
      real_t tmp_148 = tmp_146 + tmp_147;
      real_t tmp_149 = -tmp_148*tmp_86;
      real_t tmp_150 = 0.28001991549907407*tmp_115;
      real_t tmp_151 = 0.64494897427831777*tmp_117;
      real_t tmp_152 = tmp_150 + tmp_151;
      real_t tmp_153 = 0.28001991549907407*tmp_121;
      real_t tmp_154 = 0.64494897427831777*tmp_123;
      real_t tmp_155 = tmp_153 + tmp_154;
      real_t tmp_156 = tmp_5*(2.7595917942265427 - tmp_6);
      real_t tmp_157 = tmp_1*tmp_156;
      real_t tmp_158 = -tmp_111 + tmp_157;
      real_t tmp_159 = -tmp_158*tmp_65;
      real_t tmp_160 = -tmp_118 + 2.0*tmp_157;
      real_t tmp_161 = tmp_14*tmp_156;
      real_t tmp_162 = -tmp_124 + tmp_161;
      real_t tmp_163 = tmp_5*(-tmp_23 - 1.1595917942265421);
      real_t tmp_164 = tmp_1*tmp_163;
      real_t tmp_165 = -tmp_127 + tmp_164;
      real_t tmp_166 = -tmp_165*tmp_74;
      real_t tmp_167 = -tmp_131 + 2.0*tmp_164;
      real_t tmp_168 = tmp_14*tmp_163;
      real_t tmp_169 = -tmp_134 + tmp_168;
      real_t tmp_170 = tmp_5*(2.7595917942265427 - tmp_37);
      real_t tmp_171 = tmp_1*tmp_170;
      real_t tmp_172 = -tmp_137 + tmp_171;
      real_t tmp_173 = -tmp_172*tmp_80;
      real_t tmp_174 = -tmp_141 + 2.0*tmp_171;
      real_t tmp_175 = tmp_14*tmp_170;
      real_t tmp_176 = -tmp_144 + tmp_175;
      real_t tmp_177 = tmp_5*(-tmp_51 - 1.1595917942265421);
      real_t tmp_178 = tmp_1*tmp_177;
      real_t tmp_179 = -tmp_147 + tmp_178;
      real_t tmp_180 = -tmp_179*tmp_86;
      real_t tmp_181 = -tmp_151 + 2.0*tmp_178;
      real_t tmp_182 = tmp_14*tmp_177;
      real_t tmp_183 = -tmp_154 + tmp_182;
      real_t tmp_184 = tmp_5*(2.5715301738910687 - tmp_7);
      real_t tmp_185 = tmp_10*tmp_184;
      real_t tmp_186 = -tmp_110 + tmp_185;
      real_t tmp_187 = -tmp_186*tmp_65;
      real_t tmp_188 = -tmp_116 + 2.0*tmp_185;
      real_t tmp_189 = tmp_184*tmp_3;
      real_t tmp_190 = -tmp_122 + tmp_189;
      real_t tmp_191 = tmp_5*(3.3997511182191351 - tmp_24);
      real_t tmp_192 = tmp_10*tmp_191;
      real_t tmp_193 = -tmp_126 + tmp_192;
      real_t tmp_194 = -tmp_193*tmp_74;
      real_t tmp_195 = -tmp_130 + 2.0*tmp_192;
      real_t tmp_196 = tmp_191*tmp_3;
      real_t tmp_197 = -tmp_133 + tmp_196;
      real_t tmp_198 = tmp_5*(-tmp_38 - 1.3311219681176114);
      real_t tmp_199 = tmp_10*tmp_198;
      real_t tmp_200 = -tmp_136 + tmp_199;
      real_t tmp_201 = -tmp_200*tmp_80;
      real_t tmp_202 = -tmp_140 + 2.0*tmp_199;
      real_t tmp_203 = tmp_198*tmp_3;
      real_t tmp_204 = -tmp_143 + tmp_203;
      real_t tmp_205 = tmp_5*(1.7598406760074075 - tmp_52);
      real_t tmp_206 = tmp_10*tmp_205;
      real_t tmp_207 = -tmp_146 + tmp_206;
      real_t tmp_208 = -tmp_207*tmp_86;
      real_t tmp_209 = -tmp_150 + 2.0*tmp_206;
      real_t tmp_210 = tmp_205*tmp_3;
      real_t tmp_211 = -tmp_153 + tmp_210;
      real_t tmp_212 = 1.0*tmp_5;
      real_t tmp_213 = tmp_212*tmp_3;
      real_t tmp_214 = tmp_213*tmp_66;
      real_t tmp_215 = 1.0*tmp_68;
      real_t tmp_216 = tmp_213*tmp_75;
      real_t tmp_217 = 1.0*tmp_76;
      real_t tmp_218 = tmp_213*tmp_81;
      real_t tmp_219 = 1.0*tmp_82;
      real_t tmp_220 = tmp_213*tmp_87;
      real_t tmp_221 = 1.0*tmp_88;
      real_t tmp_222 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_223 = tmp_222*(tmp_66*tmp_66);
      real_t tmp_224 = 1.3333333333333335*(tmp_10*tmp_10);
      real_t tmp_225 = 1.0*(tmp_3*tmp_3);
      real_t tmp_226 = tmp_222*(tmp_75*tmp_75);
      real_t tmp_227 = tmp_222*(tmp_81*tmp_81);
      real_t tmp_228 = tmp_222*(tmp_87*tmp_87);
      real_t tmp_229 = tmp_222*tmp_66*tmp_92;
      real_t tmp_230 = 1.3333333333333335*tmp_1*tmp_10;
      real_t tmp_231 = 1.0*tmp_14*tmp_3;
      real_t tmp_232 = tmp_75*tmp_98;
      real_t tmp_233 = tmp_222*tmp_230;
      real_t tmp_234 = tmp_222*tmp_231;
      real_t tmp_235 = tmp_102*tmp_81;
      real_t tmp_236 = tmp_106*tmp_87;
      real_t tmp_237 = tmp_22*(tmp_229*tmp_230 + tmp_229*tmp_231) + tmp_36*(tmp_232*tmp_233 + tmp_232*tmp_234) + tmp_50*(tmp_233*tmp_235 + tmp_234*tmp_235) + tmp_64*(tmp_233*tmp_236 + tmp_234*tmp_236);
      real_t tmp_238 = (2.0/3.0)*tmp_112;
      real_t tmp_239 = -tmp_238*tmp_68;
      real_t tmp_240 = (2.0/3.0)*tmp_128;
      real_t tmp_241 = -tmp_240*tmp_76;
      real_t tmp_242 = (2.0/3.0)*tmp_138;
      real_t tmp_243 = -tmp_242*tmp_82;
      real_t tmp_244 = (2.0/3.0)*tmp_148;
      real_t tmp_245 = -tmp_244*tmp_88;
      real_t tmp_246 = (2.0/3.0)*tmp_158;
      real_t tmp_247 = -tmp_246*tmp_68;
      real_t tmp_248 = (2.0/3.0)*tmp_165;
      real_t tmp_249 = -tmp_248*tmp_76;
      real_t tmp_250 = (2.0/3.0)*tmp_172;
      real_t tmp_251 = -tmp_250*tmp_82;
      real_t tmp_252 = (2.0/3.0)*tmp_179;
      real_t tmp_253 = -tmp_252*tmp_88;
      real_t tmp_254 = (2.0/3.0)*tmp_186;
      real_t tmp_255 = -tmp_254*tmp_68;
      real_t tmp_256 = (2.0/3.0)*tmp_193;
      real_t tmp_257 = -tmp_256*tmp_76;
      real_t tmp_258 = (2.0/3.0)*tmp_200;
      real_t tmp_259 = -tmp_258*tmp_82;
      real_t tmp_260 = (2.0/3.0)*tmp_207;
      real_t tmp_261 = -tmp_260*tmp_88;
      real_t tmp_262 = tmp_14*tmp_212;
      real_t tmp_263 = tmp_262*tmp_92;
      real_t tmp_264 = 1.0*tmp_94;
      real_t tmp_265 = tmp_262*tmp_98;
      real_t tmp_266 = 1.0*tmp_99;
      real_t tmp_267 = tmp_102*tmp_262;
      real_t tmp_268 = 1.0*tmp_103;
      real_t tmp_269 = tmp_106*tmp_262;
      real_t tmp_270 = 1.0*tmp_107;
      real_t tmp_271 = tmp_222*(tmp_92*tmp_92);
      real_t tmp_272 = 1.3333333333333335*(tmp_1*tmp_1);
      real_t tmp_273 = 1.0*(tmp_14*tmp_14);
      real_t tmp_274 = tmp_222*(tmp_98*tmp_98);
      real_t tmp_275 = (tmp_102*tmp_102)*tmp_222;
      real_t tmp_276 = (tmp_106*tmp_106)*tmp_222;
      real_t tmp_277 = -tmp_238*tmp_94;
      real_t tmp_278 = -tmp_240*tmp_99;
      real_t tmp_279 = -tmp_103*tmp_242;
      real_t tmp_280 = -tmp_107*tmp_244;
      real_t tmp_281 = -tmp_246*tmp_94;
      real_t tmp_282 = -tmp_248*tmp_99;
      real_t tmp_283 = -tmp_103*tmp_250;
      real_t tmp_284 = -tmp_107*tmp_252;
      real_t tmp_285 = -tmp_254*tmp_94;
      real_t tmp_286 = -tmp_256*tmp_99;
      real_t tmp_287 = -tmp_103*tmp_258;
      real_t tmp_288 = -tmp_107*tmp_260;
      real_t tmp_289 = 0.17855872826361643*tmp_96;
      real_t tmp_290 = 0.1550510257216822*tmp_72;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = 2*tmp_291;
      real_t tmp_293 = tmp_1*tmp_120;
      real_t tmp_294 = 0.17855872826361643*tmp_293;
      real_t tmp_295 = tmp_10*tmp_120;
      real_t tmp_296 = 0.1550510257216822*tmp_295;
      real_t tmp_297 = tmp_294 + tmp_296;
      real_t tmp_298 = 0.075031110222608124*tmp_96;
      real_t tmp_299 = 0.64494897427831777*tmp_72;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = 2*tmp_300;
      real_t tmp_302 = 0.075031110222608124*tmp_293;
      real_t tmp_303 = 0.64494897427831777*tmp_295;
      real_t tmp_304 = tmp_302 + tmp_303;
      real_t tmp_305 = 0.66639024601470143*tmp_96;
      real_t tmp_306 = 0.1550510257216822*tmp_72;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = 2*tmp_307;
      real_t tmp_309 = 0.66639024601470143*tmp_293;
      real_t tmp_310 = 0.1550510257216822*tmp_295;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = 0.28001991549907407*tmp_96;
      real_t tmp_313 = 0.64494897427831777*tmp_72;
      real_t tmp_314 = tmp_312 + tmp_313;
      real_t tmp_315 = 2*tmp_314;
      real_t tmp_316 = 0.28001991549907407*tmp_293;
      real_t tmp_317 = 0.64494897427831777*tmp_295;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = 2.0*tmp_297;
      real_t tmp_320 = 2.0*tmp_304;
      real_t tmp_321 = 2.0*tmp_311;
      real_t tmp_322 = 2.0*tmp_318;
      real_t tmp_323 = -tmp_158*tmp_238;
      real_t tmp_324 = -tmp_165*tmp_240;
      real_t tmp_325 = -tmp_172*tmp_242;
      real_t tmp_326 = -tmp_179*tmp_244;
      real_t tmp_327 = -tmp_186*tmp_238;
      real_t tmp_328 = -tmp_193*tmp_240;
      real_t tmp_329 = -tmp_200*tmp_242;
      real_t tmp_330 = -tmp_207*tmp_244;
      real_t tmp_331 = 0.5*tmp_161 - tmp_290;
      real_t tmp_332 = 2*tmp_331;
      real_t tmp_333 = 1.0*tmp_157 - tmp_296;
      real_t tmp_334 = 0.5*tmp_168 - tmp_299;
      real_t tmp_335 = 2*tmp_334;
      real_t tmp_336 = 1.0*tmp_164 - tmp_303;
      real_t tmp_337 = 0.5*tmp_175 - tmp_306;
      real_t tmp_338 = 2*tmp_337;
      real_t tmp_339 = 1.0*tmp_171 - tmp_310;
      real_t tmp_340 = 0.5*tmp_182 - tmp_313;
      real_t tmp_341 = 2*tmp_340;
      real_t tmp_342 = 1.0*tmp_178 - tmp_317;
      real_t tmp_343 = 2.0*tmp_333;
      real_t tmp_344 = 2.0*tmp_336;
      real_t tmp_345 = 2.0*tmp_339;
      real_t tmp_346 = 2.0*tmp_342;
      real_t tmp_347 = -tmp_186*tmp_246;
      real_t tmp_348 = -tmp_193*tmp_248;
      real_t tmp_349 = -tmp_200*tmp_250;
      real_t tmp_350 = -tmp_207*tmp_252;
      real_t tmp_351 = 0.5*tmp_189 - tmp_289;
      real_t tmp_352 = 2*tmp_351;
      real_t tmp_353 = 1.0*tmp_185 - tmp_294;
      real_t tmp_354 = 0.5*tmp_196 - tmp_298;
      real_t tmp_355 = 2*tmp_354;
      real_t tmp_356 = 1.0*tmp_192 - tmp_302;
      real_t tmp_357 = 0.5*tmp_203 - tmp_305;
      real_t tmp_358 = 2*tmp_357;
      real_t tmp_359 = 1.0*tmp_199 - tmp_309;
      real_t tmp_360 = 0.5*tmp_210 - tmp_312;
      real_t tmp_361 = 2*tmp_360;
      real_t tmp_362 = 1.0*tmp_206 - tmp_316;
      real_t tmp_363 = 2.0*tmp_353;
      real_t tmp_364 = 2.0*tmp_356;
      real_t tmp_365 = 2.0*tmp_359;
      real_t tmp_366 = 2.0*tmp_362;
      real_t a_0_0 = tmp_22*(-2.0/3.0*(tmp_12*tmp_12) + tmp_16*tmp_18 + tmp_19*tmp_20) + tmp_36*(-2.0/3.0*(tmp_28*tmp_28) + tmp_31*tmp_33 + tmp_34*tmp_35) + tmp_50*(-2.0/3.0*(tmp_42*tmp_42) + tmp_45*tmp_47 + tmp_48*tmp_49) + tmp_64*(-2.0/3.0*(tmp_56*tmp_56) + tmp_59*tmp_61 + tmp_62*tmp_63);
      real_t a_0_1 = tmp_22*(tmp_17*tmp_73 + tmp_68*tmp_70 + tmp_69) + tmp_36*(tmp_32*tmp_79 + tmp_76*tmp_78 + tmp_77) + tmp_50*(tmp_46*tmp_85 + tmp_82*tmp_84 + tmp_83) + tmp_64*(tmp_60*tmp_91 + tmp_88*tmp_90 + tmp_89);
      real_t a_0_2 = tmp_22*(tmp_17*tmp_97 + tmp_70*tmp_94 + tmp_95) + tmp_36*(tmp_100 + tmp_101*tmp_32 + tmp_78*tmp_99) + tmp_50*(tmp_103*tmp_84 + tmp_104 + tmp_105*tmp_46) + tmp_64*(tmp_107*tmp_90 + tmp_108 + tmp_109*tmp_60);
      real_t a_0_3 = tmp_22*(tmp_113 + tmp_119*tmp_19 + tmp_125*tmp_18) + tmp_36*(tmp_129 + tmp_132*tmp_34 + tmp_135*tmp_33) + tmp_50*(tmp_139 + tmp_142*tmp_48 + tmp_145*tmp_47) + tmp_64*(tmp_149 + tmp_152*tmp_62 + tmp_155*tmp_61);
      real_t a_0_4 = tmp_22*(tmp_159 + tmp_160*tmp_19 + tmp_162*tmp_18) + tmp_36*(tmp_166 + tmp_167*tmp_34 + tmp_169*tmp_33) + tmp_50*(tmp_173 + tmp_174*tmp_48 + tmp_176*tmp_47) + tmp_64*(tmp_180 + tmp_181*tmp_62 + tmp_183*tmp_61);
      real_t a_0_5 = tmp_22*(tmp_18*tmp_190 + tmp_187 + tmp_188*tmp_19) + tmp_36*(tmp_194 + tmp_195*tmp_34 + tmp_197*tmp_33) + tmp_50*(tmp_201 + tmp_202*tmp_48 + tmp_204*tmp_47) + tmp_64*(tmp_208 + tmp_209*tmp_62 + tmp_211*tmp_61);
      real_t a_1_0 = tmp_22*(tmp_16*tmp_214 + tmp_20*tmp_215 + tmp_69) + tmp_36*(tmp_216*tmp_31 + tmp_217*tmp_35 + tmp_77) + tmp_50*(tmp_218*tmp_45 + tmp_219*tmp_49 + tmp_83) + tmp_64*(tmp_220*tmp_59 + tmp_221*tmp_63 + tmp_89);
      real_t a_1_1 = tmp_22*(tmp_223*tmp_224 + tmp_223*tmp_225) + tmp_36*(tmp_224*tmp_226 + tmp_225*tmp_226) + tmp_50*(tmp_224*tmp_227 + tmp_225*tmp_227) + tmp_64*(tmp_224*tmp_228 + tmp_225*tmp_228);
      real_t a_1_2 = tmp_237;
      real_t a_1_3 = tmp_22*(tmp_119*tmp_215 + tmp_125*tmp_214 + tmp_239) + tmp_36*(tmp_132*tmp_217 + tmp_135*tmp_216 + tmp_241) + tmp_50*(tmp_142*tmp_219 + tmp_145*tmp_218 + tmp_243) + tmp_64*(tmp_152*tmp_221 + tmp_155*tmp_220 + tmp_245);
      real_t a_1_4 = tmp_22*(tmp_160*tmp_215 + tmp_162*tmp_214 + tmp_247) + tmp_36*(tmp_167*tmp_217 + tmp_169*tmp_216 + tmp_249) + tmp_50*(tmp_174*tmp_219 + tmp_176*tmp_218 + tmp_251) + tmp_64*(tmp_181*tmp_221 + tmp_183*tmp_220 + tmp_253);
      real_t a_1_5 = tmp_22*(tmp_188*tmp_215 + tmp_190*tmp_214 + tmp_255) + tmp_36*(tmp_195*tmp_217 + tmp_197*tmp_216 + tmp_257) + tmp_50*(tmp_202*tmp_219 + tmp_204*tmp_218 + tmp_259) + tmp_64*(tmp_209*tmp_221 + tmp_211*tmp_220 + tmp_261);
      real_t a_2_0 = tmp_22*(tmp_16*tmp_263 + tmp_20*tmp_264 + tmp_95) + tmp_36*(tmp_100 + tmp_265*tmp_31 + tmp_266*tmp_35) + tmp_50*(tmp_104 + tmp_267*tmp_45 + tmp_268*tmp_49) + tmp_64*(tmp_108 + tmp_269*tmp_59 + tmp_270*tmp_63);
      real_t a_2_1 = tmp_237;
      real_t a_2_2 = tmp_22*(tmp_271*tmp_272 + tmp_271*tmp_273) + tmp_36*(tmp_272*tmp_274 + tmp_273*tmp_274) + tmp_50*(tmp_272*tmp_275 + tmp_273*tmp_275) + tmp_64*(tmp_272*tmp_276 + tmp_273*tmp_276);
      real_t a_2_3 = tmp_22*(tmp_119*tmp_264 + tmp_125*tmp_263 + tmp_277) + tmp_36*(tmp_132*tmp_266 + tmp_135*tmp_265 + tmp_278) + tmp_50*(tmp_142*tmp_268 + tmp_145*tmp_267 + tmp_279) + tmp_64*(tmp_152*tmp_270 + tmp_155*tmp_269 + tmp_280);
      real_t a_2_4 = tmp_22*(tmp_160*tmp_264 + tmp_162*tmp_263 + tmp_281) + tmp_36*(tmp_167*tmp_266 + tmp_169*tmp_265 + tmp_282) + tmp_50*(tmp_174*tmp_268 + tmp_176*tmp_267 + tmp_283) + tmp_64*(tmp_181*tmp_270 + tmp_183*tmp_269 + tmp_284);
      real_t a_2_5 = tmp_22*(tmp_188*tmp_264 + tmp_190*tmp_263 + tmp_285) + tmp_36*(tmp_195*tmp_266 + tmp_197*tmp_265 + tmp_286) + tmp_50*(tmp_202*tmp_268 + tmp_204*tmp_267 + tmp_287) + tmp_64*(tmp_209*tmp_270 + tmp_211*tmp_269 + tmp_288);
      real_t a_3_0 = tmp_22*(tmp_113 + tmp_16*tmp_292 + tmp_20*tmp_297) + tmp_36*(tmp_129 + tmp_301*tmp_31 + tmp_304*tmp_35) + tmp_50*(tmp_139 + tmp_308*tmp_45 + tmp_311*tmp_49) + tmp_64*(tmp_149 + tmp_315*tmp_59 + tmp_318*tmp_63);
      real_t a_3_1 = tmp_22*(tmp_239 + tmp_291*tmp_73 + tmp_319*tmp_68) + tmp_36*(tmp_241 + tmp_300*tmp_79 + tmp_320*tmp_76) + tmp_50*(tmp_243 + tmp_307*tmp_85 + tmp_321*tmp_82) + tmp_64*(tmp_245 + tmp_314*tmp_91 + tmp_322*tmp_88);
      real_t a_3_2 = tmp_22*(tmp_277 + tmp_291*tmp_97 + tmp_319*tmp_94) + tmp_36*(tmp_101*tmp_300 + tmp_278 + tmp_320*tmp_99) + tmp_50*(tmp_103*tmp_321 + tmp_105*tmp_307 + tmp_279) + tmp_64*(tmp_107*tmp_322 + tmp_109*tmp_314 + tmp_280);
      real_t a_3_3 = tmp_22*(-2.0/3.0*(tmp_112*tmp_112) + tmp_119*tmp_297 + tmp_125*tmp_292) + tmp_36*(-2.0/3.0*(tmp_128*tmp_128) + tmp_132*tmp_304 + tmp_135*tmp_301) + tmp_50*(-2.0/3.0*(tmp_138*tmp_138) + tmp_142*tmp_311 + tmp_145*tmp_308) + tmp_64*(-2.0/3.0*(tmp_148*tmp_148) + tmp_152*tmp_318 + tmp_155*tmp_315);
      real_t a_3_4 = tmp_22*(tmp_160*tmp_297 + tmp_162*tmp_292 + tmp_323) + tmp_36*(tmp_167*tmp_304 + tmp_169*tmp_301 + tmp_324) + tmp_50*(tmp_174*tmp_311 + tmp_176*tmp_308 + tmp_325) + tmp_64*(tmp_181*tmp_318 + tmp_183*tmp_315 + tmp_326);
      real_t a_3_5 = tmp_22*(tmp_188*tmp_297 + tmp_190*tmp_292 + tmp_327) + tmp_36*(tmp_195*tmp_304 + tmp_197*tmp_301 + tmp_328) + tmp_50*(tmp_202*tmp_311 + tmp_204*tmp_308 + tmp_329) + tmp_64*(tmp_209*tmp_318 + tmp_211*tmp_315 + tmp_330);
      real_t a_4_0 = tmp_22*(tmp_159 + tmp_16*tmp_332 + tmp_20*tmp_333) + tmp_36*(tmp_166 + tmp_31*tmp_335 + tmp_336*tmp_35) + tmp_50*(tmp_173 + tmp_338*tmp_45 + tmp_339*tmp_49) + tmp_64*(tmp_180 + tmp_341*tmp_59 + tmp_342*tmp_63);
      real_t a_4_1 = tmp_22*(tmp_247 + tmp_331*tmp_73 + tmp_343*tmp_68) + tmp_36*(tmp_249 + tmp_334*tmp_79 + tmp_344*tmp_76) + tmp_50*(tmp_251 + tmp_337*tmp_85 + tmp_345*tmp_82) + tmp_64*(tmp_253 + tmp_340*tmp_91 + tmp_346*tmp_88);
      real_t a_4_2 = tmp_22*(tmp_281 + tmp_331*tmp_97 + tmp_343*tmp_94) + tmp_36*(tmp_101*tmp_334 + tmp_282 + tmp_344*tmp_99) + tmp_50*(tmp_103*tmp_345 + tmp_105*tmp_337 + tmp_283) + tmp_64*(tmp_107*tmp_346 + tmp_109*tmp_340 + tmp_284);
      real_t a_4_3 = tmp_22*(tmp_119*tmp_333 + tmp_125*tmp_332 + tmp_323) + tmp_36*(tmp_132*tmp_336 + tmp_135*tmp_335 + tmp_324) + tmp_50*(tmp_142*tmp_339 + tmp_145*tmp_338 + tmp_325) + tmp_64*(tmp_152*tmp_342 + tmp_155*tmp_341 + tmp_326);
      real_t a_4_4 = tmp_22*(-2.0/3.0*(tmp_158*tmp_158) + tmp_160*tmp_333 + tmp_162*tmp_332) + tmp_36*(-2.0/3.0*(tmp_165*tmp_165) + tmp_167*tmp_336 + tmp_169*tmp_335) + tmp_50*(-2.0/3.0*(tmp_172*tmp_172) + tmp_174*tmp_339 + tmp_176*tmp_338) + tmp_64*(-2.0/3.0*(tmp_179*tmp_179) + tmp_181*tmp_342 + tmp_183*tmp_341);
      real_t a_4_5 = tmp_22*(tmp_188*tmp_333 + tmp_190*tmp_332 + tmp_347) + tmp_36*(tmp_195*tmp_336 + tmp_197*tmp_335 + tmp_348) + tmp_50*(tmp_202*tmp_339 + tmp_204*tmp_338 + tmp_349) + tmp_64*(tmp_209*tmp_342 + tmp_211*tmp_341 + tmp_350);
      real_t a_5_0 = tmp_22*(tmp_16*tmp_352 + tmp_187 + tmp_20*tmp_353) + tmp_36*(tmp_194 + tmp_31*tmp_355 + tmp_35*tmp_356) + tmp_50*(tmp_201 + tmp_358*tmp_45 + tmp_359*tmp_49) + tmp_64*(tmp_208 + tmp_361*tmp_59 + tmp_362*tmp_63);
      real_t a_5_1 = tmp_22*(tmp_255 + tmp_351*tmp_73 + tmp_363*tmp_68) + tmp_36*(tmp_257 + tmp_354*tmp_79 + tmp_364*tmp_76) + tmp_50*(tmp_259 + tmp_357*tmp_85 + tmp_365*tmp_82) + tmp_64*(tmp_261 + tmp_360*tmp_91 + tmp_366*tmp_88);
      real_t a_5_2 = tmp_22*(tmp_285 + tmp_351*tmp_97 + tmp_363*tmp_94) + tmp_36*(tmp_101*tmp_354 + tmp_286 + tmp_364*tmp_99) + tmp_50*(tmp_103*tmp_365 + tmp_105*tmp_357 + tmp_287) + tmp_64*(tmp_107*tmp_366 + tmp_109*tmp_360 + tmp_288);
      real_t a_5_3 = tmp_22*(tmp_119*tmp_353 + tmp_125*tmp_352 + tmp_327) + tmp_36*(tmp_132*tmp_356 + tmp_135*tmp_355 + tmp_328) + tmp_50*(tmp_142*tmp_359 + tmp_145*tmp_358 + tmp_329) + tmp_64*(tmp_152*tmp_362 + tmp_155*tmp_361 + tmp_330);
      real_t a_5_4 = tmp_22*(tmp_160*tmp_353 + tmp_162*tmp_352 + tmp_347) + tmp_36*(tmp_167*tmp_356 + tmp_169*tmp_355 + tmp_348) + tmp_50*(tmp_174*tmp_359 + tmp_176*tmp_358 + tmp_349) + tmp_64*(tmp_181*tmp_362 + tmp_183*tmp_361 + tmp_350);
      real_t a_5_5 = tmp_22*(-2.0/3.0*(tmp_186*tmp_186) + tmp_188*tmp_353 + tmp_190*tmp_352) + tmp_36*(-2.0/3.0*(tmp_193*tmp_193) + tmp_195*tmp_356 + tmp_197*tmp_355) + tmp_50*(-2.0/3.0*(tmp_200*tmp_200) + tmp_202*tmp_359 + tmp_204*tmp_358) + tmp_64*(-2.0/3.0*(tmp_207*tmp_207) + tmp_209*tmp_362 + tmp_211*tmp_361);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_1_1_affine_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.71423491305446574;
      real_t tmp_6 = 0.62020410288672878;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = tmp_10 + tmp_8;
      real_t tmp_12 = tmp_3*tmp_7;
      real_t tmp_13 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_14 = tmp_13*tmp_7;
      real_t tmp_15 = 0.5*tmp_12 + 0.5*tmp_14;
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 1.0*tmp_10 + 1.0*tmp_8;
      real_t tmp_18 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_19 = 0.15902069087198858*tmp_18;
      real_t tmp_20 = 0.3001244408904325;
      real_t tmp_21 = 2.5797958971132711;
      real_t tmp_22 = tmp_4*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22;
      real_t tmp_24 = tmp_22*tmp_9;
      real_t tmp_25 = tmp_23 + tmp_24;
      real_t tmp_26 = tmp_22*tmp_3;
      real_t tmp_27 = tmp_13*tmp_22;
      real_t tmp_28 = 0.5*tmp_26 + 0.5*tmp_27;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_23 + 1.0*tmp_24;
      real_t tmp_31 = 0.090979309128011415*tmp_18;
      real_t tmp_32 = 2.6655609840588057;
      real_t tmp_33 = 0.62020410288672878;
      real_t tmp_34 = tmp_4*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_34*tmp_9;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_3*tmp_34;
      real_t tmp_39 = tmp_13*tmp_34;
      real_t tmp_40 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 1.0*tmp_35 + 1.0*tmp_36;
      real_t tmp_43 = 0.15902069087198858*tmp_18;
      real_t tmp_44 = 1.1200796619962963;
      real_t tmp_45 = 2.5797958971132711;
      real_t tmp_46 = tmp_4*(tmp_44 + tmp_45 - 3);
      real_t tmp_47 = tmp_1*tmp_46;
      real_t tmp_48 = tmp_46*tmp_9;
      real_t tmp_49 = tmp_47 + tmp_48;
      real_t tmp_50 = tmp_3*tmp_46;
      real_t tmp_51 = tmp_13*tmp_46;
      real_t tmp_52 = 0.5*tmp_50 + 0.5*tmp_51;
      real_t tmp_53 = 2*tmp_52;
      real_t tmp_54 = 1.0*tmp_47 + 1.0*tmp_48;
      real_t tmp_55 = 0.090979309128011415*tmp_18;
      real_t tmp_56 = (2.0/3.0)*tmp_11;
      real_t tmp_57 = tmp_5 - 1;
      real_t tmp_58 = tmp_4*tmp_9;
      real_t tmp_59 = tmp_57*tmp_58;
      real_t tmp_60 = 2.0*tmp_17;
      real_t tmp_61 = 2.0*tmp_4;
      real_t tmp_62 = tmp_3*tmp_61;
      real_t tmp_63 = (2.0/3.0)*tmp_25;
      real_t tmp_64 = tmp_20 - 1;
      real_t tmp_65 = tmp_58*tmp_64;
      real_t tmp_66 = 2.0*tmp_30;
      real_t tmp_67 = (2.0/3.0)*tmp_37;
      real_t tmp_68 = tmp_32 - 1;
      real_t tmp_69 = tmp_58*tmp_68;
      real_t tmp_70 = 2.0*tmp_42;
      real_t tmp_71 = (2.0/3.0)*tmp_49;
      real_t tmp_72 = tmp_44 - 1;
      real_t tmp_73 = tmp_58*tmp_72;
      real_t tmp_74 = 2.0*tmp_54;
      real_t tmp_75 = tmp_6 - 1;
      real_t tmp_76 = tmp_1*tmp_4;
      real_t tmp_77 = tmp_75*tmp_76;
      real_t tmp_78 = tmp_13*tmp_61;
      real_t tmp_79 = tmp_21 - 1;
      real_t tmp_80 = tmp_76*tmp_79;
      real_t tmp_81 = tmp_33 - 1;
      real_t tmp_82 = tmp_76*tmp_81;
      real_t tmp_83 = tmp_45 - 1;
      real_t tmp_84 = tmp_76*tmp_83;
      real_t tmp_85 = tmp_5*tmp_76;
      real_t tmp_86 = tmp_58*tmp_6;
      real_t tmp_87 = 8.0*tmp_4;
      real_t tmp_88 = tmp_1*tmp_87;
      real_t tmp_89 = 0.17855872826361643*tmp_88;
      real_t tmp_90 = tmp_87*tmp_9;
      real_t tmp_91 = 0.1550510257216822*tmp_90;
      real_t tmp_92 = 4.0*tmp_4;
      real_t tmp_93 = tmp_13*tmp_92;
      real_t tmp_94 = 0.17855872826361643*tmp_93;
      real_t tmp_95 = tmp_3*tmp_92;
      real_t tmp_96 = 0.1550510257216822*tmp_95;
      real_t tmp_97 = tmp_20*tmp_76;
      real_t tmp_98 = tmp_21*tmp_58;
      real_t tmp_99 = 0.075031110222608124*tmp_88;
      real_t tmp_100 = 0.64494897427831777*tmp_90;
      real_t tmp_101 = 0.075031110222608124*tmp_93;
      real_t tmp_102 = 0.64494897427831777*tmp_95;
      real_t tmp_103 = tmp_32*tmp_76;
      real_t tmp_104 = tmp_33*tmp_58;
      real_t tmp_105 = 0.66639024601470143*tmp_88;
      real_t tmp_106 = 0.1550510257216822*tmp_90;
      real_t tmp_107 = 0.66639024601470143*tmp_93;
      real_t tmp_108 = 0.1550510257216822*tmp_95;
      real_t tmp_109 = tmp_44*tmp_76;
      real_t tmp_110 = tmp_45*tmp_58;
      real_t tmp_111 = 0.28001991549907407*tmp_88;
      real_t tmp_112 = 0.64494897427831777*tmp_90;
      real_t tmp_113 = 0.28001991549907407*tmp_93;
      real_t tmp_114 = 0.64494897427831777*tmp_95;
      real_t tmp_115 = tmp_4*(2.7595917942265427 - tmp_5);
      real_t tmp_116 = tmp_1*tmp_115;
      real_t tmp_117 = tmp_4*(-tmp_20 - 1.1595917942265421);
      real_t tmp_118 = tmp_1*tmp_117;
      real_t tmp_119 = tmp_4*(2.7595917942265427 - tmp_32);
      real_t tmp_120 = tmp_1*tmp_119;
      real_t tmp_121 = tmp_4*(-tmp_44 - 1.1595917942265421);
      real_t tmp_122 = tmp_1*tmp_121;
      real_t tmp_123 = tmp_4*(2.5715301738910687 - tmp_6);
      real_t tmp_124 = tmp_123*tmp_9;
      real_t tmp_125 = tmp_4*(3.3997511182191351 - tmp_21);
      real_t tmp_126 = tmp_125*tmp_9;
      real_t tmp_127 = tmp_4*(-tmp_33 - 1.3311219681176114);
      real_t tmp_128 = tmp_127*tmp_9;
      real_t tmp_129 = tmp_4*(1.7598406760074075 - tmp_45);
      real_t tmp_130 = tmp_129*tmp_9;
      real_t a_0_0 = tmp_19*(-2.0/3.0*(tmp_11*tmp_11) + tmp_16*(tmp_12 + tmp_14) + tmp_17*(2.0*tmp_10 + 2.0*tmp_8)) + tmp_31*(-2.0/3.0*(tmp_25*tmp_25) + tmp_29*(tmp_26 + tmp_27) + tmp_30*(2.0*tmp_23 + 2.0*tmp_24)) + tmp_43*(-2.0/3.0*(tmp_37*tmp_37) + tmp_41*(tmp_38 + tmp_39) + tmp_42*(2.0*tmp_35 + 2.0*tmp_36)) + tmp_55*(-2.0/3.0*(tmp_49*tmp_49) + tmp_53*(tmp_50 + tmp_51) + tmp_54*(2.0*tmp_47 + 2.0*tmp_48));
      real_t a_0_1 = tmp_19*(tmp_15*tmp_57*tmp_62 - tmp_56*tmp_59 + tmp_59*tmp_60) + tmp_31*(tmp_28*tmp_62*tmp_64 - tmp_63*tmp_65 + tmp_65*tmp_66) + tmp_43*(tmp_40*tmp_62*tmp_68 - tmp_67*tmp_69 + tmp_69*tmp_70) + tmp_55*(tmp_52*tmp_62*tmp_72 - tmp_71*tmp_73 + tmp_73*tmp_74);
      real_t a_0_2 = tmp_19*(tmp_15*tmp_75*tmp_78 - tmp_56*tmp_77 + tmp_60*tmp_77) + tmp_31*(tmp_28*tmp_78*tmp_79 - tmp_63*tmp_80 + tmp_66*tmp_80) + tmp_43*(tmp_40*tmp_78*tmp_81 - tmp_67*tmp_82 + tmp_70*tmp_82) + tmp_55*(tmp_52*tmp_78*tmp_83 - tmp_71*tmp_84 + tmp_74*tmp_84);
      real_t a_0_3 = tmp_19*(tmp_16*(tmp_94 + tmp_96) + tmp_17*(tmp_89 + tmp_91) - tmp_56*(tmp_85 + tmp_86)) + tmp_31*(tmp_29*(tmp_101 + tmp_102) + tmp_30*(tmp_100 + tmp_99) - tmp_63*(tmp_97 + tmp_98)) + tmp_43*(tmp_41*(tmp_107 + tmp_108) + tmp_42*(tmp_105 + tmp_106) - tmp_67*(tmp_103 + tmp_104)) + tmp_55*(tmp_53*(tmp_113 + tmp_114) + tmp_54*(tmp_111 + tmp_112) - tmp_71*(tmp_109 + tmp_110));
      real_t a_0_4 = tmp_19*(tmp_16*(tmp_115*tmp_13 - tmp_96) + tmp_17*(2.0*tmp_116 - tmp_91) - tmp_56*(tmp_116 - tmp_86)) + tmp_31*(tmp_29*(-tmp_102 + tmp_117*tmp_13) + tmp_30*(-tmp_100 + 2.0*tmp_118) - tmp_63*(tmp_118 - tmp_98)) + tmp_43*(tmp_41*(-tmp_108 + tmp_119*tmp_13) + tmp_42*(-tmp_106 + 2.0*tmp_120) - tmp_67*(-tmp_104 + tmp_120)) + tmp_55*(tmp_53*(-tmp_114 + tmp_121*tmp_13) + tmp_54*(-tmp_112 + 2.0*tmp_122) - tmp_71*(-tmp_110 + tmp_122));
      real_t a_0_5 = tmp_19*(tmp_16*(tmp_123*tmp_3 - tmp_94) + tmp_17*(2.0*tmp_124 - tmp_89) - tmp_56*(tmp_124 - tmp_85)) + tmp_31*(tmp_29*(-tmp_101 + tmp_125*tmp_3) + tmp_30*(2.0*tmp_126 - tmp_99) - tmp_63*(tmp_126 - tmp_97)) + tmp_43*(tmp_41*(-tmp_107 + tmp_127*tmp_3) + tmp_42*(-tmp_105 + 2.0*tmp_128) - tmp_67*(-tmp_103 + tmp_128)) + tmp_55*(tmp_53*(-tmp_113 + tmp_129*tmp_3) + tmp_54*(-tmp_111 + 2.0*tmp_130) - tmp_71*(-tmp_109 + tmp_130));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_1_1_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_12 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_16 - tmp_17;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = -0.1333333333333333*tmp_63;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 0.66666666666666663;
      real_t tmp_67 = 2.0;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.074999999999999983*tmp_63;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = 2.0;
      real_t tmp_90 = 0.66666666666666663;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.074999999999999983*tmp_63;
      real_t tmp_111 = 2.0;
      real_t tmp_112 = 0.66666666666666663;
      real_t tmp_113 = 0.66666666666666663;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.074999999999999983*tmp_63;
      real_t tmp_134 = 0.66666666666666663;
      real_t tmp_135 = 0.66666666666666663;
      real_t tmp_136 = 0.66666666666666663;
      real_t tmp_137 = tmp_20*(tmp_134 + tmp_135 + tmp_136 - 3.0);
      real_t tmp_138 = tmp_137*tmp_8;
      real_t tmp_139 = tmp_137*tmp_26;
      real_t tmp_140 = tmp_137*tmp_28;
      real_t tmp_141 = tmp_138 + tmp_139 + tmp_140;
      real_t tmp_142 = tmp_137*tmp_31;
      real_t tmp_143 = tmp_137*tmp_33;
      real_t tmp_144 = tmp_137*tmp_35;
      real_t tmp_145 = tmp_142 + tmp_143 + tmp_144;
      real_t tmp_146 = 0.5*tmp_142 + 0.5*tmp_143 + 0.5*tmp_144;
      real_t tmp_147 = 2*tmp_146;
      real_t tmp_148 = tmp_137*tmp_40;
      real_t tmp_149 = tmp_137*tmp_42;
      real_t tmp_150 = tmp_137*tmp_44;
      real_t tmp_151 = tmp_148 + tmp_149 + tmp_150;
      real_t tmp_152 = 0.5*tmp_148 + 0.5*tmp_149 + 0.5*tmp_150;
      real_t tmp_153 = 2*tmp_152;
      real_t tmp_154 = 1.0*tmp_138 + 1.0*tmp_139 + 1.0*tmp_140;
      real_t tmp_155 = 2.0*tmp_138 + 2.0*tmp_139 + 2.0*tmp_140;
      real_t tmp_156 = 0.074999999999999983*tmp_63;
      real_t tmp_157 = (2.0/3.0)*tmp_30;
      real_t tmp_158 = tmp_21 - 1.0;
      real_t tmp_159 = tmp_20*tmp_28;
      real_t tmp_160 = tmp_158*tmp_159;
      real_t tmp_161 = -tmp_157*tmp_160;
      real_t tmp_162 = 2.0*tmp_20;
      real_t tmp_163 = tmp_158*tmp_162;
      real_t tmp_164 = tmp_163*tmp_35;
      real_t tmp_165 = 2.0*tmp_49;
      real_t tmp_166 = tmp_163*tmp_44;
      real_t tmp_167 = (2.0/3.0)*tmp_72;
      real_t tmp_168 = tmp_65 - 1.0;
      real_t tmp_169 = tmp_159*tmp_168;
      real_t tmp_170 = -tmp_167*tmp_169;
      real_t tmp_171 = tmp_162*tmp_168;
      real_t tmp_172 = tmp_171*tmp_35;
      real_t tmp_173 = 2.0*tmp_85;
      real_t tmp_174 = tmp_171*tmp_44;
      real_t tmp_175 = (2.0/3.0)*tmp_95;
      real_t tmp_176 = tmp_88 - 1.0;
      real_t tmp_177 = tmp_159*tmp_176;
      real_t tmp_178 = -tmp_175*tmp_177;
      real_t tmp_179 = tmp_162*tmp_176;
      real_t tmp_180 = tmp_179*tmp_35;
      real_t tmp_181 = 2.0*tmp_108;
      real_t tmp_182 = tmp_179*tmp_44;
      real_t tmp_183 = (2.0/3.0)*tmp_118;
      real_t tmp_184 = tmp_111 - 1.0;
      real_t tmp_185 = tmp_159*tmp_184;
      real_t tmp_186 = -tmp_183*tmp_185;
      real_t tmp_187 = tmp_162*tmp_184;
      real_t tmp_188 = tmp_187*tmp_35;
      real_t tmp_189 = 2.0*tmp_131;
      real_t tmp_190 = tmp_187*tmp_44;
      real_t tmp_191 = (2.0/3.0)*tmp_141;
      real_t tmp_192 = tmp_134 - 1.0;
      real_t tmp_193 = tmp_159*tmp_192;
      real_t tmp_194 = -tmp_191*tmp_193;
      real_t tmp_195 = tmp_162*tmp_192;
      real_t tmp_196 = tmp_195*tmp_35;
      real_t tmp_197 = 2.0*tmp_154;
      real_t tmp_198 = tmp_195*tmp_44;
      real_t tmp_199 = tmp_22 - 1.0;
      real_t tmp_200 = tmp_20*tmp_26;
      real_t tmp_201 = tmp_199*tmp_200;
      real_t tmp_202 = -tmp_157*tmp_201;
      real_t tmp_203 = tmp_162*tmp_199;
      real_t tmp_204 = tmp_203*tmp_33;
      real_t tmp_205 = tmp_203*tmp_42;
      real_t tmp_206 = tmp_66 - 1.0;
      real_t tmp_207 = tmp_200*tmp_206;
      real_t tmp_208 = -tmp_167*tmp_207;
      real_t tmp_209 = tmp_162*tmp_206;
      real_t tmp_210 = tmp_209*tmp_33;
      real_t tmp_211 = tmp_209*tmp_42;
      real_t tmp_212 = tmp_89 - 1.0;
      real_t tmp_213 = tmp_200*tmp_212;
      real_t tmp_214 = -tmp_175*tmp_213;
      real_t tmp_215 = tmp_162*tmp_212;
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_215*tmp_42;
      real_t tmp_218 = tmp_112 - 1.0;
      real_t tmp_219 = tmp_200*tmp_218;
      real_t tmp_220 = -tmp_183*tmp_219;
      real_t tmp_221 = tmp_162*tmp_218;
      real_t tmp_222 = tmp_221*tmp_33;
      real_t tmp_223 = tmp_221*tmp_42;
      real_t tmp_224 = tmp_135 - 1.0;
      real_t tmp_225 = tmp_200*tmp_224;
      real_t tmp_226 = -tmp_191*tmp_225;
      real_t tmp_227 = tmp_162*tmp_224;
      real_t tmp_228 = tmp_227*tmp_33;
      real_t tmp_229 = tmp_227*tmp_42;
      real_t tmp_230 = tmp_23 - 1.0;
      real_t tmp_231 = tmp_20*tmp_8;
      real_t tmp_232 = tmp_230*tmp_231;
      real_t tmp_233 = -tmp_157*tmp_232;
      real_t tmp_234 = tmp_162*tmp_230;
      real_t tmp_235 = tmp_234*tmp_31;
      real_t tmp_236 = tmp_234*tmp_40;
      real_t tmp_237 = tmp_67 - 1.0;
      real_t tmp_238 = tmp_231*tmp_237;
      real_t tmp_239 = -tmp_167*tmp_238;
      real_t tmp_240 = tmp_162*tmp_237;
      real_t tmp_241 = tmp_240*tmp_31;
      real_t tmp_242 = tmp_240*tmp_40;
      real_t tmp_243 = tmp_90 - 1.0;
      real_t tmp_244 = tmp_231*tmp_243;
      real_t tmp_245 = -tmp_175*tmp_244;
      real_t tmp_246 = tmp_162*tmp_243;
      real_t tmp_247 = tmp_246*tmp_31;
      real_t tmp_248 = tmp_246*tmp_40;
      real_t tmp_249 = tmp_113 - 1.0;
      real_t tmp_250 = tmp_231*tmp_249;
      real_t tmp_251 = -tmp_183*tmp_250;
      real_t tmp_252 = tmp_162*tmp_249;
      real_t tmp_253 = tmp_252*tmp_31;
      real_t tmp_254 = tmp_252*tmp_40;
      real_t tmp_255 = tmp_136 - 1.0;
      real_t tmp_256 = tmp_231*tmp_255;
      real_t tmp_257 = -tmp_191*tmp_256;
      real_t tmp_258 = tmp_162*tmp_255;
      real_t tmp_259 = tmp_258*tmp_31;
      real_t tmp_260 = tmp_258*tmp_40;
      real_t tmp_261 = tmp_22*tmp_231;
      real_t tmp_262 = tmp_200*tmp_23;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = -tmp_157*tmp_263;
      real_t tmp_265 = 2.0;
      real_t tmp_266 = tmp_231*tmp_265;
      real_t tmp_267 = 2.0;
      real_t tmp_268 = tmp_200*tmp_267;
      real_t tmp_269 = tmp_266 + tmp_268;
      real_t tmp_270 = tmp_20*tmp_22;
      real_t tmp_271 = tmp_270*tmp_31;
      real_t tmp_272 = tmp_20*tmp_23;
      real_t tmp_273 = tmp_272*tmp_33;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_270*tmp_40;
      real_t tmp_276 = tmp_272*tmp_42;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = tmp_231*tmp_66;
      real_t tmp_279 = tmp_200*tmp_67;
      real_t tmp_280 = tmp_278 + tmp_279;
      real_t tmp_281 = -tmp_167*tmp_280;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_231*tmp_282;
      real_t tmp_284 = 4.0;
      real_t tmp_285 = tmp_200*tmp_284;
      real_t tmp_286 = tmp_283 + tmp_285;
      real_t tmp_287 = tmp_20*tmp_66;
      real_t tmp_288 = tmp_287*tmp_31;
      real_t tmp_289 = tmp_20*tmp_67;
      real_t tmp_290 = tmp_289*tmp_33;
      real_t tmp_291 = tmp_288 + tmp_290;
      real_t tmp_292 = tmp_287*tmp_40;
      real_t tmp_293 = tmp_289*tmp_42;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_231*tmp_89;
      real_t tmp_296 = tmp_200*tmp_90;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = -tmp_175*tmp_297;
      real_t tmp_299 = 4.0;
      real_t tmp_300 = tmp_231*tmp_299;
      real_t tmp_301 = 1.3333333333333333;
      real_t tmp_302 = tmp_200*tmp_301;
      real_t tmp_303 = tmp_300 + tmp_302;
      real_t tmp_304 = tmp_20*tmp_89;
      real_t tmp_305 = tmp_304*tmp_31;
      real_t tmp_306 = tmp_20*tmp_90;
      real_t tmp_307 = tmp_306*tmp_33;
      real_t tmp_308 = tmp_305 + tmp_307;
      real_t tmp_309 = tmp_304*tmp_40;
      real_t tmp_310 = tmp_306*tmp_42;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_112*tmp_231;
      real_t tmp_313 = tmp_113*tmp_200;
      real_t tmp_314 = tmp_312 + tmp_313;
      real_t tmp_315 = -tmp_183*tmp_314;
      real_t tmp_316 = 1.3333333333333333;
      real_t tmp_317 = tmp_231*tmp_316;
      real_t tmp_318 = 1.3333333333333333;
      real_t tmp_319 = tmp_200*tmp_318;
      real_t tmp_320 = tmp_317 + tmp_319;
      real_t tmp_321 = tmp_112*tmp_20;
      real_t tmp_322 = tmp_31*tmp_321;
      real_t tmp_323 = tmp_113*tmp_20;
      real_t tmp_324 = tmp_323*tmp_33;
      real_t tmp_325 = tmp_322 + tmp_324;
      real_t tmp_326 = tmp_321*tmp_40;
      real_t tmp_327 = tmp_323*tmp_42;
      real_t tmp_328 = tmp_326 + tmp_327;
      real_t tmp_329 = tmp_135*tmp_231;
      real_t tmp_330 = tmp_136*tmp_200;
      real_t tmp_331 = tmp_329 + tmp_330;
      real_t tmp_332 = -tmp_191*tmp_331;
      real_t tmp_333 = 1.3333333333333333;
      real_t tmp_334 = tmp_231*tmp_333;
      real_t tmp_335 = 1.3333333333333333;
      real_t tmp_336 = tmp_200*tmp_335;
      real_t tmp_337 = tmp_334 + tmp_336;
      real_t tmp_338 = tmp_135*tmp_20;
      real_t tmp_339 = tmp_31*tmp_338;
      real_t tmp_340 = tmp_136*tmp_20;
      real_t tmp_341 = tmp_33*tmp_340;
      real_t tmp_342 = tmp_339 + tmp_341;
      real_t tmp_343 = tmp_338*tmp_40;
      real_t tmp_344 = tmp_340*tmp_42;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_21*tmp_231;
      real_t tmp_347 = tmp_159*tmp_23;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_157*tmp_348;
      real_t tmp_350 = 2.0;
      real_t tmp_351 = tmp_231*tmp_350;
      real_t tmp_352 = tmp_159*tmp_267;
      real_t tmp_353 = tmp_351 + tmp_352;
      real_t tmp_354 = tmp_20*tmp_21;
      real_t tmp_355 = tmp_31*tmp_354;
      real_t tmp_356 = tmp_272*tmp_35;
      real_t tmp_357 = tmp_355 + tmp_356;
      real_t tmp_358 = tmp_354*tmp_40;
      real_t tmp_359 = tmp_272*tmp_44;
      real_t tmp_360 = tmp_358 + tmp_359;
      real_t tmp_361 = tmp_231*tmp_65;
      real_t tmp_362 = tmp_159*tmp_67;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = -tmp_167*tmp_363;
      real_t tmp_365 = 1.3333333333333333;
      real_t tmp_366 = tmp_231*tmp_365;
      real_t tmp_367 = tmp_159*tmp_284;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_20*tmp_65;
      real_t tmp_370 = tmp_31*tmp_369;
      real_t tmp_371 = tmp_289*tmp_35;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_369*tmp_40;
      real_t tmp_374 = tmp_289*tmp_44;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_231*tmp_88;
      real_t tmp_377 = tmp_159*tmp_90;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = -tmp_175*tmp_378;
      real_t tmp_380 = 1.3333333333333333;
      real_t tmp_381 = tmp_231*tmp_380;
      real_t tmp_382 = tmp_159*tmp_301;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_20*tmp_88;
      real_t tmp_385 = tmp_31*tmp_384;
      real_t tmp_386 = tmp_306*tmp_35;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_384*tmp_40;
      real_t tmp_389 = tmp_306*tmp_44;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_111*tmp_231;
      real_t tmp_392 = tmp_113*tmp_159;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = -tmp_183*tmp_393;
      real_t tmp_395 = 4.0;
      real_t tmp_396 = tmp_231*tmp_395;
      real_t tmp_397 = tmp_159*tmp_318;
      real_t tmp_398 = tmp_396 + tmp_397;
      real_t tmp_399 = tmp_111*tmp_20;
      real_t tmp_400 = tmp_31*tmp_399;
      real_t tmp_401 = tmp_323*tmp_35;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_399*tmp_40;
      real_t tmp_404 = tmp_323*tmp_44;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_134*tmp_231;
      real_t tmp_407 = tmp_136*tmp_159;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_191*tmp_408;
      real_t tmp_410 = 1.3333333333333333;
      real_t tmp_411 = tmp_231*tmp_410;
      real_t tmp_412 = tmp_159*tmp_335;
      real_t tmp_413 = tmp_411 + tmp_412;
      real_t tmp_414 = tmp_134*tmp_20;
      real_t tmp_415 = tmp_31*tmp_414;
      real_t tmp_416 = tmp_340*tmp_35;
      real_t tmp_417 = tmp_415 + tmp_416;
      real_t tmp_418 = tmp_40*tmp_414;
      real_t tmp_419 = tmp_340*tmp_44;
      real_t tmp_420 = tmp_418 + tmp_419;
      real_t tmp_421 = tmp_200*tmp_21;
      real_t tmp_422 = tmp_159*tmp_22;
      real_t tmp_423 = tmp_421 + tmp_422;
      real_t tmp_424 = -tmp_157*tmp_423;
      real_t tmp_425 = tmp_200*tmp_350;
      real_t tmp_426 = tmp_159*tmp_265;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = tmp_33*tmp_354;
      real_t tmp_429 = tmp_270*tmp_35;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = tmp_354*tmp_42;
      real_t tmp_432 = tmp_270*tmp_44;
      real_t tmp_433 = tmp_431 + tmp_432;
      real_t tmp_434 = tmp_200*tmp_65;
      real_t tmp_435 = tmp_159*tmp_66;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = -tmp_167*tmp_436;
      real_t tmp_438 = tmp_200*tmp_365;
      real_t tmp_439 = tmp_159*tmp_282;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = tmp_33*tmp_369;
      real_t tmp_442 = tmp_287*tmp_35;
      real_t tmp_443 = tmp_441 + tmp_442;
      real_t tmp_444 = tmp_369*tmp_42;
      real_t tmp_445 = tmp_287*tmp_44;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = tmp_200*tmp_88;
      real_t tmp_448 = tmp_159*tmp_89;
      real_t tmp_449 = tmp_447 + tmp_448;
      real_t tmp_450 = -tmp_175*tmp_449;
      real_t tmp_451 = tmp_200*tmp_380;
      real_t tmp_452 = tmp_159*tmp_299;
      real_t tmp_453 = tmp_451 + tmp_452;
      real_t tmp_454 = tmp_33*tmp_384;
      real_t tmp_455 = tmp_304*tmp_35;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = tmp_384*tmp_42;
      real_t tmp_458 = tmp_304*tmp_44;
      real_t tmp_459 = tmp_457 + tmp_458;
      real_t tmp_460 = tmp_111*tmp_200;
      real_t tmp_461 = tmp_112*tmp_159;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = -tmp_183*tmp_462;
      real_t tmp_464 = tmp_200*tmp_395;
      real_t tmp_465 = tmp_159*tmp_316;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = tmp_33*tmp_399;
      real_t tmp_468 = tmp_321*tmp_35;
      real_t tmp_469 = tmp_467 + tmp_468;
      real_t tmp_470 = tmp_399*tmp_42;
      real_t tmp_471 = tmp_321*tmp_44;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = tmp_134*tmp_200;
      real_t tmp_474 = tmp_135*tmp_159;
      real_t tmp_475 = tmp_473 + tmp_474;
      real_t tmp_476 = -tmp_191*tmp_475;
      real_t tmp_477 = tmp_200*tmp_410;
      real_t tmp_478 = tmp_159*tmp_333;
      real_t tmp_479 = tmp_477 + tmp_478;
      real_t tmp_480 = tmp_33*tmp_414;
      real_t tmp_481 = tmp_338*tmp_35;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = tmp_414*tmp_42;
      real_t tmp_484 = tmp_338*tmp_44;
      real_t tmp_485 = tmp_483 + tmp_484;
      real_t tmp_486 = -tmp_22;
      real_t tmp_487 = 4.0 - tmp_21;
      real_t tmp_488 = tmp_20*(-tmp_267 + tmp_486 + tmp_487);
      real_t tmp_489 = tmp_488*tmp_8;
      real_t tmp_490 = -tmp_262 - tmp_347;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = -tmp_157*tmp_491;
      real_t tmp_493 = tmp_31*tmp_488;
      real_t tmp_494 = -tmp_273 - tmp_356 + tmp_493;
      real_t tmp_495 = -tmp_268 - tmp_352 + 2.0*tmp_489;
      real_t tmp_496 = tmp_40*tmp_488;
      real_t tmp_497 = -tmp_276 - tmp_359 + tmp_496;
      real_t tmp_498 = -tmp_66;
      real_t tmp_499 = 4.0 - tmp_65;
      real_t tmp_500 = tmp_20*(-tmp_284 + tmp_498 + tmp_499);
      real_t tmp_501 = tmp_500*tmp_8;
      real_t tmp_502 = -tmp_279 - tmp_362;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_167*tmp_503;
      real_t tmp_505 = tmp_31*tmp_500;
      real_t tmp_506 = -tmp_290 - tmp_371 + tmp_505;
      real_t tmp_507 = -tmp_285 - tmp_367 + 2.0*tmp_501;
      real_t tmp_508 = tmp_40*tmp_500;
      real_t tmp_509 = -tmp_293 - tmp_374 + tmp_508;
      real_t tmp_510 = -tmp_89;
      real_t tmp_511 = 4.0 - tmp_88;
      real_t tmp_512 = tmp_20*(-tmp_301 + tmp_510 + tmp_511);
      real_t tmp_513 = tmp_512*tmp_8;
      real_t tmp_514 = -tmp_296 - tmp_377;
      real_t tmp_515 = tmp_513 + tmp_514;
      real_t tmp_516 = -tmp_175*tmp_515;
      real_t tmp_517 = tmp_31*tmp_512;
      real_t tmp_518 = -tmp_307 - tmp_386 + tmp_517;
      real_t tmp_519 = -tmp_302 - tmp_382 + 2.0*tmp_513;
      real_t tmp_520 = tmp_40*tmp_512;
      real_t tmp_521 = -tmp_310 - tmp_389 + tmp_520;
      real_t tmp_522 = -tmp_112;
      real_t tmp_523 = 4.0 - tmp_111;
      real_t tmp_524 = tmp_20*(-tmp_318 + tmp_522 + tmp_523);
      real_t tmp_525 = tmp_524*tmp_8;
      real_t tmp_526 = -tmp_313 - tmp_392;
      real_t tmp_527 = tmp_525 + tmp_526;
      real_t tmp_528 = -tmp_183*tmp_527;
      real_t tmp_529 = tmp_31*tmp_524;
      real_t tmp_530 = -tmp_324 - tmp_401 + tmp_529;
      real_t tmp_531 = -tmp_319 - tmp_397 + 2.0*tmp_525;
      real_t tmp_532 = tmp_40*tmp_524;
      real_t tmp_533 = -tmp_327 - tmp_404 + tmp_532;
      real_t tmp_534 = -tmp_135;
      real_t tmp_535 = 4.0 - tmp_134;
      real_t tmp_536 = tmp_20*(-tmp_335 + tmp_534 + tmp_535);
      real_t tmp_537 = tmp_536*tmp_8;
      real_t tmp_538 = -tmp_330 - tmp_407;
      real_t tmp_539 = tmp_537 + tmp_538;
      real_t tmp_540 = -tmp_191*tmp_539;
      real_t tmp_541 = tmp_31*tmp_536;
      real_t tmp_542 = -tmp_341 - tmp_416 + tmp_541;
      real_t tmp_543 = -tmp_336 - tmp_412 + 2.0*tmp_537;
      real_t tmp_544 = tmp_40*tmp_536;
      real_t tmp_545 = -tmp_344 - tmp_419 + tmp_544;
      real_t tmp_546 = -tmp_23;
      real_t tmp_547 = tmp_20*(-tmp_265 + tmp_487 + tmp_546);
      real_t tmp_548 = tmp_26*tmp_547;
      real_t tmp_549 = -tmp_261 - tmp_422;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = -tmp_157*tmp_550;
      real_t tmp_552 = tmp_33*tmp_547;
      real_t tmp_553 = -tmp_271 - tmp_429 + tmp_552;
      real_t tmp_554 = -tmp_266 - tmp_426 + 2.0*tmp_548;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = -tmp_275 - tmp_432 + tmp_555;
      real_t tmp_557 = -tmp_67;
      real_t tmp_558 = tmp_20*(-tmp_282 + tmp_499 + tmp_557);
      real_t tmp_559 = tmp_26*tmp_558;
      real_t tmp_560 = -tmp_278 - tmp_435;
      real_t tmp_561 = tmp_559 + tmp_560;
      real_t tmp_562 = -tmp_167*tmp_561;
      real_t tmp_563 = tmp_33*tmp_558;
      real_t tmp_564 = -tmp_288 - tmp_442 + tmp_563;
      real_t tmp_565 = -tmp_283 - tmp_439 + 2.0*tmp_559;
      real_t tmp_566 = tmp_42*tmp_558;
      real_t tmp_567 = -tmp_292 - tmp_445 + tmp_566;
      real_t tmp_568 = -tmp_90;
      real_t tmp_569 = tmp_20*(-tmp_299 + tmp_511 + tmp_568);
      real_t tmp_570 = tmp_26*tmp_569;
      real_t tmp_571 = -tmp_295 - tmp_448;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = -tmp_175*tmp_572;
      real_t tmp_574 = tmp_33*tmp_569;
      real_t tmp_575 = -tmp_305 - tmp_455 + tmp_574;
      real_t tmp_576 = -tmp_300 - tmp_452 + 2.0*tmp_570;
      real_t tmp_577 = tmp_42*tmp_569;
      real_t tmp_578 = -tmp_309 - tmp_458 + tmp_577;
      real_t tmp_579 = -tmp_113;
      real_t tmp_580 = tmp_20*(-tmp_316 + tmp_523 + tmp_579);
      real_t tmp_581 = tmp_26*tmp_580;
      real_t tmp_582 = -tmp_312 - tmp_461;
      real_t tmp_583 = tmp_581 + tmp_582;
      real_t tmp_584 = -tmp_183*tmp_583;
      real_t tmp_585 = tmp_33*tmp_580;
      real_t tmp_586 = -tmp_322 - tmp_468 + tmp_585;
      real_t tmp_587 = -tmp_317 - tmp_465 + 2.0*tmp_581;
      real_t tmp_588 = tmp_42*tmp_580;
      real_t tmp_589 = -tmp_326 - tmp_471 + tmp_588;
      real_t tmp_590 = -tmp_136;
      real_t tmp_591 = tmp_20*(-tmp_333 + tmp_535 + tmp_590);
      real_t tmp_592 = tmp_26*tmp_591;
      real_t tmp_593 = -tmp_329 - tmp_474;
      real_t tmp_594 = tmp_592 + tmp_593;
      real_t tmp_595 = -tmp_191*tmp_594;
      real_t tmp_596 = tmp_33*tmp_591;
      real_t tmp_597 = -tmp_339 - tmp_481 + tmp_596;
      real_t tmp_598 = -tmp_334 - tmp_478 + 2.0*tmp_592;
      real_t tmp_599 = tmp_42*tmp_591;
      real_t tmp_600 = -tmp_343 - tmp_484 + tmp_599;
      real_t tmp_601 = tmp_20*(-tmp_350 + tmp_486 + tmp_546 + 4.0);
      real_t tmp_602 = tmp_28*tmp_601;
      real_t tmp_603 = -tmp_346 - tmp_421;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = -tmp_157*tmp_604;
      real_t tmp_606 = tmp_35*tmp_601;
      real_t tmp_607 = -tmp_355 - tmp_428 + tmp_606;
      real_t tmp_608 = -tmp_351 - tmp_425 + 2.0*tmp_602;
      real_t tmp_609 = tmp_44*tmp_601;
      real_t tmp_610 = -tmp_358 - tmp_431 + tmp_609;
      real_t tmp_611 = tmp_20*(-tmp_365 + tmp_498 + tmp_557 + 4.0);
      real_t tmp_612 = tmp_28*tmp_611;
      real_t tmp_613 = -tmp_361 - tmp_434;
      real_t tmp_614 = tmp_612 + tmp_613;
      real_t tmp_615 = -tmp_167*tmp_614;
      real_t tmp_616 = tmp_35*tmp_611;
      real_t tmp_617 = -tmp_370 - tmp_441 + tmp_616;
      real_t tmp_618 = -tmp_366 - tmp_438 + 2.0*tmp_612;
      real_t tmp_619 = tmp_44*tmp_611;
      real_t tmp_620 = -tmp_373 - tmp_444 + tmp_619;
      real_t tmp_621 = tmp_20*(-tmp_380 + tmp_510 + tmp_568 + 4.0);
      real_t tmp_622 = tmp_28*tmp_621;
      real_t tmp_623 = -tmp_376 - tmp_447;
      real_t tmp_624 = tmp_622 + tmp_623;
      real_t tmp_625 = -tmp_175*tmp_624;
      real_t tmp_626 = tmp_35*tmp_621;
      real_t tmp_627 = -tmp_385 - tmp_454 + tmp_626;
      real_t tmp_628 = -tmp_381 - tmp_451 + 2.0*tmp_622;
      real_t tmp_629 = tmp_44*tmp_621;
      real_t tmp_630 = -tmp_388 - tmp_457 + tmp_629;
      real_t tmp_631 = tmp_20*(-tmp_395 + tmp_522 + tmp_579 + 4.0);
      real_t tmp_632 = tmp_28*tmp_631;
      real_t tmp_633 = -tmp_391 - tmp_460;
      real_t tmp_634 = tmp_632 + tmp_633;
      real_t tmp_635 = -tmp_183*tmp_634;
      real_t tmp_636 = tmp_35*tmp_631;
      real_t tmp_637 = -tmp_400 - tmp_467 + tmp_636;
      real_t tmp_638 = -tmp_396 - tmp_464 + 2.0*tmp_632;
      real_t tmp_639 = tmp_44*tmp_631;
      real_t tmp_640 = -tmp_403 - tmp_470 + tmp_639;
      real_t tmp_641 = tmp_20*(-tmp_410 + tmp_534 + tmp_590 + 4.0);
      real_t tmp_642 = tmp_28*tmp_641;
      real_t tmp_643 = -tmp_406 - tmp_473;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = -tmp_191*tmp_644;
      real_t tmp_646 = tmp_35*tmp_641;
      real_t tmp_647 = -tmp_415 - tmp_480 + tmp_646;
      real_t tmp_648 = -tmp_411 - tmp_477 + 2.0*tmp_642;
      real_t tmp_649 = tmp_44*tmp_641;
      real_t tmp_650 = -tmp_418 - tmp_483 + tmp_649;
      real_t tmp_651 = 1.0*tmp_20;
      real_t tmp_652 = tmp_158*tmp_651;
      real_t tmp_653 = tmp_35*tmp_652;
      real_t tmp_654 = tmp_44*tmp_652;
      real_t tmp_655 = 1.0*tmp_160;
      real_t tmp_656 = tmp_168*tmp_651;
      real_t tmp_657 = tmp_35*tmp_656;
      real_t tmp_658 = tmp_44*tmp_656;
      real_t tmp_659 = 1.0*tmp_169;
      real_t tmp_660 = tmp_176*tmp_651;
      real_t tmp_661 = tmp_35*tmp_660;
      real_t tmp_662 = tmp_44*tmp_660;
      real_t tmp_663 = 1.0*tmp_177;
      real_t tmp_664 = tmp_184*tmp_651;
      real_t tmp_665 = tmp_35*tmp_664;
      real_t tmp_666 = tmp_44*tmp_664;
      real_t tmp_667 = 1.0*tmp_185;
      real_t tmp_668 = tmp_192*tmp_651;
      real_t tmp_669 = tmp_35*tmp_668;
      real_t tmp_670 = tmp_44*tmp_668;
      real_t tmp_671 = 1.0*tmp_193;
      real_t tmp_672 = (tmp_35*tmp_35);
      real_t tmp_673 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_674 = 0;
      real_t tmp_675 = 16.0*tmp_674;
      real_t tmp_676 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_677 = (tmp_44*tmp_44);
      real_t tmp_678 = 0.0069444444444444458*tmp_673;
      real_t tmp_679 = 16.0*tmp_678;
      real_t tmp_680 = 0.0069444444444444458*tmp_673;
      real_t tmp_681 = 16.0*tmp_680;
      real_t tmp_682 = 0.0625*tmp_673;
      real_t tmp_683 = 16.0*tmp_682;
      real_t tmp_684 = 0.0069444444444444458*tmp_673;
      real_t tmp_685 = 16.0*tmp_684;
      real_t tmp_686 = tmp_158*tmp_199;
      real_t tmp_687 = 1.0*tmp_673;
      real_t tmp_688 = tmp_35*tmp_687;
      real_t tmp_689 = tmp_33*tmp_688;
      real_t tmp_690 = 1.3333333333333335*tmp_28*tmp_673;
      real_t tmp_691 = tmp_26*tmp_690;
      real_t tmp_692 = tmp_44*tmp_687;
      real_t tmp_693 = tmp_42*tmp_692;
      real_t tmp_694 = tmp_168*tmp_206;
      real_t tmp_695 = tmp_176*tmp_212;
      real_t tmp_696 = tmp_184*tmp_218;
      real_t tmp_697 = tmp_192*tmp_224;
      real_t tmp_698 = tmp_110*(tmp_689*tmp_695 + tmp_691*tmp_695 + tmp_693*tmp_695) + tmp_133*(tmp_689*tmp_696 + tmp_691*tmp_696 + tmp_693*tmp_696) + tmp_156*(tmp_689*tmp_697 + tmp_691*tmp_697 + tmp_693*tmp_697) + tmp_64*(tmp_686*tmp_689 + tmp_686*tmp_691 + tmp_686*tmp_693) + tmp_87*(tmp_689*tmp_694 + tmp_691*tmp_694 + tmp_693*tmp_694);
      real_t tmp_699 = tmp_158*tmp_230;
      real_t tmp_700 = tmp_31*tmp_688;
      real_t tmp_701 = tmp_690*tmp_8;
      real_t tmp_702 = tmp_40*tmp_692;
      real_t tmp_703 = tmp_168*tmp_237;
      real_t tmp_704 = tmp_176*tmp_243;
      real_t tmp_705 = tmp_184*tmp_249;
      real_t tmp_706 = tmp_192*tmp_255;
      real_t tmp_707 = tmp_110*(tmp_700*tmp_704 + tmp_701*tmp_704 + tmp_702*tmp_704) + tmp_133*(tmp_700*tmp_705 + tmp_701*tmp_705 + tmp_702*tmp_705) + tmp_156*(tmp_700*tmp_706 + tmp_701*tmp_706 + tmp_702*tmp_706) + tmp_64*(tmp_699*tmp_700 + tmp_699*tmp_701 + tmp_699*tmp_702) + tmp_87*(tmp_700*tmp_703 + tmp_701*tmp_703 + tmp_702*tmp_703);
      real_t tmp_708 = (2.0/3.0)*tmp_263;
      real_t tmp_709 = (2.0/3.0)*tmp_280;
      real_t tmp_710 = (2.0/3.0)*tmp_297;
      real_t tmp_711 = (2.0/3.0)*tmp_314;
      real_t tmp_712 = (2.0/3.0)*tmp_331;
      real_t tmp_713 = (2.0/3.0)*tmp_348;
      real_t tmp_714 = (2.0/3.0)*tmp_363;
      real_t tmp_715 = (2.0/3.0)*tmp_378;
      real_t tmp_716 = (2.0/3.0)*tmp_393;
      real_t tmp_717 = (2.0/3.0)*tmp_408;
      real_t tmp_718 = (2.0/3.0)*tmp_423;
      real_t tmp_719 = (2.0/3.0)*tmp_436;
      real_t tmp_720 = (2.0/3.0)*tmp_449;
      real_t tmp_721 = (2.0/3.0)*tmp_462;
      real_t tmp_722 = (2.0/3.0)*tmp_475;
      real_t tmp_723 = (2.0/3.0)*tmp_491;
      real_t tmp_724 = -tmp_160*tmp_723;
      real_t tmp_725 = (2.0/3.0)*tmp_503;
      real_t tmp_726 = -tmp_169*tmp_725;
      real_t tmp_727 = (2.0/3.0)*tmp_515;
      real_t tmp_728 = -tmp_177*tmp_727;
      real_t tmp_729 = (2.0/3.0)*tmp_527;
      real_t tmp_730 = -tmp_185*tmp_729;
      real_t tmp_731 = (2.0/3.0)*tmp_539;
      real_t tmp_732 = -tmp_193*tmp_731;
      real_t tmp_733 = (2.0/3.0)*tmp_550;
      real_t tmp_734 = -tmp_160*tmp_733;
      real_t tmp_735 = (2.0/3.0)*tmp_561;
      real_t tmp_736 = -tmp_169*tmp_735;
      real_t tmp_737 = (2.0/3.0)*tmp_572;
      real_t tmp_738 = -tmp_177*tmp_737;
      real_t tmp_739 = (2.0/3.0)*tmp_583;
      real_t tmp_740 = -tmp_185*tmp_739;
      real_t tmp_741 = (2.0/3.0)*tmp_594;
      real_t tmp_742 = -tmp_193*tmp_741;
      real_t tmp_743 = (2.0/3.0)*tmp_604;
      real_t tmp_744 = -tmp_160*tmp_743;
      real_t tmp_745 = (2.0/3.0)*tmp_614;
      real_t tmp_746 = -tmp_169*tmp_745;
      real_t tmp_747 = (2.0/3.0)*tmp_624;
      real_t tmp_748 = -tmp_177*tmp_747;
      real_t tmp_749 = (2.0/3.0)*tmp_634;
      real_t tmp_750 = -tmp_185*tmp_749;
      real_t tmp_751 = (2.0/3.0)*tmp_644;
      real_t tmp_752 = -tmp_193*tmp_751;
      real_t tmp_753 = tmp_199*tmp_651;
      real_t tmp_754 = tmp_33*tmp_753;
      real_t tmp_755 = tmp_42*tmp_753;
      real_t tmp_756 = 1.0*tmp_201;
      real_t tmp_757 = tmp_206*tmp_651;
      real_t tmp_758 = tmp_33*tmp_757;
      real_t tmp_759 = tmp_42*tmp_757;
      real_t tmp_760 = 1.0*tmp_207;
      real_t tmp_761 = tmp_212*tmp_651;
      real_t tmp_762 = tmp_33*tmp_761;
      real_t tmp_763 = tmp_42*tmp_761;
      real_t tmp_764 = 1.0*tmp_213;
      real_t tmp_765 = tmp_218*tmp_651;
      real_t tmp_766 = tmp_33*tmp_765;
      real_t tmp_767 = tmp_42*tmp_765;
      real_t tmp_768 = 1.0*tmp_219;
      real_t tmp_769 = tmp_224*tmp_651;
      real_t tmp_770 = tmp_33*tmp_769;
      real_t tmp_771 = tmp_42*tmp_769;
      real_t tmp_772 = 1.0*tmp_225;
      real_t tmp_773 = (tmp_33*tmp_33);
      real_t tmp_774 = 0;
      real_t tmp_775 = 16.0*tmp_774;
      real_t tmp_776 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_777 = (tmp_42*tmp_42);
      real_t tmp_778 = 0.0069444444444444458*tmp_673;
      real_t tmp_779 = 16.0*tmp_778;
      real_t tmp_780 = 0.0625*tmp_673;
      real_t tmp_781 = 16.0*tmp_780;
      real_t tmp_782 = 0.0069444444444444458*tmp_673;
      real_t tmp_783 = 16.0*tmp_782;
      real_t tmp_784 = 0.0069444444444444458*tmp_673;
      real_t tmp_785 = 16.0*tmp_784;
      real_t tmp_786 = tmp_199*tmp_230;
      real_t tmp_787 = tmp_687*tmp_786;
      real_t tmp_788 = tmp_31*tmp_33;
      real_t tmp_789 = 1.3333333333333335*tmp_26*tmp_673*tmp_8;
      real_t tmp_790 = tmp_40*tmp_42;
      real_t tmp_791 = tmp_206*tmp_237;
      real_t tmp_792 = tmp_687*tmp_788;
      real_t tmp_793 = tmp_687*tmp_790;
      real_t tmp_794 = tmp_212*tmp_243;
      real_t tmp_795 = tmp_218*tmp_249;
      real_t tmp_796 = tmp_224*tmp_255;
      real_t tmp_797 = tmp_110*(tmp_789*tmp_794 + tmp_792*tmp_794 + tmp_793*tmp_794) + tmp_133*(tmp_789*tmp_795 + tmp_792*tmp_795 + tmp_793*tmp_795) + tmp_156*(tmp_789*tmp_796 + tmp_792*tmp_796 + tmp_793*tmp_796) + tmp_64*(tmp_786*tmp_789 + tmp_787*tmp_788 + tmp_787*tmp_790) + tmp_87*(tmp_789*tmp_791 + tmp_791*tmp_792 + tmp_791*tmp_793);
      real_t tmp_798 = -tmp_201*tmp_723;
      real_t tmp_799 = -tmp_207*tmp_725;
      real_t tmp_800 = -tmp_213*tmp_727;
      real_t tmp_801 = -tmp_219*tmp_729;
      real_t tmp_802 = -tmp_225*tmp_731;
      real_t tmp_803 = -tmp_201*tmp_733;
      real_t tmp_804 = -tmp_207*tmp_735;
      real_t tmp_805 = -tmp_213*tmp_737;
      real_t tmp_806 = -tmp_219*tmp_739;
      real_t tmp_807 = -tmp_225*tmp_741;
      real_t tmp_808 = -tmp_201*tmp_743;
      real_t tmp_809 = -tmp_207*tmp_745;
      real_t tmp_810 = -tmp_213*tmp_747;
      real_t tmp_811 = -tmp_219*tmp_749;
      real_t tmp_812 = -tmp_225*tmp_751;
      real_t tmp_813 = tmp_230*tmp_651;
      real_t tmp_814 = tmp_31*tmp_813;
      real_t tmp_815 = tmp_40*tmp_813;
      real_t tmp_816 = 1.0*tmp_232;
      real_t tmp_817 = tmp_237*tmp_651;
      real_t tmp_818 = tmp_31*tmp_817;
      real_t tmp_819 = tmp_40*tmp_817;
      real_t tmp_820 = 1.0*tmp_238;
      real_t tmp_821 = tmp_243*tmp_651;
      real_t tmp_822 = tmp_31*tmp_821;
      real_t tmp_823 = tmp_40*tmp_821;
      real_t tmp_824 = 1.0*tmp_244;
      real_t tmp_825 = tmp_249*tmp_651;
      real_t tmp_826 = tmp_31*tmp_825;
      real_t tmp_827 = tmp_40*tmp_825;
      real_t tmp_828 = 1.0*tmp_250;
      real_t tmp_829 = tmp_255*tmp_651;
      real_t tmp_830 = tmp_31*tmp_829;
      real_t tmp_831 = tmp_40*tmp_829;
      real_t tmp_832 = 1.0*tmp_256;
      real_t tmp_833 = (tmp_31*tmp_31);
      real_t tmp_834 = 0;
      real_t tmp_835 = 16.0*tmp_834;
      real_t tmp_836 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_837 = (tmp_40*tmp_40);
      real_t tmp_838 = 0.0625*tmp_673;
      real_t tmp_839 = 16.0*tmp_838;
      real_t tmp_840 = 0.0069444444444444458*tmp_673;
      real_t tmp_841 = 16.0*tmp_840;
      real_t tmp_842 = 0.0069444444444444458*tmp_673;
      real_t tmp_843 = 16.0*tmp_842;
      real_t tmp_844 = 0.0069444444444444458*tmp_673;
      real_t tmp_845 = 16.0*tmp_844;
      real_t tmp_846 = -tmp_232*tmp_723;
      real_t tmp_847 = -tmp_238*tmp_725;
      real_t tmp_848 = -tmp_244*tmp_727;
      real_t tmp_849 = -tmp_250*tmp_729;
      real_t tmp_850 = -tmp_256*tmp_731;
      real_t tmp_851 = -tmp_232*tmp_733;
      real_t tmp_852 = -tmp_238*tmp_735;
      real_t tmp_853 = -tmp_244*tmp_737;
      real_t tmp_854 = -tmp_250*tmp_739;
      real_t tmp_855 = -tmp_256*tmp_741;
      real_t tmp_856 = -tmp_232*tmp_743;
      real_t tmp_857 = -tmp_238*tmp_745;
      real_t tmp_858 = -tmp_244*tmp_747;
      real_t tmp_859 = -tmp_250*tmp_749;
      real_t tmp_860 = -tmp_256*tmp_751;
      real_t tmp_861 = 0.25*tmp_162;
      real_t tmp_862 = tmp_31*tmp_861;
      real_t tmp_863 = 0.25*tmp_162;
      real_t tmp_864 = tmp_33*tmp_863;
      real_t tmp_865 = tmp_862 + tmp_864;
      real_t tmp_866 = 2*tmp_865;
      real_t tmp_867 = tmp_40*tmp_861;
      real_t tmp_868 = tmp_42*tmp_863;
      real_t tmp_869 = tmp_867 + tmp_868;
      real_t tmp_870 = 2*tmp_869;
      real_t tmp_871 = 0.16666666666666666*tmp_162;
      real_t tmp_872 = tmp_31*tmp_871;
      real_t tmp_873 = 0.5*tmp_162;
      real_t tmp_874 = tmp_33*tmp_873;
      real_t tmp_875 = tmp_872 + tmp_874;
      real_t tmp_876 = 2*tmp_875;
      real_t tmp_877 = tmp_40*tmp_871;
      real_t tmp_878 = tmp_42*tmp_873;
      real_t tmp_879 = tmp_877 + tmp_878;
      real_t tmp_880 = 2*tmp_879;
      real_t tmp_881 = 0.5*tmp_162;
      real_t tmp_882 = tmp_31*tmp_881;
      real_t tmp_883 = 0.16666666666666666*tmp_162;
      real_t tmp_884 = tmp_33*tmp_883;
      real_t tmp_885 = tmp_882 + tmp_884;
      real_t tmp_886 = 2*tmp_885;
      real_t tmp_887 = tmp_40*tmp_881;
      real_t tmp_888 = tmp_42*tmp_883;
      real_t tmp_889 = tmp_887 + tmp_888;
      real_t tmp_890 = 2*tmp_889;
      real_t tmp_891 = 0.16666666666666666*tmp_162;
      real_t tmp_892 = tmp_31*tmp_891;
      real_t tmp_893 = 0.16666666666666666*tmp_162;
      real_t tmp_894 = tmp_33*tmp_893;
      real_t tmp_895 = tmp_892 + tmp_894;
      real_t tmp_896 = 2*tmp_895;
      real_t tmp_897 = tmp_40*tmp_891;
      real_t tmp_898 = tmp_42*tmp_893;
      real_t tmp_899 = tmp_897 + tmp_898;
      real_t tmp_900 = 2*tmp_899;
      real_t tmp_901 = 0.16666666666666666*tmp_162;
      real_t tmp_902 = tmp_31*tmp_901;
      real_t tmp_903 = 0.16666666666666666*tmp_162;
      real_t tmp_904 = tmp_33*tmp_903;
      real_t tmp_905 = tmp_902 + tmp_904;
      real_t tmp_906 = 2*tmp_905;
      real_t tmp_907 = tmp_40*tmp_901;
      real_t tmp_908 = tmp_42*tmp_903;
      real_t tmp_909 = tmp_907 + tmp_908;
      real_t tmp_910 = 2*tmp_909;
      real_t tmp_911 = 1.3333333333333335*tmp_263;
      real_t tmp_912 = 1.3333333333333335*tmp_280;
      real_t tmp_913 = 1.3333333333333335*tmp_297;
      real_t tmp_914 = 1.3333333333333335*tmp_314;
      real_t tmp_915 = 1.3333333333333335*tmp_331;
      real_t tmp_916 = 0.25*tmp_231;
      real_t tmp_917 = 0.25*tmp_200;
      real_t tmp_918 = 0.16666666666666666*tmp_231;
      real_t tmp_919 = 0.5*tmp_200;
      real_t tmp_920 = 0.5*tmp_231;
      real_t tmp_921 = 0.16666666666666666*tmp_200;
      real_t tmp_922 = 0.16666666666666666*tmp_231;
      real_t tmp_923 = 0.16666666666666666*tmp_200;
      real_t tmp_924 = 0.16666666666666666*tmp_231;
      real_t tmp_925 = 0.16666666666666666*tmp_200;
      real_t tmp_926 = -tmp_348*tmp_708;
      real_t tmp_927 = -tmp_363*tmp_709;
      real_t tmp_928 = -tmp_378*tmp_710;
      real_t tmp_929 = -tmp_393*tmp_711;
      real_t tmp_930 = -tmp_408*tmp_712;
      real_t tmp_931 = -tmp_423*tmp_708;
      real_t tmp_932 = -tmp_436*tmp_709;
      real_t tmp_933 = -tmp_449*tmp_710;
      real_t tmp_934 = -tmp_462*tmp_711;
      real_t tmp_935 = -tmp_475*tmp_712;
      real_t tmp_936 = -tmp_491*tmp_708;
      real_t tmp_937 = -tmp_503*tmp_709;
      real_t tmp_938 = -tmp_515*tmp_710;
      real_t tmp_939 = -tmp_527*tmp_711;
      real_t tmp_940 = -tmp_539*tmp_712;
      real_t tmp_941 = -tmp_550*tmp_708;
      real_t tmp_942 = -tmp_561*tmp_709;
      real_t tmp_943 = -tmp_572*tmp_710;
      real_t tmp_944 = -tmp_583*tmp_711;
      real_t tmp_945 = -tmp_594*tmp_712;
      real_t tmp_946 = -tmp_604*tmp_708;
      real_t tmp_947 = -tmp_614*tmp_709;
      real_t tmp_948 = -tmp_624*tmp_710;
      real_t tmp_949 = -tmp_634*tmp_711;
      real_t tmp_950 = -tmp_644*tmp_712;
      real_t tmp_951 = 0.25*tmp_162;
      real_t tmp_952 = tmp_31*tmp_951;
      real_t tmp_953 = tmp_35*tmp_863;
      real_t tmp_954 = tmp_952 + tmp_953;
      real_t tmp_955 = 2*tmp_954;
      real_t tmp_956 = tmp_40*tmp_951;
      real_t tmp_957 = tmp_44*tmp_863;
      real_t tmp_958 = tmp_956 + tmp_957;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 0.16666666666666666*tmp_162;
      real_t tmp_961 = tmp_31*tmp_960;
      real_t tmp_962 = tmp_35*tmp_873;
      real_t tmp_963 = tmp_961 + tmp_962;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = tmp_40*tmp_960;
      real_t tmp_966 = tmp_44*tmp_873;
      real_t tmp_967 = tmp_965 + tmp_966;
      real_t tmp_968 = 2*tmp_967;
      real_t tmp_969 = 0.16666666666666666*tmp_162;
      real_t tmp_970 = tmp_31*tmp_969;
      real_t tmp_971 = tmp_35*tmp_883;
      real_t tmp_972 = tmp_970 + tmp_971;
      real_t tmp_973 = 2*tmp_972;
      real_t tmp_974 = tmp_40*tmp_969;
      real_t tmp_975 = tmp_44*tmp_883;
      real_t tmp_976 = tmp_974 + tmp_975;
      real_t tmp_977 = 2*tmp_976;
      real_t tmp_978 = 0.5*tmp_162;
      real_t tmp_979 = tmp_31*tmp_978;
      real_t tmp_980 = tmp_35*tmp_893;
      real_t tmp_981 = tmp_979 + tmp_980;
      real_t tmp_982 = 2*tmp_981;
      real_t tmp_983 = tmp_40*tmp_978;
      real_t tmp_984 = tmp_44*tmp_893;
      real_t tmp_985 = tmp_983 + tmp_984;
      real_t tmp_986 = 2*tmp_985;
      real_t tmp_987 = 0.16666666666666666*tmp_162;
      real_t tmp_988 = tmp_31*tmp_987;
      real_t tmp_989 = tmp_35*tmp_903;
      real_t tmp_990 = tmp_988 + tmp_989;
      real_t tmp_991 = 2*tmp_990;
      real_t tmp_992 = tmp_40*tmp_987;
      real_t tmp_993 = tmp_44*tmp_903;
      real_t tmp_994 = tmp_992 + tmp_993;
      real_t tmp_995 = 2*tmp_994;
      real_t tmp_996 = 1.3333333333333335*tmp_348;
      real_t tmp_997 = 1.3333333333333335*tmp_363;
      real_t tmp_998 = 1.3333333333333335*tmp_378;
      real_t tmp_999 = 1.3333333333333335*tmp_393;
      real_t tmp_1000 = 1.3333333333333335*tmp_408;
      real_t tmp_1001 = 0.25*tmp_231;
      real_t tmp_1002 = 0.25*tmp_159;
      real_t tmp_1003 = 0.16666666666666666*tmp_231;
      real_t tmp_1004 = 0.5*tmp_159;
      real_t tmp_1005 = 0.16666666666666666*tmp_231;
      real_t tmp_1006 = 0.16666666666666666*tmp_159;
      real_t tmp_1007 = 0.5*tmp_231;
      real_t tmp_1008 = 0.16666666666666666*tmp_159;
      real_t tmp_1009 = 0.16666666666666666*tmp_231;
      real_t tmp_1010 = 0.16666666666666666*tmp_159;
      real_t tmp_1011 = -tmp_423*tmp_713;
      real_t tmp_1012 = -tmp_436*tmp_714;
      real_t tmp_1013 = -tmp_449*tmp_715;
      real_t tmp_1014 = -tmp_462*tmp_716;
      real_t tmp_1015 = -tmp_475*tmp_717;
      real_t tmp_1016 = -tmp_491*tmp_713;
      real_t tmp_1017 = -tmp_503*tmp_714;
      real_t tmp_1018 = -tmp_515*tmp_715;
      real_t tmp_1019 = -tmp_527*tmp_716;
      real_t tmp_1020 = -tmp_539*tmp_717;
      real_t tmp_1021 = -tmp_550*tmp_713;
      real_t tmp_1022 = -tmp_561*tmp_714;
      real_t tmp_1023 = -tmp_572*tmp_715;
      real_t tmp_1024 = -tmp_583*tmp_716;
      real_t tmp_1025 = -tmp_594*tmp_717;
      real_t tmp_1026 = -tmp_604*tmp_713;
      real_t tmp_1027 = -tmp_614*tmp_714;
      real_t tmp_1028 = -tmp_624*tmp_715;
      real_t tmp_1029 = -tmp_634*tmp_716;
      real_t tmp_1030 = -tmp_644*tmp_717;
      real_t tmp_1031 = tmp_33*tmp_951;
      real_t tmp_1032 = tmp_35*tmp_861;
      real_t tmp_1033 = tmp_1031 + tmp_1032;
      real_t tmp_1034 = 2*tmp_1033;
      real_t tmp_1035 = tmp_42*tmp_951;
      real_t tmp_1036 = tmp_44*tmp_861;
      real_t tmp_1037 = tmp_1035 + tmp_1036;
      real_t tmp_1038 = 2*tmp_1037;
      real_t tmp_1039 = tmp_33*tmp_960;
      real_t tmp_1040 = tmp_35*tmp_871;
      real_t tmp_1041 = tmp_1039 + tmp_1040;
      real_t tmp_1042 = 2*tmp_1041;
      real_t tmp_1043 = tmp_42*tmp_960;
      real_t tmp_1044 = tmp_44*tmp_871;
      real_t tmp_1045 = tmp_1043 + tmp_1044;
      real_t tmp_1046 = 2*tmp_1045;
      real_t tmp_1047 = tmp_33*tmp_969;
      real_t tmp_1048 = tmp_35*tmp_881;
      real_t tmp_1049 = tmp_1047 + tmp_1048;
      real_t tmp_1050 = 2*tmp_1049;
      real_t tmp_1051 = tmp_42*tmp_969;
      real_t tmp_1052 = tmp_44*tmp_881;
      real_t tmp_1053 = tmp_1051 + tmp_1052;
      real_t tmp_1054 = 2*tmp_1053;
      real_t tmp_1055 = tmp_33*tmp_978;
      real_t tmp_1056 = tmp_35*tmp_891;
      real_t tmp_1057 = tmp_1055 + tmp_1056;
      real_t tmp_1058 = 2*tmp_1057;
      real_t tmp_1059 = tmp_42*tmp_978;
      real_t tmp_1060 = tmp_44*tmp_891;
      real_t tmp_1061 = tmp_1059 + tmp_1060;
      real_t tmp_1062 = 2*tmp_1061;
      real_t tmp_1063 = tmp_33*tmp_987;
      real_t tmp_1064 = tmp_35*tmp_901;
      real_t tmp_1065 = tmp_1063 + tmp_1064;
      real_t tmp_1066 = 2*tmp_1065;
      real_t tmp_1067 = tmp_42*tmp_987;
      real_t tmp_1068 = tmp_44*tmp_901;
      real_t tmp_1069 = tmp_1067 + tmp_1068;
      real_t tmp_1070 = 2*tmp_1069;
      real_t tmp_1071 = 1.3333333333333335*tmp_423;
      real_t tmp_1072 = 1.3333333333333335*tmp_436;
      real_t tmp_1073 = 1.3333333333333335*tmp_449;
      real_t tmp_1074 = 1.3333333333333335*tmp_462;
      real_t tmp_1075 = 1.3333333333333335*tmp_475;
      real_t tmp_1076 = 0.25*tmp_200;
      real_t tmp_1077 = 0.25*tmp_159;
      real_t tmp_1078 = 0.16666666666666666*tmp_200;
      real_t tmp_1079 = 0.16666666666666666*tmp_159;
      real_t tmp_1080 = 0.16666666666666666*tmp_200;
      real_t tmp_1081 = 0.5*tmp_159;
      real_t tmp_1082 = 0.5*tmp_200;
      real_t tmp_1083 = 0.16666666666666666*tmp_159;
      real_t tmp_1084 = 0.16666666666666666*tmp_200;
      real_t tmp_1085 = 0.16666666666666666*tmp_159;
      real_t tmp_1086 = -tmp_491*tmp_718;
      real_t tmp_1087 = -tmp_503*tmp_719;
      real_t tmp_1088 = -tmp_515*tmp_720;
      real_t tmp_1089 = -tmp_527*tmp_721;
      real_t tmp_1090 = -tmp_539*tmp_722;
      real_t tmp_1091 = -tmp_550*tmp_718;
      real_t tmp_1092 = -tmp_561*tmp_719;
      real_t tmp_1093 = -tmp_572*tmp_720;
      real_t tmp_1094 = -tmp_583*tmp_721;
      real_t tmp_1095 = -tmp_594*tmp_722;
      real_t tmp_1096 = -tmp_604*tmp_718;
      real_t tmp_1097 = -tmp_614*tmp_719;
      real_t tmp_1098 = -tmp_624*tmp_720;
      real_t tmp_1099 = -tmp_634*tmp_721;
      real_t tmp_1100 = -tmp_644*tmp_722;
      real_t tmp_1101 = 0.5*tmp_493 - tmp_864 - tmp_953;
      real_t tmp_1102 = 2*tmp_1101;
      real_t tmp_1103 = 0.5*tmp_496 - tmp_868 - tmp_957;
      real_t tmp_1104 = 2*tmp_1103;
      real_t tmp_1105 = 1.0*tmp_489 + tmp_490;
      real_t tmp_1106 = 0.5*tmp_505 - tmp_874 - tmp_962;
      real_t tmp_1107 = 2*tmp_1106;
      real_t tmp_1108 = 0.5*tmp_508 - tmp_878 - tmp_966;
      real_t tmp_1109 = 2*tmp_1108;
      real_t tmp_1110 = 1.0*tmp_501 + tmp_502;
      real_t tmp_1111 = 0.5*tmp_517 - tmp_884 - tmp_971;
      real_t tmp_1112 = 2*tmp_1111;
      real_t tmp_1113 = 0.5*tmp_520 - tmp_888 - tmp_975;
      real_t tmp_1114 = 2*tmp_1113;
      real_t tmp_1115 = 1.0*tmp_513 + tmp_514;
      real_t tmp_1116 = 0.5*tmp_529 - tmp_894 - tmp_980;
      real_t tmp_1117 = 2*tmp_1116;
      real_t tmp_1118 = 0.5*tmp_532 - tmp_898 - tmp_984;
      real_t tmp_1119 = 2*tmp_1118;
      real_t tmp_1120 = 1.0*tmp_525 + tmp_526;
      real_t tmp_1121 = 0.5*tmp_541 - tmp_904 - tmp_989;
      real_t tmp_1122 = 2*tmp_1121;
      real_t tmp_1123 = 0.5*tmp_544 - tmp_908 - tmp_993;
      real_t tmp_1124 = 2*tmp_1123;
      real_t tmp_1125 = 1.0*tmp_537 + tmp_538;
      real_t tmp_1126 = 2.0*tmp_1105;
      real_t tmp_1127 = 2.0*tmp_1110;
      real_t tmp_1128 = 2.0*tmp_1115;
      real_t tmp_1129 = 2.0*tmp_1120;
      real_t tmp_1130 = 2.0*tmp_1125;
      real_t tmp_1131 = -tmp_550*tmp_723;
      real_t tmp_1132 = -tmp_561*tmp_725;
      real_t tmp_1133 = -tmp_572*tmp_727;
      real_t tmp_1134 = -tmp_583*tmp_729;
      real_t tmp_1135 = -tmp_594*tmp_731;
      real_t tmp_1136 = -tmp_604*tmp_723;
      real_t tmp_1137 = -tmp_614*tmp_725;
      real_t tmp_1138 = -tmp_624*tmp_727;
      real_t tmp_1139 = -tmp_634*tmp_729;
      real_t tmp_1140 = -tmp_644*tmp_731;
      real_t tmp_1141 = -tmp_1032 + 0.5*tmp_552 - tmp_862;
      real_t tmp_1142 = 2*tmp_1141;
      real_t tmp_1143 = -tmp_1036 + 0.5*tmp_555 - tmp_867;
      real_t tmp_1144 = 2*tmp_1143;
      real_t tmp_1145 = 1.0*tmp_548 + tmp_549;
      real_t tmp_1146 = -tmp_1040 + 0.5*tmp_563 - tmp_872;
      real_t tmp_1147 = 2*tmp_1146;
      real_t tmp_1148 = -tmp_1044 + 0.5*tmp_566 - tmp_877;
      real_t tmp_1149 = 2*tmp_1148;
      real_t tmp_1150 = 1.0*tmp_559 + tmp_560;
      real_t tmp_1151 = -tmp_1048 + 0.5*tmp_574 - tmp_882;
      real_t tmp_1152 = 2*tmp_1151;
      real_t tmp_1153 = -tmp_1052 + 0.5*tmp_577 - tmp_887;
      real_t tmp_1154 = 2*tmp_1153;
      real_t tmp_1155 = 1.0*tmp_570 + tmp_571;
      real_t tmp_1156 = -tmp_1056 + 0.5*tmp_585 - tmp_892;
      real_t tmp_1157 = 2*tmp_1156;
      real_t tmp_1158 = -tmp_1060 + 0.5*tmp_588 - tmp_897;
      real_t tmp_1159 = 2*tmp_1158;
      real_t tmp_1160 = 1.0*tmp_581 + tmp_582;
      real_t tmp_1161 = -tmp_1064 + 0.5*tmp_596 - tmp_902;
      real_t tmp_1162 = 2*tmp_1161;
      real_t tmp_1163 = -tmp_1068 + 0.5*tmp_599 - tmp_907;
      real_t tmp_1164 = 2*tmp_1163;
      real_t tmp_1165 = 1.0*tmp_592 + tmp_593;
      real_t tmp_1166 = 2.0*tmp_1145;
      real_t tmp_1167 = 2.0*tmp_1150;
      real_t tmp_1168 = 2.0*tmp_1155;
      real_t tmp_1169 = 2.0*tmp_1160;
      real_t tmp_1170 = 2.0*tmp_1165;
      real_t tmp_1171 = -tmp_604*tmp_733;
      real_t tmp_1172 = -tmp_614*tmp_735;
      real_t tmp_1173 = -tmp_624*tmp_737;
      real_t tmp_1174 = -tmp_634*tmp_739;
      real_t tmp_1175 = -tmp_644*tmp_741;
      real_t tmp_1176 = -tmp_1031 + 0.5*tmp_606 - tmp_952;
      real_t tmp_1177 = 2*tmp_1176;
      real_t tmp_1178 = -tmp_1035 + 0.5*tmp_609 - tmp_956;
      real_t tmp_1179 = 2*tmp_1178;
      real_t tmp_1180 = 1.0*tmp_602 + tmp_603;
      real_t tmp_1181 = -tmp_1039 + 0.5*tmp_616 - tmp_961;
      real_t tmp_1182 = 2*tmp_1181;
      real_t tmp_1183 = -tmp_1043 + 0.5*tmp_619 - tmp_965;
      real_t tmp_1184 = 2*tmp_1183;
      real_t tmp_1185 = 1.0*tmp_612 + tmp_613;
      real_t tmp_1186 = -tmp_1047 + 0.5*tmp_626 - tmp_970;
      real_t tmp_1187 = 2*tmp_1186;
      real_t tmp_1188 = -tmp_1051 + 0.5*tmp_629 - tmp_974;
      real_t tmp_1189 = 2*tmp_1188;
      real_t tmp_1190 = 1.0*tmp_622 + tmp_623;
      real_t tmp_1191 = -tmp_1055 + 0.5*tmp_636 - tmp_979;
      real_t tmp_1192 = 2*tmp_1191;
      real_t tmp_1193 = -tmp_1059 + 0.5*tmp_639 - tmp_983;
      real_t tmp_1194 = 2*tmp_1193;
      real_t tmp_1195 = 1.0*tmp_632 + tmp_633;
      real_t tmp_1196 = -tmp_1063 + 0.5*tmp_646 - tmp_988;
      real_t tmp_1197 = 2*tmp_1196;
      real_t tmp_1198 = -tmp_1067 + 0.5*tmp_649 - tmp_992;
      real_t tmp_1199 = 2*tmp_1198;
      real_t tmp_1200 = 1.0*tmp_642 + tmp_643;
      real_t tmp_1201 = 2.0*tmp_1180;
      real_t tmp_1202 = 2.0*tmp_1185;
      real_t tmp_1203 = 2.0*tmp_1190;
      real_t tmp_1204 = 2.0*tmp_1195;
      real_t tmp_1205 = 2.0*tmp_1200;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_156*(-2.0/3.0*(tmp_141*tmp_141) + tmp_145*tmp_147 + tmp_151*tmp_153 + tmp_154*tmp_155) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_180 + tmp_106*tmp_182 + tmp_177*tmp_181 + tmp_178) + tmp_133*(tmp_123*tmp_188 + tmp_129*tmp_190 + tmp_185*tmp_189 + tmp_186) + tmp_156*(tmp_146*tmp_196 + tmp_152*tmp_198 + tmp_193*tmp_197 + tmp_194) + tmp_64*(tmp_160*tmp_165 + tmp_161 + tmp_164*tmp_38 + tmp_166*tmp_47) + tmp_87*(tmp_169*tmp_173 + tmp_170 + tmp_172*tmp_77 + tmp_174*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_216 + tmp_106*tmp_217 + tmp_181*tmp_213 + tmp_214) + tmp_133*(tmp_123*tmp_222 + tmp_129*tmp_223 + tmp_189*tmp_219 + tmp_220) + tmp_156*(tmp_146*tmp_228 + tmp_152*tmp_229 + tmp_197*tmp_225 + tmp_226) + tmp_64*(tmp_165*tmp_201 + tmp_202 + tmp_204*tmp_38 + tmp_205*tmp_47) + tmp_87*(tmp_173*tmp_207 + tmp_208 + tmp_210*tmp_77 + tmp_211*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_247 + tmp_106*tmp_248 + tmp_181*tmp_244 + tmp_245) + tmp_133*(tmp_123*tmp_253 + tmp_129*tmp_254 + tmp_189*tmp_250 + tmp_251) + tmp_156*(tmp_146*tmp_259 + tmp_152*tmp_260 + tmp_197*tmp_256 + tmp_257) + tmp_64*(tmp_165*tmp_232 + tmp_233 + tmp_235*tmp_38 + tmp_236*tmp_47) + tmp_87*(tmp_173*tmp_238 + tmp_239 + tmp_241*tmp_77 + tmp_242*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_308 + tmp_107*tmp_311 + tmp_108*tmp_303 + tmp_298) + tmp_133*(tmp_124*tmp_325 + tmp_130*tmp_328 + tmp_131*tmp_320 + tmp_315) + tmp_156*(tmp_147*tmp_342 + tmp_153*tmp_345 + tmp_154*tmp_337 + tmp_332) + tmp_64*(tmp_264 + tmp_269*tmp_49 + tmp_274*tmp_39 + tmp_277*tmp_48) + tmp_87*(tmp_281 + tmp_286*tmp_85 + tmp_291*tmp_78 + tmp_294*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_387 + tmp_107*tmp_390 + tmp_108*tmp_383 + tmp_379) + tmp_133*(tmp_124*tmp_402 + tmp_130*tmp_405 + tmp_131*tmp_398 + tmp_394) + tmp_156*(tmp_147*tmp_417 + tmp_153*tmp_420 + tmp_154*tmp_413 + tmp_409) + tmp_64*(tmp_349 + tmp_353*tmp_49 + tmp_357*tmp_39 + tmp_360*tmp_48) + tmp_87*(tmp_364 + tmp_368*tmp_85 + tmp_372*tmp_78 + tmp_375*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_456 + tmp_107*tmp_459 + tmp_108*tmp_453 + tmp_450) + tmp_133*(tmp_124*tmp_469 + tmp_130*tmp_472 + tmp_131*tmp_466 + tmp_463) + tmp_156*(tmp_147*tmp_482 + tmp_153*tmp_485 + tmp_154*tmp_479 + tmp_476) + tmp_64*(tmp_39*tmp_430 + tmp_424 + tmp_427*tmp_49 + tmp_433*tmp_48) + tmp_87*(tmp_437 + tmp_440*tmp_85 + tmp_443*tmp_78 + tmp_446*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_518 + tmp_107*tmp_521 + tmp_108*tmp_519 + tmp_516) + tmp_133*(tmp_124*tmp_530 + tmp_130*tmp_533 + tmp_131*tmp_531 + tmp_528) + tmp_156*(tmp_147*tmp_542 + tmp_153*tmp_545 + tmp_154*tmp_543 + tmp_540) + tmp_64*(tmp_39*tmp_494 + tmp_48*tmp_497 + tmp_49*tmp_495 + tmp_492) + tmp_87*(tmp_504 + tmp_506*tmp_78 + tmp_507*tmp_85 + tmp_509*tmp_84);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_575 + tmp_107*tmp_578 + tmp_108*tmp_576 + tmp_573) + tmp_133*(tmp_124*tmp_586 + tmp_130*tmp_589 + tmp_131*tmp_587 + tmp_584) + tmp_156*(tmp_147*tmp_597 + tmp_153*tmp_600 + tmp_154*tmp_598 + tmp_595) + tmp_64*(tmp_39*tmp_553 + tmp_48*tmp_556 + tmp_49*tmp_554 + tmp_551) + tmp_87*(tmp_562 + tmp_564*tmp_78 + tmp_565*tmp_85 + tmp_567*tmp_84);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_627 + tmp_107*tmp_630 + tmp_108*tmp_628 + tmp_625) + tmp_133*(tmp_124*tmp_637 + tmp_130*tmp_640 + tmp_131*tmp_638 + tmp_635) + tmp_156*(tmp_147*tmp_647 + tmp_153*tmp_650 + tmp_154*tmp_648 + tmp_645) + tmp_64*(tmp_39*tmp_607 + tmp_48*tmp_610 + tmp_49*tmp_608 + tmp_605) + tmp_87*(tmp_615 + tmp_617*tmp_78 + tmp_618*tmp_85 + tmp_620*tmp_84);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_662 + tmp_109*tmp_663 + tmp_178 + tmp_661*tmp_99) + tmp_133*(tmp_122*tmp_665 + tmp_128*tmp_666 + tmp_132*tmp_667 + tmp_186) + tmp_156*(tmp_145*tmp_669 + tmp_151*tmp_670 + tmp_155*tmp_671 + tmp_194) + tmp_64*(tmp_161 + tmp_37*tmp_653 + tmp_46*tmp_654 + tmp_50*tmp_655) + tmp_87*(tmp_170 + tmp_657*tmp_76 + tmp_658*tmp_82 + tmp_659*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_672*tmp_681 + tmp_676*tmp_680 + tmp_677*tmp_681) + tmp_133*(tmp_672*tmp_683 + tmp_676*tmp_682 + tmp_677*tmp_683) + tmp_156*(tmp_672*tmp_685 + tmp_676*tmp_684 + tmp_677*tmp_685) + tmp_64*(tmp_672*tmp_675 + tmp_674*tmp_676 + tmp_675*tmp_677) + tmp_87*(tmp_672*tmp_679 + tmp_676*tmp_678 + tmp_677*tmp_679);
      real_t a_1_2 = tmp_698;
      real_t a_1_3 = tmp_707;
      real_t a_1_4 = tmp_110*(-tmp_177*tmp_710 + tmp_303*tmp_663 + tmp_308*tmp_661 + tmp_311*tmp_662) + tmp_133*(-tmp_185*tmp_711 + tmp_320*tmp_667 + tmp_325*tmp_665 + tmp_328*tmp_666) + tmp_156*(-tmp_193*tmp_712 + tmp_337*tmp_671 + tmp_342*tmp_669 + tmp_345*tmp_670) + tmp_64*(-tmp_160*tmp_708 + tmp_269*tmp_655 + tmp_274*tmp_653 + tmp_277*tmp_654) + tmp_87*(-tmp_169*tmp_709 + tmp_286*tmp_659 + tmp_291*tmp_657 + tmp_294*tmp_658);
      real_t a_1_5 = tmp_110*(-tmp_177*tmp_715 + tmp_383*tmp_663 + tmp_387*tmp_661 + tmp_390*tmp_662) + tmp_133*(-tmp_185*tmp_716 + tmp_398*tmp_667 + tmp_402*tmp_665 + tmp_405*tmp_666) + tmp_156*(-tmp_193*tmp_717 + tmp_413*tmp_671 + tmp_417*tmp_669 + tmp_420*tmp_670) + tmp_64*(-tmp_160*tmp_713 + tmp_353*tmp_655 + tmp_357*tmp_653 + tmp_360*tmp_654) + tmp_87*(-tmp_169*tmp_714 + tmp_368*tmp_659 + tmp_372*tmp_657 + tmp_375*tmp_658);
      real_t a_1_6 = tmp_110*(-tmp_177*tmp_720 + tmp_453*tmp_663 + tmp_456*tmp_661 + tmp_459*tmp_662) + tmp_133*(-tmp_185*tmp_721 + tmp_466*tmp_667 + tmp_469*tmp_665 + tmp_472*tmp_666) + tmp_156*(-tmp_193*tmp_722 + tmp_479*tmp_671 + tmp_482*tmp_669 + tmp_485*tmp_670) + tmp_64*(-tmp_160*tmp_718 + tmp_427*tmp_655 + tmp_430*tmp_653 + tmp_433*tmp_654) + tmp_87*(-tmp_169*tmp_719 + tmp_440*tmp_659 + tmp_443*tmp_657 + tmp_446*tmp_658);
      real_t a_1_7 = tmp_110*(tmp_518*tmp_661 + tmp_519*tmp_663 + tmp_521*tmp_662 + tmp_728) + tmp_133*(tmp_530*tmp_665 + tmp_531*tmp_667 + tmp_533*tmp_666 + tmp_730) + tmp_156*(tmp_542*tmp_669 + tmp_543*tmp_671 + tmp_545*tmp_670 + tmp_732) + tmp_64*(tmp_494*tmp_653 + tmp_495*tmp_655 + tmp_497*tmp_654 + tmp_724) + tmp_87*(tmp_506*tmp_657 + tmp_507*tmp_659 + tmp_509*tmp_658 + tmp_726);
      real_t a_1_8 = tmp_110*(tmp_575*tmp_661 + tmp_576*tmp_663 + tmp_578*tmp_662 + tmp_738) + tmp_133*(tmp_586*tmp_665 + tmp_587*tmp_667 + tmp_589*tmp_666 + tmp_740) + tmp_156*(tmp_597*tmp_669 + tmp_598*tmp_671 + tmp_600*tmp_670 + tmp_742) + tmp_64*(tmp_553*tmp_653 + tmp_554*tmp_655 + tmp_556*tmp_654 + tmp_734) + tmp_87*(tmp_564*tmp_657 + tmp_565*tmp_659 + tmp_567*tmp_658 + tmp_736);
      real_t a_1_9 = tmp_110*(tmp_627*tmp_661 + tmp_628*tmp_663 + tmp_630*tmp_662 + tmp_748) + tmp_133*(tmp_637*tmp_665 + tmp_638*tmp_667 + tmp_640*tmp_666 + tmp_750) + tmp_156*(tmp_647*tmp_669 + tmp_648*tmp_671 + tmp_650*tmp_670 + tmp_752) + tmp_64*(tmp_607*tmp_653 + tmp_608*tmp_655 + tmp_610*tmp_654 + tmp_744) + tmp_87*(tmp_617*tmp_657 + tmp_618*tmp_659 + tmp_620*tmp_658 + tmp_746);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_763 + tmp_109*tmp_764 + tmp_214 + tmp_762*tmp_99) + tmp_133*(tmp_122*tmp_766 + tmp_128*tmp_767 + tmp_132*tmp_768 + tmp_220) + tmp_156*(tmp_145*tmp_770 + tmp_151*tmp_771 + tmp_155*tmp_772 + tmp_226) + tmp_64*(tmp_202 + tmp_37*tmp_754 + tmp_46*tmp_755 + tmp_50*tmp_756) + tmp_87*(tmp_208 + tmp_758*tmp_76 + tmp_759*tmp_82 + tmp_760*tmp_86);
      real_t a_2_1 = tmp_698;
      real_t a_2_2 = tmp_110*(tmp_773*tmp_781 + tmp_776*tmp_780 + tmp_777*tmp_781) + tmp_133*(tmp_773*tmp_783 + tmp_776*tmp_782 + tmp_777*tmp_783) + tmp_156*(tmp_773*tmp_785 + tmp_776*tmp_784 + tmp_777*tmp_785) + tmp_64*(tmp_773*tmp_775 + tmp_774*tmp_776 + tmp_775*tmp_777) + tmp_87*(tmp_773*tmp_779 + tmp_776*tmp_778 + tmp_777*tmp_779);
      real_t a_2_3 = tmp_797;
      real_t a_2_4 = tmp_110*(-tmp_213*tmp_710 + tmp_303*tmp_764 + tmp_308*tmp_762 + tmp_311*tmp_763) + tmp_133*(-tmp_219*tmp_711 + tmp_320*tmp_768 + tmp_325*tmp_766 + tmp_328*tmp_767) + tmp_156*(-tmp_225*tmp_712 + tmp_337*tmp_772 + tmp_342*tmp_770 + tmp_345*tmp_771) + tmp_64*(-tmp_201*tmp_708 + tmp_269*tmp_756 + tmp_274*tmp_754 + tmp_277*tmp_755) + tmp_87*(-tmp_207*tmp_709 + tmp_286*tmp_760 + tmp_291*tmp_758 + tmp_294*tmp_759);
      real_t a_2_5 = tmp_110*(-tmp_213*tmp_715 + tmp_383*tmp_764 + tmp_387*tmp_762 + tmp_390*tmp_763) + tmp_133*(-tmp_219*tmp_716 + tmp_398*tmp_768 + tmp_402*tmp_766 + tmp_405*tmp_767) + tmp_156*(-tmp_225*tmp_717 + tmp_413*tmp_772 + tmp_417*tmp_770 + tmp_420*tmp_771) + tmp_64*(-tmp_201*tmp_713 + tmp_353*tmp_756 + tmp_357*tmp_754 + tmp_360*tmp_755) + tmp_87*(-tmp_207*tmp_714 + tmp_368*tmp_760 + tmp_372*tmp_758 + tmp_375*tmp_759);
      real_t a_2_6 = tmp_110*(-tmp_213*tmp_720 + tmp_453*tmp_764 + tmp_456*tmp_762 + tmp_459*tmp_763) + tmp_133*(-tmp_219*tmp_721 + tmp_466*tmp_768 + tmp_469*tmp_766 + tmp_472*tmp_767) + tmp_156*(-tmp_225*tmp_722 + tmp_479*tmp_772 + tmp_482*tmp_770 + tmp_485*tmp_771) + tmp_64*(-tmp_201*tmp_718 + tmp_427*tmp_756 + tmp_430*tmp_754 + tmp_433*tmp_755) + tmp_87*(-tmp_207*tmp_719 + tmp_440*tmp_760 + tmp_443*tmp_758 + tmp_446*tmp_759);
      real_t a_2_7 = tmp_110*(tmp_518*tmp_762 + tmp_519*tmp_764 + tmp_521*tmp_763 + tmp_800) + tmp_133*(tmp_530*tmp_766 + tmp_531*tmp_768 + tmp_533*tmp_767 + tmp_801) + tmp_156*(tmp_542*tmp_770 + tmp_543*tmp_772 + tmp_545*tmp_771 + tmp_802) + tmp_64*(tmp_494*tmp_754 + tmp_495*tmp_756 + tmp_497*tmp_755 + tmp_798) + tmp_87*(tmp_506*tmp_758 + tmp_507*tmp_760 + tmp_509*tmp_759 + tmp_799);
      real_t a_2_8 = tmp_110*(tmp_575*tmp_762 + tmp_576*tmp_764 + tmp_578*tmp_763 + tmp_805) + tmp_133*(tmp_586*tmp_766 + tmp_587*tmp_768 + tmp_589*tmp_767 + tmp_806) + tmp_156*(tmp_597*tmp_770 + tmp_598*tmp_772 + tmp_600*tmp_771 + tmp_807) + tmp_64*(tmp_553*tmp_754 + tmp_554*tmp_756 + tmp_556*tmp_755 + tmp_803) + tmp_87*(tmp_564*tmp_758 + tmp_565*tmp_760 + tmp_567*tmp_759 + tmp_804);
      real_t a_2_9 = tmp_110*(tmp_627*tmp_762 + tmp_628*tmp_764 + tmp_630*tmp_763 + tmp_810) + tmp_133*(tmp_637*tmp_766 + tmp_638*tmp_768 + tmp_640*tmp_767 + tmp_811) + tmp_156*(tmp_647*tmp_770 + tmp_648*tmp_772 + tmp_650*tmp_771 + tmp_812) + tmp_64*(tmp_607*tmp_754 + tmp_608*tmp_756 + tmp_610*tmp_755 + tmp_808) + tmp_87*(tmp_617*tmp_758 + tmp_618*tmp_760 + tmp_620*tmp_759 + tmp_809);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_823 + tmp_109*tmp_824 + tmp_245 + tmp_822*tmp_99) + tmp_133*(tmp_122*tmp_826 + tmp_128*tmp_827 + tmp_132*tmp_828 + tmp_251) + tmp_156*(tmp_145*tmp_830 + tmp_151*tmp_831 + tmp_155*tmp_832 + tmp_257) + tmp_64*(tmp_233 + tmp_37*tmp_814 + tmp_46*tmp_815 + tmp_50*tmp_816) + tmp_87*(tmp_239 + tmp_76*tmp_818 + tmp_819*tmp_82 + tmp_820*tmp_86);
      real_t a_3_1 = tmp_707;
      real_t a_3_2 = tmp_797;
      real_t a_3_3 = tmp_110*(tmp_833*tmp_841 + tmp_836*tmp_840 + tmp_837*tmp_841) + tmp_133*(tmp_833*tmp_843 + tmp_836*tmp_842 + tmp_837*tmp_843) + tmp_156*(tmp_833*tmp_845 + tmp_836*tmp_844 + tmp_837*tmp_845) + tmp_64*(tmp_833*tmp_835 + tmp_834*tmp_836 + tmp_835*tmp_837) + tmp_87*(tmp_833*tmp_839 + tmp_836*tmp_838 + tmp_837*tmp_839);
      real_t a_3_4 = tmp_110*(-tmp_244*tmp_710 + tmp_303*tmp_824 + tmp_308*tmp_822 + tmp_311*tmp_823) + tmp_133*(-tmp_250*tmp_711 + tmp_320*tmp_828 + tmp_325*tmp_826 + tmp_328*tmp_827) + tmp_156*(-tmp_256*tmp_712 + tmp_337*tmp_832 + tmp_342*tmp_830 + tmp_345*tmp_831) + tmp_64*(-tmp_232*tmp_708 + tmp_269*tmp_816 + tmp_274*tmp_814 + tmp_277*tmp_815) + tmp_87*(-tmp_238*tmp_709 + tmp_286*tmp_820 + tmp_291*tmp_818 + tmp_294*tmp_819);
      real_t a_3_5 = tmp_110*(-tmp_244*tmp_715 + tmp_383*tmp_824 + tmp_387*tmp_822 + tmp_390*tmp_823) + tmp_133*(-tmp_250*tmp_716 + tmp_398*tmp_828 + tmp_402*tmp_826 + tmp_405*tmp_827) + tmp_156*(-tmp_256*tmp_717 + tmp_413*tmp_832 + tmp_417*tmp_830 + tmp_420*tmp_831) + tmp_64*(-tmp_232*tmp_713 + tmp_353*tmp_816 + tmp_357*tmp_814 + tmp_360*tmp_815) + tmp_87*(-tmp_238*tmp_714 + tmp_368*tmp_820 + tmp_372*tmp_818 + tmp_375*tmp_819);
      real_t a_3_6 = tmp_110*(-tmp_244*tmp_720 + tmp_453*tmp_824 + tmp_456*tmp_822 + tmp_459*tmp_823) + tmp_133*(-tmp_250*tmp_721 + tmp_466*tmp_828 + tmp_469*tmp_826 + tmp_472*tmp_827) + tmp_156*(-tmp_256*tmp_722 + tmp_479*tmp_832 + tmp_482*tmp_830 + tmp_485*tmp_831) + tmp_64*(-tmp_232*tmp_718 + tmp_427*tmp_816 + tmp_430*tmp_814 + tmp_433*tmp_815) + tmp_87*(-tmp_238*tmp_719 + tmp_440*tmp_820 + tmp_443*tmp_818 + tmp_446*tmp_819);
      real_t a_3_7 = tmp_110*(tmp_518*tmp_822 + tmp_519*tmp_824 + tmp_521*tmp_823 + tmp_848) + tmp_133*(tmp_530*tmp_826 + tmp_531*tmp_828 + tmp_533*tmp_827 + tmp_849) + tmp_156*(tmp_542*tmp_830 + tmp_543*tmp_832 + tmp_545*tmp_831 + tmp_850) + tmp_64*(tmp_494*tmp_814 + tmp_495*tmp_816 + tmp_497*tmp_815 + tmp_846) + tmp_87*(tmp_506*tmp_818 + tmp_507*tmp_820 + tmp_509*tmp_819 + tmp_847);
      real_t a_3_8 = tmp_110*(tmp_575*tmp_822 + tmp_576*tmp_824 + tmp_578*tmp_823 + tmp_853) + tmp_133*(tmp_586*tmp_826 + tmp_587*tmp_828 + tmp_589*tmp_827 + tmp_854) + tmp_156*(tmp_597*tmp_830 + tmp_598*tmp_832 + tmp_600*tmp_831 + tmp_855) + tmp_64*(tmp_553*tmp_814 + tmp_554*tmp_816 + tmp_556*tmp_815 + tmp_851) + tmp_87*(tmp_564*tmp_818 + tmp_565*tmp_820 + tmp_567*tmp_819 + tmp_852);
      real_t a_3_9 = tmp_110*(tmp_627*tmp_822 + tmp_628*tmp_824 + tmp_630*tmp_823 + tmp_858) + tmp_133*(tmp_637*tmp_826 + tmp_638*tmp_828 + tmp_640*tmp_827 + tmp_859) + tmp_156*(tmp_647*tmp_830 + tmp_648*tmp_832 + tmp_650*tmp_831 + tmp_860) + tmp_64*(tmp_607*tmp_814 + tmp_608*tmp_816 + tmp_610*tmp_815 + tmp_856) + tmp_87*(tmp_617*tmp_818 + tmp_618*tmp_820 + tmp_620*tmp_819 + tmp_857);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_890 + tmp_109*tmp_297 + tmp_298 + tmp_886*tmp_99) + tmp_133*(tmp_122*tmp_896 + tmp_128*tmp_900 + tmp_132*tmp_314 + tmp_315) + tmp_156*(tmp_145*tmp_906 + tmp_151*tmp_910 + tmp_155*tmp_331 + tmp_332) + tmp_64*(tmp_263*tmp_50 + tmp_264 + tmp_37*tmp_866 + tmp_46*tmp_870) + tmp_87*(tmp_280*tmp_86 + tmp_281 + tmp_76*tmp_876 + tmp_82*tmp_880);
      real_t a_4_1 = tmp_110*(tmp_177*tmp_913 + tmp_180*tmp_885 + tmp_182*tmp_889) + tmp_133*(tmp_185*tmp_914 + tmp_188*tmp_895 + tmp_190*tmp_899) + tmp_156*(tmp_193*tmp_915 + tmp_196*tmp_905 + tmp_198*tmp_909) + tmp_64*(tmp_160*tmp_911 + tmp_164*tmp_865 + tmp_166*tmp_869) + tmp_87*(tmp_169*tmp_912 + tmp_172*tmp_875 + tmp_174*tmp_879);
      real_t a_4_2 = tmp_110*(tmp_213*tmp_913 + tmp_216*tmp_885 + tmp_217*tmp_889) + tmp_133*(tmp_219*tmp_914 + tmp_222*tmp_895 + tmp_223*tmp_899) + tmp_156*(tmp_225*tmp_915 + tmp_228*tmp_905 + tmp_229*tmp_909) + tmp_64*(tmp_201*tmp_911 + tmp_204*tmp_865 + tmp_205*tmp_869) + tmp_87*(tmp_207*tmp_912 + tmp_210*tmp_875 + tmp_211*tmp_879);
      real_t a_4_3 = tmp_110*(tmp_244*tmp_913 + tmp_247*tmp_885 + tmp_248*tmp_889) + tmp_133*(tmp_250*tmp_914 + tmp_253*tmp_895 + tmp_254*tmp_899) + tmp_156*(tmp_256*tmp_915 + tmp_259*tmp_905 + tmp_260*tmp_909) + tmp_64*(tmp_232*tmp_911 + tmp_235*tmp_865 + tmp_236*tmp_869) + tmp_87*(tmp_238*tmp_912 + tmp_241*tmp_875 + tmp_242*tmp_879);
      real_t a_4_4 = tmp_110*(tmp_297*tmp_303 + tmp_308*tmp_886 + tmp_311*tmp_890 - 10.666666666666666*((tmp_920 + tmp_921)*(tmp_920 + tmp_921))) + tmp_133*(tmp_314*tmp_320 + tmp_325*tmp_896 + tmp_328*tmp_900 - 10.666666666666666*((tmp_922 + tmp_923)*(tmp_922 + tmp_923))) + tmp_156*(tmp_331*tmp_337 + tmp_342*tmp_906 + tmp_345*tmp_910 - 10.666666666666666*((tmp_924 + tmp_925)*(tmp_924 + tmp_925))) + tmp_64*(tmp_263*tmp_269 + tmp_274*tmp_866 + tmp_277*tmp_870 - 10.666666666666666*((tmp_916 + tmp_917)*(tmp_916 + tmp_917))) + tmp_87*(tmp_280*tmp_286 + tmp_291*tmp_876 + tmp_294*tmp_880 - 10.666666666666666*((tmp_918 + tmp_919)*(tmp_918 + tmp_919)));
      real_t a_4_5 = tmp_110*(tmp_297*tmp_383 + tmp_387*tmp_886 + tmp_390*tmp_890 + tmp_928) + tmp_133*(tmp_314*tmp_398 + tmp_402*tmp_896 + tmp_405*tmp_900 + tmp_929) + tmp_156*(tmp_331*tmp_413 + tmp_417*tmp_906 + tmp_420*tmp_910 + tmp_930) + tmp_64*(tmp_263*tmp_353 + tmp_357*tmp_866 + tmp_360*tmp_870 + tmp_926) + tmp_87*(tmp_280*tmp_368 + tmp_372*tmp_876 + tmp_375*tmp_880 + tmp_927);
      real_t a_4_6 = tmp_110*(tmp_297*tmp_453 + tmp_456*tmp_886 + tmp_459*tmp_890 + tmp_933) + tmp_133*(tmp_314*tmp_466 + tmp_469*tmp_896 + tmp_472*tmp_900 + tmp_934) + tmp_156*(tmp_331*tmp_479 + tmp_482*tmp_906 + tmp_485*tmp_910 + tmp_935) + tmp_64*(tmp_263*tmp_427 + tmp_430*tmp_866 + tmp_433*tmp_870 + tmp_931) + tmp_87*(tmp_280*tmp_440 + tmp_443*tmp_876 + tmp_446*tmp_880 + tmp_932);
      real_t a_4_7 = tmp_110*(tmp_297*tmp_519 + tmp_518*tmp_886 + tmp_521*tmp_890 + tmp_938) + tmp_133*(tmp_314*tmp_531 + tmp_530*tmp_896 + tmp_533*tmp_900 + tmp_939) + tmp_156*(tmp_331*tmp_543 + tmp_542*tmp_906 + tmp_545*tmp_910 + tmp_940) + tmp_64*(tmp_263*tmp_495 + tmp_494*tmp_866 + tmp_497*tmp_870 + tmp_936) + tmp_87*(tmp_280*tmp_507 + tmp_506*tmp_876 + tmp_509*tmp_880 + tmp_937);
      real_t a_4_8 = tmp_110*(tmp_297*tmp_576 + tmp_575*tmp_886 + tmp_578*tmp_890 + tmp_943) + tmp_133*(tmp_314*tmp_587 + tmp_586*tmp_896 + tmp_589*tmp_900 + tmp_944) + tmp_156*(tmp_331*tmp_598 + tmp_597*tmp_906 + tmp_600*tmp_910 + tmp_945) + tmp_64*(tmp_263*tmp_554 + tmp_553*tmp_866 + tmp_556*tmp_870 + tmp_941) + tmp_87*(tmp_280*tmp_565 + tmp_564*tmp_876 + tmp_567*tmp_880 + tmp_942);
      real_t a_4_9 = tmp_110*(tmp_297*tmp_628 + tmp_627*tmp_886 + tmp_630*tmp_890 + tmp_948) + tmp_133*(tmp_314*tmp_638 + tmp_637*tmp_896 + tmp_640*tmp_900 + tmp_949) + tmp_156*(tmp_331*tmp_648 + tmp_647*tmp_906 + tmp_650*tmp_910 + tmp_950) + tmp_64*(tmp_263*tmp_608 + tmp_607*tmp_866 + tmp_610*tmp_870 + tmp_946) + tmp_87*(tmp_280*tmp_618 + tmp_617*tmp_876 + tmp_620*tmp_880 + tmp_947);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_977 + tmp_109*tmp_378 + tmp_379 + tmp_973*tmp_99) + tmp_133*(tmp_122*tmp_982 + tmp_128*tmp_986 + tmp_132*tmp_393 + tmp_394) + tmp_156*(tmp_145*tmp_991 + tmp_151*tmp_995 + tmp_155*tmp_408 + tmp_409) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_955 + tmp_46*tmp_959) + tmp_87*(tmp_363*tmp_86 + tmp_364 + tmp_76*tmp_964 + tmp_82*tmp_968);
      real_t a_5_1 = tmp_110*(tmp_177*tmp_998 + tmp_180*tmp_972 + tmp_182*tmp_976) + tmp_133*(tmp_185*tmp_999 + tmp_188*tmp_981 + tmp_190*tmp_985) + tmp_156*(tmp_1000*tmp_193 + tmp_196*tmp_990 + tmp_198*tmp_994) + tmp_64*(tmp_160*tmp_996 + tmp_164*tmp_954 + tmp_166*tmp_958) + tmp_87*(tmp_169*tmp_997 + tmp_172*tmp_963 + tmp_174*tmp_967);
      real_t a_5_2 = tmp_110*(tmp_213*tmp_998 + tmp_216*tmp_972 + tmp_217*tmp_976) + tmp_133*(tmp_219*tmp_999 + tmp_222*tmp_981 + tmp_223*tmp_985) + tmp_156*(tmp_1000*tmp_225 + tmp_228*tmp_990 + tmp_229*tmp_994) + tmp_64*(tmp_201*tmp_996 + tmp_204*tmp_954 + tmp_205*tmp_958) + tmp_87*(tmp_207*tmp_997 + tmp_210*tmp_963 + tmp_211*tmp_967);
      real_t a_5_3 = tmp_110*(tmp_244*tmp_998 + tmp_247*tmp_972 + tmp_248*tmp_976) + tmp_133*(tmp_250*tmp_999 + tmp_253*tmp_981 + tmp_254*tmp_985) + tmp_156*(tmp_1000*tmp_256 + tmp_259*tmp_990 + tmp_260*tmp_994) + tmp_64*(tmp_232*tmp_996 + tmp_235*tmp_954 + tmp_236*tmp_958) + tmp_87*(tmp_238*tmp_997 + tmp_241*tmp_963 + tmp_242*tmp_967);
      real_t a_5_4 = tmp_110*(tmp_303*tmp_378 + tmp_308*tmp_973 + tmp_311*tmp_977 + tmp_928) + tmp_133*(tmp_320*tmp_393 + tmp_325*tmp_982 + tmp_328*tmp_986 + tmp_929) + tmp_156*(tmp_337*tmp_408 + tmp_342*tmp_991 + tmp_345*tmp_995 + tmp_930) + tmp_64*(tmp_269*tmp_348 + tmp_274*tmp_955 + tmp_277*tmp_959 + tmp_926) + tmp_87*(tmp_286*tmp_363 + tmp_291*tmp_964 + tmp_294*tmp_968 + tmp_927);
      real_t a_5_5 = tmp_110*(tmp_378*tmp_383 + tmp_387*tmp_973 + tmp_390*tmp_977 - 10.666666666666666*((tmp_1005 + tmp_1006)*(tmp_1005 + tmp_1006))) + tmp_133*(tmp_393*tmp_398 + tmp_402*tmp_982 + tmp_405*tmp_986 - 10.666666666666666*((tmp_1007 + tmp_1008)*(tmp_1007 + tmp_1008))) + tmp_156*(tmp_408*tmp_413 + tmp_417*tmp_991 + tmp_420*tmp_995 - 10.666666666666666*((tmp_1009 + tmp_1010)*(tmp_1009 + tmp_1010))) + tmp_64*(tmp_348*tmp_353 + tmp_357*tmp_955 + tmp_360*tmp_959 - 10.666666666666666*((tmp_1001 + tmp_1002)*(tmp_1001 + tmp_1002))) + tmp_87*(tmp_363*tmp_368 + tmp_372*tmp_964 + tmp_375*tmp_968 - 10.666666666666666*((tmp_1003 + tmp_1004)*(tmp_1003 + tmp_1004)));
      real_t a_5_6 = tmp_110*(tmp_1013 + tmp_378*tmp_453 + tmp_456*tmp_973 + tmp_459*tmp_977) + tmp_133*(tmp_1014 + tmp_393*tmp_466 + tmp_469*tmp_982 + tmp_472*tmp_986) + tmp_156*(tmp_1015 + tmp_408*tmp_479 + tmp_482*tmp_991 + tmp_485*tmp_995) + tmp_64*(tmp_1011 + tmp_348*tmp_427 + tmp_430*tmp_955 + tmp_433*tmp_959) + tmp_87*(tmp_1012 + tmp_363*tmp_440 + tmp_443*tmp_964 + tmp_446*tmp_968);
      real_t a_5_7 = tmp_110*(tmp_1018 + tmp_378*tmp_519 + tmp_518*tmp_973 + tmp_521*tmp_977) + tmp_133*(tmp_1019 + tmp_393*tmp_531 + tmp_530*tmp_982 + tmp_533*tmp_986) + tmp_156*(tmp_1020 + tmp_408*tmp_543 + tmp_542*tmp_991 + tmp_545*tmp_995) + tmp_64*(tmp_1016 + tmp_348*tmp_495 + tmp_494*tmp_955 + tmp_497*tmp_959) + tmp_87*(tmp_1017 + tmp_363*tmp_507 + tmp_506*tmp_964 + tmp_509*tmp_968);
      real_t a_5_8 = tmp_110*(tmp_1023 + tmp_378*tmp_576 + tmp_575*tmp_973 + tmp_578*tmp_977) + tmp_133*(tmp_1024 + tmp_393*tmp_587 + tmp_586*tmp_982 + tmp_589*tmp_986) + tmp_156*(tmp_1025 + tmp_408*tmp_598 + tmp_597*tmp_991 + tmp_600*tmp_995) + tmp_64*(tmp_1021 + tmp_348*tmp_554 + tmp_553*tmp_955 + tmp_556*tmp_959) + tmp_87*(tmp_1022 + tmp_363*tmp_565 + tmp_564*tmp_964 + tmp_567*tmp_968);
      real_t a_5_9 = tmp_110*(tmp_1028 + tmp_378*tmp_628 + tmp_627*tmp_973 + tmp_630*tmp_977) + tmp_133*(tmp_1029 + tmp_393*tmp_638 + tmp_637*tmp_982 + tmp_640*tmp_986) + tmp_156*(tmp_1030 + tmp_408*tmp_648 + tmp_647*tmp_991 + tmp_650*tmp_995) + tmp_64*(tmp_1026 + tmp_348*tmp_608 + tmp_607*tmp_955 + tmp_610*tmp_959) + tmp_87*(tmp_1027 + tmp_363*tmp_618 + tmp_617*tmp_964 + tmp_620*tmp_968);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_1054 + tmp_1050*tmp_99 + tmp_109*tmp_449 + tmp_450) + tmp_133*(tmp_1058*tmp_122 + tmp_1062*tmp_128 + tmp_132*tmp_462 + tmp_463) + tmp_156*(tmp_1066*tmp_145 + tmp_1070*tmp_151 + tmp_155*tmp_475 + tmp_476) + tmp_64*(tmp_1034*tmp_37 + tmp_1038*tmp_46 + tmp_423*tmp_50 + tmp_424) + tmp_87*(tmp_1042*tmp_76 + tmp_1046*tmp_82 + tmp_436*tmp_86 + tmp_437);
      real_t a_6_1 = tmp_110*(tmp_1049*tmp_180 + tmp_1053*tmp_182 + tmp_1073*tmp_177) + tmp_133*(tmp_1057*tmp_188 + tmp_1061*tmp_190 + tmp_1074*tmp_185) + tmp_156*(tmp_1065*tmp_196 + tmp_1069*tmp_198 + tmp_1075*tmp_193) + tmp_64*(tmp_1033*tmp_164 + tmp_1037*tmp_166 + tmp_1071*tmp_160) + tmp_87*(tmp_1041*tmp_172 + tmp_1045*tmp_174 + tmp_1072*tmp_169);
      real_t a_6_2 = tmp_110*(tmp_1049*tmp_216 + tmp_1053*tmp_217 + tmp_1073*tmp_213) + tmp_133*(tmp_1057*tmp_222 + tmp_1061*tmp_223 + tmp_1074*tmp_219) + tmp_156*(tmp_1065*tmp_228 + tmp_1069*tmp_229 + tmp_1075*tmp_225) + tmp_64*(tmp_1033*tmp_204 + tmp_1037*tmp_205 + tmp_1071*tmp_201) + tmp_87*(tmp_1041*tmp_210 + tmp_1045*tmp_211 + tmp_1072*tmp_207);
      real_t a_6_3 = tmp_110*(tmp_1049*tmp_247 + tmp_1053*tmp_248 + tmp_1073*tmp_244) + tmp_133*(tmp_1057*tmp_253 + tmp_1061*tmp_254 + tmp_1074*tmp_250) + tmp_156*(tmp_1065*tmp_259 + tmp_1069*tmp_260 + tmp_1075*tmp_256) + tmp_64*(tmp_1033*tmp_235 + tmp_1037*tmp_236 + tmp_1071*tmp_232) + tmp_87*(tmp_1041*tmp_241 + tmp_1045*tmp_242 + tmp_1072*tmp_238);
      real_t a_6_4 = tmp_110*(tmp_1050*tmp_308 + tmp_1054*tmp_311 + tmp_303*tmp_449 + tmp_933) + tmp_133*(tmp_1058*tmp_325 + tmp_1062*tmp_328 + tmp_320*tmp_462 + tmp_934) + tmp_156*(tmp_1066*tmp_342 + tmp_1070*tmp_345 + tmp_337*tmp_475 + tmp_935) + tmp_64*(tmp_1034*tmp_274 + tmp_1038*tmp_277 + tmp_269*tmp_423 + tmp_931) + tmp_87*(tmp_1042*tmp_291 + tmp_1046*tmp_294 + tmp_286*tmp_436 + tmp_932);
      real_t a_6_5 = tmp_110*(tmp_1013 + tmp_1050*tmp_387 + tmp_1054*tmp_390 + tmp_383*tmp_449) + tmp_133*(tmp_1014 + tmp_1058*tmp_402 + tmp_1062*tmp_405 + tmp_398*tmp_462) + tmp_156*(tmp_1015 + tmp_1066*tmp_417 + tmp_1070*tmp_420 + tmp_413*tmp_475) + tmp_64*(tmp_1011 + tmp_1034*tmp_357 + tmp_1038*tmp_360 + tmp_353*tmp_423) + tmp_87*(tmp_1012 + tmp_1042*tmp_372 + tmp_1046*tmp_375 + tmp_368*tmp_436);
      real_t a_6_6 = tmp_110*(tmp_1050*tmp_456 + tmp_1054*tmp_459 + tmp_449*tmp_453 - 10.666666666666666*((tmp_1080 + tmp_1081)*(tmp_1080 + tmp_1081))) + tmp_133*(tmp_1058*tmp_469 + tmp_1062*tmp_472 + tmp_462*tmp_466 - 10.666666666666666*((tmp_1082 + tmp_1083)*(tmp_1082 + tmp_1083))) + tmp_156*(tmp_1066*tmp_482 + tmp_1070*tmp_485 + tmp_475*tmp_479 - 10.666666666666666*((tmp_1084 + tmp_1085)*(tmp_1084 + tmp_1085))) + tmp_64*(tmp_1034*tmp_430 + tmp_1038*tmp_433 + tmp_423*tmp_427 - 10.666666666666666*((tmp_1076 + tmp_1077)*(tmp_1076 + tmp_1077))) + tmp_87*(tmp_1042*tmp_443 + tmp_1046*tmp_446 + tmp_436*tmp_440 - 10.666666666666666*((tmp_1078 + tmp_1079)*(tmp_1078 + tmp_1079)));
      real_t a_6_7 = tmp_110*(tmp_1050*tmp_518 + tmp_1054*tmp_521 + tmp_1088 + tmp_449*tmp_519) + tmp_133*(tmp_1058*tmp_530 + tmp_1062*tmp_533 + tmp_1089 + tmp_462*tmp_531) + tmp_156*(tmp_1066*tmp_542 + tmp_1070*tmp_545 + tmp_1090 + tmp_475*tmp_543) + tmp_64*(tmp_1034*tmp_494 + tmp_1038*tmp_497 + tmp_1086 + tmp_423*tmp_495) + tmp_87*(tmp_1042*tmp_506 + tmp_1046*tmp_509 + tmp_1087 + tmp_436*tmp_507);
      real_t a_6_8 = tmp_110*(tmp_1050*tmp_575 + tmp_1054*tmp_578 + tmp_1093 + tmp_449*tmp_576) + tmp_133*(tmp_1058*tmp_586 + tmp_1062*tmp_589 + tmp_1094 + tmp_462*tmp_587) + tmp_156*(tmp_1066*tmp_597 + tmp_1070*tmp_600 + tmp_1095 + tmp_475*tmp_598) + tmp_64*(tmp_1034*tmp_553 + tmp_1038*tmp_556 + tmp_1091 + tmp_423*tmp_554) + tmp_87*(tmp_1042*tmp_564 + tmp_1046*tmp_567 + tmp_1092 + tmp_436*tmp_565);
      real_t a_6_9 = tmp_110*(tmp_1050*tmp_627 + tmp_1054*tmp_630 + tmp_1098 + tmp_449*tmp_628) + tmp_133*(tmp_1058*tmp_637 + tmp_1062*tmp_640 + tmp_1099 + tmp_462*tmp_638) + tmp_156*(tmp_1066*tmp_647 + tmp_1070*tmp_650 + tmp_1100 + tmp_475*tmp_648) + tmp_64*(tmp_1034*tmp_607 + tmp_1038*tmp_610 + tmp_1096 + tmp_423*tmp_608) + tmp_87*(tmp_1042*tmp_617 + tmp_1046*tmp_620 + tmp_1097 + tmp_436*tmp_618);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_1114 + tmp_109*tmp_1115 + tmp_1112*tmp_99 + tmp_516) + tmp_133*(tmp_1117*tmp_122 + tmp_1119*tmp_128 + tmp_1120*tmp_132 + tmp_528) + tmp_156*(tmp_1122*tmp_145 + tmp_1124*tmp_151 + tmp_1125*tmp_155 + tmp_540) + tmp_64*(tmp_1102*tmp_37 + tmp_1104*tmp_46 + tmp_1105*tmp_50 + tmp_492) + tmp_87*(tmp_1107*tmp_76 + tmp_1109*tmp_82 + tmp_1110*tmp_86 + tmp_504);
      real_t a_7_1 = tmp_110*(tmp_1111*tmp_180 + tmp_1113*tmp_182 + tmp_1128*tmp_177 + tmp_728) + tmp_133*(tmp_1116*tmp_188 + tmp_1118*tmp_190 + tmp_1129*tmp_185 + tmp_730) + tmp_156*(tmp_1121*tmp_196 + tmp_1123*tmp_198 + tmp_1130*tmp_193 + tmp_732) + tmp_64*(tmp_1101*tmp_164 + tmp_1103*tmp_166 + tmp_1126*tmp_160 + tmp_724) + tmp_87*(tmp_1106*tmp_172 + tmp_1108*tmp_174 + tmp_1127*tmp_169 + tmp_726);
      real_t a_7_2 = tmp_110*(tmp_1111*tmp_216 + tmp_1113*tmp_217 + tmp_1128*tmp_213 + tmp_800) + tmp_133*(tmp_1116*tmp_222 + tmp_1118*tmp_223 + tmp_1129*tmp_219 + tmp_801) + tmp_156*(tmp_1121*tmp_228 + tmp_1123*tmp_229 + tmp_1130*tmp_225 + tmp_802) + tmp_64*(tmp_1101*tmp_204 + tmp_1103*tmp_205 + tmp_1126*tmp_201 + tmp_798) + tmp_87*(tmp_1106*tmp_210 + tmp_1108*tmp_211 + tmp_1127*tmp_207 + tmp_799);
      real_t a_7_3 = tmp_110*(tmp_1111*tmp_247 + tmp_1113*tmp_248 + tmp_1128*tmp_244 + tmp_848) + tmp_133*(tmp_1116*tmp_253 + tmp_1118*tmp_254 + tmp_1129*tmp_250 + tmp_849) + tmp_156*(tmp_1121*tmp_259 + tmp_1123*tmp_260 + tmp_1130*tmp_256 + tmp_850) + tmp_64*(tmp_1101*tmp_235 + tmp_1103*tmp_236 + tmp_1126*tmp_232 + tmp_846) + tmp_87*(tmp_1106*tmp_241 + tmp_1108*tmp_242 + tmp_1127*tmp_238 + tmp_847);
      real_t a_7_4 = tmp_110*(tmp_1112*tmp_308 + tmp_1114*tmp_311 + tmp_1115*tmp_303 + tmp_938) + tmp_133*(tmp_1117*tmp_325 + tmp_1119*tmp_328 + tmp_1120*tmp_320 + tmp_939) + tmp_156*(tmp_1122*tmp_342 + tmp_1124*tmp_345 + tmp_1125*tmp_337 + tmp_940) + tmp_64*(tmp_1102*tmp_274 + tmp_1104*tmp_277 + tmp_1105*tmp_269 + tmp_936) + tmp_87*(tmp_1107*tmp_291 + tmp_1109*tmp_294 + tmp_1110*tmp_286 + tmp_937);
      real_t a_7_5 = tmp_110*(tmp_1018 + tmp_1112*tmp_387 + tmp_1114*tmp_390 + tmp_1115*tmp_383) + tmp_133*(tmp_1019 + tmp_1117*tmp_402 + tmp_1119*tmp_405 + tmp_1120*tmp_398) + tmp_156*(tmp_1020 + tmp_1122*tmp_417 + tmp_1124*tmp_420 + tmp_1125*tmp_413) + tmp_64*(tmp_1016 + tmp_1102*tmp_357 + tmp_1104*tmp_360 + tmp_1105*tmp_353) + tmp_87*(tmp_1017 + tmp_1107*tmp_372 + tmp_1109*tmp_375 + tmp_1110*tmp_368);
      real_t a_7_6 = tmp_110*(tmp_1088 + tmp_1112*tmp_456 + tmp_1114*tmp_459 + tmp_1115*tmp_453) + tmp_133*(tmp_1089 + tmp_1117*tmp_469 + tmp_1119*tmp_472 + tmp_1120*tmp_466) + tmp_156*(tmp_1090 + tmp_1122*tmp_482 + tmp_1124*tmp_485 + tmp_1125*tmp_479) + tmp_64*(tmp_1086 + tmp_1102*tmp_430 + tmp_1104*tmp_433 + tmp_1105*tmp_427) + tmp_87*(tmp_1087 + tmp_1107*tmp_443 + tmp_1109*tmp_446 + tmp_1110*tmp_440);
      real_t a_7_7 = tmp_110*(tmp_1112*tmp_518 + tmp_1114*tmp_521 + tmp_1115*tmp_519 - 10.666666666666666*((-tmp_1006 + 0.25*tmp_513 - tmp_921)*(-tmp_1006 + 0.25*tmp_513 - tmp_921))) + tmp_133*(tmp_1117*tmp_530 + tmp_1119*tmp_533 + tmp_1120*tmp_531 - 10.666666666666666*((-tmp_1008 + 0.25*tmp_525 - tmp_923)*(-tmp_1008 + 0.25*tmp_525 - tmp_923))) + tmp_156*(tmp_1122*tmp_542 + tmp_1124*tmp_545 + tmp_1125*tmp_543 - 10.666666666666666*((-tmp_1010 + 0.25*tmp_537 - tmp_925)*(-tmp_1010 + 0.25*tmp_537 - tmp_925))) + tmp_64*(tmp_1102*tmp_494 + tmp_1104*tmp_497 + tmp_1105*tmp_495 - 10.666666666666666*((-tmp_1002 + 0.25*tmp_489 - tmp_917)*(-tmp_1002 + 0.25*tmp_489 - tmp_917))) + tmp_87*(tmp_1107*tmp_506 + tmp_1109*tmp_509 + tmp_1110*tmp_507 - 10.666666666666666*((-tmp_1004 + 0.25*tmp_501 - tmp_919)*(-tmp_1004 + 0.25*tmp_501 - tmp_919)));
      real_t a_7_8 = tmp_110*(tmp_1112*tmp_575 + tmp_1114*tmp_578 + tmp_1115*tmp_576 + tmp_1133) + tmp_133*(tmp_1117*tmp_586 + tmp_1119*tmp_589 + tmp_1120*tmp_587 + tmp_1134) + tmp_156*(tmp_1122*tmp_597 + tmp_1124*tmp_600 + tmp_1125*tmp_598 + tmp_1135) + tmp_64*(tmp_1102*tmp_553 + tmp_1104*tmp_556 + tmp_1105*tmp_554 + tmp_1131) + tmp_87*(tmp_1107*tmp_564 + tmp_1109*tmp_567 + tmp_1110*tmp_565 + tmp_1132);
      real_t a_7_9 = tmp_110*(tmp_1112*tmp_627 + tmp_1114*tmp_630 + tmp_1115*tmp_628 + tmp_1138) + tmp_133*(tmp_1117*tmp_637 + tmp_1119*tmp_640 + tmp_1120*tmp_638 + tmp_1139) + tmp_156*(tmp_1122*tmp_647 + tmp_1124*tmp_650 + tmp_1125*tmp_648 + tmp_1140) + tmp_64*(tmp_1102*tmp_607 + tmp_1104*tmp_610 + tmp_1105*tmp_608 + tmp_1136) + tmp_87*(tmp_1107*tmp_617 + tmp_1109*tmp_620 + tmp_1110*tmp_618 + tmp_1137);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_1154 + tmp_109*tmp_1155 + tmp_1152*tmp_99 + tmp_573) + tmp_133*(tmp_1157*tmp_122 + tmp_1159*tmp_128 + tmp_1160*tmp_132 + tmp_584) + tmp_156*(tmp_1162*tmp_145 + tmp_1164*tmp_151 + tmp_1165*tmp_155 + tmp_595) + tmp_64*(tmp_1142*tmp_37 + tmp_1144*tmp_46 + tmp_1145*tmp_50 + tmp_551) + tmp_87*(tmp_1147*tmp_76 + tmp_1149*tmp_82 + tmp_1150*tmp_86 + tmp_562);
      real_t a_8_1 = tmp_110*(tmp_1151*tmp_180 + tmp_1153*tmp_182 + tmp_1168*tmp_177 + tmp_738) + tmp_133*(tmp_1156*tmp_188 + tmp_1158*tmp_190 + tmp_1169*tmp_185 + tmp_740) + tmp_156*(tmp_1161*tmp_196 + tmp_1163*tmp_198 + tmp_1170*tmp_193 + tmp_742) + tmp_64*(tmp_1141*tmp_164 + tmp_1143*tmp_166 + tmp_1166*tmp_160 + tmp_734) + tmp_87*(tmp_1146*tmp_172 + tmp_1148*tmp_174 + tmp_1167*tmp_169 + tmp_736);
      real_t a_8_2 = tmp_110*(tmp_1151*tmp_216 + tmp_1153*tmp_217 + tmp_1168*tmp_213 + tmp_805) + tmp_133*(tmp_1156*tmp_222 + tmp_1158*tmp_223 + tmp_1169*tmp_219 + tmp_806) + tmp_156*(tmp_1161*tmp_228 + tmp_1163*tmp_229 + tmp_1170*tmp_225 + tmp_807) + tmp_64*(tmp_1141*tmp_204 + tmp_1143*tmp_205 + tmp_1166*tmp_201 + tmp_803) + tmp_87*(tmp_1146*tmp_210 + tmp_1148*tmp_211 + tmp_1167*tmp_207 + tmp_804);
      real_t a_8_3 = tmp_110*(tmp_1151*tmp_247 + tmp_1153*tmp_248 + tmp_1168*tmp_244 + tmp_853) + tmp_133*(tmp_1156*tmp_253 + tmp_1158*tmp_254 + tmp_1169*tmp_250 + tmp_854) + tmp_156*(tmp_1161*tmp_259 + tmp_1163*tmp_260 + tmp_1170*tmp_256 + tmp_855) + tmp_64*(tmp_1141*tmp_235 + tmp_1143*tmp_236 + tmp_1166*tmp_232 + tmp_851) + tmp_87*(tmp_1146*tmp_241 + tmp_1148*tmp_242 + tmp_1167*tmp_238 + tmp_852);
      real_t a_8_4 = tmp_110*(tmp_1152*tmp_308 + tmp_1154*tmp_311 + tmp_1155*tmp_303 + tmp_943) + tmp_133*(tmp_1157*tmp_325 + tmp_1159*tmp_328 + tmp_1160*tmp_320 + tmp_944) + tmp_156*(tmp_1162*tmp_342 + tmp_1164*tmp_345 + tmp_1165*tmp_337 + tmp_945) + tmp_64*(tmp_1142*tmp_274 + tmp_1144*tmp_277 + tmp_1145*tmp_269 + tmp_941) + tmp_87*(tmp_1147*tmp_291 + tmp_1149*tmp_294 + tmp_1150*tmp_286 + tmp_942);
      real_t a_8_5 = tmp_110*(tmp_1023 + tmp_1152*tmp_387 + tmp_1154*tmp_390 + tmp_1155*tmp_383) + tmp_133*(tmp_1024 + tmp_1157*tmp_402 + tmp_1159*tmp_405 + tmp_1160*tmp_398) + tmp_156*(tmp_1025 + tmp_1162*tmp_417 + tmp_1164*tmp_420 + tmp_1165*tmp_413) + tmp_64*(tmp_1021 + tmp_1142*tmp_357 + tmp_1144*tmp_360 + tmp_1145*tmp_353) + tmp_87*(tmp_1022 + tmp_1147*tmp_372 + tmp_1149*tmp_375 + tmp_1150*tmp_368);
      real_t a_8_6 = tmp_110*(tmp_1093 + tmp_1152*tmp_456 + tmp_1154*tmp_459 + tmp_1155*tmp_453) + tmp_133*(tmp_1094 + tmp_1157*tmp_469 + tmp_1159*tmp_472 + tmp_1160*tmp_466) + tmp_156*(tmp_1095 + tmp_1162*tmp_482 + tmp_1164*tmp_485 + tmp_1165*tmp_479) + tmp_64*(tmp_1091 + tmp_1142*tmp_430 + tmp_1144*tmp_433 + tmp_1145*tmp_427) + tmp_87*(tmp_1092 + tmp_1147*tmp_443 + tmp_1149*tmp_446 + tmp_1150*tmp_440);
      real_t a_8_7 = tmp_110*(tmp_1133 + tmp_1152*tmp_518 + tmp_1154*tmp_521 + tmp_1155*tmp_519) + tmp_133*(tmp_1134 + tmp_1157*tmp_530 + tmp_1159*tmp_533 + tmp_1160*tmp_531) + tmp_156*(tmp_1135 + tmp_1162*tmp_542 + tmp_1164*tmp_545 + tmp_1165*tmp_543) + tmp_64*(tmp_1131 + tmp_1142*tmp_494 + tmp_1144*tmp_497 + tmp_1145*tmp_495) + tmp_87*(tmp_1132 + tmp_1147*tmp_506 + tmp_1149*tmp_509 + tmp_1150*tmp_507);
      real_t a_8_8 = tmp_110*(tmp_1152*tmp_575 + tmp_1154*tmp_578 + tmp_1155*tmp_576 - 10.666666666666666*((-tmp_1081 + 0.25*tmp_570 - tmp_920)*(-tmp_1081 + 0.25*tmp_570 - tmp_920))) + tmp_133*(tmp_1157*tmp_586 + tmp_1159*tmp_589 + tmp_1160*tmp_587 - 10.666666666666666*((-tmp_1083 + 0.25*tmp_581 - tmp_922)*(-tmp_1083 + 0.25*tmp_581 - tmp_922))) + tmp_156*(tmp_1162*tmp_597 + tmp_1164*tmp_600 + tmp_1165*tmp_598 - 10.666666666666666*((-tmp_1085 + 0.25*tmp_592 - tmp_924)*(-tmp_1085 + 0.25*tmp_592 - tmp_924))) + tmp_64*(tmp_1142*tmp_553 + tmp_1144*tmp_556 + tmp_1145*tmp_554 - 10.666666666666666*((-tmp_1077 + 0.25*tmp_548 - tmp_916)*(-tmp_1077 + 0.25*tmp_548 - tmp_916))) + tmp_87*(tmp_1147*tmp_564 + tmp_1149*tmp_567 + tmp_1150*tmp_565 - 10.666666666666666*((-tmp_1079 + 0.25*tmp_559 - tmp_918)*(-tmp_1079 + 0.25*tmp_559 - tmp_918)));
      real_t a_8_9 = tmp_110*(tmp_1152*tmp_627 + tmp_1154*tmp_630 + tmp_1155*tmp_628 + tmp_1173) + tmp_133*(tmp_1157*tmp_637 + tmp_1159*tmp_640 + tmp_1160*tmp_638 + tmp_1174) + tmp_156*(tmp_1162*tmp_647 + tmp_1164*tmp_650 + tmp_1165*tmp_648 + tmp_1175) + tmp_64*(tmp_1142*tmp_607 + tmp_1144*tmp_610 + tmp_1145*tmp_608 + tmp_1171) + tmp_87*(tmp_1147*tmp_617 + tmp_1149*tmp_620 + tmp_1150*tmp_618 + tmp_1172);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_1189 + tmp_109*tmp_1190 + tmp_1187*tmp_99 + tmp_625) + tmp_133*(tmp_1192*tmp_122 + tmp_1194*tmp_128 + tmp_1195*tmp_132 + tmp_635) + tmp_156*(tmp_1197*tmp_145 + tmp_1199*tmp_151 + tmp_1200*tmp_155 + tmp_645) + tmp_64*(tmp_1177*tmp_37 + tmp_1179*tmp_46 + tmp_1180*tmp_50 + tmp_605) + tmp_87*(tmp_1182*tmp_76 + tmp_1184*tmp_82 + tmp_1185*tmp_86 + tmp_615);
      real_t a_9_1 = tmp_110*(tmp_1186*tmp_180 + tmp_1188*tmp_182 + tmp_1203*tmp_177 + tmp_748) + tmp_133*(tmp_1191*tmp_188 + tmp_1193*tmp_190 + tmp_1204*tmp_185 + tmp_750) + tmp_156*(tmp_1196*tmp_196 + tmp_1198*tmp_198 + tmp_1205*tmp_193 + tmp_752) + tmp_64*(tmp_1176*tmp_164 + tmp_1178*tmp_166 + tmp_1201*tmp_160 + tmp_744) + tmp_87*(tmp_1181*tmp_172 + tmp_1183*tmp_174 + tmp_1202*tmp_169 + tmp_746);
      real_t a_9_2 = tmp_110*(tmp_1186*tmp_216 + tmp_1188*tmp_217 + tmp_1203*tmp_213 + tmp_810) + tmp_133*(tmp_1191*tmp_222 + tmp_1193*tmp_223 + tmp_1204*tmp_219 + tmp_811) + tmp_156*(tmp_1196*tmp_228 + tmp_1198*tmp_229 + tmp_1205*tmp_225 + tmp_812) + tmp_64*(tmp_1176*tmp_204 + tmp_1178*tmp_205 + tmp_1201*tmp_201 + tmp_808) + tmp_87*(tmp_1181*tmp_210 + tmp_1183*tmp_211 + tmp_1202*tmp_207 + tmp_809);
      real_t a_9_3 = tmp_110*(tmp_1186*tmp_247 + tmp_1188*tmp_248 + tmp_1203*tmp_244 + tmp_858) + tmp_133*(tmp_1191*tmp_253 + tmp_1193*tmp_254 + tmp_1204*tmp_250 + tmp_859) + tmp_156*(tmp_1196*tmp_259 + tmp_1198*tmp_260 + tmp_1205*tmp_256 + tmp_860) + tmp_64*(tmp_1176*tmp_235 + tmp_1178*tmp_236 + tmp_1201*tmp_232 + tmp_856) + tmp_87*(tmp_1181*tmp_241 + tmp_1183*tmp_242 + tmp_1202*tmp_238 + tmp_857);
      real_t a_9_4 = tmp_110*(tmp_1187*tmp_308 + tmp_1189*tmp_311 + tmp_1190*tmp_303 + tmp_948) + tmp_133*(tmp_1192*tmp_325 + tmp_1194*tmp_328 + tmp_1195*tmp_320 + tmp_949) + tmp_156*(tmp_1197*tmp_342 + tmp_1199*tmp_345 + tmp_1200*tmp_337 + tmp_950) + tmp_64*(tmp_1177*tmp_274 + tmp_1179*tmp_277 + tmp_1180*tmp_269 + tmp_946) + tmp_87*(tmp_1182*tmp_291 + tmp_1184*tmp_294 + tmp_1185*tmp_286 + tmp_947);
      real_t a_9_5 = tmp_110*(tmp_1028 + tmp_1187*tmp_387 + tmp_1189*tmp_390 + tmp_1190*tmp_383) + tmp_133*(tmp_1029 + tmp_1192*tmp_402 + tmp_1194*tmp_405 + tmp_1195*tmp_398) + tmp_156*(tmp_1030 + tmp_1197*tmp_417 + tmp_1199*tmp_420 + tmp_1200*tmp_413) + tmp_64*(tmp_1026 + tmp_1177*tmp_357 + tmp_1179*tmp_360 + tmp_1180*tmp_353) + tmp_87*(tmp_1027 + tmp_1182*tmp_372 + tmp_1184*tmp_375 + tmp_1185*tmp_368);
      real_t a_9_6 = tmp_110*(tmp_1098 + tmp_1187*tmp_456 + tmp_1189*tmp_459 + tmp_1190*tmp_453) + tmp_133*(tmp_1099 + tmp_1192*tmp_469 + tmp_1194*tmp_472 + tmp_1195*tmp_466) + tmp_156*(tmp_1100 + tmp_1197*tmp_482 + tmp_1199*tmp_485 + tmp_1200*tmp_479) + tmp_64*(tmp_1096 + tmp_1177*tmp_430 + tmp_1179*tmp_433 + tmp_1180*tmp_427) + tmp_87*(tmp_1097 + tmp_1182*tmp_443 + tmp_1184*tmp_446 + tmp_1185*tmp_440);
      real_t a_9_7 = tmp_110*(tmp_1138 + tmp_1187*tmp_518 + tmp_1189*tmp_521 + tmp_1190*tmp_519) + tmp_133*(tmp_1139 + tmp_1192*tmp_530 + tmp_1194*tmp_533 + tmp_1195*tmp_531) + tmp_156*(tmp_1140 + tmp_1197*tmp_542 + tmp_1199*tmp_545 + tmp_1200*tmp_543) + tmp_64*(tmp_1136 + tmp_1177*tmp_494 + tmp_1179*tmp_497 + tmp_1180*tmp_495) + tmp_87*(tmp_1137 + tmp_1182*tmp_506 + tmp_1184*tmp_509 + tmp_1185*tmp_507);
      real_t a_9_8 = tmp_110*(tmp_1173 + tmp_1187*tmp_575 + tmp_1189*tmp_578 + tmp_1190*tmp_576) + tmp_133*(tmp_1174 + tmp_1192*tmp_586 + tmp_1194*tmp_589 + tmp_1195*tmp_587) + tmp_156*(tmp_1175 + tmp_1197*tmp_597 + tmp_1199*tmp_600 + tmp_1200*tmp_598) + tmp_64*(tmp_1171 + tmp_1177*tmp_553 + tmp_1179*tmp_556 + tmp_1180*tmp_554) + tmp_87*(tmp_1172 + tmp_1182*tmp_564 + tmp_1184*tmp_567 + tmp_1185*tmp_565);
      real_t a_9_9 = tmp_110*(tmp_1187*tmp_627 + tmp_1189*tmp_630 + tmp_1190*tmp_628 - 10.666666666666666*((-tmp_1005 - tmp_1080 + 0.25*tmp_622)*(-tmp_1005 - tmp_1080 + 0.25*tmp_622))) + tmp_133*(tmp_1192*tmp_637 + tmp_1194*tmp_640 + tmp_1195*tmp_638 - 10.666666666666666*((-tmp_1007 - tmp_1082 + 0.25*tmp_632)*(-tmp_1007 - tmp_1082 + 0.25*tmp_632))) + tmp_156*(tmp_1197*tmp_647 + tmp_1199*tmp_650 + tmp_1200*tmp_648 - 10.666666666666666*((-tmp_1009 - tmp_1084 + 0.25*tmp_642)*(-tmp_1009 - tmp_1084 + 0.25*tmp_642))) + tmp_64*(tmp_1177*tmp_607 + tmp_1179*tmp_610 + tmp_1180*tmp_608 - 10.666666666666666*((-tmp_1001 - tmp_1076 + 0.25*tmp_602)*(-tmp_1001 - tmp_1076 + 0.25*tmp_602))) + tmp_87*(tmp_1182*tmp_617 + tmp_1184*tmp_620 + tmp_1185*tmp_618 - 10.666666666666666*((-tmp_1003 - tmp_1078 + 0.25*tmp_612)*(-tmp_1003 - tmp_1078 + 0.25*tmp_612)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_1_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_12 - tmp_18;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_16 - tmp_17;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = -0.1333333333333333*tmp_59;
      real_t tmp_61 = 0.66666666666666663;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.074999999999999983*tmp_59;
      real_t tmp_81 = 0.66666666666666663;
      real_t tmp_82 = 2.0;
      real_t tmp_83 = 0.66666666666666663;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.074999999999999983*tmp_59;
      real_t tmp_101 = 2.0;
      real_t tmp_102 = 0.66666666666666663;
      real_t tmp_103 = 0.66666666666666663;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.074999999999999983*tmp_59;
      real_t tmp_121 = 0.66666666666666663;
      real_t tmp_122 = 0.66666666666666663;
      real_t tmp_123 = 0.66666666666666663;
      real_t tmp_124 = tmp_19*(tmp_121 + tmp_122 + tmp_123 - 3.0);
      real_t tmp_125 = tmp_124*tmp_8;
      real_t tmp_126 = tmp_124*tmp_25;
      real_t tmp_127 = tmp_124*tmp_27;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = tmp_124*tmp_30;
      real_t tmp_130 = tmp_124*tmp_32;
      real_t tmp_131 = tmp_124*tmp_34;
      real_t tmp_132 = 0.5*tmp_129 + 0.5*tmp_130 + 0.5*tmp_131;
      real_t tmp_133 = 2*tmp_132;
      real_t tmp_134 = tmp_124*tmp_38;
      real_t tmp_135 = tmp_124*tmp_40;
      real_t tmp_136 = tmp_124*tmp_42;
      real_t tmp_137 = 0.5*tmp_134 + 0.5*tmp_135 + 0.5*tmp_136;
      real_t tmp_138 = 2*tmp_137;
      real_t tmp_139 = 1.0*tmp_125 + 1.0*tmp_126 + 1.0*tmp_127;
      real_t tmp_140 = 0.074999999999999983*tmp_59;
      real_t tmp_141 = (2.0/3.0)*tmp_29;
      real_t tmp_142 = tmp_20 - 1.0;
      real_t tmp_143 = tmp_19*tmp_27;
      real_t tmp_144 = tmp_142*tmp_143;
      real_t tmp_145 = 2.0*tmp_19;
      real_t tmp_146 = tmp_142*tmp_145;
      real_t tmp_147 = 2.0*tmp_46;
      real_t tmp_148 = (2.0/3.0)*tmp_68;
      real_t tmp_149 = tmp_61 - 1.0;
      real_t tmp_150 = tmp_143*tmp_149;
      real_t tmp_151 = tmp_145*tmp_149;
      real_t tmp_152 = 2.0*tmp_79;
      real_t tmp_153 = (2.0/3.0)*tmp_88;
      real_t tmp_154 = tmp_81 - 1.0;
      real_t tmp_155 = tmp_143*tmp_154;
      real_t tmp_156 = tmp_145*tmp_154;
      real_t tmp_157 = 2.0*tmp_99;
      real_t tmp_158 = (2.0/3.0)*tmp_108;
      real_t tmp_159 = tmp_101 - 1.0;
      real_t tmp_160 = tmp_143*tmp_159;
      real_t tmp_161 = tmp_145*tmp_159;
      real_t tmp_162 = 2.0*tmp_119;
      real_t tmp_163 = (2.0/3.0)*tmp_128;
      real_t tmp_164 = tmp_121 - 1.0;
      real_t tmp_165 = tmp_143*tmp_164;
      real_t tmp_166 = tmp_145*tmp_164;
      real_t tmp_167 = 2.0*tmp_139;
      real_t tmp_168 = tmp_21 - 1.0;
      real_t tmp_169 = tmp_19*tmp_25;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = tmp_145*tmp_168;
      real_t tmp_172 = tmp_62 - 1.0;
      real_t tmp_173 = tmp_169*tmp_172;
      real_t tmp_174 = tmp_145*tmp_172;
      real_t tmp_175 = tmp_82 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = tmp_145*tmp_175;
      real_t tmp_178 = tmp_102 - 1.0;
      real_t tmp_179 = tmp_169*tmp_178;
      real_t tmp_180 = tmp_145*tmp_178;
      real_t tmp_181 = tmp_122 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = tmp_145*tmp_181;
      real_t tmp_184 = tmp_22 - 1.0;
      real_t tmp_185 = tmp_19*tmp_8;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_145*tmp_184;
      real_t tmp_188 = tmp_63 - 1.0;
      real_t tmp_189 = tmp_185*tmp_188;
      real_t tmp_190 = tmp_145*tmp_188;
      real_t tmp_191 = tmp_83 - 1.0;
      real_t tmp_192 = tmp_185*tmp_191;
      real_t tmp_193 = tmp_145*tmp_191;
      real_t tmp_194 = tmp_103 - 1.0;
      real_t tmp_195 = tmp_185*tmp_194;
      real_t tmp_196 = tmp_145*tmp_194;
      real_t tmp_197 = tmp_123 - 1.0;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_145*tmp_197;
      real_t tmp_200 = tmp_185*tmp_21;
      real_t tmp_201 = tmp_169*tmp_22;
      real_t tmp_202 = 2.0;
      real_t tmp_203 = tmp_185*tmp_202;
      real_t tmp_204 = 2.0;
      real_t tmp_205 = tmp_169*tmp_204;
      real_t tmp_206 = tmp_19*tmp_21;
      real_t tmp_207 = tmp_206*tmp_30;
      real_t tmp_208 = tmp_19*tmp_22;
      real_t tmp_209 = tmp_208*tmp_32;
      real_t tmp_210 = tmp_206*tmp_38;
      real_t tmp_211 = tmp_208*tmp_40;
      real_t tmp_212 = tmp_185*tmp_62;
      real_t tmp_213 = tmp_169*tmp_63;
      real_t tmp_214 = 1.3333333333333333;
      real_t tmp_215 = tmp_185*tmp_214;
      real_t tmp_216 = 4.0;
      real_t tmp_217 = tmp_169*tmp_216;
      real_t tmp_218 = tmp_19*tmp_62;
      real_t tmp_219 = tmp_218*tmp_30;
      real_t tmp_220 = tmp_19*tmp_63;
      real_t tmp_221 = tmp_220*tmp_32;
      real_t tmp_222 = tmp_218*tmp_38;
      real_t tmp_223 = tmp_220*tmp_40;
      real_t tmp_224 = tmp_185*tmp_82;
      real_t tmp_225 = tmp_169*tmp_83;
      real_t tmp_226 = 4.0;
      real_t tmp_227 = tmp_185*tmp_226;
      real_t tmp_228 = 1.3333333333333333;
      real_t tmp_229 = tmp_169*tmp_228;
      real_t tmp_230 = tmp_19*tmp_82;
      real_t tmp_231 = tmp_230*tmp_30;
      real_t tmp_232 = tmp_19*tmp_83;
      real_t tmp_233 = tmp_232*tmp_32;
      real_t tmp_234 = tmp_230*tmp_38;
      real_t tmp_235 = tmp_232*tmp_40;
      real_t tmp_236 = tmp_102*tmp_185;
      real_t tmp_237 = tmp_103*tmp_169;
      real_t tmp_238 = 1.3333333333333333;
      real_t tmp_239 = tmp_185*tmp_238;
      real_t tmp_240 = 1.3333333333333333;
      real_t tmp_241 = tmp_169*tmp_240;
      real_t tmp_242 = tmp_102*tmp_19;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_103*tmp_19;
      real_t tmp_245 = tmp_244*tmp_32;
      real_t tmp_246 = tmp_242*tmp_38;
      real_t tmp_247 = tmp_244*tmp_40;
      real_t tmp_248 = tmp_122*tmp_185;
      real_t tmp_249 = tmp_123*tmp_169;
      real_t tmp_250 = 1.3333333333333333;
      real_t tmp_251 = tmp_185*tmp_250;
      real_t tmp_252 = 1.3333333333333333;
      real_t tmp_253 = tmp_169*tmp_252;
      real_t tmp_254 = tmp_122*tmp_19;
      real_t tmp_255 = tmp_254*tmp_30;
      real_t tmp_256 = tmp_123*tmp_19;
      real_t tmp_257 = tmp_256*tmp_32;
      real_t tmp_258 = tmp_254*tmp_38;
      real_t tmp_259 = tmp_256*tmp_40;
      real_t tmp_260 = tmp_185*tmp_20;
      real_t tmp_261 = tmp_208*tmp_27;
      real_t tmp_262 = 2.0;
      real_t tmp_263 = tmp_185*tmp_262;
      real_t tmp_264 = tmp_143*tmp_204;
      real_t tmp_265 = tmp_19*tmp_20;
      real_t tmp_266 = tmp_265*tmp_30;
      real_t tmp_267 = tmp_208*tmp_34;
      real_t tmp_268 = tmp_265*tmp_38;
      real_t tmp_269 = tmp_208*tmp_42;
      real_t tmp_270 = tmp_185*tmp_61;
      real_t tmp_271 = tmp_220*tmp_27;
      real_t tmp_272 = 1.3333333333333333;
      real_t tmp_273 = tmp_185*tmp_272;
      real_t tmp_274 = tmp_143*tmp_216;
      real_t tmp_275 = tmp_19*tmp_61;
      real_t tmp_276 = tmp_275*tmp_30;
      real_t tmp_277 = tmp_220*tmp_34;
      real_t tmp_278 = tmp_275*tmp_38;
      real_t tmp_279 = tmp_220*tmp_42;
      real_t tmp_280 = tmp_185*tmp_81;
      real_t tmp_281 = tmp_232*tmp_27;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_185*tmp_282;
      real_t tmp_284 = tmp_143*tmp_228;
      real_t tmp_285 = tmp_19*tmp_81;
      real_t tmp_286 = tmp_285*tmp_30;
      real_t tmp_287 = tmp_232*tmp_34;
      real_t tmp_288 = tmp_285*tmp_38;
      real_t tmp_289 = tmp_232*tmp_42;
      real_t tmp_290 = tmp_101*tmp_185;
      real_t tmp_291 = tmp_244*tmp_27;
      real_t tmp_292 = 4.0;
      real_t tmp_293 = tmp_185*tmp_292;
      real_t tmp_294 = tmp_143*tmp_240;
      real_t tmp_295 = tmp_101*tmp_19;
      real_t tmp_296 = tmp_295*tmp_30;
      real_t tmp_297 = tmp_244*tmp_34;
      real_t tmp_298 = tmp_295*tmp_38;
      real_t tmp_299 = tmp_244*tmp_42;
      real_t tmp_300 = tmp_121*tmp_185;
      real_t tmp_301 = tmp_256*tmp_27;
      real_t tmp_302 = 1.3333333333333333;
      real_t tmp_303 = tmp_185*tmp_302;
      real_t tmp_304 = tmp_143*tmp_252;
      real_t tmp_305 = tmp_121*tmp_19;
      real_t tmp_306 = tmp_30*tmp_305;
      real_t tmp_307 = tmp_256*tmp_34;
      real_t tmp_308 = tmp_305*tmp_38;
      real_t tmp_309 = tmp_256*tmp_42;
      real_t tmp_310 = tmp_169*tmp_20;
      real_t tmp_311 = tmp_206*tmp_27;
      real_t tmp_312 = tmp_169*tmp_262;
      real_t tmp_313 = tmp_143*tmp_202;
      real_t tmp_314 = tmp_265*tmp_32;
      real_t tmp_315 = tmp_206*tmp_34;
      real_t tmp_316 = tmp_265*tmp_40;
      real_t tmp_317 = tmp_206*tmp_42;
      real_t tmp_318 = tmp_169*tmp_61;
      real_t tmp_319 = tmp_218*tmp_27;
      real_t tmp_320 = tmp_169*tmp_272;
      real_t tmp_321 = tmp_143*tmp_214;
      real_t tmp_322 = tmp_275*tmp_32;
      real_t tmp_323 = tmp_218*tmp_34;
      real_t tmp_324 = tmp_275*tmp_40;
      real_t tmp_325 = tmp_218*tmp_42;
      real_t tmp_326 = tmp_169*tmp_81;
      real_t tmp_327 = tmp_230*tmp_27;
      real_t tmp_328 = tmp_169*tmp_282;
      real_t tmp_329 = tmp_143*tmp_226;
      real_t tmp_330 = tmp_285*tmp_32;
      real_t tmp_331 = tmp_230*tmp_34;
      real_t tmp_332 = tmp_285*tmp_40;
      real_t tmp_333 = tmp_230*tmp_42;
      real_t tmp_334 = tmp_101*tmp_169;
      real_t tmp_335 = tmp_242*tmp_27;
      real_t tmp_336 = tmp_169*tmp_292;
      real_t tmp_337 = tmp_143*tmp_238;
      real_t tmp_338 = tmp_295*tmp_32;
      real_t tmp_339 = tmp_242*tmp_34;
      real_t tmp_340 = tmp_295*tmp_40;
      real_t tmp_341 = tmp_242*tmp_42;
      real_t tmp_342 = tmp_121*tmp_169;
      real_t tmp_343 = tmp_254*tmp_27;
      real_t tmp_344 = tmp_169*tmp_302;
      real_t tmp_345 = tmp_143*tmp_250;
      real_t tmp_346 = tmp_305*tmp_32;
      real_t tmp_347 = tmp_254*tmp_34;
      real_t tmp_348 = tmp_305*tmp_40;
      real_t tmp_349 = tmp_254*tmp_42;
      real_t tmp_350 = -tmp_21;
      real_t tmp_351 = 4.0 - tmp_20;
      real_t tmp_352 = tmp_19*(-tmp_204 + tmp_350 + tmp_351);
      real_t tmp_353 = tmp_352*tmp_8;
      real_t tmp_354 = -tmp_62;
      real_t tmp_355 = 4.0 - tmp_61;
      real_t tmp_356 = tmp_19*(-tmp_216 + tmp_354 + tmp_355);
      real_t tmp_357 = tmp_356*tmp_8;
      real_t tmp_358 = -tmp_82;
      real_t tmp_359 = 4.0 - tmp_81;
      real_t tmp_360 = tmp_19*(-tmp_228 + tmp_358 + tmp_359);
      real_t tmp_361 = tmp_360*tmp_8;
      real_t tmp_362 = -tmp_102;
      real_t tmp_363 = 4.0 - tmp_101;
      real_t tmp_364 = tmp_19*(-tmp_240 + tmp_362 + tmp_363);
      real_t tmp_365 = tmp_364*tmp_8;
      real_t tmp_366 = -tmp_122;
      real_t tmp_367 = 4.0 - tmp_121;
      real_t tmp_368 = tmp_19*(-tmp_252 + tmp_366 + tmp_367);
      real_t tmp_369 = tmp_368*tmp_8;
      real_t tmp_370 = -tmp_22;
      real_t tmp_371 = tmp_19*(-tmp_202 + tmp_351 + tmp_370);
      real_t tmp_372 = tmp_25*tmp_371;
      real_t tmp_373 = -tmp_63;
      real_t tmp_374 = tmp_19*(-tmp_214 + tmp_355 + tmp_373);
      real_t tmp_375 = tmp_25*tmp_374;
      real_t tmp_376 = -tmp_83;
      real_t tmp_377 = tmp_19*(-tmp_226 + tmp_359 + tmp_376);
      real_t tmp_378 = tmp_25*tmp_377;
      real_t tmp_379 = -tmp_103;
      real_t tmp_380 = tmp_19*(-tmp_238 + tmp_363 + tmp_379);
      real_t tmp_381 = tmp_25*tmp_380;
      real_t tmp_382 = -tmp_123;
      real_t tmp_383 = tmp_19*(-tmp_250 + tmp_367 + tmp_382);
      real_t tmp_384 = tmp_25*tmp_383;
      real_t tmp_385 = tmp_19*(-tmp_262 + tmp_350 + tmp_370 + 4.0);
      real_t tmp_386 = tmp_27*tmp_385;
      real_t tmp_387 = tmp_19*(-tmp_272 + tmp_354 + tmp_373 + 4.0);
      real_t tmp_388 = tmp_27*tmp_387;
      real_t tmp_389 = tmp_19*(-tmp_282 + tmp_358 + tmp_376 + 4.0);
      real_t tmp_390 = tmp_27*tmp_389;
      real_t tmp_391 = tmp_19*(-tmp_292 + tmp_362 + tmp_379 + 4.0);
      real_t tmp_392 = tmp_27*tmp_391;
      real_t tmp_393 = tmp_19*(-tmp_302 + tmp_366 + tmp_382 + 4.0);
      real_t tmp_394 = tmp_27*tmp_393;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_140*(-2.0/3.0*(tmp_128*tmp_128) + tmp_133*(tmp_129 + tmp_130 + tmp_131) + tmp_138*(tmp_134 + tmp_135 + tmp_136) + tmp_139*(2.0*tmp_125 + 2.0*tmp_126 + 2.0*tmp_127)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_153*tmp_155 + tmp_155*tmp_157 + tmp_156*tmp_34*tmp_92 + tmp_156*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_161*tmp_34 + tmp_117*tmp_161*tmp_42 - tmp_158*tmp_160 + tmp_160*tmp_162) + tmp_140*(tmp_132*tmp_166*tmp_34 + tmp_137*tmp_166*tmp_42 - tmp_163*tmp_165 + tmp_165*tmp_167) + tmp_60*(-tmp_141*tmp_144 + tmp_144*tmp_147 + tmp_146*tmp_34*tmp_36 + tmp_146*tmp_42*tmp_44) + tmp_80*(-tmp_148*tmp_150 + tmp_150*tmp_152 + tmp_151*tmp_34*tmp_72 + tmp_151*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_153*tmp_176 + tmp_157*tmp_176 + tmp_177*tmp_32*tmp_92 + tmp_177*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_180*tmp_32 + tmp_117*tmp_180*tmp_40 - tmp_158*tmp_179 + tmp_162*tmp_179) + tmp_140*(tmp_132*tmp_183*tmp_32 + tmp_137*tmp_183*tmp_40 - tmp_163*tmp_182 + tmp_167*tmp_182) + tmp_60*(-tmp_141*tmp_170 + tmp_147*tmp_170 + tmp_171*tmp_32*tmp_36 + tmp_171*tmp_40*tmp_44) + tmp_80*(-tmp_148*tmp_173 + tmp_152*tmp_173 + tmp_174*tmp_32*tmp_72 + tmp_174*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_153*tmp_192 + tmp_157*tmp_192 + tmp_193*tmp_30*tmp_92 + tmp_193*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_196*tmp_30 + tmp_117*tmp_196*tmp_38 - tmp_158*tmp_195 + tmp_162*tmp_195) + tmp_140*(tmp_132*tmp_199*tmp_30 + tmp_137*tmp_199*tmp_38 - tmp_163*tmp_198 + tmp_167*tmp_198) + tmp_60*(-tmp_141*tmp_186 + tmp_147*tmp_186 + tmp_187*tmp_30*tmp_36 + tmp_187*tmp_38*tmp_44) + tmp_80*(-tmp_148*tmp_189 + tmp_152*tmp_189 + tmp_190*tmp_30*tmp_72 + tmp_190*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_153*(tmp_224 + tmp_225) + tmp_93*(tmp_231 + tmp_233) + tmp_98*(tmp_234 + tmp_235) + tmp_99*(tmp_227 + tmp_229)) + tmp_120*(tmp_113*(tmp_243 + tmp_245) + tmp_118*(tmp_246 + tmp_247) + tmp_119*(tmp_239 + tmp_241) - tmp_158*(tmp_236 + tmp_237)) + tmp_140*(tmp_133*(tmp_255 + tmp_257) + tmp_138*(tmp_258 + tmp_259) + tmp_139*(tmp_251 + tmp_253) - tmp_163*(tmp_248 + tmp_249)) + tmp_60*(-tmp_141*(tmp_200 + tmp_201) + tmp_37*(tmp_207 + tmp_209) + tmp_45*(tmp_210 + tmp_211) + tmp_46*(tmp_203 + tmp_205)) + tmp_80*(-tmp_148*(tmp_212 + tmp_213) + tmp_73*(tmp_219 + tmp_221) + tmp_78*(tmp_222 + tmp_223) + tmp_79*(tmp_215 + tmp_217));
      real_t a_0_5 = tmp_100*(-tmp_153*(tmp_280 + tmp_281) + tmp_93*(tmp_286 + tmp_287) + tmp_98*(tmp_288 + tmp_289) + tmp_99*(tmp_283 + tmp_284)) + tmp_120*(tmp_113*(tmp_296 + tmp_297) + tmp_118*(tmp_298 + tmp_299) + tmp_119*(tmp_293 + tmp_294) - tmp_158*(tmp_290 + tmp_291)) + tmp_140*(tmp_133*(tmp_306 + tmp_307) + tmp_138*(tmp_308 + tmp_309) + tmp_139*(tmp_303 + tmp_304) - tmp_163*(tmp_300 + tmp_301)) + tmp_60*(-tmp_141*(tmp_260 + tmp_261) + tmp_37*(tmp_266 + tmp_267) + tmp_45*(tmp_268 + tmp_269) + tmp_46*(tmp_263 + tmp_264)) + tmp_80*(-tmp_148*(tmp_270 + tmp_271) + tmp_73*(tmp_276 + tmp_277) + tmp_78*(tmp_278 + tmp_279) + tmp_79*(tmp_273 + tmp_274));
      real_t a_0_6 = tmp_100*(-tmp_153*(tmp_326 + tmp_327) + tmp_93*(tmp_330 + tmp_331) + tmp_98*(tmp_332 + tmp_333) + tmp_99*(tmp_328 + tmp_329)) + tmp_120*(tmp_113*(tmp_338 + tmp_339) + tmp_118*(tmp_340 + tmp_341) + tmp_119*(tmp_336 + tmp_337) - tmp_158*(tmp_334 + tmp_335)) + tmp_140*(tmp_133*(tmp_346 + tmp_347) + tmp_138*(tmp_348 + tmp_349) + tmp_139*(tmp_344 + tmp_345) - tmp_163*(tmp_342 + tmp_343)) + tmp_60*(-tmp_141*(tmp_310 + tmp_311) + tmp_37*(tmp_314 + tmp_315) + tmp_45*(tmp_316 + tmp_317) + tmp_46*(tmp_312 + tmp_313)) + tmp_80*(-tmp_148*(tmp_318 + tmp_319) + tmp_73*(tmp_322 + tmp_323) + tmp_78*(tmp_324 + tmp_325) + tmp_79*(tmp_320 + tmp_321));
      real_t a_0_7 = tmp_100*(-tmp_153*(-tmp_225 - tmp_281 + tmp_361) + tmp_93*(-tmp_233 - tmp_287 + tmp_30*tmp_360) + tmp_98*(-tmp_235 - tmp_289 + tmp_360*tmp_38) + tmp_99*(-tmp_229 - tmp_284 + 2.0*tmp_361)) + tmp_120*(tmp_113*(-tmp_245 - tmp_297 + tmp_30*tmp_364) + tmp_118*(-tmp_247 - tmp_299 + tmp_364*tmp_38) + tmp_119*(-tmp_241 - tmp_294 + 2.0*tmp_365) - tmp_158*(-tmp_237 - tmp_291 + tmp_365)) + tmp_140*(tmp_133*(-tmp_257 + tmp_30*tmp_368 - tmp_307) + tmp_138*(-tmp_259 - tmp_309 + tmp_368*tmp_38) + tmp_139*(-tmp_253 - tmp_304 + 2.0*tmp_369) - tmp_163*(-tmp_249 - tmp_301 + tmp_369)) + tmp_60*(-tmp_141*(-tmp_201 - tmp_261 + tmp_353) + tmp_37*(-tmp_209 - tmp_267 + tmp_30*tmp_352) + tmp_45*(-tmp_211 - tmp_269 + tmp_352*tmp_38) + tmp_46*(-tmp_205 - tmp_264 + 2.0*tmp_353)) + tmp_80*(-tmp_148*(-tmp_213 - tmp_271 + tmp_357) + tmp_73*(-tmp_221 - tmp_277 + tmp_30*tmp_356) + tmp_78*(-tmp_223 - tmp_279 + tmp_356*tmp_38) + tmp_79*(-tmp_217 - tmp_274 + 2.0*tmp_357));
      real_t a_0_8 = tmp_100*(-tmp_153*(-tmp_224 - tmp_327 + tmp_378) + tmp_93*(-tmp_231 + tmp_32*tmp_377 - tmp_331) + tmp_98*(-tmp_234 - tmp_333 + tmp_377*tmp_40) + tmp_99*(-tmp_227 - tmp_329 + 2.0*tmp_378)) + tmp_120*(tmp_113*(-tmp_243 + tmp_32*tmp_380 - tmp_339) + tmp_118*(-tmp_246 - tmp_341 + tmp_380*tmp_40) + tmp_119*(-tmp_239 - tmp_337 + 2.0*tmp_381) - tmp_158*(-tmp_236 - tmp_335 + tmp_381)) + tmp_140*(tmp_133*(-tmp_255 + tmp_32*tmp_383 - tmp_347) + tmp_138*(-tmp_258 - tmp_349 + tmp_383*tmp_40) + tmp_139*(-tmp_251 - tmp_345 + 2.0*tmp_384) - tmp_163*(-tmp_248 - tmp_343 + tmp_384)) + tmp_60*(-tmp_141*(-tmp_200 - tmp_311 + tmp_372) + tmp_37*(-tmp_207 - tmp_315 + tmp_32*tmp_371) + tmp_45*(-tmp_210 - tmp_317 + tmp_371*tmp_40) + tmp_46*(-tmp_203 - tmp_313 + 2.0*tmp_372)) + tmp_80*(-tmp_148*(-tmp_212 - tmp_319 + tmp_375) + tmp_73*(-tmp_219 + tmp_32*tmp_374 - tmp_323) + tmp_78*(-tmp_222 - tmp_325 + tmp_374*tmp_40) + tmp_79*(-tmp_215 - tmp_321 + 2.0*tmp_375));
      real_t a_0_9 = tmp_100*(-tmp_153*(-tmp_280 - tmp_326 + tmp_390) + tmp_93*(-tmp_286 - tmp_330 + tmp_34*tmp_389) + tmp_98*(-tmp_288 - tmp_332 + tmp_389*tmp_42) + tmp_99*(-tmp_283 - tmp_328 + 2.0*tmp_390)) + tmp_120*(tmp_113*(-tmp_296 - tmp_338 + tmp_34*tmp_391) + tmp_118*(-tmp_298 - tmp_340 + tmp_391*tmp_42) + tmp_119*(-tmp_293 - tmp_336 + 2.0*tmp_392) - tmp_158*(-tmp_290 - tmp_334 + tmp_392)) + tmp_140*(tmp_133*(-tmp_306 + tmp_34*tmp_393 - tmp_346) + tmp_138*(-tmp_308 - tmp_348 + tmp_393*tmp_42) + tmp_139*(-tmp_303 - tmp_344 + 2.0*tmp_394) - tmp_163*(-tmp_300 - tmp_342 + tmp_394)) + tmp_60*(-tmp_141*(-tmp_260 - tmp_310 + tmp_386) + tmp_37*(-tmp_266 - tmp_314 + tmp_34*tmp_385) + tmp_45*(-tmp_268 - tmp_316 + tmp_385*tmp_42) + tmp_46*(-tmp_263 - tmp_312 + 2.0*tmp_386)) + tmp_80*(-tmp_148*(-tmp_270 - tmp_318 + tmp_388) + tmp_73*(-tmp_276 - tmp_322 + tmp_34*tmp_387) + tmp_78*(-tmp_278 - tmp_324 + tmp_387*tmp_42) + tmp_79*(-tmp_273 - tmp_320 + 2.0*tmp_388));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_2_affine_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_1_2_affine_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_1_2_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_12 - tmp_16;
      real_t tmp_32 = -tmp_18 + tmp_9;
      real_t tmp_33 = tmp_15 - tmp_17;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = 1.0*tmp_106;
      real_t tmp_337 = tmp_104*tmp_33;
      real_t tmp_338 = (2.0/3.0)*tmp_20;
      real_t tmp_339 = tmp_30*tmp_338;
      real_t tmp_340 = 1.0*tmp_111;
      real_t tmp_341 = tmp_33*tmp_338;
      real_t tmp_342 = tmp_110*tmp_341;
      real_t tmp_343 = 1.0*tmp_114;
      real_t tmp_344 = tmp_113*tmp_341;
      real_t tmp_345 = 1.0*tmp_117;
      real_t tmp_346 = tmp_116*tmp_341;
      real_t tmp_347 = 1.0*tmp_120;
      real_t tmp_348 = tmp_119*tmp_341;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = (2.0/3.0)*tmp_349;
      real_t tmp_355 = tmp_26*tmp_354;
      real_t tmp_356 = tmp_122*tmp_337;
      real_t tmp_357 = 1.0*tmp_349;
      real_t tmp_358 = tmp_122*tmp_32;
      real_t tmp_359 = tmp_104*tmp_28;
      real_t tmp_360 = tmp_358*tmp_359;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_33*tmp_355;
      real_t tmp_363 = tmp_28*tmp_357;
      real_t tmp_364 = tmp_32*tmp_363;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_354*tmp_6;
      real_t tmp_369 = tmp_139*tmp_368;
      real_t tmp_370 = tmp_139*tmp_31;
      real_t tmp_371 = tmp_357*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_33*tmp_368;
      real_t tmp_374 = tmp_31*tmp_363;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_337*tmp_338;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = 1.0*tmp_128;
      real_t tmp_381 = tmp_32*tmp_338;
      real_t tmp_382 = tmp_127*tmp_381;
      real_t tmp_383 = 1.0*tmp_131;
      real_t tmp_384 = tmp_130*tmp_381;
      real_t tmp_385 = 1.0*tmp_134;
      real_t tmp_386 = tmp_133*tmp_381;
      real_t tmp_387 = 1.0*tmp_137;
      real_t tmp_388 = tmp_136*tmp_381;
      real_t tmp_389 = tmp_26*tmp_357;
      real_t tmp_390 = tmp_33*tmp_389;
      real_t tmp_391 = tmp_28*tmp_354;
      real_t tmp_392 = tmp_32*tmp_391;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_32*tmp_368;
      real_t tmp_397 = tmp_31*tmp_389;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_338*tmp_358;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = 1.0*tmp_145;
      real_t tmp_404 = tmp_31*tmp_338;
      real_t tmp_405 = tmp_144*tmp_404;
      real_t tmp_406 = 1.0*tmp_148;
      real_t tmp_407 = tmp_147*tmp_404;
      real_t tmp_408 = 1.0*tmp_151;
      real_t tmp_409 = tmp_150*tmp_404;
      real_t tmp_410 = 1.0*tmp_154;
      real_t tmp_411 = tmp_153*tmp_404;
      real_t tmp_412 = tmp_357*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_33*tmp_412;
      real_t tmp_415 = tmp_31*tmp_391;
      real_t tmp_416 = tmp_32*tmp_412;
      real_t tmp_417 = tmp_31*tmp_355;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_338*tmp_370;
      real_t tmp_421 = tmp_107*tmp_6;
      real_t tmp_422 = 0.25*tmp_421;
      real_t tmp_423 = tmp_107*tmp_26;
      real_t tmp_424 = 0.25*tmp_423;
      real_t tmp_425 = tmp_422 + tmp_424;
      real_t tmp_426 = 2*tmp_425;
      real_t tmp_427 = (2.0/3.0)*tmp_163;
      real_t tmp_428 = 0.16666666666666666*tmp_421;
      real_t tmp_429 = 0.5*tmp_423;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_171;
      real_t tmp_433 = 0.5*tmp_421;
      real_t tmp_434 = 0.16666666666666666*tmp_423;
      real_t tmp_435 = tmp_433 + tmp_434;
      real_t tmp_436 = 2*tmp_435;
      real_t tmp_437 = (2.0/3.0)*tmp_179;
      real_t tmp_438 = 0.16666666666666666*tmp_421;
      real_t tmp_439 = 0.16666666666666666*tmp_423;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = 2*tmp_440;
      real_t tmp_442 = (2.0/3.0)*tmp_187;
      real_t tmp_443 = 0.16666666666666666*tmp_421;
      real_t tmp_444 = 0.16666666666666666*tmp_423;
      real_t tmp_445 = tmp_443 + tmp_444;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_195;
      real_t tmp_448 = 0.25*tmp_421;
      real_t tmp_449 = tmp_107*tmp_28;
      real_t tmp_450 = 0.25*tmp_449;
      real_t tmp_451 = tmp_448 + tmp_450;
      real_t tmp_452 = 2*tmp_451;
      real_t tmp_453 = (2.0/3.0)*tmp_202;
      real_t tmp_454 = 0.16666666666666666*tmp_421;
      real_t tmp_455 = 0.5*tmp_449;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = 2*tmp_456;
      real_t tmp_458 = (2.0/3.0)*tmp_209;
      real_t tmp_459 = 0.16666666666666666*tmp_421;
      real_t tmp_460 = 0.16666666666666666*tmp_449;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = 2*tmp_461;
      real_t tmp_463 = (2.0/3.0)*tmp_216;
      real_t tmp_464 = 0.5*tmp_421;
      real_t tmp_465 = 0.16666666666666666*tmp_449;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = 2*tmp_466;
      real_t tmp_468 = (2.0/3.0)*tmp_223;
      real_t tmp_469 = 0.16666666666666666*tmp_421;
      real_t tmp_470 = 0.16666666666666666*tmp_449;
      real_t tmp_471 = tmp_469 + tmp_470;
      real_t tmp_472 = 2*tmp_471;
      real_t tmp_473 = (2.0/3.0)*tmp_230;
      real_t tmp_474 = 0.25*tmp_423;
      real_t tmp_475 = 0.25*tmp_449;
      real_t tmp_476 = tmp_474 + tmp_475;
      real_t tmp_477 = 2*tmp_476;
      real_t tmp_478 = (2.0/3.0)*tmp_236;
      real_t tmp_479 = 0.16666666666666666*tmp_423;
      real_t tmp_480 = 0.16666666666666666*tmp_449;
      real_t tmp_481 = tmp_479 + tmp_480;
      real_t tmp_482 = 2*tmp_481;
      real_t tmp_483 = (2.0/3.0)*tmp_242;
      real_t tmp_484 = 0.16666666666666666*tmp_423;
      real_t tmp_485 = 0.5*tmp_449;
      real_t tmp_486 = tmp_484 + tmp_485;
      real_t tmp_487 = 2*tmp_486;
      real_t tmp_488 = (2.0/3.0)*tmp_248;
      real_t tmp_489 = 0.5*tmp_423;
      real_t tmp_490 = 0.16666666666666666*tmp_449;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = 2*tmp_491;
      real_t tmp_493 = (2.0/3.0)*tmp_254;
      real_t tmp_494 = 0.16666666666666666*tmp_423;
      real_t tmp_495 = 0.16666666666666666*tmp_449;
      real_t tmp_496 = tmp_494 + tmp_495;
      real_t tmp_497 = 2*tmp_496;
      real_t tmp_498 = (2.0/3.0)*tmp_260;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_424 - tmp_450;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_429 - tmp_455;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_434 - tmp_460;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_439 - tmp_465;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_444 - tmp_470;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_422 - tmp_475;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_428 - tmp_480;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_433 - tmp_485;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_438 - tmp_490;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_443 - tmp_495;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_448 - tmp_474;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_454 - tmp_479;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_459 - tmp_484;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_464 - tmp_489;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_469 - tmp_494;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(tmp_347*tmp_99 - tmp_348*tmp_98) + tmp_51*(tmp_336*tmp_34 - tmp_337*tmp_339) + tmp_64*(tmp_340*tmp_60 - tmp_342*tmp_59) + tmp_77*(tmp_343*tmp_73 - tmp_344*tmp_72) + tmp_90*(tmp_345*tmp_86 - tmp_346*tmp_85);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(-tmp_362*tmp_367 + tmp_364*tmp_367) + tmp_51*(-tmp_355*tmp_356 + tmp_357*tmp_360) + tmp_64*(-tmp_361*tmp_362 + tmp_361*tmp_364) + tmp_77*(-tmp_362*tmp_365 + tmp_364*tmp_365) + tmp_90*(-tmp_362*tmp_366 + tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(-tmp_373*tmp_377 + tmp_374*tmp_377) + tmp_51*(-tmp_337*tmp_369 + tmp_359*tmp_371) + tmp_64*(-tmp_372*tmp_373 + tmp_372*tmp_374) + tmp_77*(-tmp_373*tmp_375 + tmp_374*tmp_375) + tmp_90*(-tmp_373*tmp_376 + tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_348 + tmp_195*tmp_347) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_336) + tmp_64*(-tmp_168*tmp_342 + tmp_171*tmp_340) + tmp_77*(-tmp_176*tmp_344 + tmp_179*tmp_343) + tmp_90*(-tmp_184*tmp_346 + tmp_187*tmp_345);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_348 + tmp_230*tmp_347) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_336) + tmp_64*(-tmp_206*tmp_342 + tmp_209*tmp_340) + tmp_77*(-tmp_213*tmp_344 + tmp_216*tmp_343) + tmp_90*(-tmp_220*tmp_346 + tmp_223*tmp_345);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_348 + tmp_260*tmp_347) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_336) + tmp_64*(-tmp_239*tmp_342 + tmp_242*tmp_340) + tmp_77*(-tmp_245*tmp_344 + tmp_248*tmp_343) + tmp_90*(-tmp_251*tmp_346 + tmp_254*tmp_345);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_348 + tmp_290*tmp_347) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_336) + tmp_64*(-tmp_271*tmp_342 + tmp_272*tmp_340) + tmp_77*(-tmp_277*tmp_344 + tmp_278*tmp_343) + tmp_90*(-tmp_283*tmp_346 + tmp_284*tmp_345);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_348 + tmp_315*tmp_347) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_336) + tmp_64*(-tmp_299*tmp_342 + tmp_300*tmp_340) + tmp_77*(-tmp_304*tmp_344 + tmp_305*tmp_343) + tmp_90*(-tmp_309*tmp_346 + tmp_310*tmp_345);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_348 + tmp_335*tmp_347) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_336) + tmp_64*(-tmp_322*tmp_342 + tmp_323*tmp_340) + tmp_77*(-tmp_326*tmp_344 + tmp_327*tmp_343) + tmp_90*(-tmp_330*tmp_346 + tmp_331*tmp_345);
      real_t a_2_0 = tmp_103*(tmp_387*tmp_99 - tmp_388*tmp_98) + tmp_51*(-tmp_339*tmp_358 + tmp_34*tmp_379) + tmp_64*(tmp_380*tmp_60 - tmp_382*tmp_59) + tmp_77*(tmp_383*tmp_73 - tmp_384*tmp_72) + tmp_90*(tmp_385*tmp_86 - tmp_386*tmp_85);
      real_t a_2_1 = tmp_103*(tmp_367*tmp_390 - tmp_367*tmp_392) + tmp_51*(-tmp_354*tmp_360 + tmp_356*tmp_389) + tmp_64*(tmp_361*tmp_390 - tmp_361*tmp_392) + tmp_77*(tmp_365*tmp_390 - tmp_365*tmp_392) + tmp_90*(tmp_366*tmp_390 - tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(-tmp_396*tmp_400 + tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_371 - tmp_358*tmp_369) + tmp_64*(-tmp_395*tmp_396 + tmp_395*tmp_397) + tmp_77*(-tmp_396*tmp_398 + tmp_397*tmp_398) + tmp_90*(-tmp_396*tmp_399 + tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_388 + tmp_195*tmp_387) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_382 + tmp_171*tmp_380) + tmp_77*(-tmp_176*tmp_384 + tmp_179*tmp_383) + tmp_90*(-tmp_184*tmp_386 + tmp_187*tmp_385);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_388 + tmp_230*tmp_387) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_382 + tmp_209*tmp_380) + tmp_77*(-tmp_213*tmp_384 + tmp_216*tmp_383) + tmp_90*(-tmp_220*tmp_386 + tmp_223*tmp_385);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_388 + tmp_260*tmp_387) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_382 + tmp_242*tmp_380) + tmp_77*(-tmp_245*tmp_384 + tmp_248*tmp_383) + tmp_90*(-tmp_251*tmp_386 + tmp_254*tmp_385);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_388 + tmp_290*tmp_387) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_382 + tmp_272*tmp_380) + tmp_77*(-tmp_277*tmp_384 + tmp_278*tmp_383) + tmp_90*(-tmp_283*tmp_386 + tmp_284*tmp_385);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_388 + tmp_315*tmp_387) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_382 + tmp_300*tmp_380) + tmp_77*(-tmp_304*tmp_384 + tmp_305*tmp_383) + tmp_90*(-tmp_309*tmp_386 + tmp_310*tmp_385);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_388 + tmp_335*tmp_387) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_382 + tmp_323*tmp_380) + tmp_77*(-tmp_326*tmp_384 + tmp_327*tmp_383) + tmp_90*(-tmp_330*tmp_386 + tmp_331*tmp_385);
      real_t a_3_0 = tmp_103*(tmp_410*tmp_99 - tmp_411*tmp_98) + tmp_51*(-tmp_339*tmp_370 + tmp_34*tmp_402) + tmp_64*(tmp_403*tmp_60 - tmp_405*tmp_59) + tmp_77*(tmp_406*tmp_73 - tmp_407*tmp_72) + tmp_90*(tmp_408*tmp_86 - tmp_409*tmp_85);
      real_t a_3_1 = tmp_103*(tmp_377*tmp_414 - tmp_377*tmp_415) + tmp_51*(tmp_337*tmp_413 - tmp_354*tmp_359*tmp_370) + tmp_64*(tmp_372*tmp_414 - tmp_372*tmp_415) + tmp_77*(tmp_375*tmp_414 - tmp_375*tmp_415) + tmp_90*(tmp_376*tmp_414 - tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(tmp_400*tmp_416 - tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_355*tmp_370 + tmp_358*tmp_413) + tmp_64*(tmp_395*tmp_416 - tmp_395*tmp_417) + tmp_77*(tmp_398*tmp_416 - tmp_398*tmp_417) + tmp_90*(tmp_399*tmp_416 - tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_411 + tmp_195*tmp_410) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_405 + tmp_171*tmp_403) + tmp_77*(-tmp_176*tmp_407 + tmp_179*tmp_406) + tmp_90*(-tmp_184*tmp_409 + tmp_187*tmp_408);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_411 + tmp_230*tmp_410) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_405 + tmp_209*tmp_403) + tmp_77*(-tmp_213*tmp_407 + tmp_216*tmp_406) + tmp_90*(-tmp_220*tmp_409 + tmp_223*tmp_408);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_411 + tmp_260*tmp_410) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_405 + tmp_242*tmp_403) + tmp_77*(-tmp_245*tmp_407 + tmp_248*tmp_406) + tmp_90*(-tmp_251*tmp_409 + tmp_254*tmp_408);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_411 + tmp_290*tmp_410) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_405 + tmp_272*tmp_403) + tmp_77*(-tmp_277*tmp_407 + tmp_278*tmp_406) + tmp_90*(-tmp_283*tmp_409 + tmp_284*tmp_408);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_411 + tmp_315*tmp_410) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_405 + tmp_300*tmp_403) + tmp_77*(-tmp_304*tmp_407 + tmp_305*tmp_406) + tmp_90*(-tmp_309*tmp_409 + tmp_310*tmp_408);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_411 + tmp_335*tmp_410) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_405 + tmp_323*tmp_403) + tmp_77*(-tmp_326*tmp_407 + tmp_327*tmp_406) + tmp_90*(-tmp_330*tmp_409 + tmp_331*tmp_408);
      real_t a_4_0 = tmp_103*(tmp_446*tmp_99 - tmp_447*tmp_98) + tmp_51*(-tmp_30*tmp_427 + tmp_34*tmp_426) + tmp_64*(tmp_431*tmp_60 - tmp_432*tmp_59) + tmp_77*(tmp_436*tmp_73 - tmp_437*tmp_72) + tmp_90*(tmp_441*tmp_86 - tmp_442*tmp_85);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_447 + tmp_121*tmp_445) + tmp_51*(-tmp_106*tmp_427 + tmp_109*tmp_425) + tmp_64*(-tmp_111*tmp_432 + tmp_112*tmp_430) + tmp_77*(-tmp_114*tmp_437 + tmp_115*tmp_435) + tmp_90*(-tmp_117*tmp_442 + tmp_118*tmp_440);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_447 + tmp_138*tmp_445) + tmp_51*(-tmp_124*tmp_427 + tmp_126*tmp_425) + tmp_64*(-tmp_128*tmp_432 + tmp_129*tmp_430) + tmp_77*(-tmp_131*tmp_437 + tmp_132*tmp_435) + tmp_90*(-tmp_134*tmp_442 + tmp_135*tmp_440);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_447 + tmp_155*tmp_445) + tmp_51*(-tmp_141*tmp_427 + tmp_143*tmp_425) + tmp_64*(-tmp_145*tmp_432 + tmp_146*tmp_430) + tmp_77*(-tmp_148*tmp_437 + tmp_149*tmp_435) + tmp_90*(-tmp_151*tmp_442 + tmp_152*tmp_440);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_447 + tmp_195*tmp_446) + tmp_51*(-tmp_160*tmp_427 + tmp_163*tmp_426) + tmp_64*(-tmp_168*tmp_432 + tmp_171*tmp_431) + tmp_77*(-tmp_176*tmp_437 + tmp_179*tmp_436) + tmp_90*(-tmp_184*tmp_442 + tmp_187*tmp_441);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_447 + tmp_230*tmp_446) + tmp_51*(-tmp_199*tmp_427 + tmp_202*tmp_426) + tmp_64*(-tmp_206*tmp_432 + tmp_209*tmp_431) + tmp_77*(-tmp_213*tmp_437 + tmp_216*tmp_436) + tmp_90*(-tmp_220*tmp_442 + tmp_223*tmp_441);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_447 + tmp_260*tmp_446) + tmp_51*(-tmp_233*tmp_427 + tmp_236*tmp_426) + tmp_64*(-tmp_239*tmp_432 + tmp_242*tmp_431) + tmp_77*(-tmp_245*tmp_437 + tmp_248*tmp_436) + tmp_90*(-tmp_251*tmp_442 + tmp_254*tmp_441);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_447 + tmp_290*tmp_446) + tmp_51*(-tmp_265*tmp_427 + tmp_266*tmp_426) + tmp_64*(-tmp_271*tmp_432 + tmp_272*tmp_431) + tmp_77*(-tmp_277*tmp_437 + tmp_278*tmp_436) + tmp_90*(-tmp_283*tmp_442 + tmp_284*tmp_441);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_447 + tmp_315*tmp_446) + tmp_51*(-tmp_294*tmp_427 + tmp_295*tmp_426) + tmp_64*(-tmp_299*tmp_432 + tmp_300*tmp_431) + tmp_77*(-tmp_304*tmp_437 + tmp_305*tmp_436) + tmp_90*(-tmp_309*tmp_442 + tmp_310*tmp_441);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_447 + tmp_335*tmp_446) + tmp_51*(-tmp_318*tmp_427 + tmp_319*tmp_426) + tmp_64*(-tmp_322*tmp_432 + tmp_323*tmp_431) + tmp_77*(-tmp_326*tmp_437 + tmp_327*tmp_436) + tmp_90*(-tmp_330*tmp_442 + tmp_331*tmp_441);
      real_t a_5_0 = tmp_103*(tmp_472*tmp_99 - tmp_473*tmp_98) + tmp_51*(-tmp_30*tmp_453 + tmp_34*tmp_452) + tmp_64*(tmp_457*tmp_60 - tmp_458*tmp_59) + tmp_77*(tmp_462*tmp_73 - tmp_463*tmp_72) + tmp_90*(tmp_467*tmp_86 - tmp_468*tmp_85);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_473 + tmp_121*tmp_471) + tmp_51*(-tmp_106*tmp_453 + tmp_109*tmp_451) + tmp_64*(-tmp_111*tmp_458 + tmp_112*tmp_456) + tmp_77*(-tmp_114*tmp_463 + tmp_115*tmp_461) + tmp_90*(-tmp_117*tmp_468 + tmp_118*tmp_466);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_473 + tmp_138*tmp_471) + tmp_51*(-tmp_124*tmp_453 + tmp_126*tmp_451) + tmp_64*(-tmp_128*tmp_458 + tmp_129*tmp_456) + tmp_77*(-tmp_131*tmp_463 + tmp_132*tmp_461) + tmp_90*(-tmp_134*tmp_468 + tmp_135*tmp_466);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_473 + tmp_155*tmp_471) + tmp_51*(-tmp_141*tmp_453 + tmp_143*tmp_451) + tmp_64*(-tmp_145*tmp_458 + tmp_146*tmp_456) + tmp_77*(-tmp_148*tmp_463 + tmp_149*tmp_461) + tmp_90*(-tmp_151*tmp_468 + tmp_152*tmp_466);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_473 + tmp_195*tmp_472) + tmp_51*(-tmp_160*tmp_453 + tmp_163*tmp_452) + tmp_64*(-tmp_168*tmp_458 + tmp_171*tmp_457) + tmp_77*(-tmp_176*tmp_463 + tmp_179*tmp_462) + tmp_90*(-tmp_184*tmp_468 + tmp_187*tmp_467);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_473 + tmp_230*tmp_472) + tmp_51*(-tmp_199*tmp_453 + tmp_202*tmp_452) + tmp_64*(-tmp_206*tmp_458 + tmp_209*tmp_457) + tmp_77*(-tmp_213*tmp_463 + tmp_216*tmp_462) + tmp_90*(-tmp_220*tmp_468 + tmp_223*tmp_467);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_473 + tmp_260*tmp_472) + tmp_51*(-tmp_233*tmp_453 + tmp_236*tmp_452) + tmp_64*(-tmp_239*tmp_458 + tmp_242*tmp_457) + tmp_77*(-tmp_245*tmp_463 + tmp_248*tmp_462) + tmp_90*(-tmp_251*tmp_468 + tmp_254*tmp_467);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_473 + tmp_290*tmp_472) + tmp_51*(-tmp_265*tmp_453 + tmp_266*tmp_452) + tmp_64*(-tmp_271*tmp_458 + tmp_272*tmp_457) + tmp_77*(-tmp_277*tmp_463 + tmp_278*tmp_462) + tmp_90*(-tmp_283*tmp_468 + tmp_284*tmp_467);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_473 + tmp_315*tmp_472) + tmp_51*(-tmp_294*tmp_453 + tmp_295*tmp_452) + tmp_64*(-tmp_299*tmp_458 + tmp_300*tmp_457) + tmp_77*(-tmp_304*tmp_463 + tmp_305*tmp_462) + tmp_90*(-tmp_309*tmp_468 + tmp_310*tmp_467);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_473 + tmp_335*tmp_472) + tmp_51*(-tmp_318*tmp_453 + tmp_319*tmp_452) + tmp_64*(-tmp_322*tmp_458 + tmp_323*tmp_457) + tmp_77*(-tmp_326*tmp_463 + tmp_327*tmp_462) + tmp_90*(-tmp_330*tmp_468 + tmp_331*tmp_467);
      real_t a_6_0 = tmp_103*(tmp_497*tmp_99 - tmp_498*tmp_98) + tmp_51*(-tmp_30*tmp_478 + tmp_34*tmp_477) + tmp_64*(tmp_482*tmp_60 - tmp_483*tmp_59) + tmp_77*(tmp_487*tmp_73 - tmp_488*tmp_72) + tmp_90*(tmp_492*tmp_86 - tmp_493*tmp_85);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_498 + tmp_121*tmp_496) + tmp_51*(-tmp_106*tmp_478 + tmp_109*tmp_476) + tmp_64*(-tmp_111*tmp_483 + tmp_112*tmp_481) + tmp_77*(-tmp_114*tmp_488 + tmp_115*tmp_486) + tmp_90*(-tmp_117*tmp_493 + tmp_118*tmp_491);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_498 + tmp_138*tmp_496) + tmp_51*(-tmp_124*tmp_478 + tmp_126*tmp_476) + tmp_64*(-tmp_128*tmp_483 + tmp_129*tmp_481) + tmp_77*(-tmp_131*tmp_488 + tmp_132*tmp_486) + tmp_90*(-tmp_134*tmp_493 + tmp_135*tmp_491);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_498 + tmp_155*tmp_496) + tmp_51*(-tmp_141*tmp_478 + tmp_143*tmp_476) + tmp_64*(-tmp_145*tmp_483 + tmp_146*tmp_481) + tmp_77*(-tmp_148*tmp_488 + tmp_149*tmp_486) + tmp_90*(-tmp_151*tmp_493 + tmp_152*tmp_491);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_498 + tmp_195*tmp_497) + tmp_51*(-tmp_160*tmp_478 + tmp_163*tmp_477) + tmp_64*(-tmp_168*tmp_483 + tmp_171*tmp_482) + tmp_77*(-tmp_176*tmp_488 + tmp_179*tmp_487) + tmp_90*(-tmp_184*tmp_493 + tmp_187*tmp_492);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_498 + tmp_230*tmp_497) + tmp_51*(-tmp_199*tmp_478 + tmp_202*tmp_477) + tmp_64*(-tmp_206*tmp_483 + tmp_209*tmp_482) + tmp_77*(-tmp_213*tmp_488 + tmp_216*tmp_487) + tmp_90*(-tmp_220*tmp_493 + tmp_223*tmp_492);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_498 + tmp_260*tmp_497) + tmp_51*(-tmp_233*tmp_478 + tmp_236*tmp_477) + tmp_64*(-tmp_239*tmp_483 + tmp_242*tmp_482) + tmp_77*(-tmp_245*tmp_488 + tmp_248*tmp_487) + tmp_90*(-tmp_251*tmp_493 + tmp_254*tmp_492);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_498 + tmp_290*tmp_497) + tmp_51*(-tmp_265*tmp_478 + tmp_266*tmp_477) + tmp_64*(-tmp_271*tmp_483 + tmp_272*tmp_482) + tmp_77*(-tmp_277*tmp_488 + tmp_278*tmp_487) + tmp_90*(-tmp_283*tmp_493 + tmp_284*tmp_492);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_498 + tmp_315*tmp_497) + tmp_51*(-tmp_294*tmp_478 + tmp_295*tmp_477) + tmp_64*(-tmp_299*tmp_483 + tmp_300*tmp_482) + tmp_77*(-tmp_304*tmp_488 + tmp_305*tmp_487) + tmp_90*(-tmp_309*tmp_493 + tmp_310*tmp_492);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_498 + tmp_335*tmp_497) + tmp_51*(-tmp_318*tmp_478 + tmp_319*tmp_477) + tmp_64*(-tmp_322*tmp_483 + tmp_323*tmp_482) + tmp_77*(-tmp_326*tmp_488 + tmp_327*tmp_487) + tmp_90*(-tmp_330*tmp_493 + tmp_331*tmp_492);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_2_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_12 - tmp_16;
      real_t tmp_30 = -tmp_18 + tmp_9;
      real_t tmp_31 = tmp_15 - tmp_17;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_0_affine_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_0_affine_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_0_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_0;
      real_t tmp_9 = p_affine_1_0 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_8;
      real_t tmp_12 = p_affine_3_1 + tmp_0;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_0 + tmp_8;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_12*tmp_9;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_14*tmp_4;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_13*tmp_5 + tmp_15*tmp_3 - tmp_16*tmp_3 - tmp_17*tmp_7 - tmp_18*tmp_5;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_7 + tmp_12*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_12*tmp_3 + tmp_4*tmp_7;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_10 - tmp_17;
      real_t tmp_32 = tmp_15 - tmp_16;
      real_t tmp_33 = tmp_13 - tmp_18;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = tmp_104*tmp_33;
      real_t tmp_337 = (2.0/3.0)*tmp_20;
      real_t tmp_338 = tmp_30*tmp_337;
      real_t tmp_339 = 1.0*tmp_106;
      real_t tmp_340 = tmp_33*tmp_337;
      real_t tmp_341 = tmp_110*tmp_340;
      real_t tmp_342 = 1.0*tmp_111;
      real_t tmp_343 = tmp_113*tmp_340;
      real_t tmp_344 = 1.0*tmp_114;
      real_t tmp_345 = tmp_116*tmp_340;
      real_t tmp_346 = 1.0*tmp_117;
      real_t tmp_347 = tmp_119*tmp_340;
      real_t tmp_348 = 1.0*tmp_120;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = 1.0*tmp_349;
      real_t tmp_355 = tmp_122*tmp_32;
      real_t tmp_356 = tmp_104*tmp_28;
      real_t tmp_357 = tmp_355*tmp_356;
      real_t tmp_358 = (2.0/3.0)*tmp_349;
      real_t tmp_359 = tmp_26*tmp_358;
      real_t tmp_360 = tmp_122*tmp_336;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_28*tmp_354;
      real_t tmp_363 = tmp_32*tmp_362;
      real_t tmp_364 = tmp_33*tmp_359;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_139*tmp_31;
      real_t tmp_369 = tmp_354*tmp_368;
      real_t tmp_370 = tmp_358*tmp_6;
      real_t tmp_371 = tmp_139*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_31*tmp_362;
      real_t tmp_374 = tmp_33*tmp_370;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_336*tmp_337;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = tmp_32*tmp_337;
      real_t tmp_381 = tmp_127*tmp_380;
      real_t tmp_382 = 1.0*tmp_128;
      real_t tmp_383 = tmp_130*tmp_380;
      real_t tmp_384 = 1.0*tmp_131;
      real_t tmp_385 = tmp_133*tmp_380;
      real_t tmp_386 = 1.0*tmp_134;
      real_t tmp_387 = tmp_136*tmp_380;
      real_t tmp_388 = 1.0*tmp_137;
      real_t tmp_389 = tmp_26*tmp_354;
      real_t tmp_390 = tmp_28*tmp_358;
      real_t tmp_391 = tmp_32*tmp_390;
      real_t tmp_392 = tmp_33*tmp_389;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_31*tmp_389;
      real_t tmp_397 = tmp_32*tmp_370;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_337*tmp_355;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = tmp_31*tmp_337;
      real_t tmp_404 = tmp_144*tmp_403;
      real_t tmp_405 = 1.0*tmp_145;
      real_t tmp_406 = tmp_147*tmp_403;
      real_t tmp_407 = 1.0*tmp_148;
      real_t tmp_408 = tmp_150*tmp_403;
      real_t tmp_409 = 1.0*tmp_151;
      real_t tmp_410 = tmp_153*tmp_403;
      real_t tmp_411 = 1.0*tmp_154;
      real_t tmp_412 = tmp_354*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_31*tmp_390;
      real_t tmp_415 = tmp_33*tmp_412;
      real_t tmp_416 = tmp_31*tmp_359;
      real_t tmp_417 = tmp_32*tmp_412;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_337*tmp_368;
      real_t tmp_421 = (2.0/3.0)*tmp_163;
      real_t tmp_422 = tmp_107*tmp_6;
      real_t tmp_423 = 0.25*tmp_422;
      real_t tmp_424 = tmp_107*tmp_26;
      real_t tmp_425 = 0.25*tmp_424;
      real_t tmp_426 = tmp_423 + tmp_425;
      real_t tmp_427 = 2*tmp_426;
      real_t tmp_428 = (2.0/3.0)*tmp_171;
      real_t tmp_429 = 0.16666666666666666*tmp_422;
      real_t tmp_430 = 0.5*tmp_424;
      real_t tmp_431 = tmp_429 + tmp_430;
      real_t tmp_432 = 2*tmp_431;
      real_t tmp_433 = (2.0/3.0)*tmp_179;
      real_t tmp_434 = 0.5*tmp_422;
      real_t tmp_435 = 0.16666666666666666*tmp_424;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_187;
      real_t tmp_439 = 0.16666666666666666*tmp_422;
      real_t tmp_440 = 0.16666666666666666*tmp_424;
      real_t tmp_441 = tmp_439 + tmp_440;
      real_t tmp_442 = 2*tmp_441;
      real_t tmp_443 = (2.0/3.0)*tmp_195;
      real_t tmp_444 = 0.16666666666666666*tmp_422;
      real_t tmp_445 = 0.16666666666666666*tmp_424;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = 2*tmp_446;
      real_t tmp_448 = (2.0/3.0)*tmp_202;
      real_t tmp_449 = 0.25*tmp_422;
      real_t tmp_450 = tmp_107*tmp_28;
      real_t tmp_451 = 0.25*tmp_450;
      real_t tmp_452 = tmp_449 + tmp_451;
      real_t tmp_453 = 2*tmp_452;
      real_t tmp_454 = (2.0/3.0)*tmp_209;
      real_t tmp_455 = 0.16666666666666666*tmp_422;
      real_t tmp_456 = 0.5*tmp_450;
      real_t tmp_457 = tmp_455 + tmp_456;
      real_t tmp_458 = 2*tmp_457;
      real_t tmp_459 = (2.0/3.0)*tmp_216;
      real_t tmp_460 = 0.16666666666666666*tmp_422;
      real_t tmp_461 = 0.16666666666666666*tmp_450;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = 2*tmp_462;
      real_t tmp_464 = (2.0/3.0)*tmp_223;
      real_t tmp_465 = 0.5*tmp_422;
      real_t tmp_466 = 0.16666666666666666*tmp_450;
      real_t tmp_467 = tmp_465 + tmp_466;
      real_t tmp_468 = 2*tmp_467;
      real_t tmp_469 = (2.0/3.0)*tmp_230;
      real_t tmp_470 = 0.16666666666666666*tmp_422;
      real_t tmp_471 = 0.16666666666666666*tmp_450;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = 2*tmp_472;
      real_t tmp_474 = (2.0/3.0)*tmp_236;
      real_t tmp_475 = 0.25*tmp_424;
      real_t tmp_476 = 0.25*tmp_450;
      real_t tmp_477 = tmp_475 + tmp_476;
      real_t tmp_478 = 2*tmp_477;
      real_t tmp_479 = (2.0/3.0)*tmp_242;
      real_t tmp_480 = 0.16666666666666666*tmp_424;
      real_t tmp_481 = 0.16666666666666666*tmp_450;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = 2*tmp_482;
      real_t tmp_484 = (2.0/3.0)*tmp_248;
      real_t tmp_485 = 0.16666666666666666*tmp_424;
      real_t tmp_486 = 0.5*tmp_450;
      real_t tmp_487 = tmp_485 + tmp_486;
      real_t tmp_488 = 2*tmp_487;
      real_t tmp_489 = (2.0/3.0)*tmp_254;
      real_t tmp_490 = 0.5*tmp_424;
      real_t tmp_491 = 0.16666666666666666*tmp_450;
      real_t tmp_492 = tmp_490 + tmp_491;
      real_t tmp_493 = 2*tmp_492;
      real_t tmp_494 = (2.0/3.0)*tmp_260;
      real_t tmp_495 = 0.16666666666666666*tmp_424;
      real_t tmp_496 = 0.16666666666666666*tmp_450;
      real_t tmp_497 = tmp_495 + tmp_496;
      real_t tmp_498 = 2*tmp_497;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_425 - tmp_451;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_430 - tmp_456;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_435 - tmp_461;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_440 - tmp_466;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_445 - tmp_471;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_423 - tmp_476;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_429 - tmp_481;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_434 - tmp_486;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_439 - tmp_491;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_444 - tmp_496;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_449 - tmp_475;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_455 - tmp_480;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_460 - tmp_485;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_465 - tmp_490;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_470 - tmp_495;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(-tmp_347*tmp_98 + tmp_348*tmp_99) + tmp_51*(-tmp_336*tmp_338 + tmp_339*tmp_34) + tmp_64*(-tmp_341*tmp_59 + tmp_342*tmp_60) + tmp_77*(-tmp_343*tmp_72 + tmp_344*tmp_73) + tmp_90*(-tmp_345*tmp_85 + tmp_346*tmp_86);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(tmp_363*tmp_367 - tmp_364*tmp_367) + tmp_51*(tmp_354*tmp_357 - tmp_359*tmp_360) + tmp_64*(tmp_361*tmp_363 - tmp_361*tmp_364) + tmp_77*(tmp_363*tmp_365 - tmp_364*tmp_365) + tmp_90*(tmp_363*tmp_366 - tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(tmp_373*tmp_377 - tmp_374*tmp_377) + tmp_51*(-tmp_336*tmp_371 + tmp_356*tmp_369) + tmp_64*(tmp_372*tmp_373 - tmp_372*tmp_374) + tmp_77*(tmp_373*tmp_375 - tmp_374*tmp_375) + tmp_90*(tmp_373*tmp_376 - tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_347 + tmp_195*tmp_348) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_339) + tmp_64*(-tmp_168*tmp_341 + tmp_171*tmp_342) + tmp_77*(-tmp_176*tmp_343 + tmp_179*tmp_344) + tmp_90*(-tmp_184*tmp_345 + tmp_187*tmp_346);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_347 + tmp_230*tmp_348) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_339) + tmp_64*(-tmp_206*tmp_341 + tmp_209*tmp_342) + tmp_77*(-tmp_213*tmp_343 + tmp_216*tmp_344) + tmp_90*(-tmp_220*tmp_345 + tmp_223*tmp_346);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_347 + tmp_260*tmp_348) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_339) + tmp_64*(-tmp_239*tmp_341 + tmp_242*tmp_342) + tmp_77*(-tmp_245*tmp_343 + tmp_248*tmp_344) + tmp_90*(-tmp_251*tmp_345 + tmp_254*tmp_346);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_347 + tmp_290*tmp_348) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_339) + tmp_64*(-tmp_271*tmp_341 + tmp_272*tmp_342) + tmp_77*(-tmp_277*tmp_343 + tmp_278*tmp_344) + tmp_90*(-tmp_283*tmp_345 + tmp_284*tmp_346);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_347 + tmp_315*tmp_348) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_339) + tmp_64*(-tmp_299*tmp_341 + tmp_300*tmp_342) + tmp_77*(-tmp_304*tmp_343 + tmp_305*tmp_344) + tmp_90*(-tmp_309*tmp_345 + tmp_310*tmp_346);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_347 + tmp_335*tmp_348) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_339) + tmp_64*(-tmp_322*tmp_341 + tmp_323*tmp_342) + tmp_77*(-tmp_326*tmp_343 + tmp_327*tmp_344) + tmp_90*(-tmp_330*tmp_345 + tmp_331*tmp_346);
      real_t a_2_0 = tmp_103*(-tmp_387*tmp_98 + tmp_388*tmp_99) + tmp_51*(-tmp_338*tmp_355 + tmp_34*tmp_379) + tmp_64*(-tmp_381*tmp_59 + tmp_382*tmp_60) + tmp_77*(-tmp_383*tmp_72 + tmp_384*tmp_73) + tmp_90*(-tmp_385*tmp_85 + tmp_386*tmp_86);
      real_t a_2_1 = tmp_103*(-tmp_367*tmp_391 + tmp_367*tmp_392) + tmp_51*(-tmp_357*tmp_358 + tmp_360*tmp_389) + tmp_64*(-tmp_361*tmp_391 + tmp_361*tmp_392) + tmp_77*(-tmp_365*tmp_391 + tmp_365*tmp_392) + tmp_90*(-tmp_366*tmp_391 + tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(tmp_396*tmp_400 - tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_369 - tmp_355*tmp_371) + tmp_64*(tmp_395*tmp_396 - tmp_395*tmp_397) + tmp_77*(tmp_396*tmp_398 - tmp_397*tmp_398) + tmp_90*(tmp_396*tmp_399 - tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_387 + tmp_195*tmp_388) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_381 + tmp_171*tmp_382) + tmp_77*(-tmp_176*tmp_383 + tmp_179*tmp_384) + tmp_90*(-tmp_184*tmp_385 + tmp_187*tmp_386);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_387 + tmp_230*tmp_388) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_381 + tmp_209*tmp_382) + tmp_77*(-tmp_213*tmp_383 + tmp_216*tmp_384) + tmp_90*(-tmp_220*tmp_385 + tmp_223*tmp_386);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_387 + tmp_260*tmp_388) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_381 + tmp_242*tmp_382) + tmp_77*(-tmp_245*tmp_383 + tmp_248*tmp_384) + tmp_90*(-tmp_251*tmp_385 + tmp_254*tmp_386);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_387 + tmp_290*tmp_388) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_381 + tmp_272*tmp_382) + tmp_77*(-tmp_277*tmp_383 + tmp_278*tmp_384) + tmp_90*(-tmp_283*tmp_385 + tmp_284*tmp_386);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_387 + tmp_315*tmp_388) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_381 + tmp_300*tmp_382) + tmp_77*(-tmp_304*tmp_383 + tmp_305*tmp_384) + tmp_90*(-tmp_309*tmp_385 + tmp_310*tmp_386);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_387 + tmp_335*tmp_388) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_381 + tmp_323*tmp_382) + tmp_77*(-tmp_326*tmp_383 + tmp_327*tmp_384) + tmp_90*(-tmp_330*tmp_385 + tmp_331*tmp_386);
      real_t a_3_0 = tmp_103*(-tmp_410*tmp_98 + tmp_411*tmp_99) + tmp_51*(-tmp_338*tmp_368 + tmp_34*tmp_402) + tmp_64*(-tmp_404*tmp_59 + tmp_405*tmp_60) + tmp_77*(-tmp_406*tmp_72 + tmp_407*tmp_73) + tmp_90*(-tmp_408*tmp_85 + tmp_409*tmp_86);
      real_t a_3_1 = tmp_103*(-tmp_377*tmp_414 + tmp_377*tmp_415) + tmp_51*(tmp_336*tmp_413 - tmp_356*tmp_358*tmp_368) + tmp_64*(-tmp_372*tmp_414 + tmp_372*tmp_415) + tmp_77*(-tmp_375*tmp_414 + tmp_375*tmp_415) + tmp_90*(-tmp_376*tmp_414 + tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(-tmp_400*tmp_416 + tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_359*tmp_368 + tmp_355*tmp_413) + tmp_64*(-tmp_395*tmp_416 + tmp_395*tmp_417) + tmp_77*(-tmp_398*tmp_416 + tmp_398*tmp_417) + tmp_90*(-tmp_399*tmp_416 + tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_410 + tmp_195*tmp_411) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_404 + tmp_171*tmp_405) + tmp_77*(-tmp_176*tmp_406 + tmp_179*tmp_407) + tmp_90*(-tmp_184*tmp_408 + tmp_187*tmp_409);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_410 + tmp_230*tmp_411) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_404 + tmp_209*tmp_405) + tmp_77*(-tmp_213*tmp_406 + tmp_216*tmp_407) + tmp_90*(-tmp_220*tmp_408 + tmp_223*tmp_409);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_410 + tmp_260*tmp_411) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_404 + tmp_242*tmp_405) + tmp_77*(-tmp_245*tmp_406 + tmp_248*tmp_407) + tmp_90*(-tmp_251*tmp_408 + tmp_254*tmp_409);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_410 + tmp_290*tmp_411) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_404 + tmp_272*tmp_405) + tmp_77*(-tmp_277*tmp_406 + tmp_278*tmp_407) + tmp_90*(-tmp_283*tmp_408 + tmp_284*tmp_409);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_410 + tmp_315*tmp_411) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_404 + tmp_300*tmp_405) + tmp_77*(-tmp_304*tmp_406 + tmp_305*tmp_407) + tmp_90*(-tmp_309*tmp_408 + tmp_310*tmp_409);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_410 + tmp_335*tmp_411) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_404 + tmp_323*tmp_405) + tmp_77*(-tmp_326*tmp_406 + tmp_327*tmp_407) + tmp_90*(-tmp_330*tmp_408 + tmp_331*tmp_409);
      real_t a_4_0 = tmp_103*(-tmp_443*tmp_98 + tmp_447*tmp_99) + tmp_51*(-tmp_30*tmp_421 + tmp_34*tmp_427) + tmp_64*(-tmp_428*tmp_59 + tmp_432*tmp_60) + tmp_77*(-tmp_433*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_442*tmp_86);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_443 + tmp_121*tmp_446) + tmp_51*(-tmp_106*tmp_421 + tmp_109*tmp_426) + tmp_64*(-tmp_111*tmp_428 + tmp_112*tmp_431) + tmp_77*(-tmp_114*tmp_433 + tmp_115*tmp_436) + tmp_90*(-tmp_117*tmp_438 + tmp_118*tmp_441);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_443 + tmp_138*tmp_446) + tmp_51*(-tmp_124*tmp_421 + tmp_126*tmp_426) + tmp_64*(-tmp_128*tmp_428 + tmp_129*tmp_431) + tmp_77*(-tmp_131*tmp_433 + tmp_132*tmp_436) + tmp_90*(-tmp_134*tmp_438 + tmp_135*tmp_441);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_443 + tmp_155*tmp_446) + tmp_51*(-tmp_141*tmp_421 + tmp_143*tmp_426) + tmp_64*(-tmp_145*tmp_428 + tmp_146*tmp_431) + tmp_77*(-tmp_148*tmp_433 + tmp_149*tmp_436) + tmp_90*(-tmp_151*tmp_438 + tmp_152*tmp_441);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_443 + tmp_195*tmp_447) + tmp_51*(-tmp_160*tmp_421 + tmp_163*tmp_427) + tmp_64*(-tmp_168*tmp_428 + tmp_171*tmp_432) + tmp_77*(-tmp_176*tmp_433 + tmp_179*tmp_437) + tmp_90*(-tmp_184*tmp_438 + tmp_187*tmp_442);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_443 + tmp_230*tmp_447) + tmp_51*(-tmp_199*tmp_421 + tmp_202*tmp_427) + tmp_64*(-tmp_206*tmp_428 + tmp_209*tmp_432) + tmp_77*(-tmp_213*tmp_433 + tmp_216*tmp_437) + tmp_90*(-tmp_220*tmp_438 + tmp_223*tmp_442);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_443 + tmp_260*tmp_447) + tmp_51*(-tmp_233*tmp_421 + tmp_236*tmp_427) + tmp_64*(-tmp_239*tmp_428 + tmp_242*tmp_432) + tmp_77*(-tmp_245*tmp_433 + tmp_248*tmp_437) + tmp_90*(-tmp_251*tmp_438 + tmp_254*tmp_442);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_443 + tmp_290*tmp_447) + tmp_51*(-tmp_265*tmp_421 + tmp_266*tmp_427) + tmp_64*(-tmp_271*tmp_428 + tmp_272*tmp_432) + tmp_77*(-tmp_277*tmp_433 + tmp_278*tmp_437) + tmp_90*(-tmp_283*tmp_438 + tmp_284*tmp_442);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_443 + tmp_315*tmp_447) + tmp_51*(-tmp_294*tmp_421 + tmp_295*tmp_427) + tmp_64*(-tmp_299*tmp_428 + tmp_300*tmp_432) + tmp_77*(-tmp_304*tmp_433 + tmp_305*tmp_437) + tmp_90*(-tmp_309*tmp_438 + tmp_310*tmp_442);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_443 + tmp_335*tmp_447) + tmp_51*(-tmp_318*tmp_421 + tmp_319*tmp_427) + tmp_64*(-tmp_322*tmp_428 + tmp_323*tmp_432) + tmp_77*(-tmp_326*tmp_433 + tmp_327*tmp_437) + tmp_90*(-tmp_330*tmp_438 + tmp_331*tmp_442);
      real_t a_5_0 = tmp_103*(-tmp_469*tmp_98 + tmp_473*tmp_99) + tmp_51*(-tmp_30*tmp_448 + tmp_34*tmp_453) + tmp_64*(-tmp_454*tmp_59 + tmp_458*tmp_60) + tmp_77*(-tmp_459*tmp_72 + tmp_463*tmp_73) + tmp_90*(-tmp_464*tmp_85 + tmp_468*tmp_86);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_469 + tmp_121*tmp_472) + tmp_51*(-tmp_106*tmp_448 + tmp_109*tmp_452) + tmp_64*(-tmp_111*tmp_454 + tmp_112*tmp_457) + tmp_77*(-tmp_114*tmp_459 + tmp_115*tmp_462) + tmp_90*(-tmp_117*tmp_464 + tmp_118*tmp_467);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_469 + tmp_138*tmp_472) + tmp_51*(-tmp_124*tmp_448 + tmp_126*tmp_452) + tmp_64*(-tmp_128*tmp_454 + tmp_129*tmp_457) + tmp_77*(-tmp_131*tmp_459 + tmp_132*tmp_462) + tmp_90*(-tmp_134*tmp_464 + tmp_135*tmp_467);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_469 + tmp_155*tmp_472) + tmp_51*(-tmp_141*tmp_448 + tmp_143*tmp_452) + tmp_64*(-tmp_145*tmp_454 + tmp_146*tmp_457) + tmp_77*(-tmp_148*tmp_459 + tmp_149*tmp_462) + tmp_90*(-tmp_151*tmp_464 + tmp_152*tmp_467);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_469 + tmp_195*tmp_473) + tmp_51*(-tmp_160*tmp_448 + tmp_163*tmp_453) + tmp_64*(-tmp_168*tmp_454 + tmp_171*tmp_458) + tmp_77*(-tmp_176*tmp_459 + tmp_179*tmp_463) + tmp_90*(-tmp_184*tmp_464 + tmp_187*tmp_468);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_469 + tmp_230*tmp_473) + tmp_51*(-tmp_199*tmp_448 + tmp_202*tmp_453) + tmp_64*(-tmp_206*tmp_454 + tmp_209*tmp_458) + tmp_77*(-tmp_213*tmp_459 + tmp_216*tmp_463) + tmp_90*(-tmp_220*tmp_464 + tmp_223*tmp_468);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_469 + tmp_260*tmp_473) + tmp_51*(-tmp_233*tmp_448 + tmp_236*tmp_453) + tmp_64*(-tmp_239*tmp_454 + tmp_242*tmp_458) + tmp_77*(-tmp_245*tmp_459 + tmp_248*tmp_463) + tmp_90*(-tmp_251*tmp_464 + tmp_254*tmp_468);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_469 + tmp_290*tmp_473) + tmp_51*(-tmp_265*tmp_448 + tmp_266*tmp_453) + tmp_64*(-tmp_271*tmp_454 + tmp_272*tmp_458) + tmp_77*(-tmp_277*tmp_459 + tmp_278*tmp_463) + tmp_90*(-tmp_283*tmp_464 + tmp_284*tmp_468);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_469 + tmp_315*tmp_473) + tmp_51*(-tmp_294*tmp_448 + tmp_295*tmp_453) + tmp_64*(-tmp_299*tmp_454 + tmp_300*tmp_458) + tmp_77*(-tmp_304*tmp_459 + tmp_305*tmp_463) + tmp_90*(-tmp_309*tmp_464 + tmp_310*tmp_468);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_469 + tmp_335*tmp_473) + tmp_51*(-tmp_318*tmp_448 + tmp_319*tmp_453) + tmp_64*(-tmp_322*tmp_454 + tmp_323*tmp_458) + tmp_77*(-tmp_326*tmp_459 + tmp_327*tmp_463) + tmp_90*(-tmp_330*tmp_464 + tmp_331*tmp_468);
      real_t a_6_0 = tmp_103*(-tmp_494*tmp_98 + tmp_498*tmp_99) + tmp_51*(-tmp_30*tmp_474 + tmp_34*tmp_478) + tmp_64*(-tmp_479*tmp_59 + tmp_483*tmp_60) + tmp_77*(-tmp_484*tmp_72 + tmp_488*tmp_73) + tmp_90*(-tmp_489*tmp_85 + tmp_493*tmp_86);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_494 + tmp_121*tmp_497) + tmp_51*(-tmp_106*tmp_474 + tmp_109*tmp_477) + tmp_64*(-tmp_111*tmp_479 + tmp_112*tmp_482) + tmp_77*(-tmp_114*tmp_484 + tmp_115*tmp_487) + tmp_90*(-tmp_117*tmp_489 + tmp_118*tmp_492);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_494 + tmp_138*tmp_497) + tmp_51*(-tmp_124*tmp_474 + tmp_126*tmp_477) + tmp_64*(-tmp_128*tmp_479 + tmp_129*tmp_482) + tmp_77*(-tmp_131*tmp_484 + tmp_132*tmp_487) + tmp_90*(-tmp_134*tmp_489 + tmp_135*tmp_492);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_494 + tmp_155*tmp_497) + tmp_51*(-tmp_141*tmp_474 + tmp_143*tmp_477) + tmp_64*(-tmp_145*tmp_479 + tmp_146*tmp_482) + tmp_77*(-tmp_148*tmp_484 + tmp_149*tmp_487) + tmp_90*(-tmp_151*tmp_489 + tmp_152*tmp_492);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_494 + tmp_195*tmp_498) + tmp_51*(-tmp_160*tmp_474 + tmp_163*tmp_478) + tmp_64*(-tmp_168*tmp_479 + tmp_171*tmp_483) + tmp_77*(-tmp_176*tmp_484 + tmp_179*tmp_488) + tmp_90*(-tmp_184*tmp_489 + tmp_187*tmp_493);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_494 + tmp_230*tmp_498) + tmp_51*(-tmp_199*tmp_474 + tmp_202*tmp_478) + tmp_64*(-tmp_206*tmp_479 + tmp_209*tmp_483) + tmp_77*(-tmp_213*tmp_484 + tmp_216*tmp_488) + tmp_90*(-tmp_220*tmp_489 + tmp_223*tmp_493);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_494 + tmp_260*tmp_498) + tmp_51*(-tmp_233*tmp_474 + tmp_236*tmp_478) + tmp_64*(-tmp_239*tmp_479 + tmp_242*tmp_483) + tmp_77*(-tmp_245*tmp_484 + tmp_248*tmp_488) + tmp_90*(-tmp_251*tmp_489 + tmp_254*tmp_493);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_494 + tmp_290*tmp_498) + tmp_51*(-tmp_265*tmp_474 + tmp_266*tmp_478) + tmp_64*(-tmp_271*tmp_479 + tmp_272*tmp_483) + tmp_77*(-tmp_277*tmp_484 + tmp_278*tmp_488) + tmp_90*(-tmp_283*tmp_489 + tmp_284*tmp_493);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_494 + tmp_315*tmp_498) + tmp_51*(-tmp_294*tmp_474 + tmp_295*tmp_478) + tmp_64*(-tmp_299*tmp_479 + tmp_300*tmp_483) + tmp_77*(-tmp_304*tmp_484 + tmp_305*tmp_488) + tmp_90*(-tmp_309*tmp_489 + tmp_310*tmp_493);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_494 + tmp_335*tmp_498) + tmp_51*(-tmp_318*tmp_474 + tmp_319*tmp_478) + tmp_64*(-tmp_322*tmp_479 + tmp_323*tmp_483) + tmp_77*(-tmp_326*tmp_484 + tmp_327*tmp_488) + tmp_90*(-tmp_330*tmp_489 + tmp_331*tmp_493);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_0_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_0;
      real_t tmp_9 = p_affine_1_0 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_8;
      real_t tmp_12 = p_affine_3_1 + tmp_0;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_0 + tmp_8;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_12*tmp_9;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_14*tmp_4;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_13*tmp_5 + tmp_15*tmp_3 - tmp_16*tmp_3 - tmp_17*tmp_7 - tmp_18*tmp_5);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_7 + tmp_12*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_12*tmp_3 + tmp_4*tmp_7;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_10 - tmp_17;
      real_t tmp_30 = tmp_15 - tmp_16;
      real_t tmp_31 = tmp_13 - tmp_18;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_1_affine_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_1_affine_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_1_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_10 - tmp_17;
      real_t tmp_32 = tmp_15 - tmp_16;
      real_t tmp_33 = tmp_12 - tmp_18;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = -0.1333333333333333*tmp_50;
      real_t tmp_52 = 0.66666666666666663;
      real_t tmp_53 = 0.66666666666666663;
      real_t tmp_54 = 2.0;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.074999999999999983*tmp_50;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 2.0;
      real_t tmp_67 = 0.66666666666666663;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.074999999999999983*tmp_50;
      real_t tmp_78 = 2.0;
      real_t tmp_79 = 0.66666666666666663;
      real_t tmp_80 = 0.66666666666666663;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.074999999999999983*tmp_50;
      real_t tmp_91 = 0.66666666666666663;
      real_t tmp_92 = 0.66666666666666663;
      real_t tmp_93 = 0.66666666666666663;
      real_t tmp_94 = tmp_20*(tmp_91 + tmp_92 + tmp_93 - 3.0);
      real_t tmp_95 = tmp_6*tmp_94;
      real_t tmp_96 = tmp_26*tmp_94;
      real_t tmp_97 = tmp_28*tmp_94;
      real_t tmp_98 = tmp_95 + tmp_96 + tmp_97;
      real_t tmp_99 = tmp_31*tmp_94 + tmp_32*tmp_94 + tmp_33*tmp_94;
      real_t tmp_100 = (2.0/3.0)*tmp_99;
      real_t tmp_101 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_102 = 2*tmp_101;
      real_t tmp_103 = 0.074999999999999983*tmp_50;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = tmp_20*tmp_28;
      real_t tmp_106 = tmp_104*tmp_105;
      real_t tmp_107 = 2.0*tmp_20;
      real_t tmp_108 = tmp_107*tmp_33;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_52 - 1.0;
      real_t tmp_111 = tmp_105*tmp_110;
      real_t tmp_112 = tmp_108*tmp_110;
      real_t tmp_113 = tmp_65 - 1.0;
      real_t tmp_114 = tmp_105*tmp_113;
      real_t tmp_115 = tmp_108*tmp_113;
      real_t tmp_116 = tmp_78 - 1.0;
      real_t tmp_117 = tmp_105*tmp_116;
      real_t tmp_118 = tmp_108*tmp_116;
      real_t tmp_119 = tmp_91 - 1.0;
      real_t tmp_120 = tmp_105*tmp_119;
      real_t tmp_121 = tmp_108*tmp_119;
      real_t tmp_122 = tmp_22 - 1.0;
      real_t tmp_123 = tmp_20*tmp_26;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = tmp_107*tmp_32;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = tmp_53 - 1.0;
      real_t tmp_128 = tmp_123*tmp_127;
      real_t tmp_129 = tmp_125*tmp_127;
      real_t tmp_130 = tmp_66 - 1.0;
      real_t tmp_131 = tmp_123*tmp_130;
      real_t tmp_132 = tmp_125*tmp_130;
      real_t tmp_133 = tmp_79 - 1.0;
      real_t tmp_134 = tmp_123*tmp_133;
      real_t tmp_135 = tmp_125*tmp_133;
      real_t tmp_136 = tmp_92 - 1.0;
      real_t tmp_137 = tmp_123*tmp_136;
      real_t tmp_138 = tmp_125*tmp_136;
      real_t tmp_139 = tmp_23 - 1.0;
      real_t tmp_140 = tmp_20*tmp_6;
      real_t tmp_141 = tmp_139*tmp_140;
      real_t tmp_142 = tmp_107*tmp_31;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_54 - 1.0;
      real_t tmp_145 = tmp_140*tmp_144;
      real_t tmp_146 = tmp_142*tmp_144;
      real_t tmp_147 = tmp_67 - 1.0;
      real_t tmp_148 = tmp_140*tmp_147;
      real_t tmp_149 = tmp_142*tmp_147;
      real_t tmp_150 = tmp_80 - 1.0;
      real_t tmp_151 = tmp_140*tmp_150;
      real_t tmp_152 = tmp_142*tmp_150;
      real_t tmp_153 = tmp_93 - 1.0;
      real_t tmp_154 = tmp_140*tmp_153;
      real_t tmp_155 = tmp_142*tmp_153;
      real_t tmp_156 = tmp_20*tmp_22;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_20*tmp_23;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_157 + tmp_159;
      real_t tmp_161 = tmp_156*tmp_31;
      real_t tmp_162 = tmp_158*tmp_32;
      real_t tmp_163 = tmp_161 + tmp_162;
      real_t tmp_164 = tmp_20*tmp_53;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_20*tmp_54;
      real_t tmp_167 = tmp_166*tmp_26;
      real_t tmp_168 = tmp_165 + tmp_167;
      real_t tmp_169 = tmp_164*tmp_31;
      real_t tmp_170 = tmp_166*tmp_32;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = tmp_20*tmp_66;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_67;
      real_t tmp_175 = tmp_174*tmp_26;
      real_t tmp_176 = tmp_173 + tmp_175;
      real_t tmp_177 = tmp_172*tmp_31;
      real_t tmp_178 = tmp_174*tmp_32;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_79;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_20*tmp_80;
      real_t tmp_183 = tmp_182*tmp_26;
      real_t tmp_184 = tmp_181 + tmp_183;
      real_t tmp_185 = tmp_180*tmp_31;
      real_t tmp_186 = tmp_182*tmp_32;
      real_t tmp_187 = tmp_185 + tmp_186;
      real_t tmp_188 = tmp_20*tmp_92;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_20*tmp_93;
      real_t tmp_191 = tmp_190*tmp_26;
      real_t tmp_192 = tmp_189 + tmp_191;
      real_t tmp_193 = tmp_188*tmp_31;
      real_t tmp_194 = tmp_190*tmp_32;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = tmp_20*tmp_21;
      real_t tmp_197 = tmp_196*tmp_6;
      real_t tmp_198 = tmp_158*tmp_28;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_196*tmp_31;
      real_t tmp_201 = tmp_158*tmp_33;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_20*tmp_52;
      real_t tmp_204 = tmp_203*tmp_6;
      real_t tmp_205 = tmp_166*tmp_28;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_203*tmp_31;
      real_t tmp_208 = tmp_166*tmp_33;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_20*tmp_65;
      real_t tmp_211 = tmp_210*tmp_6;
      real_t tmp_212 = tmp_174*tmp_28;
      real_t tmp_213 = tmp_211 + tmp_212;
      real_t tmp_214 = tmp_210*tmp_31;
      real_t tmp_215 = tmp_174*tmp_33;
      real_t tmp_216 = tmp_214 + tmp_215;
      real_t tmp_217 = tmp_20*tmp_78;
      real_t tmp_218 = tmp_217*tmp_6;
      real_t tmp_219 = tmp_182*tmp_28;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = tmp_217*tmp_31;
      real_t tmp_222 = tmp_182*tmp_33;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_91;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_190*tmp_28;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_224*tmp_31;
      real_t tmp_229 = tmp_190*tmp_33;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = tmp_196*tmp_26;
      real_t tmp_232 = tmp_156*tmp_28;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_196*tmp_32;
      real_t tmp_235 = tmp_156*tmp_33;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = tmp_203*tmp_26;
      real_t tmp_238 = tmp_164*tmp_28;
      real_t tmp_239 = tmp_237 + tmp_238;
      real_t tmp_240 = tmp_203*tmp_32;
      real_t tmp_241 = tmp_164*tmp_33;
      real_t tmp_242 = tmp_240 + tmp_241;
      real_t tmp_243 = tmp_210*tmp_26;
      real_t tmp_244 = tmp_172*tmp_28;
      real_t tmp_245 = tmp_243 + tmp_244;
      real_t tmp_246 = tmp_210*tmp_32;
      real_t tmp_247 = tmp_172*tmp_33;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_217*tmp_26;
      real_t tmp_250 = tmp_180*tmp_28;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_217*tmp_32;
      real_t tmp_253 = tmp_180*tmp_33;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = tmp_224*tmp_26;
      real_t tmp_256 = tmp_188*tmp_28;
      real_t tmp_257 = tmp_255 + tmp_256;
      real_t tmp_258 = tmp_224*tmp_32;
      real_t tmp_259 = tmp_188*tmp_33;
      real_t tmp_260 = tmp_258 + tmp_259;
      real_t tmp_261 = -tmp_22;
      real_t tmp_262 = 4.0 - tmp_21;
      real_t tmp_263 = tmp_20*(tmp_261 + tmp_262 - 2.0);
      real_t tmp_264 = tmp_263*tmp_6;
      real_t tmp_265 = -tmp_159 - tmp_198 + tmp_264;
      real_t tmp_266 = -tmp_162 - tmp_201 + tmp_263*tmp_31;
      real_t tmp_267 = -tmp_53;
      real_t tmp_268 = 4.0 - tmp_52;
      real_t tmp_269 = tmp_20*(tmp_267 + tmp_268 - 4.0);
      real_t tmp_270 = tmp_269*tmp_6;
      real_t tmp_271 = -tmp_167 - tmp_205 + tmp_270;
      real_t tmp_272 = -tmp_170 - tmp_208 + tmp_269*tmp_31;
      real_t tmp_273 = -tmp_66;
      real_t tmp_274 = 4.0 - tmp_65;
      real_t tmp_275 = tmp_20*(tmp_273 + tmp_274 - 1.3333333333333333);
      real_t tmp_276 = tmp_275*tmp_6;
      real_t tmp_277 = -tmp_175 - tmp_212 + tmp_276;
      real_t tmp_278 = -tmp_178 - tmp_215 + tmp_275*tmp_31;
      real_t tmp_279 = -tmp_79;
      real_t tmp_280 = 4.0 - tmp_78;
      real_t tmp_281 = tmp_20*(tmp_279 + tmp_280 - 1.3333333333333333);
      real_t tmp_282 = tmp_281*tmp_6;
      real_t tmp_283 = -tmp_183 - tmp_219 + tmp_282;
      real_t tmp_284 = -tmp_186 - tmp_222 + tmp_281*tmp_31;
      real_t tmp_285 = -tmp_92;
      real_t tmp_286 = 4.0 - tmp_91;
      real_t tmp_287 = tmp_20*(tmp_285 + tmp_286 - 1.3333333333333333);
      real_t tmp_288 = tmp_287*tmp_6;
      real_t tmp_289 = -tmp_191 - tmp_226 + tmp_288;
      real_t tmp_290 = -tmp_194 - tmp_229 + tmp_287*tmp_31;
      real_t tmp_291 = -tmp_23;
      real_t tmp_292 = tmp_20*(tmp_262 + tmp_291 - 2.0);
      real_t tmp_293 = tmp_26*tmp_292;
      real_t tmp_294 = -tmp_157 - tmp_232 + tmp_293;
      real_t tmp_295 = -tmp_161 - tmp_235 + tmp_292*tmp_32;
      real_t tmp_296 = -tmp_54;
      real_t tmp_297 = tmp_20*(tmp_268 + tmp_296 - 1.3333333333333333);
      real_t tmp_298 = tmp_26*tmp_297;
      real_t tmp_299 = -tmp_165 - tmp_238 + tmp_298;
      real_t tmp_300 = -tmp_169 - tmp_241 + tmp_297*tmp_32;
      real_t tmp_301 = -tmp_67;
      real_t tmp_302 = tmp_20*(tmp_274 + tmp_301 - 4.0);
      real_t tmp_303 = tmp_26*tmp_302;
      real_t tmp_304 = -tmp_173 - tmp_244 + tmp_303;
      real_t tmp_305 = -tmp_177 - tmp_247 + tmp_302*tmp_32;
      real_t tmp_306 = -tmp_80;
      real_t tmp_307 = tmp_20*(tmp_280 + tmp_306 - 1.3333333333333333);
      real_t tmp_308 = tmp_26*tmp_307;
      real_t tmp_309 = -tmp_181 - tmp_250 + tmp_308;
      real_t tmp_310 = -tmp_185 - tmp_253 + tmp_307*tmp_32;
      real_t tmp_311 = -tmp_93;
      real_t tmp_312 = tmp_20*(tmp_286 + tmp_311 - 1.3333333333333333);
      real_t tmp_313 = tmp_26*tmp_312;
      real_t tmp_314 = -tmp_189 - tmp_256 + tmp_313;
      real_t tmp_315 = -tmp_193 - tmp_259 + tmp_312*tmp_32;
      real_t tmp_316 = tmp_20*(tmp_261 + tmp_291 + 2.0);
      real_t tmp_317 = tmp_28*tmp_316;
      real_t tmp_318 = -tmp_197 - tmp_231 + tmp_317;
      real_t tmp_319 = -tmp_200 - tmp_234 + tmp_316*tmp_33;
      real_t tmp_320 = tmp_20*(tmp_267 + tmp_296 + 2.666666666666667);
      real_t tmp_321 = tmp_28*tmp_320;
      real_t tmp_322 = -tmp_204 - tmp_237 + tmp_321;
      real_t tmp_323 = -tmp_207 - tmp_240 + tmp_320*tmp_33;
      real_t tmp_324 = tmp_20*(tmp_273 + tmp_301 + 2.666666666666667);
      real_t tmp_325 = tmp_28*tmp_324;
      real_t tmp_326 = -tmp_211 - tmp_243 + tmp_325;
      real_t tmp_327 = -tmp_214 - tmp_246 + tmp_324*tmp_33;
      real_t tmp_328 = tmp_20*(tmp_279 + tmp_306);
      real_t tmp_329 = tmp_28*tmp_328;
      real_t tmp_330 = -tmp_218 - tmp_249 + tmp_329;
      real_t tmp_331 = -tmp_221 - tmp_252 + tmp_328*tmp_33;
      real_t tmp_332 = tmp_20*(tmp_285 + tmp_311 + 2.666666666666667);
      real_t tmp_333 = tmp_28*tmp_332;
      real_t tmp_334 = -tmp_225 - tmp_255 + tmp_333;
      real_t tmp_335 = -tmp_228 - tmp_258 + tmp_33*tmp_332;
      real_t tmp_336 = tmp_104*tmp_33;
      real_t tmp_337 = (2.0/3.0)*tmp_20;
      real_t tmp_338 = tmp_30*tmp_337;
      real_t tmp_339 = 1.0*tmp_106;
      real_t tmp_340 = tmp_33*tmp_337;
      real_t tmp_341 = tmp_110*tmp_340;
      real_t tmp_342 = 1.0*tmp_111;
      real_t tmp_343 = tmp_113*tmp_340;
      real_t tmp_344 = 1.0*tmp_114;
      real_t tmp_345 = tmp_116*tmp_340;
      real_t tmp_346 = 1.0*tmp_117;
      real_t tmp_347 = tmp_119*tmp_340;
      real_t tmp_348 = 1.0*tmp_120;
      real_t tmp_349 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_350 = 5.3333333333333339*tmp_349;
      real_t tmp_351 = tmp_350*tmp_51;
      real_t tmp_352 = tmp_28*tmp_33;
      real_t tmp_353 = tmp_350*tmp_352;
      real_t tmp_354 = 1.0*tmp_349;
      real_t tmp_355 = tmp_122*tmp_32;
      real_t tmp_356 = tmp_104*tmp_28;
      real_t tmp_357 = tmp_355*tmp_356;
      real_t tmp_358 = (2.0/3.0)*tmp_349;
      real_t tmp_359 = tmp_26*tmp_358;
      real_t tmp_360 = tmp_122*tmp_336;
      real_t tmp_361 = tmp_110*tmp_127;
      real_t tmp_362 = tmp_28*tmp_354;
      real_t tmp_363 = tmp_32*tmp_362;
      real_t tmp_364 = tmp_33*tmp_359;
      real_t tmp_365 = tmp_113*tmp_130;
      real_t tmp_366 = tmp_116*tmp_133;
      real_t tmp_367 = tmp_119*tmp_136;
      real_t tmp_368 = tmp_139*tmp_31;
      real_t tmp_369 = tmp_354*tmp_368;
      real_t tmp_370 = tmp_358*tmp_6;
      real_t tmp_371 = tmp_139*tmp_370;
      real_t tmp_372 = tmp_110*tmp_144;
      real_t tmp_373 = tmp_31*tmp_362;
      real_t tmp_374 = tmp_33*tmp_370;
      real_t tmp_375 = tmp_113*tmp_147;
      real_t tmp_376 = tmp_116*tmp_150;
      real_t tmp_377 = tmp_119*tmp_153;
      real_t tmp_378 = tmp_336*tmp_337;
      real_t tmp_379 = 1.0*tmp_124;
      real_t tmp_380 = tmp_32*tmp_337;
      real_t tmp_381 = tmp_127*tmp_380;
      real_t tmp_382 = 1.0*tmp_128;
      real_t tmp_383 = tmp_130*tmp_380;
      real_t tmp_384 = 1.0*tmp_131;
      real_t tmp_385 = tmp_133*tmp_380;
      real_t tmp_386 = 1.0*tmp_134;
      real_t tmp_387 = tmp_136*tmp_380;
      real_t tmp_388 = 1.0*tmp_137;
      real_t tmp_389 = tmp_26*tmp_354;
      real_t tmp_390 = tmp_28*tmp_358;
      real_t tmp_391 = tmp_32*tmp_390;
      real_t tmp_392 = tmp_33*tmp_389;
      real_t tmp_393 = tmp_26*tmp_32;
      real_t tmp_394 = tmp_350*tmp_393;
      real_t tmp_395 = tmp_127*tmp_144;
      real_t tmp_396 = tmp_31*tmp_389;
      real_t tmp_397 = tmp_32*tmp_370;
      real_t tmp_398 = tmp_130*tmp_147;
      real_t tmp_399 = tmp_133*tmp_150;
      real_t tmp_400 = tmp_136*tmp_153;
      real_t tmp_401 = tmp_337*tmp_355;
      real_t tmp_402 = 1.0*tmp_141;
      real_t tmp_403 = tmp_31*tmp_337;
      real_t tmp_404 = tmp_144*tmp_403;
      real_t tmp_405 = 1.0*tmp_145;
      real_t tmp_406 = tmp_147*tmp_403;
      real_t tmp_407 = 1.0*tmp_148;
      real_t tmp_408 = tmp_150*tmp_403;
      real_t tmp_409 = 1.0*tmp_151;
      real_t tmp_410 = tmp_153*tmp_403;
      real_t tmp_411 = 1.0*tmp_154;
      real_t tmp_412 = tmp_354*tmp_6;
      real_t tmp_413 = tmp_139*tmp_412;
      real_t tmp_414 = tmp_31*tmp_390;
      real_t tmp_415 = tmp_33*tmp_412;
      real_t tmp_416 = tmp_31*tmp_359;
      real_t tmp_417 = tmp_32*tmp_412;
      real_t tmp_418 = tmp_31*tmp_6;
      real_t tmp_419 = tmp_350*tmp_418;
      real_t tmp_420 = tmp_337*tmp_368;
      real_t tmp_421 = (2.0/3.0)*tmp_163;
      real_t tmp_422 = tmp_107*tmp_6;
      real_t tmp_423 = 0.25*tmp_422;
      real_t tmp_424 = tmp_107*tmp_26;
      real_t tmp_425 = 0.25*tmp_424;
      real_t tmp_426 = tmp_423 + tmp_425;
      real_t tmp_427 = 2*tmp_426;
      real_t tmp_428 = (2.0/3.0)*tmp_171;
      real_t tmp_429 = 0.16666666666666666*tmp_422;
      real_t tmp_430 = 0.5*tmp_424;
      real_t tmp_431 = tmp_429 + tmp_430;
      real_t tmp_432 = 2*tmp_431;
      real_t tmp_433 = (2.0/3.0)*tmp_179;
      real_t tmp_434 = 0.5*tmp_422;
      real_t tmp_435 = 0.16666666666666666*tmp_424;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_187;
      real_t tmp_439 = 0.16666666666666666*tmp_422;
      real_t tmp_440 = 0.16666666666666666*tmp_424;
      real_t tmp_441 = tmp_439 + tmp_440;
      real_t tmp_442 = 2*tmp_441;
      real_t tmp_443 = (2.0/3.0)*tmp_195;
      real_t tmp_444 = 0.16666666666666666*tmp_422;
      real_t tmp_445 = 0.16666666666666666*tmp_424;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = 2*tmp_446;
      real_t tmp_448 = (2.0/3.0)*tmp_202;
      real_t tmp_449 = 0.25*tmp_422;
      real_t tmp_450 = tmp_107*tmp_28;
      real_t tmp_451 = 0.25*tmp_450;
      real_t tmp_452 = tmp_449 + tmp_451;
      real_t tmp_453 = 2*tmp_452;
      real_t tmp_454 = (2.0/3.0)*tmp_209;
      real_t tmp_455 = 0.16666666666666666*tmp_422;
      real_t tmp_456 = 0.5*tmp_450;
      real_t tmp_457 = tmp_455 + tmp_456;
      real_t tmp_458 = 2*tmp_457;
      real_t tmp_459 = (2.0/3.0)*tmp_216;
      real_t tmp_460 = 0.16666666666666666*tmp_422;
      real_t tmp_461 = 0.16666666666666666*tmp_450;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = 2*tmp_462;
      real_t tmp_464 = (2.0/3.0)*tmp_223;
      real_t tmp_465 = 0.5*tmp_422;
      real_t tmp_466 = 0.16666666666666666*tmp_450;
      real_t tmp_467 = tmp_465 + tmp_466;
      real_t tmp_468 = 2*tmp_467;
      real_t tmp_469 = (2.0/3.0)*tmp_230;
      real_t tmp_470 = 0.16666666666666666*tmp_422;
      real_t tmp_471 = 0.16666666666666666*tmp_450;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = 2*tmp_472;
      real_t tmp_474 = (2.0/3.0)*tmp_236;
      real_t tmp_475 = 0.25*tmp_424;
      real_t tmp_476 = 0.25*tmp_450;
      real_t tmp_477 = tmp_475 + tmp_476;
      real_t tmp_478 = 2*tmp_477;
      real_t tmp_479 = (2.0/3.0)*tmp_242;
      real_t tmp_480 = 0.16666666666666666*tmp_424;
      real_t tmp_481 = 0.16666666666666666*tmp_450;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = 2*tmp_482;
      real_t tmp_484 = (2.0/3.0)*tmp_248;
      real_t tmp_485 = 0.16666666666666666*tmp_424;
      real_t tmp_486 = 0.5*tmp_450;
      real_t tmp_487 = tmp_485 + tmp_486;
      real_t tmp_488 = 2*tmp_487;
      real_t tmp_489 = (2.0/3.0)*tmp_254;
      real_t tmp_490 = 0.5*tmp_424;
      real_t tmp_491 = 0.16666666666666666*tmp_450;
      real_t tmp_492 = tmp_490 + tmp_491;
      real_t tmp_493 = 2*tmp_492;
      real_t tmp_494 = (2.0/3.0)*tmp_260;
      real_t tmp_495 = 0.16666666666666666*tmp_424;
      real_t tmp_496 = 0.16666666666666666*tmp_450;
      real_t tmp_497 = tmp_495 + tmp_496;
      real_t tmp_498 = 2*tmp_497;
      real_t tmp_499 = (2.0/3.0)*tmp_266;
      real_t tmp_500 = 0.5*tmp_264 - tmp_425 - tmp_451;
      real_t tmp_501 = 2*tmp_500;
      real_t tmp_502 = (2.0/3.0)*tmp_272;
      real_t tmp_503 = 0.5*tmp_270 - tmp_430 - tmp_456;
      real_t tmp_504 = 2*tmp_503;
      real_t tmp_505 = (2.0/3.0)*tmp_278;
      real_t tmp_506 = 0.5*tmp_276 - tmp_435 - tmp_461;
      real_t tmp_507 = 2*tmp_506;
      real_t tmp_508 = (2.0/3.0)*tmp_284;
      real_t tmp_509 = 0.5*tmp_282 - tmp_440 - tmp_466;
      real_t tmp_510 = 2*tmp_509;
      real_t tmp_511 = (2.0/3.0)*tmp_290;
      real_t tmp_512 = 0.5*tmp_288 - tmp_445 - tmp_471;
      real_t tmp_513 = 2*tmp_512;
      real_t tmp_514 = (2.0/3.0)*tmp_295;
      real_t tmp_515 = 0.5*tmp_293 - tmp_423 - tmp_476;
      real_t tmp_516 = 2*tmp_515;
      real_t tmp_517 = (2.0/3.0)*tmp_300;
      real_t tmp_518 = 0.5*tmp_298 - tmp_429 - tmp_481;
      real_t tmp_519 = 2*tmp_518;
      real_t tmp_520 = (2.0/3.0)*tmp_305;
      real_t tmp_521 = 0.5*tmp_303 - tmp_434 - tmp_486;
      real_t tmp_522 = 2*tmp_521;
      real_t tmp_523 = (2.0/3.0)*tmp_310;
      real_t tmp_524 = 0.5*tmp_308 - tmp_439 - tmp_491;
      real_t tmp_525 = 2*tmp_524;
      real_t tmp_526 = (2.0/3.0)*tmp_315;
      real_t tmp_527 = 0.5*tmp_313 - tmp_444 - tmp_496;
      real_t tmp_528 = 2*tmp_527;
      real_t tmp_529 = (2.0/3.0)*tmp_319;
      real_t tmp_530 = 0.5*tmp_317 - tmp_449 - tmp_475;
      real_t tmp_531 = 2*tmp_530;
      real_t tmp_532 = (2.0/3.0)*tmp_323;
      real_t tmp_533 = 0.5*tmp_321 - tmp_455 - tmp_480;
      real_t tmp_534 = 2*tmp_533;
      real_t tmp_535 = (2.0/3.0)*tmp_327;
      real_t tmp_536 = 0.5*tmp_325 - tmp_460 - tmp_485;
      real_t tmp_537 = 2*tmp_536;
      real_t tmp_538 = (2.0/3.0)*tmp_331;
      real_t tmp_539 = 0.5*tmp_329 - tmp_465 - tmp_490;
      real_t tmp_540 = 2*tmp_539;
      real_t tmp_541 = (2.0/3.0)*tmp_335;
      real_t tmp_542 = 0.5*tmp_333 - tmp_470 - tmp_495;
      real_t tmp_543 = 2*tmp_542;
      real_t a_0_0 = tmp_103*(-tmp_100*tmp_98 + tmp_102*tmp_99) + tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_103*(-tmp_100*tmp_120 + tmp_101*tmp_121) + tmp_51*(-tmp_106*tmp_35 + tmp_109*tmp_36) + tmp_64*(-tmp_111*tmp_61 + tmp_112*tmp_62) + tmp_77*(-tmp_114*tmp_74 + tmp_115*tmp_75) + tmp_90*(-tmp_117*tmp_87 + tmp_118*tmp_88);
      real_t a_0_2 = tmp_103*(-tmp_100*tmp_137 + tmp_101*tmp_138) + tmp_51*(-tmp_124*tmp_35 + tmp_126*tmp_36) + tmp_64*(-tmp_128*tmp_61 + tmp_129*tmp_62) + tmp_77*(-tmp_131*tmp_74 + tmp_132*tmp_75) + tmp_90*(-tmp_134*tmp_87 + tmp_135*tmp_88);
      real_t a_0_3 = tmp_103*(-tmp_100*tmp_154 + tmp_101*tmp_155) + tmp_51*(-tmp_141*tmp_35 + tmp_143*tmp_36) + tmp_64*(-tmp_145*tmp_61 + tmp_146*tmp_62) + tmp_77*(-tmp_148*tmp_74 + tmp_149*tmp_75) + tmp_90*(-tmp_151*tmp_87 + tmp_152*tmp_88);
      real_t a_0_4 = tmp_103*(-tmp_100*tmp_192 + tmp_102*tmp_195) + tmp_51*(-tmp_160*tmp_35 + tmp_163*tmp_37) + tmp_64*(-tmp_168*tmp_61 + tmp_171*tmp_63) + tmp_77*(-tmp_176*tmp_74 + tmp_179*tmp_76) + tmp_90*(-tmp_184*tmp_87 + tmp_187*tmp_89);
      real_t a_0_5 = tmp_103*(-tmp_100*tmp_227 + tmp_102*tmp_230) + tmp_51*(-tmp_199*tmp_35 + tmp_202*tmp_37) + tmp_64*(-tmp_206*tmp_61 + tmp_209*tmp_63) + tmp_77*(-tmp_213*tmp_74 + tmp_216*tmp_76) + tmp_90*(-tmp_220*tmp_87 + tmp_223*tmp_89);
      real_t a_0_6 = tmp_103*(-tmp_100*tmp_257 + tmp_102*tmp_260) + tmp_51*(-tmp_233*tmp_35 + tmp_236*tmp_37) + tmp_64*(-tmp_239*tmp_61 + tmp_242*tmp_63) + tmp_77*(-tmp_245*tmp_74 + tmp_248*tmp_76) + tmp_90*(-tmp_251*tmp_87 + tmp_254*tmp_89);
      real_t a_0_7 = tmp_103*(-tmp_100*tmp_289 + tmp_102*tmp_290) + tmp_51*(-tmp_265*tmp_35 + tmp_266*tmp_37) + tmp_64*(-tmp_271*tmp_61 + tmp_272*tmp_63) + tmp_77*(-tmp_277*tmp_74 + tmp_278*tmp_76) + tmp_90*(-tmp_283*tmp_87 + tmp_284*tmp_89);
      real_t a_0_8 = tmp_103*(-tmp_100*tmp_314 + tmp_102*tmp_315) + tmp_51*(-tmp_294*tmp_35 + tmp_295*tmp_37) + tmp_64*(-tmp_299*tmp_61 + tmp_300*tmp_63) + tmp_77*(-tmp_304*tmp_74 + tmp_305*tmp_76) + tmp_90*(-tmp_309*tmp_87 + tmp_310*tmp_89);
      real_t a_0_9 = tmp_103*(-tmp_100*tmp_334 + tmp_102*tmp_335) + tmp_51*(-tmp_318*tmp_35 + tmp_319*tmp_37) + tmp_64*(-tmp_322*tmp_61 + tmp_323*tmp_63) + tmp_77*(-tmp_326*tmp_74 + tmp_327*tmp_76) + tmp_90*(-tmp_330*tmp_87 + tmp_331*tmp_89);
      real_t a_1_0 = tmp_103*(-tmp_347*tmp_98 + tmp_348*tmp_99) + tmp_51*(-tmp_336*tmp_338 + tmp_339*tmp_34) + tmp_64*(-tmp_341*tmp_59 + tmp_342*tmp_60) + tmp_77*(-tmp_343*tmp_72 + tmp_344*tmp_73) + tmp_90*(-tmp_345*tmp_85 + tmp_346*tmp_86);
      real_t a_1_1 = 0.0069444444444444458*tmp_103*tmp_353 + 0.0069444444444444458*tmp_353*tmp_64 + 0.0069444444444444458*tmp_353*tmp_77 + 0.0625*tmp_353*tmp_90;
      real_t a_1_2 = tmp_103*(tmp_363*tmp_367 - tmp_364*tmp_367) + tmp_51*(tmp_354*tmp_357 - tmp_359*tmp_360) + tmp_64*(tmp_361*tmp_363 - tmp_361*tmp_364) + tmp_77*(tmp_363*tmp_365 - tmp_364*tmp_365) + tmp_90*(tmp_363*tmp_366 - tmp_364*tmp_366);
      real_t a_1_3 = tmp_103*(tmp_373*tmp_377 - tmp_374*tmp_377) + tmp_51*(-tmp_336*tmp_371 + tmp_356*tmp_369) + tmp_64*(tmp_372*tmp_373 - tmp_372*tmp_374) + tmp_77*(tmp_373*tmp_375 - tmp_374*tmp_375) + tmp_90*(tmp_373*tmp_376 - tmp_374*tmp_376);
      real_t a_1_4 = tmp_103*(-tmp_192*tmp_347 + tmp_195*tmp_348) + tmp_51*(-tmp_160*tmp_378 + tmp_163*tmp_339) + tmp_64*(-tmp_168*tmp_341 + tmp_171*tmp_342) + tmp_77*(-tmp_176*tmp_343 + tmp_179*tmp_344) + tmp_90*(-tmp_184*tmp_345 + tmp_187*tmp_346);
      real_t a_1_5 = tmp_103*(-tmp_227*tmp_347 + tmp_230*tmp_348) + tmp_51*(-tmp_199*tmp_378 + tmp_202*tmp_339) + tmp_64*(-tmp_206*tmp_341 + tmp_209*tmp_342) + tmp_77*(-tmp_213*tmp_343 + tmp_216*tmp_344) + tmp_90*(-tmp_220*tmp_345 + tmp_223*tmp_346);
      real_t a_1_6 = tmp_103*(-tmp_257*tmp_347 + tmp_260*tmp_348) + tmp_51*(-tmp_233*tmp_378 + tmp_236*tmp_339) + tmp_64*(-tmp_239*tmp_341 + tmp_242*tmp_342) + tmp_77*(-tmp_245*tmp_343 + tmp_248*tmp_344) + tmp_90*(-tmp_251*tmp_345 + tmp_254*tmp_346);
      real_t a_1_7 = tmp_103*(-tmp_289*tmp_347 + tmp_290*tmp_348) + tmp_51*(-tmp_265*tmp_378 + tmp_266*tmp_339) + tmp_64*(-tmp_271*tmp_341 + tmp_272*tmp_342) + tmp_77*(-tmp_277*tmp_343 + tmp_278*tmp_344) + tmp_90*(-tmp_283*tmp_345 + tmp_284*tmp_346);
      real_t a_1_8 = tmp_103*(-tmp_314*tmp_347 + tmp_315*tmp_348) + tmp_51*(-tmp_294*tmp_378 + tmp_295*tmp_339) + tmp_64*(-tmp_299*tmp_341 + tmp_300*tmp_342) + tmp_77*(-tmp_304*tmp_343 + tmp_305*tmp_344) + tmp_90*(-tmp_309*tmp_345 + tmp_310*tmp_346);
      real_t a_1_9 = tmp_103*(-tmp_334*tmp_347 + tmp_335*tmp_348) + tmp_51*(-tmp_318*tmp_378 + tmp_319*tmp_339) + tmp_64*(-tmp_322*tmp_341 + tmp_323*tmp_342) + tmp_77*(-tmp_326*tmp_343 + tmp_327*tmp_344) + tmp_90*(-tmp_330*tmp_345 + tmp_331*tmp_346);
      real_t a_2_0 = tmp_103*(-tmp_387*tmp_98 + tmp_388*tmp_99) + tmp_51*(-tmp_338*tmp_355 + tmp_34*tmp_379) + tmp_64*(-tmp_381*tmp_59 + tmp_382*tmp_60) + tmp_77*(-tmp_383*tmp_72 + tmp_384*tmp_73) + tmp_90*(-tmp_385*tmp_85 + tmp_386*tmp_86);
      real_t a_2_1 = tmp_103*(-tmp_367*tmp_391 + tmp_367*tmp_392) + tmp_51*(-tmp_357*tmp_358 + tmp_360*tmp_389) + tmp_64*(-tmp_361*tmp_391 + tmp_361*tmp_392) + tmp_77*(-tmp_365*tmp_391 + tmp_365*tmp_392) + tmp_90*(-tmp_366*tmp_391 + tmp_366*tmp_392);
      real_t a_2_2 = 0.0069444444444444458*tmp_103*tmp_394 + 0.0069444444444444458*tmp_394*tmp_64 + 0.0625*tmp_394*tmp_77 + 0.0069444444444444458*tmp_394*tmp_90;
      real_t a_2_3 = tmp_103*(tmp_396*tmp_400 - tmp_397*tmp_400) + tmp_51*(tmp_122*tmp_26*tmp_369 - tmp_355*tmp_371) + tmp_64*(tmp_395*tmp_396 - tmp_395*tmp_397) + tmp_77*(tmp_396*tmp_398 - tmp_397*tmp_398) + tmp_90*(tmp_396*tmp_399 - tmp_397*tmp_399);
      real_t a_2_4 = tmp_103*(-tmp_192*tmp_387 + tmp_195*tmp_388) + tmp_51*(-tmp_160*tmp_401 + tmp_163*tmp_379) + tmp_64*(-tmp_168*tmp_381 + tmp_171*tmp_382) + tmp_77*(-tmp_176*tmp_383 + tmp_179*tmp_384) + tmp_90*(-tmp_184*tmp_385 + tmp_187*tmp_386);
      real_t a_2_5 = tmp_103*(-tmp_227*tmp_387 + tmp_230*tmp_388) + tmp_51*(-tmp_199*tmp_401 + tmp_202*tmp_379) + tmp_64*(-tmp_206*tmp_381 + tmp_209*tmp_382) + tmp_77*(-tmp_213*tmp_383 + tmp_216*tmp_384) + tmp_90*(-tmp_220*tmp_385 + tmp_223*tmp_386);
      real_t a_2_6 = tmp_103*(-tmp_257*tmp_387 + tmp_260*tmp_388) + tmp_51*(-tmp_233*tmp_401 + tmp_236*tmp_379) + tmp_64*(-tmp_239*tmp_381 + tmp_242*tmp_382) + tmp_77*(-tmp_245*tmp_383 + tmp_248*tmp_384) + tmp_90*(-tmp_251*tmp_385 + tmp_254*tmp_386);
      real_t a_2_7 = tmp_103*(-tmp_289*tmp_387 + tmp_290*tmp_388) + tmp_51*(-tmp_265*tmp_401 + tmp_266*tmp_379) + tmp_64*(-tmp_271*tmp_381 + tmp_272*tmp_382) + tmp_77*(-tmp_277*tmp_383 + tmp_278*tmp_384) + tmp_90*(-tmp_283*tmp_385 + tmp_284*tmp_386);
      real_t a_2_8 = tmp_103*(-tmp_314*tmp_387 + tmp_315*tmp_388) + tmp_51*(-tmp_294*tmp_401 + tmp_295*tmp_379) + tmp_64*(-tmp_299*tmp_381 + tmp_300*tmp_382) + tmp_77*(-tmp_304*tmp_383 + tmp_305*tmp_384) + tmp_90*(-tmp_309*tmp_385 + tmp_310*tmp_386);
      real_t a_2_9 = tmp_103*(-tmp_334*tmp_387 + tmp_335*tmp_388) + tmp_51*(-tmp_318*tmp_401 + tmp_319*tmp_379) + tmp_64*(-tmp_322*tmp_381 + tmp_323*tmp_382) + tmp_77*(-tmp_326*tmp_383 + tmp_327*tmp_384) + tmp_90*(-tmp_330*tmp_385 + tmp_331*tmp_386);
      real_t a_3_0 = tmp_103*(-tmp_410*tmp_98 + tmp_411*tmp_99) + tmp_51*(-tmp_338*tmp_368 + tmp_34*tmp_402) + tmp_64*(-tmp_404*tmp_59 + tmp_405*tmp_60) + tmp_77*(-tmp_406*tmp_72 + tmp_407*tmp_73) + tmp_90*(-tmp_408*tmp_85 + tmp_409*tmp_86);
      real_t a_3_1 = tmp_103*(-tmp_377*tmp_414 + tmp_377*tmp_415) + tmp_51*(tmp_336*tmp_413 - tmp_356*tmp_358*tmp_368) + tmp_64*(-tmp_372*tmp_414 + tmp_372*tmp_415) + tmp_77*(-tmp_375*tmp_414 + tmp_375*tmp_415) + tmp_90*(-tmp_376*tmp_414 + tmp_376*tmp_415);
      real_t a_3_2 = tmp_103*(-tmp_400*tmp_416 + tmp_400*tmp_417) + tmp_51*(-tmp_122*tmp_359*tmp_368 + tmp_355*tmp_413) + tmp_64*(-tmp_395*tmp_416 + tmp_395*tmp_417) + tmp_77*(-tmp_398*tmp_416 + tmp_398*tmp_417) + tmp_90*(-tmp_399*tmp_416 + tmp_399*tmp_417);
      real_t a_3_3 = 0.0069444444444444458*tmp_103*tmp_419 + 0.0625*tmp_419*tmp_64 + 0.0069444444444444458*tmp_419*tmp_77 + 0.0069444444444444458*tmp_419*tmp_90;
      real_t a_3_4 = tmp_103*(-tmp_192*tmp_410 + tmp_195*tmp_411) + tmp_51*(-tmp_160*tmp_420 + tmp_163*tmp_402) + tmp_64*(-tmp_168*tmp_404 + tmp_171*tmp_405) + tmp_77*(-tmp_176*tmp_406 + tmp_179*tmp_407) + tmp_90*(-tmp_184*tmp_408 + tmp_187*tmp_409);
      real_t a_3_5 = tmp_103*(-tmp_227*tmp_410 + tmp_230*tmp_411) + tmp_51*(-tmp_199*tmp_420 + tmp_202*tmp_402) + tmp_64*(-tmp_206*tmp_404 + tmp_209*tmp_405) + tmp_77*(-tmp_213*tmp_406 + tmp_216*tmp_407) + tmp_90*(-tmp_220*tmp_408 + tmp_223*tmp_409);
      real_t a_3_6 = tmp_103*(-tmp_257*tmp_410 + tmp_260*tmp_411) + tmp_51*(-tmp_233*tmp_420 + tmp_236*tmp_402) + tmp_64*(-tmp_239*tmp_404 + tmp_242*tmp_405) + tmp_77*(-tmp_245*tmp_406 + tmp_248*tmp_407) + tmp_90*(-tmp_251*tmp_408 + tmp_254*tmp_409);
      real_t a_3_7 = tmp_103*(-tmp_289*tmp_410 + tmp_290*tmp_411) + tmp_51*(-tmp_265*tmp_420 + tmp_266*tmp_402) + tmp_64*(-tmp_271*tmp_404 + tmp_272*tmp_405) + tmp_77*(-tmp_277*tmp_406 + tmp_278*tmp_407) + tmp_90*(-tmp_283*tmp_408 + tmp_284*tmp_409);
      real_t a_3_8 = tmp_103*(-tmp_314*tmp_410 + tmp_315*tmp_411) + tmp_51*(-tmp_294*tmp_420 + tmp_295*tmp_402) + tmp_64*(-tmp_299*tmp_404 + tmp_300*tmp_405) + tmp_77*(-tmp_304*tmp_406 + tmp_305*tmp_407) + tmp_90*(-tmp_309*tmp_408 + tmp_310*tmp_409);
      real_t a_3_9 = tmp_103*(-tmp_334*tmp_410 + tmp_335*tmp_411) + tmp_51*(-tmp_318*tmp_420 + tmp_319*tmp_402) + tmp_64*(-tmp_322*tmp_404 + tmp_323*tmp_405) + tmp_77*(-tmp_326*tmp_406 + tmp_327*tmp_407) + tmp_90*(-tmp_330*tmp_408 + tmp_331*tmp_409);
      real_t a_4_0 = tmp_103*(-tmp_443*tmp_98 + tmp_447*tmp_99) + tmp_51*(-tmp_30*tmp_421 + tmp_34*tmp_427) + tmp_64*(-tmp_428*tmp_59 + tmp_432*tmp_60) + tmp_77*(-tmp_433*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_442*tmp_86);
      real_t a_4_1 = tmp_103*(-tmp_120*tmp_443 + tmp_121*tmp_446) + tmp_51*(-tmp_106*tmp_421 + tmp_109*tmp_426) + tmp_64*(-tmp_111*tmp_428 + tmp_112*tmp_431) + tmp_77*(-tmp_114*tmp_433 + tmp_115*tmp_436) + tmp_90*(-tmp_117*tmp_438 + tmp_118*tmp_441);
      real_t a_4_2 = tmp_103*(-tmp_137*tmp_443 + tmp_138*tmp_446) + tmp_51*(-tmp_124*tmp_421 + tmp_126*tmp_426) + tmp_64*(-tmp_128*tmp_428 + tmp_129*tmp_431) + tmp_77*(-tmp_131*tmp_433 + tmp_132*tmp_436) + tmp_90*(-tmp_134*tmp_438 + tmp_135*tmp_441);
      real_t a_4_3 = tmp_103*(-tmp_154*tmp_443 + tmp_155*tmp_446) + tmp_51*(-tmp_141*tmp_421 + tmp_143*tmp_426) + tmp_64*(-tmp_145*tmp_428 + tmp_146*tmp_431) + tmp_77*(-tmp_148*tmp_433 + tmp_149*tmp_436) + tmp_90*(-tmp_151*tmp_438 + tmp_152*tmp_441);
      real_t a_4_4 = tmp_103*(-tmp_192*tmp_443 + tmp_195*tmp_447) + tmp_51*(-tmp_160*tmp_421 + tmp_163*tmp_427) + tmp_64*(-tmp_168*tmp_428 + tmp_171*tmp_432) + tmp_77*(-tmp_176*tmp_433 + tmp_179*tmp_437) + tmp_90*(-tmp_184*tmp_438 + tmp_187*tmp_442);
      real_t a_4_5 = tmp_103*(-tmp_227*tmp_443 + tmp_230*tmp_447) + tmp_51*(-tmp_199*tmp_421 + tmp_202*tmp_427) + tmp_64*(-tmp_206*tmp_428 + tmp_209*tmp_432) + tmp_77*(-tmp_213*tmp_433 + tmp_216*tmp_437) + tmp_90*(-tmp_220*tmp_438 + tmp_223*tmp_442);
      real_t a_4_6 = tmp_103*(-tmp_257*tmp_443 + tmp_260*tmp_447) + tmp_51*(-tmp_233*tmp_421 + tmp_236*tmp_427) + tmp_64*(-tmp_239*tmp_428 + tmp_242*tmp_432) + tmp_77*(-tmp_245*tmp_433 + tmp_248*tmp_437) + tmp_90*(-tmp_251*tmp_438 + tmp_254*tmp_442);
      real_t a_4_7 = tmp_103*(-tmp_289*tmp_443 + tmp_290*tmp_447) + tmp_51*(-tmp_265*tmp_421 + tmp_266*tmp_427) + tmp_64*(-tmp_271*tmp_428 + tmp_272*tmp_432) + tmp_77*(-tmp_277*tmp_433 + tmp_278*tmp_437) + tmp_90*(-tmp_283*tmp_438 + tmp_284*tmp_442);
      real_t a_4_8 = tmp_103*(-tmp_314*tmp_443 + tmp_315*tmp_447) + tmp_51*(-tmp_294*tmp_421 + tmp_295*tmp_427) + tmp_64*(-tmp_299*tmp_428 + tmp_300*tmp_432) + tmp_77*(-tmp_304*tmp_433 + tmp_305*tmp_437) + tmp_90*(-tmp_309*tmp_438 + tmp_310*tmp_442);
      real_t a_4_9 = tmp_103*(-tmp_334*tmp_443 + tmp_335*tmp_447) + tmp_51*(-tmp_318*tmp_421 + tmp_319*tmp_427) + tmp_64*(-tmp_322*tmp_428 + tmp_323*tmp_432) + tmp_77*(-tmp_326*tmp_433 + tmp_327*tmp_437) + tmp_90*(-tmp_330*tmp_438 + tmp_331*tmp_442);
      real_t a_5_0 = tmp_103*(-tmp_469*tmp_98 + tmp_473*tmp_99) + tmp_51*(-tmp_30*tmp_448 + tmp_34*tmp_453) + tmp_64*(-tmp_454*tmp_59 + tmp_458*tmp_60) + tmp_77*(-tmp_459*tmp_72 + tmp_463*tmp_73) + tmp_90*(-tmp_464*tmp_85 + tmp_468*tmp_86);
      real_t a_5_1 = tmp_103*(-tmp_120*tmp_469 + tmp_121*tmp_472) + tmp_51*(-tmp_106*tmp_448 + tmp_109*tmp_452) + tmp_64*(-tmp_111*tmp_454 + tmp_112*tmp_457) + tmp_77*(-tmp_114*tmp_459 + tmp_115*tmp_462) + tmp_90*(-tmp_117*tmp_464 + tmp_118*tmp_467);
      real_t a_5_2 = tmp_103*(-tmp_137*tmp_469 + tmp_138*tmp_472) + tmp_51*(-tmp_124*tmp_448 + tmp_126*tmp_452) + tmp_64*(-tmp_128*tmp_454 + tmp_129*tmp_457) + tmp_77*(-tmp_131*tmp_459 + tmp_132*tmp_462) + tmp_90*(-tmp_134*tmp_464 + tmp_135*tmp_467);
      real_t a_5_3 = tmp_103*(-tmp_154*tmp_469 + tmp_155*tmp_472) + tmp_51*(-tmp_141*tmp_448 + tmp_143*tmp_452) + tmp_64*(-tmp_145*tmp_454 + tmp_146*tmp_457) + tmp_77*(-tmp_148*tmp_459 + tmp_149*tmp_462) + tmp_90*(-tmp_151*tmp_464 + tmp_152*tmp_467);
      real_t a_5_4 = tmp_103*(-tmp_192*tmp_469 + tmp_195*tmp_473) + tmp_51*(-tmp_160*tmp_448 + tmp_163*tmp_453) + tmp_64*(-tmp_168*tmp_454 + tmp_171*tmp_458) + tmp_77*(-tmp_176*tmp_459 + tmp_179*tmp_463) + tmp_90*(-tmp_184*tmp_464 + tmp_187*tmp_468);
      real_t a_5_5 = tmp_103*(-tmp_227*tmp_469 + tmp_230*tmp_473) + tmp_51*(-tmp_199*tmp_448 + tmp_202*tmp_453) + tmp_64*(-tmp_206*tmp_454 + tmp_209*tmp_458) + tmp_77*(-tmp_213*tmp_459 + tmp_216*tmp_463) + tmp_90*(-tmp_220*tmp_464 + tmp_223*tmp_468);
      real_t a_5_6 = tmp_103*(-tmp_257*tmp_469 + tmp_260*tmp_473) + tmp_51*(-tmp_233*tmp_448 + tmp_236*tmp_453) + tmp_64*(-tmp_239*tmp_454 + tmp_242*tmp_458) + tmp_77*(-tmp_245*tmp_459 + tmp_248*tmp_463) + tmp_90*(-tmp_251*tmp_464 + tmp_254*tmp_468);
      real_t a_5_7 = tmp_103*(-tmp_289*tmp_469 + tmp_290*tmp_473) + tmp_51*(-tmp_265*tmp_448 + tmp_266*tmp_453) + tmp_64*(-tmp_271*tmp_454 + tmp_272*tmp_458) + tmp_77*(-tmp_277*tmp_459 + tmp_278*tmp_463) + tmp_90*(-tmp_283*tmp_464 + tmp_284*tmp_468);
      real_t a_5_8 = tmp_103*(-tmp_314*tmp_469 + tmp_315*tmp_473) + tmp_51*(-tmp_294*tmp_448 + tmp_295*tmp_453) + tmp_64*(-tmp_299*tmp_454 + tmp_300*tmp_458) + tmp_77*(-tmp_304*tmp_459 + tmp_305*tmp_463) + tmp_90*(-tmp_309*tmp_464 + tmp_310*tmp_468);
      real_t a_5_9 = tmp_103*(-tmp_334*tmp_469 + tmp_335*tmp_473) + tmp_51*(-tmp_318*tmp_448 + tmp_319*tmp_453) + tmp_64*(-tmp_322*tmp_454 + tmp_323*tmp_458) + tmp_77*(-tmp_326*tmp_459 + tmp_327*tmp_463) + tmp_90*(-tmp_330*tmp_464 + tmp_331*tmp_468);
      real_t a_6_0 = tmp_103*(-tmp_494*tmp_98 + tmp_498*tmp_99) + tmp_51*(-tmp_30*tmp_474 + tmp_34*tmp_478) + tmp_64*(-tmp_479*tmp_59 + tmp_483*tmp_60) + tmp_77*(-tmp_484*tmp_72 + tmp_488*tmp_73) + tmp_90*(-tmp_489*tmp_85 + tmp_493*tmp_86);
      real_t a_6_1 = tmp_103*(-tmp_120*tmp_494 + tmp_121*tmp_497) + tmp_51*(-tmp_106*tmp_474 + tmp_109*tmp_477) + tmp_64*(-tmp_111*tmp_479 + tmp_112*tmp_482) + tmp_77*(-tmp_114*tmp_484 + tmp_115*tmp_487) + tmp_90*(-tmp_117*tmp_489 + tmp_118*tmp_492);
      real_t a_6_2 = tmp_103*(-tmp_137*tmp_494 + tmp_138*tmp_497) + tmp_51*(-tmp_124*tmp_474 + tmp_126*tmp_477) + tmp_64*(-tmp_128*tmp_479 + tmp_129*tmp_482) + tmp_77*(-tmp_131*tmp_484 + tmp_132*tmp_487) + tmp_90*(-tmp_134*tmp_489 + tmp_135*tmp_492);
      real_t a_6_3 = tmp_103*(-tmp_154*tmp_494 + tmp_155*tmp_497) + tmp_51*(-tmp_141*tmp_474 + tmp_143*tmp_477) + tmp_64*(-tmp_145*tmp_479 + tmp_146*tmp_482) + tmp_77*(-tmp_148*tmp_484 + tmp_149*tmp_487) + tmp_90*(-tmp_151*tmp_489 + tmp_152*tmp_492);
      real_t a_6_4 = tmp_103*(-tmp_192*tmp_494 + tmp_195*tmp_498) + tmp_51*(-tmp_160*tmp_474 + tmp_163*tmp_478) + tmp_64*(-tmp_168*tmp_479 + tmp_171*tmp_483) + tmp_77*(-tmp_176*tmp_484 + tmp_179*tmp_488) + tmp_90*(-tmp_184*tmp_489 + tmp_187*tmp_493);
      real_t a_6_5 = tmp_103*(-tmp_227*tmp_494 + tmp_230*tmp_498) + tmp_51*(-tmp_199*tmp_474 + tmp_202*tmp_478) + tmp_64*(-tmp_206*tmp_479 + tmp_209*tmp_483) + tmp_77*(-tmp_213*tmp_484 + tmp_216*tmp_488) + tmp_90*(-tmp_220*tmp_489 + tmp_223*tmp_493);
      real_t a_6_6 = tmp_103*(-tmp_257*tmp_494 + tmp_260*tmp_498) + tmp_51*(-tmp_233*tmp_474 + tmp_236*tmp_478) + tmp_64*(-tmp_239*tmp_479 + tmp_242*tmp_483) + tmp_77*(-tmp_245*tmp_484 + tmp_248*tmp_488) + tmp_90*(-tmp_251*tmp_489 + tmp_254*tmp_493);
      real_t a_6_7 = tmp_103*(-tmp_289*tmp_494 + tmp_290*tmp_498) + tmp_51*(-tmp_265*tmp_474 + tmp_266*tmp_478) + tmp_64*(-tmp_271*tmp_479 + tmp_272*tmp_483) + tmp_77*(-tmp_277*tmp_484 + tmp_278*tmp_488) + tmp_90*(-tmp_283*tmp_489 + tmp_284*tmp_493);
      real_t a_6_8 = tmp_103*(-tmp_314*tmp_494 + tmp_315*tmp_498) + tmp_51*(-tmp_294*tmp_474 + tmp_295*tmp_478) + tmp_64*(-tmp_299*tmp_479 + tmp_300*tmp_483) + tmp_77*(-tmp_304*tmp_484 + tmp_305*tmp_488) + tmp_90*(-tmp_309*tmp_489 + tmp_310*tmp_493);
      real_t a_6_9 = tmp_103*(-tmp_334*tmp_494 + tmp_335*tmp_498) + tmp_51*(-tmp_318*tmp_474 + tmp_319*tmp_478) + tmp_64*(-tmp_322*tmp_479 + tmp_323*tmp_483) + tmp_77*(-tmp_326*tmp_484 + tmp_327*tmp_488) + tmp_90*(-tmp_330*tmp_489 + tmp_331*tmp_493);
      real_t a_7_0 = tmp_103*(-tmp_511*tmp_98 + tmp_513*tmp_99) + tmp_51*(-tmp_30*tmp_499 + tmp_34*tmp_501) + tmp_64*(-tmp_502*tmp_59 + tmp_504*tmp_60) + tmp_77*(-tmp_505*tmp_72 + tmp_507*tmp_73) + tmp_90*(-tmp_508*tmp_85 + tmp_510*tmp_86);
      real_t a_7_1 = tmp_103*(-tmp_120*tmp_511 + tmp_121*tmp_512) + tmp_51*(-tmp_106*tmp_499 + tmp_109*tmp_500) + tmp_64*(-tmp_111*tmp_502 + tmp_112*tmp_503) + tmp_77*(-tmp_114*tmp_505 + tmp_115*tmp_506) + tmp_90*(-tmp_117*tmp_508 + tmp_118*tmp_509);
      real_t a_7_2 = tmp_103*(-tmp_137*tmp_511 + tmp_138*tmp_512) + tmp_51*(-tmp_124*tmp_499 + tmp_126*tmp_500) + tmp_64*(-tmp_128*tmp_502 + tmp_129*tmp_503) + tmp_77*(-tmp_131*tmp_505 + tmp_132*tmp_506) + tmp_90*(-tmp_134*tmp_508 + tmp_135*tmp_509);
      real_t a_7_3 = tmp_103*(-tmp_154*tmp_511 + tmp_155*tmp_512) + tmp_51*(-tmp_141*tmp_499 + tmp_143*tmp_500) + tmp_64*(-tmp_145*tmp_502 + tmp_146*tmp_503) + tmp_77*(-tmp_148*tmp_505 + tmp_149*tmp_506) + tmp_90*(-tmp_151*tmp_508 + tmp_152*tmp_509);
      real_t a_7_4 = tmp_103*(-tmp_192*tmp_511 + tmp_195*tmp_513) + tmp_51*(-tmp_160*tmp_499 + tmp_163*tmp_501) + tmp_64*(-tmp_168*tmp_502 + tmp_171*tmp_504) + tmp_77*(-tmp_176*tmp_505 + tmp_179*tmp_507) + tmp_90*(-tmp_184*tmp_508 + tmp_187*tmp_510);
      real_t a_7_5 = tmp_103*(-tmp_227*tmp_511 + tmp_230*tmp_513) + tmp_51*(-tmp_199*tmp_499 + tmp_202*tmp_501) + tmp_64*(-tmp_206*tmp_502 + tmp_209*tmp_504) + tmp_77*(-tmp_213*tmp_505 + tmp_216*tmp_507) + tmp_90*(-tmp_220*tmp_508 + tmp_223*tmp_510);
      real_t a_7_6 = tmp_103*(-tmp_257*tmp_511 + tmp_260*tmp_513) + tmp_51*(-tmp_233*tmp_499 + tmp_236*tmp_501) + tmp_64*(-tmp_239*tmp_502 + tmp_242*tmp_504) + tmp_77*(-tmp_245*tmp_505 + tmp_248*tmp_507) + tmp_90*(-tmp_251*tmp_508 + tmp_254*tmp_510);
      real_t a_7_7 = tmp_103*(-tmp_289*tmp_511 + tmp_290*tmp_513) + tmp_51*(-tmp_265*tmp_499 + tmp_266*tmp_501) + tmp_64*(-tmp_271*tmp_502 + tmp_272*tmp_504) + tmp_77*(-tmp_277*tmp_505 + tmp_278*tmp_507) + tmp_90*(-tmp_283*tmp_508 + tmp_284*tmp_510);
      real_t a_7_8 = tmp_103*(-tmp_314*tmp_511 + tmp_315*tmp_513) + tmp_51*(-tmp_294*tmp_499 + tmp_295*tmp_501) + tmp_64*(-tmp_299*tmp_502 + tmp_300*tmp_504) + tmp_77*(-tmp_304*tmp_505 + tmp_305*tmp_507) + tmp_90*(-tmp_309*tmp_508 + tmp_310*tmp_510);
      real_t a_7_9 = tmp_103*(-tmp_334*tmp_511 + tmp_335*tmp_513) + tmp_51*(-tmp_318*tmp_499 + tmp_319*tmp_501) + tmp_64*(-tmp_322*tmp_502 + tmp_323*tmp_504) + tmp_77*(-tmp_326*tmp_505 + tmp_327*tmp_507) + tmp_90*(-tmp_330*tmp_508 + tmp_331*tmp_510);
      real_t a_8_0 = tmp_103*(-tmp_526*tmp_98 + tmp_528*tmp_99) + tmp_51*(-tmp_30*tmp_514 + tmp_34*tmp_516) + tmp_64*(-tmp_517*tmp_59 + tmp_519*tmp_60) + tmp_77*(-tmp_520*tmp_72 + tmp_522*tmp_73) + tmp_90*(-tmp_523*tmp_85 + tmp_525*tmp_86);
      real_t a_8_1 = tmp_103*(-tmp_120*tmp_526 + tmp_121*tmp_527) + tmp_51*(-tmp_106*tmp_514 + tmp_109*tmp_515) + tmp_64*(-tmp_111*tmp_517 + tmp_112*tmp_518) + tmp_77*(-tmp_114*tmp_520 + tmp_115*tmp_521) + tmp_90*(-tmp_117*tmp_523 + tmp_118*tmp_524);
      real_t a_8_2 = tmp_103*(-tmp_137*tmp_526 + tmp_138*tmp_527) + tmp_51*(-tmp_124*tmp_514 + tmp_126*tmp_515) + tmp_64*(-tmp_128*tmp_517 + tmp_129*tmp_518) + tmp_77*(-tmp_131*tmp_520 + tmp_132*tmp_521) + tmp_90*(-tmp_134*tmp_523 + tmp_135*tmp_524);
      real_t a_8_3 = tmp_103*(-tmp_154*tmp_526 + tmp_155*tmp_527) + tmp_51*(-tmp_141*tmp_514 + tmp_143*tmp_515) + tmp_64*(-tmp_145*tmp_517 + tmp_146*tmp_518) + tmp_77*(-tmp_148*tmp_520 + tmp_149*tmp_521) + tmp_90*(-tmp_151*tmp_523 + tmp_152*tmp_524);
      real_t a_8_4 = tmp_103*(-tmp_192*tmp_526 + tmp_195*tmp_528) + tmp_51*(-tmp_160*tmp_514 + tmp_163*tmp_516) + tmp_64*(-tmp_168*tmp_517 + tmp_171*tmp_519) + tmp_77*(-tmp_176*tmp_520 + tmp_179*tmp_522) + tmp_90*(-tmp_184*tmp_523 + tmp_187*tmp_525);
      real_t a_8_5 = tmp_103*(-tmp_227*tmp_526 + tmp_230*tmp_528) + tmp_51*(-tmp_199*tmp_514 + tmp_202*tmp_516) + tmp_64*(-tmp_206*tmp_517 + tmp_209*tmp_519) + tmp_77*(-tmp_213*tmp_520 + tmp_216*tmp_522) + tmp_90*(-tmp_220*tmp_523 + tmp_223*tmp_525);
      real_t a_8_6 = tmp_103*(-tmp_257*tmp_526 + tmp_260*tmp_528) + tmp_51*(-tmp_233*tmp_514 + tmp_236*tmp_516) + tmp_64*(-tmp_239*tmp_517 + tmp_242*tmp_519) + tmp_77*(-tmp_245*tmp_520 + tmp_248*tmp_522) + tmp_90*(-tmp_251*tmp_523 + tmp_254*tmp_525);
      real_t a_8_7 = tmp_103*(-tmp_289*tmp_526 + tmp_290*tmp_528) + tmp_51*(-tmp_265*tmp_514 + tmp_266*tmp_516) + tmp_64*(-tmp_271*tmp_517 + tmp_272*tmp_519) + tmp_77*(-tmp_277*tmp_520 + tmp_278*tmp_522) + tmp_90*(-tmp_283*tmp_523 + tmp_284*tmp_525);
      real_t a_8_8 = tmp_103*(-tmp_314*tmp_526 + tmp_315*tmp_528) + tmp_51*(-tmp_294*tmp_514 + tmp_295*tmp_516) + tmp_64*(-tmp_299*tmp_517 + tmp_300*tmp_519) + tmp_77*(-tmp_304*tmp_520 + tmp_305*tmp_522) + tmp_90*(-tmp_309*tmp_523 + tmp_310*tmp_525);
      real_t a_8_9 = tmp_103*(-tmp_334*tmp_526 + tmp_335*tmp_528) + tmp_51*(-tmp_318*tmp_514 + tmp_319*tmp_516) + tmp_64*(-tmp_322*tmp_517 + tmp_323*tmp_519) + tmp_77*(-tmp_326*tmp_520 + tmp_327*tmp_522) + tmp_90*(-tmp_330*tmp_523 + tmp_331*tmp_525);
      real_t a_9_0 = tmp_103*(-tmp_541*tmp_98 + tmp_543*tmp_99) + tmp_51*(-tmp_30*tmp_529 + tmp_34*tmp_531) + tmp_64*(-tmp_532*tmp_59 + tmp_534*tmp_60) + tmp_77*(-tmp_535*tmp_72 + tmp_537*tmp_73) + tmp_90*(-tmp_538*tmp_85 + tmp_540*tmp_86);
      real_t a_9_1 = tmp_103*(-tmp_120*tmp_541 + tmp_121*tmp_542) + tmp_51*(-tmp_106*tmp_529 + tmp_109*tmp_530) + tmp_64*(-tmp_111*tmp_532 + tmp_112*tmp_533) + tmp_77*(-tmp_114*tmp_535 + tmp_115*tmp_536) + tmp_90*(-tmp_117*tmp_538 + tmp_118*tmp_539);
      real_t a_9_2 = tmp_103*(-tmp_137*tmp_541 + tmp_138*tmp_542) + tmp_51*(-tmp_124*tmp_529 + tmp_126*tmp_530) + tmp_64*(-tmp_128*tmp_532 + tmp_129*tmp_533) + tmp_77*(-tmp_131*tmp_535 + tmp_132*tmp_536) + tmp_90*(-tmp_134*tmp_538 + tmp_135*tmp_539);
      real_t a_9_3 = tmp_103*(-tmp_154*tmp_541 + tmp_155*tmp_542) + tmp_51*(-tmp_141*tmp_529 + tmp_143*tmp_530) + tmp_64*(-tmp_145*tmp_532 + tmp_146*tmp_533) + tmp_77*(-tmp_148*tmp_535 + tmp_149*tmp_536) + tmp_90*(-tmp_151*tmp_538 + tmp_152*tmp_539);
      real_t a_9_4 = tmp_103*(-tmp_192*tmp_541 + tmp_195*tmp_543) + tmp_51*(-tmp_160*tmp_529 + tmp_163*tmp_531) + tmp_64*(-tmp_168*tmp_532 + tmp_171*tmp_534) + tmp_77*(-tmp_176*tmp_535 + tmp_179*tmp_537) + tmp_90*(-tmp_184*tmp_538 + tmp_187*tmp_540);
      real_t a_9_5 = tmp_103*(-tmp_227*tmp_541 + tmp_230*tmp_543) + tmp_51*(-tmp_199*tmp_529 + tmp_202*tmp_531) + tmp_64*(-tmp_206*tmp_532 + tmp_209*tmp_534) + tmp_77*(-tmp_213*tmp_535 + tmp_216*tmp_537) + tmp_90*(-tmp_220*tmp_538 + tmp_223*tmp_540);
      real_t a_9_6 = tmp_103*(-tmp_257*tmp_541 + tmp_260*tmp_543) + tmp_51*(-tmp_233*tmp_529 + tmp_236*tmp_531) + tmp_64*(-tmp_239*tmp_532 + tmp_242*tmp_534) + tmp_77*(-tmp_245*tmp_535 + tmp_248*tmp_537) + tmp_90*(-tmp_251*tmp_538 + tmp_254*tmp_540);
      real_t a_9_7 = tmp_103*(-tmp_289*tmp_541 + tmp_290*tmp_543) + tmp_51*(-tmp_265*tmp_529 + tmp_266*tmp_531) + tmp_64*(-tmp_271*tmp_532 + tmp_272*tmp_534) + tmp_77*(-tmp_277*tmp_535 + tmp_278*tmp_537) + tmp_90*(-tmp_283*tmp_538 + tmp_284*tmp_540);
      real_t a_9_8 = tmp_103*(-tmp_314*tmp_541 + tmp_315*tmp_543) + tmp_51*(-tmp_294*tmp_529 + tmp_295*tmp_531) + tmp_64*(-tmp_299*tmp_532 + tmp_300*tmp_534) + tmp_77*(-tmp_304*tmp_535 + tmp_305*tmp_537) + tmp_90*(-tmp_309*tmp_538 + tmp_310*tmp_540);
      real_t a_9_9 = tmp_103*(-tmp_334*tmp_541 + tmp_335*tmp_543) + tmp_51*(-tmp_318*tmp_529 + tmp_319*tmp_531) + tmp_64*(-tmp_322*tmp_532 + tmp_323*tmp_534) + tmp_77*(-tmp_326*tmp_535 + tmp_327*tmp_537) + tmp_90*(-tmp_330*tmp_538 + tmp_331*tmp_540);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_1_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_10 - tmp_17;
      real_t tmp_30 = tmp_15 - tmp_16;
      real_t tmp_31 = tmp_12 - tmp_18;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = -0.1333333333333333*tmp_48;
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = 2.0;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.074999999999999983*tmp_48;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = 0.66666666666666663;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.074999999999999983*tmp_48;
      real_t tmp_74 = 2.0;
      real_t tmp_75 = 0.66666666666666663;
      real_t tmp_76 = 0.66666666666666663;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.074999999999999983*tmp_48;
      real_t tmp_86 = 0.66666666666666663;
      real_t tmp_87 = 0.66666666666666663;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = tmp_29*tmp_89 + tmp_30*tmp_89 + tmp_31*tmp_89;
      real_t tmp_94 = (2.0/3.0)*tmp_93;
      real_t tmp_95 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_96 = 2*tmp_95;
      real_t tmp_97 = 0.074999999999999983*tmp_48;
      real_t tmp_98 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_99 = 2.0*tmp_31;
      real_t tmp_100 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_101 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_102 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_103 = tmp_19*(tmp_86 - 1.0);
      real_t tmp_104 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_105 = 2.0*tmp_30;
      real_t tmp_106 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_107 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_108 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_109 = tmp_19*(tmp_87 - 1.0);
      real_t tmp_110 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_111 = 2.0*tmp_29;
      real_t tmp_112 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_113 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_114 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_115 = tmp_19*(tmp_88 - 1.0);
      real_t tmp_116 = tmp_19*tmp_21;
      real_t tmp_117 = tmp_116*tmp_6;
      real_t tmp_118 = tmp_19*tmp_22;
      real_t tmp_119 = tmp_118*tmp_25;
      real_t tmp_120 = tmp_116*tmp_29;
      real_t tmp_121 = tmp_118*tmp_30;
      real_t tmp_122 = tmp_19*tmp_51;
      real_t tmp_123 = tmp_122*tmp_6;
      real_t tmp_124 = tmp_19*tmp_52;
      real_t tmp_125 = tmp_124*tmp_25;
      real_t tmp_126 = tmp_122*tmp_29;
      real_t tmp_127 = tmp_124*tmp_30;
      real_t tmp_128 = tmp_19*tmp_63;
      real_t tmp_129 = tmp_128*tmp_6;
      real_t tmp_130 = tmp_19*tmp_64;
      real_t tmp_131 = tmp_130*tmp_25;
      real_t tmp_132 = tmp_128*tmp_29;
      real_t tmp_133 = tmp_130*tmp_30;
      real_t tmp_134 = tmp_19*tmp_75;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_19*tmp_76;
      real_t tmp_137 = tmp_136*tmp_25;
      real_t tmp_138 = tmp_134*tmp_29;
      real_t tmp_139 = tmp_136*tmp_30;
      real_t tmp_140 = tmp_19*tmp_87;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_19*tmp_88;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = tmp_140*tmp_29;
      real_t tmp_145 = tmp_142*tmp_30;
      real_t tmp_146 = tmp_19*tmp_20;
      real_t tmp_147 = tmp_146*tmp_6;
      real_t tmp_148 = tmp_118*tmp_27;
      real_t tmp_149 = tmp_146*tmp_29;
      real_t tmp_150 = tmp_118*tmp_31;
      real_t tmp_151 = tmp_19*tmp_50;
      real_t tmp_152 = tmp_151*tmp_6;
      real_t tmp_153 = tmp_124*tmp_27;
      real_t tmp_154 = tmp_151*tmp_29;
      real_t tmp_155 = tmp_124*tmp_31;
      real_t tmp_156 = tmp_19*tmp_62;
      real_t tmp_157 = tmp_156*tmp_6;
      real_t tmp_158 = tmp_130*tmp_27;
      real_t tmp_159 = tmp_156*tmp_29;
      real_t tmp_160 = tmp_130*tmp_31;
      real_t tmp_161 = tmp_19*tmp_74;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = tmp_136*tmp_27;
      real_t tmp_164 = tmp_161*tmp_29;
      real_t tmp_165 = tmp_136*tmp_31;
      real_t tmp_166 = tmp_19*tmp_86;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_142*tmp_27;
      real_t tmp_169 = tmp_166*tmp_29;
      real_t tmp_170 = tmp_142*tmp_31;
      real_t tmp_171 = tmp_146*tmp_25;
      real_t tmp_172 = tmp_116*tmp_27;
      real_t tmp_173 = tmp_146*tmp_30;
      real_t tmp_174 = tmp_116*tmp_31;
      real_t tmp_175 = tmp_151*tmp_25;
      real_t tmp_176 = tmp_122*tmp_27;
      real_t tmp_177 = tmp_151*tmp_30;
      real_t tmp_178 = tmp_122*tmp_31;
      real_t tmp_179 = tmp_156*tmp_25;
      real_t tmp_180 = tmp_128*tmp_27;
      real_t tmp_181 = tmp_156*tmp_30;
      real_t tmp_182 = tmp_128*tmp_31;
      real_t tmp_183 = tmp_161*tmp_25;
      real_t tmp_184 = tmp_134*tmp_27;
      real_t tmp_185 = tmp_161*tmp_30;
      real_t tmp_186 = tmp_134*tmp_31;
      real_t tmp_187 = tmp_166*tmp_25;
      real_t tmp_188 = tmp_140*tmp_27;
      real_t tmp_189 = tmp_166*tmp_30;
      real_t tmp_190 = tmp_140*tmp_31;
      real_t tmp_191 = -tmp_21;
      real_t tmp_192 = 4.0 - tmp_20;
      real_t tmp_193 = tmp_19*(tmp_191 + tmp_192 - 2.0);
      real_t tmp_194 = -tmp_51;
      real_t tmp_195 = 4.0 - tmp_50;
      real_t tmp_196 = tmp_19*(tmp_194 + tmp_195 - 4.0);
      real_t tmp_197 = -tmp_63;
      real_t tmp_198 = 4.0 - tmp_62;
      real_t tmp_199 = tmp_19*(tmp_197 + tmp_198 - 1.3333333333333333);
      real_t tmp_200 = -tmp_75;
      real_t tmp_201 = 4.0 - tmp_74;
      real_t tmp_202 = tmp_19*(tmp_200 + tmp_201 - 1.3333333333333333);
      real_t tmp_203 = -tmp_87;
      real_t tmp_204 = 4.0 - tmp_86;
      real_t tmp_205 = tmp_19*(tmp_203 + tmp_204 - 1.3333333333333333);
      real_t tmp_206 = -tmp_22;
      real_t tmp_207 = tmp_19*(tmp_192 + tmp_206 - 2.0);
      real_t tmp_208 = -tmp_52;
      real_t tmp_209 = tmp_19*(tmp_195 + tmp_208 - 1.3333333333333333);
      real_t tmp_210 = -tmp_64;
      real_t tmp_211 = tmp_19*(tmp_198 + tmp_210 - 4.0);
      real_t tmp_212 = -tmp_76;
      real_t tmp_213 = tmp_19*(tmp_201 + tmp_212 - 1.3333333333333333);
      real_t tmp_214 = -tmp_88;
      real_t tmp_215 = tmp_19*(tmp_204 + tmp_214 - 1.3333333333333333);
      real_t tmp_216 = tmp_19*(tmp_191 + tmp_206 + 2.0);
      real_t tmp_217 = tmp_19*(tmp_194 + tmp_208 + 2.666666666666667);
      real_t tmp_218 = tmp_19*(tmp_197 + tmp_210 + 2.666666666666667);
      real_t tmp_219 = tmp_19*(tmp_200 + tmp_212);
      real_t tmp_220 = tmp_19*(tmp_203 + tmp_214 + 2.666666666666667);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80)) + tmp_97*(tmp_93*tmp_96 - tmp_94*(tmp_90 + tmp_91 + tmp_92));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_98 + tmp_34*tmp_98*tmp_99) + tmp_61*(-tmp_100*tmp_27*tmp_58 + tmp_100*tmp_59*tmp_99) + tmp_73*(-tmp_101*tmp_27*tmp_70 + tmp_101*tmp_71*tmp_99) + tmp_85*(-tmp_102*tmp_27*tmp_82 + tmp_102*tmp_83*tmp_99) + tmp_97*(-tmp_103*tmp_27*tmp_94 + tmp_103*tmp_95*tmp_99);
      real_t a_0_2 = tmp_49*(tmp_104*tmp_105*tmp_34 - tmp_104*tmp_25*tmp_33) + tmp_61*(tmp_105*tmp_106*tmp_59 - tmp_106*tmp_25*tmp_58) + tmp_73*(tmp_105*tmp_107*tmp_71 - tmp_107*tmp_25*tmp_70) + tmp_85*(tmp_105*tmp_108*tmp_83 - tmp_108*tmp_25*tmp_82) + tmp_97*(tmp_105*tmp_109*tmp_95 - tmp_109*tmp_25*tmp_94);
      real_t a_0_3 = tmp_49*(tmp_110*tmp_111*tmp_34 - tmp_110*tmp_33*tmp_6) + tmp_61*(tmp_111*tmp_112*tmp_59 - tmp_112*tmp_58*tmp_6) + tmp_73*(tmp_111*tmp_113*tmp_71 - tmp_113*tmp_6*tmp_70) + tmp_85*(tmp_111*tmp_114*tmp_83 - tmp_114*tmp_6*tmp_82) + tmp_97*(tmp_111*tmp_115*tmp_95 - tmp_115*tmp_6*tmp_94);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_117 + tmp_119) + tmp_35*(tmp_120 + tmp_121)) + tmp_61*(-tmp_58*(tmp_123 + tmp_125) + tmp_60*(tmp_126 + tmp_127)) + tmp_73*(-tmp_70*(tmp_129 + tmp_131) + tmp_72*(tmp_132 + tmp_133)) + tmp_85*(-tmp_82*(tmp_135 + tmp_137) + tmp_84*(tmp_138 + tmp_139)) + tmp_97*(-tmp_94*(tmp_141 + tmp_143) + tmp_96*(tmp_144 + tmp_145));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_147 + tmp_148) + tmp_35*(tmp_149 + tmp_150)) + tmp_61*(-tmp_58*(tmp_152 + tmp_153) + tmp_60*(tmp_154 + tmp_155)) + tmp_73*(-tmp_70*(tmp_157 + tmp_158) + tmp_72*(tmp_159 + tmp_160)) + tmp_85*(-tmp_82*(tmp_162 + tmp_163) + tmp_84*(tmp_164 + tmp_165)) + tmp_97*(-tmp_94*(tmp_167 + tmp_168) + tmp_96*(tmp_169 + tmp_170));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_171 + tmp_172) + tmp_35*(tmp_173 + tmp_174)) + tmp_61*(-tmp_58*(tmp_175 + tmp_176) + tmp_60*(tmp_177 + tmp_178)) + tmp_73*(-tmp_70*(tmp_179 + tmp_180) + tmp_72*(tmp_181 + tmp_182)) + tmp_85*(-tmp_82*(tmp_183 + tmp_184) + tmp_84*(tmp_185 + tmp_186)) + tmp_97*(-tmp_94*(tmp_187 + tmp_188) + tmp_96*(tmp_189 + tmp_190));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_119 - tmp_148 + tmp_193*tmp_6) + tmp_35*(-tmp_121 - tmp_150 + tmp_193*tmp_29)) + tmp_61*(-tmp_58*(-tmp_125 - tmp_153 + tmp_196*tmp_6) + tmp_60*(-tmp_127 - tmp_155 + tmp_196*tmp_29)) + tmp_73*(-tmp_70*(-tmp_131 - tmp_158 + tmp_199*tmp_6) + tmp_72*(-tmp_133 - tmp_160 + tmp_199*tmp_29)) + tmp_85*(-tmp_82*(-tmp_137 - tmp_163 + tmp_202*tmp_6) + tmp_84*(-tmp_139 - tmp_165 + tmp_202*tmp_29)) + tmp_97*(-tmp_94*(-tmp_143 - tmp_168 + tmp_205*tmp_6) + tmp_96*(-tmp_145 - tmp_170 + tmp_205*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_117 - tmp_172 + tmp_207*tmp_25) + tmp_35*(-tmp_120 - tmp_174 + tmp_207*tmp_30)) + tmp_61*(-tmp_58*(-tmp_123 - tmp_176 + tmp_209*tmp_25) + tmp_60*(-tmp_126 - tmp_178 + tmp_209*tmp_30)) + tmp_73*(-tmp_70*(-tmp_129 - tmp_180 + tmp_211*tmp_25) + tmp_72*(-tmp_132 - tmp_182 + tmp_211*tmp_30)) + tmp_85*(-tmp_82*(-tmp_135 - tmp_184 + tmp_213*tmp_25) + tmp_84*(-tmp_138 - tmp_186 + tmp_213*tmp_30)) + tmp_97*(-tmp_94*(-tmp_141 - tmp_188 + tmp_215*tmp_25) + tmp_96*(-tmp_144 - tmp_190 + tmp_215*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_147 - tmp_171 + tmp_216*tmp_27) + tmp_35*(-tmp_149 - tmp_173 + tmp_216*tmp_31)) + tmp_61*(-tmp_58*(-tmp_152 - tmp_175 + tmp_217*tmp_27) + tmp_60*(-tmp_154 - tmp_177 + tmp_217*tmp_31)) + tmp_73*(-tmp_70*(-tmp_157 - tmp_179 + tmp_218*tmp_27) + tmp_72*(-tmp_159 - tmp_181 + tmp_218*tmp_31)) + tmp_85*(-tmp_82*(-tmp_162 - tmp_183 + tmp_219*tmp_27) + tmp_84*(-tmp_164 - tmp_185 + tmp_219*tmp_31)) + tmp_97*(-tmp_94*(-tmp_167 - tmp_187 + tmp_220*tmp_27) + tmp_96*(-tmp_169 - tmp_189 + tmp_220*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_2_affine_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_2_affine_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_2_affine_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = 1.0;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_16 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_13 - tmp_18;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = -0.1333333333333333*tmp_63;
      real_t tmp_65 = 0.66666666666666663;
      real_t tmp_66 = 0.66666666666666663;
      real_t tmp_67 = 2.0;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.074999999999999983*tmp_63;
      real_t tmp_88 = 0.66666666666666663;
      real_t tmp_89 = 2.0;
      real_t tmp_90 = 0.66666666666666663;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.074999999999999983*tmp_63;
      real_t tmp_111 = 2.0;
      real_t tmp_112 = 0.66666666666666663;
      real_t tmp_113 = 0.66666666666666663;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.074999999999999983*tmp_63;
      real_t tmp_134 = 0.66666666666666663;
      real_t tmp_135 = 0.66666666666666663;
      real_t tmp_136 = 0.66666666666666663;
      real_t tmp_137 = tmp_20*(tmp_134 + tmp_135 + tmp_136 - 3.0);
      real_t tmp_138 = tmp_137*tmp_8;
      real_t tmp_139 = tmp_137*tmp_26;
      real_t tmp_140 = tmp_137*tmp_28;
      real_t tmp_141 = tmp_138 + tmp_139 + tmp_140;
      real_t tmp_142 = tmp_137*tmp_31;
      real_t tmp_143 = tmp_137*tmp_33;
      real_t tmp_144 = tmp_137*tmp_35;
      real_t tmp_145 = tmp_142 + tmp_143 + tmp_144;
      real_t tmp_146 = 0.5*tmp_142 + 0.5*tmp_143 + 0.5*tmp_144;
      real_t tmp_147 = 2*tmp_146;
      real_t tmp_148 = tmp_137*tmp_40;
      real_t tmp_149 = tmp_137*tmp_42;
      real_t tmp_150 = tmp_137*tmp_44;
      real_t tmp_151 = tmp_148 + tmp_149 + tmp_150;
      real_t tmp_152 = 0.5*tmp_148 + 0.5*tmp_149 + 0.5*tmp_150;
      real_t tmp_153 = 2*tmp_152;
      real_t tmp_154 = 1.0*tmp_138 + 1.0*tmp_139 + 1.0*tmp_140;
      real_t tmp_155 = 2.0*tmp_138 + 2.0*tmp_139 + 2.0*tmp_140;
      real_t tmp_156 = 0.074999999999999983*tmp_63;
      real_t tmp_157 = (2.0/3.0)*tmp_30;
      real_t tmp_158 = tmp_21 - 1.0;
      real_t tmp_159 = tmp_20*tmp_28;
      real_t tmp_160 = tmp_158*tmp_159;
      real_t tmp_161 = -tmp_157*tmp_160;
      real_t tmp_162 = 2.0*tmp_49;
      real_t tmp_163 = 2.0*tmp_20;
      real_t tmp_164 = tmp_158*tmp_163;
      real_t tmp_165 = tmp_164*tmp_35;
      real_t tmp_166 = tmp_164*tmp_44;
      real_t tmp_167 = (2.0/3.0)*tmp_72;
      real_t tmp_168 = tmp_65 - 1.0;
      real_t tmp_169 = tmp_159*tmp_168;
      real_t tmp_170 = -tmp_167*tmp_169;
      real_t tmp_171 = 2.0*tmp_85;
      real_t tmp_172 = tmp_163*tmp_168;
      real_t tmp_173 = tmp_172*tmp_35;
      real_t tmp_174 = tmp_172*tmp_44;
      real_t tmp_175 = (2.0/3.0)*tmp_95;
      real_t tmp_176 = tmp_88 - 1.0;
      real_t tmp_177 = tmp_159*tmp_176;
      real_t tmp_178 = -tmp_175*tmp_177;
      real_t tmp_179 = 2.0*tmp_108;
      real_t tmp_180 = tmp_163*tmp_176;
      real_t tmp_181 = tmp_180*tmp_35;
      real_t tmp_182 = tmp_180*tmp_44;
      real_t tmp_183 = (2.0/3.0)*tmp_118;
      real_t tmp_184 = tmp_111 - 1.0;
      real_t tmp_185 = tmp_159*tmp_184;
      real_t tmp_186 = -tmp_183*tmp_185;
      real_t tmp_187 = 2.0*tmp_131;
      real_t tmp_188 = tmp_163*tmp_184;
      real_t tmp_189 = tmp_188*tmp_35;
      real_t tmp_190 = tmp_188*tmp_44;
      real_t tmp_191 = (2.0/3.0)*tmp_141;
      real_t tmp_192 = tmp_134 - 1.0;
      real_t tmp_193 = tmp_159*tmp_192;
      real_t tmp_194 = -tmp_191*tmp_193;
      real_t tmp_195 = 2.0*tmp_154;
      real_t tmp_196 = tmp_163*tmp_192;
      real_t tmp_197 = tmp_196*tmp_35;
      real_t tmp_198 = tmp_196*tmp_44;
      real_t tmp_199 = tmp_22 - 1.0;
      real_t tmp_200 = tmp_20*tmp_26;
      real_t tmp_201 = tmp_199*tmp_200;
      real_t tmp_202 = -tmp_157*tmp_201;
      real_t tmp_203 = tmp_163*tmp_199;
      real_t tmp_204 = tmp_203*tmp_33;
      real_t tmp_205 = tmp_203*tmp_42;
      real_t tmp_206 = tmp_66 - 1.0;
      real_t tmp_207 = tmp_200*tmp_206;
      real_t tmp_208 = -tmp_167*tmp_207;
      real_t tmp_209 = tmp_163*tmp_206;
      real_t tmp_210 = tmp_209*tmp_33;
      real_t tmp_211 = tmp_209*tmp_42;
      real_t tmp_212 = tmp_89 - 1.0;
      real_t tmp_213 = tmp_200*tmp_212;
      real_t tmp_214 = -tmp_175*tmp_213;
      real_t tmp_215 = tmp_163*tmp_212;
      real_t tmp_216 = tmp_215*tmp_33;
      real_t tmp_217 = tmp_215*tmp_42;
      real_t tmp_218 = tmp_112 - 1.0;
      real_t tmp_219 = tmp_200*tmp_218;
      real_t tmp_220 = -tmp_183*tmp_219;
      real_t tmp_221 = tmp_163*tmp_218;
      real_t tmp_222 = tmp_221*tmp_33;
      real_t tmp_223 = tmp_221*tmp_42;
      real_t tmp_224 = tmp_135 - 1.0;
      real_t tmp_225 = tmp_200*tmp_224;
      real_t tmp_226 = -tmp_191*tmp_225;
      real_t tmp_227 = tmp_163*tmp_224;
      real_t tmp_228 = tmp_227*tmp_33;
      real_t tmp_229 = tmp_227*tmp_42;
      real_t tmp_230 = tmp_23 - 1.0;
      real_t tmp_231 = tmp_20*tmp_8;
      real_t tmp_232 = tmp_230*tmp_231;
      real_t tmp_233 = -tmp_157*tmp_232;
      real_t tmp_234 = tmp_163*tmp_230;
      real_t tmp_235 = tmp_234*tmp_31;
      real_t tmp_236 = tmp_234*tmp_40;
      real_t tmp_237 = tmp_67 - 1.0;
      real_t tmp_238 = tmp_231*tmp_237;
      real_t tmp_239 = -tmp_167*tmp_238;
      real_t tmp_240 = tmp_163*tmp_237;
      real_t tmp_241 = tmp_240*tmp_31;
      real_t tmp_242 = tmp_240*tmp_40;
      real_t tmp_243 = tmp_90 - 1.0;
      real_t tmp_244 = tmp_231*tmp_243;
      real_t tmp_245 = -tmp_175*tmp_244;
      real_t tmp_246 = tmp_163*tmp_243;
      real_t tmp_247 = tmp_246*tmp_31;
      real_t tmp_248 = tmp_246*tmp_40;
      real_t tmp_249 = tmp_113 - 1.0;
      real_t tmp_250 = tmp_231*tmp_249;
      real_t tmp_251 = -tmp_183*tmp_250;
      real_t tmp_252 = tmp_163*tmp_249;
      real_t tmp_253 = tmp_252*tmp_31;
      real_t tmp_254 = tmp_252*tmp_40;
      real_t tmp_255 = tmp_136 - 1.0;
      real_t tmp_256 = tmp_231*tmp_255;
      real_t tmp_257 = -tmp_191*tmp_256;
      real_t tmp_258 = tmp_163*tmp_255;
      real_t tmp_259 = tmp_258*tmp_31;
      real_t tmp_260 = tmp_258*tmp_40;
      real_t tmp_261 = tmp_22*tmp_231;
      real_t tmp_262 = tmp_200*tmp_23;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = -tmp_157*tmp_263;
      real_t tmp_265 = 2.0;
      real_t tmp_266 = tmp_231*tmp_265;
      real_t tmp_267 = 2.0;
      real_t tmp_268 = tmp_200*tmp_267;
      real_t tmp_269 = tmp_266 + tmp_268;
      real_t tmp_270 = tmp_20*tmp_22;
      real_t tmp_271 = tmp_270*tmp_31;
      real_t tmp_272 = tmp_20*tmp_23;
      real_t tmp_273 = tmp_272*tmp_33;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_270*tmp_40;
      real_t tmp_276 = tmp_272*tmp_42;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = tmp_231*tmp_66;
      real_t tmp_279 = tmp_200*tmp_67;
      real_t tmp_280 = tmp_278 + tmp_279;
      real_t tmp_281 = -tmp_167*tmp_280;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_231*tmp_282;
      real_t tmp_284 = 4.0;
      real_t tmp_285 = tmp_200*tmp_284;
      real_t tmp_286 = tmp_283 + tmp_285;
      real_t tmp_287 = tmp_20*tmp_66;
      real_t tmp_288 = tmp_287*tmp_31;
      real_t tmp_289 = tmp_20*tmp_67;
      real_t tmp_290 = tmp_289*tmp_33;
      real_t tmp_291 = tmp_288 + tmp_290;
      real_t tmp_292 = tmp_287*tmp_40;
      real_t tmp_293 = tmp_289*tmp_42;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_231*tmp_89;
      real_t tmp_296 = tmp_200*tmp_90;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = -tmp_175*tmp_297;
      real_t tmp_299 = 4.0;
      real_t tmp_300 = tmp_231*tmp_299;
      real_t tmp_301 = 1.3333333333333333;
      real_t tmp_302 = tmp_200*tmp_301;
      real_t tmp_303 = tmp_300 + tmp_302;
      real_t tmp_304 = tmp_20*tmp_89;
      real_t tmp_305 = tmp_304*tmp_31;
      real_t tmp_306 = tmp_20*tmp_90;
      real_t tmp_307 = tmp_306*tmp_33;
      real_t tmp_308 = tmp_305 + tmp_307;
      real_t tmp_309 = tmp_304*tmp_40;
      real_t tmp_310 = tmp_306*tmp_42;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_112*tmp_231;
      real_t tmp_313 = tmp_113*tmp_200;
      real_t tmp_314 = tmp_312 + tmp_313;
      real_t tmp_315 = -tmp_183*tmp_314;
      real_t tmp_316 = 1.3333333333333333;
      real_t tmp_317 = tmp_231*tmp_316;
      real_t tmp_318 = 1.3333333333333333;
      real_t tmp_319 = tmp_200*tmp_318;
      real_t tmp_320 = tmp_317 + tmp_319;
      real_t tmp_321 = tmp_112*tmp_20;
      real_t tmp_322 = tmp_31*tmp_321;
      real_t tmp_323 = tmp_113*tmp_20;
      real_t tmp_324 = tmp_323*tmp_33;
      real_t tmp_325 = tmp_322 + tmp_324;
      real_t tmp_326 = tmp_321*tmp_40;
      real_t tmp_327 = tmp_323*tmp_42;
      real_t tmp_328 = tmp_326 + tmp_327;
      real_t tmp_329 = tmp_135*tmp_231;
      real_t tmp_330 = tmp_136*tmp_200;
      real_t tmp_331 = tmp_329 + tmp_330;
      real_t tmp_332 = -tmp_191*tmp_331;
      real_t tmp_333 = 1.3333333333333333;
      real_t tmp_334 = tmp_231*tmp_333;
      real_t tmp_335 = 1.3333333333333333;
      real_t tmp_336 = tmp_200*tmp_335;
      real_t tmp_337 = tmp_334 + tmp_336;
      real_t tmp_338 = tmp_135*tmp_20;
      real_t tmp_339 = tmp_31*tmp_338;
      real_t tmp_340 = tmp_136*tmp_20;
      real_t tmp_341 = tmp_33*tmp_340;
      real_t tmp_342 = tmp_339 + tmp_341;
      real_t tmp_343 = tmp_338*tmp_40;
      real_t tmp_344 = tmp_340*tmp_42;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_21*tmp_231;
      real_t tmp_347 = tmp_159*tmp_23;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_157*tmp_348;
      real_t tmp_350 = 2.0;
      real_t tmp_351 = tmp_231*tmp_350;
      real_t tmp_352 = tmp_159*tmp_267;
      real_t tmp_353 = tmp_351 + tmp_352;
      real_t tmp_354 = tmp_20*tmp_21;
      real_t tmp_355 = tmp_31*tmp_354;
      real_t tmp_356 = tmp_272*tmp_35;
      real_t tmp_357 = tmp_355 + tmp_356;
      real_t tmp_358 = tmp_354*tmp_40;
      real_t tmp_359 = tmp_272*tmp_44;
      real_t tmp_360 = tmp_358 + tmp_359;
      real_t tmp_361 = tmp_231*tmp_65;
      real_t tmp_362 = tmp_159*tmp_67;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = -tmp_167*tmp_363;
      real_t tmp_365 = 1.3333333333333333;
      real_t tmp_366 = tmp_231*tmp_365;
      real_t tmp_367 = tmp_159*tmp_284;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_20*tmp_65;
      real_t tmp_370 = tmp_31*tmp_369;
      real_t tmp_371 = tmp_289*tmp_35;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_369*tmp_40;
      real_t tmp_374 = tmp_289*tmp_44;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_231*tmp_88;
      real_t tmp_377 = tmp_159*tmp_90;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = -tmp_175*tmp_378;
      real_t tmp_380 = 1.3333333333333333;
      real_t tmp_381 = tmp_231*tmp_380;
      real_t tmp_382 = tmp_159*tmp_301;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_20*tmp_88;
      real_t tmp_385 = tmp_31*tmp_384;
      real_t tmp_386 = tmp_306*tmp_35;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_384*tmp_40;
      real_t tmp_389 = tmp_306*tmp_44;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_111*tmp_231;
      real_t tmp_392 = tmp_113*tmp_159;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = -tmp_183*tmp_393;
      real_t tmp_395 = 4.0;
      real_t tmp_396 = tmp_231*tmp_395;
      real_t tmp_397 = tmp_159*tmp_318;
      real_t tmp_398 = tmp_396 + tmp_397;
      real_t tmp_399 = tmp_111*tmp_20;
      real_t tmp_400 = tmp_31*tmp_399;
      real_t tmp_401 = tmp_323*tmp_35;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_399*tmp_40;
      real_t tmp_404 = tmp_323*tmp_44;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_134*tmp_231;
      real_t tmp_407 = tmp_136*tmp_159;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_191*tmp_408;
      real_t tmp_410 = 1.3333333333333333;
      real_t tmp_411 = tmp_231*tmp_410;
      real_t tmp_412 = tmp_159*tmp_335;
      real_t tmp_413 = tmp_411 + tmp_412;
      real_t tmp_414 = tmp_134*tmp_20;
      real_t tmp_415 = tmp_31*tmp_414;
      real_t tmp_416 = tmp_340*tmp_35;
      real_t tmp_417 = tmp_415 + tmp_416;
      real_t tmp_418 = tmp_40*tmp_414;
      real_t tmp_419 = tmp_340*tmp_44;
      real_t tmp_420 = tmp_418 + tmp_419;
      real_t tmp_421 = tmp_200*tmp_21;
      real_t tmp_422 = tmp_159*tmp_22;
      real_t tmp_423 = tmp_421 + tmp_422;
      real_t tmp_424 = -tmp_157*tmp_423;
      real_t tmp_425 = tmp_200*tmp_350;
      real_t tmp_426 = tmp_159*tmp_265;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = tmp_33*tmp_354;
      real_t tmp_429 = tmp_270*tmp_35;
      real_t tmp_430 = tmp_428 + tmp_429;
      real_t tmp_431 = tmp_354*tmp_42;
      real_t tmp_432 = tmp_270*tmp_44;
      real_t tmp_433 = tmp_431 + tmp_432;
      real_t tmp_434 = tmp_200*tmp_65;
      real_t tmp_435 = tmp_159*tmp_66;
      real_t tmp_436 = tmp_434 + tmp_435;
      real_t tmp_437 = -tmp_167*tmp_436;
      real_t tmp_438 = tmp_200*tmp_365;
      real_t tmp_439 = tmp_159*tmp_282;
      real_t tmp_440 = tmp_438 + tmp_439;
      real_t tmp_441 = tmp_33*tmp_369;
      real_t tmp_442 = tmp_287*tmp_35;
      real_t tmp_443 = tmp_441 + tmp_442;
      real_t tmp_444 = tmp_369*tmp_42;
      real_t tmp_445 = tmp_287*tmp_44;
      real_t tmp_446 = tmp_444 + tmp_445;
      real_t tmp_447 = tmp_200*tmp_88;
      real_t tmp_448 = tmp_159*tmp_89;
      real_t tmp_449 = tmp_447 + tmp_448;
      real_t tmp_450 = -tmp_175*tmp_449;
      real_t tmp_451 = tmp_200*tmp_380;
      real_t tmp_452 = tmp_159*tmp_299;
      real_t tmp_453 = tmp_451 + tmp_452;
      real_t tmp_454 = tmp_33*tmp_384;
      real_t tmp_455 = tmp_304*tmp_35;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = tmp_384*tmp_42;
      real_t tmp_458 = tmp_304*tmp_44;
      real_t tmp_459 = tmp_457 + tmp_458;
      real_t tmp_460 = tmp_111*tmp_200;
      real_t tmp_461 = tmp_112*tmp_159;
      real_t tmp_462 = tmp_460 + tmp_461;
      real_t tmp_463 = -tmp_183*tmp_462;
      real_t tmp_464 = tmp_200*tmp_395;
      real_t tmp_465 = tmp_159*tmp_316;
      real_t tmp_466 = tmp_464 + tmp_465;
      real_t tmp_467 = tmp_33*tmp_399;
      real_t tmp_468 = tmp_321*tmp_35;
      real_t tmp_469 = tmp_467 + tmp_468;
      real_t tmp_470 = tmp_399*tmp_42;
      real_t tmp_471 = tmp_321*tmp_44;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = tmp_134*tmp_200;
      real_t tmp_474 = tmp_135*tmp_159;
      real_t tmp_475 = tmp_473 + tmp_474;
      real_t tmp_476 = -tmp_191*tmp_475;
      real_t tmp_477 = tmp_200*tmp_410;
      real_t tmp_478 = tmp_159*tmp_333;
      real_t tmp_479 = tmp_477 + tmp_478;
      real_t tmp_480 = tmp_33*tmp_414;
      real_t tmp_481 = tmp_338*tmp_35;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = tmp_414*tmp_42;
      real_t tmp_484 = tmp_338*tmp_44;
      real_t tmp_485 = tmp_483 + tmp_484;
      real_t tmp_486 = -tmp_22;
      real_t tmp_487 = 4.0 - tmp_21;
      real_t tmp_488 = tmp_20*(-tmp_267 + tmp_486 + tmp_487);
      real_t tmp_489 = tmp_488*tmp_8;
      real_t tmp_490 = -tmp_262 - tmp_347;
      real_t tmp_491 = tmp_489 + tmp_490;
      real_t tmp_492 = -tmp_157*tmp_491;
      real_t tmp_493 = -tmp_268 - tmp_352 + 2.0*tmp_489;
      real_t tmp_494 = tmp_31*tmp_488;
      real_t tmp_495 = -tmp_273 - tmp_356 + tmp_494;
      real_t tmp_496 = tmp_40*tmp_488;
      real_t tmp_497 = -tmp_276 - tmp_359 + tmp_496;
      real_t tmp_498 = -tmp_66;
      real_t tmp_499 = 4.0 - tmp_65;
      real_t tmp_500 = tmp_20*(-tmp_284 + tmp_498 + tmp_499);
      real_t tmp_501 = tmp_500*tmp_8;
      real_t tmp_502 = -tmp_279 - tmp_362;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_167*tmp_503;
      real_t tmp_505 = -tmp_285 - tmp_367 + 2.0*tmp_501;
      real_t tmp_506 = tmp_31*tmp_500;
      real_t tmp_507 = -tmp_290 - tmp_371 + tmp_506;
      real_t tmp_508 = tmp_40*tmp_500;
      real_t tmp_509 = -tmp_293 - tmp_374 + tmp_508;
      real_t tmp_510 = -tmp_89;
      real_t tmp_511 = 4.0 - tmp_88;
      real_t tmp_512 = tmp_20*(-tmp_301 + tmp_510 + tmp_511);
      real_t tmp_513 = tmp_512*tmp_8;
      real_t tmp_514 = -tmp_296 - tmp_377;
      real_t tmp_515 = tmp_513 + tmp_514;
      real_t tmp_516 = -tmp_175*tmp_515;
      real_t tmp_517 = -tmp_302 - tmp_382 + 2.0*tmp_513;
      real_t tmp_518 = tmp_31*tmp_512;
      real_t tmp_519 = -tmp_307 - tmp_386 + tmp_518;
      real_t tmp_520 = tmp_40*tmp_512;
      real_t tmp_521 = -tmp_310 - tmp_389 + tmp_520;
      real_t tmp_522 = -tmp_112;
      real_t tmp_523 = 4.0 - tmp_111;
      real_t tmp_524 = tmp_20*(-tmp_318 + tmp_522 + tmp_523);
      real_t tmp_525 = tmp_524*tmp_8;
      real_t tmp_526 = -tmp_313 - tmp_392;
      real_t tmp_527 = tmp_525 + tmp_526;
      real_t tmp_528 = -tmp_183*tmp_527;
      real_t tmp_529 = -tmp_319 - tmp_397 + 2.0*tmp_525;
      real_t tmp_530 = tmp_31*tmp_524;
      real_t tmp_531 = -tmp_324 - tmp_401 + tmp_530;
      real_t tmp_532 = tmp_40*tmp_524;
      real_t tmp_533 = -tmp_327 - tmp_404 + tmp_532;
      real_t tmp_534 = -tmp_135;
      real_t tmp_535 = 4.0 - tmp_134;
      real_t tmp_536 = tmp_20*(-tmp_335 + tmp_534 + tmp_535);
      real_t tmp_537 = tmp_536*tmp_8;
      real_t tmp_538 = -tmp_330 - tmp_407;
      real_t tmp_539 = tmp_537 + tmp_538;
      real_t tmp_540 = -tmp_191*tmp_539;
      real_t tmp_541 = -tmp_336 - tmp_412 + 2.0*tmp_537;
      real_t tmp_542 = tmp_31*tmp_536;
      real_t tmp_543 = -tmp_341 - tmp_416 + tmp_542;
      real_t tmp_544 = tmp_40*tmp_536;
      real_t tmp_545 = -tmp_344 - tmp_419 + tmp_544;
      real_t tmp_546 = -tmp_23;
      real_t tmp_547 = tmp_20*(-tmp_265 + tmp_487 + tmp_546);
      real_t tmp_548 = tmp_26*tmp_547;
      real_t tmp_549 = -tmp_261 - tmp_422;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = -tmp_157*tmp_550;
      real_t tmp_552 = -tmp_266 - tmp_426 + 2.0*tmp_548;
      real_t tmp_553 = tmp_33*tmp_547;
      real_t tmp_554 = -tmp_271 - tmp_429 + tmp_553;
      real_t tmp_555 = tmp_42*tmp_547;
      real_t tmp_556 = -tmp_275 - tmp_432 + tmp_555;
      real_t tmp_557 = -tmp_67;
      real_t tmp_558 = tmp_20*(-tmp_282 + tmp_499 + tmp_557);
      real_t tmp_559 = tmp_26*tmp_558;
      real_t tmp_560 = -tmp_278 - tmp_435;
      real_t tmp_561 = tmp_559 + tmp_560;
      real_t tmp_562 = -tmp_167*tmp_561;
      real_t tmp_563 = -tmp_283 - tmp_439 + 2.0*tmp_559;
      real_t tmp_564 = tmp_33*tmp_558;
      real_t tmp_565 = -tmp_288 - tmp_442 + tmp_564;
      real_t tmp_566 = tmp_42*tmp_558;
      real_t tmp_567 = -tmp_292 - tmp_445 + tmp_566;
      real_t tmp_568 = -tmp_90;
      real_t tmp_569 = tmp_20*(-tmp_299 + tmp_511 + tmp_568);
      real_t tmp_570 = tmp_26*tmp_569;
      real_t tmp_571 = -tmp_295 - tmp_448;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = -tmp_175*tmp_572;
      real_t tmp_574 = -tmp_300 - tmp_452 + 2.0*tmp_570;
      real_t tmp_575 = tmp_33*tmp_569;
      real_t tmp_576 = -tmp_305 - tmp_455 + tmp_575;
      real_t tmp_577 = tmp_42*tmp_569;
      real_t tmp_578 = -tmp_309 - tmp_458 + tmp_577;
      real_t tmp_579 = -tmp_113;
      real_t tmp_580 = tmp_20*(-tmp_316 + tmp_523 + tmp_579);
      real_t tmp_581 = tmp_26*tmp_580;
      real_t tmp_582 = -tmp_312 - tmp_461;
      real_t tmp_583 = tmp_581 + tmp_582;
      real_t tmp_584 = -tmp_183*tmp_583;
      real_t tmp_585 = -tmp_317 - tmp_465 + 2.0*tmp_581;
      real_t tmp_586 = tmp_33*tmp_580;
      real_t tmp_587 = -tmp_322 - tmp_468 + tmp_586;
      real_t tmp_588 = tmp_42*tmp_580;
      real_t tmp_589 = -tmp_326 - tmp_471 + tmp_588;
      real_t tmp_590 = -tmp_136;
      real_t tmp_591 = tmp_20*(-tmp_333 + tmp_535 + tmp_590);
      real_t tmp_592 = tmp_26*tmp_591;
      real_t tmp_593 = -tmp_329 - tmp_474;
      real_t tmp_594 = tmp_592 + tmp_593;
      real_t tmp_595 = -tmp_191*tmp_594;
      real_t tmp_596 = -tmp_334 - tmp_478 + 2.0*tmp_592;
      real_t tmp_597 = tmp_33*tmp_591;
      real_t tmp_598 = -tmp_339 - tmp_481 + tmp_597;
      real_t tmp_599 = tmp_42*tmp_591;
      real_t tmp_600 = -tmp_343 - tmp_484 + tmp_599;
      real_t tmp_601 = tmp_20*(-tmp_350 + tmp_486 + tmp_546 + 4.0);
      real_t tmp_602 = tmp_28*tmp_601;
      real_t tmp_603 = -tmp_346 - tmp_421;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = -tmp_157*tmp_604;
      real_t tmp_606 = -tmp_351 - tmp_425 + 2.0*tmp_602;
      real_t tmp_607 = tmp_35*tmp_601;
      real_t tmp_608 = -tmp_355 - tmp_428 + tmp_607;
      real_t tmp_609 = tmp_44*tmp_601;
      real_t tmp_610 = -tmp_358 - tmp_431 + tmp_609;
      real_t tmp_611 = tmp_20*(-tmp_365 + tmp_498 + tmp_557 + 4.0);
      real_t tmp_612 = tmp_28*tmp_611;
      real_t tmp_613 = -tmp_361 - tmp_434;
      real_t tmp_614 = tmp_612 + tmp_613;
      real_t tmp_615 = -tmp_167*tmp_614;
      real_t tmp_616 = -tmp_366 - tmp_438 + 2.0*tmp_612;
      real_t tmp_617 = tmp_35*tmp_611;
      real_t tmp_618 = -tmp_370 - tmp_441 + tmp_617;
      real_t tmp_619 = tmp_44*tmp_611;
      real_t tmp_620 = -tmp_373 - tmp_444 + tmp_619;
      real_t tmp_621 = tmp_20*(-tmp_380 + tmp_510 + tmp_568 + 4.0);
      real_t tmp_622 = tmp_28*tmp_621;
      real_t tmp_623 = -tmp_376 - tmp_447;
      real_t tmp_624 = tmp_622 + tmp_623;
      real_t tmp_625 = -tmp_175*tmp_624;
      real_t tmp_626 = -tmp_381 - tmp_451 + 2.0*tmp_622;
      real_t tmp_627 = tmp_35*tmp_621;
      real_t tmp_628 = -tmp_385 - tmp_454 + tmp_627;
      real_t tmp_629 = tmp_44*tmp_621;
      real_t tmp_630 = -tmp_388 - tmp_457 + tmp_629;
      real_t tmp_631 = tmp_20*(-tmp_395 + tmp_522 + tmp_579 + 4.0);
      real_t tmp_632 = tmp_28*tmp_631;
      real_t tmp_633 = -tmp_391 - tmp_460;
      real_t tmp_634 = tmp_632 + tmp_633;
      real_t tmp_635 = -tmp_183*tmp_634;
      real_t tmp_636 = -tmp_396 - tmp_464 + 2.0*tmp_632;
      real_t tmp_637 = tmp_35*tmp_631;
      real_t tmp_638 = -tmp_400 - tmp_467 + tmp_637;
      real_t tmp_639 = tmp_44*tmp_631;
      real_t tmp_640 = -tmp_403 - tmp_470 + tmp_639;
      real_t tmp_641 = tmp_20*(-tmp_410 + tmp_534 + tmp_590 + 4.0);
      real_t tmp_642 = tmp_28*tmp_641;
      real_t tmp_643 = -tmp_406 - tmp_473;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = -tmp_191*tmp_644;
      real_t tmp_646 = -tmp_411 - tmp_477 + 2.0*tmp_642;
      real_t tmp_647 = tmp_35*tmp_641;
      real_t tmp_648 = -tmp_415 - tmp_480 + tmp_647;
      real_t tmp_649 = tmp_44*tmp_641;
      real_t tmp_650 = -tmp_418 - tmp_483 + tmp_649;
      real_t tmp_651 = 1.0*tmp_20;
      real_t tmp_652 = tmp_158*tmp_651;
      real_t tmp_653 = tmp_35*tmp_652;
      real_t tmp_654 = tmp_44*tmp_652;
      real_t tmp_655 = 1.0*tmp_160;
      real_t tmp_656 = tmp_168*tmp_651;
      real_t tmp_657 = tmp_35*tmp_656;
      real_t tmp_658 = tmp_44*tmp_656;
      real_t tmp_659 = 1.0*tmp_169;
      real_t tmp_660 = tmp_176*tmp_651;
      real_t tmp_661 = tmp_35*tmp_660;
      real_t tmp_662 = tmp_44*tmp_660;
      real_t tmp_663 = 1.0*tmp_177;
      real_t tmp_664 = tmp_184*tmp_651;
      real_t tmp_665 = tmp_35*tmp_664;
      real_t tmp_666 = tmp_44*tmp_664;
      real_t tmp_667 = 1.0*tmp_185;
      real_t tmp_668 = tmp_192*tmp_651;
      real_t tmp_669 = tmp_35*tmp_668;
      real_t tmp_670 = tmp_44*tmp_668;
      real_t tmp_671 = 1.0*tmp_193;
      real_t tmp_672 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_673 = 0;
      real_t tmp_674 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_675 = (tmp_35*tmp_35);
      real_t tmp_676 = 16.0*tmp_673;
      real_t tmp_677 = (tmp_44*tmp_44);
      real_t tmp_678 = 0.0069444444444444458*tmp_672;
      real_t tmp_679 = 16.0*tmp_678;
      real_t tmp_680 = 0.0069444444444444458*tmp_672;
      real_t tmp_681 = 16.0*tmp_680;
      real_t tmp_682 = 0.0625*tmp_672;
      real_t tmp_683 = 16.0*tmp_682;
      real_t tmp_684 = 0.0069444444444444458*tmp_672;
      real_t tmp_685 = 16.0*tmp_684;
      real_t tmp_686 = tmp_158*tmp_199;
      real_t tmp_687 = 1.3333333333333335*tmp_28*tmp_672;
      real_t tmp_688 = tmp_26*tmp_687;
      real_t tmp_689 = 1.0*tmp_672;
      real_t tmp_690 = tmp_35*tmp_689;
      real_t tmp_691 = tmp_33*tmp_690;
      real_t tmp_692 = tmp_44*tmp_689;
      real_t tmp_693 = tmp_42*tmp_692;
      real_t tmp_694 = tmp_168*tmp_206;
      real_t tmp_695 = tmp_176*tmp_212;
      real_t tmp_696 = tmp_184*tmp_218;
      real_t tmp_697 = tmp_192*tmp_224;
      real_t tmp_698 = tmp_110*(tmp_688*tmp_695 + tmp_691*tmp_695 + tmp_693*tmp_695) + tmp_133*(tmp_688*tmp_696 + tmp_691*tmp_696 + tmp_693*tmp_696) + tmp_156*(tmp_688*tmp_697 + tmp_691*tmp_697 + tmp_693*tmp_697) + tmp_64*(tmp_686*tmp_688 + tmp_686*tmp_691 + tmp_686*tmp_693) + tmp_87*(tmp_688*tmp_694 + tmp_691*tmp_694 + tmp_693*tmp_694);
      real_t tmp_699 = tmp_158*tmp_230;
      real_t tmp_700 = tmp_687*tmp_8;
      real_t tmp_701 = tmp_31*tmp_690;
      real_t tmp_702 = tmp_40*tmp_692;
      real_t tmp_703 = tmp_168*tmp_237;
      real_t tmp_704 = tmp_176*tmp_243;
      real_t tmp_705 = tmp_184*tmp_249;
      real_t tmp_706 = tmp_192*tmp_255;
      real_t tmp_707 = tmp_110*(tmp_700*tmp_704 + tmp_701*tmp_704 + tmp_702*tmp_704) + tmp_133*(tmp_700*tmp_705 + tmp_701*tmp_705 + tmp_702*tmp_705) + tmp_156*(tmp_700*tmp_706 + tmp_701*tmp_706 + tmp_702*tmp_706) + tmp_64*(tmp_699*tmp_700 + tmp_699*tmp_701 + tmp_699*tmp_702) + tmp_87*(tmp_700*tmp_703 + tmp_701*tmp_703 + tmp_702*tmp_703);
      real_t tmp_708 = (2.0/3.0)*tmp_263;
      real_t tmp_709 = (2.0/3.0)*tmp_280;
      real_t tmp_710 = (2.0/3.0)*tmp_297;
      real_t tmp_711 = (2.0/3.0)*tmp_314;
      real_t tmp_712 = (2.0/3.0)*tmp_331;
      real_t tmp_713 = (2.0/3.0)*tmp_348;
      real_t tmp_714 = (2.0/3.0)*tmp_363;
      real_t tmp_715 = (2.0/3.0)*tmp_378;
      real_t tmp_716 = (2.0/3.0)*tmp_393;
      real_t tmp_717 = (2.0/3.0)*tmp_408;
      real_t tmp_718 = (2.0/3.0)*tmp_423;
      real_t tmp_719 = (2.0/3.0)*tmp_436;
      real_t tmp_720 = (2.0/3.0)*tmp_449;
      real_t tmp_721 = (2.0/3.0)*tmp_462;
      real_t tmp_722 = (2.0/3.0)*tmp_475;
      real_t tmp_723 = (2.0/3.0)*tmp_491;
      real_t tmp_724 = -tmp_160*tmp_723;
      real_t tmp_725 = (2.0/3.0)*tmp_503;
      real_t tmp_726 = -tmp_169*tmp_725;
      real_t tmp_727 = (2.0/3.0)*tmp_515;
      real_t tmp_728 = -tmp_177*tmp_727;
      real_t tmp_729 = (2.0/3.0)*tmp_527;
      real_t tmp_730 = -tmp_185*tmp_729;
      real_t tmp_731 = (2.0/3.0)*tmp_539;
      real_t tmp_732 = -tmp_193*tmp_731;
      real_t tmp_733 = (2.0/3.0)*tmp_550;
      real_t tmp_734 = -tmp_160*tmp_733;
      real_t tmp_735 = (2.0/3.0)*tmp_561;
      real_t tmp_736 = -tmp_169*tmp_735;
      real_t tmp_737 = (2.0/3.0)*tmp_572;
      real_t tmp_738 = -tmp_177*tmp_737;
      real_t tmp_739 = (2.0/3.0)*tmp_583;
      real_t tmp_740 = -tmp_185*tmp_739;
      real_t tmp_741 = (2.0/3.0)*tmp_594;
      real_t tmp_742 = -tmp_193*tmp_741;
      real_t tmp_743 = (2.0/3.0)*tmp_604;
      real_t tmp_744 = -tmp_160*tmp_743;
      real_t tmp_745 = (2.0/3.0)*tmp_614;
      real_t tmp_746 = -tmp_169*tmp_745;
      real_t tmp_747 = (2.0/3.0)*tmp_624;
      real_t tmp_748 = -tmp_177*tmp_747;
      real_t tmp_749 = (2.0/3.0)*tmp_634;
      real_t tmp_750 = -tmp_185*tmp_749;
      real_t tmp_751 = (2.0/3.0)*tmp_644;
      real_t tmp_752 = -tmp_193*tmp_751;
      real_t tmp_753 = tmp_199*tmp_651;
      real_t tmp_754 = tmp_33*tmp_753;
      real_t tmp_755 = tmp_42*tmp_753;
      real_t tmp_756 = 1.0*tmp_201;
      real_t tmp_757 = tmp_206*tmp_651;
      real_t tmp_758 = tmp_33*tmp_757;
      real_t tmp_759 = tmp_42*tmp_757;
      real_t tmp_760 = 1.0*tmp_207;
      real_t tmp_761 = tmp_212*tmp_651;
      real_t tmp_762 = tmp_33*tmp_761;
      real_t tmp_763 = tmp_42*tmp_761;
      real_t tmp_764 = 1.0*tmp_213;
      real_t tmp_765 = tmp_218*tmp_651;
      real_t tmp_766 = tmp_33*tmp_765;
      real_t tmp_767 = tmp_42*tmp_765;
      real_t tmp_768 = 1.0*tmp_219;
      real_t tmp_769 = tmp_224*tmp_651;
      real_t tmp_770 = tmp_33*tmp_769;
      real_t tmp_771 = tmp_42*tmp_769;
      real_t tmp_772 = 1.0*tmp_225;
      real_t tmp_773 = 0;
      real_t tmp_774 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_775 = (tmp_33*tmp_33);
      real_t tmp_776 = 16.0*tmp_773;
      real_t tmp_777 = (tmp_42*tmp_42);
      real_t tmp_778 = 0.0069444444444444458*tmp_672;
      real_t tmp_779 = 16.0*tmp_778;
      real_t tmp_780 = 0.0625*tmp_672;
      real_t tmp_781 = 16.0*tmp_780;
      real_t tmp_782 = 0.0069444444444444458*tmp_672;
      real_t tmp_783 = 16.0*tmp_782;
      real_t tmp_784 = 0.0069444444444444458*tmp_672;
      real_t tmp_785 = 16.0*tmp_784;
      real_t tmp_786 = tmp_199*tmp_230;
      real_t tmp_787 = 1.3333333333333335*tmp_26*tmp_672*tmp_8;
      real_t tmp_788 = tmp_689*tmp_786;
      real_t tmp_789 = tmp_31*tmp_33;
      real_t tmp_790 = tmp_40*tmp_42;
      real_t tmp_791 = tmp_206*tmp_237;
      real_t tmp_792 = tmp_689*tmp_789;
      real_t tmp_793 = tmp_689*tmp_790;
      real_t tmp_794 = tmp_212*tmp_243;
      real_t tmp_795 = tmp_218*tmp_249;
      real_t tmp_796 = tmp_224*tmp_255;
      real_t tmp_797 = tmp_110*(tmp_787*tmp_794 + tmp_792*tmp_794 + tmp_793*tmp_794) + tmp_133*(tmp_787*tmp_795 + tmp_792*tmp_795 + tmp_793*tmp_795) + tmp_156*(tmp_787*tmp_796 + tmp_792*tmp_796 + tmp_793*tmp_796) + tmp_64*(tmp_786*tmp_787 + tmp_788*tmp_789 + tmp_788*tmp_790) + tmp_87*(tmp_787*tmp_791 + tmp_791*tmp_792 + tmp_791*tmp_793);
      real_t tmp_798 = -tmp_201*tmp_723;
      real_t tmp_799 = -tmp_207*tmp_725;
      real_t tmp_800 = -tmp_213*tmp_727;
      real_t tmp_801 = -tmp_219*tmp_729;
      real_t tmp_802 = -tmp_225*tmp_731;
      real_t tmp_803 = -tmp_201*tmp_733;
      real_t tmp_804 = -tmp_207*tmp_735;
      real_t tmp_805 = -tmp_213*tmp_737;
      real_t tmp_806 = -tmp_219*tmp_739;
      real_t tmp_807 = -tmp_225*tmp_741;
      real_t tmp_808 = -tmp_201*tmp_743;
      real_t tmp_809 = -tmp_207*tmp_745;
      real_t tmp_810 = -tmp_213*tmp_747;
      real_t tmp_811 = -tmp_219*tmp_749;
      real_t tmp_812 = -tmp_225*tmp_751;
      real_t tmp_813 = tmp_230*tmp_651;
      real_t tmp_814 = tmp_31*tmp_813;
      real_t tmp_815 = tmp_40*tmp_813;
      real_t tmp_816 = 1.0*tmp_232;
      real_t tmp_817 = tmp_237*tmp_651;
      real_t tmp_818 = tmp_31*tmp_817;
      real_t tmp_819 = tmp_40*tmp_817;
      real_t tmp_820 = 1.0*tmp_238;
      real_t tmp_821 = tmp_243*tmp_651;
      real_t tmp_822 = tmp_31*tmp_821;
      real_t tmp_823 = tmp_40*tmp_821;
      real_t tmp_824 = 1.0*tmp_244;
      real_t tmp_825 = tmp_249*tmp_651;
      real_t tmp_826 = tmp_31*tmp_825;
      real_t tmp_827 = tmp_40*tmp_825;
      real_t tmp_828 = 1.0*tmp_250;
      real_t tmp_829 = tmp_255*tmp_651;
      real_t tmp_830 = tmp_31*tmp_829;
      real_t tmp_831 = tmp_40*tmp_829;
      real_t tmp_832 = 1.0*tmp_256;
      real_t tmp_833 = 0;
      real_t tmp_834 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_835 = (tmp_31*tmp_31);
      real_t tmp_836 = 16.0*tmp_833;
      real_t tmp_837 = (tmp_40*tmp_40);
      real_t tmp_838 = 0.0625*tmp_672;
      real_t tmp_839 = 16.0*tmp_838;
      real_t tmp_840 = 0.0069444444444444458*tmp_672;
      real_t tmp_841 = 16.0*tmp_840;
      real_t tmp_842 = 0.0069444444444444458*tmp_672;
      real_t tmp_843 = 16.0*tmp_842;
      real_t tmp_844 = 0.0069444444444444458*tmp_672;
      real_t tmp_845 = 16.0*tmp_844;
      real_t tmp_846 = -tmp_232*tmp_723;
      real_t tmp_847 = -tmp_238*tmp_725;
      real_t tmp_848 = -tmp_244*tmp_727;
      real_t tmp_849 = -tmp_250*tmp_729;
      real_t tmp_850 = -tmp_256*tmp_731;
      real_t tmp_851 = -tmp_232*tmp_733;
      real_t tmp_852 = -tmp_238*tmp_735;
      real_t tmp_853 = -tmp_244*tmp_737;
      real_t tmp_854 = -tmp_250*tmp_739;
      real_t tmp_855 = -tmp_256*tmp_741;
      real_t tmp_856 = -tmp_232*tmp_743;
      real_t tmp_857 = -tmp_238*tmp_745;
      real_t tmp_858 = -tmp_244*tmp_747;
      real_t tmp_859 = -tmp_250*tmp_749;
      real_t tmp_860 = -tmp_256*tmp_751;
      real_t tmp_861 = 0.25*tmp_163;
      real_t tmp_862 = tmp_31*tmp_861;
      real_t tmp_863 = 0.25*tmp_163;
      real_t tmp_864 = tmp_33*tmp_863;
      real_t tmp_865 = tmp_862 + tmp_864;
      real_t tmp_866 = 2*tmp_865;
      real_t tmp_867 = tmp_40*tmp_861;
      real_t tmp_868 = tmp_42*tmp_863;
      real_t tmp_869 = tmp_867 + tmp_868;
      real_t tmp_870 = 2*tmp_869;
      real_t tmp_871 = 0.16666666666666666*tmp_163;
      real_t tmp_872 = tmp_31*tmp_871;
      real_t tmp_873 = 0.5*tmp_163;
      real_t tmp_874 = tmp_33*tmp_873;
      real_t tmp_875 = tmp_872 + tmp_874;
      real_t tmp_876 = 2*tmp_875;
      real_t tmp_877 = tmp_40*tmp_871;
      real_t tmp_878 = tmp_42*tmp_873;
      real_t tmp_879 = tmp_877 + tmp_878;
      real_t tmp_880 = 2*tmp_879;
      real_t tmp_881 = 0.5*tmp_163;
      real_t tmp_882 = tmp_31*tmp_881;
      real_t tmp_883 = 0.16666666666666666*tmp_163;
      real_t tmp_884 = tmp_33*tmp_883;
      real_t tmp_885 = tmp_882 + tmp_884;
      real_t tmp_886 = 2*tmp_885;
      real_t tmp_887 = tmp_40*tmp_881;
      real_t tmp_888 = tmp_42*tmp_883;
      real_t tmp_889 = tmp_887 + tmp_888;
      real_t tmp_890 = 2*tmp_889;
      real_t tmp_891 = 0.16666666666666666*tmp_163;
      real_t tmp_892 = tmp_31*tmp_891;
      real_t tmp_893 = 0.16666666666666666*tmp_163;
      real_t tmp_894 = tmp_33*tmp_893;
      real_t tmp_895 = tmp_892 + tmp_894;
      real_t tmp_896 = 2*tmp_895;
      real_t tmp_897 = tmp_40*tmp_891;
      real_t tmp_898 = tmp_42*tmp_893;
      real_t tmp_899 = tmp_897 + tmp_898;
      real_t tmp_900 = 2*tmp_899;
      real_t tmp_901 = 0.16666666666666666*tmp_163;
      real_t tmp_902 = tmp_31*tmp_901;
      real_t tmp_903 = 0.16666666666666666*tmp_163;
      real_t tmp_904 = tmp_33*tmp_903;
      real_t tmp_905 = tmp_902 + tmp_904;
      real_t tmp_906 = 2*tmp_905;
      real_t tmp_907 = tmp_40*tmp_901;
      real_t tmp_908 = tmp_42*tmp_903;
      real_t tmp_909 = tmp_907 + tmp_908;
      real_t tmp_910 = 2*tmp_909;
      real_t tmp_911 = 1.3333333333333335*tmp_263;
      real_t tmp_912 = 1.3333333333333335*tmp_280;
      real_t tmp_913 = 1.3333333333333335*tmp_297;
      real_t tmp_914 = 1.3333333333333335*tmp_314;
      real_t tmp_915 = 1.3333333333333335*tmp_331;
      real_t tmp_916 = 0.25*tmp_231;
      real_t tmp_917 = 0.25*tmp_200;
      real_t tmp_918 = 0.16666666666666666*tmp_231;
      real_t tmp_919 = 0.5*tmp_200;
      real_t tmp_920 = 0.5*tmp_231;
      real_t tmp_921 = 0.16666666666666666*tmp_200;
      real_t tmp_922 = 0.16666666666666666*tmp_231;
      real_t tmp_923 = 0.16666666666666666*tmp_200;
      real_t tmp_924 = 0.16666666666666666*tmp_231;
      real_t tmp_925 = 0.16666666666666666*tmp_200;
      real_t tmp_926 = -tmp_348*tmp_708;
      real_t tmp_927 = -tmp_363*tmp_709;
      real_t tmp_928 = -tmp_378*tmp_710;
      real_t tmp_929 = -tmp_393*tmp_711;
      real_t tmp_930 = -tmp_408*tmp_712;
      real_t tmp_931 = -tmp_423*tmp_708;
      real_t tmp_932 = -tmp_436*tmp_709;
      real_t tmp_933 = -tmp_449*tmp_710;
      real_t tmp_934 = -tmp_462*tmp_711;
      real_t tmp_935 = -tmp_475*tmp_712;
      real_t tmp_936 = -tmp_491*tmp_708;
      real_t tmp_937 = -tmp_503*tmp_709;
      real_t tmp_938 = -tmp_515*tmp_710;
      real_t tmp_939 = -tmp_527*tmp_711;
      real_t tmp_940 = -tmp_539*tmp_712;
      real_t tmp_941 = -tmp_550*tmp_708;
      real_t tmp_942 = -tmp_561*tmp_709;
      real_t tmp_943 = -tmp_572*tmp_710;
      real_t tmp_944 = -tmp_583*tmp_711;
      real_t tmp_945 = -tmp_594*tmp_712;
      real_t tmp_946 = -tmp_604*tmp_708;
      real_t tmp_947 = -tmp_614*tmp_709;
      real_t tmp_948 = -tmp_624*tmp_710;
      real_t tmp_949 = -tmp_634*tmp_711;
      real_t tmp_950 = -tmp_644*tmp_712;
      real_t tmp_951 = 0.25*tmp_163;
      real_t tmp_952 = tmp_31*tmp_951;
      real_t tmp_953 = tmp_35*tmp_863;
      real_t tmp_954 = tmp_952 + tmp_953;
      real_t tmp_955 = 2*tmp_954;
      real_t tmp_956 = tmp_40*tmp_951;
      real_t tmp_957 = tmp_44*tmp_863;
      real_t tmp_958 = tmp_956 + tmp_957;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 0.16666666666666666*tmp_163;
      real_t tmp_961 = tmp_31*tmp_960;
      real_t tmp_962 = tmp_35*tmp_873;
      real_t tmp_963 = tmp_961 + tmp_962;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = tmp_40*tmp_960;
      real_t tmp_966 = tmp_44*tmp_873;
      real_t tmp_967 = tmp_965 + tmp_966;
      real_t tmp_968 = 2*tmp_967;
      real_t tmp_969 = 0.16666666666666666*tmp_163;
      real_t tmp_970 = tmp_31*tmp_969;
      real_t tmp_971 = tmp_35*tmp_883;
      real_t tmp_972 = tmp_970 + tmp_971;
      real_t tmp_973 = 2*tmp_972;
      real_t tmp_974 = tmp_40*tmp_969;
      real_t tmp_975 = tmp_44*tmp_883;
      real_t tmp_976 = tmp_974 + tmp_975;
      real_t tmp_977 = 2*tmp_976;
      real_t tmp_978 = 0.5*tmp_163;
      real_t tmp_979 = tmp_31*tmp_978;
      real_t tmp_980 = tmp_35*tmp_893;
      real_t tmp_981 = tmp_979 + tmp_980;
      real_t tmp_982 = 2*tmp_981;
      real_t tmp_983 = tmp_40*tmp_978;
      real_t tmp_984 = tmp_44*tmp_893;
      real_t tmp_985 = tmp_983 + tmp_984;
      real_t tmp_986 = 2*tmp_985;
      real_t tmp_987 = 0.16666666666666666*tmp_163;
      real_t tmp_988 = tmp_31*tmp_987;
      real_t tmp_989 = tmp_35*tmp_903;
      real_t tmp_990 = tmp_988 + tmp_989;
      real_t tmp_991 = 2*tmp_990;
      real_t tmp_992 = tmp_40*tmp_987;
      real_t tmp_993 = tmp_44*tmp_903;
      real_t tmp_994 = tmp_992 + tmp_993;
      real_t tmp_995 = 2*tmp_994;
      real_t tmp_996 = 1.3333333333333335*tmp_348;
      real_t tmp_997 = 1.3333333333333335*tmp_363;
      real_t tmp_998 = 1.3333333333333335*tmp_378;
      real_t tmp_999 = 1.3333333333333335*tmp_393;
      real_t tmp_1000 = 1.3333333333333335*tmp_408;
      real_t tmp_1001 = 0.25*tmp_231;
      real_t tmp_1002 = 0.25*tmp_159;
      real_t tmp_1003 = 0.16666666666666666*tmp_231;
      real_t tmp_1004 = 0.5*tmp_159;
      real_t tmp_1005 = 0.16666666666666666*tmp_231;
      real_t tmp_1006 = 0.16666666666666666*tmp_159;
      real_t tmp_1007 = 0.5*tmp_231;
      real_t tmp_1008 = 0.16666666666666666*tmp_159;
      real_t tmp_1009 = 0.16666666666666666*tmp_231;
      real_t tmp_1010 = 0.16666666666666666*tmp_159;
      real_t tmp_1011 = -tmp_423*tmp_713;
      real_t tmp_1012 = -tmp_436*tmp_714;
      real_t tmp_1013 = -tmp_449*tmp_715;
      real_t tmp_1014 = -tmp_462*tmp_716;
      real_t tmp_1015 = -tmp_475*tmp_717;
      real_t tmp_1016 = -tmp_491*tmp_713;
      real_t tmp_1017 = -tmp_503*tmp_714;
      real_t tmp_1018 = -tmp_515*tmp_715;
      real_t tmp_1019 = -tmp_527*tmp_716;
      real_t tmp_1020 = -tmp_539*tmp_717;
      real_t tmp_1021 = -tmp_550*tmp_713;
      real_t tmp_1022 = -tmp_561*tmp_714;
      real_t tmp_1023 = -tmp_572*tmp_715;
      real_t tmp_1024 = -tmp_583*tmp_716;
      real_t tmp_1025 = -tmp_594*tmp_717;
      real_t tmp_1026 = -tmp_604*tmp_713;
      real_t tmp_1027 = -tmp_614*tmp_714;
      real_t tmp_1028 = -tmp_624*tmp_715;
      real_t tmp_1029 = -tmp_634*tmp_716;
      real_t tmp_1030 = -tmp_644*tmp_717;
      real_t tmp_1031 = tmp_33*tmp_951;
      real_t tmp_1032 = tmp_35*tmp_861;
      real_t tmp_1033 = tmp_1031 + tmp_1032;
      real_t tmp_1034 = 2*tmp_1033;
      real_t tmp_1035 = tmp_42*tmp_951;
      real_t tmp_1036 = tmp_44*tmp_861;
      real_t tmp_1037 = tmp_1035 + tmp_1036;
      real_t tmp_1038 = 2*tmp_1037;
      real_t tmp_1039 = tmp_33*tmp_960;
      real_t tmp_1040 = tmp_35*tmp_871;
      real_t tmp_1041 = tmp_1039 + tmp_1040;
      real_t tmp_1042 = 2*tmp_1041;
      real_t tmp_1043 = tmp_42*tmp_960;
      real_t tmp_1044 = tmp_44*tmp_871;
      real_t tmp_1045 = tmp_1043 + tmp_1044;
      real_t tmp_1046 = 2*tmp_1045;
      real_t tmp_1047 = tmp_33*tmp_969;
      real_t tmp_1048 = tmp_35*tmp_881;
      real_t tmp_1049 = tmp_1047 + tmp_1048;
      real_t tmp_1050 = 2*tmp_1049;
      real_t tmp_1051 = tmp_42*tmp_969;
      real_t tmp_1052 = tmp_44*tmp_881;
      real_t tmp_1053 = tmp_1051 + tmp_1052;
      real_t tmp_1054 = 2*tmp_1053;
      real_t tmp_1055 = tmp_33*tmp_978;
      real_t tmp_1056 = tmp_35*tmp_891;
      real_t tmp_1057 = tmp_1055 + tmp_1056;
      real_t tmp_1058 = 2*tmp_1057;
      real_t tmp_1059 = tmp_42*tmp_978;
      real_t tmp_1060 = tmp_44*tmp_891;
      real_t tmp_1061 = tmp_1059 + tmp_1060;
      real_t tmp_1062 = 2*tmp_1061;
      real_t tmp_1063 = tmp_33*tmp_987;
      real_t tmp_1064 = tmp_35*tmp_901;
      real_t tmp_1065 = tmp_1063 + tmp_1064;
      real_t tmp_1066 = 2*tmp_1065;
      real_t tmp_1067 = tmp_42*tmp_987;
      real_t tmp_1068 = tmp_44*tmp_901;
      real_t tmp_1069 = tmp_1067 + tmp_1068;
      real_t tmp_1070 = 2*tmp_1069;
      real_t tmp_1071 = 1.3333333333333335*tmp_423;
      real_t tmp_1072 = 1.3333333333333335*tmp_436;
      real_t tmp_1073 = 1.3333333333333335*tmp_449;
      real_t tmp_1074 = 1.3333333333333335*tmp_462;
      real_t tmp_1075 = 1.3333333333333335*tmp_475;
      real_t tmp_1076 = 0.25*tmp_200;
      real_t tmp_1077 = 0.25*tmp_159;
      real_t tmp_1078 = 0.16666666666666666*tmp_200;
      real_t tmp_1079 = 0.16666666666666666*tmp_159;
      real_t tmp_1080 = 0.16666666666666666*tmp_200;
      real_t tmp_1081 = 0.5*tmp_159;
      real_t tmp_1082 = 0.5*tmp_200;
      real_t tmp_1083 = 0.16666666666666666*tmp_159;
      real_t tmp_1084 = 0.16666666666666666*tmp_200;
      real_t tmp_1085 = 0.16666666666666666*tmp_159;
      real_t tmp_1086 = -tmp_491*tmp_718;
      real_t tmp_1087 = -tmp_503*tmp_719;
      real_t tmp_1088 = -tmp_515*tmp_720;
      real_t tmp_1089 = -tmp_527*tmp_721;
      real_t tmp_1090 = -tmp_539*tmp_722;
      real_t tmp_1091 = -tmp_550*tmp_718;
      real_t tmp_1092 = -tmp_561*tmp_719;
      real_t tmp_1093 = -tmp_572*tmp_720;
      real_t tmp_1094 = -tmp_583*tmp_721;
      real_t tmp_1095 = -tmp_594*tmp_722;
      real_t tmp_1096 = -tmp_604*tmp_718;
      real_t tmp_1097 = -tmp_614*tmp_719;
      real_t tmp_1098 = -tmp_624*tmp_720;
      real_t tmp_1099 = -tmp_634*tmp_721;
      real_t tmp_1100 = -tmp_644*tmp_722;
      real_t tmp_1101 = 0.5*tmp_494 - tmp_864 - tmp_953;
      real_t tmp_1102 = 2*tmp_1101;
      real_t tmp_1103 = 0.5*tmp_496 - tmp_868 - tmp_957;
      real_t tmp_1104 = 2*tmp_1103;
      real_t tmp_1105 = 1.0*tmp_489 + tmp_490;
      real_t tmp_1106 = 0.5*tmp_506 - tmp_874 - tmp_962;
      real_t tmp_1107 = 2*tmp_1106;
      real_t tmp_1108 = 0.5*tmp_508 - tmp_878 - tmp_966;
      real_t tmp_1109 = 2*tmp_1108;
      real_t tmp_1110 = 1.0*tmp_501 + tmp_502;
      real_t tmp_1111 = 0.5*tmp_518 - tmp_884 - tmp_971;
      real_t tmp_1112 = 2*tmp_1111;
      real_t tmp_1113 = 0.5*tmp_520 - tmp_888 - tmp_975;
      real_t tmp_1114 = 2*tmp_1113;
      real_t tmp_1115 = 1.0*tmp_513 + tmp_514;
      real_t tmp_1116 = 0.5*tmp_530 - tmp_894 - tmp_980;
      real_t tmp_1117 = 2*tmp_1116;
      real_t tmp_1118 = 0.5*tmp_532 - tmp_898 - tmp_984;
      real_t tmp_1119 = 2*tmp_1118;
      real_t tmp_1120 = 1.0*tmp_525 + tmp_526;
      real_t tmp_1121 = 0.5*tmp_542 - tmp_904 - tmp_989;
      real_t tmp_1122 = 2*tmp_1121;
      real_t tmp_1123 = 0.5*tmp_544 - tmp_908 - tmp_993;
      real_t tmp_1124 = 2*tmp_1123;
      real_t tmp_1125 = 1.0*tmp_537 + tmp_538;
      real_t tmp_1126 = 2.0*tmp_1105;
      real_t tmp_1127 = 2.0*tmp_1110;
      real_t tmp_1128 = 2.0*tmp_1115;
      real_t tmp_1129 = 2.0*tmp_1120;
      real_t tmp_1130 = 2.0*tmp_1125;
      real_t tmp_1131 = -tmp_550*tmp_723;
      real_t tmp_1132 = -tmp_561*tmp_725;
      real_t tmp_1133 = -tmp_572*tmp_727;
      real_t tmp_1134 = -tmp_583*tmp_729;
      real_t tmp_1135 = -tmp_594*tmp_731;
      real_t tmp_1136 = -tmp_604*tmp_723;
      real_t tmp_1137 = -tmp_614*tmp_725;
      real_t tmp_1138 = -tmp_624*tmp_727;
      real_t tmp_1139 = -tmp_634*tmp_729;
      real_t tmp_1140 = -tmp_644*tmp_731;
      real_t tmp_1141 = -tmp_1032 + 0.5*tmp_553 - tmp_862;
      real_t tmp_1142 = 2*tmp_1141;
      real_t tmp_1143 = -tmp_1036 + 0.5*tmp_555 - tmp_867;
      real_t tmp_1144 = 2*tmp_1143;
      real_t tmp_1145 = 1.0*tmp_548 + tmp_549;
      real_t tmp_1146 = -tmp_1040 + 0.5*tmp_564 - tmp_872;
      real_t tmp_1147 = 2*tmp_1146;
      real_t tmp_1148 = -tmp_1044 + 0.5*tmp_566 - tmp_877;
      real_t tmp_1149 = 2*tmp_1148;
      real_t tmp_1150 = 1.0*tmp_559 + tmp_560;
      real_t tmp_1151 = -tmp_1048 + 0.5*tmp_575 - tmp_882;
      real_t tmp_1152 = 2*tmp_1151;
      real_t tmp_1153 = -tmp_1052 + 0.5*tmp_577 - tmp_887;
      real_t tmp_1154 = 2*tmp_1153;
      real_t tmp_1155 = 1.0*tmp_570 + tmp_571;
      real_t tmp_1156 = -tmp_1056 + 0.5*tmp_586 - tmp_892;
      real_t tmp_1157 = 2*tmp_1156;
      real_t tmp_1158 = -tmp_1060 + 0.5*tmp_588 - tmp_897;
      real_t tmp_1159 = 2*tmp_1158;
      real_t tmp_1160 = 1.0*tmp_581 + tmp_582;
      real_t tmp_1161 = -tmp_1064 + 0.5*tmp_597 - tmp_902;
      real_t tmp_1162 = 2*tmp_1161;
      real_t tmp_1163 = -tmp_1068 + 0.5*tmp_599 - tmp_907;
      real_t tmp_1164 = 2*tmp_1163;
      real_t tmp_1165 = 1.0*tmp_592 + tmp_593;
      real_t tmp_1166 = 2.0*tmp_1145;
      real_t tmp_1167 = 2.0*tmp_1150;
      real_t tmp_1168 = 2.0*tmp_1155;
      real_t tmp_1169 = 2.0*tmp_1160;
      real_t tmp_1170 = 2.0*tmp_1165;
      real_t tmp_1171 = -tmp_604*tmp_733;
      real_t tmp_1172 = -tmp_614*tmp_735;
      real_t tmp_1173 = -tmp_624*tmp_737;
      real_t tmp_1174 = -tmp_634*tmp_739;
      real_t tmp_1175 = -tmp_644*tmp_741;
      real_t tmp_1176 = -tmp_1031 + 0.5*tmp_607 - tmp_952;
      real_t tmp_1177 = 2*tmp_1176;
      real_t tmp_1178 = -tmp_1035 + 0.5*tmp_609 - tmp_956;
      real_t tmp_1179 = 2*tmp_1178;
      real_t tmp_1180 = 1.0*tmp_602 + tmp_603;
      real_t tmp_1181 = -tmp_1039 + 0.5*tmp_617 - tmp_961;
      real_t tmp_1182 = 2*tmp_1181;
      real_t tmp_1183 = -tmp_1043 + 0.5*tmp_619 - tmp_965;
      real_t tmp_1184 = 2*tmp_1183;
      real_t tmp_1185 = 1.0*tmp_612 + tmp_613;
      real_t tmp_1186 = -tmp_1047 + 0.5*tmp_627 - tmp_970;
      real_t tmp_1187 = 2*tmp_1186;
      real_t tmp_1188 = -tmp_1051 + 0.5*tmp_629 - tmp_974;
      real_t tmp_1189 = 2*tmp_1188;
      real_t tmp_1190 = 1.0*tmp_622 + tmp_623;
      real_t tmp_1191 = -tmp_1055 + 0.5*tmp_637 - tmp_979;
      real_t tmp_1192 = 2*tmp_1191;
      real_t tmp_1193 = -tmp_1059 + 0.5*tmp_639 - tmp_983;
      real_t tmp_1194 = 2*tmp_1193;
      real_t tmp_1195 = 1.0*tmp_632 + tmp_633;
      real_t tmp_1196 = -tmp_1063 + 0.5*tmp_647 - tmp_988;
      real_t tmp_1197 = 2*tmp_1196;
      real_t tmp_1198 = -tmp_1067 + 0.5*tmp_649 - tmp_992;
      real_t tmp_1199 = 2*tmp_1198;
      real_t tmp_1200 = 1.0*tmp_642 + tmp_643;
      real_t tmp_1201 = 2.0*tmp_1180;
      real_t tmp_1202 = 2.0*tmp_1185;
      real_t tmp_1203 = 2.0*tmp_1190;
      real_t tmp_1204 = 2.0*tmp_1195;
      real_t tmp_1205 = 2.0*tmp_1200;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_156*(-2.0/3.0*(tmp_141*tmp_141) + tmp_145*tmp_147 + tmp_151*tmp_153 + tmp_154*tmp_155) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_181 + tmp_106*tmp_182 + tmp_177*tmp_179 + tmp_178) + tmp_133*(tmp_123*tmp_189 + tmp_129*tmp_190 + tmp_185*tmp_187 + tmp_186) + tmp_156*(tmp_146*tmp_197 + tmp_152*tmp_198 + tmp_193*tmp_195 + tmp_194) + tmp_64*(tmp_160*tmp_162 + tmp_161 + tmp_165*tmp_38 + tmp_166*tmp_47) + tmp_87*(tmp_169*tmp_171 + tmp_170 + tmp_173*tmp_77 + tmp_174*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_216 + tmp_106*tmp_217 + tmp_179*tmp_213 + tmp_214) + tmp_133*(tmp_123*tmp_222 + tmp_129*tmp_223 + tmp_187*tmp_219 + tmp_220) + tmp_156*(tmp_146*tmp_228 + tmp_152*tmp_229 + tmp_195*tmp_225 + tmp_226) + tmp_64*(tmp_162*tmp_201 + tmp_202 + tmp_204*tmp_38 + tmp_205*tmp_47) + tmp_87*(tmp_171*tmp_207 + tmp_208 + tmp_210*tmp_77 + tmp_211*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_247 + tmp_106*tmp_248 + tmp_179*tmp_244 + tmp_245) + tmp_133*(tmp_123*tmp_253 + tmp_129*tmp_254 + tmp_187*tmp_250 + tmp_251) + tmp_156*(tmp_146*tmp_259 + tmp_152*tmp_260 + tmp_195*tmp_256 + tmp_257) + tmp_64*(tmp_162*tmp_232 + tmp_233 + tmp_235*tmp_38 + tmp_236*tmp_47) + tmp_87*(tmp_171*tmp_238 + tmp_239 + tmp_241*tmp_77 + tmp_242*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_308 + tmp_107*tmp_311 + tmp_108*tmp_303 + tmp_298) + tmp_133*(tmp_124*tmp_325 + tmp_130*tmp_328 + tmp_131*tmp_320 + tmp_315) + tmp_156*(tmp_147*tmp_342 + tmp_153*tmp_345 + tmp_154*tmp_337 + tmp_332) + tmp_64*(tmp_264 + tmp_269*tmp_49 + tmp_274*tmp_39 + tmp_277*tmp_48) + tmp_87*(tmp_281 + tmp_286*tmp_85 + tmp_291*tmp_78 + tmp_294*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_387 + tmp_107*tmp_390 + tmp_108*tmp_383 + tmp_379) + tmp_133*(tmp_124*tmp_402 + tmp_130*tmp_405 + tmp_131*tmp_398 + tmp_394) + tmp_156*(tmp_147*tmp_417 + tmp_153*tmp_420 + tmp_154*tmp_413 + tmp_409) + tmp_64*(tmp_349 + tmp_353*tmp_49 + tmp_357*tmp_39 + tmp_360*tmp_48) + tmp_87*(tmp_364 + tmp_368*tmp_85 + tmp_372*tmp_78 + tmp_375*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_456 + tmp_107*tmp_459 + tmp_108*tmp_453 + tmp_450) + tmp_133*(tmp_124*tmp_469 + tmp_130*tmp_472 + tmp_131*tmp_466 + tmp_463) + tmp_156*(tmp_147*tmp_482 + tmp_153*tmp_485 + tmp_154*tmp_479 + tmp_476) + tmp_64*(tmp_39*tmp_430 + tmp_424 + tmp_427*tmp_49 + tmp_433*tmp_48) + tmp_87*(tmp_437 + tmp_440*tmp_85 + tmp_443*tmp_78 + tmp_446*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_519 + tmp_107*tmp_521 + tmp_108*tmp_517 + tmp_516) + tmp_133*(tmp_124*tmp_531 + tmp_130*tmp_533 + tmp_131*tmp_529 + tmp_528) + tmp_156*(tmp_147*tmp_543 + tmp_153*tmp_545 + tmp_154*tmp_541 + tmp_540) + tmp_64*(tmp_39*tmp_495 + tmp_48*tmp_497 + tmp_49*tmp_493 + tmp_492) + tmp_87*(tmp_504 + tmp_505*tmp_85 + tmp_507*tmp_78 + tmp_509*tmp_84);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_576 + tmp_107*tmp_578 + tmp_108*tmp_574 + tmp_573) + tmp_133*(tmp_124*tmp_587 + tmp_130*tmp_589 + tmp_131*tmp_585 + tmp_584) + tmp_156*(tmp_147*tmp_598 + tmp_153*tmp_600 + tmp_154*tmp_596 + tmp_595) + tmp_64*(tmp_39*tmp_554 + tmp_48*tmp_556 + tmp_49*tmp_552 + tmp_551) + tmp_87*(tmp_562 + tmp_563*tmp_85 + tmp_565*tmp_78 + tmp_567*tmp_84);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_628 + tmp_107*tmp_630 + tmp_108*tmp_626 + tmp_625) + tmp_133*(tmp_124*tmp_638 + tmp_130*tmp_640 + tmp_131*tmp_636 + tmp_635) + tmp_156*(tmp_147*tmp_648 + tmp_153*tmp_650 + tmp_154*tmp_646 + tmp_645) + tmp_64*(tmp_39*tmp_608 + tmp_48*tmp_610 + tmp_49*tmp_606 + tmp_605) + tmp_87*(tmp_615 + tmp_616*tmp_85 + tmp_618*tmp_78 + tmp_620*tmp_84);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_662 + tmp_109*tmp_663 + tmp_178 + tmp_661*tmp_99) + tmp_133*(tmp_122*tmp_665 + tmp_128*tmp_666 + tmp_132*tmp_667 + tmp_186) + tmp_156*(tmp_145*tmp_669 + tmp_151*tmp_670 + tmp_155*tmp_671 + tmp_194) + tmp_64*(tmp_161 + tmp_37*tmp_653 + tmp_46*tmp_654 + tmp_50*tmp_655) + tmp_87*(tmp_170 + tmp_657*tmp_76 + tmp_658*tmp_82 + tmp_659*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_674*tmp_680 + tmp_675*tmp_681 + tmp_677*tmp_681) + tmp_133*(tmp_674*tmp_682 + tmp_675*tmp_683 + tmp_677*tmp_683) + tmp_156*(tmp_674*tmp_684 + tmp_675*tmp_685 + tmp_677*tmp_685) + tmp_64*(tmp_673*tmp_674 + tmp_675*tmp_676 + tmp_676*tmp_677) + tmp_87*(tmp_674*tmp_678 + tmp_675*tmp_679 + tmp_677*tmp_679);
      real_t a_1_2 = tmp_698;
      real_t a_1_3 = tmp_707;
      real_t a_1_4 = tmp_110*(-tmp_177*tmp_710 + tmp_303*tmp_663 + tmp_308*tmp_661 + tmp_311*tmp_662) + tmp_133*(-tmp_185*tmp_711 + tmp_320*tmp_667 + tmp_325*tmp_665 + tmp_328*tmp_666) + tmp_156*(-tmp_193*tmp_712 + tmp_337*tmp_671 + tmp_342*tmp_669 + tmp_345*tmp_670) + tmp_64*(-tmp_160*tmp_708 + tmp_269*tmp_655 + tmp_274*tmp_653 + tmp_277*tmp_654) + tmp_87*(-tmp_169*tmp_709 + tmp_286*tmp_659 + tmp_291*tmp_657 + tmp_294*tmp_658);
      real_t a_1_5 = tmp_110*(-tmp_177*tmp_715 + tmp_383*tmp_663 + tmp_387*tmp_661 + tmp_390*tmp_662) + tmp_133*(-tmp_185*tmp_716 + tmp_398*tmp_667 + tmp_402*tmp_665 + tmp_405*tmp_666) + tmp_156*(-tmp_193*tmp_717 + tmp_413*tmp_671 + tmp_417*tmp_669 + tmp_420*tmp_670) + tmp_64*(-tmp_160*tmp_713 + tmp_353*tmp_655 + tmp_357*tmp_653 + tmp_360*tmp_654) + tmp_87*(-tmp_169*tmp_714 + tmp_368*tmp_659 + tmp_372*tmp_657 + tmp_375*tmp_658);
      real_t a_1_6 = tmp_110*(-tmp_177*tmp_720 + tmp_453*tmp_663 + tmp_456*tmp_661 + tmp_459*tmp_662) + tmp_133*(-tmp_185*tmp_721 + tmp_466*tmp_667 + tmp_469*tmp_665 + tmp_472*tmp_666) + tmp_156*(-tmp_193*tmp_722 + tmp_479*tmp_671 + tmp_482*tmp_669 + tmp_485*tmp_670) + tmp_64*(-tmp_160*tmp_718 + tmp_427*tmp_655 + tmp_430*tmp_653 + tmp_433*tmp_654) + tmp_87*(-tmp_169*tmp_719 + tmp_440*tmp_659 + tmp_443*tmp_657 + tmp_446*tmp_658);
      real_t a_1_7 = tmp_110*(tmp_517*tmp_663 + tmp_519*tmp_661 + tmp_521*tmp_662 + tmp_728) + tmp_133*(tmp_529*tmp_667 + tmp_531*tmp_665 + tmp_533*tmp_666 + tmp_730) + tmp_156*(tmp_541*tmp_671 + tmp_543*tmp_669 + tmp_545*tmp_670 + tmp_732) + tmp_64*(tmp_493*tmp_655 + tmp_495*tmp_653 + tmp_497*tmp_654 + tmp_724) + tmp_87*(tmp_505*tmp_659 + tmp_507*tmp_657 + tmp_509*tmp_658 + tmp_726);
      real_t a_1_8 = tmp_110*(tmp_574*tmp_663 + tmp_576*tmp_661 + tmp_578*tmp_662 + tmp_738) + tmp_133*(tmp_585*tmp_667 + tmp_587*tmp_665 + tmp_589*tmp_666 + tmp_740) + tmp_156*(tmp_596*tmp_671 + tmp_598*tmp_669 + tmp_600*tmp_670 + tmp_742) + tmp_64*(tmp_552*tmp_655 + tmp_554*tmp_653 + tmp_556*tmp_654 + tmp_734) + tmp_87*(tmp_563*tmp_659 + tmp_565*tmp_657 + tmp_567*tmp_658 + tmp_736);
      real_t a_1_9 = tmp_110*(tmp_626*tmp_663 + tmp_628*tmp_661 + tmp_630*tmp_662 + tmp_748) + tmp_133*(tmp_636*tmp_667 + tmp_638*tmp_665 + tmp_640*tmp_666 + tmp_750) + tmp_156*(tmp_646*tmp_671 + tmp_648*tmp_669 + tmp_650*tmp_670 + tmp_752) + tmp_64*(tmp_606*tmp_655 + tmp_608*tmp_653 + tmp_610*tmp_654 + tmp_744) + tmp_87*(tmp_616*tmp_659 + tmp_618*tmp_657 + tmp_620*tmp_658 + tmp_746);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_763 + tmp_109*tmp_764 + tmp_214 + tmp_762*tmp_99) + tmp_133*(tmp_122*tmp_766 + tmp_128*tmp_767 + tmp_132*tmp_768 + tmp_220) + tmp_156*(tmp_145*tmp_770 + tmp_151*tmp_771 + tmp_155*tmp_772 + tmp_226) + tmp_64*(tmp_202 + tmp_37*tmp_754 + tmp_46*tmp_755 + tmp_50*tmp_756) + tmp_87*(tmp_208 + tmp_758*tmp_76 + tmp_759*tmp_82 + tmp_760*tmp_86);
      real_t a_2_1 = tmp_698;
      real_t a_2_2 = tmp_110*(tmp_774*tmp_780 + tmp_775*tmp_781 + tmp_777*tmp_781) + tmp_133*(tmp_774*tmp_782 + tmp_775*tmp_783 + tmp_777*tmp_783) + tmp_156*(tmp_774*tmp_784 + tmp_775*tmp_785 + tmp_777*tmp_785) + tmp_64*(tmp_773*tmp_774 + tmp_775*tmp_776 + tmp_776*tmp_777) + tmp_87*(tmp_774*tmp_778 + tmp_775*tmp_779 + tmp_777*tmp_779);
      real_t a_2_3 = tmp_797;
      real_t a_2_4 = tmp_110*(-tmp_213*tmp_710 + tmp_303*tmp_764 + tmp_308*tmp_762 + tmp_311*tmp_763) + tmp_133*(-tmp_219*tmp_711 + tmp_320*tmp_768 + tmp_325*tmp_766 + tmp_328*tmp_767) + tmp_156*(-tmp_225*tmp_712 + tmp_337*tmp_772 + tmp_342*tmp_770 + tmp_345*tmp_771) + tmp_64*(-tmp_201*tmp_708 + tmp_269*tmp_756 + tmp_274*tmp_754 + tmp_277*tmp_755) + tmp_87*(-tmp_207*tmp_709 + tmp_286*tmp_760 + tmp_291*tmp_758 + tmp_294*tmp_759);
      real_t a_2_5 = tmp_110*(-tmp_213*tmp_715 + tmp_383*tmp_764 + tmp_387*tmp_762 + tmp_390*tmp_763) + tmp_133*(-tmp_219*tmp_716 + tmp_398*tmp_768 + tmp_402*tmp_766 + tmp_405*tmp_767) + tmp_156*(-tmp_225*tmp_717 + tmp_413*tmp_772 + tmp_417*tmp_770 + tmp_420*tmp_771) + tmp_64*(-tmp_201*tmp_713 + tmp_353*tmp_756 + tmp_357*tmp_754 + tmp_360*tmp_755) + tmp_87*(-tmp_207*tmp_714 + tmp_368*tmp_760 + tmp_372*tmp_758 + tmp_375*tmp_759);
      real_t a_2_6 = tmp_110*(-tmp_213*tmp_720 + tmp_453*tmp_764 + tmp_456*tmp_762 + tmp_459*tmp_763) + tmp_133*(-tmp_219*tmp_721 + tmp_466*tmp_768 + tmp_469*tmp_766 + tmp_472*tmp_767) + tmp_156*(-tmp_225*tmp_722 + tmp_479*tmp_772 + tmp_482*tmp_770 + tmp_485*tmp_771) + tmp_64*(-tmp_201*tmp_718 + tmp_427*tmp_756 + tmp_430*tmp_754 + tmp_433*tmp_755) + tmp_87*(-tmp_207*tmp_719 + tmp_440*tmp_760 + tmp_443*tmp_758 + tmp_446*tmp_759);
      real_t a_2_7 = tmp_110*(tmp_517*tmp_764 + tmp_519*tmp_762 + tmp_521*tmp_763 + tmp_800) + tmp_133*(tmp_529*tmp_768 + tmp_531*tmp_766 + tmp_533*tmp_767 + tmp_801) + tmp_156*(tmp_541*tmp_772 + tmp_543*tmp_770 + tmp_545*tmp_771 + tmp_802) + tmp_64*(tmp_493*tmp_756 + tmp_495*tmp_754 + tmp_497*tmp_755 + tmp_798) + tmp_87*(tmp_505*tmp_760 + tmp_507*tmp_758 + tmp_509*tmp_759 + tmp_799);
      real_t a_2_8 = tmp_110*(tmp_574*tmp_764 + tmp_576*tmp_762 + tmp_578*tmp_763 + tmp_805) + tmp_133*(tmp_585*tmp_768 + tmp_587*tmp_766 + tmp_589*tmp_767 + tmp_806) + tmp_156*(tmp_596*tmp_772 + tmp_598*tmp_770 + tmp_600*tmp_771 + tmp_807) + tmp_64*(tmp_552*tmp_756 + tmp_554*tmp_754 + tmp_556*tmp_755 + tmp_803) + tmp_87*(tmp_563*tmp_760 + tmp_565*tmp_758 + tmp_567*tmp_759 + tmp_804);
      real_t a_2_9 = tmp_110*(tmp_626*tmp_764 + tmp_628*tmp_762 + tmp_630*tmp_763 + tmp_810) + tmp_133*(tmp_636*tmp_768 + tmp_638*tmp_766 + tmp_640*tmp_767 + tmp_811) + tmp_156*(tmp_646*tmp_772 + tmp_648*tmp_770 + tmp_650*tmp_771 + tmp_812) + tmp_64*(tmp_606*tmp_756 + tmp_608*tmp_754 + tmp_610*tmp_755 + tmp_808) + tmp_87*(tmp_616*tmp_760 + tmp_618*tmp_758 + tmp_620*tmp_759 + tmp_809);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_823 + tmp_109*tmp_824 + tmp_245 + tmp_822*tmp_99) + tmp_133*(tmp_122*tmp_826 + tmp_128*tmp_827 + tmp_132*tmp_828 + tmp_251) + tmp_156*(tmp_145*tmp_830 + tmp_151*tmp_831 + tmp_155*tmp_832 + tmp_257) + tmp_64*(tmp_233 + tmp_37*tmp_814 + tmp_46*tmp_815 + tmp_50*tmp_816) + tmp_87*(tmp_239 + tmp_76*tmp_818 + tmp_819*tmp_82 + tmp_820*tmp_86);
      real_t a_3_1 = tmp_707;
      real_t a_3_2 = tmp_797;
      real_t a_3_3 = tmp_110*(tmp_834*tmp_840 + tmp_835*tmp_841 + tmp_837*tmp_841) + tmp_133*(tmp_834*tmp_842 + tmp_835*tmp_843 + tmp_837*tmp_843) + tmp_156*(tmp_834*tmp_844 + tmp_835*tmp_845 + tmp_837*tmp_845) + tmp_64*(tmp_833*tmp_834 + tmp_835*tmp_836 + tmp_836*tmp_837) + tmp_87*(tmp_834*tmp_838 + tmp_835*tmp_839 + tmp_837*tmp_839);
      real_t a_3_4 = tmp_110*(-tmp_244*tmp_710 + tmp_303*tmp_824 + tmp_308*tmp_822 + tmp_311*tmp_823) + tmp_133*(-tmp_250*tmp_711 + tmp_320*tmp_828 + tmp_325*tmp_826 + tmp_328*tmp_827) + tmp_156*(-tmp_256*tmp_712 + tmp_337*tmp_832 + tmp_342*tmp_830 + tmp_345*tmp_831) + tmp_64*(-tmp_232*tmp_708 + tmp_269*tmp_816 + tmp_274*tmp_814 + tmp_277*tmp_815) + tmp_87*(-tmp_238*tmp_709 + tmp_286*tmp_820 + tmp_291*tmp_818 + tmp_294*tmp_819);
      real_t a_3_5 = tmp_110*(-tmp_244*tmp_715 + tmp_383*tmp_824 + tmp_387*tmp_822 + tmp_390*tmp_823) + tmp_133*(-tmp_250*tmp_716 + tmp_398*tmp_828 + tmp_402*tmp_826 + tmp_405*tmp_827) + tmp_156*(-tmp_256*tmp_717 + tmp_413*tmp_832 + tmp_417*tmp_830 + tmp_420*tmp_831) + tmp_64*(-tmp_232*tmp_713 + tmp_353*tmp_816 + tmp_357*tmp_814 + tmp_360*tmp_815) + tmp_87*(-tmp_238*tmp_714 + tmp_368*tmp_820 + tmp_372*tmp_818 + tmp_375*tmp_819);
      real_t a_3_6 = tmp_110*(-tmp_244*tmp_720 + tmp_453*tmp_824 + tmp_456*tmp_822 + tmp_459*tmp_823) + tmp_133*(-tmp_250*tmp_721 + tmp_466*tmp_828 + tmp_469*tmp_826 + tmp_472*tmp_827) + tmp_156*(-tmp_256*tmp_722 + tmp_479*tmp_832 + tmp_482*tmp_830 + tmp_485*tmp_831) + tmp_64*(-tmp_232*tmp_718 + tmp_427*tmp_816 + tmp_430*tmp_814 + tmp_433*tmp_815) + tmp_87*(-tmp_238*tmp_719 + tmp_440*tmp_820 + tmp_443*tmp_818 + tmp_446*tmp_819);
      real_t a_3_7 = tmp_110*(tmp_517*tmp_824 + tmp_519*tmp_822 + tmp_521*tmp_823 + tmp_848) + tmp_133*(tmp_529*tmp_828 + tmp_531*tmp_826 + tmp_533*tmp_827 + tmp_849) + tmp_156*(tmp_541*tmp_832 + tmp_543*tmp_830 + tmp_545*tmp_831 + tmp_850) + tmp_64*(tmp_493*tmp_816 + tmp_495*tmp_814 + tmp_497*tmp_815 + tmp_846) + tmp_87*(tmp_505*tmp_820 + tmp_507*tmp_818 + tmp_509*tmp_819 + tmp_847);
      real_t a_3_8 = tmp_110*(tmp_574*tmp_824 + tmp_576*tmp_822 + tmp_578*tmp_823 + tmp_853) + tmp_133*(tmp_585*tmp_828 + tmp_587*tmp_826 + tmp_589*tmp_827 + tmp_854) + tmp_156*(tmp_596*tmp_832 + tmp_598*tmp_830 + tmp_600*tmp_831 + tmp_855) + tmp_64*(tmp_552*tmp_816 + tmp_554*tmp_814 + tmp_556*tmp_815 + tmp_851) + tmp_87*(tmp_563*tmp_820 + tmp_565*tmp_818 + tmp_567*tmp_819 + tmp_852);
      real_t a_3_9 = tmp_110*(tmp_626*tmp_824 + tmp_628*tmp_822 + tmp_630*tmp_823 + tmp_858) + tmp_133*(tmp_636*tmp_828 + tmp_638*tmp_826 + tmp_640*tmp_827 + tmp_859) + tmp_156*(tmp_646*tmp_832 + tmp_648*tmp_830 + tmp_650*tmp_831 + tmp_860) + tmp_64*(tmp_606*tmp_816 + tmp_608*tmp_814 + tmp_610*tmp_815 + tmp_856) + tmp_87*(tmp_616*tmp_820 + tmp_618*tmp_818 + tmp_620*tmp_819 + tmp_857);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_890 + tmp_109*tmp_297 + tmp_298 + tmp_886*tmp_99) + tmp_133*(tmp_122*tmp_896 + tmp_128*tmp_900 + tmp_132*tmp_314 + tmp_315) + tmp_156*(tmp_145*tmp_906 + tmp_151*tmp_910 + tmp_155*tmp_331 + tmp_332) + tmp_64*(tmp_263*tmp_50 + tmp_264 + tmp_37*tmp_866 + tmp_46*tmp_870) + tmp_87*(tmp_280*tmp_86 + tmp_281 + tmp_76*tmp_876 + tmp_82*tmp_880);
      real_t a_4_1 = tmp_110*(tmp_177*tmp_913 + tmp_181*tmp_885 + tmp_182*tmp_889) + tmp_133*(tmp_185*tmp_914 + tmp_189*tmp_895 + tmp_190*tmp_899) + tmp_156*(tmp_193*tmp_915 + tmp_197*tmp_905 + tmp_198*tmp_909) + tmp_64*(tmp_160*tmp_911 + tmp_165*tmp_865 + tmp_166*tmp_869) + tmp_87*(tmp_169*tmp_912 + tmp_173*tmp_875 + tmp_174*tmp_879);
      real_t a_4_2 = tmp_110*(tmp_213*tmp_913 + tmp_216*tmp_885 + tmp_217*tmp_889) + tmp_133*(tmp_219*tmp_914 + tmp_222*tmp_895 + tmp_223*tmp_899) + tmp_156*(tmp_225*tmp_915 + tmp_228*tmp_905 + tmp_229*tmp_909) + tmp_64*(tmp_201*tmp_911 + tmp_204*tmp_865 + tmp_205*tmp_869) + tmp_87*(tmp_207*tmp_912 + tmp_210*tmp_875 + tmp_211*tmp_879);
      real_t a_4_3 = tmp_110*(tmp_244*tmp_913 + tmp_247*tmp_885 + tmp_248*tmp_889) + tmp_133*(tmp_250*tmp_914 + tmp_253*tmp_895 + tmp_254*tmp_899) + tmp_156*(tmp_256*tmp_915 + tmp_259*tmp_905 + tmp_260*tmp_909) + tmp_64*(tmp_232*tmp_911 + tmp_235*tmp_865 + tmp_236*tmp_869) + tmp_87*(tmp_238*tmp_912 + tmp_241*tmp_875 + tmp_242*tmp_879);
      real_t a_4_4 = tmp_110*(tmp_297*tmp_303 + tmp_308*tmp_886 + tmp_311*tmp_890 - 10.666666666666666*((tmp_920 + tmp_921)*(tmp_920 + tmp_921))) + tmp_133*(tmp_314*tmp_320 + tmp_325*tmp_896 + tmp_328*tmp_900 - 10.666666666666666*((tmp_922 + tmp_923)*(tmp_922 + tmp_923))) + tmp_156*(tmp_331*tmp_337 + tmp_342*tmp_906 + tmp_345*tmp_910 - 10.666666666666666*((tmp_924 + tmp_925)*(tmp_924 + tmp_925))) + tmp_64*(tmp_263*tmp_269 + tmp_274*tmp_866 + tmp_277*tmp_870 - 10.666666666666666*((tmp_916 + tmp_917)*(tmp_916 + tmp_917))) + tmp_87*(tmp_280*tmp_286 + tmp_291*tmp_876 + tmp_294*tmp_880 - 10.666666666666666*((tmp_918 + tmp_919)*(tmp_918 + tmp_919)));
      real_t a_4_5 = tmp_110*(tmp_297*tmp_383 + tmp_387*tmp_886 + tmp_390*tmp_890 + tmp_928) + tmp_133*(tmp_314*tmp_398 + tmp_402*tmp_896 + tmp_405*tmp_900 + tmp_929) + tmp_156*(tmp_331*tmp_413 + tmp_417*tmp_906 + tmp_420*tmp_910 + tmp_930) + tmp_64*(tmp_263*tmp_353 + tmp_357*tmp_866 + tmp_360*tmp_870 + tmp_926) + tmp_87*(tmp_280*tmp_368 + tmp_372*tmp_876 + tmp_375*tmp_880 + tmp_927);
      real_t a_4_6 = tmp_110*(tmp_297*tmp_453 + tmp_456*tmp_886 + tmp_459*tmp_890 + tmp_933) + tmp_133*(tmp_314*tmp_466 + tmp_469*tmp_896 + tmp_472*tmp_900 + tmp_934) + tmp_156*(tmp_331*tmp_479 + tmp_482*tmp_906 + tmp_485*tmp_910 + tmp_935) + tmp_64*(tmp_263*tmp_427 + tmp_430*tmp_866 + tmp_433*tmp_870 + tmp_931) + tmp_87*(tmp_280*tmp_440 + tmp_443*tmp_876 + tmp_446*tmp_880 + tmp_932);
      real_t a_4_7 = tmp_110*(tmp_297*tmp_517 + tmp_519*tmp_886 + tmp_521*tmp_890 + tmp_938) + tmp_133*(tmp_314*tmp_529 + tmp_531*tmp_896 + tmp_533*tmp_900 + tmp_939) + tmp_156*(tmp_331*tmp_541 + tmp_543*tmp_906 + tmp_545*tmp_910 + tmp_940) + tmp_64*(tmp_263*tmp_493 + tmp_495*tmp_866 + tmp_497*tmp_870 + tmp_936) + tmp_87*(tmp_280*tmp_505 + tmp_507*tmp_876 + tmp_509*tmp_880 + tmp_937);
      real_t a_4_8 = tmp_110*(tmp_297*tmp_574 + tmp_576*tmp_886 + tmp_578*tmp_890 + tmp_943) + tmp_133*(tmp_314*tmp_585 + tmp_587*tmp_896 + tmp_589*tmp_900 + tmp_944) + tmp_156*(tmp_331*tmp_596 + tmp_598*tmp_906 + tmp_600*tmp_910 + tmp_945) + tmp_64*(tmp_263*tmp_552 + tmp_554*tmp_866 + tmp_556*tmp_870 + tmp_941) + tmp_87*(tmp_280*tmp_563 + tmp_565*tmp_876 + tmp_567*tmp_880 + tmp_942);
      real_t a_4_9 = tmp_110*(tmp_297*tmp_626 + tmp_628*tmp_886 + tmp_630*tmp_890 + tmp_948) + tmp_133*(tmp_314*tmp_636 + tmp_638*tmp_896 + tmp_640*tmp_900 + tmp_949) + tmp_156*(tmp_331*tmp_646 + tmp_648*tmp_906 + tmp_650*tmp_910 + tmp_950) + tmp_64*(tmp_263*tmp_606 + tmp_608*tmp_866 + tmp_610*tmp_870 + tmp_946) + tmp_87*(tmp_280*tmp_616 + tmp_618*tmp_876 + tmp_620*tmp_880 + tmp_947);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_977 + tmp_109*tmp_378 + tmp_379 + tmp_973*tmp_99) + tmp_133*(tmp_122*tmp_982 + tmp_128*tmp_986 + tmp_132*tmp_393 + tmp_394) + tmp_156*(tmp_145*tmp_991 + tmp_151*tmp_995 + tmp_155*tmp_408 + tmp_409) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_955 + tmp_46*tmp_959) + tmp_87*(tmp_363*tmp_86 + tmp_364 + tmp_76*tmp_964 + tmp_82*tmp_968);
      real_t a_5_1 = tmp_110*(tmp_177*tmp_998 + tmp_181*tmp_972 + tmp_182*tmp_976) + tmp_133*(tmp_185*tmp_999 + tmp_189*tmp_981 + tmp_190*tmp_985) + tmp_156*(tmp_1000*tmp_193 + tmp_197*tmp_990 + tmp_198*tmp_994) + tmp_64*(tmp_160*tmp_996 + tmp_165*tmp_954 + tmp_166*tmp_958) + tmp_87*(tmp_169*tmp_997 + tmp_173*tmp_963 + tmp_174*tmp_967);
      real_t a_5_2 = tmp_110*(tmp_213*tmp_998 + tmp_216*tmp_972 + tmp_217*tmp_976) + tmp_133*(tmp_219*tmp_999 + tmp_222*tmp_981 + tmp_223*tmp_985) + tmp_156*(tmp_1000*tmp_225 + tmp_228*tmp_990 + tmp_229*tmp_994) + tmp_64*(tmp_201*tmp_996 + tmp_204*tmp_954 + tmp_205*tmp_958) + tmp_87*(tmp_207*tmp_997 + tmp_210*tmp_963 + tmp_211*tmp_967);
      real_t a_5_3 = tmp_110*(tmp_244*tmp_998 + tmp_247*tmp_972 + tmp_248*tmp_976) + tmp_133*(tmp_250*tmp_999 + tmp_253*tmp_981 + tmp_254*tmp_985) + tmp_156*(tmp_1000*tmp_256 + tmp_259*tmp_990 + tmp_260*tmp_994) + tmp_64*(tmp_232*tmp_996 + tmp_235*tmp_954 + tmp_236*tmp_958) + tmp_87*(tmp_238*tmp_997 + tmp_241*tmp_963 + tmp_242*tmp_967);
      real_t a_5_4 = tmp_110*(tmp_303*tmp_378 + tmp_308*tmp_973 + tmp_311*tmp_977 + tmp_928) + tmp_133*(tmp_320*tmp_393 + tmp_325*tmp_982 + tmp_328*tmp_986 + tmp_929) + tmp_156*(tmp_337*tmp_408 + tmp_342*tmp_991 + tmp_345*tmp_995 + tmp_930) + tmp_64*(tmp_269*tmp_348 + tmp_274*tmp_955 + tmp_277*tmp_959 + tmp_926) + tmp_87*(tmp_286*tmp_363 + tmp_291*tmp_964 + tmp_294*tmp_968 + tmp_927);
      real_t a_5_5 = tmp_110*(tmp_378*tmp_383 + tmp_387*tmp_973 + tmp_390*tmp_977 - 10.666666666666666*((tmp_1005 + tmp_1006)*(tmp_1005 + tmp_1006))) + tmp_133*(tmp_393*tmp_398 + tmp_402*tmp_982 + tmp_405*tmp_986 - 10.666666666666666*((tmp_1007 + tmp_1008)*(tmp_1007 + tmp_1008))) + tmp_156*(tmp_408*tmp_413 + tmp_417*tmp_991 + tmp_420*tmp_995 - 10.666666666666666*((tmp_1009 + tmp_1010)*(tmp_1009 + tmp_1010))) + tmp_64*(tmp_348*tmp_353 + tmp_357*tmp_955 + tmp_360*tmp_959 - 10.666666666666666*((tmp_1001 + tmp_1002)*(tmp_1001 + tmp_1002))) + tmp_87*(tmp_363*tmp_368 + tmp_372*tmp_964 + tmp_375*tmp_968 - 10.666666666666666*((tmp_1003 + tmp_1004)*(tmp_1003 + tmp_1004)));
      real_t a_5_6 = tmp_110*(tmp_1013 + tmp_378*tmp_453 + tmp_456*tmp_973 + tmp_459*tmp_977) + tmp_133*(tmp_1014 + tmp_393*tmp_466 + tmp_469*tmp_982 + tmp_472*tmp_986) + tmp_156*(tmp_1015 + tmp_408*tmp_479 + tmp_482*tmp_991 + tmp_485*tmp_995) + tmp_64*(tmp_1011 + tmp_348*tmp_427 + tmp_430*tmp_955 + tmp_433*tmp_959) + tmp_87*(tmp_1012 + tmp_363*tmp_440 + tmp_443*tmp_964 + tmp_446*tmp_968);
      real_t a_5_7 = tmp_110*(tmp_1018 + tmp_378*tmp_517 + tmp_519*tmp_973 + tmp_521*tmp_977) + tmp_133*(tmp_1019 + tmp_393*tmp_529 + tmp_531*tmp_982 + tmp_533*tmp_986) + tmp_156*(tmp_1020 + tmp_408*tmp_541 + tmp_543*tmp_991 + tmp_545*tmp_995) + tmp_64*(tmp_1016 + tmp_348*tmp_493 + tmp_495*tmp_955 + tmp_497*tmp_959) + tmp_87*(tmp_1017 + tmp_363*tmp_505 + tmp_507*tmp_964 + tmp_509*tmp_968);
      real_t a_5_8 = tmp_110*(tmp_1023 + tmp_378*tmp_574 + tmp_576*tmp_973 + tmp_578*tmp_977) + tmp_133*(tmp_1024 + tmp_393*tmp_585 + tmp_587*tmp_982 + tmp_589*tmp_986) + tmp_156*(tmp_1025 + tmp_408*tmp_596 + tmp_598*tmp_991 + tmp_600*tmp_995) + tmp_64*(tmp_1021 + tmp_348*tmp_552 + tmp_554*tmp_955 + tmp_556*tmp_959) + tmp_87*(tmp_1022 + tmp_363*tmp_563 + tmp_565*tmp_964 + tmp_567*tmp_968);
      real_t a_5_9 = tmp_110*(tmp_1028 + tmp_378*tmp_626 + tmp_628*tmp_973 + tmp_630*tmp_977) + tmp_133*(tmp_1029 + tmp_393*tmp_636 + tmp_638*tmp_982 + tmp_640*tmp_986) + tmp_156*(tmp_1030 + tmp_408*tmp_646 + tmp_648*tmp_991 + tmp_650*tmp_995) + tmp_64*(tmp_1026 + tmp_348*tmp_606 + tmp_608*tmp_955 + tmp_610*tmp_959) + tmp_87*(tmp_1027 + tmp_363*tmp_616 + tmp_618*tmp_964 + tmp_620*tmp_968);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_1054 + tmp_1050*tmp_99 + tmp_109*tmp_449 + tmp_450) + tmp_133*(tmp_1058*tmp_122 + tmp_1062*tmp_128 + tmp_132*tmp_462 + tmp_463) + tmp_156*(tmp_1066*tmp_145 + tmp_1070*tmp_151 + tmp_155*tmp_475 + tmp_476) + tmp_64*(tmp_1034*tmp_37 + tmp_1038*tmp_46 + tmp_423*tmp_50 + tmp_424) + tmp_87*(tmp_1042*tmp_76 + tmp_1046*tmp_82 + tmp_436*tmp_86 + tmp_437);
      real_t a_6_1 = tmp_110*(tmp_1049*tmp_181 + tmp_1053*tmp_182 + tmp_1073*tmp_177) + tmp_133*(tmp_1057*tmp_189 + tmp_1061*tmp_190 + tmp_1074*tmp_185) + tmp_156*(tmp_1065*tmp_197 + tmp_1069*tmp_198 + tmp_1075*tmp_193) + tmp_64*(tmp_1033*tmp_165 + tmp_1037*tmp_166 + tmp_1071*tmp_160) + tmp_87*(tmp_1041*tmp_173 + tmp_1045*tmp_174 + tmp_1072*tmp_169);
      real_t a_6_2 = tmp_110*(tmp_1049*tmp_216 + tmp_1053*tmp_217 + tmp_1073*tmp_213) + tmp_133*(tmp_1057*tmp_222 + tmp_1061*tmp_223 + tmp_1074*tmp_219) + tmp_156*(tmp_1065*tmp_228 + tmp_1069*tmp_229 + tmp_1075*tmp_225) + tmp_64*(tmp_1033*tmp_204 + tmp_1037*tmp_205 + tmp_1071*tmp_201) + tmp_87*(tmp_1041*tmp_210 + tmp_1045*tmp_211 + tmp_1072*tmp_207);
      real_t a_6_3 = tmp_110*(tmp_1049*tmp_247 + tmp_1053*tmp_248 + tmp_1073*tmp_244) + tmp_133*(tmp_1057*tmp_253 + tmp_1061*tmp_254 + tmp_1074*tmp_250) + tmp_156*(tmp_1065*tmp_259 + tmp_1069*tmp_260 + tmp_1075*tmp_256) + tmp_64*(tmp_1033*tmp_235 + tmp_1037*tmp_236 + tmp_1071*tmp_232) + tmp_87*(tmp_1041*tmp_241 + tmp_1045*tmp_242 + tmp_1072*tmp_238);
      real_t a_6_4 = tmp_110*(tmp_1050*tmp_308 + tmp_1054*tmp_311 + tmp_303*tmp_449 + tmp_933) + tmp_133*(tmp_1058*tmp_325 + tmp_1062*tmp_328 + tmp_320*tmp_462 + tmp_934) + tmp_156*(tmp_1066*tmp_342 + tmp_1070*tmp_345 + tmp_337*tmp_475 + tmp_935) + tmp_64*(tmp_1034*tmp_274 + tmp_1038*tmp_277 + tmp_269*tmp_423 + tmp_931) + tmp_87*(tmp_1042*tmp_291 + tmp_1046*tmp_294 + tmp_286*tmp_436 + tmp_932);
      real_t a_6_5 = tmp_110*(tmp_1013 + tmp_1050*tmp_387 + tmp_1054*tmp_390 + tmp_383*tmp_449) + tmp_133*(tmp_1014 + tmp_1058*tmp_402 + tmp_1062*tmp_405 + tmp_398*tmp_462) + tmp_156*(tmp_1015 + tmp_1066*tmp_417 + tmp_1070*tmp_420 + tmp_413*tmp_475) + tmp_64*(tmp_1011 + tmp_1034*tmp_357 + tmp_1038*tmp_360 + tmp_353*tmp_423) + tmp_87*(tmp_1012 + tmp_1042*tmp_372 + tmp_1046*tmp_375 + tmp_368*tmp_436);
      real_t a_6_6 = tmp_110*(tmp_1050*tmp_456 + tmp_1054*tmp_459 + tmp_449*tmp_453 - 10.666666666666666*((tmp_1080 + tmp_1081)*(tmp_1080 + tmp_1081))) + tmp_133*(tmp_1058*tmp_469 + tmp_1062*tmp_472 + tmp_462*tmp_466 - 10.666666666666666*((tmp_1082 + tmp_1083)*(tmp_1082 + tmp_1083))) + tmp_156*(tmp_1066*tmp_482 + tmp_1070*tmp_485 + tmp_475*tmp_479 - 10.666666666666666*((tmp_1084 + tmp_1085)*(tmp_1084 + tmp_1085))) + tmp_64*(tmp_1034*tmp_430 + tmp_1038*tmp_433 + tmp_423*tmp_427 - 10.666666666666666*((tmp_1076 + tmp_1077)*(tmp_1076 + tmp_1077))) + tmp_87*(tmp_1042*tmp_443 + tmp_1046*tmp_446 + tmp_436*tmp_440 - 10.666666666666666*((tmp_1078 + tmp_1079)*(tmp_1078 + tmp_1079)));
      real_t a_6_7 = tmp_110*(tmp_1050*tmp_519 + tmp_1054*tmp_521 + tmp_1088 + tmp_449*tmp_517) + tmp_133*(tmp_1058*tmp_531 + tmp_1062*tmp_533 + tmp_1089 + tmp_462*tmp_529) + tmp_156*(tmp_1066*tmp_543 + tmp_1070*tmp_545 + tmp_1090 + tmp_475*tmp_541) + tmp_64*(tmp_1034*tmp_495 + tmp_1038*tmp_497 + tmp_1086 + tmp_423*tmp_493) + tmp_87*(tmp_1042*tmp_507 + tmp_1046*tmp_509 + tmp_1087 + tmp_436*tmp_505);
      real_t a_6_8 = tmp_110*(tmp_1050*tmp_576 + tmp_1054*tmp_578 + tmp_1093 + tmp_449*tmp_574) + tmp_133*(tmp_1058*tmp_587 + tmp_1062*tmp_589 + tmp_1094 + tmp_462*tmp_585) + tmp_156*(tmp_1066*tmp_598 + tmp_1070*tmp_600 + tmp_1095 + tmp_475*tmp_596) + tmp_64*(tmp_1034*tmp_554 + tmp_1038*tmp_556 + tmp_1091 + tmp_423*tmp_552) + tmp_87*(tmp_1042*tmp_565 + tmp_1046*tmp_567 + tmp_1092 + tmp_436*tmp_563);
      real_t a_6_9 = tmp_110*(tmp_1050*tmp_628 + tmp_1054*tmp_630 + tmp_1098 + tmp_449*tmp_626) + tmp_133*(tmp_1058*tmp_638 + tmp_1062*tmp_640 + tmp_1099 + tmp_462*tmp_636) + tmp_156*(tmp_1066*tmp_648 + tmp_1070*tmp_650 + tmp_1100 + tmp_475*tmp_646) + tmp_64*(tmp_1034*tmp_608 + tmp_1038*tmp_610 + tmp_1096 + tmp_423*tmp_606) + tmp_87*(tmp_1042*tmp_618 + tmp_1046*tmp_620 + tmp_1097 + tmp_436*tmp_616);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_1114 + tmp_109*tmp_1115 + tmp_1112*tmp_99 + tmp_516) + tmp_133*(tmp_1117*tmp_122 + tmp_1119*tmp_128 + tmp_1120*tmp_132 + tmp_528) + tmp_156*(tmp_1122*tmp_145 + tmp_1124*tmp_151 + tmp_1125*tmp_155 + tmp_540) + tmp_64*(tmp_1102*tmp_37 + tmp_1104*tmp_46 + tmp_1105*tmp_50 + tmp_492) + tmp_87*(tmp_1107*tmp_76 + tmp_1109*tmp_82 + tmp_1110*tmp_86 + tmp_504);
      real_t a_7_1 = tmp_110*(tmp_1111*tmp_181 + tmp_1113*tmp_182 + tmp_1128*tmp_177 + tmp_728) + tmp_133*(tmp_1116*tmp_189 + tmp_1118*tmp_190 + tmp_1129*tmp_185 + tmp_730) + tmp_156*(tmp_1121*tmp_197 + tmp_1123*tmp_198 + tmp_1130*tmp_193 + tmp_732) + tmp_64*(tmp_1101*tmp_165 + tmp_1103*tmp_166 + tmp_1126*tmp_160 + tmp_724) + tmp_87*(tmp_1106*tmp_173 + tmp_1108*tmp_174 + tmp_1127*tmp_169 + tmp_726);
      real_t a_7_2 = tmp_110*(tmp_1111*tmp_216 + tmp_1113*tmp_217 + tmp_1128*tmp_213 + tmp_800) + tmp_133*(tmp_1116*tmp_222 + tmp_1118*tmp_223 + tmp_1129*tmp_219 + tmp_801) + tmp_156*(tmp_1121*tmp_228 + tmp_1123*tmp_229 + tmp_1130*tmp_225 + tmp_802) + tmp_64*(tmp_1101*tmp_204 + tmp_1103*tmp_205 + tmp_1126*tmp_201 + tmp_798) + tmp_87*(tmp_1106*tmp_210 + tmp_1108*tmp_211 + tmp_1127*tmp_207 + tmp_799);
      real_t a_7_3 = tmp_110*(tmp_1111*tmp_247 + tmp_1113*tmp_248 + tmp_1128*tmp_244 + tmp_848) + tmp_133*(tmp_1116*tmp_253 + tmp_1118*tmp_254 + tmp_1129*tmp_250 + tmp_849) + tmp_156*(tmp_1121*tmp_259 + tmp_1123*tmp_260 + tmp_1130*tmp_256 + tmp_850) + tmp_64*(tmp_1101*tmp_235 + tmp_1103*tmp_236 + tmp_1126*tmp_232 + tmp_846) + tmp_87*(tmp_1106*tmp_241 + tmp_1108*tmp_242 + tmp_1127*tmp_238 + tmp_847);
      real_t a_7_4 = tmp_110*(tmp_1112*tmp_308 + tmp_1114*tmp_311 + tmp_1115*tmp_303 + tmp_938) + tmp_133*(tmp_1117*tmp_325 + tmp_1119*tmp_328 + tmp_1120*tmp_320 + tmp_939) + tmp_156*(tmp_1122*tmp_342 + tmp_1124*tmp_345 + tmp_1125*tmp_337 + tmp_940) + tmp_64*(tmp_1102*tmp_274 + tmp_1104*tmp_277 + tmp_1105*tmp_269 + tmp_936) + tmp_87*(tmp_1107*tmp_291 + tmp_1109*tmp_294 + tmp_1110*tmp_286 + tmp_937);
      real_t a_7_5 = tmp_110*(tmp_1018 + tmp_1112*tmp_387 + tmp_1114*tmp_390 + tmp_1115*tmp_383) + tmp_133*(tmp_1019 + tmp_1117*tmp_402 + tmp_1119*tmp_405 + tmp_1120*tmp_398) + tmp_156*(tmp_1020 + tmp_1122*tmp_417 + tmp_1124*tmp_420 + tmp_1125*tmp_413) + tmp_64*(tmp_1016 + tmp_1102*tmp_357 + tmp_1104*tmp_360 + tmp_1105*tmp_353) + tmp_87*(tmp_1017 + tmp_1107*tmp_372 + tmp_1109*tmp_375 + tmp_1110*tmp_368);
      real_t a_7_6 = tmp_110*(tmp_1088 + tmp_1112*tmp_456 + tmp_1114*tmp_459 + tmp_1115*tmp_453) + tmp_133*(tmp_1089 + tmp_1117*tmp_469 + tmp_1119*tmp_472 + tmp_1120*tmp_466) + tmp_156*(tmp_1090 + tmp_1122*tmp_482 + tmp_1124*tmp_485 + tmp_1125*tmp_479) + tmp_64*(tmp_1086 + tmp_1102*tmp_430 + tmp_1104*tmp_433 + tmp_1105*tmp_427) + tmp_87*(tmp_1087 + tmp_1107*tmp_443 + tmp_1109*tmp_446 + tmp_1110*tmp_440);
      real_t a_7_7 = tmp_110*(tmp_1112*tmp_519 + tmp_1114*tmp_521 + tmp_1115*tmp_517 - 10.666666666666666*((-tmp_1006 + 0.25*tmp_513 - tmp_921)*(-tmp_1006 + 0.25*tmp_513 - tmp_921))) + tmp_133*(tmp_1117*tmp_531 + tmp_1119*tmp_533 + tmp_1120*tmp_529 - 10.666666666666666*((-tmp_1008 + 0.25*tmp_525 - tmp_923)*(-tmp_1008 + 0.25*tmp_525 - tmp_923))) + tmp_156*(tmp_1122*tmp_543 + tmp_1124*tmp_545 + tmp_1125*tmp_541 - 10.666666666666666*((-tmp_1010 + 0.25*tmp_537 - tmp_925)*(-tmp_1010 + 0.25*tmp_537 - tmp_925))) + tmp_64*(tmp_1102*tmp_495 + tmp_1104*tmp_497 + tmp_1105*tmp_493 - 10.666666666666666*((-tmp_1002 + 0.25*tmp_489 - tmp_917)*(-tmp_1002 + 0.25*tmp_489 - tmp_917))) + tmp_87*(tmp_1107*tmp_507 + tmp_1109*tmp_509 + tmp_1110*tmp_505 - 10.666666666666666*((-tmp_1004 + 0.25*tmp_501 - tmp_919)*(-tmp_1004 + 0.25*tmp_501 - tmp_919)));
      real_t a_7_8 = tmp_110*(tmp_1112*tmp_576 + tmp_1114*tmp_578 + tmp_1115*tmp_574 + tmp_1133) + tmp_133*(tmp_1117*tmp_587 + tmp_1119*tmp_589 + tmp_1120*tmp_585 + tmp_1134) + tmp_156*(tmp_1122*tmp_598 + tmp_1124*tmp_600 + tmp_1125*tmp_596 + tmp_1135) + tmp_64*(tmp_1102*tmp_554 + tmp_1104*tmp_556 + tmp_1105*tmp_552 + tmp_1131) + tmp_87*(tmp_1107*tmp_565 + tmp_1109*tmp_567 + tmp_1110*tmp_563 + tmp_1132);
      real_t a_7_9 = tmp_110*(tmp_1112*tmp_628 + tmp_1114*tmp_630 + tmp_1115*tmp_626 + tmp_1138) + tmp_133*(tmp_1117*tmp_638 + tmp_1119*tmp_640 + tmp_1120*tmp_636 + tmp_1139) + tmp_156*(tmp_1122*tmp_648 + tmp_1124*tmp_650 + tmp_1125*tmp_646 + tmp_1140) + tmp_64*(tmp_1102*tmp_608 + tmp_1104*tmp_610 + tmp_1105*tmp_606 + tmp_1136) + tmp_87*(tmp_1107*tmp_618 + tmp_1109*tmp_620 + tmp_1110*tmp_616 + tmp_1137);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_1154 + tmp_109*tmp_1155 + tmp_1152*tmp_99 + tmp_573) + tmp_133*(tmp_1157*tmp_122 + tmp_1159*tmp_128 + tmp_1160*tmp_132 + tmp_584) + tmp_156*(tmp_1162*tmp_145 + tmp_1164*tmp_151 + tmp_1165*tmp_155 + tmp_595) + tmp_64*(tmp_1142*tmp_37 + tmp_1144*tmp_46 + tmp_1145*tmp_50 + tmp_551) + tmp_87*(tmp_1147*tmp_76 + tmp_1149*tmp_82 + tmp_1150*tmp_86 + tmp_562);
      real_t a_8_1 = tmp_110*(tmp_1151*tmp_181 + tmp_1153*tmp_182 + tmp_1168*tmp_177 + tmp_738) + tmp_133*(tmp_1156*tmp_189 + tmp_1158*tmp_190 + tmp_1169*tmp_185 + tmp_740) + tmp_156*(tmp_1161*tmp_197 + tmp_1163*tmp_198 + tmp_1170*tmp_193 + tmp_742) + tmp_64*(tmp_1141*tmp_165 + tmp_1143*tmp_166 + tmp_1166*tmp_160 + tmp_734) + tmp_87*(tmp_1146*tmp_173 + tmp_1148*tmp_174 + tmp_1167*tmp_169 + tmp_736);
      real_t a_8_2 = tmp_110*(tmp_1151*tmp_216 + tmp_1153*tmp_217 + tmp_1168*tmp_213 + tmp_805) + tmp_133*(tmp_1156*tmp_222 + tmp_1158*tmp_223 + tmp_1169*tmp_219 + tmp_806) + tmp_156*(tmp_1161*tmp_228 + tmp_1163*tmp_229 + tmp_1170*tmp_225 + tmp_807) + tmp_64*(tmp_1141*tmp_204 + tmp_1143*tmp_205 + tmp_1166*tmp_201 + tmp_803) + tmp_87*(tmp_1146*tmp_210 + tmp_1148*tmp_211 + tmp_1167*tmp_207 + tmp_804);
      real_t a_8_3 = tmp_110*(tmp_1151*tmp_247 + tmp_1153*tmp_248 + tmp_1168*tmp_244 + tmp_853) + tmp_133*(tmp_1156*tmp_253 + tmp_1158*tmp_254 + tmp_1169*tmp_250 + tmp_854) + tmp_156*(tmp_1161*tmp_259 + tmp_1163*tmp_260 + tmp_1170*tmp_256 + tmp_855) + tmp_64*(tmp_1141*tmp_235 + tmp_1143*tmp_236 + tmp_1166*tmp_232 + tmp_851) + tmp_87*(tmp_1146*tmp_241 + tmp_1148*tmp_242 + tmp_1167*tmp_238 + tmp_852);
      real_t a_8_4 = tmp_110*(tmp_1152*tmp_308 + tmp_1154*tmp_311 + tmp_1155*tmp_303 + tmp_943) + tmp_133*(tmp_1157*tmp_325 + tmp_1159*tmp_328 + tmp_1160*tmp_320 + tmp_944) + tmp_156*(tmp_1162*tmp_342 + tmp_1164*tmp_345 + tmp_1165*tmp_337 + tmp_945) + tmp_64*(tmp_1142*tmp_274 + tmp_1144*tmp_277 + tmp_1145*tmp_269 + tmp_941) + tmp_87*(tmp_1147*tmp_291 + tmp_1149*tmp_294 + tmp_1150*tmp_286 + tmp_942);
      real_t a_8_5 = tmp_110*(tmp_1023 + tmp_1152*tmp_387 + tmp_1154*tmp_390 + tmp_1155*tmp_383) + tmp_133*(tmp_1024 + tmp_1157*tmp_402 + tmp_1159*tmp_405 + tmp_1160*tmp_398) + tmp_156*(tmp_1025 + tmp_1162*tmp_417 + tmp_1164*tmp_420 + tmp_1165*tmp_413) + tmp_64*(tmp_1021 + tmp_1142*tmp_357 + tmp_1144*tmp_360 + tmp_1145*tmp_353) + tmp_87*(tmp_1022 + tmp_1147*tmp_372 + tmp_1149*tmp_375 + tmp_1150*tmp_368);
      real_t a_8_6 = tmp_110*(tmp_1093 + tmp_1152*tmp_456 + tmp_1154*tmp_459 + tmp_1155*tmp_453) + tmp_133*(tmp_1094 + tmp_1157*tmp_469 + tmp_1159*tmp_472 + tmp_1160*tmp_466) + tmp_156*(tmp_1095 + tmp_1162*tmp_482 + tmp_1164*tmp_485 + tmp_1165*tmp_479) + tmp_64*(tmp_1091 + tmp_1142*tmp_430 + tmp_1144*tmp_433 + tmp_1145*tmp_427) + tmp_87*(tmp_1092 + tmp_1147*tmp_443 + tmp_1149*tmp_446 + tmp_1150*tmp_440);
      real_t a_8_7 = tmp_110*(tmp_1133 + tmp_1152*tmp_519 + tmp_1154*tmp_521 + tmp_1155*tmp_517) + tmp_133*(tmp_1134 + tmp_1157*tmp_531 + tmp_1159*tmp_533 + tmp_1160*tmp_529) + tmp_156*(tmp_1135 + tmp_1162*tmp_543 + tmp_1164*tmp_545 + tmp_1165*tmp_541) + tmp_64*(tmp_1131 + tmp_1142*tmp_495 + tmp_1144*tmp_497 + tmp_1145*tmp_493) + tmp_87*(tmp_1132 + tmp_1147*tmp_507 + tmp_1149*tmp_509 + tmp_1150*tmp_505);
      real_t a_8_8 = tmp_110*(tmp_1152*tmp_576 + tmp_1154*tmp_578 + tmp_1155*tmp_574 - 10.666666666666666*((-tmp_1081 + 0.25*tmp_570 - tmp_920)*(-tmp_1081 + 0.25*tmp_570 - tmp_920))) + tmp_133*(tmp_1157*tmp_587 + tmp_1159*tmp_589 + tmp_1160*tmp_585 - 10.666666666666666*((-tmp_1083 + 0.25*tmp_581 - tmp_922)*(-tmp_1083 + 0.25*tmp_581 - tmp_922))) + tmp_156*(tmp_1162*tmp_598 + tmp_1164*tmp_600 + tmp_1165*tmp_596 - 10.666666666666666*((-tmp_1085 + 0.25*tmp_592 - tmp_924)*(-tmp_1085 + 0.25*tmp_592 - tmp_924))) + tmp_64*(tmp_1142*tmp_554 + tmp_1144*tmp_556 + tmp_1145*tmp_552 - 10.666666666666666*((-tmp_1077 + 0.25*tmp_548 - tmp_916)*(-tmp_1077 + 0.25*tmp_548 - tmp_916))) + tmp_87*(tmp_1147*tmp_565 + tmp_1149*tmp_567 + tmp_1150*tmp_563 - 10.666666666666666*((-tmp_1079 + 0.25*tmp_559 - tmp_918)*(-tmp_1079 + 0.25*tmp_559 - tmp_918)));
      real_t a_8_9 = tmp_110*(tmp_1152*tmp_628 + tmp_1154*tmp_630 + tmp_1155*tmp_626 + tmp_1173) + tmp_133*(tmp_1157*tmp_638 + tmp_1159*tmp_640 + tmp_1160*tmp_636 + tmp_1174) + tmp_156*(tmp_1162*tmp_648 + tmp_1164*tmp_650 + tmp_1165*tmp_646 + tmp_1175) + tmp_64*(tmp_1142*tmp_608 + tmp_1144*tmp_610 + tmp_1145*tmp_606 + tmp_1171) + tmp_87*(tmp_1147*tmp_618 + tmp_1149*tmp_620 + tmp_1150*tmp_616 + tmp_1172);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_1189 + tmp_109*tmp_1190 + tmp_1187*tmp_99 + tmp_625) + tmp_133*(tmp_1192*tmp_122 + tmp_1194*tmp_128 + tmp_1195*tmp_132 + tmp_635) + tmp_156*(tmp_1197*tmp_145 + tmp_1199*tmp_151 + tmp_1200*tmp_155 + tmp_645) + tmp_64*(tmp_1177*tmp_37 + tmp_1179*tmp_46 + tmp_1180*tmp_50 + tmp_605) + tmp_87*(tmp_1182*tmp_76 + tmp_1184*tmp_82 + tmp_1185*tmp_86 + tmp_615);
      real_t a_9_1 = tmp_110*(tmp_1186*tmp_181 + tmp_1188*tmp_182 + tmp_1203*tmp_177 + tmp_748) + tmp_133*(tmp_1191*tmp_189 + tmp_1193*tmp_190 + tmp_1204*tmp_185 + tmp_750) + tmp_156*(tmp_1196*tmp_197 + tmp_1198*tmp_198 + tmp_1205*tmp_193 + tmp_752) + tmp_64*(tmp_1176*tmp_165 + tmp_1178*tmp_166 + tmp_1201*tmp_160 + tmp_744) + tmp_87*(tmp_1181*tmp_173 + tmp_1183*tmp_174 + tmp_1202*tmp_169 + tmp_746);
      real_t a_9_2 = tmp_110*(tmp_1186*tmp_216 + tmp_1188*tmp_217 + tmp_1203*tmp_213 + tmp_810) + tmp_133*(tmp_1191*tmp_222 + tmp_1193*tmp_223 + tmp_1204*tmp_219 + tmp_811) + tmp_156*(tmp_1196*tmp_228 + tmp_1198*tmp_229 + tmp_1205*tmp_225 + tmp_812) + tmp_64*(tmp_1176*tmp_204 + tmp_1178*tmp_205 + tmp_1201*tmp_201 + tmp_808) + tmp_87*(tmp_1181*tmp_210 + tmp_1183*tmp_211 + tmp_1202*tmp_207 + tmp_809);
      real_t a_9_3 = tmp_110*(tmp_1186*tmp_247 + tmp_1188*tmp_248 + tmp_1203*tmp_244 + tmp_858) + tmp_133*(tmp_1191*tmp_253 + tmp_1193*tmp_254 + tmp_1204*tmp_250 + tmp_859) + tmp_156*(tmp_1196*tmp_259 + tmp_1198*tmp_260 + tmp_1205*tmp_256 + tmp_860) + tmp_64*(tmp_1176*tmp_235 + tmp_1178*tmp_236 + tmp_1201*tmp_232 + tmp_856) + tmp_87*(tmp_1181*tmp_241 + tmp_1183*tmp_242 + tmp_1202*tmp_238 + tmp_857);
      real_t a_9_4 = tmp_110*(tmp_1187*tmp_308 + tmp_1189*tmp_311 + tmp_1190*tmp_303 + tmp_948) + tmp_133*(tmp_1192*tmp_325 + tmp_1194*tmp_328 + tmp_1195*tmp_320 + tmp_949) + tmp_156*(tmp_1197*tmp_342 + tmp_1199*tmp_345 + tmp_1200*tmp_337 + tmp_950) + tmp_64*(tmp_1177*tmp_274 + tmp_1179*tmp_277 + tmp_1180*tmp_269 + tmp_946) + tmp_87*(tmp_1182*tmp_291 + tmp_1184*tmp_294 + tmp_1185*tmp_286 + tmp_947);
      real_t a_9_5 = tmp_110*(tmp_1028 + tmp_1187*tmp_387 + tmp_1189*tmp_390 + tmp_1190*tmp_383) + tmp_133*(tmp_1029 + tmp_1192*tmp_402 + tmp_1194*tmp_405 + tmp_1195*tmp_398) + tmp_156*(tmp_1030 + tmp_1197*tmp_417 + tmp_1199*tmp_420 + tmp_1200*tmp_413) + tmp_64*(tmp_1026 + tmp_1177*tmp_357 + tmp_1179*tmp_360 + tmp_1180*tmp_353) + tmp_87*(tmp_1027 + tmp_1182*tmp_372 + tmp_1184*tmp_375 + tmp_1185*tmp_368);
      real_t a_9_6 = tmp_110*(tmp_1098 + tmp_1187*tmp_456 + tmp_1189*tmp_459 + tmp_1190*tmp_453) + tmp_133*(tmp_1099 + tmp_1192*tmp_469 + tmp_1194*tmp_472 + tmp_1195*tmp_466) + tmp_156*(tmp_1100 + tmp_1197*tmp_482 + tmp_1199*tmp_485 + tmp_1200*tmp_479) + tmp_64*(tmp_1096 + tmp_1177*tmp_430 + tmp_1179*tmp_433 + tmp_1180*tmp_427) + tmp_87*(tmp_1097 + tmp_1182*tmp_443 + tmp_1184*tmp_446 + tmp_1185*tmp_440);
      real_t a_9_7 = tmp_110*(tmp_1138 + tmp_1187*tmp_519 + tmp_1189*tmp_521 + tmp_1190*tmp_517) + tmp_133*(tmp_1139 + tmp_1192*tmp_531 + tmp_1194*tmp_533 + tmp_1195*tmp_529) + tmp_156*(tmp_1140 + tmp_1197*tmp_543 + tmp_1199*tmp_545 + tmp_1200*tmp_541) + tmp_64*(tmp_1136 + tmp_1177*tmp_495 + tmp_1179*tmp_497 + tmp_1180*tmp_493) + tmp_87*(tmp_1137 + tmp_1182*tmp_507 + tmp_1184*tmp_509 + tmp_1185*tmp_505);
      real_t a_9_8 = tmp_110*(tmp_1173 + tmp_1187*tmp_576 + tmp_1189*tmp_578 + tmp_1190*tmp_574) + tmp_133*(tmp_1174 + tmp_1192*tmp_587 + tmp_1194*tmp_589 + tmp_1195*tmp_585) + tmp_156*(tmp_1175 + tmp_1197*tmp_598 + tmp_1199*tmp_600 + tmp_1200*tmp_596) + tmp_64*(tmp_1171 + tmp_1177*tmp_554 + tmp_1179*tmp_556 + tmp_1180*tmp_552) + tmp_87*(tmp_1172 + tmp_1182*tmp_565 + tmp_1184*tmp_567 + tmp_1185*tmp_563);
      real_t a_9_9 = tmp_110*(tmp_1187*tmp_628 + tmp_1189*tmp_630 + tmp_1190*tmp_626 - 10.666666666666666*((-tmp_1005 - tmp_1080 + 0.25*tmp_622)*(-tmp_1005 - tmp_1080 + 0.25*tmp_622))) + tmp_133*(tmp_1192*tmp_638 + tmp_1194*tmp_640 + tmp_1195*tmp_636 - 10.666666666666666*((-tmp_1007 - tmp_1082 + 0.25*tmp_632)*(-tmp_1007 - tmp_1082 + 0.25*tmp_632))) + tmp_156*(tmp_1197*tmp_648 + tmp_1199*tmp_650 + tmp_1200*tmp_646 - 10.666666666666666*((-tmp_1009 - tmp_1084 + 0.25*tmp_642)*(-tmp_1009 - tmp_1084 + 0.25*tmp_642))) + tmp_64*(tmp_1177*tmp_608 + tmp_1179*tmp_610 + tmp_1180*tmp_606 - 10.666666666666666*((-tmp_1001 - tmp_1076 + 0.25*tmp_602)*(-tmp_1001 - tmp_1076 + 0.25*tmp_602))) + tmp_87*(tmp_1182*tmp_618 + tmp_1184*tmp_620 + tmp_1185*tmp_616 - 10.666666666666666*((-tmp_1003 - tmp_1078 + 0.25*tmp_612)*(-tmp_1003 - tmp_1078 + 0.25*tmp_612)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_2_affine_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 1.0;
      real_t tmp_21 = 1.0;
      real_t tmp_22 = 1.0;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_13 - tmp_18;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = -0.1333333333333333*tmp_59;
      real_t tmp_61 = 0.66666666666666663;
      real_t tmp_62 = 0.66666666666666663;
      real_t tmp_63 = 2.0;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.074999999999999983*tmp_59;
      real_t tmp_81 = 0.66666666666666663;
      real_t tmp_82 = 2.0;
      real_t tmp_83 = 0.66666666666666663;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.074999999999999983*tmp_59;
      real_t tmp_101 = 2.0;
      real_t tmp_102 = 0.66666666666666663;
      real_t tmp_103 = 0.66666666666666663;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.074999999999999983*tmp_59;
      real_t tmp_121 = 0.66666666666666663;
      real_t tmp_122 = 0.66666666666666663;
      real_t tmp_123 = 0.66666666666666663;
      real_t tmp_124 = tmp_19*(tmp_121 + tmp_122 + tmp_123 - 3.0);
      real_t tmp_125 = tmp_124*tmp_8;
      real_t tmp_126 = tmp_124*tmp_25;
      real_t tmp_127 = tmp_124*tmp_27;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = tmp_124*tmp_30;
      real_t tmp_130 = tmp_124*tmp_32;
      real_t tmp_131 = tmp_124*tmp_34;
      real_t tmp_132 = 0.5*tmp_129 + 0.5*tmp_130 + 0.5*tmp_131;
      real_t tmp_133 = 2*tmp_132;
      real_t tmp_134 = tmp_124*tmp_38;
      real_t tmp_135 = tmp_124*tmp_40;
      real_t tmp_136 = tmp_124*tmp_42;
      real_t tmp_137 = 0.5*tmp_134 + 0.5*tmp_135 + 0.5*tmp_136;
      real_t tmp_138 = 2*tmp_137;
      real_t tmp_139 = 1.0*tmp_125 + 1.0*tmp_126 + 1.0*tmp_127;
      real_t tmp_140 = 0.074999999999999983*tmp_59;
      real_t tmp_141 = (2.0/3.0)*tmp_29;
      real_t tmp_142 = tmp_20 - 1.0;
      real_t tmp_143 = tmp_19*tmp_27;
      real_t tmp_144 = tmp_142*tmp_143;
      real_t tmp_145 = 2.0*tmp_46;
      real_t tmp_146 = 2.0*tmp_19;
      real_t tmp_147 = tmp_142*tmp_146;
      real_t tmp_148 = (2.0/3.0)*tmp_68;
      real_t tmp_149 = tmp_61 - 1.0;
      real_t tmp_150 = tmp_143*tmp_149;
      real_t tmp_151 = 2.0*tmp_79;
      real_t tmp_152 = tmp_146*tmp_149;
      real_t tmp_153 = (2.0/3.0)*tmp_88;
      real_t tmp_154 = tmp_81 - 1.0;
      real_t tmp_155 = tmp_143*tmp_154;
      real_t tmp_156 = 2.0*tmp_99;
      real_t tmp_157 = tmp_146*tmp_154;
      real_t tmp_158 = (2.0/3.0)*tmp_108;
      real_t tmp_159 = tmp_101 - 1.0;
      real_t tmp_160 = tmp_143*tmp_159;
      real_t tmp_161 = 2.0*tmp_119;
      real_t tmp_162 = tmp_146*tmp_159;
      real_t tmp_163 = (2.0/3.0)*tmp_128;
      real_t tmp_164 = tmp_121 - 1.0;
      real_t tmp_165 = tmp_143*tmp_164;
      real_t tmp_166 = 2.0*tmp_139;
      real_t tmp_167 = tmp_146*tmp_164;
      real_t tmp_168 = tmp_21 - 1.0;
      real_t tmp_169 = tmp_19*tmp_25;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = tmp_146*tmp_168;
      real_t tmp_172 = tmp_62 - 1.0;
      real_t tmp_173 = tmp_169*tmp_172;
      real_t tmp_174 = tmp_146*tmp_172;
      real_t tmp_175 = tmp_82 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = tmp_146*tmp_175;
      real_t tmp_178 = tmp_102 - 1.0;
      real_t tmp_179 = tmp_169*tmp_178;
      real_t tmp_180 = tmp_146*tmp_178;
      real_t tmp_181 = tmp_122 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = tmp_146*tmp_181;
      real_t tmp_184 = tmp_22 - 1.0;
      real_t tmp_185 = tmp_19*tmp_8;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_146*tmp_184;
      real_t tmp_188 = tmp_63 - 1.0;
      real_t tmp_189 = tmp_185*tmp_188;
      real_t tmp_190 = tmp_146*tmp_188;
      real_t tmp_191 = tmp_83 - 1.0;
      real_t tmp_192 = tmp_185*tmp_191;
      real_t tmp_193 = tmp_146*tmp_191;
      real_t tmp_194 = tmp_103 - 1.0;
      real_t tmp_195 = tmp_185*tmp_194;
      real_t tmp_196 = tmp_146*tmp_194;
      real_t tmp_197 = tmp_123 - 1.0;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_146*tmp_197;
      real_t tmp_200 = tmp_185*tmp_21;
      real_t tmp_201 = tmp_169*tmp_22;
      real_t tmp_202 = 2.0;
      real_t tmp_203 = tmp_185*tmp_202;
      real_t tmp_204 = 2.0;
      real_t tmp_205 = tmp_169*tmp_204;
      real_t tmp_206 = tmp_19*tmp_21;
      real_t tmp_207 = tmp_206*tmp_30;
      real_t tmp_208 = tmp_19*tmp_22;
      real_t tmp_209 = tmp_208*tmp_32;
      real_t tmp_210 = tmp_206*tmp_38;
      real_t tmp_211 = tmp_208*tmp_40;
      real_t tmp_212 = tmp_185*tmp_62;
      real_t tmp_213 = tmp_169*tmp_63;
      real_t tmp_214 = 1.3333333333333333;
      real_t tmp_215 = tmp_185*tmp_214;
      real_t tmp_216 = 4.0;
      real_t tmp_217 = tmp_169*tmp_216;
      real_t tmp_218 = tmp_19*tmp_62;
      real_t tmp_219 = tmp_218*tmp_30;
      real_t tmp_220 = tmp_19*tmp_63;
      real_t tmp_221 = tmp_220*tmp_32;
      real_t tmp_222 = tmp_218*tmp_38;
      real_t tmp_223 = tmp_220*tmp_40;
      real_t tmp_224 = tmp_185*tmp_82;
      real_t tmp_225 = tmp_169*tmp_83;
      real_t tmp_226 = 4.0;
      real_t tmp_227 = tmp_185*tmp_226;
      real_t tmp_228 = 1.3333333333333333;
      real_t tmp_229 = tmp_169*tmp_228;
      real_t tmp_230 = tmp_19*tmp_82;
      real_t tmp_231 = tmp_230*tmp_30;
      real_t tmp_232 = tmp_19*tmp_83;
      real_t tmp_233 = tmp_232*tmp_32;
      real_t tmp_234 = tmp_230*tmp_38;
      real_t tmp_235 = tmp_232*tmp_40;
      real_t tmp_236 = tmp_102*tmp_185;
      real_t tmp_237 = tmp_103*tmp_169;
      real_t tmp_238 = 1.3333333333333333;
      real_t tmp_239 = tmp_185*tmp_238;
      real_t tmp_240 = 1.3333333333333333;
      real_t tmp_241 = tmp_169*tmp_240;
      real_t tmp_242 = tmp_102*tmp_19;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_103*tmp_19;
      real_t tmp_245 = tmp_244*tmp_32;
      real_t tmp_246 = tmp_242*tmp_38;
      real_t tmp_247 = tmp_244*tmp_40;
      real_t tmp_248 = tmp_122*tmp_185;
      real_t tmp_249 = tmp_123*tmp_169;
      real_t tmp_250 = 1.3333333333333333;
      real_t tmp_251 = tmp_185*tmp_250;
      real_t tmp_252 = 1.3333333333333333;
      real_t tmp_253 = tmp_169*tmp_252;
      real_t tmp_254 = tmp_122*tmp_19;
      real_t tmp_255 = tmp_254*tmp_30;
      real_t tmp_256 = tmp_123*tmp_19;
      real_t tmp_257 = tmp_256*tmp_32;
      real_t tmp_258 = tmp_254*tmp_38;
      real_t tmp_259 = tmp_256*tmp_40;
      real_t tmp_260 = tmp_185*tmp_20;
      real_t tmp_261 = tmp_208*tmp_27;
      real_t tmp_262 = 2.0;
      real_t tmp_263 = tmp_185*tmp_262;
      real_t tmp_264 = tmp_143*tmp_204;
      real_t tmp_265 = tmp_19*tmp_20;
      real_t tmp_266 = tmp_265*tmp_30;
      real_t tmp_267 = tmp_208*tmp_34;
      real_t tmp_268 = tmp_265*tmp_38;
      real_t tmp_269 = tmp_208*tmp_42;
      real_t tmp_270 = tmp_185*tmp_61;
      real_t tmp_271 = tmp_220*tmp_27;
      real_t tmp_272 = 1.3333333333333333;
      real_t tmp_273 = tmp_185*tmp_272;
      real_t tmp_274 = tmp_143*tmp_216;
      real_t tmp_275 = tmp_19*tmp_61;
      real_t tmp_276 = tmp_275*tmp_30;
      real_t tmp_277 = tmp_220*tmp_34;
      real_t tmp_278 = tmp_275*tmp_38;
      real_t tmp_279 = tmp_220*tmp_42;
      real_t tmp_280 = tmp_185*tmp_81;
      real_t tmp_281 = tmp_232*tmp_27;
      real_t tmp_282 = 1.3333333333333333;
      real_t tmp_283 = tmp_185*tmp_282;
      real_t tmp_284 = tmp_143*tmp_228;
      real_t tmp_285 = tmp_19*tmp_81;
      real_t tmp_286 = tmp_285*tmp_30;
      real_t tmp_287 = tmp_232*tmp_34;
      real_t tmp_288 = tmp_285*tmp_38;
      real_t tmp_289 = tmp_232*tmp_42;
      real_t tmp_290 = tmp_101*tmp_185;
      real_t tmp_291 = tmp_244*tmp_27;
      real_t tmp_292 = 4.0;
      real_t tmp_293 = tmp_185*tmp_292;
      real_t tmp_294 = tmp_143*tmp_240;
      real_t tmp_295 = tmp_101*tmp_19;
      real_t tmp_296 = tmp_295*tmp_30;
      real_t tmp_297 = tmp_244*tmp_34;
      real_t tmp_298 = tmp_295*tmp_38;
      real_t tmp_299 = tmp_244*tmp_42;
      real_t tmp_300 = tmp_121*tmp_185;
      real_t tmp_301 = tmp_256*tmp_27;
      real_t tmp_302 = 1.3333333333333333;
      real_t tmp_303 = tmp_185*tmp_302;
      real_t tmp_304 = tmp_143*tmp_252;
      real_t tmp_305 = tmp_121*tmp_19;
      real_t tmp_306 = tmp_30*tmp_305;
      real_t tmp_307 = tmp_256*tmp_34;
      real_t tmp_308 = tmp_305*tmp_38;
      real_t tmp_309 = tmp_256*tmp_42;
      real_t tmp_310 = tmp_169*tmp_20;
      real_t tmp_311 = tmp_206*tmp_27;
      real_t tmp_312 = tmp_169*tmp_262;
      real_t tmp_313 = tmp_143*tmp_202;
      real_t tmp_314 = tmp_265*tmp_32;
      real_t tmp_315 = tmp_206*tmp_34;
      real_t tmp_316 = tmp_265*tmp_40;
      real_t tmp_317 = tmp_206*tmp_42;
      real_t tmp_318 = tmp_169*tmp_61;
      real_t tmp_319 = tmp_218*tmp_27;
      real_t tmp_320 = tmp_169*tmp_272;
      real_t tmp_321 = tmp_143*tmp_214;
      real_t tmp_322 = tmp_275*tmp_32;
      real_t tmp_323 = tmp_218*tmp_34;
      real_t tmp_324 = tmp_275*tmp_40;
      real_t tmp_325 = tmp_218*tmp_42;
      real_t tmp_326 = tmp_169*tmp_81;
      real_t tmp_327 = tmp_230*tmp_27;
      real_t tmp_328 = tmp_169*tmp_282;
      real_t tmp_329 = tmp_143*tmp_226;
      real_t tmp_330 = tmp_285*tmp_32;
      real_t tmp_331 = tmp_230*tmp_34;
      real_t tmp_332 = tmp_285*tmp_40;
      real_t tmp_333 = tmp_230*tmp_42;
      real_t tmp_334 = tmp_101*tmp_169;
      real_t tmp_335 = tmp_242*tmp_27;
      real_t tmp_336 = tmp_169*tmp_292;
      real_t tmp_337 = tmp_143*tmp_238;
      real_t tmp_338 = tmp_295*tmp_32;
      real_t tmp_339 = tmp_242*tmp_34;
      real_t tmp_340 = tmp_295*tmp_40;
      real_t tmp_341 = tmp_242*tmp_42;
      real_t tmp_342 = tmp_121*tmp_169;
      real_t tmp_343 = tmp_254*tmp_27;
      real_t tmp_344 = tmp_169*tmp_302;
      real_t tmp_345 = tmp_143*tmp_250;
      real_t tmp_346 = tmp_305*tmp_32;
      real_t tmp_347 = tmp_254*tmp_34;
      real_t tmp_348 = tmp_305*tmp_40;
      real_t tmp_349 = tmp_254*tmp_42;
      real_t tmp_350 = -tmp_21;
      real_t tmp_351 = 4.0 - tmp_20;
      real_t tmp_352 = tmp_19*(-tmp_204 + tmp_350 + tmp_351);
      real_t tmp_353 = tmp_352*tmp_8;
      real_t tmp_354 = -tmp_62;
      real_t tmp_355 = 4.0 - tmp_61;
      real_t tmp_356 = tmp_19*(-tmp_216 + tmp_354 + tmp_355);
      real_t tmp_357 = tmp_356*tmp_8;
      real_t tmp_358 = -tmp_82;
      real_t tmp_359 = 4.0 - tmp_81;
      real_t tmp_360 = tmp_19*(-tmp_228 + tmp_358 + tmp_359);
      real_t tmp_361 = tmp_360*tmp_8;
      real_t tmp_362 = -tmp_102;
      real_t tmp_363 = 4.0 - tmp_101;
      real_t tmp_364 = tmp_19*(-tmp_240 + tmp_362 + tmp_363);
      real_t tmp_365 = tmp_364*tmp_8;
      real_t tmp_366 = -tmp_122;
      real_t tmp_367 = 4.0 - tmp_121;
      real_t tmp_368 = tmp_19*(-tmp_252 + tmp_366 + tmp_367);
      real_t tmp_369 = tmp_368*tmp_8;
      real_t tmp_370 = -tmp_22;
      real_t tmp_371 = tmp_19*(-tmp_202 + tmp_351 + tmp_370);
      real_t tmp_372 = tmp_25*tmp_371;
      real_t tmp_373 = -tmp_63;
      real_t tmp_374 = tmp_19*(-tmp_214 + tmp_355 + tmp_373);
      real_t tmp_375 = tmp_25*tmp_374;
      real_t tmp_376 = -tmp_83;
      real_t tmp_377 = tmp_19*(-tmp_226 + tmp_359 + tmp_376);
      real_t tmp_378 = tmp_25*tmp_377;
      real_t tmp_379 = -tmp_103;
      real_t tmp_380 = tmp_19*(-tmp_238 + tmp_363 + tmp_379);
      real_t tmp_381 = tmp_25*tmp_380;
      real_t tmp_382 = -tmp_123;
      real_t tmp_383 = tmp_19*(-tmp_250 + tmp_367 + tmp_382);
      real_t tmp_384 = tmp_25*tmp_383;
      real_t tmp_385 = tmp_19*(-tmp_262 + tmp_350 + tmp_370 + 4.0);
      real_t tmp_386 = tmp_27*tmp_385;
      real_t tmp_387 = tmp_19*(-tmp_272 + tmp_354 + tmp_373 + 4.0);
      real_t tmp_388 = tmp_27*tmp_387;
      real_t tmp_389 = tmp_19*(-tmp_282 + tmp_358 + tmp_376 + 4.0);
      real_t tmp_390 = tmp_27*tmp_389;
      real_t tmp_391 = tmp_19*(-tmp_292 + tmp_362 + tmp_379 + 4.0);
      real_t tmp_392 = tmp_27*tmp_391;
      real_t tmp_393 = tmp_19*(-tmp_302 + tmp_366 + tmp_382 + 4.0);
      real_t tmp_394 = tmp_27*tmp_393;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_140*(-2.0/3.0*(tmp_128*tmp_128) + tmp_133*(tmp_129 + tmp_130 + tmp_131) + tmp_138*(tmp_134 + tmp_135 + tmp_136) + tmp_139*(2.0*tmp_125 + 2.0*tmp_126 + 2.0*tmp_127)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_153*tmp_155 + tmp_155*tmp_156 + tmp_157*tmp_34*tmp_92 + tmp_157*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_162*tmp_34 + tmp_117*tmp_162*tmp_42 - tmp_158*tmp_160 + tmp_160*tmp_161) + tmp_140*(tmp_132*tmp_167*tmp_34 + tmp_137*tmp_167*tmp_42 - tmp_163*tmp_165 + tmp_165*tmp_166) + tmp_60*(-tmp_141*tmp_144 + tmp_144*tmp_145 + tmp_147*tmp_34*tmp_36 + tmp_147*tmp_42*tmp_44) + tmp_80*(-tmp_148*tmp_150 + tmp_150*tmp_151 + tmp_152*tmp_34*tmp_72 + tmp_152*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_153*tmp_176 + tmp_156*tmp_176 + tmp_177*tmp_32*tmp_92 + tmp_177*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_180*tmp_32 + tmp_117*tmp_180*tmp_40 - tmp_158*tmp_179 + tmp_161*tmp_179) + tmp_140*(tmp_132*tmp_183*tmp_32 + tmp_137*tmp_183*tmp_40 - tmp_163*tmp_182 + tmp_166*tmp_182) + tmp_60*(-tmp_141*tmp_170 + tmp_145*tmp_170 + tmp_171*tmp_32*tmp_36 + tmp_171*tmp_40*tmp_44) + tmp_80*(-tmp_148*tmp_173 + tmp_151*tmp_173 + tmp_174*tmp_32*tmp_72 + tmp_174*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_153*tmp_192 + tmp_156*tmp_192 + tmp_193*tmp_30*tmp_92 + tmp_193*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_196*tmp_30 + tmp_117*tmp_196*tmp_38 - tmp_158*tmp_195 + tmp_161*tmp_195) + tmp_140*(tmp_132*tmp_199*tmp_30 + tmp_137*tmp_199*tmp_38 - tmp_163*tmp_198 + tmp_166*tmp_198) + tmp_60*(-tmp_141*tmp_186 + tmp_145*tmp_186 + tmp_187*tmp_30*tmp_36 + tmp_187*tmp_38*tmp_44) + tmp_80*(-tmp_148*tmp_189 + tmp_151*tmp_189 + tmp_190*tmp_30*tmp_72 + tmp_190*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_153*(tmp_224 + tmp_225) + tmp_93*(tmp_231 + tmp_233) + tmp_98*(tmp_234 + tmp_235) + tmp_99*(tmp_227 + tmp_229)) + tmp_120*(tmp_113*(tmp_243 + tmp_245) + tmp_118*(tmp_246 + tmp_247) + tmp_119*(tmp_239 + tmp_241) - tmp_158*(tmp_236 + tmp_237)) + tmp_140*(tmp_133*(tmp_255 + tmp_257) + tmp_138*(tmp_258 + tmp_259) + tmp_139*(tmp_251 + tmp_253) - tmp_163*(tmp_248 + tmp_249)) + tmp_60*(-tmp_141*(tmp_200 + tmp_201) + tmp_37*(tmp_207 + tmp_209) + tmp_45*(tmp_210 + tmp_211) + tmp_46*(tmp_203 + tmp_205)) + tmp_80*(-tmp_148*(tmp_212 + tmp_213) + tmp_73*(tmp_219 + tmp_221) + tmp_78*(tmp_222 + tmp_223) + tmp_79*(tmp_215 + tmp_217));
      real_t a_0_5 = tmp_100*(-tmp_153*(tmp_280 + tmp_281) + tmp_93*(tmp_286 + tmp_287) + tmp_98*(tmp_288 + tmp_289) + tmp_99*(tmp_283 + tmp_284)) + tmp_120*(tmp_113*(tmp_296 + tmp_297) + tmp_118*(tmp_298 + tmp_299) + tmp_119*(tmp_293 + tmp_294) - tmp_158*(tmp_290 + tmp_291)) + tmp_140*(tmp_133*(tmp_306 + tmp_307) + tmp_138*(tmp_308 + tmp_309) + tmp_139*(tmp_303 + tmp_304) - tmp_163*(tmp_300 + tmp_301)) + tmp_60*(-tmp_141*(tmp_260 + tmp_261) + tmp_37*(tmp_266 + tmp_267) + tmp_45*(tmp_268 + tmp_269) + tmp_46*(tmp_263 + tmp_264)) + tmp_80*(-tmp_148*(tmp_270 + tmp_271) + tmp_73*(tmp_276 + tmp_277) + tmp_78*(tmp_278 + tmp_279) + tmp_79*(tmp_273 + tmp_274));
      real_t a_0_6 = tmp_100*(-tmp_153*(tmp_326 + tmp_327) + tmp_93*(tmp_330 + tmp_331) + tmp_98*(tmp_332 + tmp_333) + tmp_99*(tmp_328 + tmp_329)) + tmp_120*(tmp_113*(tmp_338 + tmp_339) + tmp_118*(tmp_340 + tmp_341) + tmp_119*(tmp_336 + tmp_337) - tmp_158*(tmp_334 + tmp_335)) + tmp_140*(tmp_133*(tmp_346 + tmp_347) + tmp_138*(tmp_348 + tmp_349) + tmp_139*(tmp_344 + tmp_345) - tmp_163*(tmp_342 + tmp_343)) + tmp_60*(-tmp_141*(tmp_310 + tmp_311) + tmp_37*(tmp_314 + tmp_315) + tmp_45*(tmp_316 + tmp_317) + tmp_46*(tmp_312 + tmp_313)) + tmp_80*(-tmp_148*(tmp_318 + tmp_319) + tmp_73*(tmp_322 + tmp_323) + tmp_78*(tmp_324 + tmp_325) + tmp_79*(tmp_320 + tmp_321));
      real_t a_0_7 = tmp_100*(-tmp_153*(-tmp_225 - tmp_281 + tmp_361) + tmp_93*(-tmp_233 - tmp_287 + tmp_30*tmp_360) + tmp_98*(-tmp_235 - tmp_289 + tmp_360*tmp_38) + tmp_99*(-tmp_229 - tmp_284 + 2.0*tmp_361)) + tmp_120*(tmp_113*(-tmp_245 - tmp_297 + tmp_30*tmp_364) + tmp_118*(-tmp_247 - tmp_299 + tmp_364*tmp_38) + tmp_119*(-tmp_241 - tmp_294 + 2.0*tmp_365) - tmp_158*(-tmp_237 - tmp_291 + tmp_365)) + tmp_140*(tmp_133*(-tmp_257 + tmp_30*tmp_368 - tmp_307) + tmp_138*(-tmp_259 - tmp_309 + tmp_368*tmp_38) + tmp_139*(-tmp_253 - tmp_304 + 2.0*tmp_369) - tmp_163*(-tmp_249 - tmp_301 + tmp_369)) + tmp_60*(-tmp_141*(-tmp_201 - tmp_261 + tmp_353) + tmp_37*(-tmp_209 - tmp_267 + tmp_30*tmp_352) + tmp_45*(-tmp_211 - tmp_269 + tmp_352*tmp_38) + tmp_46*(-tmp_205 - tmp_264 + 2.0*tmp_353)) + tmp_80*(-tmp_148*(-tmp_213 - tmp_271 + tmp_357) + tmp_73*(-tmp_221 - tmp_277 + tmp_30*tmp_356) + tmp_78*(-tmp_223 - tmp_279 + tmp_356*tmp_38) + tmp_79*(-tmp_217 - tmp_274 + 2.0*tmp_357));
      real_t a_0_8 = tmp_100*(-tmp_153*(-tmp_224 - tmp_327 + tmp_378) + tmp_93*(-tmp_231 + tmp_32*tmp_377 - tmp_331) + tmp_98*(-tmp_234 - tmp_333 + tmp_377*tmp_40) + tmp_99*(-tmp_227 - tmp_329 + 2.0*tmp_378)) + tmp_120*(tmp_113*(-tmp_243 + tmp_32*tmp_380 - tmp_339) + tmp_118*(-tmp_246 - tmp_341 + tmp_380*tmp_40) + tmp_119*(-tmp_239 - tmp_337 + 2.0*tmp_381) - tmp_158*(-tmp_236 - tmp_335 + tmp_381)) + tmp_140*(tmp_133*(-tmp_255 + tmp_32*tmp_383 - tmp_347) + tmp_138*(-tmp_258 - tmp_349 + tmp_383*tmp_40) + tmp_139*(-tmp_251 - tmp_345 + 2.0*tmp_384) - tmp_163*(-tmp_248 - tmp_343 + tmp_384)) + tmp_60*(-tmp_141*(-tmp_200 - tmp_311 + tmp_372) + tmp_37*(-tmp_207 - tmp_315 + tmp_32*tmp_371) + tmp_45*(-tmp_210 - tmp_317 + tmp_371*tmp_40) + tmp_46*(-tmp_203 - tmp_313 + 2.0*tmp_372)) + tmp_80*(-tmp_148*(-tmp_212 - tmp_319 + tmp_375) + tmp_73*(-tmp_219 + tmp_32*tmp_374 - tmp_323) + tmp_78*(-tmp_222 - tmp_325 + tmp_374*tmp_40) + tmp_79*(-tmp_215 - tmp_321 + 2.0*tmp_375));
      real_t a_0_9 = tmp_100*(-tmp_153*(-tmp_280 - tmp_326 + tmp_390) + tmp_93*(-tmp_286 - tmp_330 + tmp_34*tmp_389) + tmp_98*(-tmp_288 - tmp_332 + tmp_389*tmp_42) + tmp_99*(-tmp_283 - tmp_328 + 2.0*tmp_390)) + tmp_120*(tmp_113*(-tmp_296 - tmp_338 + tmp_34*tmp_391) + tmp_118*(-tmp_298 - tmp_340 + tmp_391*tmp_42) + tmp_119*(-tmp_293 - tmp_336 + 2.0*tmp_392) - tmp_158*(-tmp_290 - tmp_334 + tmp_392)) + tmp_140*(tmp_133*(-tmp_306 + tmp_34*tmp_393 - tmp_346) + tmp_138*(-tmp_308 - tmp_348 + tmp_393*tmp_42) + tmp_139*(-tmp_303 - tmp_344 + 2.0*tmp_394) - tmp_163*(-tmp_300 - tmp_342 + tmp_394)) + tmp_60*(-tmp_141*(-tmp_260 - tmp_310 + tmp_386) + tmp_37*(-tmp_266 - tmp_314 + tmp_34*tmp_385) + tmp_45*(-tmp_268 - tmp_316 + tmp_385*tmp_42) + tmp_46*(-tmp_263 - tmp_312 + 2.0*tmp_386)) + tmp_80*(-tmp_148*(-tmp_270 - tmp_318 + tmp_388) + tmp_73*(-tmp_276 - tmp_322 + tmp_34*tmp_387) + tmp_78*(-tmp_278 - tmp_324 + tmp_387*tmp_42) + tmp_79*(-tmp_273 - tmp_320 + 2.0*tmp_388));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

} // namespace forms
} // namespace hyteg
