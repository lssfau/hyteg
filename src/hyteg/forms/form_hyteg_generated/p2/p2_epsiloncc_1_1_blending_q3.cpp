/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsiloncc_1_1_blending_q3.hpp"

namespace hyteg {
namespace forms {

   void p2_epsiloncc_1_1_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      real_t Blending_DF_Triangle_3_0 = 0;
      real_t Blending_DF_Triangle_3_1 = 0;
      real_t Blending_DF_Triangle_3_2 = 0;
      real_t Blending_DF_Triangle_3_3 = 0;
      Blending_DF_Triangle( 0.66639024601470143*p_affine_0_0 + 0.17855872826361643*p_affine_1_0 + 0.1550510257216822*p_affine_2_0, 0.66639024601470143*p_affine_0_1 + 0.17855872826361643*p_affine_1_1 + 0.1550510257216822*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.28001991549907412*p_affine_0_0 + 0.075031110222608124*p_affine_1_0 + 0.64494897427831777*p_affine_2_0, 0.28001991549907412*p_affine_0_1 + 0.075031110222608124*p_affine_1_1 + 0.64494897427831777*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.17855872826361638*p_affine_0_0 + 0.66639024601470143*p_affine_1_0 + 0.1550510257216822*p_affine_2_0, 0.17855872826361638*p_affine_0_1 + 0.66639024601470143*p_affine_1_1 + 0.1550510257216822*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      Blending_DF_Triangle( 0.075031110222608111*p_affine_0_0 + 0.28001991549907407*p_affine_1_0 + 0.64494897427831777*p_affine_2_0, 0.075031110222608111*p_affine_0_1 + 0.28001991549907407*p_affine_1_1 + 0.64494897427831777*p_affine_2_1, &Blending_DF_Triangle_3_0, &Blending_DF_Triangle_3_1, &Blending_DF_Triangle_3_2, &Blending_DF_Triangle_3_3 );
      real_t tmp_0 = 0.71423491305446574;
      real_t tmp_1 = 0.62020410288672878;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_11*tmp_8 - tmp_12*tmp_15;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = tmp_14 + tmp_17;
      real_t tmp_19 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_20 = 2*tmp_19;
      real_t tmp_21 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_22 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_23 = tmp_21*tmp_6 - tmp_22*tmp_3;
      real_t tmp_24 = 1.0*tmp_2;
      real_t tmp_25 = tmp_15*tmp_21 - tmp_22*tmp_8;
      real_t tmp_26 = tmp_23*tmp_24 + tmp_24*tmp_25;
      real_t tmp_27 = 2.0*tmp_2;
      real_t tmp_28 = tmp_23*tmp_27 + tmp_25*tmp_27;
      real_t tmp_29 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_30 = 0.15902069087198858*tmp_29*std::abs(tmp_4);
      real_t tmp_31 = 0.3001244408904325;
      real_t tmp_32 = 2.5797958971132711;
      real_t tmp_33 = tmp_31 + tmp_32 - 3;
      real_t tmp_34 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_35 = tmp_9/tmp_34;
      real_t tmp_36 = Blending_DF_Triangle_1_3*tmp_35;
      real_t tmp_37 = Blending_DF_Triangle_1_2*tmp_35;
      real_t tmp_38 = tmp_3*tmp_36 - tmp_37*tmp_6;
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = -tmp_15*tmp_37 + tmp_36*tmp_8;
      real_t tmp_41 = tmp_33*tmp_40;
      real_t tmp_42 = tmp_39 + tmp_41;
      real_t tmp_43 = 0.5*tmp_39 + 0.5*tmp_41;
      real_t tmp_44 = 2*tmp_43;
      real_t tmp_45 = Blending_DF_Triangle_1_0*tmp_35;
      real_t tmp_46 = Blending_DF_Triangle_1_1*tmp_35;
      real_t tmp_47 = -tmp_3*tmp_46 + tmp_45*tmp_6;
      real_t tmp_48 = 1.0*tmp_33;
      real_t tmp_49 = tmp_15*tmp_45 - tmp_46*tmp_8;
      real_t tmp_50 = tmp_47*tmp_48 + tmp_48*tmp_49;
      real_t tmp_51 = 2.0*tmp_33;
      real_t tmp_52 = tmp_47*tmp_51 + tmp_49*tmp_51;
      real_t tmp_53 = 0.090979309128011415*tmp_29*std::abs(tmp_34);
      real_t tmp_54 = 2.6655609840588057;
      real_t tmp_55 = 0.62020410288672878;
      real_t tmp_56 = tmp_54 + tmp_55 - 3;
      real_t tmp_57 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_58 = tmp_9/tmp_57;
      real_t tmp_59 = Blending_DF_Triangle_2_3*tmp_58;
      real_t tmp_60 = Blending_DF_Triangle_2_2*tmp_58;
      real_t tmp_61 = tmp_3*tmp_59 - tmp_6*tmp_60;
      real_t tmp_62 = tmp_56*tmp_61;
      real_t tmp_63 = -tmp_15*tmp_60 + tmp_59*tmp_8;
      real_t tmp_64 = tmp_56*tmp_63;
      real_t tmp_65 = tmp_62 + tmp_64;
      real_t tmp_66 = 0.5*tmp_62 + 0.5*tmp_64;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = Blending_DF_Triangle_2_0*tmp_58;
      real_t tmp_69 = Blending_DF_Triangle_2_1*tmp_58;
      real_t tmp_70 = -tmp_3*tmp_69 + tmp_6*tmp_68;
      real_t tmp_71 = 1.0*tmp_56;
      real_t tmp_72 = tmp_15*tmp_68 - tmp_69*tmp_8;
      real_t tmp_73 = tmp_70*tmp_71 + tmp_71*tmp_72;
      real_t tmp_74 = 2.0*tmp_56;
      real_t tmp_75 = tmp_70*tmp_74 + tmp_72*tmp_74;
      real_t tmp_76 = 0.15902069087198858*tmp_29*std::abs(tmp_57);
      real_t tmp_77 = 1.1200796619962963;
      real_t tmp_78 = 2.5797958971132711;
      real_t tmp_79 = tmp_77 + tmp_78 - 3;
      real_t tmp_80 = Blending_DF_Triangle_3_0*Blending_DF_Triangle_3_3 - Blending_DF_Triangle_3_1*Blending_DF_Triangle_3_2;
      real_t tmp_81 = tmp_9/tmp_80;
      real_t tmp_82 = Blending_DF_Triangle_3_3*tmp_81;
      real_t tmp_83 = Blending_DF_Triangle_3_2*tmp_81;
      real_t tmp_84 = tmp_3*tmp_82 - tmp_6*tmp_83;
      real_t tmp_85 = tmp_79*tmp_84;
      real_t tmp_86 = -tmp_15*tmp_83 + tmp_8*tmp_82;
      real_t tmp_87 = tmp_79*tmp_86;
      real_t tmp_88 = tmp_85 + tmp_87;
      real_t tmp_89 = 0.5*tmp_85 + 0.5*tmp_87;
      real_t tmp_90 = 2*tmp_89;
      real_t tmp_91 = Blending_DF_Triangle_3_0*tmp_81;
      real_t tmp_92 = Blending_DF_Triangle_3_1*tmp_81;
      real_t tmp_93 = -tmp_3*tmp_92 + tmp_6*tmp_91;
      real_t tmp_94 = 1.0*tmp_79;
      real_t tmp_95 = tmp_15*tmp_91 - tmp_8*tmp_92;
      real_t tmp_96 = tmp_93*tmp_94 + tmp_94*tmp_95;
      real_t tmp_97 = 2.0*tmp_79;
      real_t tmp_98 = tmp_93*tmp_97 + tmp_95*tmp_97;
      real_t tmp_99 = 0.090979309128011415*tmp_29*std::abs(tmp_80);
      real_t tmp_100 = tmp_0 - 1;
      real_t tmp_101 = 2.0*tmp_100;
      real_t tmp_102 = tmp_101*tmp_25;
      real_t tmp_103 = tmp_101*tmp_16;
      real_t tmp_104 = tmp_31 - 1;
      real_t tmp_105 = 2.0*tmp_104;
      real_t tmp_106 = tmp_105*tmp_49;
      real_t tmp_107 = tmp_105*tmp_40;
      real_t tmp_108 = tmp_54 - 1;
      real_t tmp_109 = 2.0*tmp_108;
      real_t tmp_110 = tmp_109*tmp_72;
      real_t tmp_111 = tmp_109*tmp_63;
      real_t tmp_112 = tmp_77 - 1;
      real_t tmp_113 = 2.0*tmp_112;
      real_t tmp_114 = tmp_113*tmp_95;
      real_t tmp_115 = tmp_113*tmp_86;
      real_t tmp_116 = tmp_1 - 1;
      real_t tmp_117 = 2.0*tmp_116;
      real_t tmp_118 = tmp_117*tmp_23;
      real_t tmp_119 = tmp_117*tmp_13;
      real_t tmp_120 = tmp_32 - 1;
      real_t tmp_121 = 2.0*tmp_120;
      real_t tmp_122 = tmp_121*tmp_47;
      real_t tmp_123 = tmp_121*tmp_38;
      real_t tmp_124 = tmp_55 - 1;
      real_t tmp_125 = 2.0*tmp_124;
      real_t tmp_126 = tmp_125*tmp_70;
      real_t tmp_127 = tmp_125*tmp_61;
      real_t tmp_128 = tmp_78 - 1;
      real_t tmp_129 = 2.0*tmp_128;
      real_t tmp_130 = tmp_129*tmp_93;
      real_t tmp_131 = tmp_129*tmp_84;
      real_t tmp_132 = 0.17855872826361643*tmp_23;
      real_t tmp_133 = 8.0*tmp_132;
      real_t tmp_134 = 0.1550510257216822*tmp_25;
      real_t tmp_135 = 8.0*tmp_134;
      real_t tmp_136 = tmp_133 + tmp_135;
      real_t tmp_137 = 0.17855872826361643*tmp_13;
      real_t tmp_138 = 4.0*tmp_137;
      real_t tmp_139 = 0.1550510257216822*tmp_16;
      real_t tmp_140 = 4.0*tmp_139;
      real_t tmp_141 = tmp_138 + tmp_140;
      real_t tmp_142 = 0.075031110222608124*tmp_47;
      real_t tmp_143 = 8.0*tmp_142;
      real_t tmp_144 = 0.64494897427831777*tmp_49;
      real_t tmp_145 = 8.0*tmp_144;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = 0.075031110222608124*tmp_38;
      real_t tmp_148 = 4.0*tmp_147;
      real_t tmp_149 = 0.64494897427831777*tmp_40;
      real_t tmp_150 = 4.0*tmp_149;
      real_t tmp_151 = tmp_148 + tmp_150;
      real_t tmp_152 = 0.66639024601470143*tmp_70;
      real_t tmp_153 = 8.0*tmp_152;
      real_t tmp_154 = 0.1550510257216822*tmp_72;
      real_t tmp_155 = 8.0*tmp_154;
      real_t tmp_156 = tmp_153 + tmp_155;
      real_t tmp_157 = 0.66639024601470143*tmp_61;
      real_t tmp_158 = 4.0*tmp_157;
      real_t tmp_159 = 0.1550510257216822*tmp_63;
      real_t tmp_160 = 4.0*tmp_159;
      real_t tmp_161 = tmp_158 + tmp_160;
      real_t tmp_162 = 0.28001991549907407*tmp_93;
      real_t tmp_163 = 8.0*tmp_162;
      real_t tmp_164 = 0.64494897427831777*tmp_95;
      real_t tmp_165 = 8.0*tmp_164;
      real_t tmp_166 = tmp_163 + tmp_165;
      real_t tmp_167 = 0.28001991549907407*tmp_84;
      real_t tmp_168 = 4.0*tmp_167;
      real_t tmp_169 = 0.64494897427831777*tmp_86;
      real_t tmp_170 = 4.0*tmp_169;
      real_t tmp_171 = tmp_168 + tmp_170;
      real_t tmp_172 = 2.7595917942265427 - tmp_0;
      real_t tmp_173 = tmp_172*tmp_23;
      real_t tmp_174 = -tmp_135 + 2.0*tmp_173;
      real_t tmp_175 = tmp_13*tmp_172;
      real_t tmp_176 = -tmp_140 + tmp_175;
      real_t tmp_177 = -tmp_31 - 1.1595917942265421;
      real_t tmp_178 = tmp_177*tmp_47;
      real_t tmp_179 = -tmp_145 + 2.0*tmp_178;
      real_t tmp_180 = tmp_177*tmp_38;
      real_t tmp_181 = -tmp_150 + tmp_180;
      real_t tmp_182 = 2.7595917942265427 - tmp_54;
      real_t tmp_183 = tmp_182*tmp_70;
      real_t tmp_184 = -tmp_155 + 2.0*tmp_183;
      real_t tmp_185 = tmp_182*tmp_61;
      real_t tmp_186 = -tmp_160 + tmp_185;
      real_t tmp_187 = -tmp_77 - 1.1595917942265421;
      real_t tmp_188 = tmp_187*tmp_93;
      real_t tmp_189 = -tmp_165 + 2.0*tmp_188;
      real_t tmp_190 = tmp_187*tmp_84;
      real_t tmp_191 = -tmp_170 + tmp_190;
      real_t tmp_192 = 2.5715301738910687 - tmp_1;
      real_t tmp_193 = tmp_192*tmp_25;
      real_t tmp_194 = -tmp_133 + 2.0*tmp_193;
      real_t tmp_195 = tmp_16*tmp_192;
      real_t tmp_196 = -tmp_138 + tmp_195;
      real_t tmp_197 = 3.3997511182191351 - tmp_32;
      real_t tmp_198 = tmp_197*tmp_49;
      real_t tmp_199 = -tmp_143 + 2.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_40;
      real_t tmp_201 = -tmp_148 + tmp_200;
      real_t tmp_202 = -tmp_55 - 1.3311219681176114;
      real_t tmp_203 = tmp_202*tmp_72;
      real_t tmp_204 = -tmp_153 + 2.0*tmp_203;
      real_t tmp_205 = tmp_202*tmp_63;
      real_t tmp_206 = -tmp_158 + tmp_205;
      real_t tmp_207 = 1.7598406760074075 - tmp_78;
      real_t tmp_208 = tmp_207*tmp_95;
      real_t tmp_209 = -tmp_163 + 2.0*tmp_208;
      real_t tmp_210 = tmp_207*tmp_86;
      real_t tmp_211 = -tmp_168 + tmp_210;
      real_t tmp_212 = 1.0*tmp_100;
      real_t tmp_213 = tmp_16*tmp_212;
      real_t tmp_214 = tmp_212*tmp_25;
      real_t tmp_215 = 1.0*tmp_104;
      real_t tmp_216 = tmp_215*tmp_40;
      real_t tmp_217 = tmp_215*tmp_49;
      real_t tmp_218 = 1.0*tmp_108;
      real_t tmp_219 = tmp_218*tmp_63;
      real_t tmp_220 = tmp_218*tmp_72;
      real_t tmp_221 = 1.0*tmp_112;
      real_t tmp_222 = tmp_221*tmp_86;
      real_t tmp_223 = tmp_221*tmp_95;
      real_t tmp_224 = (tmp_100*tmp_100);
      real_t tmp_225 = (tmp_104*tmp_104);
      real_t tmp_226 = (tmp_108*tmp_108);
      real_t tmp_227 = (tmp_112*tmp_112);
      real_t tmp_228 = tmp_30*(tmp_102*tmp_116*tmp_23 + tmp_116*tmp_13*tmp_213) + tmp_53*(tmp_106*tmp_120*tmp_47 + tmp_120*tmp_216*tmp_38) + tmp_76*(tmp_110*tmp_124*tmp_70 + tmp_124*tmp_219*tmp_61) + tmp_99*(tmp_114*tmp_128*tmp_93 + tmp_128*tmp_222*tmp_84);
      real_t tmp_229 = 1.0*tmp_116;
      real_t tmp_230 = tmp_13*tmp_229;
      real_t tmp_231 = tmp_229*tmp_23;
      real_t tmp_232 = 1.0*tmp_120;
      real_t tmp_233 = tmp_232*tmp_38;
      real_t tmp_234 = tmp_232*tmp_47;
      real_t tmp_235 = 1.0*tmp_124;
      real_t tmp_236 = tmp_235*tmp_61;
      real_t tmp_237 = tmp_235*tmp_70;
      real_t tmp_238 = 1.0*tmp_128;
      real_t tmp_239 = tmp_238*tmp_84;
      real_t tmp_240 = tmp_238*tmp_93;
      real_t tmp_241 = (tmp_116*tmp_116);
      real_t tmp_242 = (tmp_120*tmp_120);
      real_t tmp_243 = (tmp_124*tmp_124);
      real_t tmp_244 = (tmp_128*tmp_128);
      real_t tmp_245 = 2.0*tmp_137;
      real_t tmp_246 = 2.0*tmp_139;
      real_t tmp_247 = tmp_245 + tmp_246;
      real_t tmp_248 = 2*tmp_247;
      real_t tmp_249 = 4.0*tmp_132;
      real_t tmp_250 = 4.0*tmp_134;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = 2.0*tmp_147;
      real_t tmp_253 = 2.0*tmp_149;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = 2*tmp_254;
      real_t tmp_256 = 4.0*tmp_142;
      real_t tmp_257 = 4.0*tmp_144;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = 2.0*tmp_157;
      real_t tmp_260 = 2.0*tmp_159;
      real_t tmp_261 = tmp_259 + tmp_260;
      real_t tmp_262 = 2*tmp_261;
      real_t tmp_263 = 4.0*tmp_152;
      real_t tmp_264 = 4.0*tmp_154;
      real_t tmp_265 = tmp_263 + tmp_264;
      real_t tmp_266 = 2.0*tmp_167;
      real_t tmp_267 = 2.0*tmp_169;
      real_t tmp_268 = tmp_266 + tmp_267;
      real_t tmp_269 = 2*tmp_268;
      real_t tmp_270 = 4.0*tmp_162;
      real_t tmp_271 = 4.0*tmp_164;
      real_t tmp_272 = tmp_270 + tmp_271;
      real_t tmp_273 = 0.5*tmp_175 - tmp_246;
      real_t tmp_274 = 2*tmp_273;
      real_t tmp_275 = 1.0*tmp_173 - tmp_250;
      real_t tmp_276 = 0.5*tmp_180 - tmp_253;
      real_t tmp_277 = 2*tmp_276;
      real_t tmp_278 = 1.0*tmp_178 - tmp_257;
      real_t tmp_279 = 0.5*tmp_185 - tmp_260;
      real_t tmp_280 = 2*tmp_279;
      real_t tmp_281 = 1.0*tmp_183 - tmp_264;
      real_t tmp_282 = 0.5*tmp_190 - tmp_267;
      real_t tmp_283 = 2*tmp_282;
      real_t tmp_284 = 1.0*tmp_188 - tmp_271;
      real_t tmp_285 = 0.5*tmp_195 - tmp_245;
      real_t tmp_286 = 2*tmp_285;
      real_t tmp_287 = 1.0*tmp_193 - tmp_249;
      real_t tmp_288 = 0.5*tmp_200 - tmp_252;
      real_t tmp_289 = 2*tmp_288;
      real_t tmp_290 = 1.0*tmp_198 - tmp_256;
      real_t tmp_291 = 0.5*tmp_205 - tmp_259;
      real_t tmp_292 = 2*tmp_291;
      real_t tmp_293 = 1.0*tmp_203 - tmp_263;
      real_t tmp_294 = 0.5*tmp_210 - tmp_266;
      real_t tmp_295 = 2*tmp_294;
      real_t tmp_296 = 1.0*tmp_208 - tmp_270;
      real_t a_0_0 = tmp_30*(tmp_18*tmp_20 + tmp_26*tmp_28) + tmp_53*(tmp_42*tmp_44 + tmp_50*tmp_52) + tmp_76*(tmp_65*tmp_67 + tmp_73*tmp_75) + tmp_99*(tmp_88*tmp_90 + tmp_96*tmp_98);
      real_t a_0_1 = tmp_30*(tmp_102*tmp_26 + tmp_103*tmp_19) + tmp_53*(tmp_106*tmp_50 + tmp_107*tmp_43) + tmp_76*(tmp_110*tmp_73 + tmp_111*tmp_66) + tmp_99*(tmp_114*tmp_96 + tmp_115*tmp_89);
      real_t a_0_2 = tmp_30*(tmp_118*tmp_26 + tmp_119*tmp_19) + tmp_53*(tmp_122*tmp_50 + tmp_123*tmp_43) + tmp_76*(tmp_126*tmp_73 + tmp_127*tmp_66) + tmp_99*(tmp_130*tmp_96 + tmp_131*tmp_89);
      real_t a_0_3 = tmp_30*(tmp_136*tmp_26 + tmp_141*tmp_20) + tmp_53*(tmp_146*tmp_50 + tmp_151*tmp_44) + tmp_76*(tmp_156*tmp_73 + tmp_161*tmp_67) + tmp_99*(tmp_166*tmp_96 + tmp_171*tmp_90);
      real_t a_0_4 = tmp_30*(tmp_174*tmp_26 + tmp_176*tmp_20) + tmp_53*(tmp_179*tmp_50 + tmp_181*tmp_44) + tmp_76*(tmp_184*tmp_73 + tmp_186*tmp_67) + tmp_99*(tmp_189*tmp_96 + tmp_191*tmp_90);
      real_t a_0_5 = tmp_30*(tmp_194*tmp_26 + tmp_196*tmp_20) + tmp_53*(tmp_199*tmp_50 + tmp_201*tmp_44) + tmp_76*(tmp_204*tmp_73 + tmp_206*tmp_67) + tmp_99*(tmp_209*tmp_96 + tmp_211*tmp_90);
      real_t a_1_0 = tmp_30*(tmp_18*tmp_213 + tmp_214*tmp_28) + tmp_53*(tmp_216*tmp_42 + tmp_217*tmp_52) + tmp_76*(tmp_219*tmp_65 + tmp_220*tmp_75) + tmp_99*(tmp_222*tmp_88 + tmp_223*tmp_98);
      real_t a_1_1 = tmp_30*(1.0*(tmp_16*tmp_16)*tmp_224 + 2.0*tmp_224*(tmp_25*tmp_25)) + tmp_53*(1.0*tmp_225*(tmp_40*tmp_40) + 2.0*tmp_225*(tmp_49*tmp_49)) + tmp_76*(1.0*tmp_226*(tmp_63*tmp_63) + 2.0*tmp_226*(tmp_72*tmp_72)) + tmp_99*(1.0*tmp_227*(tmp_86*tmp_86) + 2.0*tmp_227*(tmp_95*tmp_95));
      real_t a_1_2 = tmp_228;
      real_t a_1_3 = tmp_30*(tmp_136*tmp_214 + tmp_141*tmp_213) + tmp_53*(tmp_146*tmp_217 + tmp_151*tmp_216) + tmp_76*(tmp_156*tmp_220 + tmp_161*tmp_219) + tmp_99*(tmp_166*tmp_223 + tmp_171*tmp_222);
      real_t a_1_4 = tmp_30*(tmp_174*tmp_214 + tmp_176*tmp_213) + tmp_53*(tmp_179*tmp_217 + tmp_181*tmp_216) + tmp_76*(tmp_184*tmp_220 + tmp_186*tmp_219) + tmp_99*(tmp_189*tmp_223 + tmp_191*tmp_222);
      real_t a_1_5 = tmp_30*(tmp_194*tmp_214 + tmp_196*tmp_213) + tmp_53*(tmp_199*tmp_217 + tmp_201*tmp_216) + tmp_76*(tmp_204*tmp_220 + tmp_206*tmp_219) + tmp_99*(tmp_209*tmp_223 + tmp_211*tmp_222);
      real_t a_2_0 = tmp_30*(tmp_18*tmp_230 + tmp_231*tmp_28) + tmp_53*(tmp_233*tmp_42 + tmp_234*tmp_52) + tmp_76*(tmp_236*tmp_65 + tmp_237*tmp_75) + tmp_99*(tmp_239*tmp_88 + tmp_240*tmp_98);
      real_t a_2_1 = tmp_228;
      real_t a_2_2 = tmp_30*(1.0*(tmp_13*tmp_13)*tmp_241 + 2.0*(tmp_23*tmp_23)*tmp_241) + tmp_53*(1.0*tmp_242*(tmp_38*tmp_38) + 2.0*tmp_242*(tmp_47*tmp_47)) + tmp_76*(1.0*tmp_243*(tmp_61*tmp_61) + 2.0*tmp_243*(tmp_70*tmp_70)) + tmp_99*(1.0*tmp_244*(tmp_84*tmp_84) + 2.0*tmp_244*(tmp_93*tmp_93));
      real_t a_2_3 = tmp_30*(tmp_136*tmp_231 + tmp_141*tmp_230) + tmp_53*(tmp_146*tmp_234 + tmp_151*tmp_233) + tmp_76*(tmp_156*tmp_237 + tmp_161*tmp_236) + tmp_99*(tmp_166*tmp_240 + tmp_171*tmp_239);
      real_t a_2_4 = tmp_30*(tmp_174*tmp_231 + tmp_176*tmp_230) + tmp_53*(tmp_179*tmp_234 + tmp_181*tmp_233) + tmp_76*(tmp_184*tmp_237 + tmp_186*tmp_236) + tmp_99*(tmp_189*tmp_240 + tmp_191*tmp_239);
      real_t a_2_5 = tmp_30*(tmp_194*tmp_231 + tmp_196*tmp_230) + tmp_53*(tmp_199*tmp_234 + tmp_201*tmp_233) + tmp_76*(tmp_204*tmp_237 + tmp_206*tmp_236) + tmp_99*(tmp_209*tmp_240 + tmp_211*tmp_239);
      real_t a_3_0 = tmp_30*(tmp_18*tmp_248 + tmp_251*tmp_28) + tmp_53*(tmp_255*tmp_42 + tmp_258*tmp_52) + tmp_76*(tmp_262*tmp_65 + tmp_265*tmp_75) + tmp_99*(tmp_269*tmp_88 + tmp_272*tmp_98);
      real_t a_3_1 = tmp_30*(tmp_102*tmp_251 + tmp_103*tmp_247) + tmp_53*(tmp_106*tmp_258 + tmp_107*tmp_254) + tmp_76*(tmp_110*tmp_265 + tmp_111*tmp_261) + tmp_99*(tmp_114*tmp_272 + tmp_115*tmp_268);
      real_t a_3_2 = tmp_30*(tmp_118*tmp_251 + tmp_119*tmp_247) + tmp_53*(tmp_122*tmp_258 + tmp_123*tmp_254) + tmp_76*(tmp_126*tmp_265 + tmp_127*tmp_261) + tmp_99*(tmp_130*tmp_272 + tmp_131*tmp_268);
      real_t a_3_3 = tmp_30*(tmp_136*tmp_251 + tmp_141*tmp_248) + tmp_53*(tmp_146*tmp_258 + tmp_151*tmp_255) + tmp_76*(tmp_156*tmp_265 + tmp_161*tmp_262) + tmp_99*(tmp_166*tmp_272 + tmp_171*tmp_269);
      real_t a_3_4 = tmp_30*(tmp_174*tmp_251 + tmp_176*tmp_248) + tmp_53*(tmp_179*tmp_258 + tmp_181*tmp_255) + tmp_76*(tmp_184*tmp_265 + tmp_186*tmp_262) + tmp_99*(tmp_189*tmp_272 + tmp_191*tmp_269);
      real_t a_3_5 = tmp_30*(tmp_194*tmp_251 + tmp_196*tmp_248) + tmp_53*(tmp_199*tmp_258 + tmp_201*tmp_255) + tmp_76*(tmp_204*tmp_265 + tmp_206*tmp_262) + tmp_99*(tmp_209*tmp_272 + tmp_211*tmp_269);
      real_t a_4_0 = tmp_30*(tmp_18*tmp_274 + tmp_275*tmp_28) + tmp_53*(tmp_277*tmp_42 + tmp_278*tmp_52) + tmp_76*(tmp_280*tmp_65 + tmp_281*tmp_75) + tmp_99*(tmp_283*tmp_88 + tmp_284*tmp_98);
      real_t a_4_1 = tmp_30*(tmp_102*tmp_275 + tmp_103*tmp_273) + tmp_53*(tmp_106*tmp_278 + tmp_107*tmp_276) + tmp_76*(tmp_110*tmp_281 + tmp_111*tmp_279) + tmp_99*(tmp_114*tmp_284 + tmp_115*tmp_282);
      real_t a_4_2 = tmp_30*(tmp_118*tmp_275 + tmp_119*tmp_273) + tmp_53*(tmp_122*tmp_278 + tmp_123*tmp_276) + tmp_76*(tmp_126*tmp_281 + tmp_127*tmp_279) + tmp_99*(tmp_130*tmp_284 + tmp_131*tmp_282);
      real_t a_4_3 = tmp_30*(tmp_136*tmp_275 + tmp_141*tmp_274) + tmp_53*(tmp_146*tmp_278 + tmp_151*tmp_277) + tmp_76*(tmp_156*tmp_281 + tmp_161*tmp_280) + tmp_99*(tmp_166*tmp_284 + tmp_171*tmp_283);
      real_t a_4_4 = tmp_30*(tmp_174*tmp_275 + tmp_176*tmp_274) + tmp_53*(tmp_179*tmp_278 + tmp_181*tmp_277) + tmp_76*(tmp_184*tmp_281 + tmp_186*tmp_280) + tmp_99*(tmp_189*tmp_284 + tmp_191*tmp_283);
      real_t a_4_5 = tmp_30*(tmp_194*tmp_275 + tmp_196*tmp_274) + tmp_53*(tmp_199*tmp_278 + tmp_201*tmp_277) + tmp_76*(tmp_204*tmp_281 + tmp_206*tmp_280) + tmp_99*(tmp_209*tmp_284 + tmp_211*tmp_283);
      real_t a_5_0 = tmp_30*(tmp_18*tmp_286 + tmp_28*tmp_287) + tmp_53*(tmp_289*tmp_42 + tmp_290*tmp_52) + tmp_76*(tmp_292*tmp_65 + tmp_293*tmp_75) + tmp_99*(tmp_295*tmp_88 + tmp_296*tmp_98);
      real_t a_5_1 = tmp_30*(tmp_102*tmp_287 + tmp_103*tmp_285) + tmp_53*(tmp_106*tmp_290 + tmp_107*tmp_288) + tmp_76*(tmp_110*tmp_293 + tmp_111*tmp_291) + tmp_99*(tmp_114*tmp_296 + tmp_115*tmp_294);
      real_t a_5_2 = tmp_30*(tmp_118*tmp_287 + tmp_119*tmp_285) + tmp_53*(tmp_122*tmp_290 + tmp_123*tmp_288) + tmp_76*(tmp_126*tmp_293 + tmp_127*tmp_291) + tmp_99*(tmp_130*tmp_296 + tmp_131*tmp_294);
      real_t a_5_3 = tmp_30*(tmp_136*tmp_287 + tmp_141*tmp_286) + tmp_53*(tmp_146*tmp_290 + tmp_151*tmp_289) + tmp_76*(tmp_156*tmp_293 + tmp_161*tmp_292) + tmp_99*(tmp_166*tmp_296 + tmp_171*tmp_295);
      real_t a_5_4 = tmp_30*(tmp_174*tmp_287 + tmp_176*tmp_286) + tmp_53*(tmp_179*tmp_290 + tmp_181*tmp_289) + tmp_76*(tmp_184*tmp_293 + tmp_186*tmp_292) + tmp_99*(tmp_189*tmp_296 + tmp_191*tmp_295);
      real_t a_5_5 = tmp_30*(tmp_194*tmp_287 + tmp_196*tmp_286) + tmp_53*(tmp_199*tmp_290 + tmp_201*tmp_289) + tmp_76*(tmp_204*tmp_293 + tmp_206*tmp_292) + tmp_99*(tmp_209*tmp_296 + tmp_211*tmp_295);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_1_1_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      real_t Blending_DF_Triangle_3_0 = 0;
      real_t Blending_DF_Triangle_3_1 = 0;
      real_t Blending_DF_Triangle_3_2 = 0;
      real_t Blending_DF_Triangle_3_3 = 0;
      Blending_DF_Triangle( 0.66639024601470143*p_affine_0_0 + 0.17855872826361643*p_affine_1_0 + 0.1550510257216822*p_affine_2_0, 0.66639024601470143*p_affine_0_1 + 0.17855872826361643*p_affine_1_1 + 0.1550510257216822*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.28001991549907412*p_affine_0_0 + 0.075031110222608124*p_affine_1_0 + 0.64494897427831777*p_affine_2_0, 0.28001991549907412*p_affine_0_1 + 0.075031110222608124*p_affine_1_1 + 0.64494897427831777*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.17855872826361638*p_affine_0_0 + 0.66639024601470143*p_affine_1_0 + 0.1550510257216822*p_affine_2_0, 0.17855872826361638*p_affine_0_1 + 0.66639024601470143*p_affine_1_1 + 0.1550510257216822*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      Blending_DF_Triangle( 0.075031110222608111*p_affine_0_0 + 0.28001991549907407*p_affine_1_0 + 0.64494897427831777*p_affine_2_0, 0.075031110222608111*p_affine_0_1 + 0.28001991549907407*p_affine_1_1 + 0.64494897427831777*p_affine_2_1, &Blending_DF_Triangle_3_0, &Blending_DF_Triangle_3_1, &Blending_DF_Triangle_3_2, &Blending_DF_Triangle_3_3 );
      real_t tmp_0 = 0.71423491305446574;
      real_t tmp_1 = 0.62020410288672878;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_11*tmp_8 - tmp_12*tmp_15;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_19 = 2*tmp_18;
      real_t tmp_20 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_21 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_22 = tmp_20*tmp_6 - tmp_21*tmp_3;
      real_t tmp_23 = 1.0*tmp_2;
      real_t tmp_24 = tmp_15*tmp_20 - tmp_21*tmp_8;
      real_t tmp_25 = tmp_22*tmp_23 + tmp_23*tmp_24;
      real_t tmp_26 = 2.0*tmp_2;
      real_t tmp_27 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_28 = 0.15902069087198858*tmp_27*std::abs(tmp_4);
      real_t tmp_29 = 0.3001244408904325;
      real_t tmp_30 = 2.5797958971132711;
      real_t tmp_31 = tmp_29 + tmp_30 - 3;
      real_t tmp_32 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_33 = tmp_9/tmp_32;
      real_t tmp_34 = Blending_DF_Triangle_1_3*tmp_33;
      real_t tmp_35 = Blending_DF_Triangle_1_2*tmp_33;
      real_t tmp_36 = tmp_3*tmp_34 - tmp_35*tmp_6;
      real_t tmp_37 = tmp_31*tmp_36;
      real_t tmp_38 = -tmp_15*tmp_35 + tmp_34*tmp_8;
      real_t tmp_39 = tmp_31*tmp_38;
      real_t tmp_40 = 0.5*tmp_37 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = Blending_DF_Triangle_1_0*tmp_33;
      real_t tmp_43 = Blending_DF_Triangle_1_1*tmp_33;
      real_t tmp_44 = -tmp_3*tmp_43 + tmp_42*tmp_6;
      real_t tmp_45 = 1.0*tmp_31;
      real_t tmp_46 = tmp_15*tmp_42 - tmp_43*tmp_8;
      real_t tmp_47 = tmp_44*tmp_45 + tmp_45*tmp_46;
      real_t tmp_48 = 2.0*tmp_31;
      real_t tmp_49 = 0.090979309128011415*tmp_27*std::abs(tmp_32);
      real_t tmp_50 = 2.6655609840588057;
      real_t tmp_51 = 0.62020410288672878;
      real_t tmp_52 = tmp_50 + tmp_51 - 3;
      real_t tmp_53 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_54 = tmp_9/tmp_53;
      real_t tmp_55 = Blending_DF_Triangle_2_3*tmp_54;
      real_t tmp_56 = Blending_DF_Triangle_2_2*tmp_54;
      real_t tmp_57 = tmp_3*tmp_55 - tmp_56*tmp_6;
      real_t tmp_58 = tmp_52*tmp_57;
      real_t tmp_59 = -tmp_15*tmp_56 + tmp_55*tmp_8;
      real_t tmp_60 = tmp_52*tmp_59;
      real_t tmp_61 = 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_62 = 2*tmp_61;
      real_t tmp_63 = Blending_DF_Triangle_2_0*tmp_54;
      real_t tmp_64 = Blending_DF_Triangle_2_1*tmp_54;
      real_t tmp_65 = -tmp_3*tmp_64 + tmp_6*tmp_63;
      real_t tmp_66 = 1.0*tmp_52;
      real_t tmp_67 = tmp_15*tmp_63 - tmp_64*tmp_8;
      real_t tmp_68 = tmp_65*tmp_66 + tmp_66*tmp_67;
      real_t tmp_69 = 2.0*tmp_52;
      real_t tmp_70 = 0.15902069087198858*tmp_27*std::abs(tmp_53);
      real_t tmp_71 = 1.1200796619962963;
      real_t tmp_72 = 2.5797958971132711;
      real_t tmp_73 = tmp_71 + tmp_72 - 3;
      real_t tmp_74 = Blending_DF_Triangle_3_0*Blending_DF_Triangle_3_3 - Blending_DF_Triangle_3_1*Blending_DF_Triangle_3_2;
      real_t tmp_75 = tmp_9/tmp_74;
      real_t tmp_76 = Blending_DF_Triangle_3_3*tmp_75;
      real_t tmp_77 = Blending_DF_Triangle_3_2*tmp_75;
      real_t tmp_78 = tmp_3*tmp_76 - tmp_6*tmp_77;
      real_t tmp_79 = tmp_73*tmp_78;
      real_t tmp_80 = -tmp_15*tmp_77 + tmp_76*tmp_8;
      real_t tmp_81 = tmp_73*tmp_80;
      real_t tmp_82 = 0.5*tmp_79 + 0.5*tmp_81;
      real_t tmp_83 = 2*tmp_82;
      real_t tmp_84 = Blending_DF_Triangle_3_0*tmp_75;
      real_t tmp_85 = Blending_DF_Triangle_3_1*tmp_75;
      real_t tmp_86 = -tmp_3*tmp_85 + tmp_6*tmp_84;
      real_t tmp_87 = 1.0*tmp_73;
      real_t tmp_88 = tmp_15*tmp_84 - tmp_8*tmp_85;
      real_t tmp_89 = tmp_86*tmp_87 + tmp_87*tmp_88;
      real_t tmp_90 = 2.0*tmp_73;
      real_t tmp_91 = 0.090979309128011415*tmp_27*std::abs(tmp_74);
      real_t tmp_92 = tmp_0 - 1;
      real_t tmp_93 = 2.0*tmp_24;
      real_t tmp_94 = 2.0*tmp_18;
      real_t tmp_95 = tmp_29 - 1;
      real_t tmp_96 = 2.0*tmp_46;
      real_t tmp_97 = 2.0*tmp_40;
      real_t tmp_98 = tmp_50 - 1;
      real_t tmp_99 = 2.0*tmp_67;
      real_t tmp_100 = 2.0*tmp_61;
      real_t tmp_101 = tmp_71 - 1;
      real_t tmp_102 = 2.0*tmp_88;
      real_t tmp_103 = 2.0*tmp_82;
      real_t tmp_104 = tmp_1 - 1;
      real_t tmp_105 = 2.0*tmp_22;
      real_t tmp_106 = tmp_30 - 1;
      real_t tmp_107 = 2.0*tmp_44;
      real_t tmp_108 = tmp_51 - 1;
      real_t tmp_109 = 2.0*tmp_65;
      real_t tmp_110 = tmp_72 - 1;
      real_t tmp_111 = 2.0*tmp_86;
      real_t tmp_112 = 1.4284698261089315*tmp_22;
      real_t tmp_113 = 1.2404082057734576*tmp_24;
      real_t tmp_114 = 0.71423491305446574*tmp_13;
      real_t tmp_115 = 0.62020410288672878*tmp_16;
      real_t tmp_116 = 0.600248881780865*tmp_44;
      real_t tmp_117 = 5.1595917942265421*tmp_46;
      real_t tmp_118 = 0.3001244408904325*tmp_36;
      real_t tmp_119 = 2.5797958971132711*tmp_38;
      real_t tmp_120 = 5.3311219681176114*tmp_65;
      real_t tmp_121 = 1.2404082057734576*tmp_67;
      real_t tmp_122 = 2.6655609840588057*tmp_57;
      real_t tmp_123 = 0.62020410288672878*tmp_59;
      real_t tmp_124 = 2.2401593239925925*tmp_86;
      real_t tmp_125 = 5.1595917942265421*tmp_88;
      real_t tmp_126 = 1.1200796619962963*tmp_78;
      real_t tmp_127 = 2.5797958971132711*tmp_80;
      real_t tmp_128 = 2.7595917942265427 - tmp_0;
      real_t tmp_129 = -tmp_29 - 1.1595917942265421;
      real_t tmp_130 = 2.7595917942265427 - tmp_50;
      real_t tmp_131 = -tmp_71 - 1.1595917942265421;
      real_t tmp_132 = 2.5715301738910687 - tmp_1;
      real_t tmp_133 = 3.3997511182191351 - tmp_30;
      real_t tmp_134 = -tmp_51 - 1.3311219681176114;
      real_t tmp_135 = 1.7598406760074075 - tmp_72;
      real_t a_0_0 = tmp_28*(tmp_19*(tmp_14 + tmp_17) + tmp_25*(tmp_22*tmp_26 + tmp_24*tmp_26)) + tmp_49*(tmp_41*(tmp_37 + tmp_39) + tmp_47*(tmp_44*tmp_48 + tmp_46*tmp_48)) + tmp_70*(tmp_62*(tmp_58 + tmp_60) + tmp_68*(tmp_65*tmp_69 + tmp_67*tmp_69)) + tmp_91*(tmp_83*(tmp_79 + tmp_81) + tmp_89*(tmp_86*tmp_90 + tmp_88*tmp_90));
      real_t a_0_1 = tmp_28*(tmp_16*tmp_92*tmp_94 + tmp_25*tmp_92*tmp_93) + tmp_49*(tmp_38*tmp_95*tmp_97 + tmp_47*tmp_95*tmp_96) + tmp_70*(tmp_100*tmp_59*tmp_98 + tmp_68*tmp_98*tmp_99) + tmp_91*(tmp_101*tmp_102*tmp_89 + tmp_101*tmp_103*tmp_80);
      real_t a_0_2 = tmp_28*(tmp_104*tmp_105*tmp_25 + tmp_104*tmp_13*tmp_94) + tmp_49*(tmp_106*tmp_107*tmp_47 + tmp_106*tmp_36*tmp_97) + tmp_70*(tmp_100*tmp_108*tmp_57 + tmp_108*tmp_109*tmp_68) + tmp_91*(tmp_103*tmp_110*tmp_78 + tmp_110*tmp_111*tmp_89);
      real_t a_0_3 = tmp_28*(tmp_19*(tmp_114 + tmp_115) + tmp_25*(tmp_112 + tmp_113)) + tmp_49*(tmp_41*(tmp_118 + tmp_119) + tmp_47*(tmp_116 + tmp_117)) + tmp_70*(tmp_62*(tmp_122 + tmp_123) + tmp_68*(tmp_120 + tmp_121)) + tmp_91*(tmp_83*(tmp_126 + tmp_127) + tmp_89*(tmp_124 + tmp_125));
      real_t a_0_4 = tmp_28*(tmp_19*(-tmp_115 + tmp_128*tmp_13) + tmp_25*(tmp_105*tmp_128 - tmp_113)) + tmp_49*(tmp_41*(-tmp_119 + tmp_129*tmp_36) + tmp_47*(tmp_107*tmp_129 - tmp_117)) + tmp_70*(tmp_62*(-tmp_123 + tmp_130*tmp_57) + tmp_68*(tmp_109*tmp_130 - tmp_121)) + tmp_91*(tmp_83*(-tmp_127 + tmp_131*tmp_78) + tmp_89*(tmp_111*tmp_131 - tmp_125));
      real_t a_0_5 = tmp_28*(tmp_19*(-tmp_114 + tmp_132*tmp_16) + tmp_25*(-tmp_112 + tmp_132*tmp_93)) + tmp_49*(tmp_41*(-tmp_118 + tmp_133*tmp_38) + tmp_47*(-tmp_116 + tmp_133*tmp_96)) + tmp_70*(tmp_62*(-tmp_122 + tmp_134*tmp_59) + tmp_68*(-tmp_120 + tmp_134*tmp_99)) + tmp_91*(tmp_83*(-tmp_126 + tmp_135*tmp_80) + tmp_89*(tmp_102*tmp_135 - tmp_124));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_1_1_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Blending_DF_Tetrahedron_4_0 = 0;
      real_t Blending_DF_Tetrahedron_4_1 = 0;
      real_t Blending_DF_Tetrahedron_4_2 = 0;
      real_t Blending_DF_Tetrahedron_4_3 = 0;
      real_t Blending_DF_Tetrahedron_4_4 = 0;
      real_t Blending_DF_Tetrahedron_4_5 = 0;
      real_t Blending_DF_Tetrahedron_4_6 = 0;
      real_t Blending_DF_Tetrahedron_4_7 = 0;
      real_t Blending_DF_Tetrahedron_4_8 = 0;
      real_t Blending_DF_Tetrahedron_5_0 = 0;
      real_t Blending_DF_Tetrahedron_5_1 = 0;
      real_t Blending_DF_Tetrahedron_5_2 = 0;
      real_t Blending_DF_Tetrahedron_5_3 = 0;
      real_t Blending_DF_Tetrahedron_5_4 = 0;
      real_t Blending_DF_Tetrahedron_5_5 = 0;
      real_t Blending_DF_Tetrahedron_5_6 = 0;
      real_t Blending_DF_Tetrahedron_5_7 = 0;
      real_t Blending_DF_Tetrahedron_5_8 = 0;
      Blending_DF_Tetrahedron( 0.64142979149569634*p_affine_0_0 + 0.16200149169852451*p_affine_1_0 + 0.18385035049209769*p_affine_2_0 + 0.012718366313681451*p_affine_3_0, 0.64142979149569634*p_affine_0_1 + 0.16200149169852451*p_affine_1_1 + 0.18385035049209769*p_affine_2_1 + 0.012718366313681451*p_affine_3_1, 0.64142979149569634*p_affine_0_2 + 0.16200149169852451*p_affine_1_2 + 0.18385035049209769*p_affine_2_2 + 0.012718366313681451*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.34544415571973075*p_affine_0_0 + 0.010905212211189241*p_affine_1_0 + 0.28152380212354622*p_affine_2_0 + 0.3621268299455338*p_affine_3_0, 0.34544415571973075*p_affine_0_1 + 0.010905212211189241*p_affine_1_1 + 0.28152380212354622*p_affine_2_1 + 0.3621268299455338*p_affine_3_1, 0.34544415571973075*p_affine_0_2 + 0.010905212211189241*p_affine_1_2 + 0.28152380212354622*p_affine_2_2 + 0.3621268299455338*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.43985894764927508*p_affine_0_0 + 0.19011700243928389*p_affine_1_0 + 0.011403329444557171*p_affine_2_0 + 0.35862072046688392*p_affine_3_0, 0.43985894764927508*p_affine_0_1 + 0.19011700243928389*p_affine_1_1 + 0.011403329444557171*p_affine_2_1 + 0.35862072046688392*p_affine_3_1, 0.43985894764927508*p_affine_0_2 + 0.19011700243928389*p_affine_1_2 + 0.011403329444557171*p_affine_2_2 + 0.35862072046688392*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.037871631782356974*p_affine_0_0 + 0.170816925164989*p_affine_1_0 + 0.15281814309092731*p_affine_2_0 + 0.63849329996172666*p_affine_3_0, 0.037871631782356974*p_affine_0_1 + 0.170816925164989*p_affine_1_1 + 0.15281814309092731*p_affine_2_1 + 0.63849329996172666*p_affine_3_1, 0.037871631782356974*p_affine_0_2 + 0.170816925164989*p_affine_1_2 + 0.15281814309092731*p_affine_2_2 + 0.63849329996172666*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Blending_DF_Tetrahedron( 0.12480486216524708*p_affine_0_0 + 0.15868516322744061*p_affine_1_0 + 0.58566280565521578*p_affine_2_0 + 0.1308471689520965*p_affine_3_0, 0.12480486216524708*p_affine_0_1 + 0.15868516322744061*p_affine_1_1 + 0.58566280565521578*p_affine_2_1 + 0.1308471689520965*p_affine_3_1, 0.12480486216524708*p_affine_0_2 + 0.15868516322744061*p_affine_1_2 + 0.58566280565521578*p_affine_2_2 + 0.1308471689520965*p_affine_3_2, &Blending_DF_Tetrahedron_4_0, &Blending_DF_Tetrahedron_4_1, &Blending_DF_Tetrahedron_4_2, &Blending_DF_Tetrahedron_4_3, &Blending_DF_Tetrahedron_4_4, &Blending_DF_Tetrahedron_4_5, &Blending_DF_Tetrahedron_4_6, &Blending_DF_Tetrahedron_4_7, &Blending_DF_Tetrahedron_4_8 );
      Blending_DF_Tetrahedron( 0.14148275196950461*p_affine_0_0 + 0.57122605214911515*p_affine_1_0 + 0.14691839008716959*p_affine_2_0 + 0.14037280579421069*p_affine_3_0, 0.14148275196950461*p_affine_0_1 + 0.57122605214911515*p_affine_1_1 + 0.14691839008716959*p_affine_2_1 + 0.14037280579421069*p_affine_3_1, 0.14148275196950461*p_affine_0_2 + 0.57122605214911515*p_affine_1_2 + 0.14691839008716959*p_affine_2_2 + 0.14037280579421069*p_affine_3_2, &Blending_DF_Tetrahedron_5_0, &Blending_DF_Tetrahedron_5_1, &Blending_DF_Tetrahedron_5_2, &Blending_DF_Tetrahedron_5_3, &Blending_DF_Tetrahedron_5_4, &Blending_DF_Tetrahedron_5_5, &Blending_DF_Tetrahedron_5_6, &Blending_DF_Tetrahedron_5_7, &Blending_DF_Tetrahedron_5_8 );
      real_t tmp_0 = 0.64800596679409805;
      real_t tmp_1 = 0.73540140196839077;
      real_t tmp_2 = 0.050873465254725803;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_13 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_11 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_12 - Blending_DF_Tetrahedron_0_5*tmp_14;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_26 - tmp_27;
      real_t tmp_40 = tmp_20 - tmp_29;
      real_t tmp_41 = tmp_23 - tmp_28;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_46 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = tmp_38 + tmp_43 + tmp_48;
      real_t tmp_50 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_51 = 2*tmp_50;
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_54 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_55 = tmp_10*tmp_52 + tmp_33*tmp_53 + tmp_35*tmp_54;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_39*tmp_52 + tmp_40*tmp_53 + tmp_41*tmp_54;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_44*tmp_52 + tmp_45*tmp_53 + tmp_46*tmp_54;
      real_t tmp_60 = tmp_3*tmp_59;
      real_t tmp_61 = tmp_56 + tmp_58 + tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = tmp_31*(tmp_12 - tmp_14);
      real_t tmp_65 = tmp_31*(tmp_11 - tmp_16);
      real_t tmp_66 = tmp_31*(tmp_13 - tmp_15);
      real_t tmp_67 = tmp_10*tmp_64 + tmp_33*tmp_65 + tmp_35*tmp_66;
      real_t tmp_68 = 1.0*tmp_3;
      real_t tmp_69 = tmp_39*tmp_64 + tmp_40*tmp_65 + tmp_41*tmp_66;
      real_t tmp_70 = tmp_44*tmp_64 + tmp_45*tmp_65 + tmp_46*tmp_66;
      real_t tmp_71 = tmp_67*tmp_68 + tmp_68*tmp_69 + tmp_68*tmp_70;
      real_t tmp_72 = 2.0*tmp_3;
      real_t tmp_73 = tmp_67*tmp_72 + tmp_69*tmp_72 + tmp_70*tmp_72;
      real_t tmp_74 = p_affine_0_0*p_affine_1_1;
      real_t tmp_75 = p_affine_0_0*p_affine_1_2;
      real_t tmp_76 = p_affine_2_1*p_affine_3_2;
      real_t tmp_77 = p_affine_0_1*p_affine_1_0;
      real_t tmp_78 = p_affine_0_1*p_affine_1_2;
      real_t tmp_79 = p_affine_2_2*p_affine_3_0;
      real_t tmp_80 = p_affine_0_2*p_affine_1_0;
      real_t tmp_81 = p_affine_0_2*p_affine_1_1;
      real_t tmp_82 = p_affine_2_0*p_affine_3_1;
      real_t tmp_83 = p_affine_2_2*p_affine_3_1;
      real_t tmp_84 = p_affine_2_0*p_affine_3_2;
      real_t tmp_85 = p_affine_2_1*p_affine_3_0;
      real_t tmp_86 = std::abs(p_affine_0_0*tmp_76 - p_affine_0_0*tmp_83 + p_affine_0_1*tmp_79 - p_affine_0_1*tmp_84 + p_affine_0_2*tmp_82 - p_affine_0_2*tmp_85 - p_affine_1_0*tmp_76 + p_affine_1_0*tmp_83 - p_affine_1_1*tmp_79 + p_affine_1_1*tmp_84 - p_affine_1_2*tmp_82 + p_affine_1_2*tmp_85 + p_affine_2_0*tmp_78 - p_affine_2_0*tmp_81 - p_affine_2_1*tmp_75 + p_affine_2_1*tmp_80 + p_affine_2_2*tmp_74 - p_affine_2_2*tmp_77 - p_affine_3_0*tmp_78 + p_affine_3_0*tmp_81 + p_affine_3_1*tmp_75 - p_affine_3_1*tmp_80 - p_affine_3_2*tmp_74 + p_affine_3_2*tmp_77);
      real_t tmp_87 = 0.020387000459557512*tmp_86*std::abs(tmp_17);
      real_t tmp_88 = 0.043620848844756963;
      real_t tmp_89 = 1.1260952084941849;
      real_t tmp_90 = 1.4485073197821352;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90 - 3.0;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_96 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_1_3*tmp_94 - Blending_DF_Tetrahedron_1_3*tmp_96 + Blending_DF_Tetrahedron_1_4*tmp_92 - Blending_DF_Tetrahedron_1_4*tmp_97 + Blending_DF_Tetrahedron_1_5*tmp_93 - Blending_DF_Tetrahedron_1_5*tmp_95;
      real_t tmp_99 = tmp_30/tmp_98;
      real_t tmp_100 = tmp_99*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_101 = tmp_99*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_102 = tmp_99*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_103 = tmp_10*tmp_100 + tmp_101*tmp_33 + tmp_102*tmp_35;
      real_t tmp_104 = tmp_103*tmp_91;
      real_t tmp_105 = tmp_100*tmp_39 + tmp_101*tmp_40 + tmp_102*tmp_41;
      real_t tmp_106 = tmp_105*tmp_91;
      real_t tmp_107 = tmp_100*tmp_44 + tmp_101*tmp_45 + tmp_102*tmp_46;
      real_t tmp_108 = tmp_107*tmp_91;
      real_t tmp_109 = tmp_104 + tmp_106 + tmp_108;
      real_t tmp_110 = 0.5*tmp_104 + 0.5*tmp_106 + 0.5*tmp_108;
      real_t tmp_111 = 2*tmp_110;
      real_t tmp_112 = tmp_99*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_113 = tmp_99*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_114 = tmp_99*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_115 = tmp_10*tmp_112 + tmp_113*tmp_33 + tmp_114*tmp_35;
      real_t tmp_116 = tmp_115*tmp_91;
      real_t tmp_117 = tmp_112*tmp_39 + tmp_113*tmp_40 + tmp_114*tmp_41;
      real_t tmp_118 = tmp_117*tmp_91;
      real_t tmp_119 = tmp_112*tmp_44 + tmp_113*tmp_45 + tmp_114*tmp_46;
      real_t tmp_120 = tmp_119*tmp_91;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = 0.5*tmp_116 + 0.5*tmp_118 + 0.5*tmp_120;
      real_t tmp_123 = 2*tmp_122;
      real_t tmp_124 = tmp_99*(tmp_93 - tmp_95);
      real_t tmp_125 = tmp_99*(tmp_92 - tmp_97);
      real_t tmp_126 = tmp_99*(tmp_94 - tmp_96);
      real_t tmp_127 = tmp_10*tmp_124 + tmp_125*tmp_33 + tmp_126*tmp_35;
      real_t tmp_128 = 1.0*tmp_91;
      real_t tmp_129 = tmp_124*tmp_39 + tmp_125*tmp_40 + tmp_126*tmp_41;
      real_t tmp_130 = tmp_124*tmp_44 + tmp_125*tmp_45 + tmp_126*tmp_46;
      real_t tmp_131 = tmp_127*tmp_128 + tmp_128*tmp_129 + tmp_128*tmp_130;
      real_t tmp_132 = 2.0*tmp_91;
      real_t tmp_133 = tmp_127*tmp_132 + tmp_129*tmp_132 + tmp_130*tmp_132;
      real_t tmp_134 = 0.021344402118457811*tmp_86*std::abs(tmp_98);
      real_t tmp_135 = 0.76046800975713558;
      real_t tmp_136 = 0.045613317778228683;
      real_t tmp_137 = 1.4344828818675357;
      real_t tmp_138 = tmp_135 + tmp_136 + tmp_137 - 3.0;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_140 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_141 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_142 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_143 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_144 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_145 = Blending_DF_Tetrahedron_2_3*tmp_141 - Blending_DF_Tetrahedron_2_3*tmp_143 + Blending_DF_Tetrahedron_2_4*tmp_139 - Blending_DF_Tetrahedron_2_4*tmp_144 + Blending_DF_Tetrahedron_2_5*tmp_140 - Blending_DF_Tetrahedron_2_5*tmp_142;
      real_t tmp_146 = tmp_30/tmp_145;
      real_t tmp_147 = tmp_146*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_148 = tmp_146*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_149 = tmp_146*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_150 = tmp_10*tmp_147 + tmp_148*tmp_33 + tmp_149*tmp_35;
      real_t tmp_151 = tmp_138*tmp_150;
      real_t tmp_152 = tmp_147*tmp_39 + tmp_148*tmp_40 + tmp_149*tmp_41;
      real_t tmp_153 = tmp_138*tmp_152;
      real_t tmp_154 = tmp_147*tmp_44 + tmp_148*tmp_45 + tmp_149*tmp_46;
      real_t tmp_155 = tmp_138*tmp_154;
      real_t tmp_156 = tmp_151 + tmp_153 + tmp_155;
      real_t tmp_157 = 0.5*tmp_151 + 0.5*tmp_153 + 0.5*tmp_155;
      real_t tmp_158 = 2*tmp_157;
      real_t tmp_159 = tmp_146*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_160 = tmp_146*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_161 = tmp_146*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_162 = tmp_10*tmp_159 + tmp_160*tmp_33 + tmp_161*tmp_35;
      real_t tmp_163 = tmp_138*tmp_162;
      real_t tmp_164 = tmp_159*tmp_39 + tmp_160*tmp_40 + tmp_161*tmp_41;
      real_t tmp_165 = tmp_138*tmp_164;
      real_t tmp_166 = tmp_159*tmp_44 + tmp_160*tmp_45 + tmp_161*tmp_46;
      real_t tmp_167 = tmp_138*tmp_166;
      real_t tmp_168 = tmp_163 + tmp_165 + tmp_167;
      real_t tmp_169 = 0.5*tmp_163 + 0.5*tmp_165 + 0.5*tmp_167;
      real_t tmp_170 = 2*tmp_169;
      real_t tmp_171 = tmp_146*(tmp_140 - tmp_142);
      real_t tmp_172 = tmp_146*(tmp_139 - tmp_144);
      real_t tmp_173 = tmp_146*(tmp_141 - tmp_143);
      real_t tmp_174 = tmp_10*tmp_171 + tmp_172*tmp_33 + tmp_173*tmp_35;
      real_t tmp_175 = 1.0*tmp_138;
      real_t tmp_176 = tmp_171*tmp_39 + tmp_172*tmp_40 + tmp_173*tmp_41;
      real_t tmp_177 = tmp_171*tmp_44 + tmp_172*tmp_45 + tmp_173*tmp_46;
      real_t tmp_178 = tmp_174*tmp_175 + tmp_175*tmp_176 + tmp_175*tmp_177;
      real_t tmp_179 = 2.0*tmp_138;
      real_t tmp_180 = tmp_174*tmp_179 + tmp_176*tmp_179 + tmp_177*tmp_179;
      real_t tmp_181 = 0.022094671190740864*tmp_86*std::abs(tmp_145);
      real_t tmp_182 = 0.68326770065995601;
      real_t tmp_183 = 0.61127257236370924;
      real_t tmp_184 = 2.5539731998469066;
      real_t tmp_185 = tmp_182 + tmp_183 + tmp_184 - 3.0;
      real_t tmp_186 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_187 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_188 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_189 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_190 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_191 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_192 = Blending_DF_Tetrahedron_3_3*tmp_188 - Blending_DF_Tetrahedron_3_3*tmp_190 + Blending_DF_Tetrahedron_3_4*tmp_186 - Blending_DF_Tetrahedron_3_4*tmp_191 + Blending_DF_Tetrahedron_3_5*tmp_187 - Blending_DF_Tetrahedron_3_5*tmp_189;
      real_t tmp_193 = tmp_30/tmp_192;
      real_t tmp_194 = tmp_193*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_195 = tmp_193*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_196 = tmp_193*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_197 = tmp_10*tmp_194 + tmp_195*tmp_33 + tmp_196*tmp_35;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_194*tmp_39 + tmp_195*tmp_40 + tmp_196*tmp_41;
      real_t tmp_200 = tmp_185*tmp_199;
      real_t tmp_201 = tmp_194*tmp_44 + tmp_195*tmp_45 + tmp_196*tmp_46;
      real_t tmp_202 = tmp_185*tmp_201;
      real_t tmp_203 = tmp_198 + tmp_200 + tmp_202;
      real_t tmp_204 = 0.5*tmp_198 + 0.5*tmp_200 + 0.5*tmp_202;
      real_t tmp_205 = 2*tmp_204;
      real_t tmp_206 = tmp_193*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_207 = tmp_193*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_208 = tmp_193*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_209 = tmp_10*tmp_206 + tmp_207*tmp_33 + tmp_208*tmp_35;
      real_t tmp_210 = tmp_185*tmp_209;
      real_t tmp_211 = tmp_206*tmp_39 + tmp_207*tmp_40 + tmp_208*tmp_41;
      real_t tmp_212 = tmp_185*tmp_211;
      real_t tmp_213 = tmp_206*tmp_44 + tmp_207*tmp_45 + tmp_208*tmp_46;
      real_t tmp_214 = tmp_185*tmp_213;
      real_t tmp_215 = tmp_210 + tmp_212 + tmp_214;
      real_t tmp_216 = 0.5*tmp_210 + 0.5*tmp_212 + 0.5*tmp_214;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = tmp_193*(tmp_187 - tmp_189);
      real_t tmp_219 = tmp_193*(tmp_186 - tmp_191);
      real_t tmp_220 = tmp_193*(tmp_188 - tmp_190);
      real_t tmp_221 = tmp_10*tmp_218 + tmp_219*tmp_33 + tmp_220*tmp_35;
      real_t tmp_222 = 1.0*tmp_185;
      real_t tmp_223 = tmp_218*tmp_39 + tmp_219*tmp_40 + tmp_220*tmp_41;
      real_t tmp_224 = tmp_218*tmp_44 + tmp_219*tmp_45 + tmp_220*tmp_46;
      real_t tmp_225 = tmp_221*tmp_222 + tmp_222*tmp_223 + tmp_222*tmp_224;
      real_t tmp_226 = 2.0*tmp_185;
      real_t tmp_227 = tmp_221*tmp_226 + tmp_223*tmp_226 + tmp_224*tmp_226;
      real_t tmp_228 = 0.023437401610067198*tmp_86*std::abs(tmp_192);
      real_t tmp_229 = 0.63474065290976245;
      real_t tmp_230 = 2.3426512226208631;
      real_t tmp_231 = 0.52338867580838599;
      real_t tmp_232 = tmp_229 + tmp_230 + tmp_231 - 3.0;
      real_t tmp_233 = Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_8;
      real_t tmp_234 = Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_6;
      real_t tmp_235 = Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_7;
      real_t tmp_236 = Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_7;
      real_t tmp_237 = Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_8;
      real_t tmp_238 = Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_6;
      real_t tmp_239 = Blending_DF_Tetrahedron_4_3*tmp_235 - Blending_DF_Tetrahedron_4_3*tmp_237 + Blending_DF_Tetrahedron_4_4*tmp_233 - Blending_DF_Tetrahedron_4_4*tmp_238 + Blending_DF_Tetrahedron_4_5*tmp_234 - Blending_DF_Tetrahedron_4_5*tmp_236;
      real_t tmp_240 = tmp_30/tmp_239;
      real_t tmp_241 = tmp_240*(Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_4 - Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_3);
      real_t tmp_242 = tmp_240*(-Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_5 + Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_3);
      real_t tmp_243 = tmp_240*(Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_5 - Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_4);
      real_t tmp_244 = tmp_10*tmp_241 + tmp_242*tmp_33 + tmp_243*tmp_35;
      real_t tmp_245 = tmp_232*tmp_244;
      real_t tmp_246 = tmp_241*tmp_39 + tmp_242*tmp_40 + tmp_243*tmp_41;
      real_t tmp_247 = tmp_232*tmp_246;
      real_t tmp_248 = tmp_241*tmp_44 + tmp_242*tmp_45 + tmp_243*tmp_46;
      real_t tmp_249 = tmp_232*tmp_248;
      real_t tmp_250 = tmp_245 + tmp_247 + tmp_249;
      real_t tmp_251 = 0.5*tmp_245 + 0.5*tmp_247 + 0.5*tmp_249;
      real_t tmp_252 = 2*tmp_251;
      real_t tmp_253 = tmp_240*(Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_7 - Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_6);
      real_t tmp_254 = tmp_240*(-Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_8 + Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_6);
      real_t tmp_255 = tmp_240*(Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_8 - Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_7);
      real_t tmp_256 = tmp_10*tmp_253 + tmp_254*tmp_33 + tmp_255*tmp_35;
      real_t tmp_257 = tmp_232*tmp_256;
      real_t tmp_258 = tmp_253*tmp_39 + tmp_254*tmp_40 + tmp_255*tmp_41;
      real_t tmp_259 = tmp_232*tmp_258;
      real_t tmp_260 = tmp_253*tmp_44 + tmp_254*tmp_45 + tmp_255*tmp_46;
      real_t tmp_261 = tmp_232*tmp_260;
      real_t tmp_262 = tmp_257 + tmp_259 + tmp_261;
      real_t tmp_263 = 0.5*tmp_257 + 0.5*tmp_259 + 0.5*tmp_261;
      real_t tmp_264 = 2*tmp_263;
      real_t tmp_265 = tmp_240*(tmp_234 - tmp_236);
      real_t tmp_266 = tmp_240*(tmp_233 - tmp_238);
      real_t tmp_267 = tmp_240*(tmp_235 - tmp_237);
      real_t tmp_268 = tmp_10*tmp_265 + tmp_266*tmp_33 + tmp_267*tmp_35;
      real_t tmp_269 = 1.0*tmp_232;
      real_t tmp_270 = tmp_265*tmp_39 + tmp_266*tmp_40 + tmp_267*tmp_41;
      real_t tmp_271 = tmp_265*tmp_44 + tmp_266*tmp_45 + tmp_267*tmp_46;
      real_t tmp_272 = tmp_268*tmp_269 + tmp_269*tmp_270 + tmp_269*tmp_271;
      real_t tmp_273 = 2.0*tmp_232;
      real_t tmp_274 = tmp_268*tmp_273 + tmp_270*tmp_273 + tmp_271*tmp_273;
      real_t tmp_275 = 0.037402527819592891*tmp_86*std::abs(tmp_239);
      real_t tmp_276 = 2.2849042085964606;
      real_t tmp_277 = 0.58767356034867835;
      real_t tmp_278 = 0.56149122317684275;
      real_t tmp_279 = tmp_276 + tmp_277 + tmp_278 - 3.0;
      real_t tmp_280 = Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_8;
      real_t tmp_281 = Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_6;
      real_t tmp_282 = Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_7;
      real_t tmp_283 = Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_7;
      real_t tmp_284 = Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_8;
      real_t tmp_285 = Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_6;
      real_t tmp_286 = Blending_DF_Tetrahedron_5_3*tmp_282 - Blending_DF_Tetrahedron_5_3*tmp_284 + Blending_DF_Tetrahedron_5_4*tmp_280 - Blending_DF_Tetrahedron_5_4*tmp_285 + Blending_DF_Tetrahedron_5_5*tmp_281 - Blending_DF_Tetrahedron_5_5*tmp_283;
      real_t tmp_287 = tmp_30/tmp_286;
      real_t tmp_288 = tmp_287*(Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_4 - Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_3);
      real_t tmp_289 = tmp_287*(-Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_5 + Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_3);
      real_t tmp_290 = tmp_287*(Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_5 - Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_4);
      real_t tmp_291 = tmp_10*tmp_288 + tmp_289*tmp_33 + tmp_290*tmp_35;
      real_t tmp_292 = tmp_279*tmp_291;
      real_t tmp_293 = tmp_288*tmp_39 + tmp_289*tmp_40 + tmp_290*tmp_41;
      real_t tmp_294 = tmp_279*tmp_293;
      real_t tmp_295 = tmp_288*tmp_44 + tmp_289*tmp_45 + tmp_290*tmp_46;
      real_t tmp_296 = tmp_279*tmp_295;
      real_t tmp_297 = tmp_292 + tmp_294 + tmp_296;
      real_t tmp_298 = 0.5*tmp_292 + 0.5*tmp_294 + 0.5*tmp_296;
      real_t tmp_299 = 2*tmp_298;
      real_t tmp_300 = tmp_287*(Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_7 - Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_6);
      real_t tmp_301 = tmp_287*(-Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_8 + Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_6);
      real_t tmp_302 = tmp_287*(Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_8 - Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_7);
      real_t tmp_303 = tmp_10*tmp_300 + tmp_301*tmp_33 + tmp_302*tmp_35;
      real_t tmp_304 = tmp_279*tmp_303;
      real_t tmp_305 = tmp_300*tmp_39 + tmp_301*tmp_40 + tmp_302*tmp_41;
      real_t tmp_306 = tmp_279*tmp_305;
      real_t tmp_307 = tmp_300*tmp_44 + tmp_301*tmp_45 + tmp_302*tmp_46;
      real_t tmp_308 = tmp_279*tmp_307;
      real_t tmp_309 = tmp_304 + tmp_306 + tmp_308;
      real_t tmp_310 = 0.5*tmp_304 + 0.5*tmp_306 + 0.5*tmp_308;
      real_t tmp_311 = 2*tmp_310;
      real_t tmp_312 = tmp_287*(tmp_281 - tmp_283);
      real_t tmp_313 = tmp_287*(tmp_280 - tmp_285);
      real_t tmp_314 = tmp_287*(tmp_282 - tmp_284);
      real_t tmp_315 = tmp_10*tmp_312 + tmp_313*tmp_33 + tmp_314*tmp_35;
      real_t tmp_316 = 1.0*tmp_279;
      real_t tmp_317 = tmp_312*tmp_39 + tmp_313*tmp_40 + tmp_314*tmp_41;
      real_t tmp_318 = tmp_312*tmp_44 + tmp_313*tmp_45 + tmp_314*tmp_46;
      real_t tmp_319 = tmp_315*tmp_316 + tmp_316*tmp_317 + tmp_316*tmp_318;
      real_t tmp_320 = 2.0*tmp_279;
      real_t tmp_321 = tmp_315*tmp_320 + tmp_317*tmp_320 + tmp_318*tmp_320;
      real_t tmp_322 = 0.042000663468250377*tmp_86*std::abs(tmp_286);
      real_t tmp_323 = tmp_0 - 1.0;
      real_t tmp_324 = 2.0*tmp_323;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_324*tmp_70;
      real_t tmp_327 = tmp_324*tmp_59;
      real_t tmp_328 = tmp_88 - 1.0;
      real_t tmp_329 = 2.0*tmp_328;
      real_t tmp_330 = tmp_107*tmp_329;
      real_t tmp_331 = tmp_130*tmp_329;
      real_t tmp_332 = tmp_119*tmp_329;
      real_t tmp_333 = tmp_135 - 1.0;
      real_t tmp_334 = 2.0*tmp_333;
      real_t tmp_335 = tmp_154*tmp_334;
      real_t tmp_336 = tmp_177*tmp_334;
      real_t tmp_337 = tmp_166*tmp_334;
      real_t tmp_338 = tmp_182 - 1.0;
      real_t tmp_339 = 2.0*tmp_338;
      real_t tmp_340 = tmp_201*tmp_339;
      real_t tmp_341 = tmp_224*tmp_339;
      real_t tmp_342 = tmp_213*tmp_339;
      real_t tmp_343 = tmp_229 - 1.0;
      real_t tmp_344 = 2.0*tmp_343;
      real_t tmp_345 = tmp_248*tmp_344;
      real_t tmp_346 = tmp_271*tmp_344;
      real_t tmp_347 = tmp_260*tmp_344;
      real_t tmp_348 = tmp_276 - 1.0;
      real_t tmp_349 = 2.0*tmp_348;
      real_t tmp_350 = tmp_295*tmp_349;
      real_t tmp_351 = tmp_318*tmp_349;
      real_t tmp_352 = tmp_307*tmp_349;
      real_t tmp_353 = tmp_1 - 1.0;
      real_t tmp_354 = 2.0*tmp_353;
      real_t tmp_355 = tmp_354*tmp_42;
      real_t tmp_356 = tmp_354*tmp_69;
      real_t tmp_357 = tmp_354*tmp_57;
      real_t tmp_358 = tmp_89 - 1.0;
      real_t tmp_359 = 2.0*tmp_358;
      real_t tmp_360 = tmp_105*tmp_359;
      real_t tmp_361 = tmp_129*tmp_359;
      real_t tmp_362 = tmp_117*tmp_359;
      real_t tmp_363 = tmp_136 - 1.0;
      real_t tmp_364 = 2.0*tmp_363;
      real_t tmp_365 = tmp_152*tmp_364;
      real_t tmp_366 = tmp_176*tmp_364;
      real_t tmp_367 = tmp_164*tmp_364;
      real_t tmp_368 = tmp_183 - 1.0;
      real_t tmp_369 = 2.0*tmp_368;
      real_t tmp_370 = tmp_199*tmp_369;
      real_t tmp_371 = tmp_223*tmp_369;
      real_t tmp_372 = tmp_211*tmp_369;
      real_t tmp_373 = tmp_230 - 1.0;
      real_t tmp_374 = 2.0*tmp_373;
      real_t tmp_375 = tmp_246*tmp_374;
      real_t tmp_376 = tmp_270*tmp_374;
      real_t tmp_377 = tmp_258*tmp_374;
      real_t tmp_378 = tmp_277 - 1.0;
      real_t tmp_379 = 2.0*tmp_378;
      real_t tmp_380 = tmp_293*tmp_379;
      real_t tmp_381 = tmp_317*tmp_379;
      real_t tmp_382 = tmp_305*tmp_379;
      real_t tmp_383 = tmp_2 - 1.0;
      real_t tmp_384 = 2.0*tmp_383;
      real_t tmp_385 = tmp_37*tmp_384;
      real_t tmp_386 = tmp_384*tmp_67;
      real_t tmp_387 = tmp_384*tmp_55;
      real_t tmp_388 = tmp_90 - 1.0;
      real_t tmp_389 = 2.0*tmp_388;
      real_t tmp_390 = tmp_103*tmp_389;
      real_t tmp_391 = tmp_127*tmp_389;
      real_t tmp_392 = tmp_115*tmp_389;
      real_t tmp_393 = tmp_137 - 1.0;
      real_t tmp_394 = 2.0*tmp_393;
      real_t tmp_395 = tmp_150*tmp_394;
      real_t tmp_396 = tmp_174*tmp_394;
      real_t tmp_397 = tmp_162*tmp_394;
      real_t tmp_398 = tmp_184 - 1.0;
      real_t tmp_399 = 2.0*tmp_398;
      real_t tmp_400 = tmp_197*tmp_399;
      real_t tmp_401 = tmp_221*tmp_399;
      real_t tmp_402 = tmp_209*tmp_399;
      real_t tmp_403 = tmp_231 - 1.0;
      real_t tmp_404 = 2.0*tmp_403;
      real_t tmp_405 = tmp_244*tmp_404;
      real_t tmp_406 = tmp_268*tmp_404;
      real_t tmp_407 = tmp_256*tmp_404;
      real_t tmp_408 = tmp_278 - 1.0;
      real_t tmp_409 = 2.0*tmp_408;
      real_t tmp_410 = tmp_291*tmp_409;
      real_t tmp_411 = tmp_315*tmp_409;
      real_t tmp_412 = tmp_303*tmp_409;
      real_t tmp_413 = 1.4708028039367815;
      real_t tmp_414 = tmp_413*tmp_67;
      real_t tmp_415 = 0.10174693050945161;
      real_t tmp_416 = tmp_415*tmp_69;
      real_t tmp_417 = tmp_414 + tmp_416;
      real_t tmp_418 = tmp_1*tmp_37;
      real_t tmp_419 = tmp_2*tmp_42;
      real_t tmp_420 = tmp_418 + tmp_419;
      real_t tmp_421 = tmp_1*tmp_55;
      real_t tmp_422 = tmp_2*tmp_57;
      real_t tmp_423 = tmp_421 + tmp_422;
      real_t tmp_424 = 2.2521904169883697;
      real_t tmp_425 = tmp_127*tmp_424;
      real_t tmp_426 = 2.8970146395642704;
      real_t tmp_427 = tmp_129*tmp_426;
      real_t tmp_428 = tmp_425 + tmp_427;
      real_t tmp_429 = tmp_103*tmp_89;
      real_t tmp_430 = tmp_105*tmp_90;
      real_t tmp_431 = tmp_429 + tmp_430;
      real_t tmp_432 = tmp_115*tmp_89;
      real_t tmp_433 = tmp_117*tmp_90;
      real_t tmp_434 = tmp_432 + tmp_433;
      real_t tmp_435 = 0.091226635556457367;
      real_t tmp_436 = tmp_174*tmp_435;
      real_t tmp_437 = 2.8689657637350714;
      real_t tmp_438 = tmp_176*tmp_437;
      real_t tmp_439 = tmp_436 + tmp_438;
      real_t tmp_440 = tmp_136*tmp_150;
      real_t tmp_441 = tmp_137*tmp_152;
      real_t tmp_442 = tmp_440 + tmp_441;
      real_t tmp_443 = tmp_136*tmp_162;
      real_t tmp_444 = tmp_137*tmp_164;
      real_t tmp_445 = tmp_443 + tmp_444;
      real_t tmp_446 = 1.2225451447274185;
      real_t tmp_447 = tmp_221*tmp_446;
      real_t tmp_448 = 5.1079463996938133;
      real_t tmp_449 = tmp_223*tmp_448;
      real_t tmp_450 = tmp_447 + tmp_449;
      real_t tmp_451 = tmp_183*tmp_197;
      real_t tmp_452 = tmp_184*tmp_199;
      real_t tmp_453 = tmp_451 + tmp_452;
      real_t tmp_454 = tmp_183*tmp_209;
      real_t tmp_455 = tmp_184*tmp_211;
      real_t tmp_456 = tmp_454 + tmp_455;
      real_t tmp_457 = 4.6853024452417262;
      real_t tmp_458 = tmp_268*tmp_457;
      real_t tmp_459 = 1.046777351616772;
      real_t tmp_460 = tmp_270*tmp_459;
      real_t tmp_461 = tmp_458 + tmp_460;
      real_t tmp_462 = tmp_230*tmp_244;
      real_t tmp_463 = tmp_231*tmp_246;
      real_t tmp_464 = tmp_462 + tmp_463;
      real_t tmp_465 = tmp_230*tmp_256;
      real_t tmp_466 = tmp_231*tmp_258;
      real_t tmp_467 = tmp_465 + tmp_466;
      real_t tmp_468 = 1.1753471206973567;
      real_t tmp_469 = tmp_315*tmp_468;
      real_t tmp_470 = 1.1229824463536855;
      real_t tmp_471 = tmp_317*tmp_470;
      real_t tmp_472 = tmp_469 + tmp_471;
      real_t tmp_473 = tmp_277*tmp_291;
      real_t tmp_474 = tmp_278*tmp_293;
      real_t tmp_475 = tmp_473 + tmp_474;
      real_t tmp_476 = tmp_277*tmp_303;
      real_t tmp_477 = tmp_278*tmp_305;
      real_t tmp_478 = tmp_476 + tmp_477;
      real_t tmp_479 = 1.2960119335881961;
      real_t tmp_480 = tmp_479*tmp_67;
      real_t tmp_481 = tmp_415*tmp_70;
      real_t tmp_482 = tmp_480 + tmp_481;
      real_t tmp_483 = tmp_0*tmp_37;
      real_t tmp_484 = tmp_2*tmp_47;
      real_t tmp_485 = tmp_483 + tmp_484;
      real_t tmp_486 = tmp_0*tmp_55;
      real_t tmp_487 = tmp_2*tmp_59;
      real_t tmp_488 = tmp_486 + tmp_487;
      real_t tmp_489 = 0.087241697689513925;
      real_t tmp_490 = tmp_127*tmp_489;
      real_t tmp_491 = tmp_130*tmp_426;
      real_t tmp_492 = tmp_490 + tmp_491;
      real_t tmp_493 = tmp_103*tmp_88;
      real_t tmp_494 = tmp_107*tmp_90;
      real_t tmp_495 = tmp_493 + tmp_494;
      real_t tmp_496 = tmp_115*tmp_88;
      real_t tmp_497 = tmp_119*tmp_90;
      real_t tmp_498 = tmp_496 + tmp_497;
      real_t tmp_499 = 1.5209360195142712;
      real_t tmp_500 = tmp_174*tmp_499;
      real_t tmp_501 = tmp_177*tmp_437;
      real_t tmp_502 = tmp_500 + tmp_501;
      real_t tmp_503 = tmp_135*tmp_150;
      real_t tmp_504 = tmp_137*tmp_154;
      real_t tmp_505 = tmp_503 + tmp_504;
      real_t tmp_506 = tmp_135*tmp_162;
      real_t tmp_507 = tmp_137*tmp_166;
      real_t tmp_508 = tmp_506 + tmp_507;
      real_t tmp_509 = 1.366535401319912;
      real_t tmp_510 = tmp_221*tmp_509;
      real_t tmp_511 = tmp_224*tmp_448;
      real_t tmp_512 = tmp_510 + tmp_511;
      real_t tmp_513 = tmp_182*tmp_197;
      real_t tmp_514 = tmp_184*tmp_201;
      real_t tmp_515 = tmp_513 + tmp_514;
      real_t tmp_516 = tmp_182*tmp_209;
      real_t tmp_517 = tmp_184*tmp_213;
      real_t tmp_518 = tmp_516 + tmp_517;
      real_t tmp_519 = 1.2694813058195249;
      real_t tmp_520 = tmp_268*tmp_519;
      real_t tmp_521 = tmp_271*tmp_459;
      real_t tmp_522 = tmp_520 + tmp_521;
      real_t tmp_523 = tmp_229*tmp_244;
      real_t tmp_524 = tmp_231*tmp_248;
      real_t tmp_525 = tmp_523 + tmp_524;
      real_t tmp_526 = tmp_229*tmp_256;
      real_t tmp_527 = tmp_231*tmp_260;
      real_t tmp_528 = tmp_526 + tmp_527;
      real_t tmp_529 = 4.5698084171929212;
      real_t tmp_530 = tmp_315*tmp_529;
      real_t tmp_531 = tmp_318*tmp_470;
      real_t tmp_532 = tmp_530 + tmp_531;
      real_t tmp_533 = tmp_276*tmp_291;
      real_t tmp_534 = tmp_278*tmp_295;
      real_t tmp_535 = tmp_533 + tmp_534;
      real_t tmp_536 = tmp_276*tmp_303;
      real_t tmp_537 = tmp_278*tmp_307;
      real_t tmp_538 = tmp_536 + tmp_537;
      real_t tmp_539 = tmp_479*tmp_69;
      real_t tmp_540 = tmp_413*tmp_70;
      real_t tmp_541 = tmp_539 + tmp_540;
      real_t tmp_542 = tmp_0*tmp_42;
      real_t tmp_543 = tmp_1*tmp_47;
      real_t tmp_544 = tmp_542 + tmp_543;
      real_t tmp_545 = tmp_0*tmp_57;
      real_t tmp_546 = tmp_1*tmp_59;
      real_t tmp_547 = tmp_545 + tmp_546;
      real_t tmp_548 = tmp_129*tmp_489;
      real_t tmp_549 = tmp_130*tmp_424;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = tmp_105*tmp_88;
      real_t tmp_552 = tmp_107*tmp_89;
      real_t tmp_553 = tmp_551 + tmp_552;
      real_t tmp_554 = tmp_117*tmp_88;
      real_t tmp_555 = tmp_119*tmp_89;
      real_t tmp_556 = tmp_554 + tmp_555;
      real_t tmp_557 = tmp_176*tmp_499;
      real_t tmp_558 = tmp_177*tmp_435;
      real_t tmp_559 = tmp_557 + tmp_558;
      real_t tmp_560 = tmp_135*tmp_152;
      real_t tmp_561 = tmp_136*tmp_154;
      real_t tmp_562 = tmp_560 + tmp_561;
      real_t tmp_563 = tmp_135*tmp_164;
      real_t tmp_564 = tmp_136*tmp_166;
      real_t tmp_565 = tmp_563 + tmp_564;
      real_t tmp_566 = tmp_223*tmp_509;
      real_t tmp_567 = tmp_224*tmp_446;
      real_t tmp_568 = tmp_566 + tmp_567;
      real_t tmp_569 = tmp_182*tmp_199;
      real_t tmp_570 = tmp_183*tmp_201;
      real_t tmp_571 = tmp_569 + tmp_570;
      real_t tmp_572 = tmp_182*tmp_211;
      real_t tmp_573 = tmp_183*tmp_213;
      real_t tmp_574 = tmp_572 + tmp_573;
      real_t tmp_575 = tmp_270*tmp_519;
      real_t tmp_576 = tmp_271*tmp_457;
      real_t tmp_577 = tmp_575 + tmp_576;
      real_t tmp_578 = tmp_229*tmp_246;
      real_t tmp_579 = tmp_230*tmp_248;
      real_t tmp_580 = tmp_578 + tmp_579;
      real_t tmp_581 = tmp_229*tmp_258;
      real_t tmp_582 = tmp_230*tmp_260;
      real_t tmp_583 = tmp_581 + tmp_582;
      real_t tmp_584 = tmp_317*tmp_529;
      real_t tmp_585 = tmp_318*tmp_468;
      real_t tmp_586 = tmp_584 + tmp_585;
      real_t tmp_587 = tmp_276*tmp_293;
      real_t tmp_588 = tmp_277*tmp_295;
      real_t tmp_589 = tmp_587 + tmp_588;
      real_t tmp_590 = tmp_276*tmp_305;
      real_t tmp_591 = tmp_277*tmp_307;
      real_t tmp_592 = tmp_590 + tmp_591;
      real_t tmp_593 = -tmp_1;
      real_t tmp_594 = 4.0 - tmp_0;
      real_t tmp_595 = -tmp_415 + tmp_593 + tmp_594;
      real_t tmp_596 = tmp_37*tmp_595;
      real_t tmp_597 = -tmp_419 - tmp_484 + tmp_596;
      real_t tmp_598 = tmp_595*tmp_67;
      real_t tmp_599 = -tmp_416 - tmp_481 + 2.0*tmp_598;
      real_t tmp_600 = tmp_55*tmp_595;
      real_t tmp_601 = -tmp_422 - tmp_487 + tmp_600;
      real_t tmp_602 = -tmp_89;
      real_t tmp_603 = 4.0 - tmp_88;
      real_t tmp_604 = -tmp_426 + tmp_602 + tmp_603;
      real_t tmp_605 = tmp_103*tmp_604;
      real_t tmp_606 = -tmp_430 - tmp_494 + tmp_605;
      real_t tmp_607 = tmp_127*tmp_604;
      real_t tmp_608 = -tmp_427 - tmp_491 + 2.0*tmp_607;
      real_t tmp_609 = tmp_115*tmp_604;
      real_t tmp_610 = -tmp_433 - tmp_497 + tmp_609;
      real_t tmp_611 = -tmp_136;
      real_t tmp_612 = 4.0 - tmp_135;
      real_t tmp_613 = -tmp_437 + tmp_611 + tmp_612;
      real_t tmp_614 = tmp_150*tmp_613;
      real_t tmp_615 = -tmp_441 - tmp_504 + tmp_614;
      real_t tmp_616 = tmp_174*tmp_613;
      real_t tmp_617 = -tmp_438 - tmp_501 + 2.0*tmp_616;
      real_t tmp_618 = tmp_162*tmp_613;
      real_t tmp_619 = -tmp_444 - tmp_507 + tmp_618;
      real_t tmp_620 = -tmp_183;
      real_t tmp_621 = 4.0 - tmp_182;
      real_t tmp_622 = -tmp_448 + tmp_620 + tmp_621;
      real_t tmp_623 = tmp_197*tmp_622;
      real_t tmp_624 = -tmp_452 - tmp_514 + tmp_623;
      real_t tmp_625 = tmp_221*tmp_622;
      real_t tmp_626 = -tmp_449 - tmp_511 + 2.0*tmp_625;
      real_t tmp_627 = tmp_209*tmp_622;
      real_t tmp_628 = -tmp_455 - tmp_517 + tmp_627;
      real_t tmp_629 = -tmp_230;
      real_t tmp_630 = 4.0 - tmp_229;
      real_t tmp_631 = -tmp_459 + tmp_629 + tmp_630;
      real_t tmp_632 = tmp_244*tmp_631;
      real_t tmp_633 = -tmp_463 - tmp_524 + tmp_632;
      real_t tmp_634 = tmp_268*tmp_631;
      real_t tmp_635 = -tmp_460 - tmp_521 + 2.0*tmp_634;
      real_t tmp_636 = tmp_256*tmp_631;
      real_t tmp_637 = -tmp_466 - tmp_527 + tmp_636;
      real_t tmp_638 = -tmp_277;
      real_t tmp_639 = 4.0 - tmp_276;
      real_t tmp_640 = -tmp_470 + tmp_638 + tmp_639;
      real_t tmp_641 = tmp_291*tmp_640;
      real_t tmp_642 = -tmp_474 - tmp_534 + tmp_641;
      real_t tmp_643 = tmp_315*tmp_640;
      real_t tmp_644 = -tmp_471 - tmp_531 + 2.0*tmp_643;
      real_t tmp_645 = tmp_303*tmp_640;
      real_t tmp_646 = -tmp_477 - tmp_537 + tmp_645;
      real_t tmp_647 = -tmp_2;
      real_t tmp_648 = -tmp_413 + tmp_594 + tmp_647;
      real_t tmp_649 = tmp_42*tmp_648;
      real_t tmp_650 = -tmp_418 - tmp_543 + tmp_649;
      real_t tmp_651 = tmp_648*tmp_69;
      real_t tmp_652 = -tmp_414 - tmp_540 + 2.0*tmp_651;
      real_t tmp_653 = tmp_57*tmp_648;
      real_t tmp_654 = -tmp_421 - tmp_546 + tmp_653;
      real_t tmp_655 = -tmp_90;
      real_t tmp_656 = -tmp_424 + tmp_603 + tmp_655;
      real_t tmp_657 = tmp_105*tmp_656;
      real_t tmp_658 = -tmp_429 - tmp_552 + tmp_657;
      real_t tmp_659 = tmp_129*tmp_656;
      real_t tmp_660 = -tmp_425 - tmp_549 + 2.0*tmp_659;
      real_t tmp_661 = tmp_117*tmp_656;
      real_t tmp_662 = -tmp_432 - tmp_555 + tmp_661;
      real_t tmp_663 = -tmp_137;
      real_t tmp_664 = -tmp_435 + tmp_612 + tmp_663;
      real_t tmp_665 = tmp_152*tmp_664;
      real_t tmp_666 = -tmp_440 - tmp_561 + tmp_665;
      real_t tmp_667 = tmp_176*tmp_664;
      real_t tmp_668 = -tmp_436 - tmp_558 + 2.0*tmp_667;
      real_t tmp_669 = tmp_164*tmp_664;
      real_t tmp_670 = -tmp_443 - tmp_564 + tmp_669;
      real_t tmp_671 = -tmp_184;
      real_t tmp_672 = -tmp_446 + tmp_621 + tmp_671;
      real_t tmp_673 = tmp_199*tmp_672;
      real_t tmp_674 = -tmp_451 - tmp_570 + tmp_673;
      real_t tmp_675 = tmp_223*tmp_672;
      real_t tmp_676 = -tmp_447 - tmp_567 + 2.0*tmp_675;
      real_t tmp_677 = tmp_211*tmp_672;
      real_t tmp_678 = -tmp_454 - tmp_573 + tmp_677;
      real_t tmp_679 = -tmp_231;
      real_t tmp_680 = -tmp_457 + tmp_630 + tmp_679;
      real_t tmp_681 = tmp_246*tmp_680;
      real_t tmp_682 = -tmp_462 - tmp_579 + tmp_681;
      real_t tmp_683 = tmp_270*tmp_680;
      real_t tmp_684 = -tmp_458 - tmp_576 + 2.0*tmp_683;
      real_t tmp_685 = tmp_258*tmp_680;
      real_t tmp_686 = -tmp_465 - tmp_582 + tmp_685;
      real_t tmp_687 = -tmp_278;
      real_t tmp_688 = -tmp_468 + tmp_639 + tmp_687;
      real_t tmp_689 = tmp_293*tmp_688;
      real_t tmp_690 = -tmp_473 - tmp_588 + tmp_689;
      real_t tmp_691 = tmp_317*tmp_688;
      real_t tmp_692 = -tmp_469 - tmp_585 + 2.0*tmp_691;
      real_t tmp_693 = tmp_305*tmp_688;
      real_t tmp_694 = -tmp_476 - tmp_591 + tmp_693;
      real_t tmp_695 = -tmp_479 + tmp_593 + tmp_647 + 4.0;
      real_t tmp_696 = tmp_47*tmp_695;
      real_t tmp_697 = -tmp_483 - tmp_542 + tmp_696;
      real_t tmp_698 = tmp_695*tmp_70;
      real_t tmp_699 = -tmp_480 - tmp_539 + 2.0*tmp_698;
      real_t tmp_700 = tmp_59*tmp_695;
      real_t tmp_701 = -tmp_486 - tmp_545 + tmp_700;
      real_t tmp_702 = -tmp_489 + tmp_602 + tmp_655 + 4.0;
      real_t tmp_703 = tmp_107*tmp_702;
      real_t tmp_704 = -tmp_493 - tmp_551 + tmp_703;
      real_t tmp_705 = tmp_130*tmp_702;
      real_t tmp_706 = -tmp_490 - tmp_548 + 2.0*tmp_705;
      real_t tmp_707 = tmp_119*tmp_702;
      real_t tmp_708 = -tmp_496 - tmp_554 + tmp_707;
      real_t tmp_709 = -tmp_499 + tmp_611 + tmp_663 + 4.0;
      real_t tmp_710 = tmp_154*tmp_709;
      real_t tmp_711 = -tmp_503 - tmp_560 + tmp_710;
      real_t tmp_712 = tmp_177*tmp_709;
      real_t tmp_713 = -tmp_500 - tmp_557 + 2.0*tmp_712;
      real_t tmp_714 = tmp_166*tmp_709;
      real_t tmp_715 = -tmp_506 - tmp_563 + tmp_714;
      real_t tmp_716 = -tmp_509 + tmp_620 + tmp_671 + 4.0;
      real_t tmp_717 = tmp_201*tmp_716;
      real_t tmp_718 = -tmp_513 - tmp_569 + tmp_717;
      real_t tmp_719 = tmp_224*tmp_716;
      real_t tmp_720 = -tmp_510 - tmp_566 + 2.0*tmp_719;
      real_t tmp_721 = tmp_213*tmp_716;
      real_t tmp_722 = -tmp_516 - tmp_572 + tmp_721;
      real_t tmp_723 = -tmp_519 + tmp_629 + tmp_679 + 4.0;
      real_t tmp_724 = tmp_248*tmp_723;
      real_t tmp_725 = -tmp_523 - tmp_578 + tmp_724;
      real_t tmp_726 = tmp_271*tmp_723;
      real_t tmp_727 = -tmp_520 - tmp_575 + 2.0*tmp_726;
      real_t tmp_728 = tmp_260*tmp_723;
      real_t tmp_729 = -tmp_526 - tmp_581 + tmp_728;
      real_t tmp_730 = -tmp_529 + tmp_638 + tmp_687 + 4.0;
      real_t tmp_731 = tmp_295*tmp_730;
      real_t tmp_732 = -tmp_533 - tmp_587 + tmp_731;
      real_t tmp_733 = tmp_318*tmp_730;
      real_t tmp_734 = -tmp_530 - tmp_584 + 2.0*tmp_733;
      real_t tmp_735 = tmp_307*tmp_730;
      real_t tmp_736 = -tmp_536 - tmp_590 + tmp_735;
      real_t tmp_737 = 1.0*tmp_323;
      real_t tmp_738 = tmp_47*tmp_737;
      real_t tmp_739 = tmp_59*tmp_737;
      real_t tmp_740 = tmp_70*tmp_737;
      real_t tmp_741 = 1.0*tmp_328;
      real_t tmp_742 = tmp_107*tmp_741;
      real_t tmp_743 = tmp_119*tmp_741;
      real_t tmp_744 = tmp_130*tmp_741;
      real_t tmp_745 = 1.0*tmp_333;
      real_t tmp_746 = tmp_154*tmp_745;
      real_t tmp_747 = tmp_166*tmp_745;
      real_t tmp_748 = tmp_177*tmp_745;
      real_t tmp_749 = 1.0*tmp_338;
      real_t tmp_750 = tmp_201*tmp_749;
      real_t tmp_751 = tmp_213*tmp_749;
      real_t tmp_752 = tmp_224*tmp_749;
      real_t tmp_753 = 1.0*tmp_343;
      real_t tmp_754 = tmp_248*tmp_753;
      real_t tmp_755 = tmp_260*tmp_753;
      real_t tmp_756 = tmp_271*tmp_753;
      real_t tmp_757 = 1.0*tmp_348;
      real_t tmp_758 = tmp_295*tmp_757;
      real_t tmp_759 = tmp_307*tmp_757;
      real_t tmp_760 = tmp_318*tmp_757;
      real_t tmp_761 = 0.0077437374632848503;
      real_t tmp_762 = 16.0*tmp_761;
      real_t tmp_763 = 0.057166317547776457;
      real_t tmp_764 = 16.0*tmp_763;
      real_t tmp_765 = 0.0035859733968567312;
      real_t tmp_766 = 16.0*tmp_765;
      real_t tmp_767 = 0.0062699593403269518;
      real_t tmp_768 = 16.0*tmp_767;
      real_t tmp_769 = 0.0083383994147991636;
      real_t tmp_770 = 16.0*tmp_769;
      real_t tmp_771 = 0.10318617657930605;
      real_t tmp_772 = 16.0*tmp_771;
      real_t tmp_773 = tmp_134*(tmp_105*tmp_358*tmp_742 + tmp_117*tmp_358*tmp_743 + tmp_129*tmp_331*tmp_358) + tmp_181*(tmp_152*tmp_363*tmp_746 + tmp_164*tmp_363*tmp_747 + tmp_176*tmp_336*tmp_363) + tmp_228*(tmp_199*tmp_368*tmp_750 + tmp_211*tmp_368*tmp_751 + tmp_223*tmp_341*tmp_368) + tmp_275*(tmp_246*tmp_373*tmp_754 + tmp_258*tmp_373*tmp_755 + tmp_270*tmp_346*tmp_373) + tmp_322*(tmp_293*tmp_378*tmp_758 + tmp_305*tmp_378*tmp_759 + tmp_317*tmp_351*tmp_378) + tmp_87*(tmp_326*tmp_353*tmp_69 + tmp_353*tmp_42*tmp_738 + tmp_353*tmp_57*tmp_739);
      real_t tmp_774 = tmp_37*tmp_383;
      real_t tmp_775 = tmp_383*tmp_67;
      real_t tmp_776 = tmp_383*tmp_55;
      real_t tmp_777 = tmp_103*tmp_388;
      real_t tmp_778 = tmp_127*tmp_388;
      real_t tmp_779 = tmp_115*tmp_388;
      real_t tmp_780 = tmp_150*tmp_393;
      real_t tmp_781 = tmp_174*tmp_393;
      real_t tmp_782 = tmp_162*tmp_393;
      real_t tmp_783 = tmp_197*tmp_398;
      real_t tmp_784 = tmp_221*tmp_398;
      real_t tmp_785 = tmp_209*tmp_398;
      real_t tmp_786 = tmp_244*tmp_403;
      real_t tmp_787 = tmp_268*tmp_403;
      real_t tmp_788 = tmp_256*tmp_403;
      real_t tmp_789 = tmp_291*tmp_408;
      real_t tmp_790 = tmp_315*tmp_408;
      real_t tmp_791 = tmp_303*tmp_408;
      real_t tmp_792 = tmp_134*(tmp_331*tmp_778 + tmp_742*tmp_777 + tmp_743*tmp_779) + tmp_181*(tmp_336*tmp_781 + tmp_746*tmp_780 + tmp_747*tmp_782) + tmp_228*(tmp_341*tmp_784 + tmp_750*tmp_783 + tmp_751*tmp_785) + tmp_275*(tmp_346*tmp_787 + tmp_754*tmp_786 + tmp_755*tmp_788) + tmp_322*(tmp_351*tmp_790 + tmp_758*tmp_789 + tmp_759*tmp_791) + tmp_87*(tmp_326*tmp_775 + tmp_738*tmp_774 + tmp_739*tmp_776);
      real_t tmp_793 = 1.0*tmp_353;
      real_t tmp_794 = tmp_42*tmp_793;
      real_t tmp_795 = tmp_57*tmp_793;
      real_t tmp_796 = tmp_69*tmp_793;
      real_t tmp_797 = 1.0*tmp_358;
      real_t tmp_798 = tmp_105*tmp_797;
      real_t tmp_799 = tmp_117*tmp_797;
      real_t tmp_800 = tmp_129*tmp_797;
      real_t tmp_801 = 1.0*tmp_363;
      real_t tmp_802 = tmp_152*tmp_801;
      real_t tmp_803 = tmp_164*tmp_801;
      real_t tmp_804 = tmp_176*tmp_801;
      real_t tmp_805 = 1.0*tmp_368;
      real_t tmp_806 = tmp_199*tmp_805;
      real_t tmp_807 = tmp_211*tmp_805;
      real_t tmp_808 = tmp_223*tmp_805;
      real_t tmp_809 = 1.0*tmp_373;
      real_t tmp_810 = tmp_246*tmp_809;
      real_t tmp_811 = tmp_258*tmp_809;
      real_t tmp_812 = tmp_270*tmp_809;
      real_t tmp_813 = 1.0*tmp_378;
      real_t tmp_814 = tmp_293*tmp_813;
      real_t tmp_815 = tmp_305*tmp_813;
      real_t tmp_816 = tmp_317*tmp_813;
      real_t tmp_817 = 0.0043757761300183204;
      real_t tmp_818 = 16.0*tmp_817;
      real_t tmp_819 = 0.00099375010032449703;
      real_t tmp_820 = 16.0*tmp_819;
      real_t tmp_821 = 0.056928371200142526;
      real_t tmp_822 = 16.0*tmp_821;
      real_t tmp_823 = 0.0094443133122954787;
      real_t tmp_824 = 16.0*tmp_823;
      real_t tmp_825 = 0.11266951910033116;
      real_t tmp_826 = 16.0*tmp_825;
      real_t tmp_827 = 0.010625818302220938;
      real_t tmp_828 = 16.0*tmp_827;
      real_t tmp_829 = tmp_134*(tmp_361*tmp_778 + tmp_777*tmp_798 + tmp_779*tmp_799) + tmp_181*(tmp_366*tmp_781 + tmp_780*tmp_802 + tmp_782*tmp_803) + tmp_228*(tmp_371*tmp_784 + tmp_783*tmp_806 + tmp_785*tmp_807) + tmp_275*(tmp_376*tmp_787 + tmp_786*tmp_810 + tmp_788*tmp_811) + tmp_322*(tmp_381*tmp_790 + tmp_789*tmp_814 + tmp_791*tmp_815) + tmp_87*(tmp_356*tmp_775 + tmp_774*tmp_794 + tmp_776*tmp_795);
      real_t tmp_830 = 1.0*tmp_383;
      real_t tmp_831 = tmp_37*tmp_830;
      real_t tmp_832 = tmp_55*tmp_830;
      real_t tmp_833 = tmp_67*tmp_830;
      real_t tmp_834 = 1.0*tmp_388;
      real_t tmp_835 = tmp_103*tmp_834;
      real_t tmp_836 = tmp_115*tmp_834;
      real_t tmp_837 = tmp_127*tmp_834;
      real_t tmp_838 = 1.0*tmp_393;
      real_t tmp_839 = tmp_150*tmp_838;
      real_t tmp_840 = tmp_162*tmp_838;
      real_t tmp_841 = tmp_174*tmp_838;
      real_t tmp_842 = 1.0*tmp_398;
      real_t tmp_843 = tmp_197*tmp_842;
      real_t tmp_844 = tmp_209*tmp_842;
      real_t tmp_845 = tmp_221*tmp_842;
      real_t tmp_846 = 1.0*tmp_403;
      real_t tmp_847 = tmp_244*tmp_846;
      real_t tmp_848 = tmp_256*tmp_846;
      real_t tmp_849 = tmp_268*tmp_846;
      real_t tmp_850 = 1.0*tmp_408;
      real_t tmp_851 = tmp_291*tmp_850;
      real_t tmp_852 = tmp_303*tmp_850;
      real_t tmp_853 = tmp_315*tmp_850;
      real_t tmp_854 = 0.056302573684848263;
      real_t tmp_855 = 16.0*tmp_854;
      real_t tmp_856 = 0.012572425993634655;
      real_t tmp_857 = 16.0*tmp_856;
      real_t tmp_858 = 0.011798460914744936;
      real_t tmp_859 = 16.0*tmp_858;
      real_t tmp_860 = 0.15092704411515212;
      real_t tmp_861 = 16.0*tmp_860;
      real_t tmp_862 = 0.014197397146730236;
      real_t tmp_863 = 16.0*tmp_862;
      real_t tmp_864 = 0.012018121709433846;
      real_t tmp_865 = 16.0*tmp_864;
      real_t tmp_866 = 0.36770070098419538;
      real_t tmp_867 = tmp_37*tmp_866;
      real_t tmp_868 = 0.025436732627362901;
      real_t tmp_869 = tmp_42*tmp_868;
      real_t tmp_870 = tmp_867 + tmp_869;
      real_t tmp_871 = 2*tmp_870;
      real_t tmp_872 = tmp_55*tmp_866;
      real_t tmp_873 = tmp_57*tmp_868;
      real_t tmp_874 = tmp_872 + tmp_873;
      real_t tmp_875 = 2*tmp_874;
      real_t tmp_876 = tmp_1*tmp_67;
      real_t tmp_877 = tmp_2*tmp_69;
      real_t tmp_878 = tmp_876 + tmp_877;
      real_t tmp_879 = 0.56304760424709244;
      real_t tmp_880 = tmp_103*tmp_879;
      real_t tmp_881 = 0.7242536598910676;
      real_t tmp_882 = tmp_105*tmp_881;
      real_t tmp_883 = tmp_880 + tmp_882;
      real_t tmp_884 = 2*tmp_883;
      real_t tmp_885 = tmp_115*tmp_879;
      real_t tmp_886 = tmp_117*tmp_881;
      real_t tmp_887 = tmp_885 + tmp_886;
      real_t tmp_888 = 2*tmp_887;
      real_t tmp_889 = tmp_127*tmp_89;
      real_t tmp_890 = tmp_129*tmp_90;
      real_t tmp_891 = tmp_889 + tmp_890;
      real_t tmp_892 = 0.022806658889114342;
      real_t tmp_893 = tmp_150*tmp_892;
      real_t tmp_894 = 0.71724144093376785;
      real_t tmp_895 = tmp_152*tmp_894;
      real_t tmp_896 = tmp_893 + tmp_895;
      real_t tmp_897 = 2*tmp_896;
      real_t tmp_898 = tmp_162*tmp_892;
      real_t tmp_899 = tmp_164*tmp_894;
      real_t tmp_900 = tmp_898 + tmp_899;
      real_t tmp_901 = 2*tmp_900;
      real_t tmp_902 = tmp_136*tmp_174;
      real_t tmp_903 = tmp_137*tmp_176;
      real_t tmp_904 = tmp_902 + tmp_903;
      real_t tmp_905 = 0.30563628618185462;
      real_t tmp_906 = tmp_197*tmp_905;
      real_t tmp_907 = 1.2769865999234533;
      real_t tmp_908 = tmp_199*tmp_907;
      real_t tmp_909 = tmp_906 + tmp_908;
      real_t tmp_910 = 2*tmp_909;
      real_t tmp_911 = tmp_209*tmp_905;
      real_t tmp_912 = tmp_211*tmp_907;
      real_t tmp_913 = tmp_911 + tmp_912;
      real_t tmp_914 = 2*tmp_913;
      real_t tmp_915 = tmp_183*tmp_221;
      real_t tmp_916 = tmp_184*tmp_223;
      real_t tmp_917 = tmp_915 + tmp_916;
      real_t tmp_918 = 1.1713256113104316;
      real_t tmp_919 = tmp_244*tmp_918;
      real_t tmp_920 = 0.261694337904193;
      real_t tmp_921 = tmp_246*tmp_920;
      real_t tmp_922 = tmp_919 + tmp_921;
      real_t tmp_923 = 2*tmp_922;
      real_t tmp_924 = tmp_256*tmp_918;
      real_t tmp_925 = tmp_258*tmp_920;
      real_t tmp_926 = tmp_924 + tmp_925;
      real_t tmp_927 = 2*tmp_926;
      real_t tmp_928 = tmp_230*tmp_268;
      real_t tmp_929 = tmp_231*tmp_270;
      real_t tmp_930 = tmp_928 + tmp_929;
      real_t tmp_931 = 0.29383678017433917;
      real_t tmp_932 = tmp_291*tmp_931;
      real_t tmp_933 = 0.28074561158842137;
      real_t tmp_934 = tmp_293*tmp_933;
      real_t tmp_935 = tmp_932 + tmp_934;
      real_t tmp_936 = 2*tmp_935;
      real_t tmp_937 = tmp_303*tmp_931;
      real_t tmp_938 = tmp_305*tmp_933;
      real_t tmp_939 = tmp_937 + tmp_938;
      real_t tmp_940 = 2*tmp_939;
      real_t tmp_941 = tmp_277*tmp_315;
      real_t tmp_942 = tmp_278*tmp_317;
      real_t tmp_943 = tmp_941 + tmp_942;
      real_t tmp_944 = 0.32400298339704903;
      real_t tmp_945 = tmp_37*tmp_944;
      real_t tmp_946 = tmp_47*tmp_868;
      real_t tmp_947 = tmp_945 + tmp_946;
      real_t tmp_948 = 2*tmp_947;
      real_t tmp_949 = tmp_55*tmp_944;
      real_t tmp_950 = tmp_59*tmp_868;
      real_t tmp_951 = tmp_949 + tmp_950;
      real_t tmp_952 = 2*tmp_951;
      real_t tmp_953 = tmp_0*tmp_67;
      real_t tmp_954 = tmp_2*tmp_70;
      real_t tmp_955 = tmp_953 + tmp_954;
      real_t tmp_956 = 0.021810424422378481;
      real_t tmp_957 = tmp_103*tmp_956;
      real_t tmp_958 = tmp_107*tmp_881;
      real_t tmp_959 = tmp_957 + tmp_958;
      real_t tmp_960 = 2*tmp_959;
      real_t tmp_961 = tmp_115*tmp_956;
      real_t tmp_962 = tmp_119*tmp_881;
      real_t tmp_963 = tmp_961 + tmp_962;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = tmp_127*tmp_88;
      real_t tmp_966 = tmp_130*tmp_90;
      real_t tmp_967 = tmp_965 + tmp_966;
      real_t tmp_968 = 0.38023400487856779;
      real_t tmp_969 = tmp_150*tmp_968;
      real_t tmp_970 = tmp_154*tmp_894;
      real_t tmp_971 = tmp_969 + tmp_970;
      real_t tmp_972 = 2*tmp_971;
      real_t tmp_973 = tmp_162*tmp_968;
      real_t tmp_974 = tmp_166*tmp_894;
      real_t tmp_975 = tmp_973 + tmp_974;
      real_t tmp_976 = 2*tmp_975;
      real_t tmp_977 = tmp_135*tmp_174;
      real_t tmp_978 = tmp_137*tmp_177;
      real_t tmp_979 = tmp_977 + tmp_978;
      real_t tmp_980 = 0.34163385032997801;
      real_t tmp_981 = tmp_197*tmp_980;
      real_t tmp_982 = tmp_201*tmp_907;
      real_t tmp_983 = tmp_981 + tmp_982;
      real_t tmp_984 = 2*tmp_983;
      real_t tmp_985 = tmp_209*tmp_980;
      real_t tmp_986 = tmp_213*tmp_907;
      real_t tmp_987 = tmp_985 + tmp_986;
      real_t tmp_988 = 2*tmp_987;
      real_t tmp_989 = tmp_182*tmp_221;
      real_t tmp_990 = tmp_184*tmp_224;
      real_t tmp_991 = tmp_989 + tmp_990;
      real_t tmp_992 = 0.31737032645488122;
      real_t tmp_993 = tmp_244*tmp_992;
      real_t tmp_994 = tmp_248*tmp_920;
      real_t tmp_995 = tmp_993 + tmp_994;
      real_t tmp_996 = 2*tmp_995;
      real_t tmp_997 = tmp_256*tmp_992;
      real_t tmp_998 = tmp_260*tmp_920;
      real_t tmp_999 = tmp_997 + tmp_998;
      real_t tmp_1000 = 2*tmp_999;
      real_t tmp_1001 = tmp_229*tmp_268;
      real_t tmp_1002 = tmp_231*tmp_271;
      real_t tmp_1003 = tmp_1001 + tmp_1002;
      real_t tmp_1004 = 1.1424521042982303;
      real_t tmp_1005 = tmp_1004*tmp_291;
      real_t tmp_1006 = tmp_295*tmp_933;
      real_t tmp_1007 = tmp_1005 + tmp_1006;
      real_t tmp_1008 = 2*tmp_1007;
      real_t tmp_1009 = tmp_1004*tmp_303;
      real_t tmp_1010 = tmp_307*tmp_933;
      real_t tmp_1011 = tmp_1009 + tmp_1010;
      real_t tmp_1012 = 2*tmp_1011;
      real_t tmp_1013 = tmp_276*tmp_315;
      real_t tmp_1014 = tmp_278*tmp_318;
      real_t tmp_1015 = tmp_1013 + tmp_1014;
      real_t tmp_1016 = tmp_42*tmp_944;
      real_t tmp_1017 = tmp_47*tmp_866;
      real_t tmp_1018 = tmp_1016 + tmp_1017;
      real_t tmp_1019 = 2*tmp_1018;
      real_t tmp_1020 = tmp_57*tmp_944;
      real_t tmp_1021 = tmp_59*tmp_866;
      real_t tmp_1022 = tmp_1020 + tmp_1021;
      real_t tmp_1023 = 2*tmp_1022;
      real_t tmp_1024 = tmp_0*tmp_69;
      real_t tmp_1025 = tmp_1*tmp_70;
      real_t tmp_1026 = tmp_1024 + tmp_1025;
      real_t tmp_1027 = tmp_105*tmp_956;
      real_t tmp_1028 = tmp_107*tmp_879;
      real_t tmp_1029 = tmp_1027 + tmp_1028;
      real_t tmp_1030 = 2*tmp_1029;
      real_t tmp_1031 = tmp_117*tmp_956;
      real_t tmp_1032 = tmp_119*tmp_879;
      real_t tmp_1033 = tmp_1031 + tmp_1032;
      real_t tmp_1034 = 2*tmp_1033;
      real_t tmp_1035 = tmp_129*tmp_88;
      real_t tmp_1036 = tmp_130*tmp_89;
      real_t tmp_1037 = tmp_1035 + tmp_1036;
      real_t tmp_1038 = tmp_152*tmp_968;
      real_t tmp_1039 = tmp_154*tmp_892;
      real_t tmp_1040 = tmp_1038 + tmp_1039;
      real_t tmp_1041 = 2*tmp_1040;
      real_t tmp_1042 = tmp_164*tmp_968;
      real_t tmp_1043 = tmp_166*tmp_892;
      real_t tmp_1044 = tmp_1042 + tmp_1043;
      real_t tmp_1045 = 2*tmp_1044;
      real_t tmp_1046 = tmp_135*tmp_176;
      real_t tmp_1047 = tmp_136*tmp_177;
      real_t tmp_1048 = tmp_1046 + tmp_1047;
      real_t tmp_1049 = tmp_199*tmp_980;
      real_t tmp_1050 = tmp_201*tmp_905;
      real_t tmp_1051 = tmp_1049 + tmp_1050;
      real_t tmp_1052 = 2*tmp_1051;
      real_t tmp_1053 = tmp_211*tmp_980;
      real_t tmp_1054 = tmp_213*tmp_905;
      real_t tmp_1055 = tmp_1053 + tmp_1054;
      real_t tmp_1056 = 2*tmp_1055;
      real_t tmp_1057 = tmp_182*tmp_223;
      real_t tmp_1058 = tmp_183*tmp_224;
      real_t tmp_1059 = tmp_1057 + tmp_1058;
      real_t tmp_1060 = tmp_246*tmp_992;
      real_t tmp_1061 = tmp_248*tmp_918;
      real_t tmp_1062 = tmp_1060 + tmp_1061;
      real_t tmp_1063 = 2*tmp_1062;
      real_t tmp_1064 = tmp_258*tmp_992;
      real_t tmp_1065 = tmp_260*tmp_918;
      real_t tmp_1066 = tmp_1064 + tmp_1065;
      real_t tmp_1067 = 2*tmp_1066;
      real_t tmp_1068 = tmp_229*tmp_270;
      real_t tmp_1069 = tmp_230*tmp_271;
      real_t tmp_1070 = tmp_1068 + tmp_1069;
      real_t tmp_1071 = tmp_1004*tmp_293;
      real_t tmp_1072 = tmp_295*tmp_931;
      real_t tmp_1073 = tmp_1071 + tmp_1072;
      real_t tmp_1074 = 2*tmp_1073;
      real_t tmp_1075 = tmp_1004*tmp_305;
      real_t tmp_1076 = tmp_307*tmp_931;
      real_t tmp_1077 = tmp_1075 + tmp_1076;
      real_t tmp_1078 = 2*tmp_1077;
      real_t tmp_1079 = tmp_276*tmp_317;
      real_t tmp_1080 = tmp_277*tmp_318;
      real_t tmp_1081 = tmp_1079 + tmp_1080;
      real_t tmp_1082 = 0.5*tmp_596 - tmp_869 - tmp_946;
      real_t tmp_1083 = 2*tmp_1082;
      real_t tmp_1084 = 0.5*tmp_600 - tmp_873 - tmp_950;
      real_t tmp_1085 = 2*tmp_1084;
      real_t tmp_1086 = 1.0*tmp_598 - tmp_877 - tmp_954;
      real_t tmp_1087 = 0.5*tmp_605 - tmp_882 - tmp_958;
      real_t tmp_1088 = 2*tmp_1087;
      real_t tmp_1089 = 0.5*tmp_609 - tmp_886 - tmp_962;
      real_t tmp_1090 = 2*tmp_1089;
      real_t tmp_1091 = 1.0*tmp_607 - tmp_890 - tmp_966;
      real_t tmp_1092 = 0.5*tmp_614 - tmp_895 - tmp_970;
      real_t tmp_1093 = 2*tmp_1092;
      real_t tmp_1094 = 0.5*tmp_618 - tmp_899 - tmp_974;
      real_t tmp_1095 = 2*tmp_1094;
      real_t tmp_1096 = 1.0*tmp_616 - tmp_903 - tmp_978;
      real_t tmp_1097 = 0.5*tmp_623 - tmp_908 - tmp_982;
      real_t tmp_1098 = 2*tmp_1097;
      real_t tmp_1099 = 0.5*tmp_627 - tmp_912 - tmp_986;
      real_t tmp_1100 = 2*tmp_1099;
      real_t tmp_1101 = 1.0*tmp_625 - tmp_916 - tmp_990;
      real_t tmp_1102 = 0.5*tmp_632 - tmp_921 - tmp_994;
      real_t tmp_1103 = 2*tmp_1102;
      real_t tmp_1104 = 0.5*tmp_636 - tmp_925 - tmp_998;
      real_t tmp_1105 = 2*tmp_1104;
      real_t tmp_1106 = -tmp_1002 + 1.0*tmp_634 - tmp_929;
      real_t tmp_1107 = -tmp_1006 + 0.5*tmp_641 - tmp_934;
      real_t tmp_1108 = 2*tmp_1107;
      real_t tmp_1109 = -tmp_1010 + 0.5*tmp_645 - tmp_938;
      real_t tmp_1110 = 2*tmp_1109;
      real_t tmp_1111 = -tmp_1014 + 1.0*tmp_643 - tmp_942;
      real_t tmp_1112 = -tmp_1017 + 0.5*tmp_649 - tmp_867;
      real_t tmp_1113 = 2*tmp_1112;
      real_t tmp_1114 = -tmp_1021 + 0.5*tmp_653 - tmp_872;
      real_t tmp_1115 = 2*tmp_1114;
      real_t tmp_1116 = -tmp_1025 + 1.0*tmp_651 - tmp_876;
      real_t tmp_1117 = -tmp_1028 + 0.5*tmp_657 - tmp_880;
      real_t tmp_1118 = 2*tmp_1117;
      real_t tmp_1119 = -tmp_1032 + 0.5*tmp_661 - tmp_885;
      real_t tmp_1120 = 2*tmp_1119;
      real_t tmp_1121 = -tmp_1036 + 1.0*tmp_659 - tmp_889;
      real_t tmp_1122 = -tmp_1039 + 0.5*tmp_665 - tmp_893;
      real_t tmp_1123 = 2*tmp_1122;
      real_t tmp_1124 = -tmp_1043 + 0.5*tmp_669 - tmp_898;
      real_t tmp_1125 = 2*tmp_1124;
      real_t tmp_1126 = -tmp_1047 + 1.0*tmp_667 - tmp_902;
      real_t tmp_1127 = -tmp_1050 + 0.5*tmp_673 - tmp_906;
      real_t tmp_1128 = 2*tmp_1127;
      real_t tmp_1129 = -tmp_1054 + 0.5*tmp_677 - tmp_911;
      real_t tmp_1130 = 2*tmp_1129;
      real_t tmp_1131 = -tmp_1058 + 1.0*tmp_675 - tmp_915;
      real_t tmp_1132 = -tmp_1061 + 0.5*tmp_681 - tmp_919;
      real_t tmp_1133 = 2*tmp_1132;
      real_t tmp_1134 = -tmp_1065 + 0.5*tmp_685 - tmp_924;
      real_t tmp_1135 = 2*tmp_1134;
      real_t tmp_1136 = -tmp_1069 + 1.0*tmp_683 - tmp_928;
      real_t tmp_1137 = -tmp_1072 + 0.5*tmp_689 - tmp_932;
      real_t tmp_1138 = 2*tmp_1137;
      real_t tmp_1139 = -tmp_1076 + 0.5*tmp_693 - tmp_937;
      real_t tmp_1140 = 2*tmp_1139;
      real_t tmp_1141 = -tmp_1080 + 1.0*tmp_691 - tmp_941;
      real_t tmp_1142 = -tmp_1016 + 0.5*tmp_696 - tmp_945;
      real_t tmp_1143 = 2*tmp_1142;
      real_t tmp_1144 = -tmp_1020 + 0.5*tmp_700 - tmp_949;
      real_t tmp_1145 = 2*tmp_1144;
      real_t tmp_1146 = -tmp_1024 + 1.0*tmp_698 - tmp_953;
      real_t tmp_1147 = -tmp_1027 + 0.5*tmp_703 - tmp_957;
      real_t tmp_1148 = 2*tmp_1147;
      real_t tmp_1149 = -tmp_1031 + 0.5*tmp_707 - tmp_961;
      real_t tmp_1150 = 2*tmp_1149;
      real_t tmp_1151 = -tmp_1035 + 1.0*tmp_705 - tmp_965;
      real_t tmp_1152 = -tmp_1038 + 0.5*tmp_710 - tmp_969;
      real_t tmp_1153 = 2*tmp_1152;
      real_t tmp_1154 = -tmp_1042 + 0.5*tmp_714 - tmp_973;
      real_t tmp_1155 = 2*tmp_1154;
      real_t tmp_1156 = -tmp_1046 + 1.0*tmp_712 - tmp_977;
      real_t tmp_1157 = -tmp_1049 + 0.5*tmp_717 - tmp_981;
      real_t tmp_1158 = 2*tmp_1157;
      real_t tmp_1159 = -tmp_1053 + 0.5*tmp_721 - tmp_985;
      real_t tmp_1160 = 2*tmp_1159;
      real_t tmp_1161 = -tmp_1057 + 1.0*tmp_719 - tmp_989;
      real_t tmp_1162 = -tmp_1060 + 0.5*tmp_724 - tmp_993;
      real_t tmp_1163 = 2*tmp_1162;
      real_t tmp_1164 = -tmp_1064 + 0.5*tmp_728 - tmp_997;
      real_t tmp_1165 = 2*tmp_1164;
      real_t tmp_1166 = -tmp_1001 - tmp_1068 + 1.0*tmp_726;
      real_t tmp_1167 = -tmp_1005 - tmp_1071 + 0.5*tmp_731;
      real_t tmp_1168 = 2*tmp_1167;
      real_t tmp_1169 = -tmp_1009 - tmp_1075 + 0.5*tmp_735;
      real_t tmp_1170 = 2*tmp_1169;
      real_t tmp_1171 = -tmp_1013 - tmp_1079 + 1.0*tmp_733;
      real_t a_0_0 = tmp_134*(tmp_109*tmp_111 + tmp_121*tmp_123 + tmp_131*tmp_133) + tmp_181*(tmp_156*tmp_158 + tmp_168*tmp_170 + tmp_178*tmp_180) + tmp_228*(tmp_203*tmp_205 + tmp_215*tmp_217 + tmp_225*tmp_227) + tmp_275*(tmp_250*tmp_252 + tmp_262*tmp_264 + tmp_272*tmp_274) + tmp_322*(tmp_297*tmp_299 + tmp_309*tmp_311 + tmp_319*tmp_321) + tmp_87*(tmp_49*tmp_51 + tmp_61*tmp_63 + tmp_71*tmp_73);
      real_t a_0_1 = tmp_134*(tmp_110*tmp_330 + tmp_122*tmp_332 + tmp_131*tmp_331) + tmp_181*(tmp_157*tmp_335 + tmp_169*tmp_337 + tmp_178*tmp_336) + tmp_228*(tmp_204*tmp_340 + tmp_216*tmp_342 + tmp_225*tmp_341) + tmp_275*(tmp_251*tmp_345 + tmp_263*tmp_347 + tmp_272*tmp_346) + tmp_322*(tmp_298*tmp_350 + tmp_310*tmp_352 + tmp_319*tmp_351) + tmp_87*(tmp_325*tmp_50 + tmp_326*tmp_71 + tmp_327*tmp_62);
      real_t a_0_2 = tmp_134*(tmp_110*tmp_360 + tmp_122*tmp_362 + tmp_131*tmp_361) + tmp_181*(tmp_157*tmp_365 + tmp_169*tmp_367 + tmp_178*tmp_366) + tmp_228*(tmp_204*tmp_370 + tmp_216*tmp_372 + tmp_225*tmp_371) + tmp_275*(tmp_251*tmp_375 + tmp_263*tmp_377 + tmp_272*tmp_376) + tmp_322*(tmp_298*tmp_380 + tmp_310*tmp_382 + tmp_319*tmp_381) + tmp_87*(tmp_355*tmp_50 + tmp_356*tmp_71 + tmp_357*tmp_62);
      real_t a_0_3 = tmp_134*(tmp_110*tmp_390 + tmp_122*tmp_392 + tmp_131*tmp_391) + tmp_181*(tmp_157*tmp_395 + tmp_169*tmp_397 + tmp_178*tmp_396) + tmp_228*(tmp_204*tmp_400 + tmp_216*tmp_402 + tmp_225*tmp_401) + tmp_275*(tmp_251*tmp_405 + tmp_263*tmp_407 + tmp_272*tmp_406) + tmp_322*(tmp_298*tmp_410 + tmp_310*tmp_412 + tmp_319*tmp_411) + tmp_87*(tmp_385*tmp_50 + tmp_386*tmp_71 + tmp_387*tmp_62);
      real_t a_0_4 = tmp_134*(tmp_111*tmp_431 + tmp_123*tmp_434 + tmp_131*tmp_428) + tmp_181*(tmp_158*tmp_442 + tmp_170*tmp_445 + tmp_178*tmp_439) + tmp_228*(tmp_205*tmp_453 + tmp_217*tmp_456 + tmp_225*tmp_450) + tmp_275*(tmp_252*tmp_464 + tmp_264*tmp_467 + tmp_272*tmp_461) + tmp_322*(tmp_299*tmp_475 + tmp_311*tmp_478 + tmp_319*tmp_472) + tmp_87*(tmp_417*tmp_71 + tmp_420*tmp_51 + tmp_423*tmp_63);
      real_t a_0_5 = tmp_134*(tmp_111*tmp_495 + tmp_123*tmp_498 + tmp_131*tmp_492) + tmp_181*(tmp_158*tmp_505 + tmp_170*tmp_508 + tmp_178*tmp_502) + tmp_228*(tmp_205*tmp_515 + tmp_217*tmp_518 + tmp_225*tmp_512) + tmp_275*(tmp_252*tmp_525 + tmp_264*tmp_528 + tmp_272*tmp_522) + tmp_322*(tmp_299*tmp_535 + tmp_311*tmp_538 + tmp_319*tmp_532) + tmp_87*(tmp_482*tmp_71 + tmp_485*tmp_51 + tmp_488*tmp_63);
      real_t a_0_6 = tmp_134*(tmp_111*tmp_553 + tmp_123*tmp_556 + tmp_131*tmp_550) + tmp_181*(tmp_158*tmp_562 + tmp_170*tmp_565 + tmp_178*tmp_559) + tmp_228*(tmp_205*tmp_571 + tmp_217*tmp_574 + tmp_225*tmp_568) + tmp_275*(tmp_252*tmp_580 + tmp_264*tmp_583 + tmp_272*tmp_577) + tmp_322*(tmp_299*tmp_589 + tmp_311*tmp_592 + tmp_319*tmp_586) + tmp_87*(tmp_51*tmp_544 + tmp_541*tmp_71 + tmp_547*tmp_63);
      real_t a_0_7 = tmp_134*(tmp_111*tmp_606 + tmp_123*tmp_610 + tmp_131*tmp_608) + tmp_181*(tmp_158*tmp_615 + tmp_170*tmp_619 + tmp_178*tmp_617) + tmp_228*(tmp_205*tmp_624 + tmp_217*tmp_628 + tmp_225*tmp_626) + tmp_275*(tmp_252*tmp_633 + tmp_264*tmp_637 + tmp_272*tmp_635) + tmp_322*(tmp_299*tmp_642 + tmp_311*tmp_646 + tmp_319*tmp_644) + tmp_87*(tmp_51*tmp_597 + tmp_599*tmp_71 + tmp_601*tmp_63);
      real_t a_0_8 = tmp_134*(tmp_111*tmp_658 + tmp_123*tmp_662 + tmp_131*tmp_660) + tmp_181*(tmp_158*tmp_666 + tmp_170*tmp_670 + tmp_178*tmp_668) + tmp_228*(tmp_205*tmp_674 + tmp_217*tmp_678 + tmp_225*tmp_676) + tmp_275*(tmp_252*tmp_682 + tmp_264*tmp_686 + tmp_272*tmp_684) + tmp_322*(tmp_299*tmp_690 + tmp_311*tmp_694 + tmp_319*tmp_692) + tmp_87*(tmp_51*tmp_650 + tmp_63*tmp_654 + tmp_652*tmp_71);
      real_t a_0_9 = tmp_134*(tmp_111*tmp_704 + tmp_123*tmp_708 + tmp_131*tmp_706) + tmp_181*(tmp_158*tmp_711 + tmp_170*tmp_715 + tmp_178*tmp_713) + tmp_228*(tmp_205*tmp_718 + tmp_217*tmp_722 + tmp_225*tmp_720) + tmp_275*(tmp_252*tmp_725 + tmp_264*tmp_729 + tmp_272*tmp_727) + tmp_322*(tmp_299*tmp_732 + tmp_311*tmp_736 + tmp_319*tmp_734) + tmp_87*(tmp_51*tmp_697 + tmp_63*tmp_701 + tmp_699*tmp_71);
      real_t a_1_0 = tmp_134*(tmp_109*tmp_742 + tmp_121*tmp_743 + tmp_133*tmp_744) + tmp_181*(tmp_156*tmp_746 + tmp_168*tmp_747 + tmp_180*tmp_748) + tmp_228*(tmp_203*tmp_750 + tmp_215*tmp_751 + tmp_227*tmp_752) + tmp_275*(tmp_250*tmp_754 + tmp_262*tmp_755 + tmp_274*tmp_756) + tmp_322*(tmp_297*tmp_758 + tmp_309*tmp_759 + tmp_321*tmp_760) + tmp_87*(tmp_49*tmp_738 + tmp_61*tmp_739 + tmp_73*tmp_740);
      real_t a_1_1 = tmp_134*((tmp_107*tmp_107)*tmp_764 + (tmp_119*tmp_119)*tmp_764 + 32.0*(tmp_130*tmp_130)*tmp_763) + tmp_181*((tmp_154*tmp_154)*tmp_766 + (tmp_166*tmp_166)*tmp_766 + 32.0*(tmp_177*tmp_177)*tmp_765) + tmp_228*((tmp_201*tmp_201)*tmp_768 + (tmp_213*tmp_213)*tmp_768 + 32.0*(tmp_224*tmp_224)*tmp_767) + tmp_275*((tmp_248*tmp_248)*tmp_770 + (tmp_260*tmp_260)*tmp_770 + 32.0*(tmp_271*tmp_271)*tmp_769) + tmp_322*((tmp_295*tmp_295)*tmp_772 + (tmp_307*tmp_307)*tmp_772 + 32.0*(tmp_318*tmp_318)*tmp_771) + tmp_87*((tmp_47*tmp_47)*tmp_762 + (tmp_59*tmp_59)*tmp_762 + 32.0*(tmp_70*tmp_70)*tmp_761);
      real_t a_1_2 = tmp_773;
      real_t a_1_3 = tmp_792;
      real_t a_1_4 = tmp_134*(tmp_428*tmp_744 + tmp_431*tmp_742 + tmp_434*tmp_743) + tmp_181*(tmp_439*tmp_748 + tmp_442*tmp_746 + tmp_445*tmp_747) + tmp_228*(tmp_450*tmp_752 + tmp_453*tmp_750 + tmp_456*tmp_751) + tmp_275*(tmp_461*tmp_756 + tmp_464*tmp_754 + tmp_467*tmp_755) + tmp_322*(tmp_472*tmp_760 + tmp_475*tmp_758 + tmp_478*tmp_759) + tmp_87*(tmp_417*tmp_740 + tmp_420*tmp_738 + tmp_423*tmp_739);
      real_t a_1_5 = tmp_134*(tmp_492*tmp_744 + tmp_495*tmp_742 + tmp_498*tmp_743) + tmp_181*(tmp_502*tmp_748 + tmp_505*tmp_746 + tmp_508*tmp_747) + tmp_228*(tmp_512*tmp_752 + tmp_515*tmp_750 + tmp_518*tmp_751) + tmp_275*(tmp_522*tmp_756 + tmp_525*tmp_754 + tmp_528*tmp_755) + tmp_322*(tmp_532*tmp_760 + tmp_535*tmp_758 + tmp_538*tmp_759) + tmp_87*(tmp_482*tmp_740 + tmp_485*tmp_738 + tmp_488*tmp_739);
      real_t a_1_6 = tmp_134*(tmp_550*tmp_744 + tmp_553*tmp_742 + tmp_556*tmp_743) + tmp_181*(tmp_559*tmp_748 + tmp_562*tmp_746 + tmp_565*tmp_747) + tmp_228*(tmp_568*tmp_752 + tmp_571*tmp_750 + tmp_574*tmp_751) + tmp_275*(tmp_577*tmp_756 + tmp_580*tmp_754 + tmp_583*tmp_755) + tmp_322*(tmp_586*tmp_760 + tmp_589*tmp_758 + tmp_592*tmp_759) + tmp_87*(tmp_541*tmp_740 + tmp_544*tmp_738 + tmp_547*tmp_739);
      real_t a_1_7 = tmp_134*(tmp_606*tmp_742 + tmp_608*tmp_744 + tmp_610*tmp_743) + tmp_181*(tmp_615*tmp_746 + tmp_617*tmp_748 + tmp_619*tmp_747) + tmp_228*(tmp_624*tmp_750 + tmp_626*tmp_752 + tmp_628*tmp_751) + tmp_275*(tmp_633*tmp_754 + tmp_635*tmp_756 + tmp_637*tmp_755) + tmp_322*(tmp_642*tmp_758 + tmp_644*tmp_760 + tmp_646*tmp_759) + tmp_87*(tmp_597*tmp_738 + tmp_599*tmp_740 + tmp_601*tmp_739);
      real_t a_1_8 = tmp_134*(tmp_658*tmp_742 + tmp_660*tmp_744 + tmp_662*tmp_743) + tmp_181*(tmp_666*tmp_746 + tmp_668*tmp_748 + tmp_670*tmp_747) + tmp_228*(tmp_674*tmp_750 + tmp_676*tmp_752 + tmp_678*tmp_751) + tmp_275*(tmp_682*tmp_754 + tmp_684*tmp_756 + tmp_686*tmp_755) + tmp_322*(tmp_690*tmp_758 + tmp_692*tmp_760 + tmp_694*tmp_759) + tmp_87*(tmp_650*tmp_738 + tmp_652*tmp_740 + tmp_654*tmp_739);
      real_t a_1_9 = tmp_134*(tmp_704*tmp_742 + tmp_706*tmp_744 + tmp_708*tmp_743) + tmp_181*(tmp_711*tmp_746 + tmp_713*tmp_748 + tmp_715*tmp_747) + tmp_228*(tmp_718*tmp_750 + tmp_720*tmp_752 + tmp_722*tmp_751) + tmp_275*(tmp_725*tmp_754 + tmp_727*tmp_756 + tmp_729*tmp_755) + tmp_322*(tmp_732*tmp_758 + tmp_734*tmp_760 + tmp_736*tmp_759) + tmp_87*(tmp_697*tmp_738 + tmp_699*tmp_740 + tmp_701*tmp_739);
      real_t a_2_0 = tmp_134*(tmp_109*tmp_798 + tmp_121*tmp_799 + tmp_133*tmp_800) + tmp_181*(tmp_156*tmp_802 + tmp_168*tmp_803 + tmp_180*tmp_804) + tmp_228*(tmp_203*tmp_806 + tmp_215*tmp_807 + tmp_227*tmp_808) + tmp_275*(tmp_250*tmp_810 + tmp_262*tmp_811 + tmp_274*tmp_812) + tmp_322*(tmp_297*tmp_814 + tmp_309*tmp_815 + tmp_321*tmp_816) + tmp_87*(tmp_49*tmp_794 + tmp_61*tmp_795 + tmp_73*tmp_796);
      real_t a_2_1 = tmp_773;
      real_t a_2_2 = tmp_134*((tmp_105*tmp_105)*tmp_820 + (tmp_117*tmp_117)*tmp_820 + 32.0*(tmp_129*tmp_129)*tmp_819) + tmp_181*((tmp_152*tmp_152)*tmp_822 + (tmp_164*tmp_164)*tmp_822 + 32.0*(tmp_176*tmp_176)*tmp_821) + tmp_228*((tmp_199*tmp_199)*tmp_824 + (tmp_211*tmp_211)*tmp_824 + 32.0*(tmp_223*tmp_223)*tmp_823) + tmp_275*((tmp_246*tmp_246)*tmp_826 + (tmp_258*tmp_258)*tmp_826 + 32.0*(tmp_270*tmp_270)*tmp_825) + tmp_322*((tmp_293*tmp_293)*tmp_828 + (tmp_305*tmp_305)*tmp_828 + 32.0*(tmp_317*tmp_317)*tmp_827) + tmp_87*((tmp_42*tmp_42)*tmp_818 + (tmp_57*tmp_57)*tmp_818 + 32.0*(tmp_69*tmp_69)*tmp_817);
      real_t a_2_3 = tmp_829;
      real_t a_2_4 = tmp_134*(tmp_428*tmp_800 + tmp_431*tmp_798 + tmp_434*tmp_799) + tmp_181*(tmp_439*tmp_804 + tmp_442*tmp_802 + tmp_445*tmp_803) + tmp_228*(tmp_450*tmp_808 + tmp_453*tmp_806 + tmp_456*tmp_807) + tmp_275*(tmp_461*tmp_812 + tmp_464*tmp_810 + tmp_467*tmp_811) + tmp_322*(tmp_472*tmp_816 + tmp_475*tmp_814 + tmp_478*tmp_815) + tmp_87*(tmp_417*tmp_796 + tmp_420*tmp_794 + tmp_423*tmp_795);
      real_t a_2_5 = tmp_134*(tmp_492*tmp_800 + tmp_495*tmp_798 + tmp_498*tmp_799) + tmp_181*(tmp_502*tmp_804 + tmp_505*tmp_802 + tmp_508*tmp_803) + tmp_228*(tmp_512*tmp_808 + tmp_515*tmp_806 + tmp_518*tmp_807) + tmp_275*(tmp_522*tmp_812 + tmp_525*tmp_810 + tmp_528*tmp_811) + tmp_322*(tmp_532*tmp_816 + tmp_535*tmp_814 + tmp_538*tmp_815) + tmp_87*(tmp_482*tmp_796 + tmp_485*tmp_794 + tmp_488*tmp_795);
      real_t a_2_6 = tmp_134*(tmp_550*tmp_800 + tmp_553*tmp_798 + tmp_556*tmp_799) + tmp_181*(tmp_559*tmp_804 + tmp_562*tmp_802 + tmp_565*tmp_803) + tmp_228*(tmp_568*tmp_808 + tmp_571*tmp_806 + tmp_574*tmp_807) + tmp_275*(tmp_577*tmp_812 + tmp_580*tmp_810 + tmp_583*tmp_811) + tmp_322*(tmp_586*tmp_816 + tmp_589*tmp_814 + tmp_592*tmp_815) + tmp_87*(tmp_541*tmp_796 + tmp_544*tmp_794 + tmp_547*tmp_795);
      real_t a_2_7 = tmp_134*(tmp_606*tmp_798 + tmp_608*tmp_800 + tmp_610*tmp_799) + tmp_181*(tmp_615*tmp_802 + tmp_617*tmp_804 + tmp_619*tmp_803) + tmp_228*(tmp_624*tmp_806 + tmp_626*tmp_808 + tmp_628*tmp_807) + tmp_275*(tmp_633*tmp_810 + tmp_635*tmp_812 + tmp_637*tmp_811) + tmp_322*(tmp_642*tmp_814 + tmp_644*tmp_816 + tmp_646*tmp_815) + tmp_87*(tmp_597*tmp_794 + tmp_599*tmp_796 + tmp_601*tmp_795);
      real_t a_2_8 = tmp_134*(tmp_658*tmp_798 + tmp_660*tmp_800 + tmp_662*tmp_799) + tmp_181*(tmp_666*tmp_802 + tmp_668*tmp_804 + tmp_670*tmp_803) + tmp_228*(tmp_674*tmp_806 + tmp_676*tmp_808 + tmp_678*tmp_807) + tmp_275*(tmp_682*tmp_810 + tmp_684*tmp_812 + tmp_686*tmp_811) + tmp_322*(tmp_690*tmp_814 + tmp_692*tmp_816 + tmp_694*tmp_815) + tmp_87*(tmp_650*tmp_794 + tmp_652*tmp_796 + tmp_654*tmp_795);
      real_t a_2_9 = tmp_134*(tmp_704*tmp_798 + tmp_706*tmp_800 + tmp_708*tmp_799) + tmp_181*(tmp_711*tmp_802 + tmp_713*tmp_804 + tmp_715*tmp_803) + tmp_228*(tmp_718*tmp_806 + tmp_720*tmp_808 + tmp_722*tmp_807) + tmp_275*(tmp_725*tmp_810 + tmp_727*tmp_812 + tmp_729*tmp_811) + tmp_322*(tmp_732*tmp_814 + tmp_734*tmp_816 + tmp_736*tmp_815) + tmp_87*(tmp_697*tmp_794 + tmp_699*tmp_796 + tmp_701*tmp_795);
      real_t a_3_0 = tmp_134*(tmp_109*tmp_835 + tmp_121*tmp_836 + tmp_133*tmp_837) + tmp_181*(tmp_156*tmp_839 + tmp_168*tmp_840 + tmp_180*tmp_841) + tmp_228*(tmp_203*tmp_843 + tmp_215*tmp_844 + tmp_227*tmp_845) + tmp_275*(tmp_250*tmp_847 + tmp_262*tmp_848 + tmp_274*tmp_849) + tmp_322*(tmp_297*tmp_851 + tmp_309*tmp_852 + tmp_321*tmp_853) + tmp_87*(tmp_49*tmp_831 + tmp_61*tmp_832 + tmp_73*tmp_833);
      real_t a_3_1 = tmp_792;
      real_t a_3_2 = tmp_829;
      real_t a_3_3 = tmp_134*((tmp_103*tmp_103)*tmp_857 + (tmp_115*tmp_115)*tmp_857 + 32.0*(tmp_127*tmp_127)*tmp_856) + tmp_181*((tmp_150*tmp_150)*tmp_859 + (tmp_162*tmp_162)*tmp_859 + 32.0*(tmp_174*tmp_174)*tmp_858) + tmp_228*((tmp_197*tmp_197)*tmp_861 + (tmp_209*tmp_209)*tmp_861 + 32.0*(tmp_221*tmp_221)*tmp_860) + tmp_275*((tmp_244*tmp_244)*tmp_863 + (tmp_256*tmp_256)*tmp_863 + 32.0*(tmp_268*tmp_268)*tmp_862) + tmp_322*((tmp_291*tmp_291)*tmp_865 + (tmp_303*tmp_303)*tmp_865 + 32.0*(tmp_315*tmp_315)*tmp_864) + tmp_87*((tmp_37*tmp_37)*tmp_855 + (tmp_55*tmp_55)*tmp_855 + 32.0*(tmp_67*tmp_67)*tmp_854);
      real_t a_3_4 = tmp_134*(tmp_428*tmp_837 + tmp_431*tmp_835 + tmp_434*tmp_836) + tmp_181*(tmp_439*tmp_841 + tmp_442*tmp_839 + tmp_445*tmp_840) + tmp_228*(tmp_450*tmp_845 + tmp_453*tmp_843 + tmp_456*tmp_844) + tmp_275*(tmp_461*tmp_849 + tmp_464*tmp_847 + tmp_467*tmp_848) + tmp_322*(tmp_472*tmp_853 + tmp_475*tmp_851 + tmp_478*tmp_852) + tmp_87*(tmp_417*tmp_833 + tmp_420*tmp_831 + tmp_423*tmp_832);
      real_t a_3_5 = tmp_134*(tmp_492*tmp_837 + tmp_495*tmp_835 + tmp_498*tmp_836) + tmp_181*(tmp_502*tmp_841 + tmp_505*tmp_839 + tmp_508*tmp_840) + tmp_228*(tmp_512*tmp_845 + tmp_515*tmp_843 + tmp_518*tmp_844) + tmp_275*(tmp_522*tmp_849 + tmp_525*tmp_847 + tmp_528*tmp_848) + tmp_322*(tmp_532*tmp_853 + tmp_535*tmp_851 + tmp_538*tmp_852) + tmp_87*(tmp_482*tmp_833 + tmp_485*tmp_831 + tmp_488*tmp_832);
      real_t a_3_6 = tmp_134*(tmp_550*tmp_837 + tmp_553*tmp_835 + tmp_556*tmp_836) + tmp_181*(tmp_559*tmp_841 + tmp_562*tmp_839 + tmp_565*tmp_840) + tmp_228*(tmp_568*tmp_845 + tmp_571*tmp_843 + tmp_574*tmp_844) + tmp_275*(tmp_577*tmp_849 + tmp_580*tmp_847 + tmp_583*tmp_848) + tmp_322*(tmp_586*tmp_853 + tmp_589*tmp_851 + tmp_592*tmp_852) + tmp_87*(tmp_541*tmp_833 + tmp_544*tmp_831 + tmp_547*tmp_832);
      real_t a_3_7 = tmp_134*(tmp_606*tmp_835 + tmp_608*tmp_837 + tmp_610*tmp_836) + tmp_181*(tmp_615*tmp_839 + tmp_617*tmp_841 + tmp_619*tmp_840) + tmp_228*(tmp_624*tmp_843 + tmp_626*tmp_845 + tmp_628*tmp_844) + tmp_275*(tmp_633*tmp_847 + tmp_635*tmp_849 + tmp_637*tmp_848) + tmp_322*(tmp_642*tmp_851 + tmp_644*tmp_853 + tmp_646*tmp_852) + tmp_87*(tmp_597*tmp_831 + tmp_599*tmp_833 + tmp_601*tmp_832);
      real_t a_3_8 = tmp_134*(tmp_658*tmp_835 + tmp_660*tmp_837 + tmp_662*tmp_836) + tmp_181*(tmp_666*tmp_839 + tmp_668*tmp_841 + tmp_670*tmp_840) + tmp_228*(tmp_674*tmp_843 + tmp_676*tmp_845 + tmp_678*tmp_844) + tmp_275*(tmp_682*tmp_847 + tmp_684*tmp_849 + tmp_686*tmp_848) + tmp_322*(tmp_690*tmp_851 + tmp_692*tmp_853 + tmp_694*tmp_852) + tmp_87*(tmp_650*tmp_831 + tmp_652*tmp_833 + tmp_654*tmp_832);
      real_t a_3_9 = tmp_134*(tmp_704*tmp_835 + tmp_706*tmp_837 + tmp_708*tmp_836) + tmp_181*(tmp_711*tmp_839 + tmp_713*tmp_841 + tmp_715*tmp_840) + tmp_228*(tmp_718*tmp_843 + tmp_720*tmp_845 + tmp_722*tmp_844) + tmp_275*(tmp_725*tmp_847 + tmp_727*tmp_849 + tmp_729*tmp_848) + tmp_322*(tmp_732*tmp_851 + tmp_734*tmp_853 + tmp_736*tmp_852) + tmp_87*(tmp_697*tmp_831 + tmp_699*tmp_833 + tmp_701*tmp_832);
      real_t a_4_0 = tmp_134*(tmp_109*tmp_884 + tmp_121*tmp_888 + tmp_133*tmp_891) + tmp_181*(tmp_156*tmp_897 + tmp_168*tmp_901 + tmp_180*tmp_904) + tmp_228*(tmp_203*tmp_910 + tmp_215*tmp_914 + tmp_227*tmp_917) + tmp_275*(tmp_250*tmp_923 + tmp_262*tmp_927 + tmp_274*tmp_930) + tmp_322*(tmp_297*tmp_936 + tmp_309*tmp_940 + tmp_321*tmp_943) + tmp_87*(tmp_49*tmp_871 + tmp_61*tmp_875 + tmp_73*tmp_878);
      real_t a_4_1 = tmp_134*(tmp_330*tmp_883 + tmp_331*tmp_891 + tmp_332*tmp_887) + tmp_181*(tmp_335*tmp_896 + tmp_336*tmp_904 + tmp_337*tmp_900) + tmp_228*(tmp_340*tmp_909 + tmp_341*tmp_917 + tmp_342*tmp_913) + tmp_275*(tmp_345*tmp_922 + tmp_346*tmp_930 + tmp_347*tmp_926) + tmp_322*(tmp_350*tmp_935 + tmp_351*tmp_943 + tmp_352*tmp_939) + tmp_87*(tmp_325*tmp_870 + tmp_326*tmp_878 + tmp_327*tmp_874);
      real_t a_4_2 = tmp_134*(tmp_360*tmp_883 + tmp_361*tmp_891 + tmp_362*tmp_887) + tmp_181*(tmp_365*tmp_896 + tmp_366*tmp_904 + tmp_367*tmp_900) + tmp_228*(tmp_370*tmp_909 + tmp_371*tmp_917 + tmp_372*tmp_913) + tmp_275*(tmp_375*tmp_922 + tmp_376*tmp_930 + tmp_377*tmp_926) + tmp_322*(tmp_380*tmp_935 + tmp_381*tmp_943 + tmp_382*tmp_939) + tmp_87*(tmp_355*tmp_870 + tmp_356*tmp_878 + tmp_357*tmp_874);
      real_t a_4_3 = tmp_134*(tmp_390*tmp_883 + tmp_391*tmp_891 + tmp_392*tmp_887) + tmp_181*(tmp_395*tmp_896 + tmp_396*tmp_904 + tmp_397*tmp_900) + tmp_228*(tmp_400*tmp_909 + tmp_401*tmp_917 + tmp_402*tmp_913) + tmp_275*(tmp_405*tmp_922 + tmp_406*tmp_930 + tmp_407*tmp_926) + tmp_322*(tmp_410*tmp_935 + tmp_411*tmp_943 + tmp_412*tmp_939) + tmp_87*(tmp_385*tmp_870 + tmp_386*tmp_878 + tmp_387*tmp_874);
      real_t a_4_4 = tmp_134*(tmp_428*tmp_891 + tmp_431*tmp_884 + tmp_434*tmp_888) + tmp_181*(tmp_439*tmp_904 + tmp_442*tmp_897 + tmp_445*tmp_901) + tmp_228*(tmp_450*tmp_917 + tmp_453*tmp_910 + tmp_456*tmp_914) + tmp_275*(tmp_461*tmp_930 + tmp_464*tmp_923 + tmp_467*tmp_927) + tmp_322*(tmp_472*tmp_943 + tmp_475*tmp_936 + tmp_478*tmp_940) + tmp_87*(tmp_417*tmp_878 + tmp_420*tmp_871 + tmp_423*tmp_875);
      real_t a_4_5 = tmp_134*(tmp_492*tmp_891 + tmp_495*tmp_884 + tmp_498*tmp_888) + tmp_181*(tmp_502*tmp_904 + tmp_505*tmp_897 + tmp_508*tmp_901) + tmp_228*(tmp_512*tmp_917 + tmp_515*tmp_910 + tmp_518*tmp_914) + tmp_275*(tmp_522*tmp_930 + tmp_525*tmp_923 + tmp_528*tmp_927) + tmp_322*(tmp_532*tmp_943 + tmp_535*tmp_936 + tmp_538*tmp_940) + tmp_87*(tmp_482*tmp_878 + tmp_485*tmp_871 + tmp_488*tmp_875);
      real_t a_4_6 = tmp_134*(tmp_550*tmp_891 + tmp_553*tmp_884 + tmp_556*tmp_888) + tmp_181*(tmp_559*tmp_904 + tmp_562*tmp_897 + tmp_565*tmp_901) + tmp_228*(tmp_568*tmp_917 + tmp_571*tmp_910 + tmp_574*tmp_914) + tmp_275*(tmp_577*tmp_930 + tmp_580*tmp_923 + tmp_583*tmp_927) + tmp_322*(tmp_586*tmp_943 + tmp_589*tmp_936 + tmp_592*tmp_940) + tmp_87*(tmp_541*tmp_878 + tmp_544*tmp_871 + tmp_547*tmp_875);
      real_t a_4_7 = tmp_134*(tmp_606*tmp_884 + tmp_608*tmp_891 + tmp_610*tmp_888) + tmp_181*(tmp_615*tmp_897 + tmp_617*tmp_904 + tmp_619*tmp_901) + tmp_228*(tmp_624*tmp_910 + tmp_626*tmp_917 + tmp_628*tmp_914) + tmp_275*(tmp_633*tmp_923 + tmp_635*tmp_930 + tmp_637*tmp_927) + tmp_322*(tmp_642*tmp_936 + tmp_644*tmp_943 + tmp_646*tmp_940) + tmp_87*(tmp_597*tmp_871 + tmp_599*tmp_878 + tmp_601*tmp_875);
      real_t a_4_8 = tmp_134*(tmp_658*tmp_884 + tmp_660*tmp_891 + tmp_662*tmp_888) + tmp_181*(tmp_666*tmp_897 + tmp_668*tmp_904 + tmp_670*tmp_901) + tmp_228*(tmp_674*tmp_910 + tmp_676*tmp_917 + tmp_678*tmp_914) + tmp_275*(tmp_682*tmp_923 + tmp_684*tmp_930 + tmp_686*tmp_927) + tmp_322*(tmp_690*tmp_936 + tmp_692*tmp_943 + tmp_694*tmp_940) + tmp_87*(tmp_650*tmp_871 + tmp_652*tmp_878 + tmp_654*tmp_875);
      real_t a_4_9 = tmp_134*(tmp_704*tmp_884 + tmp_706*tmp_891 + tmp_708*tmp_888) + tmp_181*(tmp_711*tmp_897 + tmp_713*tmp_904 + tmp_715*tmp_901) + tmp_228*(tmp_718*tmp_910 + tmp_720*tmp_917 + tmp_722*tmp_914) + tmp_275*(tmp_725*tmp_923 + tmp_727*tmp_930 + tmp_729*tmp_927) + tmp_322*(tmp_732*tmp_936 + tmp_734*tmp_943 + tmp_736*tmp_940) + tmp_87*(tmp_697*tmp_871 + tmp_699*tmp_878 + tmp_701*tmp_875);
      real_t a_5_0 = tmp_134*(tmp_109*tmp_960 + tmp_121*tmp_964 + tmp_133*tmp_967) + tmp_181*(tmp_156*tmp_972 + tmp_168*tmp_976 + tmp_180*tmp_979) + tmp_228*(tmp_203*tmp_984 + tmp_215*tmp_988 + tmp_227*tmp_991) + tmp_275*(tmp_1000*tmp_262 + tmp_1003*tmp_274 + tmp_250*tmp_996) + tmp_322*(tmp_1008*tmp_297 + tmp_1012*tmp_309 + tmp_1015*tmp_321) + tmp_87*(tmp_49*tmp_948 + tmp_61*tmp_952 + tmp_73*tmp_955);
      real_t a_5_1 = tmp_134*(tmp_330*tmp_959 + tmp_331*tmp_967 + tmp_332*tmp_963) + tmp_181*(tmp_335*tmp_971 + tmp_336*tmp_979 + tmp_337*tmp_975) + tmp_228*(tmp_340*tmp_983 + tmp_341*tmp_991 + tmp_342*tmp_987) + tmp_275*(tmp_1003*tmp_346 + tmp_345*tmp_995 + tmp_347*tmp_999) + tmp_322*(tmp_1007*tmp_350 + tmp_1011*tmp_352 + tmp_1015*tmp_351) + tmp_87*(tmp_325*tmp_947 + tmp_326*tmp_955 + tmp_327*tmp_951);
      real_t a_5_2 = tmp_134*(tmp_360*tmp_959 + tmp_361*tmp_967 + tmp_362*tmp_963) + tmp_181*(tmp_365*tmp_971 + tmp_366*tmp_979 + tmp_367*tmp_975) + tmp_228*(tmp_370*tmp_983 + tmp_371*tmp_991 + tmp_372*tmp_987) + tmp_275*(tmp_1003*tmp_376 + tmp_375*tmp_995 + tmp_377*tmp_999) + tmp_322*(tmp_1007*tmp_380 + tmp_1011*tmp_382 + tmp_1015*tmp_381) + tmp_87*(tmp_355*tmp_947 + tmp_356*tmp_955 + tmp_357*tmp_951);
      real_t a_5_3 = tmp_134*(tmp_390*tmp_959 + tmp_391*tmp_967 + tmp_392*tmp_963) + tmp_181*(tmp_395*tmp_971 + tmp_396*tmp_979 + tmp_397*tmp_975) + tmp_228*(tmp_400*tmp_983 + tmp_401*tmp_991 + tmp_402*tmp_987) + tmp_275*(tmp_1003*tmp_406 + tmp_405*tmp_995 + tmp_407*tmp_999) + tmp_322*(tmp_1007*tmp_410 + tmp_1011*tmp_412 + tmp_1015*tmp_411) + tmp_87*(tmp_385*tmp_947 + tmp_386*tmp_955 + tmp_387*tmp_951);
      real_t a_5_4 = tmp_134*(tmp_428*tmp_967 + tmp_431*tmp_960 + tmp_434*tmp_964) + tmp_181*(tmp_439*tmp_979 + tmp_442*tmp_972 + tmp_445*tmp_976) + tmp_228*(tmp_450*tmp_991 + tmp_453*tmp_984 + tmp_456*tmp_988) + tmp_275*(tmp_1000*tmp_467 + tmp_1003*tmp_461 + tmp_464*tmp_996) + tmp_322*(tmp_1008*tmp_475 + tmp_1012*tmp_478 + tmp_1015*tmp_472) + tmp_87*(tmp_417*tmp_955 + tmp_420*tmp_948 + tmp_423*tmp_952);
      real_t a_5_5 = tmp_134*(tmp_492*tmp_967 + tmp_495*tmp_960 + tmp_498*tmp_964) + tmp_181*(tmp_502*tmp_979 + tmp_505*tmp_972 + tmp_508*tmp_976) + tmp_228*(tmp_512*tmp_991 + tmp_515*tmp_984 + tmp_518*tmp_988) + tmp_275*(tmp_1000*tmp_528 + tmp_1003*tmp_522 + tmp_525*tmp_996) + tmp_322*(tmp_1008*tmp_535 + tmp_1012*tmp_538 + tmp_1015*tmp_532) + tmp_87*(tmp_482*tmp_955 + tmp_485*tmp_948 + tmp_488*tmp_952);
      real_t a_5_6 = tmp_134*(tmp_550*tmp_967 + tmp_553*tmp_960 + tmp_556*tmp_964) + tmp_181*(tmp_559*tmp_979 + tmp_562*tmp_972 + tmp_565*tmp_976) + tmp_228*(tmp_568*tmp_991 + tmp_571*tmp_984 + tmp_574*tmp_988) + tmp_275*(tmp_1000*tmp_583 + tmp_1003*tmp_577 + tmp_580*tmp_996) + tmp_322*(tmp_1008*tmp_589 + tmp_1012*tmp_592 + tmp_1015*tmp_586) + tmp_87*(tmp_541*tmp_955 + tmp_544*tmp_948 + tmp_547*tmp_952);
      real_t a_5_7 = tmp_134*(tmp_606*tmp_960 + tmp_608*tmp_967 + tmp_610*tmp_964) + tmp_181*(tmp_615*tmp_972 + tmp_617*tmp_979 + tmp_619*tmp_976) + tmp_228*(tmp_624*tmp_984 + tmp_626*tmp_991 + tmp_628*tmp_988) + tmp_275*(tmp_1000*tmp_637 + tmp_1003*tmp_635 + tmp_633*tmp_996) + tmp_322*(tmp_1008*tmp_642 + tmp_1012*tmp_646 + tmp_1015*tmp_644) + tmp_87*(tmp_597*tmp_948 + tmp_599*tmp_955 + tmp_601*tmp_952);
      real_t a_5_8 = tmp_134*(tmp_658*tmp_960 + tmp_660*tmp_967 + tmp_662*tmp_964) + tmp_181*(tmp_666*tmp_972 + tmp_668*tmp_979 + tmp_670*tmp_976) + tmp_228*(tmp_674*tmp_984 + tmp_676*tmp_991 + tmp_678*tmp_988) + tmp_275*(tmp_1000*tmp_686 + tmp_1003*tmp_684 + tmp_682*tmp_996) + tmp_322*(tmp_1008*tmp_690 + tmp_1012*tmp_694 + tmp_1015*tmp_692) + tmp_87*(tmp_650*tmp_948 + tmp_652*tmp_955 + tmp_654*tmp_952);
      real_t a_5_9 = tmp_134*(tmp_704*tmp_960 + tmp_706*tmp_967 + tmp_708*tmp_964) + tmp_181*(tmp_711*tmp_972 + tmp_713*tmp_979 + tmp_715*tmp_976) + tmp_228*(tmp_718*tmp_984 + tmp_720*tmp_991 + tmp_722*tmp_988) + tmp_275*(tmp_1000*tmp_729 + tmp_1003*tmp_727 + tmp_725*tmp_996) + tmp_322*(tmp_1008*tmp_732 + tmp_1012*tmp_736 + tmp_1015*tmp_734) + tmp_87*(tmp_697*tmp_948 + tmp_699*tmp_955 + tmp_701*tmp_952);
      real_t a_6_0 = tmp_134*(tmp_1030*tmp_109 + tmp_1034*tmp_121 + tmp_1037*tmp_133) + tmp_181*(tmp_1041*tmp_156 + tmp_1045*tmp_168 + tmp_1048*tmp_180) + tmp_228*(tmp_1052*tmp_203 + tmp_1056*tmp_215 + tmp_1059*tmp_227) + tmp_275*(tmp_1063*tmp_250 + tmp_1067*tmp_262 + tmp_1070*tmp_274) + tmp_322*(tmp_1074*tmp_297 + tmp_1078*tmp_309 + tmp_1081*tmp_321) + tmp_87*(tmp_1019*tmp_49 + tmp_1023*tmp_61 + tmp_1026*tmp_73);
      real_t a_6_1 = tmp_134*(tmp_1029*tmp_330 + tmp_1033*tmp_332 + tmp_1037*tmp_331) + tmp_181*(tmp_1040*tmp_335 + tmp_1044*tmp_337 + tmp_1048*tmp_336) + tmp_228*(tmp_1051*tmp_340 + tmp_1055*tmp_342 + tmp_1059*tmp_341) + tmp_275*(tmp_1062*tmp_345 + tmp_1066*tmp_347 + tmp_1070*tmp_346) + tmp_322*(tmp_1073*tmp_350 + tmp_1077*tmp_352 + tmp_1081*tmp_351) + tmp_87*(tmp_1018*tmp_325 + tmp_1022*tmp_327 + tmp_1026*tmp_326);
      real_t a_6_2 = tmp_134*(tmp_1029*tmp_360 + tmp_1033*tmp_362 + tmp_1037*tmp_361) + tmp_181*(tmp_1040*tmp_365 + tmp_1044*tmp_367 + tmp_1048*tmp_366) + tmp_228*(tmp_1051*tmp_370 + tmp_1055*tmp_372 + tmp_1059*tmp_371) + tmp_275*(tmp_1062*tmp_375 + tmp_1066*tmp_377 + tmp_1070*tmp_376) + tmp_322*(tmp_1073*tmp_380 + tmp_1077*tmp_382 + tmp_1081*tmp_381) + tmp_87*(tmp_1018*tmp_355 + tmp_1022*tmp_357 + tmp_1026*tmp_356);
      real_t a_6_3 = tmp_134*(tmp_1029*tmp_390 + tmp_1033*tmp_392 + tmp_1037*tmp_391) + tmp_181*(tmp_1040*tmp_395 + tmp_1044*tmp_397 + tmp_1048*tmp_396) + tmp_228*(tmp_1051*tmp_400 + tmp_1055*tmp_402 + tmp_1059*tmp_401) + tmp_275*(tmp_1062*tmp_405 + tmp_1066*tmp_407 + tmp_1070*tmp_406) + tmp_322*(tmp_1073*tmp_410 + tmp_1077*tmp_412 + tmp_1081*tmp_411) + tmp_87*(tmp_1018*tmp_385 + tmp_1022*tmp_387 + tmp_1026*tmp_386);
      real_t a_6_4 = tmp_134*(tmp_1030*tmp_431 + tmp_1034*tmp_434 + tmp_1037*tmp_428) + tmp_181*(tmp_1041*tmp_442 + tmp_1045*tmp_445 + tmp_1048*tmp_439) + tmp_228*(tmp_1052*tmp_453 + tmp_1056*tmp_456 + tmp_1059*tmp_450) + tmp_275*(tmp_1063*tmp_464 + tmp_1067*tmp_467 + tmp_1070*tmp_461) + tmp_322*(tmp_1074*tmp_475 + tmp_1078*tmp_478 + tmp_1081*tmp_472) + tmp_87*(tmp_1019*tmp_420 + tmp_1023*tmp_423 + tmp_1026*tmp_417);
      real_t a_6_5 = tmp_134*(tmp_1030*tmp_495 + tmp_1034*tmp_498 + tmp_1037*tmp_492) + tmp_181*(tmp_1041*tmp_505 + tmp_1045*tmp_508 + tmp_1048*tmp_502) + tmp_228*(tmp_1052*tmp_515 + tmp_1056*tmp_518 + tmp_1059*tmp_512) + tmp_275*(tmp_1063*tmp_525 + tmp_1067*tmp_528 + tmp_1070*tmp_522) + tmp_322*(tmp_1074*tmp_535 + tmp_1078*tmp_538 + tmp_1081*tmp_532) + tmp_87*(tmp_1019*tmp_485 + tmp_1023*tmp_488 + tmp_1026*tmp_482);
      real_t a_6_6 = tmp_134*(tmp_1030*tmp_553 + tmp_1034*tmp_556 + tmp_1037*tmp_550) + tmp_181*(tmp_1041*tmp_562 + tmp_1045*tmp_565 + tmp_1048*tmp_559) + tmp_228*(tmp_1052*tmp_571 + tmp_1056*tmp_574 + tmp_1059*tmp_568) + tmp_275*(tmp_1063*tmp_580 + tmp_1067*tmp_583 + tmp_1070*tmp_577) + tmp_322*(tmp_1074*tmp_589 + tmp_1078*tmp_592 + tmp_1081*tmp_586) + tmp_87*(tmp_1019*tmp_544 + tmp_1023*tmp_547 + tmp_1026*tmp_541);
      real_t a_6_7 = tmp_134*(tmp_1030*tmp_606 + tmp_1034*tmp_610 + tmp_1037*tmp_608) + tmp_181*(tmp_1041*tmp_615 + tmp_1045*tmp_619 + tmp_1048*tmp_617) + tmp_228*(tmp_1052*tmp_624 + tmp_1056*tmp_628 + tmp_1059*tmp_626) + tmp_275*(tmp_1063*tmp_633 + tmp_1067*tmp_637 + tmp_1070*tmp_635) + tmp_322*(tmp_1074*tmp_642 + tmp_1078*tmp_646 + tmp_1081*tmp_644) + tmp_87*(tmp_1019*tmp_597 + tmp_1023*tmp_601 + tmp_1026*tmp_599);
      real_t a_6_8 = tmp_134*(tmp_1030*tmp_658 + tmp_1034*tmp_662 + tmp_1037*tmp_660) + tmp_181*(tmp_1041*tmp_666 + tmp_1045*tmp_670 + tmp_1048*tmp_668) + tmp_228*(tmp_1052*tmp_674 + tmp_1056*tmp_678 + tmp_1059*tmp_676) + tmp_275*(tmp_1063*tmp_682 + tmp_1067*tmp_686 + tmp_1070*tmp_684) + tmp_322*(tmp_1074*tmp_690 + tmp_1078*tmp_694 + tmp_1081*tmp_692) + tmp_87*(tmp_1019*tmp_650 + tmp_1023*tmp_654 + tmp_1026*tmp_652);
      real_t a_6_9 = tmp_134*(tmp_1030*tmp_704 + tmp_1034*tmp_708 + tmp_1037*tmp_706) + tmp_181*(tmp_1041*tmp_711 + tmp_1045*tmp_715 + tmp_1048*tmp_713) + tmp_228*(tmp_1052*tmp_718 + tmp_1056*tmp_722 + tmp_1059*tmp_720) + tmp_275*(tmp_1063*tmp_725 + tmp_1067*tmp_729 + tmp_1070*tmp_727) + tmp_322*(tmp_1074*tmp_732 + tmp_1078*tmp_736 + tmp_1081*tmp_734) + tmp_87*(tmp_1019*tmp_697 + tmp_1023*tmp_701 + tmp_1026*tmp_699);
      real_t a_7_0 = tmp_134*(tmp_1088*tmp_109 + tmp_1090*tmp_121 + tmp_1091*tmp_133) + tmp_181*(tmp_1093*tmp_156 + tmp_1095*tmp_168 + tmp_1096*tmp_180) + tmp_228*(tmp_1098*tmp_203 + tmp_1100*tmp_215 + tmp_1101*tmp_227) + tmp_275*(tmp_1103*tmp_250 + tmp_1105*tmp_262 + tmp_1106*tmp_274) + tmp_322*(tmp_1108*tmp_297 + tmp_1110*tmp_309 + tmp_1111*tmp_321) + tmp_87*(tmp_1083*tmp_49 + tmp_1085*tmp_61 + tmp_1086*tmp_73);
      real_t a_7_1 = tmp_134*(tmp_1087*tmp_330 + tmp_1089*tmp_332 + tmp_1091*tmp_331) + tmp_181*(tmp_1092*tmp_335 + tmp_1094*tmp_337 + tmp_1096*tmp_336) + tmp_228*(tmp_1097*tmp_340 + tmp_1099*tmp_342 + tmp_1101*tmp_341) + tmp_275*(tmp_1102*tmp_345 + tmp_1104*tmp_347 + tmp_1106*tmp_346) + tmp_322*(tmp_1107*tmp_350 + tmp_1109*tmp_352 + tmp_1111*tmp_351) + tmp_87*(tmp_1082*tmp_325 + tmp_1084*tmp_327 + tmp_1086*tmp_326);
      real_t a_7_2 = tmp_134*(tmp_1087*tmp_360 + tmp_1089*tmp_362 + tmp_1091*tmp_361) + tmp_181*(tmp_1092*tmp_365 + tmp_1094*tmp_367 + tmp_1096*tmp_366) + tmp_228*(tmp_1097*tmp_370 + tmp_1099*tmp_372 + tmp_1101*tmp_371) + tmp_275*(tmp_1102*tmp_375 + tmp_1104*tmp_377 + tmp_1106*tmp_376) + tmp_322*(tmp_1107*tmp_380 + tmp_1109*tmp_382 + tmp_1111*tmp_381) + tmp_87*(tmp_1082*tmp_355 + tmp_1084*tmp_357 + tmp_1086*tmp_356);
      real_t a_7_3 = tmp_134*(tmp_1087*tmp_390 + tmp_1089*tmp_392 + tmp_1091*tmp_391) + tmp_181*(tmp_1092*tmp_395 + tmp_1094*tmp_397 + tmp_1096*tmp_396) + tmp_228*(tmp_1097*tmp_400 + tmp_1099*tmp_402 + tmp_1101*tmp_401) + tmp_275*(tmp_1102*tmp_405 + tmp_1104*tmp_407 + tmp_1106*tmp_406) + tmp_322*(tmp_1107*tmp_410 + tmp_1109*tmp_412 + tmp_1111*tmp_411) + tmp_87*(tmp_1082*tmp_385 + tmp_1084*tmp_387 + tmp_1086*tmp_386);
      real_t a_7_4 = tmp_134*(tmp_1088*tmp_431 + tmp_1090*tmp_434 + tmp_1091*tmp_428) + tmp_181*(tmp_1093*tmp_442 + tmp_1095*tmp_445 + tmp_1096*tmp_439) + tmp_228*(tmp_1098*tmp_453 + tmp_1100*tmp_456 + tmp_1101*tmp_450) + tmp_275*(tmp_1103*tmp_464 + tmp_1105*tmp_467 + tmp_1106*tmp_461) + tmp_322*(tmp_1108*tmp_475 + tmp_1110*tmp_478 + tmp_1111*tmp_472) + tmp_87*(tmp_1083*tmp_420 + tmp_1085*tmp_423 + tmp_1086*tmp_417);
      real_t a_7_5 = tmp_134*(tmp_1088*tmp_495 + tmp_1090*tmp_498 + tmp_1091*tmp_492) + tmp_181*(tmp_1093*tmp_505 + tmp_1095*tmp_508 + tmp_1096*tmp_502) + tmp_228*(tmp_1098*tmp_515 + tmp_1100*tmp_518 + tmp_1101*tmp_512) + tmp_275*(tmp_1103*tmp_525 + tmp_1105*tmp_528 + tmp_1106*tmp_522) + tmp_322*(tmp_1108*tmp_535 + tmp_1110*tmp_538 + tmp_1111*tmp_532) + tmp_87*(tmp_1083*tmp_485 + tmp_1085*tmp_488 + tmp_1086*tmp_482);
      real_t a_7_6 = tmp_134*(tmp_1088*tmp_553 + tmp_1090*tmp_556 + tmp_1091*tmp_550) + tmp_181*(tmp_1093*tmp_562 + tmp_1095*tmp_565 + tmp_1096*tmp_559) + tmp_228*(tmp_1098*tmp_571 + tmp_1100*tmp_574 + tmp_1101*tmp_568) + tmp_275*(tmp_1103*tmp_580 + tmp_1105*tmp_583 + tmp_1106*tmp_577) + tmp_322*(tmp_1108*tmp_589 + tmp_1110*tmp_592 + tmp_1111*tmp_586) + tmp_87*(tmp_1083*tmp_544 + tmp_1085*tmp_547 + tmp_1086*tmp_541);
      real_t a_7_7 = tmp_134*(tmp_1088*tmp_606 + tmp_1090*tmp_610 + tmp_1091*tmp_608) + tmp_181*(tmp_1093*tmp_615 + tmp_1095*tmp_619 + tmp_1096*tmp_617) + tmp_228*(tmp_1098*tmp_624 + tmp_1100*tmp_628 + tmp_1101*tmp_626) + tmp_275*(tmp_1103*tmp_633 + tmp_1105*tmp_637 + tmp_1106*tmp_635) + tmp_322*(tmp_1108*tmp_642 + tmp_1110*tmp_646 + tmp_1111*tmp_644) + tmp_87*(tmp_1083*tmp_597 + tmp_1085*tmp_601 + tmp_1086*tmp_599);
      real_t a_7_8 = tmp_134*(tmp_1088*tmp_658 + tmp_1090*tmp_662 + tmp_1091*tmp_660) + tmp_181*(tmp_1093*tmp_666 + tmp_1095*tmp_670 + tmp_1096*tmp_668) + tmp_228*(tmp_1098*tmp_674 + tmp_1100*tmp_678 + tmp_1101*tmp_676) + tmp_275*(tmp_1103*tmp_682 + tmp_1105*tmp_686 + tmp_1106*tmp_684) + tmp_322*(tmp_1108*tmp_690 + tmp_1110*tmp_694 + tmp_1111*tmp_692) + tmp_87*(tmp_1083*tmp_650 + tmp_1085*tmp_654 + tmp_1086*tmp_652);
      real_t a_7_9 = tmp_134*(tmp_1088*tmp_704 + tmp_1090*tmp_708 + tmp_1091*tmp_706) + tmp_181*(tmp_1093*tmp_711 + tmp_1095*tmp_715 + tmp_1096*tmp_713) + tmp_228*(tmp_1098*tmp_718 + tmp_1100*tmp_722 + tmp_1101*tmp_720) + tmp_275*(tmp_1103*tmp_725 + tmp_1105*tmp_729 + tmp_1106*tmp_727) + tmp_322*(tmp_1108*tmp_732 + tmp_1110*tmp_736 + tmp_1111*tmp_734) + tmp_87*(tmp_1083*tmp_697 + tmp_1085*tmp_701 + tmp_1086*tmp_699);
      real_t a_8_0 = tmp_134*(tmp_109*tmp_1118 + tmp_1120*tmp_121 + tmp_1121*tmp_133) + tmp_181*(tmp_1123*tmp_156 + tmp_1125*tmp_168 + tmp_1126*tmp_180) + tmp_228*(tmp_1128*tmp_203 + tmp_1130*tmp_215 + tmp_1131*tmp_227) + tmp_275*(tmp_1133*tmp_250 + tmp_1135*tmp_262 + tmp_1136*tmp_274) + tmp_322*(tmp_1138*tmp_297 + tmp_1140*tmp_309 + tmp_1141*tmp_321) + tmp_87*(tmp_1113*tmp_49 + tmp_1115*tmp_61 + tmp_1116*tmp_73);
      real_t a_8_1 = tmp_134*(tmp_1117*tmp_330 + tmp_1119*tmp_332 + tmp_1121*tmp_331) + tmp_181*(tmp_1122*tmp_335 + tmp_1124*tmp_337 + tmp_1126*tmp_336) + tmp_228*(tmp_1127*tmp_340 + tmp_1129*tmp_342 + tmp_1131*tmp_341) + tmp_275*(tmp_1132*tmp_345 + tmp_1134*tmp_347 + tmp_1136*tmp_346) + tmp_322*(tmp_1137*tmp_350 + tmp_1139*tmp_352 + tmp_1141*tmp_351) + tmp_87*(tmp_1112*tmp_325 + tmp_1114*tmp_327 + tmp_1116*tmp_326);
      real_t a_8_2 = tmp_134*(tmp_1117*tmp_360 + tmp_1119*tmp_362 + tmp_1121*tmp_361) + tmp_181*(tmp_1122*tmp_365 + tmp_1124*tmp_367 + tmp_1126*tmp_366) + tmp_228*(tmp_1127*tmp_370 + tmp_1129*tmp_372 + tmp_1131*tmp_371) + tmp_275*(tmp_1132*tmp_375 + tmp_1134*tmp_377 + tmp_1136*tmp_376) + tmp_322*(tmp_1137*tmp_380 + tmp_1139*tmp_382 + tmp_1141*tmp_381) + tmp_87*(tmp_1112*tmp_355 + tmp_1114*tmp_357 + tmp_1116*tmp_356);
      real_t a_8_3 = tmp_134*(tmp_1117*tmp_390 + tmp_1119*tmp_392 + tmp_1121*tmp_391) + tmp_181*(tmp_1122*tmp_395 + tmp_1124*tmp_397 + tmp_1126*tmp_396) + tmp_228*(tmp_1127*tmp_400 + tmp_1129*tmp_402 + tmp_1131*tmp_401) + tmp_275*(tmp_1132*tmp_405 + tmp_1134*tmp_407 + tmp_1136*tmp_406) + tmp_322*(tmp_1137*tmp_410 + tmp_1139*tmp_412 + tmp_1141*tmp_411) + tmp_87*(tmp_1112*tmp_385 + tmp_1114*tmp_387 + tmp_1116*tmp_386);
      real_t a_8_4 = tmp_134*(tmp_1118*tmp_431 + tmp_1120*tmp_434 + tmp_1121*tmp_428) + tmp_181*(tmp_1123*tmp_442 + tmp_1125*tmp_445 + tmp_1126*tmp_439) + tmp_228*(tmp_1128*tmp_453 + tmp_1130*tmp_456 + tmp_1131*tmp_450) + tmp_275*(tmp_1133*tmp_464 + tmp_1135*tmp_467 + tmp_1136*tmp_461) + tmp_322*(tmp_1138*tmp_475 + tmp_1140*tmp_478 + tmp_1141*tmp_472) + tmp_87*(tmp_1113*tmp_420 + tmp_1115*tmp_423 + tmp_1116*tmp_417);
      real_t a_8_5 = tmp_134*(tmp_1118*tmp_495 + tmp_1120*tmp_498 + tmp_1121*tmp_492) + tmp_181*(tmp_1123*tmp_505 + tmp_1125*tmp_508 + tmp_1126*tmp_502) + tmp_228*(tmp_1128*tmp_515 + tmp_1130*tmp_518 + tmp_1131*tmp_512) + tmp_275*(tmp_1133*tmp_525 + tmp_1135*tmp_528 + tmp_1136*tmp_522) + tmp_322*(tmp_1138*tmp_535 + tmp_1140*tmp_538 + tmp_1141*tmp_532) + tmp_87*(tmp_1113*tmp_485 + tmp_1115*tmp_488 + tmp_1116*tmp_482);
      real_t a_8_6 = tmp_134*(tmp_1118*tmp_553 + tmp_1120*tmp_556 + tmp_1121*tmp_550) + tmp_181*(tmp_1123*tmp_562 + tmp_1125*tmp_565 + tmp_1126*tmp_559) + tmp_228*(tmp_1128*tmp_571 + tmp_1130*tmp_574 + tmp_1131*tmp_568) + tmp_275*(tmp_1133*tmp_580 + tmp_1135*tmp_583 + tmp_1136*tmp_577) + tmp_322*(tmp_1138*tmp_589 + tmp_1140*tmp_592 + tmp_1141*tmp_586) + tmp_87*(tmp_1113*tmp_544 + tmp_1115*tmp_547 + tmp_1116*tmp_541);
      real_t a_8_7 = tmp_134*(tmp_1118*tmp_606 + tmp_1120*tmp_610 + tmp_1121*tmp_608) + tmp_181*(tmp_1123*tmp_615 + tmp_1125*tmp_619 + tmp_1126*tmp_617) + tmp_228*(tmp_1128*tmp_624 + tmp_1130*tmp_628 + tmp_1131*tmp_626) + tmp_275*(tmp_1133*tmp_633 + tmp_1135*tmp_637 + tmp_1136*tmp_635) + tmp_322*(tmp_1138*tmp_642 + tmp_1140*tmp_646 + tmp_1141*tmp_644) + tmp_87*(tmp_1113*tmp_597 + tmp_1115*tmp_601 + tmp_1116*tmp_599);
      real_t a_8_8 = tmp_134*(tmp_1118*tmp_658 + tmp_1120*tmp_662 + tmp_1121*tmp_660) + tmp_181*(tmp_1123*tmp_666 + tmp_1125*tmp_670 + tmp_1126*tmp_668) + tmp_228*(tmp_1128*tmp_674 + tmp_1130*tmp_678 + tmp_1131*tmp_676) + tmp_275*(tmp_1133*tmp_682 + tmp_1135*tmp_686 + tmp_1136*tmp_684) + tmp_322*(tmp_1138*tmp_690 + tmp_1140*tmp_694 + tmp_1141*tmp_692) + tmp_87*(tmp_1113*tmp_650 + tmp_1115*tmp_654 + tmp_1116*tmp_652);
      real_t a_8_9 = tmp_134*(tmp_1118*tmp_704 + tmp_1120*tmp_708 + tmp_1121*tmp_706) + tmp_181*(tmp_1123*tmp_711 + tmp_1125*tmp_715 + tmp_1126*tmp_713) + tmp_228*(tmp_1128*tmp_718 + tmp_1130*tmp_722 + tmp_1131*tmp_720) + tmp_275*(tmp_1133*tmp_725 + tmp_1135*tmp_729 + tmp_1136*tmp_727) + tmp_322*(tmp_1138*tmp_732 + tmp_1140*tmp_736 + tmp_1141*tmp_734) + tmp_87*(tmp_1113*tmp_697 + tmp_1115*tmp_701 + tmp_1116*tmp_699);
      real_t a_9_0 = tmp_134*(tmp_109*tmp_1148 + tmp_1150*tmp_121 + tmp_1151*tmp_133) + tmp_181*(tmp_1153*tmp_156 + tmp_1155*tmp_168 + tmp_1156*tmp_180) + tmp_228*(tmp_1158*tmp_203 + tmp_1160*tmp_215 + tmp_1161*tmp_227) + tmp_275*(tmp_1163*tmp_250 + tmp_1165*tmp_262 + tmp_1166*tmp_274) + tmp_322*(tmp_1168*tmp_297 + tmp_1170*tmp_309 + tmp_1171*tmp_321) + tmp_87*(tmp_1143*tmp_49 + tmp_1145*tmp_61 + tmp_1146*tmp_73);
      real_t a_9_1 = tmp_134*(tmp_1147*tmp_330 + tmp_1149*tmp_332 + tmp_1151*tmp_331) + tmp_181*(tmp_1152*tmp_335 + tmp_1154*tmp_337 + tmp_1156*tmp_336) + tmp_228*(tmp_1157*tmp_340 + tmp_1159*tmp_342 + tmp_1161*tmp_341) + tmp_275*(tmp_1162*tmp_345 + tmp_1164*tmp_347 + tmp_1166*tmp_346) + tmp_322*(tmp_1167*tmp_350 + tmp_1169*tmp_352 + tmp_1171*tmp_351) + tmp_87*(tmp_1142*tmp_325 + tmp_1144*tmp_327 + tmp_1146*tmp_326);
      real_t a_9_2 = tmp_134*(tmp_1147*tmp_360 + tmp_1149*tmp_362 + tmp_1151*tmp_361) + tmp_181*(tmp_1152*tmp_365 + tmp_1154*tmp_367 + tmp_1156*tmp_366) + tmp_228*(tmp_1157*tmp_370 + tmp_1159*tmp_372 + tmp_1161*tmp_371) + tmp_275*(tmp_1162*tmp_375 + tmp_1164*tmp_377 + tmp_1166*tmp_376) + tmp_322*(tmp_1167*tmp_380 + tmp_1169*tmp_382 + tmp_1171*tmp_381) + tmp_87*(tmp_1142*tmp_355 + tmp_1144*tmp_357 + tmp_1146*tmp_356);
      real_t a_9_3 = tmp_134*(tmp_1147*tmp_390 + tmp_1149*tmp_392 + tmp_1151*tmp_391) + tmp_181*(tmp_1152*tmp_395 + tmp_1154*tmp_397 + tmp_1156*tmp_396) + tmp_228*(tmp_1157*tmp_400 + tmp_1159*tmp_402 + tmp_1161*tmp_401) + tmp_275*(tmp_1162*tmp_405 + tmp_1164*tmp_407 + tmp_1166*tmp_406) + tmp_322*(tmp_1167*tmp_410 + tmp_1169*tmp_412 + tmp_1171*tmp_411) + tmp_87*(tmp_1142*tmp_385 + tmp_1144*tmp_387 + tmp_1146*tmp_386);
      real_t a_9_4 = tmp_134*(tmp_1148*tmp_431 + tmp_1150*tmp_434 + tmp_1151*tmp_428) + tmp_181*(tmp_1153*tmp_442 + tmp_1155*tmp_445 + tmp_1156*tmp_439) + tmp_228*(tmp_1158*tmp_453 + tmp_1160*tmp_456 + tmp_1161*tmp_450) + tmp_275*(tmp_1163*tmp_464 + tmp_1165*tmp_467 + tmp_1166*tmp_461) + tmp_322*(tmp_1168*tmp_475 + tmp_1170*tmp_478 + tmp_1171*tmp_472) + tmp_87*(tmp_1143*tmp_420 + tmp_1145*tmp_423 + tmp_1146*tmp_417);
      real_t a_9_5 = tmp_134*(tmp_1148*tmp_495 + tmp_1150*tmp_498 + tmp_1151*tmp_492) + tmp_181*(tmp_1153*tmp_505 + tmp_1155*tmp_508 + tmp_1156*tmp_502) + tmp_228*(tmp_1158*tmp_515 + tmp_1160*tmp_518 + tmp_1161*tmp_512) + tmp_275*(tmp_1163*tmp_525 + tmp_1165*tmp_528 + tmp_1166*tmp_522) + tmp_322*(tmp_1168*tmp_535 + tmp_1170*tmp_538 + tmp_1171*tmp_532) + tmp_87*(tmp_1143*tmp_485 + tmp_1145*tmp_488 + tmp_1146*tmp_482);
      real_t a_9_6 = tmp_134*(tmp_1148*tmp_553 + tmp_1150*tmp_556 + tmp_1151*tmp_550) + tmp_181*(tmp_1153*tmp_562 + tmp_1155*tmp_565 + tmp_1156*tmp_559) + tmp_228*(tmp_1158*tmp_571 + tmp_1160*tmp_574 + tmp_1161*tmp_568) + tmp_275*(tmp_1163*tmp_580 + tmp_1165*tmp_583 + tmp_1166*tmp_577) + tmp_322*(tmp_1168*tmp_589 + tmp_1170*tmp_592 + tmp_1171*tmp_586) + tmp_87*(tmp_1143*tmp_544 + tmp_1145*tmp_547 + tmp_1146*tmp_541);
      real_t a_9_7 = tmp_134*(tmp_1148*tmp_606 + tmp_1150*tmp_610 + tmp_1151*tmp_608) + tmp_181*(tmp_1153*tmp_615 + tmp_1155*tmp_619 + tmp_1156*tmp_617) + tmp_228*(tmp_1158*tmp_624 + tmp_1160*tmp_628 + tmp_1161*tmp_626) + tmp_275*(tmp_1163*tmp_633 + tmp_1165*tmp_637 + tmp_1166*tmp_635) + tmp_322*(tmp_1168*tmp_642 + tmp_1170*tmp_646 + tmp_1171*tmp_644) + tmp_87*(tmp_1143*tmp_597 + tmp_1145*tmp_601 + tmp_1146*tmp_599);
      real_t a_9_8 = tmp_134*(tmp_1148*tmp_658 + tmp_1150*tmp_662 + tmp_1151*tmp_660) + tmp_181*(tmp_1153*tmp_666 + tmp_1155*tmp_670 + tmp_1156*tmp_668) + tmp_228*(tmp_1158*tmp_674 + tmp_1160*tmp_678 + tmp_1161*tmp_676) + tmp_275*(tmp_1163*tmp_682 + tmp_1165*tmp_686 + tmp_1166*tmp_684) + tmp_322*(tmp_1168*tmp_690 + tmp_1170*tmp_694 + tmp_1171*tmp_692) + tmp_87*(tmp_1143*tmp_650 + tmp_1145*tmp_654 + tmp_1146*tmp_652);
      real_t a_9_9 = tmp_134*(tmp_1148*tmp_704 + tmp_1150*tmp_708 + tmp_1151*tmp_706) + tmp_181*(tmp_1153*tmp_711 + tmp_1155*tmp_715 + tmp_1156*tmp_713) + tmp_228*(tmp_1158*tmp_718 + tmp_1160*tmp_722 + tmp_1161*tmp_720) + tmp_275*(tmp_1163*tmp_725 + tmp_1165*tmp_729 + tmp_1166*tmp_727) + tmp_322*(tmp_1168*tmp_732 + tmp_1170*tmp_736 + tmp_1171*tmp_734) + tmp_87*(tmp_1143*tmp_697 + tmp_1145*tmp_701 + tmp_1146*tmp_699);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_1_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Blending_DF_Tetrahedron_4_0 = 0;
      real_t Blending_DF_Tetrahedron_4_1 = 0;
      real_t Blending_DF_Tetrahedron_4_2 = 0;
      real_t Blending_DF_Tetrahedron_4_3 = 0;
      real_t Blending_DF_Tetrahedron_4_4 = 0;
      real_t Blending_DF_Tetrahedron_4_5 = 0;
      real_t Blending_DF_Tetrahedron_4_6 = 0;
      real_t Blending_DF_Tetrahedron_4_7 = 0;
      real_t Blending_DF_Tetrahedron_4_8 = 0;
      real_t Blending_DF_Tetrahedron_5_0 = 0;
      real_t Blending_DF_Tetrahedron_5_1 = 0;
      real_t Blending_DF_Tetrahedron_5_2 = 0;
      real_t Blending_DF_Tetrahedron_5_3 = 0;
      real_t Blending_DF_Tetrahedron_5_4 = 0;
      real_t Blending_DF_Tetrahedron_5_5 = 0;
      real_t Blending_DF_Tetrahedron_5_6 = 0;
      real_t Blending_DF_Tetrahedron_5_7 = 0;
      real_t Blending_DF_Tetrahedron_5_8 = 0;
      Blending_DF_Tetrahedron( 0.64142979149569634*p_affine_0_0 + 0.16200149169852451*p_affine_1_0 + 0.18385035049209769*p_affine_2_0 + 0.012718366313681451*p_affine_3_0, 0.64142979149569634*p_affine_0_1 + 0.16200149169852451*p_affine_1_1 + 0.18385035049209769*p_affine_2_1 + 0.012718366313681451*p_affine_3_1, 0.64142979149569634*p_affine_0_2 + 0.16200149169852451*p_affine_1_2 + 0.18385035049209769*p_affine_2_2 + 0.012718366313681451*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.34544415571973075*p_affine_0_0 + 0.010905212211189241*p_affine_1_0 + 0.28152380212354622*p_affine_2_0 + 0.3621268299455338*p_affine_3_0, 0.34544415571973075*p_affine_0_1 + 0.010905212211189241*p_affine_1_1 + 0.28152380212354622*p_affine_2_1 + 0.3621268299455338*p_affine_3_1, 0.34544415571973075*p_affine_0_2 + 0.010905212211189241*p_affine_1_2 + 0.28152380212354622*p_affine_2_2 + 0.3621268299455338*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.43985894764927508*p_affine_0_0 + 0.19011700243928389*p_affine_1_0 + 0.011403329444557171*p_affine_2_0 + 0.35862072046688392*p_affine_3_0, 0.43985894764927508*p_affine_0_1 + 0.19011700243928389*p_affine_1_1 + 0.011403329444557171*p_affine_2_1 + 0.35862072046688392*p_affine_3_1, 0.43985894764927508*p_affine_0_2 + 0.19011700243928389*p_affine_1_2 + 0.011403329444557171*p_affine_2_2 + 0.35862072046688392*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.037871631782356974*p_affine_0_0 + 0.170816925164989*p_affine_1_0 + 0.15281814309092731*p_affine_2_0 + 0.63849329996172666*p_affine_3_0, 0.037871631782356974*p_affine_0_1 + 0.170816925164989*p_affine_1_1 + 0.15281814309092731*p_affine_2_1 + 0.63849329996172666*p_affine_3_1, 0.037871631782356974*p_affine_0_2 + 0.170816925164989*p_affine_1_2 + 0.15281814309092731*p_affine_2_2 + 0.63849329996172666*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Blending_DF_Tetrahedron( 0.12480486216524708*p_affine_0_0 + 0.15868516322744061*p_affine_1_0 + 0.58566280565521578*p_affine_2_0 + 0.1308471689520965*p_affine_3_0, 0.12480486216524708*p_affine_0_1 + 0.15868516322744061*p_affine_1_1 + 0.58566280565521578*p_affine_2_1 + 0.1308471689520965*p_affine_3_1, 0.12480486216524708*p_affine_0_2 + 0.15868516322744061*p_affine_1_2 + 0.58566280565521578*p_affine_2_2 + 0.1308471689520965*p_affine_3_2, &Blending_DF_Tetrahedron_4_0, &Blending_DF_Tetrahedron_4_1, &Blending_DF_Tetrahedron_4_2, &Blending_DF_Tetrahedron_4_3, &Blending_DF_Tetrahedron_4_4, &Blending_DF_Tetrahedron_4_5, &Blending_DF_Tetrahedron_4_6, &Blending_DF_Tetrahedron_4_7, &Blending_DF_Tetrahedron_4_8 );
      Blending_DF_Tetrahedron( 0.14148275196950461*p_affine_0_0 + 0.57122605214911515*p_affine_1_0 + 0.14691839008716959*p_affine_2_0 + 0.14037280579421069*p_affine_3_0, 0.14148275196950461*p_affine_0_1 + 0.57122605214911515*p_affine_1_1 + 0.14691839008716959*p_affine_2_1 + 0.14037280579421069*p_affine_3_1, 0.14148275196950461*p_affine_0_2 + 0.57122605214911515*p_affine_1_2 + 0.14691839008716959*p_affine_2_2 + 0.14037280579421069*p_affine_3_2, &Blending_DF_Tetrahedron_5_0, &Blending_DF_Tetrahedron_5_1, &Blending_DF_Tetrahedron_5_2, &Blending_DF_Tetrahedron_5_3, &Blending_DF_Tetrahedron_5_4, &Blending_DF_Tetrahedron_5_5, &Blending_DF_Tetrahedron_5_6, &Blending_DF_Tetrahedron_5_7, &Blending_DF_Tetrahedron_5_8 );
      real_t tmp_0 = 0.64800596679409805;
      real_t tmp_1 = 0.73540140196839077;
      real_t tmp_2 = 0.050873465254725803;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_13 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_11 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_12 - Blending_DF_Tetrahedron_0_5*tmp_14;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_26 - tmp_27;
      real_t tmp_40 = tmp_20 - tmp_29;
      real_t tmp_41 = tmp_23 - tmp_28;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_46 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_50 = 2*tmp_49;
      real_t tmp_51 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_54 = tmp_10*tmp_51 + tmp_33*tmp_52 + tmp_35*tmp_53;
      real_t tmp_55 = tmp_3*tmp_54;
      real_t tmp_56 = tmp_39*tmp_51 + tmp_40*tmp_52 + tmp_41*tmp_53;
      real_t tmp_57 = tmp_3*tmp_56;
      real_t tmp_58 = tmp_44*tmp_51 + tmp_45*tmp_52 + tmp_46*tmp_53;
      real_t tmp_59 = tmp_3*tmp_58;
      real_t tmp_60 = 0.5*tmp_55 + 0.5*tmp_57 + 0.5*tmp_59;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = tmp_31*(tmp_12 - tmp_14);
      real_t tmp_63 = tmp_31*(tmp_11 - tmp_16);
      real_t tmp_64 = tmp_31*(tmp_13 - tmp_15);
      real_t tmp_65 = tmp_10*tmp_62 + tmp_33*tmp_63 + tmp_35*tmp_64;
      real_t tmp_66 = 1.0*tmp_3;
      real_t tmp_67 = tmp_39*tmp_62 + tmp_40*tmp_63 + tmp_41*tmp_64;
      real_t tmp_68 = tmp_44*tmp_62 + tmp_45*tmp_63 + tmp_46*tmp_64;
      real_t tmp_69 = tmp_65*tmp_66 + tmp_66*tmp_67 + tmp_66*tmp_68;
      real_t tmp_70 = 2.0*tmp_3;
      real_t tmp_71 = p_affine_0_0*p_affine_1_1;
      real_t tmp_72 = p_affine_0_0*p_affine_1_2;
      real_t tmp_73 = p_affine_2_1*p_affine_3_2;
      real_t tmp_74 = p_affine_0_1*p_affine_1_0;
      real_t tmp_75 = p_affine_0_1*p_affine_1_2;
      real_t tmp_76 = p_affine_2_2*p_affine_3_0;
      real_t tmp_77 = p_affine_0_2*p_affine_1_0;
      real_t tmp_78 = p_affine_0_2*p_affine_1_1;
      real_t tmp_79 = p_affine_2_0*p_affine_3_1;
      real_t tmp_80 = p_affine_2_2*p_affine_3_1;
      real_t tmp_81 = p_affine_2_0*p_affine_3_2;
      real_t tmp_82 = p_affine_2_1*p_affine_3_0;
      real_t tmp_83 = std::abs(p_affine_0_0*tmp_73 - p_affine_0_0*tmp_80 + p_affine_0_1*tmp_76 - p_affine_0_1*tmp_81 + p_affine_0_2*tmp_79 - p_affine_0_2*tmp_82 - p_affine_1_0*tmp_73 + p_affine_1_0*tmp_80 - p_affine_1_1*tmp_76 + p_affine_1_1*tmp_81 - p_affine_1_2*tmp_79 + p_affine_1_2*tmp_82 + p_affine_2_0*tmp_75 - p_affine_2_0*tmp_78 - p_affine_2_1*tmp_72 + p_affine_2_1*tmp_77 + p_affine_2_2*tmp_71 - p_affine_2_2*tmp_74 - p_affine_3_0*tmp_75 + p_affine_3_0*tmp_78 + p_affine_3_1*tmp_72 - p_affine_3_1*tmp_77 - p_affine_3_2*tmp_71 + p_affine_3_2*tmp_74);
      real_t tmp_84 = 0.020387000459557512*tmp_83*std::abs(tmp_17);
      real_t tmp_85 = 0.043620848844756963;
      real_t tmp_86 = 1.1260952084941849;
      real_t tmp_87 = 1.4485073197821352;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87 - 3.0;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_3*tmp_91 - Blending_DF_Tetrahedron_1_3*tmp_93 + Blending_DF_Tetrahedron_1_4*tmp_89 - Blending_DF_Tetrahedron_1_4*tmp_94 + Blending_DF_Tetrahedron_1_5*tmp_90 - Blending_DF_Tetrahedron_1_5*tmp_92;
      real_t tmp_96 = tmp_30/tmp_95;
      real_t tmp_97 = tmp_96*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_98 = tmp_96*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_99 = tmp_96*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_100 = tmp_10*tmp_97 + tmp_33*tmp_98 + tmp_35*tmp_99;
      real_t tmp_101 = tmp_100*tmp_88;
      real_t tmp_102 = tmp_39*tmp_97 + tmp_40*tmp_98 + tmp_41*tmp_99;
      real_t tmp_103 = tmp_102*tmp_88;
      real_t tmp_104 = tmp_44*tmp_97 + tmp_45*tmp_98 + tmp_46*tmp_99;
      real_t tmp_105 = tmp_104*tmp_88;
      real_t tmp_106 = 0.5*tmp_101 + 0.5*tmp_103 + 0.5*tmp_105;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = tmp_96*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_109 = tmp_96*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_110 = tmp_96*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_111 = tmp_10*tmp_108 + tmp_109*tmp_33 + tmp_110*tmp_35;
      real_t tmp_112 = tmp_111*tmp_88;
      real_t tmp_113 = tmp_108*tmp_39 + tmp_109*tmp_40 + tmp_110*tmp_41;
      real_t tmp_114 = tmp_113*tmp_88;
      real_t tmp_115 = tmp_108*tmp_44 + tmp_109*tmp_45 + tmp_110*tmp_46;
      real_t tmp_116 = tmp_115*tmp_88;
      real_t tmp_117 = 0.5*tmp_112 + 0.5*tmp_114 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = tmp_96*(tmp_90 - tmp_92);
      real_t tmp_120 = tmp_96*(tmp_89 - tmp_94);
      real_t tmp_121 = tmp_96*(tmp_91 - tmp_93);
      real_t tmp_122 = tmp_10*tmp_119 + tmp_120*tmp_33 + tmp_121*tmp_35;
      real_t tmp_123 = 1.0*tmp_88;
      real_t tmp_124 = tmp_119*tmp_39 + tmp_120*tmp_40 + tmp_121*tmp_41;
      real_t tmp_125 = tmp_119*tmp_44 + tmp_120*tmp_45 + tmp_121*tmp_46;
      real_t tmp_126 = tmp_122*tmp_123 + tmp_123*tmp_124 + tmp_123*tmp_125;
      real_t tmp_127 = 2.0*tmp_88;
      real_t tmp_128 = 0.021344402118457811*tmp_83*std::abs(tmp_95);
      real_t tmp_129 = 0.76046800975713558;
      real_t tmp_130 = 0.045613317778228683;
      real_t tmp_131 = 1.4344828818675357;
      real_t tmp_132 = tmp_129 + tmp_130 + tmp_131 - 3.0;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_134 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_135 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_136 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_138 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_3*tmp_135 - Blending_DF_Tetrahedron_2_3*tmp_137 + Blending_DF_Tetrahedron_2_4*tmp_133 - Blending_DF_Tetrahedron_2_4*tmp_138 + Blending_DF_Tetrahedron_2_5*tmp_134 - Blending_DF_Tetrahedron_2_5*tmp_136;
      real_t tmp_140 = tmp_30/tmp_139;
      real_t tmp_141 = tmp_140*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_142 = tmp_140*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_143 = tmp_140*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_144 = tmp_10*tmp_141 + tmp_142*tmp_33 + tmp_143*tmp_35;
      real_t tmp_145 = tmp_132*tmp_144;
      real_t tmp_146 = tmp_141*tmp_39 + tmp_142*tmp_40 + tmp_143*tmp_41;
      real_t tmp_147 = tmp_132*tmp_146;
      real_t tmp_148 = tmp_141*tmp_44 + tmp_142*tmp_45 + tmp_143*tmp_46;
      real_t tmp_149 = tmp_132*tmp_148;
      real_t tmp_150 = 0.5*tmp_145 + 0.5*tmp_147 + 0.5*tmp_149;
      real_t tmp_151 = 2*tmp_150;
      real_t tmp_152 = tmp_140*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_153 = tmp_140*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_154 = tmp_140*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_155 = tmp_10*tmp_152 + tmp_153*tmp_33 + tmp_154*tmp_35;
      real_t tmp_156 = tmp_132*tmp_155;
      real_t tmp_157 = tmp_152*tmp_39 + tmp_153*tmp_40 + tmp_154*tmp_41;
      real_t tmp_158 = tmp_132*tmp_157;
      real_t tmp_159 = tmp_152*tmp_44 + tmp_153*tmp_45 + tmp_154*tmp_46;
      real_t tmp_160 = tmp_132*tmp_159;
      real_t tmp_161 = 0.5*tmp_156 + 0.5*tmp_158 + 0.5*tmp_160;
      real_t tmp_162 = 2*tmp_161;
      real_t tmp_163 = tmp_140*(tmp_134 - tmp_136);
      real_t tmp_164 = tmp_140*(tmp_133 - tmp_138);
      real_t tmp_165 = tmp_140*(tmp_135 - tmp_137);
      real_t tmp_166 = tmp_10*tmp_163 + tmp_164*tmp_33 + tmp_165*tmp_35;
      real_t tmp_167 = 1.0*tmp_132;
      real_t tmp_168 = tmp_163*tmp_39 + tmp_164*tmp_40 + tmp_165*tmp_41;
      real_t tmp_169 = tmp_163*tmp_44 + tmp_164*tmp_45 + tmp_165*tmp_46;
      real_t tmp_170 = tmp_166*tmp_167 + tmp_167*tmp_168 + tmp_167*tmp_169;
      real_t tmp_171 = 2.0*tmp_132;
      real_t tmp_172 = 0.022094671190740864*tmp_83*std::abs(tmp_139);
      real_t tmp_173 = 0.68326770065995601;
      real_t tmp_174 = 0.61127257236370924;
      real_t tmp_175 = 2.5539731998469066;
      real_t tmp_176 = tmp_173 + tmp_174 + tmp_175 - 3.0;
      real_t tmp_177 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_178 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_179 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_180 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_181 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_182 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_183 = Blending_DF_Tetrahedron_3_3*tmp_179 - Blending_DF_Tetrahedron_3_3*tmp_181 + Blending_DF_Tetrahedron_3_4*tmp_177 - Blending_DF_Tetrahedron_3_4*tmp_182 + Blending_DF_Tetrahedron_3_5*tmp_178 - Blending_DF_Tetrahedron_3_5*tmp_180;
      real_t tmp_184 = tmp_30/tmp_183;
      real_t tmp_185 = tmp_184*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_186 = tmp_184*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_187 = tmp_184*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_188 = tmp_10*tmp_185 + tmp_186*tmp_33 + tmp_187*tmp_35;
      real_t tmp_189 = tmp_176*tmp_188;
      real_t tmp_190 = tmp_185*tmp_39 + tmp_186*tmp_40 + tmp_187*tmp_41;
      real_t tmp_191 = tmp_176*tmp_190;
      real_t tmp_192 = tmp_185*tmp_44 + tmp_186*tmp_45 + tmp_187*tmp_46;
      real_t tmp_193 = tmp_176*tmp_192;
      real_t tmp_194 = 0.5*tmp_189 + 0.5*tmp_191 + 0.5*tmp_193;
      real_t tmp_195 = 2*tmp_194;
      real_t tmp_196 = tmp_184*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_197 = tmp_184*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_198 = tmp_184*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_199 = tmp_10*tmp_196 + tmp_197*tmp_33 + tmp_198*tmp_35;
      real_t tmp_200 = tmp_176*tmp_199;
      real_t tmp_201 = tmp_196*tmp_39 + tmp_197*tmp_40 + tmp_198*tmp_41;
      real_t tmp_202 = tmp_176*tmp_201;
      real_t tmp_203 = tmp_196*tmp_44 + tmp_197*tmp_45 + tmp_198*tmp_46;
      real_t tmp_204 = tmp_176*tmp_203;
      real_t tmp_205 = 0.5*tmp_200 + 0.5*tmp_202 + 0.5*tmp_204;
      real_t tmp_206 = 2*tmp_205;
      real_t tmp_207 = tmp_184*(tmp_178 - tmp_180);
      real_t tmp_208 = tmp_184*(tmp_177 - tmp_182);
      real_t tmp_209 = tmp_184*(tmp_179 - tmp_181);
      real_t tmp_210 = tmp_10*tmp_207 + tmp_208*tmp_33 + tmp_209*tmp_35;
      real_t tmp_211 = 1.0*tmp_176;
      real_t tmp_212 = tmp_207*tmp_39 + tmp_208*tmp_40 + tmp_209*tmp_41;
      real_t tmp_213 = tmp_207*tmp_44 + tmp_208*tmp_45 + tmp_209*tmp_46;
      real_t tmp_214 = tmp_210*tmp_211 + tmp_211*tmp_212 + tmp_211*tmp_213;
      real_t tmp_215 = 2.0*tmp_176;
      real_t tmp_216 = 0.023437401610067198*tmp_83*std::abs(tmp_183);
      real_t tmp_217 = 0.63474065290976245;
      real_t tmp_218 = 2.3426512226208631;
      real_t tmp_219 = 0.52338867580838599;
      real_t tmp_220 = tmp_217 + tmp_218 + tmp_219 - 3.0;
      real_t tmp_221 = Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_8;
      real_t tmp_222 = Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_6;
      real_t tmp_223 = Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_7;
      real_t tmp_224 = Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_7;
      real_t tmp_225 = Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_8;
      real_t tmp_226 = Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_6;
      real_t tmp_227 = Blending_DF_Tetrahedron_4_3*tmp_223 - Blending_DF_Tetrahedron_4_3*tmp_225 + Blending_DF_Tetrahedron_4_4*tmp_221 - Blending_DF_Tetrahedron_4_4*tmp_226 + Blending_DF_Tetrahedron_4_5*tmp_222 - Blending_DF_Tetrahedron_4_5*tmp_224;
      real_t tmp_228 = tmp_30/tmp_227;
      real_t tmp_229 = tmp_228*(Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_4 - Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_3);
      real_t tmp_230 = tmp_228*(-Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_5 + Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_3);
      real_t tmp_231 = tmp_228*(Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_5 - Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_4);
      real_t tmp_232 = tmp_10*tmp_229 + tmp_230*tmp_33 + tmp_231*tmp_35;
      real_t tmp_233 = tmp_220*tmp_232;
      real_t tmp_234 = tmp_229*tmp_39 + tmp_230*tmp_40 + tmp_231*tmp_41;
      real_t tmp_235 = tmp_220*tmp_234;
      real_t tmp_236 = tmp_229*tmp_44 + tmp_230*tmp_45 + tmp_231*tmp_46;
      real_t tmp_237 = tmp_220*tmp_236;
      real_t tmp_238 = 0.5*tmp_233 + 0.5*tmp_235 + 0.5*tmp_237;
      real_t tmp_239 = 2*tmp_238;
      real_t tmp_240 = tmp_228*(Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_7 - Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_6);
      real_t tmp_241 = tmp_228*(-Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_8 + Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_6);
      real_t tmp_242 = tmp_228*(Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_8 - Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_7);
      real_t tmp_243 = tmp_10*tmp_240 + tmp_241*tmp_33 + tmp_242*tmp_35;
      real_t tmp_244 = tmp_220*tmp_243;
      real_t tmp_245 = tmp_240*tmp_39 + tmp_241*tmp_40 + tmp_242*tmp_41;
      real_t tmp_246 = tmp_220*tmp_245;
      real_t tmp_247 = tmp_240*tmp_44 + tmp_241*tmp_45 + tmp_242*tmp_46;
      real_t tmp_248 = tmp_220*tmp_247;
      real_t tmp_249 = 0.5*tmp_244 + 0.5*tmp_246 + 0.5*tmp_248;
      real_t tmp_250 = 2*tmp_249;
      real_t tmp_251 = tmp_228*(tmp_222 - tmp_224);
      real_t tmp_252 = tmp_228*(tmp_221 - tmp_226);
      real_t tmp_253 = tmp_228*(tmp_223 - tmp_225);
      real_t tmp_254 = tmp_10*tmp_251 + tmp_252*tmp_33 + tmp_253*tmp_35;
      real_t tmp_255 = 1.0*tmp_220;
      real_t tmp_256 = tmp_251*tmp_39 + tmp_252*tmp_40 + tmp_253*tmp_41;
      real_t tmp_257 = tmp_251*tmp_44 + tmp_252*tmp_45 + tmp_253*tmp_46;
      real_t tmp_258 = tmp_254*tmp_255 + tmp_255*tmp_256 + tmp_255*tmp_257;
      real_t tmp_259 = 2.0*tmp_220;
      real_t tmp_260 = 0.037402527819592891*tmp_83*std::abs(tmp_227);
      real_t tmp_261 = 2.2849042085964606;
      real_t tmp_262 = 0.58767356034867835;
      real_t tmp_263 = 0.56149122317684275;
      real_t tmp_264 = tmp_261 + tmp_262 + tmp_263 - 3.0;
      real_t tmp_265 = Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_8;
      real_t tmp_266 = Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_6;
      real_t tmp_267 = Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_7;
      real_t tmp_268 = Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_7;
      real_t tmp_269 = Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_8;
      real_t tmp_270 = Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_6;
      real_t tmp_271 = Blending_DF_Tetrahedron_5_3*tmp_267 - Blending_DF_Tetrahedron_5_3*tmp_269 + Blending_DF_Tetrahedron_5_4*tmp_265 - Blending_DF_Tetrahedron_5_4*tmp_270 + Blending_DF_Tetrahedron_5_5*tmp_266 - Blending_DF_Tetrahedron_5_5*tmp_268;
      real_t tmp_272 = tmp_30/tmp_271;
      real_t tmp_273 = tmp_272*(Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_4 - Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_3);
      real_t tmp_274 = tmp_272*(-Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_5 + Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_3);
      real_t tmp_275 = tmp_272*(Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_5 - Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_4);
      real_t tmp_276 = tmp_10*tmp_273 + tmp_274*tmp_33 + tmp_275*tmp_35;
      real_t tmp_277 = tmp_264*tmp_276;
      real_t tmp_278 = tmp_273*tmp_39 + tmp_274*tmp_40 + tmp_275*tmp_41;
      real_t tmp_279 = tmp_264*tmp_278;
      real_t tmp_280 = tmp_273*tmp_44 + tmp_274*tmp_45 + tmp_275*tmp_46;
      real_t tmp_281 = tmp_264*tmp_280;
      real_t tmp_282 = 0.5*tmp_277 + 0.5*tmp_279 + 0.5*tmp_281;
      real_t tmp_283 = 2*tmp_282;
      real_t tmp_284 = tmp_272*(Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_7 - Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_6);
      real_t tmp_285 = tmp_272*(-Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_8 + Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_6);
      real_t tmp_286 = tmp_272*(Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_8 - Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_7);
      real_t tmp_287 = tmp_10*tmp_284 + tmp_285*tmp_33 + tmp_286*tmp_35;
      real_t tmp_288 = tmp_264*tmp_287;
      real_t tmp_289 = tmp_284*tmp_39 + tmp_285*tmp_40 + tmp_286*tmp_41;
      real_t tmp_290 = tmp_264*tmp_289;
      real_t tmp_291 = tmp_284*tmp_44 + tmp_285*tmp_45 + tmp_286*tmp_46;
      real_t tmp_292 = tmp_264*tmp_291;
      real_t tmp_293 = 0.5*tmp_288 + 0.5*tmp_290 + 0.5*tmp_292;
      real_t tmp_294 = 2*tmp_293;
      real_t tmp_295 = tmp_272*(tmp_266 - tmp_268);
      real_t tmp_296 = tmp_272*(tmp_265 - tmp_270);
      real_t tmp_297 = tmp_272*(tmp_267 - tmp_269);
      real_t tmp_298 = tmp_10*tmp_295 + tmp_296*tmp_33 + tmp_297*tmp_35;
      real_t tmp_299 = 1.0*tmp_264;
      real_t tmp_300 = tmp_295*tmp_39 + tmp_296*tmp_40 + tmp_297*tmp_41;
      real_t tmp_301 = tmp_295*tmp_44 + tmp_296*tmp_45 + tmp_297*tmp_46;
      real_t tmp_302 = tmp_298*tmp_299 + tmp_299*tmp_300 + tmp_299*tmp_301;
      real_t tmp_303 = 2.0*tmp_264;
      real_t tmp_304 = 0.042000663468250377*tmp_83*std::abs(tmp_271);
      real_t tmp_305 = tmp_0 - 1.0;
      real_t tmp_306 = 2.0*tmp_305;
      real_t tmp_307 = 2.0*tmp_68;
      real_t tmp_308 = tmp_85 - 1.0;
      real_t tmp_309 = 2.0*tmp_308;
      real_t tmp_310 = 2.0*tmp_125;
      real_t tmp_311 = tmp_129 - 1.0;
      real_t tmp_312 = 2.0*tmp_311;
      real_t tmp_313 = 2.0*tmp_169;
      real_t tmp_314 = tmp_173 - 1.0;
      real_t tmp_315 = 2.0*tmp_314;
      real_t tmp_316 = 2.0*tmp_213;
      real_t tmp_317 = tmp_217 - 1.0;
      real_t tmp_318 = 2.0*tmp_317;
      real_t tmp_319 = 2.0*tmp_257;
      real_t tmp_320 = tmp_261 - 1.0;
      real_t tmp_321 = 2.0*tmp_320;
      real_t tmp_322 = 2.0*tmp_301;
      real_t tmp_323 = tmp_1 - 1.0;
      real_t tmp_324 = 2.0*tmp_323;
      real_t tmp_325 = 2.0*tmp_67;
      real_t tmp_326 = tmp_86 - 1.0;
      real_t tmp_327 = 2.0*tmp_326;
      real_t tmp_328 = 2.0*tmp_124;
      real_t tmp_329 = tmp_130 - 1.0;
      real_t tmp_330 = 2.0*tmp_329;
      real_t tmp_331 = 2.0*tmp_168;
      real_t tmp_332 = tmp_174 - 1.0;
      real_t tmp_333 = 2.0*tmp_332;
      real_t tmp_334 = 2.0*tmp_212;
      real_t tmp_335 = tmp_218 - 1.0;
      real_t tmp_336 = 2.0*tmp_335;
      real_t tmp_337 = 2.0*tmp_256;
      real_t tmp_338 = tmp_262 - 1.0;
      real_t tmp_339 = 2.0*tmp_338;
      real_t tmp_340 = 2.0*tmp_300;
      real_t tmp_341 = tmp_2 - 1.0;
      real_t tmp_342 = 2.0*tmp_341;
      real_t tmp_343 = 2.0*tmp_65;
      real_t tmp_344 = tmp_87 - 1.0;
      real_t tmp_345 = 2.0*tmp_344;
      real_t tmp_346 = 2.0*tmp_122;
      real_t tmp_347 = tmp_131 - 1.0;
      real_t tmp_348 = 2.0*tmp_347;
      real_t tmp_349 = 2.0*tmp_166;
      real_t tmp_350 = tmp_175 - 1.0;
      real_t tmp_351 = 2.0*tmp_350;
      real_t tmp_352 = 2.0*tmp_210;
      real_t tmp_353 = tmp_219 - 1.0;
      real_t tmp_354 = 2.0*tmp_353;
      real_t tmp_355 = 2.0*tmp_254;
      real_t tmp_356 = tmp_263 - 1.0;
      real_t tmp_357 = 2.0*tmp_356;
      real_t tmp_358 = 2.0*tmp_298;
      real_t tmp_359 = 1.4708028039367815;
      real_t tmp_360 = tmp_359*tmp_65;
      real_t tmp_361 = 0.10174693050945161;
      real_t tmp_362 = tmp_361*tmp_67;
      real_t tmp_363 = tmp_1*tmp_37;
      real_t tmp_364 = tmp_2*tmp_42;
      real_t tmp_365 = tmp_1*tmp_54;
      real_t tmp_366 = tmp_2*tmp_56;
      real_t tmp_367 = 2.2521904169883697;
      real_t tmp_368 = tmp_122*tmp_367;
      real_t tmp_369 = 2.8970146395642704;
      real_t tmp_370 = tmp_124*tmp_369;
      real_t tmp_371 = tmp_100*tmp_86;
      real_t tmp_372 = tmp_102*tmp_87;
      real_t tmp_373 = tmp_111*tmp_86;
      real_t tmp_374 = tmp_113*tmp_87;
      real_t tmp_375 = 0.091226635556457367;
      real_t tmp_376 = tmp_166*tmp_375;
      real_t tmp_377 = 2.8689657637350714;
      real_t tmp_378 = tmp_168*tmp_377;
      real_t tmp_379 = tmp_130*tmp_144;
      real_t tmp_380 = tmp_131*tmp_146;
      real_t tmp_381 = tmp_130*tmp_155;
      real_t tmp_382 = tmp_131*tmp_157;
      real_t tmp_383 = 1.2225451447274185;
      real_t tmp_384 = tmp_210*tmp_383;
      real_t tmp_385 = 5.1079463996938133;
      real_t tmp_386 = tmp_212*tmp_385;
      real_t tmp_387 = tmp_174*tmp_188;
      real_t tmp_388 = tmp_175*tmp_190;
      real_t tmp_389 = tmp_174*tmp_199;
      real_t tmp_390 = tmp_175*tmp_201;
      real_t tmp_391 = 4.6853024452417262;
      real_t tmp_392 = tmp_254*tmp_391;
      real_t tmp_393 = 1.046777351616772;
      real_t tmp_394 = tmp_256*tmp_393;
      real_t tmp_395 = tmp_218*tmp_232;
      real_t tmp_396 = tmp_219*tmp_234;
      real_t tmp_397 = tmp_218*tmp_243;
      real_t tmp_398 = tmp_219*tmp_245;
      real_t tmp_399 = 1.1753471206973567;
      real_t tmp_400 = tmp_298*tmp_399;
      real_t tmp_401 = 1.1229824463536855;
      real_t tmp_402 = tmp_300*tmp_401;
      real_t tmp_403 = tmp_262*tmp_276;
      real_t tmp_404 = tmp_263*tmp_278;
      real_t tmp_405 = tmp_262*tmp_287;
      real_t tmp_406 = tmp_263*tmp_289;
      real_t tmp_407 = 1.2960119335881961;
      real_t tmp_408 = tmp_407*tmp_65;
      real_t tmp_409 = tmp_361*tmp_68;
      real_t tmp_410 = tmp_0*tmp_37;
      real_t tmp_411 = tmp_2*tmp_47;
      real_t tmp_412 = tmp_0*tmp_54;
      real_t tmp_413 = tmp_2*tmp_58;
      real_t tmp_414 = 0.087241697689513925;
      real_t tmp_415 = tmp_122*tmp_414;
      real_t tmp_416 = tmp_125*tmp_369;
      real_t tmp_417 = tmp_100*tmp_85;
      real_t tmp_418 = tmp_104*tmp_87;
      real_t tmp_419 = tmp_111*tmp_85;
      real_t tmp_420 = tmp_115*tmp_87;
      real_t tmp_421 = 1.5209360195142712;
      real_t tmp_422 = tmp_166*tmp_421;
      real_t tmp_423 = tmp_169*tmp_377;
      real_t tmp_424 = tmp_129*tmp_144;
      real_t tmp_425 = tmp_131*tmp_148;
      real_t tmp_426 = tmp_129*tmp_155;
      real_t tmp_427 = tmp_131*tmp_159;
      real_t tmp_428 = 1.366535401319912;
      real_t tmp_429 = tmp_210*tmp_428;
      real_t tmp_430 = tmp_213*tmp_385;
      real_t tmp_431 = tmp_173*tmp_188;
      real_t tmp_432 = tmp_175*tmp_192;
      real_t tmp_433 = tmp_173*tmp_199;
      real_t tmp_434 = tmp_175*tmp_203;
      real_t tmp_435 = 1.2694813058195249;
      real_t tmp_436 = tmp_254*tmp_435;
      real_t tmp_437 = tmp_257*tmp_393;
      real_t tmp_438 = tmp_217*tmp_232;
      real_t tmp_439 = tmp_219*tmp_236;
      real_t tmp_440 = tmp_217*tmp_243;
      real_t tmp_441 = tmp_219*tmp_247;
      real_t tmp_442 = 4.5698084171929212;
      real_t tmp_443 = tmp_298*tmp_442;
      real_t tmp_444 = tmp_301*tmp_401;
      real_t tmp_445 = tmp_261*tmp_276;
      real_t tmp_446 = tmp_263*tmp_280;
      real_t tmp_447 = tmp_261*tmp_287;
      real_t tmp_448 = tmp_263*tmp_291;
      real_t tmp_449 = tmp_407*tmp_67;
      real_t tmp_450 = tmp_359*tmp_68;
      real_t tmp_451 = tmp_0*tmp_42;
      real_t tmp_452 = tmp_1*tmp_47;
      real_t tmp_453 = tmp_0*tmp_56;
      real_t tmp_454 = tmp_1*tmp_58;
      real_t tmp_455 = tmp_124*tmp_414;
      real_t tmp_456 = tmp_125*tmp_367;
      real_t tmp_457 = tmp_102*tmp_85;
      real_t tmp_458 = tmp_104*tmp_86;
      real_t tmp_459 = tmp_113*tmp_85;
      real_t tmp_460 = tmp_115*tmp_86;
      real_t tmp_461 = tmp_168*tmp_421;
      real_t tmp_462 = tmp_169*tmp_375;
      real_t tmp_463 = tmp_129*tmp_146;
      real_t tmp_464 = tmp_130*tmp_148;
      real_t tmp_465 = tmp_129*tmp_157;
      real_t tmp_466 = tmp_130*tmp_159;
      real_t tmp_467 = tmp_212*tmp_428;
      real_t tmp_468 = tmp_213*tmp_383;
      real_t tmp_469 = tmp_173*tmp_190;
      real_t tmp_470 = tmp_174*tmp_192;
      real_t tmp_471 = tmp_173*tmp_201;
      real_t tmp_472 = tmp_174*tmp_203;
      real_t tmp_473 = tmp_256*tmp_435;
      real_t tmp_474 = tmp_257*tmp_391;
      real_t tmp_475 = tmp_217*tmp_234;
      real_t tmp_476 = tmp_218*tmp_236;
      real_t tmp_477 = tmp_217*tmp_245;
      real_t tmp_478 = tmp_218*tmp_247;
      real_t tmp_479 = tmp_300*tmp_442;
      real_t tmp_480 = tmp_301*tmp_399;
      real_t tmp_481 = tmp_261*tmp_278;
      real_t tmp_482 = tmp_262*tmp_280;
      real_t tmp_483 = tmp_261*tmp_289;
      real_t tmp_484 = tmp_262*tmp_291;
      real_t tmp_485 = -tmp_1;
      real_t tmp_486 = 4.0 - tmp_0;
      real_t tmp_487 = -tmp_361 + tmp_485 + tmp_486;
      real_t tmp_488 = -tmp_86;
      real_t tmp_489 = 4.0 - tmp_85;
      real_t tmp_490 = -tmp_369 + tmp_488 + tmp_489;
      real_t tmp_491 = -tmp_130;
      real_t tmp_492 = 4.0 - tmp_129;
      real_t tmp_493 = -tmp_377 + tmp_491 + tmp_492;
      real_t tmp_494 = -tmp_174;
      real_t tmp_495 = 4.0 - tmp_173;
      real_t tmp_496 = -tmp_385 + tmp_494 + tmp_495;
      real_t tmp_497 = -tmp_218;
      real_t tmp_498 = 4.0 - tmp_217;
      real_t tmp_499 = -tmp_393 + tmp_497 + tmp_498;
      real_t tmp_500 = -tmp_262;
      real_t tmp_501 = 4.0 - tmp_261;
      real_t tmp_502 = -tmp_401 + tmp_500 + tmp_501;
      real_t tmp_503 = -tmp_2;
      real_t tmp_504 = -tmp_359 + tmp_486 + tmp_503;
      real_t tmp_505 = -tmp_87;
      real_t tmp_506 = -tmp_367 + tmp_489 + tmp_505;
      real_t tmp_507 = -tmp_131;
      real_t tmp_508 = -tmp_375 + tmp_492 + tmp_507;
      real_t tmp_509 = -tmp_175;
      real_t tmp_510 = -tmp_383 + tmp_495 + tmp_509;
      real_t tmp_511 = -tmp_219;
      real_t tmp_512 = -tmp_391 + tmp_498 + tmp_511;
      real_t tmp_513 = -tmp_263;
      real_t tmp_514 = -tmp_399 + tmp_501 + tmp_513;
      real_t tmp_515 = -tmp_407 + tmp_485 + tmp_503 + 4.0;
      real_t tmp_516 = -tmp_414 + tmp_488 + tmp_505 + 4.0;
      real_t tmp_517 = -tmp_421 + tmp_491 + tmp_507 + 4.0;
      real_t tmp_518 = -tmp_428 + tmp_494 + tmp_509 + 4.0;
      real_t tmp_519 = -tmp_435 + tmp_497 + tmp_511 + 4.0;
      real_t tmp_520 = -tmp_442 + tmp_500 + tmp_513 + 4.0;
      real_t a_0_0 = tmp_128*(tmp_107*(tmp_101 + tmp_103 + tmp_105) + tmp_118*(tmp_112 + tmp_114 + tmp_116) + tmp_126*(tmp_122*tmp_127 + tmp_124*tmp_127 + tmp_125*tmp_127)) + tmp_172*(tmp_151*(tmp_145 + tmp_147 + tmp_149) + tmp_162*(tmp_156 + tmp_158 + tmp_160) + tmp_170*(tmp_166*tmp_171 + tmp_168*tmp_171 + tmp_169*tmp_171)) + tmp_216*(tmp_195*(tmp_189 + tmp_191 + tmp_193) + tmp_206*(tmp_200 + tmp_202 + tmp_204) + tmp_214*(tmp_210*tmp_215 + tmp_212*tmp_215 + tmp_213*tmp_215)) + tmp_260*(tmp_239*(tmp_233 + tmp_235 + tmp_237) + tmp_250*(tmp_244 + tmp_246 + tmp_248) + tmp_258*(tmp_254*tmp_259 + tmp_256*tmp_259 + tmp_257*tmp_259)) + tmp_304*(tmp_283*(tmp_277 + tmp_279 + tmp_281) + tmp_294*(tmp_288 + tmp_290 + tmp_292) + tmp_302*(tmp_298*tmp_303 + tmp_300*tmp_303 + tmp_301*tmp_303)) + tmp_84*(tmp_50*(tmp_38 + tmp_43 + tmp_48) + tmp_61*(tmp_55 + tmp_57 + tmp_59) + tmp_69*(tmp_65*tmp_70 + tmp_67*tmp_70 + tmp_68*tmp_70));
      real_t a_0_1 = tmp_128*(tmp_104*tmp_106*tmp_309 + tmp_115*tmp_117*tmp_309 + tmp_126*tmp_308*tmp_310) + tmp_172*(tmp_148*tmp_150*tmp_312 + tmp_159*tmp_161*tmp_312 + tmp_170*tmp_311*tmp_313) + tmp_216*(tmp_192*tmp_194*tmp_315 + tmp_203*tmp_205*tmp_315 + tmp_214*tmp_314*tmp_316) + tmp_260*(tmp_236*tmp_238*tmp_318 + tmp_247*tmp_249*tmp_318 + tmp_258*tmp_317*tmp_319) + tmp_304*(tmp_280*tmp_282*tmp_321 + tmp_291*tmp_293*tmp_321 + tmp_302*tmp_320*tmp_322) + tmp_84*(tmp_305*tmp_307*tmp_69 + tmp_306*tmp_47*tmp_49 + tmp_306*tmp_58*tmp_60);
      real_t a_0_2 = tmp_128*(tmp_102*tmp_106*tmp_327 + tmp_113*tmp_117*tmp_327 + tmp_126*tmp_326*tmp_328) + tmp_172*(tmp_146*tmp_150*tmp_330 + tmp_157*tmp_161*tmp_330 + tmp_170*tmp_329*tmp_331) + tmp_216*(tmp_190*tmp_194*tmp_333 + tmp_201*tmp_205*tmp_333 + tmp_214*tmp_332*tmp_334) + tmp_260*(tmp_234*tmp_238*tmp_336 + tmp_245*tmp_249*tmp_336 + tmp_258*tmp_335*tmp_337) + tmp_304*(tmp_278*tmp_282*tmp_339 + tmp_289*tmp_293*tmp_339 + tmp_302*tmp_338*tmp_340) + tmp_84*(tmp_323*tmp_325*tmp_69 + tmp_324*tmp_42*tmp_49 + tmp_324*tmp_56*tmp_60);
      real_t a_0_3 = tmp_128*(tmp_100*tmp_106*tmp_345 + tmp_111*tmp_117*tmp_345 + tmp_126*tmp_344*tmp_346) + tmp_172*(tmp_144*tmp_150*tmp_348 + tmp_155*tmp_161*tmp_348 + tmp_170*tmp_347*tmp_349) + tmp_216*(tmp_188*tmp_194*tmp_351 + tmp_199*tmp_205*tmp_351 + tmp_214*tmp_350*tmp_352) + tmp_260*(tmp_232*tmp_238*tmp_354 + tmp_243*tmp_249*tmp_354 + tmp_258*tmp_353*tmp_355) + tmp_304*(tmp_276*tmp_282*tmp_357 + tmp_287*tmp_293*tmp_357 + tmp_302*tmp_356*tmp_358) + tmp_84*(tmp_341*tmp_343*tmp_69 + tmp_342*tmp_37*tmp_49 + tmp_342*tmp_54*tmp_60);
      real_t a_0_4 = tmp_128*(tmp_107*(tmp_371 + tmp_372) + tmp_118*(tmp_373 + tmp_374) + tmp_126*(tmp_368 + tmp_370)) + tmp_172*(tmp_151*(tmp_379 + tmp_380) + tmp_162*(tmp_381 + tmp_382) + tmp_170*(tmp_376 + tmp_378)) + tmp_216*(tmp_195*(tmp_387 + tmp_388) + tmp_206*(tmp_389 + tmp_390) + tmp_214*(tmp_384 + tmp_386)) + tmp_260*(tmp_239*(tmp_395 + tmp_396) + tmp_250*(tmp_397 + tmp_398) + tmp_258*(tmp_392 + tmp_394)) + tmp_304*(tmp_283*(tmp_403 + tmp_404) + tmp_294*(tmp_405 + tmp_406) + tmp_302*(tmp_400 + tmp_402)) + tmp_84*(tmp_50*(tmp_363 + tmp_364) + tmp_61*(tmp_365 + tmp_366) + tmp_69*(tmp_360 + tmp_362));
      real_t a_0_5 = tmp_128*(tmp_107*(tmp_417 + tmp_418) + tmp_118*(tmp_419 + tmp_420) + tmp_126*(tmp_415 + tmp_416)) + tmp_172*(tmp_151*(tmp_424 + tmp_425) + tmp_162*(tmp_426 + tmp_427) + tmp_170*(tmp_422 + tmp_423)) + tmp_216*(tmp_195*(tmp_431 + tmp_432) + tmp_206*(tmp_433 + tmp_434) + tmp_214*(tmp_429 + tmp_430)) + tmp_260*(tmp_239*(tmp_438 + tmp_439) + tmp_250*(tmp_440 + tmp_441) + tmp_258*(tmp_436 + tmp_437)) + tmp_304*(tmp_283*(tmp_445 + tmp_446) + tmp_294*(tmp_447 + tmp_448) + tmp_302*(tmp_443 + tmp_444)) + tmp_84*(tmp_50*(tmp_410 + tmp_411) + tmp_61*(tmp_412 + tmp_413) + tmp_69*(tmp_408 + tmp_409));
      real_t a_0_6 = tmp_128*(tmp_107*(tmp_457 + tmp_458) + tmp_118*(tmp_459 + tmp_460) + tmp_126*(tmp_455 + tmp_456)) + tmp_172*(tmp_151*(tmp_463 + tmp_464) + tmp_162*(tmp_465 + tmp_466) + tmp_170*(tmp_461 + tmp_462)) + tmp_216*(tmp_195*(tmp_469 + tmp_470) + tmp_206*(tmp_471 + tmp_472) + tmp_214*(tmp_467 + tmp_468)) + tmp_260*(tmp_239*(tmp_475 + tmp_476) + tmp_250*(tmp_477 + tmp_478) + tmp_258*(tmp_473 + tmp_474)) + tmp_304*(tmp_283*(tmp_481 + tmp_482) + tmp_294*(tmp_483 + tmp_484) + tmp_302*(tmp_479 + tmp_480)) + tmp_84*(tmp_50*(tmp_451 + tmp_452) + tmp_61*(tmp_453 + tmp_454) + tmp_69*(tmp_449 + tmp_450));
      real_t a_0_7 = tmp_128*(tmp_107*(tmp_100*tmp_490 - tmp_372 - tmp_418) + tmp_118*(tmp_111*tmp_490 - tmp_374 - tmp_420) + tmp_126*(tmp_346*tmp_490 - tmp_370 - tmp_416)) + tmp_172*(tmp_151*(tmp_144*tmp_493 - tmp_380 - tmp_425) + tmp_162*(tmp_155*tmp_493 - tmp_382 - tmp_427) + tmp_170*(tmp_349*tmp_493 - tmp_378 - tmp_423)) + tmp_216*(tmp_195*(tmp_188*tmp_496 - tmp_388 - tmp_432) + tmp_206*(tmp_199*tmp_496 - tmp_390 - tmp_434) + tmp_214*(tmp_352*tmp_496 - tmp_386 - tmp_430)) + tmp_260*(tmp_239*(tmp_232*tmp_499 - tmp_396 - tmp_439) + tmp_250*(tmp_243*tmp_499 - tmp_398 - tmp_441) + tmp_258*(tmp_355*tmp_499 - tmp_394 - tmp_437)) + tmp_304*(tmp_283*(tmp_276*tmp_502 - tmp_404 - tmp_446) + tmp_294*(tmp_287*tmp_502 - tmp_406 - tmp_448) + tmp_302*(tmp_358*tmp_502 - tmp_402 - tmp_444)) + tmp_84*(tmp_50*(-tmp_364 + tmp_37*tmp_487 - tmp_411) + tmp_61*(-tmp_366 - tmp_413 + tmp_487*tmp_54) + tmp_69*(tmp_343*tmp_487 - tmp_362 - tmp_409));
      real_t a_0_8 = tmp_128*(tmp_107*(tmp_102*tmp_506 - tmp_371 - tmp_458) + tmp_118*(tmp_113*tmp_506 - tmp_373 - tmp_460) + tmp_126*(tmp_328*tmp_506 - tmp_368 - tmp_456)) + tmp_172*(tmp_151*(tmp_146*tmp_508 - tmp_379 - tmp_464) + tmp_162*(tmp_157*tmp_508 - tmp_381 - tmp_466) + tmp_170*(tmp_331*tmp_508 - tmp_376 - tmp_462)) + tmp_216*(tmp_195*(tmp_190*tmp_510 - tmp_387 - tmp_470) + tmp_206*(tmp_201*tmp_510 - tmp_389 - tmp_472) + tmp_214*(tmp_334*tmp_510 - tmp_384 - tmp_468)) + tmp_260*(tmp_239*(tmp_234*tmp_512 - tmp_395 - tmp_476) + tmp_250*(tmp_245*tmp_512 - tmp_397 - tmp_478) + tmp_258*(tmp_337*tmp_512 - tmp_392 - tmp_474)) + tmp_304*(tmp_283*(tmp_278*tmp_514 - tmp_403 - tmp_482) + tmp_294*(tmp_289*tmp_514 - tmp_405 - tmp_484) + tmp_302*(tmp_340*tmp_514 - tmp_400 - tmp_480)) + tmp_84*(tmp_50*(-tmp_363 + tmp_42*tmp_504 - tmp_452) + tmp_61*(-tmp_365 - tmp_454 + tmp_504*tmp_56) + tmp_69*(tmp_325*tmp_504 - tmp_360 - tmp_450));
      real_t a_0_9 = tmp_128*(tmp_107*(tmp_104*tmp_516 - tmp_417 - tmp_457) + tmp_118*(tmp_115*tmp_516 - tmp_419 - tmp_459) + tmp_126*(tmp_310*tmp_516 - tmp_415 - tmp_455)) + tmp_172*(tmp_151*(tmp_148*tmp_517 - tmp_424 - tmp_463) + tmp_162*(tmp_159*tmp_517 - tmp_426 - tmp_465) + tmp_170*(tmp_313*tmp_517 - tmp_422 - tmp_461)) + tmp_216*(tmp_195*(tmp_192*tmp_518 - tmp_431 - tmp_469) + tmp_206*(tmp_203*tmp_518 - tmp_433 - tmp_471) + tmp_214*(tmp_316*tmp_518 - tmp_429 - tmp_467)) + tmp_260*(tmp_239*(tmp_236*tmp_519 - tmp_438 - tmp_475) + tmp_250*(tmp_247*tmp_519 - tmp_440 - tmp_477) + tmp_258*(tmp_319*tmp_519 - tmp_436 - tmp_473)) + tmp_304*(tmp_283*(tmp_280*tmp_520 - tmp_445 - tmp_481) + tmp_294*(tmp_291*tmp_520 - tmp_447 - tmp_483) + tmp_302*(tmp_322*tmp_520 - tmp_443 - tmp_479)) + tmp_84*(tmp_50*(-tmp_410 - tmp_451 + tmp_47*tmp_515) + tmp_61*(-tmp_412 - tmp_453 + tmp_515*tmp_58) + tmp_69*(tmp_307*tmp_515 - tmp_408 - tmp_449));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_1_blending_q3::Blending_DF_Triangle( real_t in_0, real_t in_1, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3 ) const
   {
      Point3D  mappedPt( {in_0, in_1, 0} );
      Matrix2r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 1, 0 );
      *out_3 = DPsi( 1, 1 );
   }

   void p2_epsiloncc_1_1_blending_q3::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
