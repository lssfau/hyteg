/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsiloncc_affine_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_epsiloncc_0_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = 0.5*tmp_11 + 0.5*tmp_9;
      real_t tmp_14 = 2*tmp_13;
      real_t tmp_15 = 1.0*tmp_8;
      real_t tmp_16 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_17 = tmp_15*tmp_16 + tmp_15*tmp_3;
      real_t tmp_18 = 2.0*tmp_8;
      real_t tmp_19 = tmp_16*tmp_18 + tmp_18*tmp_3;
      real_t tmp_20 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_21 = 0.16666666666666666*tmp_20;
      real_t tmp_22 = 2.6666666666666665;
      real_t tmp_23 = 0.66666666666666663;
      real_t tmp_24 = tmp_5*(tmp_22 + tmp_23 - 3);
      real_t tmp_25 = tmp_1*tmp_24;
      real_t tmp_26 = tmp_10*tmp_24;
      real_t tmp_27 = tmp_25 + tmp_26;
      real_t tmp_28 = 0.5*tmp_25 + 0.5*tmp_26;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_24;
      real_t tmp_31 = tmp_16*tmp_30 + tmp_3*tmp_30;
      real_t tmp_32 = 2.0*tmp_24;
      real_t tmp_33 = tmp_16*tmp_32 + tmp_3*tmp_32;
      real_t tmp_34 = 0.16666666666666666*tmp_20;
      real_t tmp_35 = 0.66666666666666663;
      real_t tmp_36 = 0.66666666666666663;
      real_t tmp_37 = tmp_5*(tmp_35 + tmp_36 - 3);
      real_t tmp_38 = tmp_1*tmp_37;
      real_t tmp_39 = tmp_10*tmp_37;
      real_t tmp_40 = tmp_38 + tmp_39;
      real_t tmp_41 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_42 = 2*tmp_41;
      real_t tmp_43 = 1.0*tmp_37;
      real_t tmp_44 = tmp_16*tmp_43 + tmp_3*tmp_43;
      real_t tmp_45 = 2.0*tmp_37;
      real_t tmp_46 = tmp_16*tmp_45 + tmp_3*tmp_45;
      real_t tmp_47 = 0.16666666666666666*tmp_20;
      real_t tmp_48 = tmp_6 - 1;
      real_t tmp_49 = tmp_10*tmp_5;
      real_t tmp_50 = 2.0*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = 2.0*tmp_5;
      real_t tmp_53 = tmp_3*tmp_52;
      real_t tmp_54 = tmp_48*tmp_53;
      real_t tmp_55 = tmp_22 - 1;
      real_t tmp_56 = tmp_50*tmp_55;
      real_t tmp_57 = tmp_53*tmp_55;
      real_t tmp_58 = tmp_35 - 1;
      real_t tmp_59 = tmp_50*tmp_58;
      real_t tmp_60 = tmp_53*tmp_58;
      real_t tmp_61 = tmp_7 - 1;
      real_t tmp_62 = tmp_1*tmp_5;
      real_t tmp_63 = 2.0*tmp_62;
      real_t tmp_64 = tmp_61*tmp_63;
      real_t tmp_65 = tmp_16*tmp_52;
      real_t tmp_66 = tmp_61*tmp_65;
      real_t tmp_67 = tmp_23 - 1;
      real_t tmp_68 = tmp_63*tmp_67;
      real_t tmp_69 = tmp_65*tmp_67;
      real_t tmp_70 = tmp_36 - 1;
      real_t tmp_71 = tmp_63*tmp_70;
      real_t tmp_72 = tmp_65*tmp_70;
      real_t tmp_73 = 8.0*tmp_5;
      real_t tmp_74 = tmp_16*tmp_73;
      real_t tmp_75 = 0.16666666666666666*tmp_74;
      real_t tmp_76 = tmp_3*tmp_73;
      real_t tmp_77 = 0.66666666666666663*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = 4.0*tmp_62;
      real_t tmp_80 = 0.16666666666666666*tmp_79;
      real_t tmp_81 = 4.0*tmp_49;
      real_t tmp_82 = 0.66666666666666663*tmp_81;
      real_t tmp_83 = tmp_80 + tmp_82;
      real_t tmp_84 = 0.66666666666666663*tmp_74;
      real_t tmp_85 = 0.16666666666666666*tmp_76;
      real_t tmp_86 = tmp_84 + tmp_85;
      real_t tmp_87 = 0.66666666666666663*tmp_79;
      real_t tmp_88 = 0.16666666666666666*tmp_81;
      real_t tmp_89 = tmp_87 + tmp_88;
      real_t tmp_90 = 0.16666666666666666*tmp_74;
      real_t tmp_91 = 0.16666666666666666*tmp_76;
      real_t tmp_92 = tmp_90 + tmp_91;
      real_t tmp_93 = 0.16666666666666666*tmp_79;
      real_t tmp_94 = 0.16666666666666666*tmp_81;
      real_t tmp_95 = tmp_93 + tmp_94;
      real_t tmp_96 = -tmp_6 - 1.333333333333333;
      real_t tmp_97 = tmp_62*tmp_96;
      real_t tmp_98 = -tmp_82 + tmp_97;
      real_t tmp_99 = tmp_65*tmp_96 - tmp_77;
      real_t tmp_100 = 2.666666666666667 - tmp_22;
      real_t tmp_101 = tmp_100*tmp_62;
      real_t tmp_102 = tmp_101 - tmp_88;
      real_t tmp_103 = tmp_100*tmp_65 - tmp_85;
      real_t tmp_104 = 2.666666666666667 - tmp_35;
      real_t tmp_105 = tmp_104*tmp_62;
      real_t tmp_106 = tmp_105 - tmp_94;
      real_t tmp_107 = tmp_104*tmp_65 - tmp_91;
      real_t tmp_108 = 2.666666666666667 - tmp_7;
      real_t tmp_109 = tmp_108*tmp_49;
      real_t tmp_110 = tmp_109 - tmp_80;
      real_t tmp_111 = tmp_108*tmp_53 - tmp_75;
      real_t tmp_112 = -tmp_23 - 1.333333333333333;
      real_t tmp_113 = tmp_112*tmp_49;
      real_t tmp_114 = tmp_113 - tmp_87;
      real_t tmp_115 = tmp_112*tmp_53 - tmp_84;
      real_t tmp_116 = 2.666666666666667 - tmp_36;
      real_t tmp_117 = tmp_116*tmp_49;
      real_t tmp_118 = tmp_117 - tmp_93;
      real_t tmp_119 = tmp_116*tmp_53 - tmp_90;
      real_t tmp_120 = 1.0*tmp_49;
      real_t tmp_121 = tmp_120*tmp_48;
      real_t tmp_122 = 1.0*tmp_5;
      real_t tmp_123 = tmp_122*tmp_3;
      real_t tmp_124 = tmp_123*tmp_48;
      real_t tmp_125 = tmp_120*tmp_55;
      real_t tmp_126 = tmp_123*tmp_55;
      real_t tmp_127 = tmp_120*tmp_58;
      real_t tmp_128 = tmp_123*tmp_58;
      real_t tmp_129 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_130 = tmp_129*(tmp_48*tmp_48);
      real_t tmp_131 = 1.0*(tmp_10*tmp_10);
      real_t tmp_132 = 2.0*(tmp_3*tmp_3);
      real_t tmp_133 = tmp_129*(tmp_55*tmp_55);
      real_t tmp_134 = tmp_129*(tmp_58*tmp_58);
      real_t tmp_135 = tmp_129*tmp_48*tmp_61;
      real_t tmp_136 = 1.0*tmp_1*tmp_10;
      real_t tmp_137 = 2.0*tmp_16*tmp_3;
      real_t tmp_138 = tmp_129*tmp_136;
      real_t tmp_139 = tmp_55*tmp_67;
      real_t tmp_140 = tmp_129*tmp_137;
      real_t tmp_141 = tmp_58*tmp_70;
      real_t tmp_142 = tmp_21*(tmp_135*tmp_136 + tmp_135*tmp_137) + tmp_34*(tmp_138*tmp_139 + tmp_139*tmp_140) + tmp_47*(tmp_138*tmp_141 + tmp_140*tmp_141);
      real_t tmp_143 = 1.0*tmp_62;
      real_t tmp_144 = tmp_143*tmp_61;
      real_t tmp_145 = tmp_122*tmp_16;
      real_t tmp_146 = tmp_145*tmp_61;
      real_t tmp_147 = tmp_143*tmp_67;
      real_t tmp_148 = tmp_145*tmp_67;
      real_t tmp_149 = tmp_143*tmp_70;
      real_t tmp_150 = tmp_145*tmp_70;
      real_t tmp_151 = tmp_129*(tmp_61*tmp_61);
      real_t tmp_152 = 1.0*(tmp_1*tmp_1);
      real_t tmp_153 = 2.0*(tmp_16*tmp_16);
      real_t tmp_154 = tmp_129*(tmp_67*tmp_67);
      real_t tmp_155 = tmp_129*(tmp_70*tmp_70);
      real_t tmp_156 = 0.16666666666666666*tmp_63;
      real_t tmp_157 = 0.66666666666666663*tmp_50;
      real_t tmp_158 = tmp_156 + tmp_157;
      real_t tmp_159 = 2*tmp_158;
      real_t tmp_160 = 4.0*tmp_5;
      real_t tmp_161 = tmp_16*tmp_160;
      real_t tmp_162 = 0.16666666666666666*tmp_161;
      real_t tmp_163 = tmp_160*tmp_3;
      real_t tmp_164 = 0.66666666666666663*tmp_163;
      real_t tmp_165 = tmp_162 + tmp_164;
      real_t tmp_166 = 0.66666666666666663*tmp_63;
      real_t tmp_167 = 0.16666666666666666*tmp_50;
      real_t tmp_168 = tmp_166 + tmp_167;
      real_t tmp_169 = 2*tmp_168;
      real_t tmp_170 = 0.66666666666666663*tmp_161;
      real_t tmp_171 = 0.16666666666666666*tmp_163;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = 0.16666666666666666*tmp_63;
      real_t tmp_174 = 0.16666666666666666*tmp_50;
      real_t tmp_175 = tmp_173 + tmp_174;
      real_t tmp_176 = 2*tmp_175;
      real_t tmp_177 = 0.16666666666666666*tmp_161;
      real_t tmp_178 = 0.16666666666666666*tmp_163;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = -tmp_157 + 0.5*tmp_97;
      real_t tmp_181 = 2*tmp_180;
      real_t tmp_182 = tmp_145*tmp_96 - tmp_164;
      real_t tmp_183 = 0.5*tmp_101 - tmp_167;
      real_t tmp_184 = 2*tmp_183;
      real_t tmp_185 = tmp_100*tmp_145 - tmp_171;
      real_t tmp_186 = 0.5*tmp_105 - tmp_174;
      real_t tmp_187 = 2*tmp_186;
      real_t tmp_188 = tmp_104*tmp_145 - tmp_178;
      real_t tmp_189 = 0.5*tmp_109 - tmp_156;
      real_t tmp_190 = 2*tmp_189;
      real_t tmp_191 = tmp_108*tmp_123 - tmp_162;
      real_t tmp_192 = 0.5*tmp_113 - tmp_166;
      real_t tmp_193 = 2*tmp_192;
      real_t tmp_194 = tmp_112*tmp_123 - tmp_170;
      real_t tmp_195 = 0.5*tmp_117 - tmp_173;
      real_t tmp_196 = 2*tmp_195;
      real_t tmp_197 = tmp_116*tmp_123 - tmp_177;
      real_t a_0_0 = tmp_21*(tmp_12*tmp_14 + tmp_17*tmp_19) + tmp_34*(tmp_27*tmp_29 + tmp_31*tmp_33) + tmp_47*(tmp_40*tmp_42 + tmp_44*tmp_46);
      real_t a_0_1 = tmp_21*(tmp_13*tmp_51 + tmp_17*tmp_54) + tmp_34*(tmp_28*tmp_56 + tmp_31*tmp_57) + tmp_47*(tmp_41*tmp_59 + tmp_44*tmp_60);
      real_t a_0_2 = tmp_21*(tmp_13*tmp_64 + tmp_17*tmp_66) + tmp_34*(tmp_28*tmp_68 + tmp_31*tmp_69) + tmp_47*(tmp_41*tmp_71 + tmp_44*tmp_72);
      real_t a_0_3 = tmp_21*(tmp_14*tmp_83 + tmp_17*tmp_78) + tmp_34*(tmp_29*tmp_89 + tmp_31*tmp_86) + tmp_47*(tmp_42*tmp_95 + tmp_44*tmp_92);
      real_t a_0_4 = tmp_21*(tmp_14*tmp_98 + tmp_17*tmp_99) + tmp_34*(tmp_102*tmp_29 + tmp_103*tmp_31) + tmp_47*(tmp_106*tmp_42 + tmp_107*tmp_44);
      real_t a_0_5 = tmp_21*(tmp_110*tmp_14 + tmp_111*tmp_17) + tmp_34*(tmp_114*tmp_29 + tmp_115*tmp_31) + tmp_47*(tmp_118*tmp_42 + tmp_119*tmp_44);
      real_t a_1_0 = tmp_21*(tmp_12*tmp_121 + tmp_124*tmp_19) + tmp_34*(tmp_125*tmp_27 + tmp_126*tmp_33) + tmp_47*(tmp_127*tmp_40 + tmp_128*tmp_46);
      real_t a_1_1 = tmp_21*(tmp_130*tmp_131 + tmp_130*tmp_132) + tmp_34*(tmp_131*tmp_133 + tmp_132*tmp_133) + tmp_47*(tmp_131*tmp_134 + tmp_132*tmp_134);
      real_t a_1_2 = tmp_142;
      real_t a_1_3 = tmp_21*(tmp_121*tmp_83 + tmp_124*tmp_78) + tmp_34*(tmp_125*tmp_89 + tmp_126*tmp_86) + tmp_47*(tmp_127*tmp_95 + tmp_128*tmp_92);
      real_t a_1_4 = tmp_21*(tmp_121*tmp_98 + tmp_124*tmp_99) + tmp_34*(tmp_102*tmp_125 + tmp_103*tmp_126) + tmp_47*(tmp_106*tmp_127 + tmp_107*tmp_128);
      real_t a_1_5 = tmp_21*(tmp_110*tmp_121 + tmp_111*tmp_124) + tmp_34*(tmp_114*tmp_125 + tmp_115*tmp_126) + tmp_47*(tmp_118*tmp_127 + tmp_119*tmp_128);
      real_t a_2_0 = tmp_21*(tmp_12*tmp_144 + tmp_146*tmp_19) + tmp_34*(tmp_147*tmp_27 + tmp_148*tmp_33) + tmp_47*(tmp_149*tmp_40 + tmp_150*tmp_46);
      real_t a_2_1 = tmp_142;
      real_t a_2_2 = tmp_21*(tmp_151*tmp_152 + tmp_151*tmp_153) + tmp_34*(tmp_152*tmp_154 + tmp_153*tmp_154) + tmp_47*(tmp_152*tmp_155 + tmp_153*tmp_155);
      real_t a_2_3 = tmp_21*(tmp_144*tmp_83 + tmp_146*tmp_78) + tmp_34*(tmp_147*tmp_89 + tmp_148*tmp_86) + tmp_47*(tmp_149*tmp_95 + tmp_150*tmp_92);
      real_t a_2_4 = tmp_21*(tmp_144*tmp_98 + tmp_146*tmp_99) + tmp_34*(tmp_102*tmp_147 + tmp_103*tmp_148) + tmp_47*(tmp_106*tmp_149 + tmp_107*tmp_150);
      real_t a_2_5 = tmp_21*(tmp_110*tmp_144 + tmp_111*tmp_146) + tmp_34*(tmp_114*tmp_147 + tmp_115*tmp_148) + tmp_47*(tmp_118*tmp_149 + tmp_119*tmp_150);
      real_t a_3_0 = tmp_21*(tmp_12*tmp_159 + tmp_165*tmp_19) + tmp_34*(tmp_169*tmp_27 + tmp_172*tmp_33) + tmp_47*(tmp_176*tmp_40 + tmp_179*tmp_46);
      real_t a_3_1 = tmp_21*(tmp_158*tmp_51 + tmp_165*tmp_54) + tmp_34*(tmp_168*tmp_56 + tmp_172*tmp_57) + tmp_47*(tmp_175*tmp_59 + tmp_179*tmp_60);
      real_t a_3_2 = tmp_21*(tmp_158*tmp_64 + tmp_165*tmp_66) + tmp_34*(tmp_168*tmp_68 + tmp_172*tmp_69) + tmp_47*(tmp_175*tmp_71 + tmp_179*tmp_72);
      real_t a_3_3 = tmp_21*(tmp_159*tmp_83 + tmp_165*tmp_78) + tmp_34*(tmp_169*tmp_89 + tmp_172*tmp_86) + tmp_47*(tmp_176*tmp_95 + tmp_179*tmp_92);
      real_t a_3_4 = tmp_21*(tmp_159*tmp_98 + tmp_165*tmp_99) + tmp_34*(tmp_102*tmp_169 + tmp_103*tmp_172) + tmp_47*(tmp_106*tmp_176 + tmp_107*tmp_179);
      real_t a_3_5 = tmp_21*(tmp_110*tmp_159 + tmp_111*tmp_165) + tmp_34*(tmp_114*tmp_169 + tmp_115*tmp_172) + tmp_47*(tmp_118*tmp_176 + tmp_119*tmp_179);
      real_t a_4_0 = tmp_21*(tmp_12*tmp_181 + tmp_182*tmp_19) + tmp_34*(tmp_184*tmp_27 + tmp_185*tmp_33) + tmp_47*(tmp_187*tmp_40 + tmp_188*tmp_46);
      real_t a_4_1 = tmp_21*(tmp_180*tmp_51 + tmp_182*tmp_54) + tmp_34*(tmp_183*tmp_56 + tmp_185*tmp_57) + tmp_47*(tmp_186*tmp_59 + tmp_188*tmp_60);
      real_t a_4_2 = tmp_21*(tmp_180*tmp_64 + tmp_182*tmp_66) + tmp_34*(tmp_183*tmp_68 + tmp_185*tmp_69) + tmp_47*(tmp_186*tmp_71 + tmp_188*tmp_72);
      real_t a_4_3 = tmp_21*(tmp_181*tmp_83 + tmp_182*tmp_78) + tmp_34*(tmp_184*tmp_89 + tmp_185*tmp_86) + tmp_47*(tmp_187*tmp_95 + tmp_188*tmp_92);
      real_t a_4_4 = tmp_21*(tmp_181*tmp_98 + tmp_182*tmp_99) + tmp_34*(tmp_102*tmp_184 + tmp_103*tmp_185) + tmp_47*(tmp_106*tmp_187 + tmp_107*tmp_188);
      real_t a_4_5 = tmp_21*(tmp_110*tmp_181 + tmp_111*tmp_182) + tmp_34*(tmp_114*tmp_184 + tmp_115*tmp_185) + tmp_47*(tmp_118*tmp_187 + tmp_119*tmp_188);
      real_t a_5_0 = tmp_21*(tmp_12*tmp_190 + tmp_19*tmp_191) + tmp_34*(tmp_193*tmp_27 + tmp_194*tmp_33) + tmp_47*(tmp_196*tmp_40 + tmp_197*tmp_46);
      real_t a_5_1 = tmp_21*(tmp_189*tmp_51 + tmp_191*tmp_54) + tmp_34*(tmp_192*tmp_56 + tmp_194*tmp_57) + tmp_47*(tmp_195*tmp_59 + tmp_197*tmp_60);
      real_t a_5_2 = tmp_21*(tmp_189*tmp_64 + tmp_191*tmp_66) + tmp_34*(tmp_192*tmp_68 + tmp_194*tmp_69) + tmp_47*(tmp_195*tmp_71 + tmp_197*tmp_72);
      real_t a_5_3 = tmp_21*(tmp_190*tmp_83 + tmp_191*tmp_78) + tmp_34*(tmp_193*tmp_89 + tmp_194*tmp_86) + tmp_47*(tmp_196*tmp_95 + tmp_197*tmp_92);
      real_t a_5_4 = tmp_21*(tmp_190*tmp_98 + tmp_191*tmp_99) + tmp_34*(tmp_102*tmp_193 + tmp_103*tmp_194) + tmp_47*(tmp_106*tmp_196 + tmp_107*tmp_197);
      real_t a_5_5 = tmp_21*(tmp_110*tmp_190 + tmp_111*tmp_191) + tmp_34*(tmp_114*tmp_193 + tmp_115*tmp_194) + tmp_47*(tmp_118*tmp_196 + tmp_119*tmp_197);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_0_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_12 = 2*tmp_11;
      real_t tmp_13 = 1.0*tmp_7;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_13*tmp_14 + tmp_13*tmp_3;
      real_t tmp_16 = 2.0*tmp_7;
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_4*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_21*tmp_9;
      real_t tmp_24 = 0.5*tmp_22 + 0.5*tmp_23;
      real_t tmp_25 = 2*tmp_24;
      real_t tmp_26 = 1.0*tmp_21;
      real_t tmp_27 = tmp_14*tmp_26 + tmp_26*tmp_3;
      real_t tmp_28 = 2.0*tmp_21;
      real_t tmp_29 = 0.16666666666666666*tmp_17;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = 0.66666666666666663;
      real_t tmp_32 = tmp_4*(tmp_30 + tmp_31 - 3);
      real_t tmp_33 = tmp_1*tmp_32;
      real_t tmp_34 = tmp_32*tmp_9;
      real_t tmp_35 = 0.5*tmp_33 + 0.5*tmp_34;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 1.0*tmp_32;
      real_t tmp_38 = tmp_14*tmp_37 + tmp_3*tmp_37;
      real_t tmp_39 = 2.0*tmp_32;
      real_t tmp_40 = 0.16666666666666666*tmp_17;
      real_t tmp_41 = tmp_5 - 1;
      real_t tmp_42 = tmp_4*tmp_9;
      real_t tmp_43 = 2.0*tmp_42;
      real_t tmp_44 = 2.0*tmp_4;
      real_t tmp_45 = tmp_3*tmp_44;
      real_t tmp_46 = tmp_19 - 1;
      real_t tmp_47 = tmp_30 - 1;
      real_t tmp_48 = tmp_6 - 1;
      real_t tmp_49 = tmp_1*tmp_4;
      real_t tmp_50 = 2.0*tmp_49;
      real_t tmp_51 = tmp_14*tmp_44;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_31 - 1;
      real_t tmp_54 = 8.0*tmp_4;
      real_t tmp_55 = tmp_14*tmp_54;
      real_t tmp_56 = 0.16666666666666666*tmp_55;
      real_t tmp_57 = tmp_3*tmp_54;
      real_t tmp_58 = 0.66666666666666663*tmp_57;
      real_t tmp_59 = 4.0*tmp_49;
      real_t tmp_60 = 0.16666666666666666*tmp_59;
      real_t tmp_61 = 4.0*tmp_42;
      real_t tmp_62 = 0.66666666666666663*tmp_61;
      real_t tmp_63 = 0.66666666666666663*tmp_55;
      real_t tmp_64 = 0.16666666666666666*tmp_57;
      real_t tmp_65 = 0.66666666666666663*tmp_59;
      real_t tmp_66 = 0.16666666666666666*tmp_61;
      real_t tmp_67 = 0.16666666666666666*tmp_55;
      real_t tmp_68 = 0.16666666666666666*tmp_57;
      real_t tmp_69 = 0.16666666666666666*tmp_59;
      real_t tmp_70 = 0.16666666666666666*tmp_61;
      real_t tmp_71 = -tmp_5 - 1.333333333333333;
      real_t tmp_72 = 2.666666666666667 - tmp_19;
      real_t tmp_73 = 2.666666666666667 - tmp_30;
      real_t tmp_74 = 2.666666666666667 - tmp_6;
      real_t tmp_75 = -tmp_20 - 1.333333333333333;
      real_t tmp_76 = 2.666666666666667 - tmp_31;
      real_t a_0_0 = tmp_18*(tmp_12*(tmp_10 + tmp_8) + tmp_15*(tmp_14*tmp_16 + tmp_16*tmp_3)) + tmp_29*(tmp_25*(tmp_22 + tmp_23) + tmp_27*(tmp_14*tmp_28 + tmp_28*tmp_3)) + tmp_40*(tmp_36*(tmp_33 + tmp_34) + tmp_38*(tmp_14*tmp_39 + tmp_3*tmp_39));
      real_t a_0_1 = tmp_18*(tmp_11*tmp_41*tmp_43 + tmp_15*tmp_41*tmp_45) + tmp_29*(tmp_24*tmp_43*tmp_46 + tmp_27*tmp_45*tmp_46) + tmp_40*(tmp_35*tmp_43*tmp_47 + tmp_38*tmp_45*tmp_47);
      real_t a_0_2 = tmp_18*(tmp_11*tmp_48*tmp_50 + tmp_15*tmp_48*tmp_51) + tmp_29*(tmp_24*tmp_50*tmp_52 + tmp_27*tmp_51*tmp_52) + tmp_40*(tmp_35*tmp_50*tmp_53 + tmp_38*tmp_51*tmp_53);
      real_t a_0_3 = tmp_18*(tmp_12*(tmp_60 + tmp_62) + tmp_15*(tmp_56 + tmp_58)) + tmp_29*(tmp_25*(tmp_65 + tmp_66) + tmp_27*(tmp_63 + tmp_64)) + tmp_40*(tmp_36*(tmp_69 + tmp_70) + tmp_38*(tmp_67 + tmp_68));
      real_t a_0_4 = tmp_18*(tmp_12*(tmp_49*tmp_71 - tmp_62) + tmp_15*(tmp_51*tmp_71 - tmp_58)) + tmp_29*(tmp_25*(tmp_49*tmp_72 - tmp_66) + tmp_27*(tmp_51*tmp_72 - tmp_64)) + tmp_40*(tmp_36*(tmp_49*tmp_73 - tmp_70) + tmp_38*(tmp_51*tmp_73 - tmp_68));
      real_t a_0_5 = tmp_18*(tmp_12*(tmp_42*tmp_74 - tmp_60) + tmp_15*(tmp_45*tmp_74 - tmp_56)) + tmp_29*(tmp_25*(tmp_42*tmp_75 - tmp_65) + tmp_27*(tmp_45*tmp_75 - tmp_63)) + tmp_40*(tmp_36*(tmp_42*tmp_76 - tmp_69) + tmp_38*(tmp_45*tmp_76 - tmp_67));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_0_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = -tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_32 = 2*tmp_31;
      real_t tmp_33 = -tmp_1*tmp_14 + tmp_11*tmp_4;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_1*tmp_8 - tmp_11*tmp_13;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_13*tmp_14 - tmp_4*tmp_8;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_34 + tmp_36 + tmp_38;
      real_t tmp_40 = 0.5*tmp_34 + 0.5*tmp_36 + 0.5*tmp_38;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = tmp_15 - tmp_18;
      real_t tmp_43 = 1.0*tmp_24;
      real_t tmp_44 = tmp_12 - tmp_17;
      real_t tmp_45 = -tmp_16 + tmp_9;
      real_t tmp_46 = tmp_42*tmp_43 + tmp_43*tmp_44 + tmp_43*tmp_45;
      real_t tmp_47 = 2.0*tmp_24;
      real_t tmp_48 = tmp_42*tmp_47 + tmp_44*tmp_47 + tmp_45*tmp_47;
      real_t tmp_49 = p_affine_0_0*p_affine_1_1;
      real_t tmp_50 = p_affine_0_0*p_affine_1_2;
      real_t tmp_51 = p_affine_2_1*p_affine_3_2;
      real_t tmp_52 = p_affine_0_1*p_affine_1_0;
      real_t tmp_53 = p_affine_0_1*p_affine_1_2;
      real_t tmp_54 = p_affine_2_2*p_affine_3_0;
      real_t tmp_55 = p_affine_0_2*p_affine_1_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_1;
      real_t tmp_58 = p_affine_2_2*p_affine_3_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_2;
      real_t tmp_60 = p_affine_2_1*p_affine_3_0;
      real_t tmp_61 = std::abs(p_affine_0_0*tmp_51 - p_affine_0_0*tmp_58 + p_affine_0_1*tmp_54 - p_affine_0_1*tmp_59 + p_affine_0_2*tmp_57 - p_affine_0_2*tmp_60 - p_affine_1_0*tmp_51 + p_affine_1_0*tmp_58 - p_affine_1_1*tmp_54 + p_affine_1_1*tmp_59 - p_affine_1_2*tmp_57 + p_affine_1_2*tmp_60 + p_affine_2_0*tmp_53 - p_affine_2_0*tmp_56 - p_affine_2_1*tmp_50 + p_affine_2_1*tmp_55 + p_affine_2_2*tmp_49 - p_affine_2_2*tmp_52 - p_affine_3_0*tmp_53 + p_affine_3_0*tmp_56 + p_affine_3_1*tmp_50 - p_affine_3_1*tmp_55 - p_affine_3_2*tmp_49 + p_affine_3_2*tmp_52);
      real_t tmp_62 = 0.041666666666666657*tmp_61;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 2.3416407864998732;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = tmp_20*(tmp_63 + tmp_64 + tmp_65 - 3.0);
      real_t tmp_67 = tmp_6*tmp_66;
      real_t tmp_68 = tmp_26*tmp_66;
      real_t tmp_69 = tmp_28*tmp_66;
      real_t tmp_70 = tmp_67 + tmp_68 + tmp_69;
      real_t tmp_71 = 0.5*tmp_67 + 0.5*tmp_68 + 0.5*tmp_69;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = tmp_33*tmp_66;
      real_t tmp_74 = tmp_35*tmp_66;
      real_t tmp_75 = tmp_37*tmp_66;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_66;
      real_t tmp_80 = tmp_42*tmp_79 + tmp_44*tmp_79 + tmp_45*tmp_79;
      real_t tmp_81 = 2.0*tmp_66;
      real_t tmp_82 = tmp_42*tmp_81 + tmp_44*tmp_81 + tmp_45*tmp_81;
      real_t tmp_83 = 0.041666666666666657*tmp_61;
      real_t tmp_84 = 2.3416407864998732;
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = tmp_20*(tmp_84 + tmp_85 + tmp_86 - 3.0);
      real_t tmp_88 = tmp_6*tmp_87;
      real_t tmp_89 = tmp_26*tmp_87;
      real_t tmp_90 = tmp_28*tmp_87;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90;
      real_t tmp_92 = 0.5*tmp_88 + 0.5*tmp_89 + 0.5*tmp_90;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_33*tmp_87;
      real_t tmp_95 = tmp_35*tmp_87;
      real_t tmp_96 = tmp_37*tmp_87;
      real_t tmp_97 = tmp_94 + tmp_95 + tmp_96;
      real_t tmp_98 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_99 = 2*tmp_98;
      real_t tmp_100 = 1.0*tmp_87;
      real_t tmp_101 = tmp_100*tmp_42 + tmp_100*tmp_44 + tmp_100*tmp_45;
      real_t tmp_102 = 2.0*tmp_87;
      real_t tmp_103 = tmp_102*tmp_42 + tmp_102*tmp_44 + tmp_102*tmp_45;
      real_t tmp_104 = 0.041666666666666657*tmp_61;
      real_t tmp_105 = 0.55278640450004235;
      real_t tmp_106 = 0.55278640450004235;
      real_t tmp_107 = 0.55278640450004235;
      real_t tmp_108 = tmp_20*(tmp_105 + tmp_106 + tmp_107 - 3.0);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_108*tmp_28;
      real_t tmp_112 = tmp_109 + tmp_110 + tmp_111;
      real_t tmp_113 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_114 = 2*tmp_113;
      real_t tmp_115 = tmp_108*tmp_33;
      real_t tmp_116 = tmp_108*tmp_35;
      real_t tmp_117 = tmp_108*tmp_37;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = 0.5*tmp_115 + 0.5*tmp_116 + 0.5*tmp_117;
      real_t tmp_120 = 2*tmp_119;
      real_t tmp_121 = 1.0*tmp_108;
      real_t tmp_122 = tmp_121*tmp_42 + tmp_121*tmp_44 + tmp_121*tmp_45;
      real_t tmp_123 = 2.0*tmp_108;
      real_t tmp_124 = tmp_123*tmp_42 + tmp_123*tmp_44 + tmp_123*tmp_45;
      real_t tmp_125 = 0.041666666666666657*tmp_61;
      real_t tmp_126 = tmp_21 - 1.0;
      real_t tmp_127 = 2.0*tmp_20;
      real_t tmp_128 = tmp_126*tmp_127;
      real_t tmp_129 = tmp_128*tmp_28;
      real_t tmp_130 = tmp_128*tmp_37;
      real_t tmp_131 = tmp_20*tmp_45;
      real_t tmp_132 = 2.0*tmp_131;
      real_t tmp_133 = tmp_126*tmp_132;
      real_t tmp_134 = tmp_63 - 1.0;
      real_t tmp_135 = tmp_127*tmp_134;
      real_t tmp_136 = tmp_135*tmp_28;
      real_t tmp_137 = tmp_135*tmp_37;
      real_t tmp_138 = tmp_132*tmp_134;
      real_t tmp_139 = tmp_84 - 1.0;
      real_t tmp_140 = tmp_127*tmp_139;
      real_t tmp_141 = tmp_140*tmp_28;
      real_t tmp_142 = tmp_140*tmp_37;
      real_t tmp_143 = tmp_132*tmp_139;
      real_t tmp_144 = tmp_105 - 1.0;
      real_t tmp_145 = tmp_127*tmp_144;
      real_t tmp_146 = tmp_145*tmp_28;
      real_t tmp_147 = tmp_145*tmp_37;
      real_t tmp_148 = tmp_132*tmp_144;
      real_t tmp_149 = tmp_22 - 1.0;
      real_t tmp_150 = tmp_127*tmp_149;
      real_t tmp_151 = tmp_150*tmp_26;
      real_t tmp_152 = tmp_150*tmp_35;
      real_t tmp_153 = tmp_20*tmp_44;
      real_t tmp_154 = 2.0*tmp_153;
      real_t tmp_155 = tmp_149*tmp_154;
      real_t tmp_156 = tmp_64 - 1.0;
      real_t tmp_157 = tmp_127*tmp_156;
      real_t tmp_158 = tmp_157*tmp_26;
      real_t tmp_159 = tmp_157*tmp_35;
      real_t tmp_160 = tmp_154*tmp_156;
      real_t tmp_161 = tmp_85 - 1.0;
      real_t tmp_162 = tmp_127*tmp_161;
      real_t tmp_163 = tmp_162*tmp_26;
      real_t tmp_164 = tmp_162*tmp_35;
      real_t tmp_165 = tmp_154*tmp_161;
      real_t tmp_166 = tmp_106 - 1.0;
      real_t tmp_167 = tmp_127*tmp_166;
      real_t tmp_168 = tmp_167*tmp_26;
      real_t tmp_169 = tmp_167*tmp_35;
      real_t tmp_170 = tmp_154*tmp_166;
      real_t tmp_171 = tmp_23 - 1.0;
      real_t tmp_172 = tmp_127*tmp_171;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_172*tmp_33;
      real_t tmp_175 = tmp_20*tmp_42;
      real_t tmp_176 = 2.0*tmp_175;
      real_t tmp_177 = tmp_171*tmp_176;
      real_t tmp_178 = tmp_65 - 1.0;
      real_t tmp_179 = tmp_127*tmp_178;
      real_t tmp_180 = tmp_179*tmp_6;
      real_t tmp_181 = tmp_179*tmp_33;
      real_t tmp_182 = tmp_176*tmp_178;
      real_t tmp_183 = tmp_86 - 1.0;
      real_t tmp_184 = tmp_127*tmp_183;
      real_t tmp_185 = tmp_184*tmp_6;
      real_t tmp_186 = tmp_184*tmp_33;
      real_t tmp_187 = tmp_176*tmp_183;
      real_t tmp_188 = tmp_107 - 1.0;
      real_t tmp_189 = tmp_127*tmp_188;
      real_t tmp_190 = tmp_189*tmp_6;
      real_t tmp_191 = tmp_189*tmp_33;
      real_t tmp_192 = tmp_176*tmp_188;
      real_t tmp_193 = 1.1055728090000847;
      real_t tmp_194 = tmp_175*tmp_193;
      real_t tmp_195 = 4.6832815729997463;
      real_t tmp_196 = tmp_153*tmp_195;
      real_t tmp_197 = tmp_194 + tmp_196;
      real_t tmp_198 = tmp_20*tmp_22;
      real_t tmp_199 = tmp_198*tmp_6;
      real_t tmp_200 = tmp_20*tmp_23;
      real_t tmp_201 = tmp_200*tmp_26;
      real_t tmp_202 = tmp_199 + tmp_201;
      real_t tmp_203 = tmp_198*tmp_33;
      real_t tmp_204 = tmp_200*tmp_35;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = 4.6832815729997463;
      real_t tmp_207 = tmp_175*tmp_206;
      real_t tmp_208 = 1.1055728090000847;
      real_t tmp_209 = tmp_153*tmp_208;
      real_t tmp_210 = tmp_207 + tmp_209;
      real_t tmp_211 = tmp_20*tmp_64;
      real_t tmp_212 = tmp_211*tmp_6;
      real_t tmp_213 = tmp_20*tmp_65;
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_212 + tmp_214;
      real_t tmp_216 = tmp_211*tmp_33;
      real_t tmp_217 = tmp_213*tmp_35;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_175*tmp_219;
      real_t tmp_221 = 1.1055728090000847;
      real_t tmp_222 = tmp_153*tmp_221;
      real_t tmp_223 = tmp_220 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_85;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_20*tmp_86;
      real_t tmp_227 = tmp_226*tmp_26;
      real_t tmp_228 = tmp_225 + tmp_227;
      real_t tmp_229 = tmp_224*tmp_33;
      real_t tmp_230 = tmp_226*tmp_35;
      real_t tmp_231 = tmp_229 + tmp_230;
      real_t tmp_232 = 1.1055728090000847;
      real_t tmp_233 = tmp_175*tmp_232;
      real_t tmp_234 = 1.1055728090000847;
      real_t tmp_235 = tmp_153*tmp_234;
      real_t tmp_236 = tmp_233 + tmp_235;
      real_t tmp_237 = tmp_106*tmp_20;
      real_t tmp_238 = tmp_237*tmp_6;
      real_t tmp_239 = tmp_107*tmp_20;
      real_t tmp_240 = tmp_239*tmp_26;
      real_t tmp_241 = tmp_238 + tmp_240;
      real_t tmp_242 = tmp_237*tmp_33;
      real_t tmp_243 = tmp_239*tmp_35;
      real_t tmp_244 = tmp_242 + tmp_243;
      real_t tmp_245 = 1.1055728090000847;
      real_t tmp_246 = tmp_175*tmp_245;
      real_t tmp_247 = tmp_131*tmp_195;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_20*tmp_21;
      real_t tmp_250 = tmp_249*tmp_6;
      real_t tmp_251 = tmp_200*tmp_28;
      real_t tmp_252 = tmp_250 + tmp_251;
      real_t tmp_253 = tmp_249*tmp_33;
      real_t tmp_254 = tmp_200*tmp_37;
      real_t tmp_255 = tmp_253 + tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_175*tmp_256;
      real_t tmp_258 = tmp_131*tmp_208;
      real_t tmp_259 = tmp_257 + tmp_258;
      real_t tmp_260 = tmp_20*tmp_63;
      real_t tmp_261 = tmp_260*tmp_6;
      real_t tmp_262 = tmp_213*tmp_28;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = tmp_260*tmp_33;
      real_t tmp_265 = tmp_213*tmp_37;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = 4.6832815729997463;
      real_t tmp_268 = tmp_175*tmp_267;
      real_t tmp_269 = tmp_131*tmp_221;
      real_t tmp_270 = tmp_268 + tmp_269;
      real_t tmp_271 = tmp_20*tmp_84;
      real_t tmp_272 = tmp_271*tmp_6;
      real_t tmp_273 = tmp_226*tmp_28;
      real_t tmp_274 = tmp_272 + tmp_273;
      real_t tmp_275 = tmp_271*tmp_33;
      real_t tmp_276 = tmp_226*tmp_37;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = 1.1055728090000847;
      real_t tmp_279 = tmp_175*tmp_278;
      real_t tmp_280 = tmp_131*tmp_234;
      real_t tmp_281 = tmp_279 + tmp_280;
      real_t tmp_282 = tmp_105*tmp_20;
      real_t tmp_283 = tmp_282*tmp_6;
      real_t tmp_284 = tmp_239*tmp_28;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_282*tmp_33;
      real_t tmp_287 = tmp_239*tmp_37;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = tmp_153*tmp_245;
      real_t tmp_290 = tmp_131*tmp_193;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_249*tmp_26;
      real_t tmp_293 = tmp_198*tmp_28;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_249*tmp_35;
      real_t tmp_296 = tmp_198*tmp_37;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_153*tmp_256;
      real_t tmp_299 = tmp_131*tmp_206;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_26*tmp_260;
      real_t tmp_302 = tmp_211*tmp_28;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = tmp_260*tmp_35;
      real_t tmp_305 = tmp_211*tmp_37;
      real_t tmp_306 = tmp_304 + tmp_305;
      real_t tmp_307 = tmp_153*tmp_267;
      real_t tmp_308 = tmp_131*tmp_219;
      real_t tmp_309 = tmp_307 + tmp_308;
      real_t tmp_310 = tmp_26*tmp_271;
      real_t tmp_311 = tmp_224*tmp_28;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_271*tmp_35;
      real_t tmp_314 = tmp_224*tmp_37;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_153*tmp_278;
      real_t tmp_317 = tmp_131*tmp_232;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_26*tmp_282;
      real_t tmp_320 = tmp_237*tmp_28;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = tmp_282*tmp_35;
      real_t tmp_323 = tmp_237*tmp_37;
      real_t tmp_324 = tmp_322 + tmp_323;
      real_t tmp_325 = -tmp_22;
      real_t tmp_326 = 4.0 - tmp_21;
      real_t tmp_327 = tmp_20*(-tmp_195 + tmp_325 + tmp_326);
      real_t tmp_328 = tmp_327*tmp_6;
      real_t tmp_329 = -tmp_201 - tmp_251 + tmp_328;
      real_t tmp_330 = tmp_327*tmp_33;
      real_t tmp_331 = -tmp_204 - tmp_254 + tmp_330;
      real_t tmp_332 = 2.0*tmp_42;
      real_t tmp_333 = -tmp_196 - tmp_247 + tmp_327*tmp_332;
      real_t tmp_334 = -tmp_64;
      real_t tmp_335 = 4.0 - tmp_63;
      real_t tmp_336 = tmp_20*(-tmp_208 + tmp_334 + tmp_335);
      real_t tmp_337 = tmp_336*tmp_6;
      real_t tmp_338 = -tmp_214 - tmp_262 + tmp_337;
      real_t tmp_339 = tmp_33*tmp_336;
      real_t tmp_340 = -tmp_217 - tmp_265 + tmp_339;
      real_t tmp_341 = -tmp_209 - tmp_258 + tmp_332*tmp_336;
      real_t tmp_342 = -tmp_85;
      real_t tmp_343 = 4.0 - tmp_84;
      real_t tmp_344 = tmp_20*(-tmp_221 + tmp_342 + tmp_343);
      real_t tmp_345 = tmp_344*tmp_6;
      real_t tmp_346 = -tmp_227 - tmp_273 + tmp_345;
      real_t tmp_347 = tmp_33*tmp_344;
      real_t tmp_348 = -tmp_230 - tmp_276 + tmp_347;
      real_t tmp_349 = -tmp_222 - tmp_269 + tmp_332*tmp_344;
      real_t tmp_350 = -tmp_106;
      real_t tmp_351 = 4.0 - tmp_105;
      real_t tmp_352 = tmp_20*(-tmp_234 + tmp_350 + tmp_351);
      real_t tmp_353 = tmp_352*tmp_6;
      real_t tmp_354 = -tmp_240 - tmp_284 + tmp_353;
      real_t tmp_355 = tmp_33*tmp_352;
      real_t tmp_356 = -tmp_243 - tmp_287 + tmp_355;
      real_t tmp_357 = -tmp_235 - tmp_280 + tmp_332*tmp_352;
      real_t tmp_358 = -tmp_23;
      real_t tmp_359 = tmp_20*(-tmp_193 + tmp_326 + tmp_358);
      real_t tmp_360 = tmp_26*tmp_359;
      real_t tmp_361 = -tmp_199 - tmp_293 + tmp_360;
      real_t tmp_362 = tmp_35*tmp_359;
      real_t tmp_363 = -tmp_203 - tmp_296 + tmp_362;
      real_t tmp_364 = 2.0*tmp_44;
      real_t tmp_365 = -tmp_194 - tmp_290 + tmp_359*tmp_364;
      real_t tmp_366 = -tmp_65;
      real_t tmp_367 = tmp_20*(-tmp_206 + tmp_335 + tmp_366);
      real_t tmp_368 = tmp_26*tmp_367;
      real_t tmp_369 = -tmp_212 - tmp_302 + tmp_368;
      real_t tmp_370 = tmp_35*tmp_367;
      real_t tmp_371 = -tmp_216 - tmp_305 + tmp_370;
      real_t tmp_372 = -tmp_207 - tmp_299 + tmp_364*tmp_367;
      real_t tmp_373 = -tmp_86;
      real_t tmp_374 = tmp_20*(-tmp_219 + tmp_343 + tmp_373);
      real_t tmp_375 = tmp_26*tmp_374;
      real_t tmp_376 = -tmp_225 - tmp_311 + tmp_375;
      real_t tmp_377 = tmp_35*tmp_374;
      real_t tmp_378 = -tmp_229 - tmp_314 + tmp_377;
      real_t tmp_379 = -tmp_220 - tmp_308 + tmp_364*tmp_374;
      real_t tmp_380 = -tmp_107;
      real_t tmp_381 = tmp_20*(-tmp_232 + tmp_351 + tmp_380);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = -tmp_238 - tmp_320 + tmp_382;
      real_t tmp_384 = tmp_35*tmp_381;
      real_t tmp_385 = -tmp_242 - tmp_323 + tmp_384;
      real_t tmp_386 = -tmp_233 - tmp_317 + tmp_364*tmp_381;
      real_t tmp_387 = tmp_20*(-tmp_245 + tmp_325 + tmp_358 + 4.0);
      real_t tmp_388 = tmp_28*tmp_387;
      real_t tmp_389 = -tmp_250 - tmp_292 + tmp_388;
      real_t tmp_390 = tmp_37*tmp_387;
      real_t tmp_391 = -tmp_253 - tmp_295 + tmp_390;
      real_t tmp_392 = 2.0*tmp_45;
      real_t tmp_393 = -tmp_246 - tmp_289 + tmp_387*tmp_392;
      real_t tmp_394 = tmp_20*(-tmp_256 + tmp_334 + tmp_366 + 4.0);
      real_t tmp_395 = tmp_28*tmp_394;
      real_t tmp_396 = -tmp_261 - tmp_301 + tmp_395;
      real_t tmp_397 = tmp_37*tmp_394;
      real_t tmp_398 = -tmp_264 - tmp_304 + tmp_397;
      real_t tmp_399 = -tmp_257 - tmp_298 + tmp_392*tmp_394;
      real_t tmp_400 = tmp_20*(-tmp_267 + tmp_342 + tmp_373 + 4.0);
      real_t tmp_401 = tmp_28*tmp_400;
      real_t tmp_402 = -tmp_272 - tmp_310 + tmp_401;
      real_t tmp_403 = tmp_37*tmp_400;
      real_t tmp_404 = -tmp_275 - tmp_313 + tmp_403;
      real_t tmp_405 = -tmp_268 - tmp_307 + tmp_392*tmp_400;
      real_t tmp_406 = tmp_20*(-tmp_278 + tmp_350 + tmp_380 + 4.0);
      real_t tmp_407 = tmp_28*tmp_406;
      real_t tmp_408 = -tmp_283 - tmp_319 + tmp_407;
      real_t tmp_409 = tmp_37*tmp_406;
      real_t tmp_410 = -tmp_286 - tmp_322 + tmp_409;
      real_t tmp_411 = -tmp_279 - tmp_316 + tmp_392*tmp_406;
      real_t tmp_412 = 1.0*tmp_126;
      real_t tmp_413 = tmp_20*tmp_412;
      real_t tmp_414 = tmp_28*tmp_413;
      real_t tmp_415 = tmp_37*tmp_413;
      real_t tmp_416 = tmp_131*tmp_412;
      real_t tmp_417 = 1.0*tmp_134;
      real_t tmp_418 = tmp_20*tmp_417;
      real_t tmp_419 = tmp_28*tmp_418;
      real_t tmp_420 = tmp_37*tmp_418;
      real_t tmp_421 = tmp_131*tmp_417;
      real_t tmp_422 = 1.0*tmp_139;
      real_t tmp_423 = tmp_20*tmp_422;
      real_t tmp_424 = tmp_28*tmp_423;
      real_t tmp_425 = tmp_37*tmp_423;
      real_t tmp_426 = tmp_131*tmp_422;
      real_t tmp_427 = 1.0*tmp_144;
      real_t tmp_428 = tmp_20*tmp_427;
      real_t tmp_429 = tmp_28*tmp_428;
      real_t tmp_430 = tmp_37*tmp_428;
      real_t tmp_431 = tmp_131*tmp_427;
      real_t tmp_432 = (tmp_28*tmp_28);
      real_t tmp_433 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_434 = 0.012499999999999983*tmp_433;
      real_t tmp_435 = 16.0*tmp_434;
      real_t tmp_436 = (tmp_37*tmp_37);
      real_t tmp_437 = 32.0*(tmp_45*tmp_45);
      real_t tmp_438 = 0.012499999999999983*tmp_433;
      real_t tmp_439 = 16.0*tmp_438;
      real_t tmp_440 = 0.11249999999999989*tmp_433;
      real_t tmp_441 = 16.0*tmp_440;
      real_t tmp_442 = 0.012499999999999983*tmp_433;
      real_t tmp_443 = 16.0*tmp_442;
      real_t tmp_444 = tmp_149*tmp_433;
      real_t tmp_445 = tmp_412*tmp_444;
      real_t tmp_446 = tmp_26*tmp_28;
      real_t tmp_447 = tmp_35*tmp_37;
      real_t tmp_448 = tmp_364*tmp_45;
      real_t tmp_449 = tmp_156*tmp_433;
      real_t tmp_450 = tmp_417*tmp_449;
      real_t tmp_451 = tmp_161*tmp_433;
      real_t tmp_452 = tmp_422*tmp_451;
      real_t tmp_453 = tmp_166*tmp_433;
      real_t tmp_454 = tmp_427*tmp_453;
      real_t tmp_455 = tmp_104*(tmp_139*tmp_448*tmp_451 + tmp_446*tmp_452 + tmp_447*tmp_452) + tmp_125*(tmp_144*tmp_448*tmp_453 + tmp_446*tmp_454 + tmp_447*tmp_454) + tmp_62*(tmp_126*tmp_444*tmp_448 + tmp_445*tmp_446 + tmp_445*tmp_447) + tmp_83*(tmp_134*tmp_448*tmp_449 + tmp_446*tmp_450 + tmp_447*tmp_450);
      real_t tmp_456 = tmp_171*tmp_433;
      real_t tmp_457 = tmp_412*tmp_456;
      real_t tmp_458 = tmp_28*tmp_6;
      real_t tmp_459 = tmp_33*tmp_37;
      real_t tmp_460 = tmp_332*tmp_45;
      real_t tmp_461 = tmp_178*tmp_433;
      real_t tmp_462 = tmp_417*tmp_461;
      real_t tmp_463 = tmp_183*tmp_433;
      real_t tmp_464 = tmp_422*tmp_463;
      real_t tmp_465 = tmp_188*tmp_433;
      real_t tmp_466 = tmp_427*tmp_465;
      real_t tmp_467 = tmp_104*(tmp_139*tmp_460*tmp_463 + tmp_458*tmp_464 + tmp_459*tmp_464) + tmp_125*(tmp_144*tmp_460*tmp_465 + tmp_458*tmp_466 + tmp_459*tmp_466) + tmp_62*(tmp_126*tmp_456*tmp_460 + tmp_457*tmp_458 + tmp_457*tmp_459) + tmp_83*(tmp_134*tmp_460*tmp_461 + tmp_458*tmp_462 + tmp_459*tmp_462);
      real_t tmp_468 = 1.0*tmp_149;
      real_t tmp_469 = tmp_20*tmp_468;
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = tmp_35*tmp_469;
      real_t tmp_472 = tmp_153*tmp_468;
      real_t tmp_473 = 1.0*tmp_156;
      real_t tmp_474 = tmp_20*tmp_473;
      real_t tmp_475 = tmp_26*tmp_474;
      real_t tmp_476 = tmp_35*tmp_474;
      real_t tmp_477 = tmp_153*tmp_473;
      real_t tmp_478 = 1.0*tmp_161;
      real_t tmp_479 = tmp_20*tmp_478;
      real_t tmp_480 = tmp_26*tmp_479;
      real_t tmp_481 = tmp_35*tmp_479;
      real_t tmp_482 = tmp_153*tmp_478;
      real_t tmp_483 = 1.0*tmp_166;
      real_t tmp_484 = tmp_20*tmp_483;
      real_t tmp_485 = tmp_26*tmp_484;
      real_t tmp_486 = tmp_35*tmp_484;
      real_t tmp_487 = tmp_153*tmp_483;
      real_t tmp_488 = (tmp_26*tmp_26);
      real_t tmp_489 = 0.012499999999999983*tmp_433;
      real_t tmp_490 = 16.0*tmp_489;
      real_t tmp_491 = (tmp_35*tmp_35);
      real_t tmp_492 = 32.0*(tmp_44*tmp_44);
      real_t tmp_493 = 0.11249999999999989*tmp_433;
      real_t tmp_494 = 16.0*tmp_493;
      real_t tmp_495 = 0.012499999999999983*tmp_433;
      real_t tmp_496 = 16.0*tmp_495;
      real_t tmp_497 = 0.012499999999999983*tmp_433;
      real_t tmp_498 = 16.0*tmp_497;
      real_t tmp_499 = tmp_456*tmp_468;
      real_t tmp_500 = tmp_26*tmp_6;
      real_t tmp_501 = tmp_33*tmp_35;
      real_t tmp_502 = tmp_332*tmp_44;
      real_t tmp_503 = tmp_461*tmp_473;
      real_t tmp_504 = tmp_463*tmp_478;
      real_t tmp_505 = tmp_465*tmp_483;
      real_t tmp_506 = tmp_104*(tmp_183*tmp_451*tmp_502 + tmp_500*tmp_504 + tmp_501*tmp_504) + tmp_125*(tmp_188*tmp_453*tmp_502 + tmp_500*tmp_505 + tmp_501*tmp_505) + tmp_62*(tmp_171*tmp_444*tmp_502 + tmp_499*tmp_500 + tmp_499*tmp_501) + tmp_83*(tmp_178*tmp_449*tmp_502 + tmp_500*tmp_503 + tmp_501*tmp_503);
      real_t tmp_507 = 1.0*tmp_171;
      real_t tmp_508 = tmp_20*tmp_507;
      real_t tmp_509 = tmp_508*tmp_6;
      real_t tmp_510 = tmp_33*tmp_508;
      real_t tmp_511 = tmp_175*tmp_507;
      real_t tmp_512 = 1.0*tmp_178;
      real_t tmp_513 = tmp_20*tmp_512;
      real_t tmp_514 = tmp_513*tmp_6;
      real_t tmp_515 = tmp_33*tmp_513;
      real_t tmp_516 = tmp_175*tmp_512;
      real_t tmp_517 = 1.0*tmp_183;
      real_t tmp_518 = tmp_20*tmp_517;
      real_t tmp_519 = tmp_518*tmp_6;
      real_t tmp_520 = tmp_33*tmp_518;
      real_t tmp_521 = tmp_175*tmp_517;
      real_t tmp_522 = 1.0*tmp_188;
      real_t tmp_523 = tmp_20*tmp_522;
      real_t tmp_524 = tmp_523*tmp_6;
      real_t tmp_525 = tmp_33*tmp_523;
      real_t tmp_526 = tmp_175*tmp_522;
      real_t tmp_527 = (tmp_6*tmp_6);
      real_t tmp_528 = 0.11249999999999989*tmp_433;
      real_t tmp_529 = 16.0*tmp_528;
      real_t tmp_530 = (tmp_33*tmp_33);
      real_t tmp_531 = 32.0*(tmp_42*tmp_42);
      real_t tmp_532 = 0.012499999999999983*tmp_433;
      real_t tmp_533 = 16.0*tmp_532;
      real_t tmp_534 = 0.012499999999999983*tmp_433;
      real_t tmp_535 = 16.0*tmp_534;
      real_t tmp_536 = 0.012499999999999983*tmp_433;
      real_t tmp_537 = 16.0*tmp_536;
      real_t tmp_538 = 0.13819660112501059*tmp_127;
      real_t tmp_539 = tmp_538*tmp_6;
      real_t tmp_540 = 0.58541019662496829*tmp_127;
      real_t tmp_541 = tmp_26*tmp_540;
      real_t tmp_542 = tmp_539 + tmp_541;
      real_t tmp_543 = 2*tmp_542;
      real_t tmp_544 = tmp_33*tmp_538;
      real_t tmp_545 = tmp_35*tmp_540;
      real_t tmp_546 = tmp_544 + tmp_545;
      real_t tmp_547 = 2*tmp_546;
      real_t tmp_548 = tmp_175*tmp_22;
      real_t tmp_549 = tmp_153*tmp_23;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = 0.58541019662496829*tmp_127;
      real_t tmp_552 = tmp_551*tmp_6;
      real_t tmp_553 = 0.13819660112501059*tmp_127;
      real_t tmp_554 = tmp_26*tmp_553;
      real_t tmp_555 = tmp_552 + tmp_554;
      real_t tmp_556 = 2*tmp_555;
      real_t tmp_557 = tmp_33*tmp_551;
      real_t tmp_558 = tmp_35*tmp_553;
      real_t tmp_559 = tmp_557 + tmp_558;
      real_t tmp_560 = 2*tmp_559;
      real_t tmp_561 = tmp_175*tmp_64;
      real_t tmp_562 = tmp_153*tmp_65;
      real_t tmp_563 = tmp_561 + tmp_562;
      real_t tmp_564 = 0.13819660112501059*tmp_127;
      real_t tmp_565 = tmp_564*tmp_6;
      real_t tmp_566 = 0.13819660112501059*tmp_127;
      real_t tmp_567 = tmp_26*tmp_566;
      real_t tmp_568 = tmp_565 + tmp_567;
      real_t tmp_569 = 2*tmp_568;
      real_t tmp_570 = tmp_33*tmp_564;
      real_t tmp_571 = tmp_35*tmp_566;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = 2*tmp_572;
      real_t tmp_574 = tmp_175*tmp_85;
      real_t tmp_575 = tmp_153*tmp_86;
      real_t tmp_576 = tmp_574 + tmp_575;
      real_t tmp_577 = 0.13819660112501059*tmp_127;
      real_t tmp_578 = tmp_577*tmp_6;
      real_t tmp_579 = 0.13819660112501059*tmp_127;
      real_t tmp_580 = tmp_26*tmp_579;
      real_t tmp_581 = tmp_578 + tmp_580;
      real_t tmp_582 = 2*tmp_581;
      real_t tmp_583 = tmp_33*tmp_577;
      real_t tmp_584 = tmp_35*tmp_579;
      real_t tmp_585 = tmp_583 + tmp_584;
      real_t tmp_586 = 2*tmp_585;
      real_t tmp_587 = tmp_106*tmp_175;
      real_t tmp_588 = tmp_107*tmp_153;
      real_t tmp_589 = tmp_587 + tmp_588;
      real_t tmp_590 = 0.13819660112501059*tmp_127;
      real_t tmp_591 = tmp_590*tmp_6;
      real_t tmp_592 = tmp_28*tmp_540;
      real_t tmp_593 = tmp_591 + tmp_592;
      real_t tmp_594 = 2*tmp_593;
      real_t tmp_595 = tmp_33*tmp_590;
      real_t tmp_596 = tmp_37*tmp_540;
      real_t tmp_597 = tmp_595 + tmp_596;
      real_t tmp_598 = 2*tmp_597;
      real_t tmp_599 = tmp_175*tmp_21;
      real_t tmp_600 = tmp_200*tmp_45;
      real_t tmp_601 = tmp_599 + tmp_600;
      real_t tmp_602 = 0.13819660112501059*tmp_127;
      real_t tmp_603 = tmp_6*tmp_602;
      real_t tmp_604 = tmp_28*tmp_553;
      real_t tmp_605 = tmp_603 + tmp_604;
      real_t tmp_606 = 2*tmp_605;
      real_t tmp_607 = tmp_33*tmp_602;
      real_t tmp_608 = tmp_37*tmp_553;
      real_t tmp_609 = tmp_607 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_175*tmp_63;
      real_t tmp_612 = tmp_213*tmp_45;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 0.58541019662496829*tmp_127;
      real_t tmp_615 = tmp_6*tmp_614;
      real_t tmp_616 = tmp_28*tmp_566;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 2*tmp_617;
      real_t tmp_619 = tmp_33*tmp_614;
      real_t tmp_620 = tmp_37*tmp_566;
      real_t tmp_621 = tmp_619 + tmp_620;
      real_t tmp_622 = 2*tmp_621;
      real_t tmp_623 = tmp_175*tmp_84;
      real_t tmp_624 = tmp_226*tmp_45;
      real_t tmp_625 = tmp_623 + tmp_624;
      real_t tmp_626 = 0.13819660112501059*tmp_127;
      real_t tmp_627 = tmp_6*tmp_626;
      real_t tmp_628 = tmp_28*tmp_579;
      real_t tmp_629 = tmp_627 + tmp_628;
      real_t tmp_630 = 2*tmp_629;
      real_t tmp_631 = tmp_33*tmp_626;
      real_t tmp_632 = tmp_37*tmp_579;
      real_t tmp_633 = tmp_631 + tmp_632;
      real_t tmp_634 = 2*tmp_633;
      real_t tmp_635 = tmp_105*tmp_175;
      real_t tmp_636 = tmp_239*tmp_45;
      real_t tmp_637 = tmp_635 + tmp_636;
      real_t tmp_638 = tmp_26*tmp_590;
      real_t tmp_639 = tmp_28*tmp_538;
      real_t tmp_640 = tmp_638 + tmp_639;
      real_t tmp_641 = 2*tmp_640;
      real_t tmp_642 = tmp_35*tmp_590;
      real_t tmp_643 = tmp_37*tmp_538;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = 2*tmp_644;
      real_t tmp_646 = tmp_153*tmp_21;
      real_t tmp_647 = tmp_198*tmp_45;
      real_t tmp_648 = tmp_646 + tmp_647;
      real_t tmp_649 = tmp_26*tmp_602;
      real_t tmp_650 = tmp_28*tmp_551;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_35*tmp_602;
      real_t tmp_654 = tmp_37*tmp_551;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 2*tmp_655;
      real_t tmp_657 = tmp_153*tmp_63;
      real_t tmp_658 = tmp_211*tmp_45;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = tmp_26*tmp_614;
      real_t tmp_661 = tmp_28*tmp_564;
      real_t tmp_662 = tmp_660 + tmp_661;
      real_t tmp_663 = 2*tmp_662;
      real_t tmp_664 = tmp_35*tmp_614;
      real_t tmp_665 = tmp_37*tmp_564;
      real_t tmp_666 = tmp_664 + tmp_665;
      real_t tmp_667 = 2*tmp_666;
      real_t tmp_668 = tmp_153*tmp_84;
      real_t tmp_669 = tmp_224*tmp_45;
      real_t tmp_670 = tmp_668 + tmp_669;
      real_t tmp_671 = tmp_26*tmp_626;
      real_t tmp_672 = tmp_28*tmp_577;
      real_t tmp_673 = tmp_671 + tmp_672;
      real_t tmp_674 = 2*tmp_673;
      real_t tmp_675 = tmp_35*tmp_626;
      real_t tmp_676 = tmp_37*tmp_577;
      real_t tmp_677 = tmp_675 + tmp_676;
      real_t tmp_678 = 2*tmp_677;
      real_t tmp_679 = tmp_105*tmp_153;
      real_t tmp_680 = tmp_237*tmp_45;
      real_t tmp_681 = tmp_679 + tmp_680;
      real_t tmp_682 = 0.5*tmp_328 - tmp_541 - tmp_592;
      real_t tmp_683 = 2*tmp_682;
      real_t tmp_684 = 0.5*tmp_330 - tmp_545 - tmp_596;
      real_t tmp_685 = 2*tmp_684;
      real_t tmp_686 = 1.0*tmp_42;
      real_t tmp_687 = tmp_327*tmp_686 - tmp_549 - tmp_600;
      real_t tmp_688 = 0.5*tmp_337 - tmp_554 - tmp_604;
      real_t tmp_689 = 2*tmp_688;
      real_t tmp_690 = 0.5*tmp_339 - tmp_558 - tmp_608;
      real_t tmp_691 = 2*tmp_690;
      real_t tmp_692 = tmp_336*tmp_686 - tmp_562 - tmp_612;
      real_t tmp_693 = 0.5*tmp_345 - tmp_567 - tmp_616;
      real_t tmp_694 = 2*tmp_693;
      real_t tmp_695 = 0.5*tmp_347 - tmp_571 - tmp_620;
      real_t tmp_696 = 2*tmp_695;
      real_t tmp_697 = tmp_344*tmp_686 - tmp_575 - tmp_624;
      real_t tmp_698 = 0.5*tmp_353 - tmp_580 - tmp_628;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = 0.5*tmp_355 - tmp_584 - tmp_632;
      real_t tmp_701 = 2*tmp_700;
      real_t tmp_702 = tmp_352*tmp_686 - tmp_588 - tmp_636;
      real_t tmp_703 = 0.5*tmp_360 - tmp_539 - tmp_639;
      real_t tmp_704 = 2*tmp_703;
      real_t tmp_705 = 0.5*tmp_362 - tmp_544 - tmp_643;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = 1.0*tmp_44;
      real_t tmp_708 = tmp_359*tmp_707 - tmp_548 - tmp_647;
      real_t tmp_709 = 0.5*tmp_368 - tmp_552 - tmp_650;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = 0.5*tmp_370 - tmp_557 - tmp_654;
      real_t tmp_712 = 2*tmp_711;
      real_t tmp_713 = tmp_367*tmp_707 - tmp_561 - tmp_658;
      real_t tmp_714 = 0.5*tmp_375 - tmp_565 - tmp_661;
      real_t tmp_715 = 2*tmp_714;
      real_t tmp_716 = 0.5*tmp_377 - tmp_570 - tmp_665;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_374*tmp_707 - tmp_574 - tmp_669;
      real_t tmp_719 = 0.5*tmp_382 - tmp_578 - tmp_672;
      real_t tmp_720 = 2*tmp_719;
      real_t tmp_721 = 0.5*tmp_384 - tmp_583 - tmp_676;
      real_t tmp_722 = 2*tmp_721;
      real_t tmp_723 = tmp_381*tmp_707 - tmp_587 - tmp_680;
      real_t tmp_724 = 0.5*tmp_388 - tmp_591 - tmp_638;
      real_t tmp_725 = 2*tmp_724;
      real_t tmp_726 = 0.5*tmp_390 - tmp_595 - tmp_642;
      real_t tmp_727 = 2*tmp_726;
      real_t tmp_728 = 1.0*tmp_45;
      real_t tmp_729 = tmp_387*tmp_728 - tmp_599 - tmp_646;
      real_t tmp_730 = 0.5*tmp_395 - tmp_603 - tmp_649;
      real_t tmp_731 = 2*tmp_730;
      real_t tmp_732 = 0.5*tmp_397 - tmp_607 - tmp_653;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = tmp_394*tmp_728 - tmp_611 - tmp_657;
      real_t tmp_735 = 0.5*tmp_401 - tmp_615 - tmp_660;
      real_t tmp_736 = 2*tmp_735;
      real_t tmp_737 = 0.5*tmp_403 - tmp_619 - tmp_664;
      real_t tmp_738 = 2*tmp_737;
      real_t tmp_739 = tmp_400*tmp_728 - tmp_623 - tmp_668;
      real_t tmp_740 = 0.5*tmp_407 - tmp_627 - tmp_671;
      real_t tmp_741 = 2*tmp_740;
      real_t tmp_742 = 0.5*tmp_409 - tmp_631 - tmp_675;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = tmp_406*tmp_728 - tmp_635 - tmp_679;
      real_t a_0_0 = tmp_104*(tmp_101*tmp_103 + tmp_91*tmp_93 + tmp_97*tmp_99) + tmp_125*(tmp_112*tmp_114 + tmp_118*tmp_120 + tmp_122*tmp_124) + tmp_62*(tmp_30*tmp_32 + tmp_39*tmp_41 + tmp_46*tmp_48) + tmp_83*(tmp_70*tmp_72 + tmp_76*tmp_78 + tmp_80*tmp_82);
      real_t a_0_1 = tmp_104*(tmp_101*tmp_143 + tmp_141*tmp_92 + tmp_142*tmp_98) + tmp_125*(tmp_113*tmp_146 + tmp_119*tmp_147 + tmp_122*tmp_148) + tmp_62*(tmp_129*tmp_31 + tmp_130*tmp_40 + tmp_133*tmp_46) + tmp_83*(tmp_136*tmp_71 + tmp_137*tmp_77 + tmp_138*tmp_80);
      real_t a_0_2 = tmp_104*(tmp_101*tmp_165 + tmp_163*tmp_92 + tmp_164*tmp_98) + tmp_125*(tmp_113*tmp_168 + tmp_119*tmp_169 + tmp_122*tmp_170) + tmp_62*(tmp_151*tmp_31 + tmp_152*tmp_40 + tmp_155*tmp_46) + tmp_83*(tmp_158*tmp_71 + tmp_159*tmp_77 + tmp_160*tmp_80);
      real_t a_0_3 = tmp_104*(tmp_101*tmp_187 + tmp_185*tmp_92 + tmp_186*tmp_98) + tmp_125*(tmp_113*tmp_190 + tmp_119*tmp_191 + tmp_122*tmp_192) + tmp_62*(tmp_173*tmp_31 + tmp_174*tmp_40 + tmp_177*tmp_46) + tmp_83*(tmp_180*tmp_71 + tmp_181*tmp_77 + tmp_182*tmp_80);
      real_t a_0_4 = tmp_104*(tmp_101*tmp_223 + tmp_228*tmp_93 + tmp_231*tmp_99) + tmp_125*(tmp_114*tmp_241 + tmp_120*tmp_244 + tmp_122*tmp_236) + tmp_62*(tmp_197*tmp_46 + tmp_202*tmp_32 + tmp_205*tmp_41) + tmp_83*(tmp_210*tmp_80 + tmp_215*tmp_72 + tmp_218*tmp_78);
      real_t a_0_5 = tmp_104*(tmp_101*tmp_270 + tmp_274*tmp_93 + tmp_277*tmp_99) + tmp_125*(tmp_114*tmp_285 + tmp_120*tmp_288 + tmp_122*tmp_281) + tmp_62*(tmp_248*tmp_46 + tmp_252*tmp_32 + tmp_255*tmp_41) + tmp_83*(tmp_259*tmp_80 + tmp_263*tmp_72 + tmp_266*tmp_78);
      real_t a_0_6 = tmp_104*(tmp_101*tmp_309 + tmp_312*tmp_93 + tmp_315*tmp_99) + tmp_125*(tmp_114*tmp_321 + tmp_120*tmp_324 + tmp_122*tmp_318) + tmp_62*(tmp_291*tmp_46 + tmp_294*tmp_32 + tmp_297*tmp_41) + tmp_83*(tmp_300*tmp_80 + tmp_303*tmp_72 + tmp_306*tmp_78);
      real_t a_0_7 = tmp_104*(tmp_101*tmp_349 + tmp_346*tmp_93 + tmp_348*tmp_99) + tmp_125*(tmp_114*tmp_354 + tmp_120*tmp_356 + tmp_122*tmp_357) + tmp_62*(tmp_32*tmp_329 + tmp_331*tmp_41 + tmp_333*tmp_46) + tmp_83*(tmp_338*tmp_72 + tmp_340*tmp_78 + tmp_341*tmp_80);
      real_t a_0_8 = tmp_104*(tmp_101*tmp_379 + tmp_376*tmp_93 + tmp_378*tmp_99) + tmp_125*(tmp_114*tmp_383 + tmp_120*tmp_385 + tmp_122*tmp_386) + tmp_62*(tmp_32*tmp_361 + tmp_363*tmp_41 + tmp_365*tmp_46) + tmp_83*(tmp_369*tmp_72 + tmp_371*tmp_78 + tmp_372*tmp_80);
      real_t a_0_9 = tmp_104*(tmp_101*tmp_405 + tmp_402*tmp_93 + tmp_404*tmp_99) + tmp_125*(tmp_114*tmp_408 + tmp_120*tmp_410 + tmp_122*tmp_411) + tmp_62*(tmp_32*tmp_389 + tmp_391*tmp_41 + tmp_393*tmp_46) + tmp_83*(tmp_396*tmp_72 + tmp_398*tmp_78 + tmp_399*tmp_80);
      real_t a_1_0 = tmp_104*(tmp_103*tmp_426 + tmp_424*tmp_91 + tmp_425*tmp_97) + tmp_125*(tmp_112*tmp_429 + tmp_118*tmp_430 + tmp_124*tmp_431) + tmp_62*(tmp_30*tmp_414 + tmp_39*tmp_415 + tmp_416*tmp_48) + tmp_83*(tmp_419*tmp_70 + tmp_420*tmp_76 + tmp_421*tmp_82);
      real_t a_1_1 = tmp_104*(tmp_432*tmp_441 + tmp_436*tmp_441 + tmp_437*tmp_440) + tmp_125*(tmp_432*tmp_443 + tmp_436*tmp_443 + tmp_437*tmp_442) + tmp_62*(tmp_432*tmp_435 + tmp_434*tmp_437 + tmp_435*tmp_436) + tmp_83*(tmp_432*tmp_439 + tmp_436*tmp_439 + tmp_437*tmp_438);
      real_t a_1_2 = tmp_455;
      real_t a_1_3 = tmp_467;
      real_t a_1_4 = tmp_104*(tmp_223*tmp_426 + tmp_228*tmp_424 + tmp_231*tmp_425) + tmp_125*(tmp_236*tmp_431 + tmp_241*tmp_429 + tmp_244*tmp_430) + tmp_62*(tmp_197*tmp_416 + tmp_202*tmp_414 + tmp_205*tmp_415) + tmp_83*(tmp_210*tmp_421 + tmp_215*tmp_419 + tmp_218*tmp_420);
      real_t a_1_5 = tmp_104*(tmp_270*tmp_426 + tmp_274*tmp_424 + tmp_277*tmp_425) + tmp_125*(tmp_281*tmp_431 + tmp_285*tmp_429 + tmp_288*tmp_430) + tmp_62*(tmp_248*tmp_416 + tmp_252*tmp_414 + tmp_255*tmp_415) + tmp_83*(tmp_259*tmp_421 + tmp_263*tmp_419 + tmp_266*tmp_420);
      real_t a_1_6 = tmp_104*(tmp_309*tmp_426 + tmp_312*tmp_424 + tmp_315*tmp_425) + tmp_125*(tmp_318*tmp_431 + tmp_321*tmp_429 + tmp_324*tmp_430) + tmp_62*(tmp_291*tmp_416 + tmp_294*tmp_414 + tmp_297*tmp_415) + tmp_83*(tmp_300*tmp_421 + tmp_303*tmp_419 + tmp_306*tmp_420);
      real_t a_1_7 = tmp_104*(tmp_346*tmp_424 + tmp_348*tmp_425 + tmp_349*tmp_426) + tmp_125*(tmp_354*tmp_429 + tmp_356*tmp_430 + tmp_357*tmp_431) + tmp_62*(tmp_329*tmp_414 + tmp_331*tmp_415 + tmp_333*tmp_416) + tmp_83*(tmp_338*tmp_419 + tmp_340*tmp_420 + tmp_341*tmp_421);
      real_t a_1_8 = tmp_104*(tmp_376*tmp_424 + tmp_378*tmp_425 + tmp_379*tmp_426) + tmp_125*(tmp_383*tmp_429 + tmp_385*tmp_430 + tmp_386*tmp_431) + tmp_62*(tmp_361*tmp_414 + tmp_363*tmp_415 + tmp_365*tmp_416) + tmp_83*(tmp_369*tmp_419 + tmp_371*tmp_420 + tmp_372*tmp_421);
      real_t a_1_9 = tmp_104*(tmp_402*tmp_424 + tmp_404*tmp_425 + tmp_405*tmp_426) + tmp_125*(tmp_408*tmp_429 + tmp_410*tmp_430 + tmp_411*tmp_431) + tmp_62*(tmp_389*tmp_414 + tmp_391*tmp_415 + tmp_393*tmp_416) + tmp_83*(tmp_396*tmp_419 + tmp_398*tmp_420 + tmp_399*tmp_421);
      real_t a_2_0 = tmp_104*(tmp_103*tmp_482 + tmp_480*tmp_91 + tmp_481*tmp_97) + tmp_125*(tmp_112*tmp_485 + tmp_118*tmp_486 + tmp_124*tmp_487) + tmp_62*(tmp_30*tmp_470 + tmp_39*tmp_471 + tmp_472*tmp_48) + tmp_83*(tmp_475*tmp_70 + tmp_476*tmp_76 + tmp_477*tmp_82);
      real_t a_2_1 = tmp_455;
      real_t a_2_2 = tmp_104*(tmp_488*tmp_496 + tmp_491*tmp_496 + tmp_492*tmp_495) + tmp_125*(tmp_488*tmp_498 + tmp_491*tmp_498 + tmp_492*tmp_497) + tmp_62*(tmp_488*tmp_490 + tmp_489*tmp_492 + tmp_490*tmp_491) + tmp_83*(tmp_488*tmp_494 + tmp_491*tmp_494 + tmp_492*tmp_493);
      real_t a_2_3 = tmp_506;
      real_t a_2_4 = tmp_104*(tmp_223*tmp_482 + tmp_228*tmp_480 + tmp_231*tmp_481) + tmp_125*(tmp_236*tmp_487 + tmp_241*tmp_485 + tmp_244*tmp_486) + tmp_62*(tmp_197*tmp_472 + tmp_202*tmp_470 + tmp_205*tmp_471) + tmp_83*(tmp_210*tmp_477 + tmp_215*tmp_475 + tmp_218*tmp_476);
      real_t a_2_5 = tmp_104*(tmp_270*tmp_482 + tmp_274*tmp_480 + tmp_277*tmp_481) + tmp_125*(tmp_281*tmp_487 + tmp_285*tmp_485 + tmp_288*tmp_486) + tmp_62*(tmp_248*tmp_472 + tmp_252*tmp_470 + tmp_255*tmp_471) + tmp_83*(tmp_259*tmp_477 + tmp_263*tmp_475 + tmp_266*tmp_476);
      real_t a_2_6 = tmp_104*(tmp_309*tmp_482 + tmp_312*tmp_480 + tmp_315*tmp_481) + tmp_125*(tmp_318*tmp_487 + tmp_321*tmp_485 + tmp_324*tmp_486) + tmp_62*(tmp_291*tmp_472 + tmp_294*tmp_470 + tmp_297*tmp_471) + tmp_83*(tmp_300*tmp_477 + tmp_303*tmp_475 + tmp_306*tmp_476);
      real_t a_2_7 = tmp_104*(tmp_346*tmp_480 + tmp_348*tmp_481 + tmp_349*tmp_482) + tmp_125*(tmp_354*tmp_485 + tmp_356*tmp_486 + tmp_357*tmp_487) + tmp_62*(tmp_329*tmp_470 + tmp_331*tmp_471 + tmp_333*tmp_472) + tmp_83*(tmp_338*tmp_475 + tmp_340*tmp_476 + tmp_341*tmp_477);
      real_t a_2_8 = tmp_104*(tmp_376*tmp_480 + tmp_378*tmp_481 + tmp_379*tmp_482) + tmp_125*(tmp_383*tmp_485 + tmp_385*tmp_486 + tmp_386*tmp_487) + tmp_62*(tmp_361*tmp_470 + tmp_363*tmp_471 + tmp_365*tmp_472) + tmp_83*(tmp_369*tmp_475 + tmp_371*tmp_476 + tmp_372*tmp_477);
      real_t a_2_9 = tmp_104*(tmp_402*tmp_480 + tmp_404*tmp_481 + tmp_405*tmp_482) + tmp_125*(tmp_408*tmp_485 + tmp_410*tmp_486 + tmp_411*tmp_487) + tmp_62*(tmp_389*tmp_470 + tmp_391*tmp_471 + tmp_393*tmp_472) + tmp_83*(tmp_396*tmp_475 + tmp_398*tmp_476 + tmp_399*tmp_477);
      real_t a_3_0 = tmp_104*(tmp_103*tmp_521 + tmp_519*tmp_91 + tmp_520*tmp_97) + tmp_125*(tmp_112*tmp_524 + tmp_118*tmp_525 + tmp_124*tmp_526) + tmp_62*(tmp_30*tmp_509 + tmp_39*tmp_510 + tmp_48*tmp_511) + tmp_83*(tmp_514*tmp_70 + tmp_515*tmp_76 + tmp_516*tmp_82);
      real_t a_3_1 = tmp_467;
      real_t a_3_2 = tmp_506;
      real_t a_3_3 = tmp_104*(tmp_527*tmp_535 + tmp_530*tmp_535 + tmp_531*tmp_534) + tmp_125*(tmp_527*tmp_537 + tmp_530*tmp_537 + tmp_531*tmp_536) + tmp_62*(tmp_527*tmp_529 + tmp_528*tmp_531 + tmp_529*tmp_530) + tmp_83*(tmp_527*tmp_533 + tmp_530*tmp_533 + tmp_531*tmp_532);
      real_t a_3_4 = tmp_104*(tmp_223*tmp_521 + tmp_228*tmp_519 + tmp_231*tmp_520) + tmp_125*(tmp_236*tmp_526 + tmp_241*tmp_524 + tmp_244*tmp_525) + tmp_62*(tmp_197*tmp_511 + tmp_202*tmp_509 + tmp_205*tmp_510) + tmp_83*(tmp_210*tmp_516 + tmp_215*tmp_514 + tmp_218*tmp_515);
      real_t a_3_5 = tmp_104*(tmp_270*tmp_521 + tmp_274*tmp_519 + tmp_277*tmp_520) + tmp_125*(tmp_281*tmp_526 + tmp_285*tmp_524 + tmp_288*tmp_525) + tmp_62*(tmp_248*tmp_511 + tmp_252*tmp_509 + tmp_255*tmp_510) + tmp_83*(tmp_259*tmp_516 + tmp_263*tmp_514 + tmp_266*tmp_515);
      real_t a_3_6 = tmp_104*(tmp_309*tmp_521 + tmp_312*tmp_519 + tmp_315*tmp_520) + tmp_125*(tmp_318*tmp_526 + tmp_321*tmp_524 + tmp_324*tmp_525) + tmp_62*(tmp_291*tmp_511 + tmp_294*tmp_509 + tmp_297*tmp_510) + tmp_83*(tmp_300*tmp_516 + tmp_303*tmp_514 + tmp_306*tmp_515);
      real_t a_3_7 = tmp_104*(tmp_346*tmp_519 + tmp_348*tmp_520 + tmp_349*tmp_521) + tmp_125*(tmp_354*tmp_524 + tmp_356*tmp_525 + tmp_357*tmp_526) + tmp_62*(tmp_329*tmp_509 + tmp_331*tmp_510 + tmp_333*tmp_511) + tmp_83*(tmp_338*tmp_514 + tmp_340*tmp_515 + tmp_341*tmp_516);
      real_t a_3_8 = tmp_104*(tmp_376*tmp_519 + tmp_378*tmp_520 + tmp_379*tmp_521) + tmp_125*(tmp_383*tmp_524 + tmp_385*tmp_525 + tmp_386*tmp_526) + tmp_62*(tmp_361*tmp_509 + tmp_363*tmp_510 + tmp_365*tmp_511) + tmp_83*(tmp_369*tmp_514 + tmp_371*tmp_515 + tmp_372*tmp_516);
      real_t a_3_9 = tmp_104*(tmp_402*tmp_519 + tmp_404*tmp_520 + tmp_405*tmp_521) + tmp_125*(tmp_408*tmp_524 + tmp_410*tmp_525 + tmp_411*tmp_526) + tmp_62*(tmp_389*tmp_509 + tmp_391*tmp_510 + tmp_393*tmp_511) + tmp_83*(tmp_396*tmp_514 + tmp_398*tmp_515 + tmp_399*tmp_516);
      real_t a_4_0 = tmp_104*(tmp_103*tmp_576 + tmp_569*tmp_91 + tmp_573*tmp_97) + tmp_125*(tmp_112*tmp_582 + tmp_118*tmp_586 + tmp_124*tmp_589) + tmp_62*(tmp_30*tmp_543 + tmp_39*tmp_547 + tmp_48*tmp_550) + tmp_83*(tmp_556*tmp_70 + tmp_560*tmp_76 + tmp_563*tmp_82);
      real_t a_4_1 = tmp_104*(tmp_141*tmp_568 + tmp_142*tmp_572 + tmp_143*tmp_576) + tmp_125*(tmp_146*tmp_581 + tmp_147*tmp_585 + tmp_148*tmp_589) + tmp_62*(tmp_129*tmp_542 + tmp_130*tmp_546 + tmp_133*tmp_550) + tmp_83*(tmp_136*tmp_555 + tmp_137*tmp_559 + tmp_138*tmp_563);
      real_t a_4_2 = tmp_104*(tmp_163*tmp_568 + tmp_164*tmp_572 + tmp_165*tmp_576) + tmp_125*(tmp_168*tmp_581 + tmp_169*tmp_585 + tmp_170*tmp_589) + tmp_62*(tmp_151*tmp_542 + tmp_152*tmp_546 + tmp_155*tmp_550) + tmp_83*(tmp_158*tmp_555 + tmp_159*tmp_559 + tmp_160*tmp_563);
      real_t a_4_3 = tmp_104*(tmp_185*tmp_568 + tmp_186*tmp_572 + tmp_187*tmp_576) + tmp_125*(tmp_190*tmp_581 + tmp_191*tmp_585 + tmp_192*tmp_589) + tmp_62*(tmp_173*tmp_542 + tmp_174*tmp_546 + tmp_177*tmp_550) + tmp_83*(tmp_180*tmp_555 + tmp_181*tmp_559 + tmp_182*tmp_563);
      real_t a_4_4 = tmp_104*(tmp_223*tmp_576 + tmp_228*tmp_569 + tmp_231*tmp_573) + tmp_125*(tmp_236*tmp_589 + tmp_241*tmp_582 + tmp_244*tmp_586) + tmp_62*(tmp_197*tmp_550 + tmp_202*tmp_543 + tmp_205*tmp_547) + tmp_83*(tmp_210*tmp_563 + tmp_215*tmp_556 + tmp_218*tmp_560);
      real_t a_4_5 = tmp_104*(tmp_270*tmp_576 + tmp_274*tmp_569 + tmp_277*tmp_573) + tmp_125*(tmp_281*tmp_589 + tmp_285*tmp_582 + tmp_288*tmp_586) + tmp_62*(tmp_248*tmp_550 + tmp_252*tmp_543 + tmp_255*tmp_547) + tmp_83*(tmp_259*tmp_563 + tmp_263*tmp_556 + tmp_266*tmp_560);
      real_t a_4_6 = tmp_104*(tmp_309*tmp_576 + tmp_312*tmp_569 + tmp_315*tmp_573) + tmp_125*(tmp_318*tmp_589 + tmp_321*tmp_582 + tmp_324*tmp_586) + tmp_62*(tmp_291*tmp_550 + tmp_294*tmp_543 + tmp_297*tmp_547) + tmp_83*(tmp_300*tmp_563 + tmp_303*tmp_556 + tmp_306*tmp_560);
      real_t a_4_7 = tmp_104*(tmp_346*tmp_569 + tmp_348*tmp_573 + tmp_349*tmp_576) + tmp_125*(tmp_354*tmp_582 + tmp_356*tmp_586 + tmp_357*tmp_589) + tmp_62*(tmp_329*tmp_543 + tmp_331*tmp_547 + tmp_333*tmp_550) + tmp_83*(tmp_338*tmp_556 + tmp_340*tmp_560 + tmp_341*tmp_563);
      real_t a_4_8 = tmp_104*(tmp_376*tmp_569 + tmp_378*tmp_573 + tmp_379*tmp_576) + tmp_125*(tmp_383*tmp_582 + tmp_385*tmp_586 + tmp_386*tmp_589) + tmp_62*(tmp_361*tmp_543 + tmp_363*tmp_547 + tmp_365*tmp_550) + tmp_83*(tmp_369*tmp_556 + tmp_371*tmp_560 + tmp_372*tmp_563);
      real_t a_4_9 = tmp_104*(tmp_402*tmp_569 + tmp_404*tmp_573 + tmp_405*tmp_576) + tmp_125*(tmp_408*tmp_582 + tmp_410*tmp_586 + tmp_411*tmp_589) + tmp_62*(tmp_389*tmp_543 + tmp_391*tmp_547 + tmp_393*tmp_550) + tmp_83*(tmp_396*tmp_556 + tmp_398*tmp_560 + tmp_399*tmp_563);
      real_t a_5_0 = tmp_104*(tmp_103*tmp_625 + tmp_618*tmp_91 + tmp_622*tmp_97) + tmp_125*(tmp_112*tmp_630 + tmp_118*tmp_634 + tmp_124*tmp_637) + tmp_62*(tmp_30*tmp_594 + tmp_39*tmp_598 + tmp_48*tmp_601) + tmp_83*(tmp_606*tmp_70 + tmp_610*tmp_76 + tmp_613*tmp_82);
      real_t a_5_1 = tmp_104*(tmp_141*tmp_617 + tmp_142*tmp_621 + tmp_143*tmp_625) + tmp_125*(tmp_146*tmp_629 + tmp_147*tmp_633 + tmp_148*tmp_637) + tmp_62*(tmp_129*tmp_593 + tmp_130*tmp_597 + tmp_133*tmp_601) + tmp_83*(tmp_136*tmp_605 + tmp_137*tmp_609 + tmp_138*tmp_613);
      real_t a_5_2 = tmp_104*(tmp_163*tmp_617 + tmp_164*tmp_621 + tmp_165*tmp_625) + tmp_125*(tmp_168*tmp_629 + tmp_169*tmp_633 + tmp_170*tmp_637) + tmp_62*(tmp_151*tmp_593 + tmp_152*tmp_597 + tmp_155*tmp_601) + tmp_83*(tmp_158*tmp_605 + tmp_159*tmp_609 + tmp_160*tmp_613);
      real_t a_5_3 = tmp_104*(tmp_185*tmp_617 + tmp_186*tmp_621 + tmp_187*tmp_625) + tmp_125*(tmp_190*tmp_629 + tmp_191*tmp_633 + tmp_192*tmp_637) + tmp_62*(tmp_173*tmp_593 + tmp_174*tmp_597 + tmp_177*tmp_601) + tmp_83*(tmp_180*tmp_605 + tmp_181*tmp_609 + tmp_182*tmp_613);
      real_t a_5_4 = tmp_104*(tmp_223*tmp_625 + tmp_228*tmp_618 + tmp_231*tmp_622) + tmp_125*(tmp_236*tmp_637 + tmp_241*tmp_630 + tmp_244*tmp_634) + tmp_62*(tmp_197*tmp_601 + tmp_202*tmp_594 + tmp_205*tmp_598) + tmp_83*(tmp_210*tmp_613 + tmp_215*tmp_606 + tmp_218*tmp_610);
      real_t a_5_5 = tmp_104*(tmp_270*tmp_625 + tmp_274*tmp_618 + tmp_277*tmp_622) + tmp_125*(tmp_281*tmp_637 + tmp_285*tmp_630 + tmp_288*tmp_634) + tmp_62*(tmp_248*tmp_601 + tmp_252*tmp_594 + tmp_255*tmp_598) + tmp_83*(tmp_259*tmp_613 + tmp_263*tmp_606 + tmp_266*tmp_610);
      real_t a_5_6 = tmp_104*(tmp_309*tmp_625 + tmp_312*tmp_618 + tmp_315*tmp_622) + tmp_125*(tmp_318*tmp_637 + tmp_321*tmp_630 + tmp_324*tmp_634) + tmp_62*(tmp_291*tmp_601 + tmp_294*tmp_594 + tmp_297*tmp_598) + tmp_83*(tmp_300*tmp_613 + tmp_303*tmp_606 + tmp_306*tmp_610);
      real_t a_5_7 = tmp_104*(tmp_346*tmp_618 + tmp_348*tmp_622 + tmp_349*tmp_625) + tmp_125*(tmp_354*tmp_630 + tmp_356*tmp_634 + tmp_357*tmp_637) + tmp_62*(tmp_329*tmp_594 + tmp_331*tmp_598 + tmp_333*tmp_601) + tmp_83*(tmp_338*tmp_606 + tmp_340*tmp_610 + tmp_341*tmp_613);
      real_t a_5_8 = tmp_104*(tmp_376*tmp_618 + tmp_378*tmp_622 + tmp_379*tmp_625) + tmp_125*(tmp_383*tmp_630 + tmp_385*tmp_634 + tmp_386*tmp_637) + tmp_62*(tmp_361*tmp_594 + tmp_363*tmp_598 + tmp_365*tmp_601) + tmp_83*(tmp_369*tmp_606 + tmp_371*tmp_610 + tmp_372*tmp_613);
      real_t a_5_9 = tmp_104*(tmp_402*tmp_618 + tmp_404*tmp_622 + tmp_405*tmp_625) + tmp_125*(tmp_408*tmp_630 + tmp_410*tmp_634 + tmp_411*tmp_637) + tmp_62*(tmp_389*tmp_594 + tmp_391*tmp_598 + tmp_393*tmp_601) + tmp_83*(tmp_396*tmp_606 + tmp_398*tmp_610 + tmp_399*tmp_613);
      real_t a_6_0 = tmp_104*(tmp_103*tmp_670 + tmp_663*tmp_91 + tmp_667*tmp_97) + tmp_125*(tmp_112*tmp_674 + tmp_118*tmp_678 + tmp_124*tmp_681) + tmp_62*(tmp_30*tmp_641 + tmp_39*tmp_645 + tmp_48*tmp_648) + tmp_83*(tmp_652*tmp_70 + tmp_656*tmp_76 + tmp_659*tmp_82);
      real_t a_6_1 = tmp_104*(tmp_141*tmp_662 + tmp_142*tmp_666 + tmp_143*tmp_670) + tmp_125*(tmp_146*tmp_673 + tmp_147*tmp_677 + tmp_148*tmp_681) + tmp_62*(tmp_129*tmp_640 + tmp_130*tmp_644 + tmp_133*tmp_648) + tmp_83*(tmp_136*tmp_651 + tmp_137*tmp_655 + tmp_138*tmp_659);
      real_t a_6_2 = tmp_104*(tmp_163*tmp_662 + tmp_164*tmp_666 + tmp_165*tmp_670) + tmp_125*(tmp_168*tmp_673 + tmp_169*tmp_677 + tmp_170*tmp_681) + tmp_62*(tmp_151*tmp_640 + tmp_152*tmp_644 + tmp_155*tmp_648) + tmp_83*(tmp_158*tmp_651 + tmp_159*tmp_655 + tmp_160*tmp_659);
      real_t a_6_3 = tmp_104*(tmp_185*tmp_662 + tmp_186*tmp_666 + tmp_187*tmp_670) + tmp_125*(tmp_190*tmp_673 + tmp_191*tmp_677 + tmp_192*tmp_681) + tmp_62*(tmp_173*tmp_640 + tmp_174*tmp_644 + tmp_177*tmp_648) + tmp_83*(tmp_180*tmp_651 + tmp_181*tmp_655 + tmp_182*tmp_659);
      real_t a_6_4 = tmp_104*(tmp_223*tmp_670 + tmp_228*tmp_663 + tmp_231*tmp_667) + tmp_125*(tmp_236*tmp_681 + tmp_241*tmp_674 + tmp_244*tmp_678) + tmp_62*(tmp_197*tmp_648 + tmp_202*tmp_641 + tmp_205*tmp_645) + tmp_83*(tmp_210*tmp_659 + tmp_215*tmp_652 + tmp_218*tmp_656);
      real_t a_6_5 = tmp_104*(tmp_270*tmp_670 + tmp_274*tmp_663 + tmp_277*tmp_667) + tmp_125*(tmp_281*tmp_681 + tmp_285*tmp_674 + tmp_288*tmp_678) + tmp_62*(tmp_248*tmp_648 + tmp_252*tmp_641 + tmp_255*tmp_645) + tmp_83*(tmp_259*tmp_659 + tmp_263*tmp_652 + tmp_266*tmp_656);
      real_t a_6_6 = tmp_104*(tmp_309*tmp_670 + tmp_312*tmp_663 + tmp_315*tmp_667) + tmp_125*(tmp_318*tmp_681 + tmp_321*tmp_674 + tmp_324*tmp_678) + tmp_62*(tmp_291*tmp_648 + tmp_294*tmp_641 + tmp_297*tmp_645) + tmp_83*(tmp_300*tmp_659 + tmp_303*tmp_652 + tmp_306*tmp_656);
      real_t a_6_7 = tmp_104*(tmp_346*tmp_663 + tmp_348*tmp_667 + tmp_349*tmp_670) + tmp_125*(tmp_354*tmp_674 + tmp_356*tmp_678 + tmp_357*tmp_681) + tmp_62*(tmp_329*tmp_641 + tmp_331*tmp_645 + tmp_333*tmp_648) + tmp_83*(tmp_338*tmp_652 + tmp_340*tmp_656 + tmp_341*tmp_659);
      real_t a_6_8 = tmp_104*(tmp_376*tmp_663 + tmp_378*tmp_667 + tmp_379*tmp_670) + tmp_125*(tmp_383*tmp_674 + tmp_385*tmp_678 + tmp_386*tmp_681) + tmp_62*(tmp_361*tmp_641 + tmp_363*tmp_645 + tmp_365*tmp_648) + tmp_83*(tmp_369*tmp_652 + tmp_371*tmp_656 + tmp_372*tmp_659);
      real_t a_6_9 = tmp_104*(tmp_402*tmp_663 + tmp_404*tmp_667 + tmp_405*tmp_670) + tmp_125*(tmp_408*tmp_674 + tmp_410*tmp_678 + tmp_411*tmp_681) + tmp_62*(tmp_389*tmp_641 + tmp_391*tmp_645 + tmp_393*tmp_648) + tmp_83*(tmp_396*tmp_652 + tmp_398*tmp_656 + tmp_399*tmp_659);
      real_t a_7_0 = tmp_104*(tmp_103*tmp_697 + tmp_694*tmp_91 + tmp_696*tmp_97) + tmp_125*(tmp_112*tmp_699 + tmp_118*tmp_701 + tmp_124*tmp_702) + tmp_62*(tmp_30*tmp_683 + tmp_39*tmp_685 + tmp_48*tmp_687) + tmp_83*(tmp_689*tmp_70 + tmp_691*tmp_76 + tmp_692*tmp_82);
      real_t a_7_1 = tmp_104*(tmp_141*tmp_693 + tmp_142*tmp_695 + tmp_143*tmp_697) + tmp_125*(tmp_146*tmp_698 + tmp_147*tmp_700 + tmp_148*tmp_702) + tmp_62*(tmp_129*tmp_682 + tmp_130*tmp_684 + tmp_133*tmp_687) + tmp_83*(tmp_136*tmp_688 + tmp_137*tmp_690 + tmp_138*tmp_692);
      real_t a_7_2 = tmp_104*(tmp_163*tmp_693 + tmp_164*tmp_695 + tmp_165*tmp_697) + tmp_125*(tmp_168*tmp_698 + tmp_169*tmp_700 + tmp_170*tmp_702) + tmp_62*(tmp_151*tmp_682 + tmp_152*tmp_684 + tmp_155*tmp_687) + tmp_83*(tmp_158*tmp_688 + tmp_159*tmp_690 + tmp_160*tmp_692);
      real_t a_7_3 = tmp_104*(tmp_185*tmp_693 + tmp_186*tmp_695 + tmp_187*tmp_697) + tmp_125*(tmp_190*tmp_698 + tmp_191*tmp_700 + tmp_192*tmp_702) + tmp_62*(tmp_173*tmp_682 + tmp_174*tmp_684 + tmp_177*tmp_687) + tmp_83*(tmp_180*tmp_688 + tmp_181*tmp_690 + tmp_182*tmp_692);
      real_t a_7_4 = tmp_104*(tmp_223*tmp_697 + tmp_228*tmp_694 + tmp_231*tmp_696) + tmp_125*(tmp_236*tmp_702 + tmp_241*tmp_699 + tmp_244*tmp_701) + tmp_62*(tmp_197*tmp_687 + tmp_202*tmp_683 + tmp_205*tmp_685) + tmp_83*(tmp_210*tmp_692 + tmp_215*tmp_689 + tmp_218*tmp_691);
      real_t a_7_5 = tmp_104*(tmp_270*tmp_697 + tmp_274*tmp_694 + tmp_277*tmp_696) + tmp_125*(tmp_281*tmp_702 + tmp_285*tmp_699 + tmp_288*tmp_701) + tmp_62*(tmp_248*tmp_687 + tmp_252*tmp_683 + tmp_255*tmp_685) + tmp_83*(tmp_259*tmp_692 + tmp_263*tmp_689 + tmp_266*tmp_691);
      real_t a_7_6 = tmp_104*(tmp_309*tmp_697 + tmp_312*tmp_694 + tmp_315*tmp_696) + tmp_125*(tmp_318*tmp_702 + tmp_321*tmp_699 + tmp_324*tmp_701) + tmp_62*(tmp_291*tmp_687 + tmp_294*tmp_683 + tmp_297*tmp_685) + tmp_83*(tmp_300*tmp_692 + tmp_303*tmp_689 + tmp_306*tmp_691);
      real_t a_7_7 = tmp_104*(tmp_346*tmp_694 + tmp_348*tmp_696 + tmp_349*tmp_697) + tmp_125*(tmp_354*tmp_699 + tmp_356*tmp_701 + tmp_357*tmp_702) + tmp_62*(tmp_329*tmp_683 + tmp_331*tmp_685 + tmp_333*tmp_687) + tmp_83*(tmp_338*tmp_689 + tmp_340*tmp_691 + tmp_341*tmp_692);
      real_t a_7_8 = tmp_104*(tmp_376*tmp_694 + tmp_378*tmp_696 + tmp_379*tmp_697) + tmp_125*(tmp_383*tmp_699 + tmp_385*tmp_701 + tmp_386*tmp_702) + tmp_62*(tmp_361*tmp_683 + tmp_363*tmp_685 + tmp_365*tmp_687) + tmp_83*(tmp_369*tmp_689 + tmp_371*tmp_691 + tmp_372*tmp_692);
      real_t a_7_9 = tmp_104*(tmp_402*tmp_694 + tmp_404*tmp_696 + tmp_405*tmp_697) + tmp_125*(tmp_408*tmp_699 + tmp_410*tmp_701 + tmp_411*tmp_702) + tmp_62*(tmp_389*tmp_683 + tmp_391*tmp_685 + tmp_393*tmp_687) + tmp_83*(tmp_396*tmp_689 + tmp_398*tmp_691 + tmp_399*tmp_692);
      real_t a_8_0 = tmp_104*(tmp_103*tmp_718 + tmp_715*tmp_91 + tmp_717*tmp_97) + tmp_125*(tmp_112*tmp_720 + tmp_118*tmp_722 + tmp_124*tmp_723) + tmp_62*(tmp_30*tmp_704 + tmp_39*tmp_706 + tmp_48*tmp_708) + tmp_83*(tmp_70*tmp_710 + tmp_712*tmp_76 + tmp_713*tmp_82);
      real_t a_8_1 = tmp_104*(tmp_141*tmp_714 + tmp_142*tmp_716 + tmp_143*tmp_718) + tmp_125*(tmp_146*tmp_719 + tmp_147*tmp_721 + tmp_148*tmp_723) + tmp_62*(tmp_129*tmp_703 + tmp_130*tmp_705 + tmp_133*tmp_708) + tmp_83*(tmp_136*tmp_709 + tmp_137*tmp_711 + tmp_138*tmp_713);
      real_t a_8_2 = tmp_104*(tmp_163*tmp_714 + tmp_164*tmp_716 + tmp_165*tmp_718) + tmp_125*(tmp_168*tmp_719 + tmp_169*tmp_721 + tmp_170*tmp_723) + tmp_62*(tmp_151*tmp_703 + tmp_152*tmp_705 + tmp_155*tmp_708) + tmp_83*(tmp_158*tmp_709 + tmp_159*tmp_711 + tmp_160*tmp_713);
      real_t a_8_3 = tmp_104*(tmp_185*tmp_714 + tmp_186*tmp_716 + tmp_187*tmp_718) + tmp_125*(tmp_190*tmp_719 + tmp_191*tmp_721 + tmp_192*tmp_723) + tmp_62*(tmp_173*tmp_703 + tmp_174*tmp_705 + tmp_177*tmp_708) + tmp_83*(tmp_180*tmp_709 + tmp_181*tmp_711 + tmp_182*tmp_713);
      real_t a_8_4 = tmp_104*(tmp_223*tmp_718 + tmp_228*tmp_715 + tmp_231*tmp_717) + tmp_125*(tmp_236*tmp_723 + tmp_241*tmp_720 + tmp_244*tmp_722) + tmp_62*(tmp_197*tmp_708 + tmp_202*tmp_704 + tmp_205*tmp_706) + tmp_83*(tmp_210*tmp_713 + tmp_215*tmp_710 + tmp_218*tmp_712);
      real_t a_8_5 = tmp_104*(tmp_270*tmp_718 + tmp_274*tmp_715 + tmp_277*tmp_717) + tmp_125*(tmp_281*tmp_723 + tmp_285*tmp_720 + tmp_288*tmp_722) + tmp_62*(tmp_248*tmp_708 + tmp_252*tmp_704 + tmp_255*tmp_706) + tmp_83*(tmp_259*tmp_713 + tmp_263*tmp_710 + tmp_266*tmp_712);
      real_t a_8_6 = tmp_104*(tmp_309*tmp_718 + tmp_312*tmp_715 + tmp_315*tmp_717) + tmp_125*(tmp_318*tmp_723 + tmp_321*tmp_720 + tmp_324*tmp_722) + tmp_62*(tmp_291*tmp_708 + tmp_294*tmp_704 + tmp_297*tmp_706) + tmp_83*(tmp_300*tmp_713 + tmp_303*tmp_710 + tmp_306*tmp_712);
      real_t a_8_7 = tmp_104*(tmp_346*tmp_715 + tmp_348*tmp_717 + tmp_349*tmp_718) + tmp_125*(tmp_354*tmp_720 + tmp_356*tmp_722 + tmp_357*tmp_723) + tmp_62*(tmp_329*tmp_704 + tmp_331*tmp_706 + tmp_333*tmp_708) + tmp_83*(tmp_338*tmp_710 + tmp_340*tmp_712 + tmp_341*tmp_713);
      real_t a_8_8 = tmp_104*(tmp_376*tmp_715 + tmp_378*tmp_717 + tmp_379*tmp_718) + tmp_125*(tmp_383*tmp_720 + tmp_385*tmp_722 + tmp_386*tmp_723) + tmp_62*(tmp_361*tmp_704 + tmp_363*tmp_706 + tmp_365*tmp_708) + tmp_83*(tmp_369*tmp_710 + tmp_371*tmp_712 + tmp_372*tmp_713);
      real_t a_8_9 = tmp_104*(tmp_402*tmp_715 + tmp_404*tmp_717 + tmp_405*tmp_718) + tmp_125*(tmp_408*tmp_720 + tmp_410*tmp_722 + tmp_411*tmp_723) + tmp_62*(tmp_389*tmp_704 + tmp_391*tmp_706 + tmp_393*tmp_708) + tmp_83*(tmp_396*tmp_710 + tmp_398*tmp_712 + tmp_399*tmp_713);
      real_t a_9_0 = tmp_104*(tmp_103*tmp_739 + tmp_736*tmp_91 + tmp_738*tmp_97) + tmp_125*(tmp_112*tmp_741 + tmp_118*tmp_743 + tmp_124*tmp_744) + tmp_62*(tmp_30*tmp_725 + tmp_39*tmp_727 + tmp_48*tmp_729) + tmp_83*(tmp_70*tmp_731 + tmp_733*tmp_76 + tmp_734*tmp_82);
      real_t a_9_1 = tmp_104*(tmp_141*tmp_735 + tmp_142*tmp_737 + tmp_143*tmp_739) + tmp_125*(tmp_146*tmp_740 + tmp_147*tmp_742 + tmp_148*tmp_744) + tmp_62*(tmp_129*tmp_724 + tmp_130*tmp_726 + tmp_133*tmp_729) + tmp_83*(tmp_136*tmp_730 + tmp_137*tmp_732 + tmp_138*tmp_734);
      real_t a_9_2 = tmp_104*(tmp_163*tmp_735 + tmp_164*tmp_737 + tmp_165*tmp_739) + tmp_125*(tmp_168*tmp_740 + tmp_169*tmp_742 + tmp_170*tmp_744) + tmp_62*(tmp_151*tmp_724 + tmp_152*tmp_726 + tmp_155*tmp_729) + tmp_83*(tmp_158*tmp_730 + tmp_159*tmp_732 + tmp_160*tmp_734);
      real_t a_9_3 = tmp_104*(tmp_185*tmp_735 + tmp_186*tmp_737 + tmp_187*tmp_739) + tmp_125*(tmp_190*tmp_740 + tmp_191*tmp_742 + tmp_192*tmp_744) + tmp_62*(tmp_173*tmp_724 + tmp_174*tmp_726 + tmp_177*tmp_729) + tmp_83*(tmp_180*tmp_730 + tmp_181*tmp_732 + tmp_182*tmp_734);
      real_t a_9_4 = tmp_104*(tmp_223*tmp_739 + tmp_228*tmp_736 + tmp_231*tmp_738) + tmp_125*(tmp_236*tmp_744 + tmp_241*tmp_741 + tmp_244*tmp_743) + tmp_62*(tmp_197*tmp_729 + tmp_202*tmp_725 + tmp_205*tmp_727) + tmp_83*(tmp_210*tmp_734 + tmp_215*tmp_731 + tmp_218*tmp_733);
      real_t a_9_5 = tmp_104*(tmp_270*tmp_739 + tmp_274*tmp_736 + tmp_277*tmp_738) + tmp_125*(tmp_281*tmp_744 + tmp_285*tmp_741 + tmp_288*tmp_743) + tmp_62*(tmp_248*tmp_729 + tmp_252*tmp_725 + tmp_255*tmp_727) + tmp_83*(tmp_259*tmp_734 + tmp_263*tmp_731 + tmp_266*tmp_733);
      real_t a_9_6 = tmp_104*(tmp_309*tmp_739 + tmp_312*tmp_736 + tmp_315*tmp_738) + tmp_125*(tmp_318*tmp_744 + tmp_321*tmp_741 + tmp_324*tmp_743) + tmp_62*(tmp_291*tmp_729 + tmp_294*tmp_725 + tmp_297*tmp_727) + tmp_83*(tmp_300*tmp_734 + tmp_303*tmp_731 + tmp_306*tmp_733);
      real_t a_9_7 = tmp_104*(tmp_346*tmp_736 + tmp_348*tmp_738 + tmp_349*tmp_739) + tmp_125*(tmp_354*tmp_741 + tmp_356*tmp_743 + tmp_357*tmp_744) + tmp_62*(tmp_329*tmp_725 + tmp_331*tmp_727 + tmp_333*tmp_729) + tmp_83*(tmp_338*tmp_731 + tmp_340*tmp_733 + tmp_341*tmp_734);
      real_t a_9_8 = tmp_104*(tmp_376*tmp_736 + tmp_378*tmp_738 + tmp_379*tmp_739) + tmp_125*(tmp_383*tmp_741 + tmp_385*tmp_743 + tmp_386*tmp_744) + tmp_62*(tmp_361*tmp_725 + tmp_363*tmp_727 + tmp_365*tmp_729) + tmp_83*(tmp_369*tmp_731 + tmp_371*tmp_733 + tmp_372*tmp_734);
      real_t a_9_9 = tmp_104*(tmp_402*tmp_736 + tmp_404*tmp_738 + tmp_405*tmp_739) + tmp_125*(tmp_408*tmp_741 + tmp_410*tmp_743 + tmp_411*tmp_744) + tmp_62*(tmp_389*tmp_725 + tmp_391*tmp_727 + tmp_393*tmp_729) + tmp_83*(tmp_396*tmp_731 + tmp_398*tmp_733 + tmp_399*tmp_734);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_11*tmp_4;
      real_t tmp_32 = tmp_23*tmp_31;
      real_t tmp_33 = tmp_1*tmp_8 - tmp_11*tmp_13;
      real_t tmp_34 = tmp_23*tmp_33;
      real_t tmp_35 = tmp_13*tmp_14 - tmp_4*tmp_8;
      real_t tmp_36 = tmp_23*tmp_35;
      real_t tmp_37 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_38 = 2*tmp_37;
      real_t tmp_39 = tmp_15 - tmp_18;
      real_t tmp_40 = 1.0*tmp_23;
      real_t tmp_41 = tmp_12 - tmp_17;
      real_t tmp_42 = -tmp_16 + tmp_9;
      real_t tmp_43 = tmp_39*tmp_40 + tmp_40*tmp_41 + tmp_40*tmp_42;
      real_t tmp_44 = 2.0*tmp_23;
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 2.3416407864998732;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_19*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_6*tmp_62;
      real_t tmp_64 = tmp_25*tmp_62;
      real_t tmp_65 = tmp_27*tmp_62;
      real_t tmp_66 = 0.5*tmp_63 + 0.5*tmp_64 + 0.5*tmp_65;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = tmp_31*tmp_62;
      real_t tmp_69 = tmp_33*tmp_62;
      real_t tmp_70 = tmp_35*tmp_62;
      real_t tmp_71 = 0.5*tmp_68 + 0.5*tmp_69 + 0.5*tmp_70;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 1.0*tmp_62;
      real_t tmp_74 = tmp_39*tmp_73 + tmp_41*tmp_73 + tmp_42*tmp_73;
      real_t tmp_75 = 2.0*tmp_62;
      real_t tmp_76 = 0.041666666666666657*tmp_57;
      real_t tmp_77 = 2.3416407864998732;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = tmp_19*(tmp_77 + tmp_78 + tmp_79 - 3.0);
      real_t tmp_81 = tmp_6*tmp_80;
      real_t tmp_82 = tmp_25*tmp_80;
      real_t tmp_83 = tmp_27*tmp_80;
      real_t tmp_84 = 0.5*tmp_81 + 0.5*tmp_82 + 0.5*tmp_83;
      real_t tmp_85 = 2*tmp_84;
      real_t tmp_86 = tmp_31*tmp_80;
      real_t tmp_87 = tmp_33*tmp_80;
      real_t tmp_88 = tmp_35*tmp_80;
      real_t tmp_89 = 0.5*tmp_86 + 0.5*tmp_87 + 0.5*tmp_88;
      real_t tmp_90 = 2*tmp_89;
      real_t tmp_91 = 1.0*tmp_80;
      real_t tmp_92 = tmp_39*tmp_91 + tmp_41*tmp_91 + tmp_42*tmp_91;
      real_t tmp_93 = 2.0*tmp_80;
      real_t tmp_94 = 0.041666666666666657*tmp_57;
      real_t tmp_95 = 0.55278640450004235;
      real_t tmp_96 = 0.55278640450004235;
      real_t tmp_97 = 0.55278640450004235;
      real_t tmp_98 = tmp_19*(tmp_95 + tmp_96 + tmp_97 - 3.0);
      real_t tmp_99 = tmp_6*tmp_98;
      real_t tmp_100 = tmp_25*tmp_98;
      real_t tmp_101 = tmp_27*tmp_98;
      real_t tmp_102 = 0.5*tmp_100 + 0.5*tmp_101 + 0.5*tmp_99;
      real_t tmp_103 = 2*tmp_102;
      real_t tmp_104 = tmp_31*tmp_98;
      real_t tmp_105 = tmp_33*tmp_98;
      real_t tmp_106 = tmp_35*tmp_98;
      real_t tmp_107 = 0.5*tmp_104 + 0.5*tmp_105 + 0.5*tmp_106;
      real_t tmp_108 = 2*tmp_107;
      real_t tmp_109 = 1.0*tmp_98;
      real_t tmp_110 = tmp_109*tmp_39 + tmp_109*tmp_41 + tmp_109*tmp_42;
      real_t tmp_111 = 2.0*tmp_98;
      real_t tmp_112 = 0.041666666666666657*tmp_57;
      real_t tmp_113 = 2.0*tmp_20 - 2.0;
      real_t tmp_114 = tmp_113*tmp_19;
      real_t tmp_115 = tmp_19*tmp_42;
      real_t tmp_116 = 2.0*tmp_59 - 2.0;
      real_t tmp_117 = tmp_116*tmp_19;
      real_t tmp_118 = 2.0*tmp_77 - 2.0;
      real_t tmp_119 = tmp_118*tmp_19;
      real_t tmp_120 = 2.0*tmp_95 - 2.0;
      real_t tmp_121 = tmp_120*tmp_19;
      real_t tmp_122 = 2.0*tmp_21 - 2.0;
      real_t tmp_123 = tmp_122*tmp_19;
      real_t tmp_124 = tmp_19*tmp_41;
      real_t tmp_125 = 2.0*tmp_60 - 2.0;
      real_t tmp_126 = tmp_125*tmp_19;
      real_t tmp_127 = 2.0*tmp_78 - 2.0;
      real_t tmp_128 = tmp_127*tmp_19;
      real_t tmp_129 = 2.0*tmp_96 - 2.0;
      real_t tmp_130 = tmp_129*tmp_19;
      real_t tmp_131 = 2.0*tmp_22 - 2.0;
      real_t tmp_132 = tmp_131*tmp_19;
      real_t tmp_133 = tmp_19*tmp_39;
      real_t tmp_134 = 2.0*tmp_61 - 2.0;
      real_t tmp_135 = tmp_134*tmp_19;
      real_t tmp_136 = 2.0*tmp_79 - 2.0;
      real_t tmp_137 = tmp_136*tmp_19;
      real_t tmp_138 = 2.0*tmp_97 - 2.0;
      real_t tmp_139 = tmp_138*tmp_19;
      real_t tmp_140 = 1.1055728090000847;
      real_t tmp_141 = tmp_133*tmp_140;
      real_t tmp_142 = 4.6832815729997463;
      real_t tmp_143 = tmp_124*tmp_142;
      real_t tmp_144 = tmp_19*tmp_21;
      real_t tmp_145 = tmp_144*tmp_6;
      real_t tmp_146 = tmp_19*tmp_22;
      real_t tmp_147 = tmp_146*tmp_25;
      real_t tmp_148 = tmp_144*tmp_31;
      real_t tmp_149 = tmp_146*tmp_33;
      real_t tmp_150 = 4.6832815729997463;
      real_t tmp_151 = tmp_133*tmp_150;
      real_t tmp_152 = 1.1055728090000847;
      real_t tmp_153 = tmp_124*tmp_152;
      real_t tmp_154 = tmp_19*tmp_60;
      real_t tmp_155 = tmp_154*tmp_6;
      real_t tmp_156 = tmp_19*tmp_61;
      real_t tmp_157 = tmp_156*tmp_25;
      real_t tmp_158 = tmp_154*tmp_31;
      real_t tmp_159 = tmp_156*tmp_33;
      real_t tmp_160 = 1.1055728090000847;
      real_t tmp_161 = tmp_133*tmp_160;
      real_t tmp_162 = 1.1055728090000847;
      real_t tmp_163 = tmp_124*tmp_162;
      real_t tmp_164 = tmp_19*tmp_78;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_19*tmp_79;
      real_t tmp_167 = tmp_166*tmp_25;
      real_t tmp_168 = tmp_164*tmp_31;
      real_t tmp_169 = tmp_166*tmp_33;
      real_t tmp_170 = 1.1055728090000847;
      real_t tmp_171 = tmp_133*tmp_170;
      real_t tmp_172 = 1.1055728090000847;
      real_t tmp_173 = tmp_124*tmp_172;
      real_t tmp_174 = tmp_19*tmp_96;
      real_t tmp_175 = tmp_174*tmp_6;
      real_t tmp_176 = tmp_19*tmp_97;
      real_t tmp_177 = tmp_176*tmp_25;
      real_t tmp_178 = tmp_174*tmp_31;
      real_t tmp_179 = tmp_176*tmp_33;
      real_t tmp_180 = 1.1055728090000847;
      real_t tmp_181 = tmp_133*tmp_180;
      real_t tmp_182 = tmp_115*tmp_142;
      real_t tmp_183 = tmp_19*tmp_20;
      real_t tmp_184 = tmp_183*tmp_6;
      real_t tmp_185 = tmp_146*tmp_27;
      real_t tmp_186 = tmp_183*tmp_31;
      real_t tmp_187 = tmp_146*tmp_35;
      real_t tmp_188 = 1.1055728090000847;
      real_t tmp_189 = tmp_133*tmp_188;
      real_t tmp_190 = tmp_115*tmp_152;
      real_t tmp_191 = tmp_19*tmp_59;
      real_t tmp_192 = tmp_191*tmp_6;
      real_t tmp_193 = tmp_156*tmp_27;
      real_t tmp_194 = tmp_191*tmp_31;
      real_t tmp_195 = tmp_156*tmp_35;
      real_t tmp_196 = 4.6832815729997463;
      real_t tmp_197 = tmp_133*tmp_196;
      real_t tmp_198 = tmp_115*tmp_162;
      real_t tmp_199 = tmp_19*tmp_77;
      real_t tmp_200 = tmp_199*tmp_6;
      real_t tmp_201 = tmp_166*tmp_27;
      real_t tmp_202 = tmp_199*tmp_31;
      real_t tmp_203 = tmp_166*tmp_35;
      real_t tmp_204 = 1.1055728090000847;
      real_t tmp_205 = tmp_133*tmp_204;
      real_t tmp_206 = tmp_115*tmp_172;
      real_t tmp_207 = tmp_19*tmp_95;
      real_t tmp_208 = tmp_207*tmp_6;
      real_t tmp_209 = tmp_176*tmp_27;
      real_t tmp_210 = tmp_207*tmp_31;
      real_t tmp_211 = tmp_176*tmp_35;
      real_t tmp_212 = tmp_124*tmp_180;
      real_t tmp_213 = tmp_115*tmp_140;
      real_t tmp_214 = tmp_183*tmp_25;
      real_t tmp_215 = tmp_144*tmp_27;
      real_t tmp_216 = tmp_183*tmp_33;
      real_t tmp_217 = tmp_144*tmp_35;
      real_t tmp_218 = tmp_124*tmp_188;
      real_t tmp_219 = tmp_115*tmp_150;
      real_t tmp_220 = tmp_191*tmp_25;
      real_t tmp_221 = tmp_154*tmp_27;
      real_t tmp_222 = tmp_191*tmp_33;
      real_t tmp_223 = tmp_154*tmp_35;
      real_t tmp_224 = tmp_124*tmp_196;
      real_t tmp_225 = tmp_115*tmp_160;
      real_t tmp_226 = tmp_199*tmp_25;
      real_t tmp_227 = tmp_164*tmp_27;
      real_t tmp_228 = tmp_199*tmp_33;
      real_t tmp_229 = tmp_164*tmp_35;
      real_t tmp_230 = tmp_124*tmp_204;
      real_t tmp_231 = tmp_115*tmp_170;
      real_t tmp_232 = tmp_207*tmp_25;
      real_t tmp_233 = tmp_174*tmp_27;
      real_t tmp_234 = tmp_207*tmp_33;
      real_t tmp_235 = tmp_174*tmp_35;
      real_t tmp_236 = -tmp_21;
      real_t tmp_237 = 4.0 - tmp_20;
      real_t tmp_238 = tmp_19*(-tmp_142 + tmp_236 + tmp_237);
      real_t tmp_239 = 2.0*tmp_39;
      real_t tmp_240 = -tmp_60;
      real_t tmp_241 = 4.0 - tmp_59;
      real_t tmp_242 = tmp_19*(-tmp_152 + tmp_240 + tmp_241);
      real_t tmp_243 = -tmp_78;
      real_t tmp_244 = 4.0 - tmp_77;
      real_t tmp_245 = tmp_19*(-tmp_162 + tmp_243 + tmp_244);
      real_t tmp_246 = -tmp_96;
      real_t tmp_247 = 4.0 - tmp_95;
      real_t tmp_248 = tmp_19*(-tmp_172 + tmp_246 + tmp_247);
      real_t tmp_249 = -tmp_22;
      real_t tmp_250 = tmp_19*(-tmp_140 + tmp_237 + tmp_249);
      real_t tmp_251 = 2.0*tmp_41;
      real_t tmp_252 = -tmp_61;
      real_t tmp_253 = tmp_19*(-tmp_150 + tmp_241 + tmp_252);
      real_t tmp_254 = -tmp_79;
      real_t tmp_255 = tmp_19*(-tmp_160 + tmp_244 + tmp_254);
      real_t tmp_256 = -tmp_97;
      real_t tmp_257 = tmp_19*(-tmp_170 + tmp_247 + tmp_256);
      real_t tmp_258 = tmp_19*(-tmp_180 + tmp_236 + tmp_249 + 4.0);
      real_t tmp_259 = 2.0*tmp_42;
      real_t tmp_260 = tmp_19*(-tmp_188 + tmp_240 + tmp_252 + 4.0);
      real_t tmp_261 = tmp_19*(-tmp_196 + tmp_243 + tmp_254 + 4.0);
      real_t tmp_262 = tmp_19*(-tmp_204 + tmp_246 + tmp_256 + 4.0);
      real_t a_0_0 = tmp_112*(tmp_103*(tmp_100 + tmp_101 + tmp_99) + tmp_108*(tmp_104 + tmp_105 + tmp_106) + tmp_110*(tmp_111*tmp_39 + tmp_111*tmp_41 + tmp_111*tmp_42)) + tmp_58*(tmp_30*(tmp_24 + tmp_26 + tmp_28) + tmp_38*(tmp_32 + tmp_34 + tmp_36) + tmp_43*(tmp_39*tmp_44 + tmp_41*tmp_44 + tmp_42*tmp_44)) + tmp_76*(tmp_67*(tmp_63 + tmp_64 + tmp_65) + tmp_72*(tmp_68 + tmp_69 + tmp_70) + tmp_74*(tmp_39*tmp_75 + tmp_41*tmp_75 + tmp_42*tmp_75)) + tmp_94*(tmp_85*(tmp_81 + tmp_82 + tmp_83) + tmp_90*(tmp_86 + tmp_87 + tmp_88) + tmp_92*(tmp_39*tmp_93 + tmp_41*tmp_93 + tmp_42*tmp_93));
      real_t a_0_1 = tmp_112*(tmp_102*tmp_121*tmp_27 + tmp_107*tmp_121*tmp_35 + tmp_110*tmp_115*tmp_120) + tmp_58*(tmp_113*tmp_115*tmp_43 + tmp_114*tmp_27*tmp_29 + tmp_114*tmp_35*tmp_37) + tmp_76*(tmp_115*tmp_116*tmp_74 + tmp_117*tmp_27*tmp_66 + tmp_117*tmp_35*tmp_71) + tmp_94*(tmp_115*tmp_118*tmp_92 + tmp_119*tmp_27*tmp_84 + tmp_119*tmp_35*tmp_89);
      real_t a_0_2 = tmp_112*(tmp_102*tmp_130*tmp_25 + tmp_107*tmp_130*tmp_33 + tmp_110*tmp_124*tmp_129) + tmp_58*(tmp_122*tmp_124*tmp_43 + tmp_123*tmp_25*tmp_29 + tmp_123*tmp_33*tmp_37) + tmp_76*(tmp_124*tmp_125*tmp_74 + tmp_126*tmp_25*tmp_66 + tmp_126*tmp_33*tmp_71) + tmp_94*(tmp_124*tmp_127*tmp_92 + tmp_128*tmp_25*tmp_84 + tmp_128*tmp_33*tmp_89);
      real_t a_0_3 = tmp_112*(tmp_102*tmp_139*tmp_6 + tmp_107*tmp_139*tmp_31 + tmp_110*tmp_133*tmp_138) + tmp_58*(tmp_131*tmp_133*tmp_43 + tmp_132*tmp_29*tmp_6 + tmp_132*tmp_31*tmp_37) + tmp_76*(tmp_133*tmp_134*tmp_74 + tmp_135*tmp_31*tmp_71 + tmp_135*tmp_6*tmp_66) + tmp_94*(tmp_133*tmp_136*tmp_92 + tmp_137*tmp_31*tmp_89 + tmp_137*tmp_6*tmp_84);
      real_t a_0_4 = tmp_112*(tmp_103*(tmp_175 + tmp_177) + tmp_108*(tmp_178 + tmp_179) + tmp_110*(tmp_171 + tmp_173)) + tmp_58*(tmp_30*(tmp_145 + tmp_147) + tmp_38*(tmp_148 + tmp_149) + tmp_43*(tmp_141 + tmp_143)) + tmp_76*(tmp_67*(tmp_155 + tmp_157) + tmp_72*(tmp_158 + tmp_159) + tmp_74*(tmp_151 + tmp_153)) + tmp_94*(tmp_85*(tmp_165 + tmp_167) + tmp_90*(tmp_168 + tmp_169) + tmp_92*(tmp_161 + tmp_163));
      real_t a_0_5 = tmp_112*(tmp_103*(tmp_208 + tmp_209) + tmp_108*(tmp_210 + tmp_211) + tmp_110*(tmp_205 + tmp_206)) + tmp_58*(tmp_30*(tmp_184 + tmp_185) + tmp_38*(tmp_186 + tmp_187) + tmp_43*(tmp_181 + tmp_182)) + tmp_76*(tmp_67*(tmp_192 + tmp_193) + tmp_72*(tmp_194 + tmp_195) + tmp_74*(tmp_189 + tmp_190)) + tmp_94*(tmp_85*(tmp_200 + tmp_201) + tmp_90*(tmp_202 + tmp_203) + tmp_92*(tmp_197 + tmp_198));
      real_t a_0_6 = tmp_112*(tmp_103*(tmp_232 + tmp_233) + tmp_108*(tmp_234 + tmp_235) + tmp_110*(tmp_230 + tmp_231)) + tmp_58*(tmp_30*(tmp_214 + tmp_215) + tmp_38*(tmp_216 + tmp_217) + tmp_43*(tmp_212 + tmp_213)) + tmp_76*(tmp_67*(tmp_220 + tmp_221) + tmp_72*(tmp_222 + tmp_223) + tmp_74*(tmp_218 + tmp_219)) + tmp_94*(tmp_85*(tmp_226 + tmp_227) + tmp_90*(tmp_228 + tmp_229) + tmp_92*(tmp_224 + tmp_225));
      real_t a_0_7 = tmp_112*(tmp_103*(-tmp_177 - tmp_209 + tmp_248*tmp_6) + tmp_108*(-tmp_179 - tmp_211 + tmp_248*tmp_31) + tmp_110*(-tmp_173 - tmp_206 + tmp_239*tmp_248)) + tmp_58*(tmp_30*(-tmp_147 - tmp_185 + tmp_238*tmp_6) + tmp_38*(-tmp_149 - tmp_187 + tmp_238*tmp_31) + tmp_43*(-tmp_143 - tmp_182 + tmp_238*tmp_239)) + tmp_76*(tmp_67*(-tmp_157 - tmp_193 + tmp_242*tmp_6) + tmp_72*(-tmp_159 - tmp_195 + tmp_242*tmp_31) + tmp_74*(-tmp_153 - tmp_190 + tmp_239*tmp_242)) + tmp_94*(tmp_85*(-tmp_167 - tmp_201 + tmp_245*tmp_6) + tmp_90*(-tmp_169 - tmp_203 + tmp_245*tmp_31) + tmp_92*(-tmp_163 - tmp_198 + tmp_239*tmp_245));
      real_t a_0_8 = tmp_112*(tmp_103*(-tmp_175 - tmp_233 + tmp_25*tmp_257) + tmp_108*(-tmp_178 - tmp_235 + tmp_257*tmp_33) + tmp_110*(-tmp_171 - tmp_231 + tmp_251*tmp_257)) + tmp_58*(tmp_30*(-tmp_145 - tmp_215 + tmp_25*tmp_250) + tmp_38*(-tmp_148 - tmp_217 + tmp_250*tmp_33) + tmp_43*(-tmp_141 - tmp_213 + tmp_250*tmp_251)) + tmp_76*(tmp_67*(-tmp_155 - tmp_221 + tmp_25*tmp_253) + tmp_72*(-tmp_158 - tmp_223 + tmp_253*tmp_33) + tmp_74*(-tmp_151 - tmp_219 + tmp_251*tmp_253)) + tmp_94*(tmp_85*(-tmp_165 - tmp_227 + tmp_25*tmp_255) + tmp_90*(-tmp_168 - tmp_229 + tmp_255*tmp_33) + tmp_92*(-tmp_161 - tmp_225 + tmp_251*tmp_255));
      real_t a_0_9 = tmp_112*(tmp_103*(-tmp_208 - tmp_232 + tmp_262*tmp_27) + tmp_108*(-tmp_210 - tmp_234 + tmp_262*tmp_35) + tmp_110*(-tmp_205 - tmp_230 + tmp_259*tmp_262)) + tmp_58*(tmp_30*(-tmp_184 - tmp_214 + tmp_258*tmp_27) + tmp_38*(-tmp_186 - tmp_216 + tmp_258*tmp_35) + tmp_43*(-tmp_181 - tmp_212 + tmp_258*tmp_259)) + tmp_76*(tmp_67*(-tmp_192 - tmp_220 + tmp_260*tmp_27) + tmp_72*(-tmp_194 - tmp_222 + tmp_260*tmp_35) + tmp_74*(-tmp_189 - tmp_218 + tmp_259*tmp_260)) + tmp_94*(tmp_85*(-tmp_200 - tmp_226 + tmp_261*tmp_27) + tmp_90*(-tmp_202 - tmp_228 + tmp_261*tmp_35) + tmp_92*(-tmp_197 - tmp_224 + tmp_259*tmp_261));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.66666666666666663;
      real_t tmp_8 = 2.6666666666666665;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_11 = tmp_1*tmp_9 + tmp_10*tmp_9;
      real_t tmp_12 = 0.5*tmp_9;
      real_t tmp_13 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_14 = tmp_12*tmp_13 + tmp_12*tmp_3;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 0.16666666666666666*tmp_16;
      real_t tmp_18 = tmp_14*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_6*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21 + tmp_10*tmp_21;
      real_t tmp_23 = 0.5*tmp_21;
      real_t tmp_24 = tmp_13*tmp_23 + tmp_23*tmp_3;
      real_t tmp_25 = 0.16666666666666666*tmp_16;
      real_t tmp_26 = tmp_24*tmp_25;
      real_t tmp_27 = 0.66666666666666663;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = tmp_6*(tmp_27 + tmp_28 - 3);
      real_t tmp_30 = tmp_1*tmp_29 + tmp_10*tmp_29;
      real_t tmp_31 = 0.5*tmp_29;
      real_t tmp_32 = tmp_13*tmp_31 + tmp_3*tmp_31;
      real_t tmp_33 = 0.16666666666666666*tmp_16;
      real_t tmp_34 = tmp_32*tmp_33;
      real_t tmp_35 = tmp_1*tmp_6;
      real_t tmp_36 = 2.0*tmp_15;
      real_t tmp_37 = tmp_35*tmp_36;
      real_t tmp_38 = tmp_7 - 1;
      real_t tmp_39 = 0.16666666666666666*tmp_38;
      real_t tmp_40 = tmp_37*tmp_39;
      real_t tmp_41 = 0.16666666666666666*tmp_24;
      real_t tmp_42 = tmp_19 - 1;
      real_t tmp_43 = tmp_37*tmp_42;
      real_t tmp_44 = 0.16666666666666666*tmp_32;
      real_t tmp_45 = tmp_27 - 1;
      real_t tmp_46 = tmp_37*tmp_45;
      real_t tmp_47 = tmp_10*tmp_6;
      real_t tmp_48 = tmp_36*tmp_47;
      real_t tmp_49 = tmp_8 - 1;
      real_t tmp_50 = 0.16666666666666666*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_48*tmp_52;
      real_t tmp_54 = tmp_28 - 1;
      real_t tmp_55 = tmp_48*tmp_54;
      real_t tmp_56 = 4.0*tmp_47;
      real_t tmp_57 = 0.16666666666666666*tmp_56;
      real_t tmp_58 = 4.0*tmp_35;
      real_t tmp_59 = 0.66666666666666663*tmp_58;
      real_t tmp_60 = tmp_57 + tmp_59;
      real_t tmp_61 = 0.66666666666666663*tmp_56;
      real_t tmp_62 = 0.16666666666666666*tmp_58;
      real_t tmp_63 = tmp_61 + tmp_62;
      real_t tmp_64 = 0.16666666666666666*tmp_56;
      real_t tmp_65 = 0.16666666666666666*tmp_58;
      real_t tmp_66 = tmp_64 + tmp_65;
      real_t tmp_67 = -tmp_7 - 1.333333333333333;
      real_t tmp_68 = tmp_47*tmp_67 - tmp_59;
      real_t tmp_69 = 2.666666666666667 - tmp_19;
      real_t tmp_70 = tmp_47*tmp_69 - tmp_62;
      real_t tmp_71 = 2.666666666666667 - tmp_27;
      real_t tmp_72 = tmp_47*tmp_71 - tmp_65;
      real_t tmp_73 = 2.666666666666667 - tmp_8;
      real_t tmp_74 = tmp_35*tmp_73 - tmp_57;
      real_t tmp_75 = -tmp_20 - 1.333333333333333;
      real_t tmp_76 = tmp_35*tmp_75 - tmp_61;
      real_t tmp_77 = 2.666666666666667 - tmp_28;
      real_t tmp_78 = tmp_35*tmp_77 - tmp_64;
      real_t tmp_79 = 1.0*tmp_15;
      real_t tmp_80 = tmp_13*tmp_79;
      real_t tmp_81 = tmp_6*tmp_80;
      real_t tmp_82 = tmp_39*tmp_81;
      real_t tmp_83 = 0.16666666666666666*tmp_22;
      real_t tmp_84 = tmp_42*tmp_81;
      real_t tmp_85 = 0.16666666666666666*tmp_30;
      real_t tmp_86 = tmp_45*tmp_81;
      real_t tmp_87 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_88 = 0.16666666666666666*tmp_87;
      real_t tmp_89 = tmp_1*tmp_80;
      real_t tmp_90 = tmp_87*tmp_89;
      real_t tmp_91 = tmp_10*tmp_80*tmp_87;
      real_t tmp_92 = tmp_39*tmp_49;
      real_t tmp_93 = 0.16666666666666666*tmp_42*tmp_52;
      real_t tmp_94 = 0.16666666666666666*tmp_45*tmp_54;
      real_t tmp_95 = 0.16666666666666666*tmp_84;
      real_t tmp_96 = 0.16666666666666666*tmp_86;
      real_t tmp_97 = tmp_3*tmp_79;
      real_t tmp_98 = tmp_6*tmp_97;
      real_t tmp_99 = tmp_50*tmp_98;
      real_t tmp_100 = tmp_52*tmp_98;
      real_t tmp_101 = tmp_54*tmp_98;
      real_t tmp_102 = tmp_4*tmp_79*tmp_87;
      real_t tmp_103 = tmp_10*tmp_97;
      real_t tmp_104 = tmp_103*tmp_87;
      real_t tmp_105 = 0.16666666666666666*tmp_100;
      real_t tmp_106 = 0.16666666666666666*tmp_101;
      real_t tmp_107 = 2.0*tmp_6;
      real_t tmp_108 = tmp_107*tmp_3;
      real_t tmp_109 = 0.16666666666666666*tmp_108;
      real_t tmp_110 = tmp_107*tmp_13;
      real_t tmp_111 = 0.66666666666666663*tmp_110;
      real_t tmp_112 = tmp_109 + tmp_111;
      real_t tmp_113 = tmp_112*tmp_17;
      real_t tmp_114 = 0.66666666666666663*tmp_108;
      real_t tmp_115 = 0.16666666666666666*tmp_110;
      real_t tmp_116 = tmp_114 + tmp_115;
      real_t tmp_117 = tmp_116*tmp_25;
      real_t tmp_118 = 0.16666666666666666*tmp_108;
      real_t tmp_119 = 0.16666666666666666*tmp_110;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_120*tmp_33;
      real_t tmp_122 = 0.16666666666666666*tmp_116;
      real_t tmp_123 = 0.16666666666666666*tmp_120;
      real_t tmp_124 = 0.5*tmp_6;
      real_t tmp_125 = tmp_124*tmp_3;
      real_t tmp_126 = -tmp_111 + tmp_125*tmp_67;
      real_t tmp_127 = tmp_126*tmp_17;
      real_t tmp_128 = -tmp_115 + tmp_125*tmp_69;
      real_t tmp_129 = tmp_128*tmp_25;
      real_t tmp_130 = -tmp_119 + tmp_125*tmp_71;
      real_t tmp_131 = tmp_130*tmp_33;
      real_t tmp_132 = 0.16666666666666666*tmp_128;
      real_t tmp_133 = 0.16666666666666666*tmp_130;
      real_t tmp_134 = tmp_124*tmp_13;
      real_t tmp_135 = -tmp_109 + tmp_134*tmp_73;
      real_t tmp_136 = tmp_135*tmp_17;
      real_t tmp_137 = -tmp_114 + tmp_134*tmp_75;
      real_t tmp_138 = tmp_137*tmp_25;
      real_t tmp_139 = -tmp_118 + tmp_134*tmp_77;
      real_t tmp_140 = tmp_139*tmp_33;
      real_t tmp_141 = 0.16666666666666666*tmp_137;
      real_t tmp_142 = 0.16666666666666666*tmp_139;
      real_t a_0_0 = tmp_11*tmp_18 + tmp_22*tmp_26 + tmp_30*tmp_34;
      real_t a_0_1 = tmp_14*tmp_40 + tmp_41*tmp_43 + tmp_44*tmp_46;
      real_t a_0_2 = tmp_14*tmp_51 + tmp_41*tmp_53 + tmp_44*tmp_55;
      real_t a_0_3 = tmp_18*tmp_60 + tmp_26*tmp_63 + tmp_34*tmp_66;
      real_t a_0_4 = tmp_18*tmp_68 + tmp_26*tmp_70 + tmp_34*tmp_72;
      real_t a_0_5 = tmp_18*tmp_74 + tmp_26*tmp_76 + tmp_34*tmp_78;
      real_t a_1_0 = tmp_11*tmp_82 + tmp_83*tmp_84 + tmp_85*tmp_86;
      real_t a_1_1 = (tmp_38*tmp_38)*tmp_88*tmp_89 + 0.16666666666666666*(tmp_42*tmp_42)*tmp_90 + 0.16666666666666666*(tmp_45*tmp_45)*tmp_90;
      real_t a_1_2 = tmp_91*tmp_92 + tmp_91*tmp_93 + tmp_91*tmp_94;
      real_t a_1_3 = tmp_60*tmp_82 + tmp_63*tmp_95 + tmp_66*tmp_96;
      real_t a_1_4 = tmp_68*tmp_82 + tmp_70*tmp_95 + tmp_72*tmp_96;
      real_t a_1_5 = tmp_74*tmp_82 + tmp_76*tmp_95 + tmp_78*tmp_96;
      real_t a_2_0 = tmp_100*tmp_83 + tmp_101*tmp_85 + tmp_11*tmp_99;
      real_t a_2_1 = tmp_102*tmp_92 + tmp_102*tmp_93 + tmp_102*tmp_94;
      real_t a_2_2 = tmp_103*(tmp_49*tmp_49)*tmp_88 + 0.16666666666666666*tmp_104*(tmp_52*tmp_52) + 0.16666666666666666*tmp_104*(tmp_54*tmp_54);
      real_t a_2_3 = tmp_105*tmp_63 + tmp_106*tmp_66 + tmp_60*tmp_99;
      real_t a_2_4 = tmp_105*tmp_70 + tmp_106*tmp_72 + tmp_68*tmp_99;
      real_t a_2_5 = tmp_105*tmp_76 + tmp_106*tmp_78 + tmp_74*tmp_99;
      real_t a_3_0 = tmp_11*tmp_113 + tmp_117*tmp_22 + tmp_121*tmp_30;
      real_t a_3_1 = tmp_112*tmp_40 + tmp_122*tmp_43 + tmp_123*tmp_46;
      real_t a_3_2 = tmp_112*tmp_51 + tmp_122*tmp_53 + tmp_123*tmp_55;
      real_t a_3_3 = tmp_113*tmp_60 + tmp_117*tmp_63 + tmp_121*tmp_66;
      real_t a_3_4 = tmp_113*tmp_68 + tmp_117*tmp_70 + tmp_121*tmp_72;
      real_t a_3_5 = tmp_113*tmp_74 + tmp_117*tmp_76 + tmp_121*tmp_78;
      real_t a_4_0 = tmp_11*tmp_127 + tmp_129*tmp_22 + tmp_131*tmp_30;
      real_t a_4_1 = tmp_126*tmp_40 + tmp_132*tmp_43 + tmp_133*tmp_46;
      real_t a_4_2 = tmp_126*tmp_51 + tmp_132*tmp_53 + tmp_133*tmp_55;
      real_t a_4_3 = tmp_127*tmp_60 + tmp_129*tmp_63 + tmp_131*tmp_66;
      real_t a_4_4 = tmp_127*tmp_68 + tmp_129*tmp_70 + tmp_131*tmp_72;
      real_t a_4_5 = tmp_127*tmp_74 + tmp_129*tmp_76 + tmp_131*tmp_78;
      real_t a_5_0 = tmp_11*tmp_136 + tmp_138*tmp_22 + tmp_140*tmp_30;
      real_t a_5_1 = tmp_135*tmp_40 + tmp_141*tmp_43 + tmp_142*tmp_46;
      real_t a_5_2 = tmp_135*tmp_51 + tmp_141*tmp_53 + tmp_142*tmp_55;
      real_t a_5_3 = tmp_136*tmp_60 + tmp_138*tmp_63 + tmp_140*tmp_66;
      real_t a_5_4 = tmp_136*tmp_68 + tmp_138*tmp_70 + tmp_140*tmp_72;
      real_t a_5_5 = tmp_136*tmp_74 + tmp_138*tmp_76 + tmp_140*tmp_78;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_0_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_9 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_10 = 2*tmp_9;
      real_t tmp_11 = 0.5*tmp_7;
      real_t tmp_12 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_13 = 0.16666666666666666*tmp_11*tmp_12 + 0.16666666666666666*tmp_11*tmp_3;
      real_t tmp_14 = tmp_10*tmp_13;
      real_t tmp_15 = 2.6666666666666665;
      real_t tmp_16 = 0.66666666666666663;
      real_t tmp_17 = tmp_4*(tmp_15 + tmp_16 - 3);
      real_t tmp_18 = 0.5*tmp_17;
      real_t tmp_19 = 0.16666666666666666*tmp_12*tmp_18 + 0.16666666666666666*tmp_18*tmp_3;
      real_t tmp_20 = tmp_10*tmp_19;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = 0.66666666666666663;
      real_t tmp_23 = tmp_4*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = 0.16666666666666666*tmp_12*tmp_24 + 0.16666666666666666*tmp_24*tmp_3;
      real_t tmp_26 = tmp_10*tmp_25;
      real_t tmp_27 = tmp_1*tmp_4;
      real_t tmp_28 = 2.0*tmp_9;
      real_t tmp_29 = tmp_27*tmp_28;
      real_t tmp_30 = tmp_4*tmp_8;
      real_t tmp_31 = tmp_28*tmp_30;
      real_t tmp_32 = 4.0*tmp_30;
      real_t tmp_33 = 0.16666666666666666*tmp_32;
      real_t tmp_34 = 4.0*tmp_27;
      real_t tmp_35 = 0.66666666666666663*tmp_34;
      real_t tmp_36 = 0.66666666666666663*tmp_32;
      real_t tmp_37 = 0.16666666666666666*tmp_34;
      real_t tmp_38 = 0.16666666666666666*tmp_32;
      real_t tmp_39 = 0.16666666666666666*tmp_34;
      real_t a_0_0 = tmp_14*(tmp_1*tmp_7 + tmp_7*tmp_8) + tmp_20*(tmp_1*tmp_17 + tmp_17*tmp_8) + tmp_26*(tmp_1*tmp_23 + tmp_23*tmp_8);
      real_t a_0_1 = tmp_13*tmp_29*(tmp_5 - 1) + tmp_19*tmp_29*(tmp_15 - 1) + tmp_25*tmp_29*(tmp_21 - 1);
      real_t a_0_2 = tmp_13*tmp_31*(tmp_6 - 1) + tmp_19*tmp_31*(tmp_16 - 1) + tmp_25*tmp_31*(tmp_22 - 1);
      real_t a_0_3 = tmp_14*(tmp_33 + tmp_35) + tmp_20*(tmp_36 + tmp_37) + tmp_26*(tmp_38 + tmp_39);
      real_t a_0_4 = tmp_14*(tmp_30*(-tmp_5 - 1.333333333333333) - tmp_35) + tmp_20*(tmp_30*(2.666666666666667 - tmp_15) - tmp_37) + tmp_26*(tmp_30*(2.666666666666667 - tmp_21) - tmp_39);
      real_t a_0_5 = tmp_14*(tmp_27*(2.666666666666667 - tmp_6) - tmp_33) + tmp_20*(tmp_27*(-tmp_16 - 1.333333333333333) - tmp_36) + tmp_26*(tmp_27*(2.666666666666667 - tmp_22) - tmp_38);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_0_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_15 - tmp_18;
      real_t tmp_26 = tmp_12 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_31 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_15 - tmp_18;
      real_t tmp_25 = tmp_12 - tmp_17;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_43 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_15 - tmp_18;
      real_t tmp_26 = tmp_12 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_31 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_15 - tmp_18;
      real_t tmp_25 = tmp_12 - tmp_17;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_43 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.66666666666666663;
      real_t tmp_8 = 2.6666666666666665;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_1*tmp_9 + tmp_10*tmp_9;
      real_t tmp_12 = 0.5*tmp_9;
      real_t tmp_13 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_14 = tmp_12*tmp_13 + tmp_12*tmp_3;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 0.16666666666666666*tmp_16;
      real_t tmp_18 = tmp_14*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_6*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21 + tmp_10*tmp_21;
      real_t tmp_23 = 0.5*tmp_21;
      real_t tmp_24 = tmp_13*tmp_23 + tmp_23*tmp_3;
      real_t tmp_25 = 0.16666666666666666*tmp_16;
      real_t tmp_26 = tmp_24*tmp_25;
      real_t tmp_27 = 0.66666666666666663;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = tmp_6*(tmp_27 + tmp_28 - 3);
      real_t tmp_30 = tmp_1*tmp_29 + tmp_10*tmp_29;
      real_t tmp_31 = 0.5*tmp_29;
      real_t tmp_32 = tmp_13*tmp_31 + tmp_3*tmp_31;
      real_t tmp_33 = 0.16666666666666666*tmp_16;
      real_t tmp_34 = tmp_32*tmp_33;
      real_t tmp_35 = tmp_10*tmp_6;
      real_t tmp_36 = 2.0*tmp_15;
      real_t tmp_37 = tmp_35*tmp_36;
      real_t tmp_38 = tmp_7 - 1;
      real_t tmp_39 = 0.16666666666666666*tmp_38;
      real_t tmp_40 = tmp_37*tmp_39;
      real_t tmp_41 = 0.16666666666666666*tmp_24;
      real_t tmp_42 = tmp_19 - 1;
      real_t tmp_43 = tmp_37*tmp_42;
      real_t tmp_44 = 0.16666666666666666*tmp_32;
      real_t tmp_45 = tmp_27 - 1;
      real_t tmp_46 = tmp_37*tmp_45;
      real_t tmp_47 = tmp_1*tmp_6;
      real_t tmp_48 = tmp_36*tmp_47;
      real_t tmp_49 = tmp_8 - 1;
      real_t tmp_50 = 0.16666666666666666*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_48*tmp_52;
      real_t tmp_54 = tmp_28 - 1;
      real_t tmp_55 = tmp_48*tmp_54;
      real_t tmp_56 = 4.0*tmp_47;
      real_t tmp_57 = 0.16666666666666666*tmp_56;
      real_t tmp_58 = 4.0*tmp_35;
      real_t tmp_59 = 0.66666666666666663*tmp_58;
      real_t tmp_60 = tmp_57 + tmp_59;
      real_t tmp_61 = 0.66666666666666663*tmp_56;
      real_t tmp_62 = 0.16666666666666666*tmp_58;
      real_t tmp_63 = tmp_61 + tmp_62;
      real_t tmp_64 = 0.16666666666666666*tmp_56;
      real_t tmp_65 = 0.16666666666666666*tmp_58;
      real_t tmp_66 = tmp_64 + tmp_65;
      real_t tmp_67 = -tmp_7 - 1.333333333333333;
      real_t tmp_68 = tmp_47*tmp_67 - tmp_59;
      real_t tmp_69 = 2.666666666666667 - tmp_19;
      real_t tmp_70 = tmp_47*tmp_69 - tmp_62;
      real_t tmp_71 = 2.666666666666667 - tmp_27;
      real_t tmp_72 = tmp_47*tmp_71 - tmp_65;
      real_t tmp_73 = 2.666666666666667 - tmp_8;
      real_t tmp_74 = tmp_35*tmp_73 - tmp_57;
      real_t tmp_75 = -tmp_20 - 1.333333333333333;
      real_t tmp_76 = tmp_35*tmp_75 - tmp_61;
      real_t tmp_77 = 2.666666666666667 - tmp_28;
      real_t tmp_78 = tmp_35*tmp_77 - tmp_64;
      real_t tmp_79 = 1.0*tmp_15;
      real_t tmp_80 = tmp_3*tmp_79;
      real_t tmp_81 = tmp_6*tmp_80;
      real_t tmp_82 = tmp_39*tmp_81;
      real_t tmp_83 = 0.16666666666666666*tmp_22;
      real_t tmp_84 = tmp_42*tmp_81;
      real_t tmp_85 = 0.16666666666666666*tmp_30;
      real_t tmp_86 = tmp_45*tmp_81;
      real_t tmp_87 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_88 = 0.16666666666666666*tmp_87;
      real_t tmp_89 = tmp_10*tmp_80;
      real_t tmp_90 = tmp_87*tmp_89;
      real_t tmp_91 = tmp_4*tmp_79*tmp_87;
      real_t tmp_92 = tmp_39*tmp_49;
      real_t tmp_93 = 0.16666666666666666*tmp_42*tmp_52;
      real_t tmp_94 = 0.16666666666666666*tmp_45*tmp_54;
      real_t tmp_95 = 0.16666666666666666*tmp_84;
      real_t tmp_96 = 0.16666666666666666*tmp_86;
      real_t tmp_97 = tmp_13*tmp_79;
      real_t tmp_98 = tmp_6*tmp_97;
      real_t tmp_99 = tmp_50*tmp_98;
      real_t tmp_100 = tmp_52*tmp_98;
      real_t tmp_101 = tmp_54*tmp_98;
      real_t tmp_102 = tmp_10*tmp_87*tmp_97;
      real_t tmp_103 = tmp_1*tmp_97;
      real_t tmp_104 = tmp_103*tmp_87;
      real_t tmp_105 = 0.16666666666666666*tmp_100;
      real_t tmp_106 = 0.16666666666666666*tmp_101;
      real_t tmp_107 = 2.0*tmp_6;
      real_t tmp_108 = tmp_107*tmp_13;
      real_t tmp_109 = 0.16666666666666666*tmp_108;
      real_t tmp_110 = tmp_107*tmp_3;
      real_t tmp_111 = 0.66666666666666663*tmp_110;
      real_t tmp_112 = tmp_109 + tmp_111;
      real_t tmp_113 = tmp_112*tmp_17;
      real_t tmp_114 = 0.66666666666666663*tmp_108;
      real_t tmp_115 = 0.16666666666666666*tmp_110;
      real_t tmp_116 = tmp_114 + tmp_115;
      real_t tmp_117 = tmp_116*tmp_25;
      real_t tmp_118 = 0.16666666666666666*tmp_108;
      real_t tmp_119 = 0.16666666666666666*tmp_110;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_120*tmp_33;
      real_t tmp_122 = 0.16666666666666666*tmp_116;
      real_t tmp_123 = 0.16666666666666666*tmp_120;
      real_t tmp_124 = 0.5*tmp_6;
      real_t tmp_125 = tmp_124*tmp_13;
      real_t tmp_126 = -tmp_111 + tmp_125*tmp_67;
      real_t tmp_127 = tmp_126*tmp_17;
      real_t tmp_128 = -tmp_115 + tmp_125*tmp_69;
      real_t tmp_129 = tmp_128*tmp_25;
      real_t tmp_130 = -tmp_119 + tmp_125*tmp_71;
      real_t tmp_131 = tmp_130*tmp_33;
      real_t tmp_132 = 0.16666666666666666*tmp_128;
      real_t tmp_133 = 0.16666666666666666*tmp_130;
      real_t tmp_134 = tmp_124*tmp_3;
      real_t tmp_135 = -tmp_109 + tmp_134*tmp_73;
      real_t tmp_136 = tmp_135*tmp_17;
      real_t tmp_137 = -tmp_114 + tmp_134*tmp_75;
      real_t tmp_138 = tmp_137*tmp_25;
      real_t tmp_139 = -tmp_118 + tmp_134*tmp_77;
      real_t tmp_140 = tmp_139*tmp_33;
      real_t tmp_141 = 0.16666666666666666*tmp_137;
      real_t tmp_142 = 0.16666666666666666*tmp_139;
      real_t a_0_0 = tmp_11*tmp_18 + tmp_22*tmp_26 + tmp_30*tmp_34;
      real_t a_0_1 = tmp_14*tmp_40 + tmp_41*tmp_43 + tmp_44*tmp_46;
      real_t a_0_2 = tmp_14*tmp_51 + tmp_41*tmp_53 + tmp_44*tmp_55;
      real_t a_0_3 = tmp_18*tmp_60 + tmp_26*tmp_63 + tmp_34*tmp_66;
      real_t a_0_4 = tmp_18*tmp_68 + tmp_26*tmp_70 + tmp_34*tmp_72;
      real_t a_0_5 = tmp_18*tmp_74 + tmp_26*tmp_76 + tmp_34*tmp_78;
      real_t a_1_0 = tmp_11*tmp_82 + tmp_83*tmp_84 + tmp_85*tmp_86;
      real_t a_1_1 = (tmp_38*tmp_38)*tmp_88*tmp_89 + 0.16666666666666666*(tmp_42*tmp_42)*tmp_90 + 0.16666666666666666*(tmp_45*tmp_45)*tmp_90;
      real_t a_1_2 = tmp_91*tmp_92 + tmp_91*tmp_93 + tmp_91*tmp_94;
      real_t a_1_3 = tmp_60*tmp_82 + tmp_63*tmp_95 + tmp_66*tmp_96;
      real_t a_1_4 = tmp_68*tmp_82 + tmp_70*tmp_95 + tmp_72*tmp_96;
      real_t a_1_5 = tmp_74*tmp_82 + tmp_76*tmp_95 + tmp_78*tmp_96;
      real_t a_2_0 = tmp_100*tmp_83 + tmp_101*tmp_85 + tmp_11*tmp_99;
      real_t a_2_1 = tmp_102*tmp_92 + tmp_102*tmp_93 + tmp_102*tmp_94;
      real_t a_2_2 = tmp_103*(tmp_49*tmp_49)*tmp_88 + 0.16666666666666666*tmp_104*(tmp_52*tmp_52) + 0.16666666666666666*tmp_104*(tmp_54*tmp_54);
      real_t a_2_3 = tmp_105*tmp_63 + tmp_106*tmp_66 + tmp_60*tmp_99;
      real_t a_2_4 = tmp_105*tmp_70 + tmp_106*tmp_72 + tmp_68*tmp_99;
      real_t a_2_5 = tmp_105*tmp_76 + tmp_106*tmp_78 + tmp_74*tmp_99;
      real_t a_3_0 = tmp_11*tmp_113 + tmp_117*tmp_22 + tmp_121*tmp_30;
      real_t a_3_1 = tmp_112*tmp_40 + tmp_122*tmp_43 + tmp_123*tmp_46;
      real_t a_3_2 = tmp_112*tmp_51 + tmp_122*tmp_53 + tmp_123*tmp_55;
      real_t a_3_3 = tmp_113*tmp_60 + tmp_117*tmp_63 + tmp_121*tmp_66;
      real_t a_3_4 = tmp_113*tmp_68 + tmp_117*tmp_70 + tmp_121*tmp_72;
      real_t a_3_5 = tmp_113*tmp_74 + tmp_117*tmp_76 + tmp_121*tmp_78;
      real_t a_4_0 = tmp_11*tmp_127 + tmp_129*tmp_22 + tmp_131*tmp_30;
      real_t a_4_1 = tmp_126*tmp_40 + tmp_132*tmp_43 + tmp_133*tmp_46;
      real_t a_4_2 = tmp_126*tmp_51 + tmp_132*tmp_53 + tmp_133*tmp_55;
      real_t a_4_3 = tmp_127*tmp_60 + tmp_129*tmp_63 + tmp_131*tmp_66;
      real_t a_4_4 = tmp_127*tmp_68 + tmp_129*tmp_70 + tmp_131*tmp_72;
      real_t a_4_5 = tmp_127*tmp_74 + tmp_129*tmp_76 + tmp_131*tmp_78;
      real_t a_5_0 = tmp_11*tmp_136 + tmp_138*tmp_22 + tmp_140*tmp_30;
      real_t a_5_1 = tmp_135*tmp_40 + tmp_141*tmp_43 + tmp_142*tmp_46;
      real_t a_5_2 = tmp_135*tmp_51 + tmp_141*tmp_53 + tmp_142*tmp_55;
      real_t a_5_3 = tmp_136*tmp_60 + tmp_138*tmp_63 + tmp_140*tmp_66;
      real_t a_5_4 = tmp_136*tmp_68 + tmp_138*tmp_70 + tmp_140*tmp_72;
      real_t a_5_5 = tmp_136*tmp_74 + tmp_138*tmp_76 + tmp_140*tmp_78;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_1_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_9 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_10 = 2*tmp_9;
      real_t tmp_11 = 0.5*tmp_7;
      real_t tmp_12 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_13 = 0.16666666666666666*tmp_11*tmp_12 + 0.16666666666666666*tmp_11*tmp_3;
      real_t tmp_14 = tmp_10*tmp_13;
      real_t tmp_15 = 2.6666666666666665;
      real_t tmp_16 = 0.66666666666666663;
      real_t tmp_17 = tmp_4*(tmp_15 + tmp_16 - 3);
      real_t tmp_18 = 0.5*tmp_17;
      real_t tmp_19 = 0.16666666666666666*tmp_12*tmp_18 + 0.16666666666666666*tmp_18*tmp_3;
      real_t tmp_20 = tmp_10*tmp_19;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = 0.66666666666666663;
      real_t tmp_23 = tmp_4*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = 0.16666666666666666*tmp_12*tmp_24 + 0.16666666666666666*tmp_24*tmp_3;
      real_t tmp_26 = tmp_10*tmp_25;
      real_t tmp_27 = tmp_4*tmp_8;
      real_t tmp_28 = 2.0*tmp_9;
      real_t tmp_29 = tmp_27*tmp_28;
      real_t tmp_30 = tmp_1*tmp_4;
      real_t tmp_31 = tmp_28*tmp_30;
      real_t tmp_32 = 4.0*tmp_30;
      real_t tmp_33 = 0.16666666666666666*tmp_32;
      real_t tmp_34 = 4.0*tmp_27;
      real_t tmp_35 = 0.66666666666666663*tmp_34;
      real_t tmp_36 = 0.66666666666666663*tmp_32;
      real_t tmp_37 = 0.16666666666666666*tmp_34;
      real_t tmp_38 = 0.16666666666666666*tmp_32;
      real_t tmp_39 = 0.16666666666666666*tmp_34;
      real_t a_0_0 = tmp_14*(tmp_1*tmp_7 + tmp_7*tmp_8) + tmp_20*(tmp_1*tmp_17 + tmp_17*tmp_8) + tmp_26*(tmp_1*tmp_23 + tmp_23*tmp_8);
      real_t a_0_1 = tmp_13*tmp_29*(tmp_5 - 1) + tmp_19*tmp_29*(tmp_15 - 1) + tmp_25*tmp_29*(tmp_21 - 1);
      real_t a_0_2 = tmp_13*tmp_31*(tmp_6 - 1) + tmp_19*tmp_31*(tmp_16 - 1) + tmp_25*tmp_31*(tmp_22 - 1);
      real_t a_0_3 = tmp_14*(tmp_33 + tmp_35) + tmp_20*(tmp_36 + tmp_37) + tmp_26*(tmp_38 + tmp_39);
      real_t a_0_4 = tmp_14*(tmp_30*(-tmp_5 - 1.333333333333333) - tmp_35) + tmp_20*(tmp_30*(2.666666666666667 - tmp_15) - tmp_37) + tmp_26*(tmp_30*(2.666666666666667 - tmp_21) - tmp_39);
      real_t a_0_5 = tmp_14*(tmp_27*(2.666666666666667 - tmp_6) - tmp_33) + tmp_20*(tmp_27*(-tmp_16 - 1.333333333333333) - tmp_36) + tmp_26*(tmp_27*(2.666666666666667 - tmp_22) - tmp_38);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_1_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_12 - tmp_18;
      real_t tmp_26 = tmp_16 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_31 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_12 - tmp_18;
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_43 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = 0.5*tmp_11 + 0.5*tmp_9;
      real_t tmp_14 = 2*tmp_13;
      real_t tmp_15 = 1.0*tmp_8;
      real_t tmp_16 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_17 = tmp_15*tmp_16 + tmp_15*tmp_3;
      real_t tmp_18 = 2.0*tmp_8;
      real_t tmp_19 = tmp_16*tmp_18 + tmp_18*tmp_3;
      real_t tmp_20 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_21 = 0.16666666666666666*tmp_20;
      real_t tmp_22 = 2.6666666666666665;
      real_t tmp_23 = 0.66666666666666663;
      real_t tmp_24 = tmp_5*(tmp_22 + tmp_23 - 3);
      real_t tmp_25 = tmp_1*tmp_24;
      real_t tmp_26 = tmp_10*tmp_24;
      real_t tmp_27 = tmp_25 + tmp_26;
      real_t tmp_28 = 0.5*tmp_25 + 0.5*tmp_26;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_24;
      real_t tmp_31 = tmp_16*tmp_30 + tmp_3*tmp_30;
      real_t tmp_32 = 2.0*tmp_24;
      real_t tmp_33 = tmp_16*tmp_32 + tmp_3*tmp_32;
      real_t tmp_34 = 0.16666666666666666*tmp_20;
      real_t tmp_35 = 0.66666666666666663;
      real_t tmp_36 = 0.66666666666666663;
      real_t tmp_37 = tmp_5*(tmp_35 + tmp_36 - 3);
      real_t tmp_38 = tmp_1*tmp_37;
      real_t tmp_39 = tmp_10*tmp_37;
      real_t tmp_40 = tmp_38 + tmp_39;
      real_t tmp_41 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_42 = 2*tmp_41;
      real_t tmp_43 = 1.0*tmp_37;
      real_t tmp_44 = tmp_16*tmp_43 + tmp_3*tmp_43;
      real_t tmp_45 = 2.0*tmp_37;
      real_t tmp_46 = tmp_16*tmp_45 + tmp_3*tmp_45;
      real_t tmp_47 = 0.16666666666666666*tmp_20;
      real_t tmp_48 = tmp_6 - 1;
      real_t tmp_49 = 2.0*tmp_5;
      real_t tmp_50 = tmp_16*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_1*tmp_5;
      real_t tmp_53 = 2.0*tmp_52;
      real_t tmp_54 = tmp_48*tmp_53;
      real_t tmp_55 = tmp_22 - 1;
      real_t tmp_56 = tmp_50*tmp_55;
      real_t tmp_57 = tmp_53*tmp_55;
      real_t tmp_58 = tmp_35 - 1;
      real_t tmp_59 = tmp_50*tmp_58;
      real_t tmp_60 = tmp_53*tmp_58;
      real_t tmp_61 = tmp_7 - 1;
      real_t tmp_62 = tmp_3*tmp_49;
      real_t tmp_63 = tmp_61*tmp_62;
      real_t tmp_64 = tmp_10*tmp_5;
      real_t tmp_65 = 2.0*tmp_64;
      real_t tmp_66 = tmp_61*tmp_65;
      real_t tmp_67 = tmp_23 - 1;
      real_t tmp_68 = tmp_62*tmp_67;
      real_t tmp_69 = tmp_65*tmp_67;
      real_t tmp_70 = tmp_36 - 1;
      real_t tmp_71 = tmp_62*tmp_70;
      real_t tmp_72 = tmp_65*tmp_70;
      real_t tmp_73 = 8.0*tmp_5;
      real_t tmp_74 = tmp_3*tmp_73;
      real_t tmp_75 = 0.16666666666666666*tmp_74;
      real_t tmp_76 = tmp_16*tmp_73;
      real_t tmp_77 = 0.66666666666666663*tmp_76;
      real_t tmp_78 = tmp_75 + tmp_77;
      real_t tmp_79 = 4.0*tmp_64;
      real_t tmp_80 = 0.16666666666666666*tmp_79;
      real_t tmp_81 = 4.0*tmp_52;
      real_t tmp_82 = 0.66666666666666663*tmp_81;
      real_t tmp_83 = tmp_80 + tmp_82;
      real_t tmp_84 = 0.66666666666666663*tmp_74;
      real_t tmp_85 = 0.16666666666666666*tmp_76;
      real_t tmp_86 = tmp_84 + tmp_85;
      real_t tmp_87 = 0.66666666666666663*tmp_79;
      real_t tmp_88 = 0.16666666666666666*tmp_81;
      real_t tmp_89 = tmp_87 + tmp_88;
      real_t tmp_90 = 0.16666666666666666*tmp_74;
      real_t tmp_91 = 0.16666666666666666*tmp_76;
      real_t tmp_92 = tmp_90 + tmp_91;
      real_t tmp_93 = 0.16666666666666666*tmp_79;
      real_t tmp_94 = 0.16666666666666666*tmp_81;
      real_t tmp_95 = tmp_93 + tmp_94;
      real_t tmp_96 = -tmp_6 - 1.333333333333333;
      real_t tmp_97 = tmp_62*tmp_96 - tmp_77;
      real_t tmp_98 = tmp_64*tmp_96;
      real_t tmp_99 = -tmp_82 + tmp_98;
      real_t tmp_100 = 2.666666666666667 - tmp_22;
      real_t tmp_101 = tmp_100*tmp_62 - tmp_85;
      real_t tmp_102 = tmp_100*tmp_64;
      real_t tmp_103 = tmp_102 - tmp_88;
      real_t tmp_104 = 2.666666666666667 - tmp_35;
      real_t tmp_105 = tmp_104*tmp_62 - tmp_91;
      real_t tmp_106 = tmp_104*tmp_64;
      real_t tmp_107 = tmp_106 - tmp_94;
      real_t tmp_108 = 2.666666666666667 - tmp_7;
      real_t tmp_109 = tmp_108*tmp_50 - tmp_75;
      real_t tmp_110 = tmp_108*tmp_52;
      real_t tmp_111 = tmp_110 - tmp_80;
      real_t tmp_112 = -tmp_23 - 1.333333333333333;
      real_t tmp_113 = tmp_112*tmp_50 - tmp_84;
      real_t tmp_114 = tmp_112*tmp_52;
      real_t tmp_115 = tmp_114 - tmp_87;
      real_t tmp_116 = 2.666666666666667 - tmp_36;
      real_t tmp_117 = tmp_116*tmp_50 - tmp_90;
      real_t tmp_118 = tmp_116*tmp_52;
      real_t tmp_119 = tmp_118 - tmp_93;
      real_t tmp_120 = 1.0*tmp_52;
      real_t tmp_121 = tmp_120*tmp_48;
      real_t tmp_122 = 1.0*tmp_5;
      real_t tmp_123 = tmp_122*tmp_16;
      real_t tmp_124 = tmp_123*tmp_48;
      real_t tmp_125 = tmp_120*tmp_55;
      real_t tmp_126 = tmp_123*tmp_55;
      real_t tmp_127 = tmp_120*tmp_58;
      real_t tmp_128 = tmp_123*tmp_58;
      real_t tmp_129 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_130 = tmp_129*(tmp_48*tmp_48);
      real_t tmp_131 = 2.0*(tmp_16*tmp_16);
      real_t tmp_132 = 1.0*(tmp_1*tmp_1);
      real_t tmp_133 = tmp_129*(tmp_55*tmp_55);
      real_t tmp_134 = tmp_129*(tmp_58*tmp_58);
      real_t tmp_135 = tmp_129*tmp_48*tmp_61;
      real_t tmp_136 = 2.0*tmp_16*tmp_3;
      real_t tmp_137 = 1.0*tmp_1*tmp_10;
      real_t tmp_138 = tmp_55*tmp_67;
      real_t tmp_139 = tmp_129*tmp_136;
      real_t tmp_140 = tmp_129*tmp_137;
      real_t tmp_141 = tmp_58*tmp_70;
      real_t tmp_142 = tmp_21*(tmp_135*tmp_136 + tmp_135*tmp_137) + tmp_34*(tmp_138*tmp_139 + tmp_138*tmp_140) + tmp_47*(tmp_139*tmp_141 + tmp_140*tmp_141);
      real_t tmp_143 = 1.0*tmp_64;
      real_t tmp_144 = tmp_143*tmp_61;
      real_t tmp_145 = tmp_122*tmp_3;
      real_t tmp_146 = tmp_145*tmp_61;
      real_t tmp_147 = tmp_143*tmp_67;
      real_t tmp_148 = tmp_145*tmp_67;
      real_t tmp_149 = tmp_143*tmp_70;
      real_t tmp_150 = tmp_145*tmp_70;
      real_t tmp_151 = tmp_129*(tmp_61*tmp_61);
      real_t tmp_152 = 2.0*(tmp_3*tmp_3);
      real_t tmp_153 = 1.0*(tmp_10*tmp_10);
      real_t tmp_154 = tmp_129*(tmp_67*tmp_67);
      real_t tmp_155 = tmp_129*(tmp_70*tmp_70);
      real_t tmp_156 = 0.16666666666666666*tmp_65;
      real_t tmp_157 = 0.66666666666666663*tmp_53;
      real_t tmp_158 = tmp_156 + tmp_157;
      real_t tmp_159 = 2*tmp_158;
      real_t tmp_160 = 4.0*tmp_5;
      real_t tmp_161 = tmp_160*tmp_3;
      real_t tmp_162 = 0.16666666666666666*tmp_161;
      real_t tmp_163 = tmp_16*tmp_160;
      real_t tmp_164 = 0.66666666666666663*tmp_163;
      real_t tmp_165 = tmp_162 + tmp_164;
      real_t tmp_166 = 0.66666666666666663*tmp_65;
      real_t tmp_167 = 0.16666666666666666*tmp_53;
      real_t tmp_168 = tmp_166 + tmp_167;
      real_t tmp_169 = 2*tmp_168;
      real_t tmp_170 = 0.66666666666666663*tmp_161;
      real_t tmp_171 = 0.16666666666666666*tmp_163;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = 0.16666666666666666*tmp_65;
      real_t tmp_174 = 0.16666666666666666*tmp_53;
      real_t tmp_175 = tmp_173 + tmp_174;
      real_t tmp_176 = 2*tmp_175;
      real_t tmp_177 = 0.16666666666666666*tmp_161;
      real_t tmp_178 = 0.16666666666666666*tmp_163;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = -tmp_157 + 0.5*tmp_98;
      real_t tmp_181 = 2*tmp_180;
      real_t tmp_182 = tmp_145*tmp_96 - tmp_164;
      real_t tmp_183 = 0.5*tmp_102 - tmp_167;
      real_t tmp_184 = 2*tmp_183;
      real_t tmp_185 = tmp_100*tmp_145 - tmp_171;
      real_t tmp_186 = 0.5*tmp_106 - tmp_174;
      real_t tmp_187 = 2*tmp_186;
      real_t tmp_188 = tmp_104*tmp_145 - tmp_178;
      real_t tmp_189 = 0.5*tmp_110 - tmp_156;
      real_t tmp_190 = 2*tmp_189;
      real_t tmp_191 = tmp_108*tmp_123 - tmp_162;
      real_t tmp_192 = 0.5*tmp_114 - tmp_166;
      real_t tmp_193 = 2*tmp_192;
      real_t tmp_194 = tmp_112*tmp_123 - tmp_170;
      real_t tmp_195 = 0.5*tmp_118 - tmp_173;
      real_t tmp_196 = 2*tmp_195;
      real_t tmp_197 = tmp_116*tmp_123 - tmp_177;
      real_t a_0_0 = tmp_21*(tmp_12*tmp_14 + tmp_17*tmp_19) + tmp_34*(tmp_27*tmp_29 + tmp_31*tmp_33) + tmp_47*(tmp_40*tmp_42 + tmp_44*tmp_46);
      real_t a_0_1 = tmp_21*(tmp_13*tmp_54 + tmp_17*tmp_51) + tmp_34*(tmp_28*tmp_57 + tmp_31*tmp_56) + tmp_47*(tmp_41*tmp_60 + tmp_44*tmp_59);
      real_t a_0_2 = tmp_21*(tmp_13*tmp_66 + tmp_17*tmp_63) + tmp_34*(tmp_28*tmp_69 + tmp_31*tmp_68) + tmp_47*(tmp_41*tmp_72 + tmp_44*tmp_71);
      real_t a_0_3 = tmp_21*(tmp_14*tmp_83 + tmp_17*tmp_78) + tmp_34*(tmp_29*tmp_89 + tmp_31*tmp_86) + tmp_47*(tmp_42*tmp_95 + tmp_44*tmp_92);
      real_t a_0_4 = tmp_21*(tmp_14*tmp_99 + tmp_17*tmp_97) + tmp_34*(tmp_101*tmp_31 + tmp_103*tmp_29) + tmp_47*(tmp_105*tmp_44 + tmp_107*tmp_42);
      real_t a_0_5 = tmp_21*(tmp_109*tmp_17 + tmp_111*tmp_14) + tmp_34*(tmp_113*tmp_31 + tmp_115*tmp_29) + tmp_47*(tmp_117*tmp_44 + tmp_119*tmp_42);
      real_t a_1_0 = tmp_21*(tmp_12*tmp_121 + tmp_124*tmp_19) + tmp_34*(tmp_125*tmp_27 + tmp_126*tmp_33) + tmp_47*(tmp_127*tmp_40 + tmp_128*tmp_46);
      real_t a_1_1 = tmp_21*(tmp_130*tmp_131 + tmp_130*tmp_132) + tmp_34*(tmp_131*tmp_133 + tmp_132*tmp_133) + tmp_47*(tmp_131*tmp_134 + tmp_132*tmp_134);
      real_t a_1_2 = tmp_142;
      real_t a_1_3 = tmp_21*(tmp_121*tmp_83 + tmp_124*tmp_78) + tmp_34*(tmp_125*tmp_89 + tmp_126*tmp_86) + tmp_47*(tmp_127*tmp_95 + tmp_128*tmp_92);
      real_t a_1_4 = tmp_21*(tmp_121*tmp_99 + tmp_124*tmp_97) + tmp_34*(tmp_101*tmp_126 + tmp_103*tmp_125) + tmp_47*(tmp_105*tmp_128 + tmp_107*tmp_127);
      real_t a_1_5 = tmp_21*(tmp_109*tmp_124 + tmp_111*tmp_121) + tmp_34*(tmp_113*tmp_126 + tmp_115*tmp_125) + tmp_47*(tmp_117*tmp_128 + tmp_119*tmp_127);
      real_t a_2_0 = tmp_21*(tmp_12*tmp_144 + tmp_146*tmp_19) + tmp_34*(tmp_147*tmp_27 + tmp_148*tmp_33) + tmp_47*(tmp_149*tmp_40 + tmp_150*tmp_46);
      real_t a_2_1 = tmp_142;
      real_t a_2_2 = tmp_21*(tmp_151*tmp_152 + tmp_151*tmp_153) + tmp_34*(tmp_152*tmp_154 + tmp_153*tmp_154) + tmp_47*(tmp_152*tmp_155 + tmp_153*tmp_155);
      real_t a_2_3 = tmp_21*(tmp_144*tmp_83 + tmp_146*tmp_78) + tmp_34*(tmp_147*tmp_89 + tmp_148*tmp_86) + tmp_47*(tmp_149*tmp_95 + tmp_150*tmp_92);
      real_t a_2_4 = tmp_21*(tmp_144*tmp_99 + tmp_146*tmp_97) + tmp_34*(tmp_101*tmp_148 + tmp_103*tmp_147) + tmp_47*(tmp_105*tmp_150 + tmp_107*tmp_149);
      real_t a_2_5 = tmp_21*(tmp_109*tmp_146 + tmp_111*tmp_144) + tmp_34*(tmp_113*tmp_148 + tmp_115*tmp_147) + tmp_47*(tmp_117*tmp_150 + tmp_119*tmp_149);
      real_t a_3_0 = tmp_21*(tmp_12*tmp_159 + tmp_165*tmp_19) + tmp_34*(tmp_169*tmp_27 + tmp_172*tmp_33) + tmp_47*(tmp_176*tmp_40 + tmp_179*tmp_46);
      real_t a_3_1 = tmp_21*(tmp_158*tmp_54 + tmp_165*tmp_51) + tmp_34*(tmp_168*tmp_57 + tmp_172*tmp_56) + tmp_47*(tmp_175*tmp_60 + tmp_179*tmp_59);
      real_t a_3_2 = tmp_21*(tmp_158*tmp_66 + tmp_165*tmp_63) + tmp_34*(tmp_168*tmp_69 + tmp_172*tmp_68) + tmp_47*(tmp_175*tmp_72 + tmp_179*tmp_71);
      real_t a_3_3 = tmp_21*(tmp_159*tmp_83 + tmp_165*tmp_78) + tmp_34*(tmp_169*tmp_89 + tmp_172*tmp_86) + tmp_47*(tmp_176*tmp_95 + tmp_179*tmp_92);
      real_t a_3_4 = tmp_21*(tmp_159*tmp_99 + tmp_165*tmp_97) + tmp_34*(tmp_101*tmp_172 + tmp_103*tmp_169) + tmp_47*(tmp_105*tmp_179 + tmp_107*tmp_176);
      real_t a_3_5 = tmp_21*(tmp_109*tmp_165 + tmp_111*tmp_159) + tmp_34*(tmp_113*tmp_172 + tmp_115*tmp_169) + tmp_47*(tmp_117*tmp_179 + tmp_119*tmp_176);
      real_t a_4_0 = tmp_21*(tmp_12*tmp_181 + tmp_182*tmp_19) + tmp_34*(tmp_184*tmp_27 + tmp_185*tmp_33) + tmp_47*(tmp_187*tmp_40 + tmp_188*tmp_46);
      real_t a_4_1 = tmp_21*(tmp_180*tmp_54 + tmp_182*tmp_51) + tmp_34*(tmp_183*tmp_57 + tmp_185*tmp_56) + tmp_47*(tmp_186*tmp_60 + tmp_188*tmp_59);
      real_t a_4_2 = tmp_21*(tmp_180*tmp_66 + tmp_182*tmp_63) + tmp_34*(tmp_183*tmp_69 + tmp_185*tmp_68) + tmp_47*(tmp_186*tmp_72 + tmp_188*tmp_71);
      real_t a_4_3 = tmp_21*(tmp_181*tmp_83 + tmp_182*tmp_78) + tmp_34*(tmp_184*tmp_89 + tmp_185*tmp_86) + tmp_47*(tmp_187*tmp_95 + tmp_188*tmp_92);
      real_t a_4_4 = tmp_21*(tmp_181*tmp_99 + tmp_182*tmp_97) + tmp_34*(tmp_101*tmp_185 + tmp_103*tmp_184) + tmp_47*(tmp_105*tmp_188 + tmp_107*tmp_187);
      real_t a_4_5 = tmp_21*(tmp_109*tmp_182 + tmp_111*tmp_181) + tmp_34*(tmp_113*tmp_185 + tmp_115*tmp_184) + tmp_47*(tmp_117*tmp_188 + tmp_119*tmp_187);
      real_t a_5_0 = tmp_21*(tmp_12*tmp_190 + tmp_19*tmp_191) + tmp_34*(tmp_193*tmp_27 + tmp_194*tmp_33) + tmp_47*(tmp_196*tmp_40 + tmp_197*tmp_46);
      real_t a_5_1 = tmp_21*(tmp_189*tmp_54 + tmp_191*tmp_51) + tmp_34*(tmp_192*tmp_57 + tmp_194*tmp_56) + tmp_47*(tmp_195*tmp_60 + tmp_197*tmp_59);
      real_t a_5_2 = tmp_21*(tmp_189*tmp_66 + tmp_191*tmp_63) + tmp_34*(tmp_192*tmp_69 + tmp_194*tmp_68) + tmp_47*(tmp_195*tmp_72 + tmp_197*tmp_71);
      real_t a_5_3 = tmp_21*(tmp_190*tmp_83 + tmp_191*tmp_78) + tmp_34*(tmp_193*tmp_89 + tmp_194*tmp_86) + tmp_47*(tmp_196*tmp_95 + tmp_197*tmp_92);
      real_t a_5_4 = tmp_21*(tmp_190*tmp_99 + tmp_191*tmp_97) + tmp_34*(tmp_101*tmp_194 + tmp_103*tmp_193) + tmp_47*(tmp_105*tmp_197 + tmp_107*tmp_196);
      real_t a_5_5 = tmp_21*(tmp_109*tmp_191 + tmp_111*tmp_190) + tmp_34*(tmp_113*tmp_194 + tmp_115*tmp_193) + tmp_47*(tmp_117*tmp_197 + tmp_119*tmp_196);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_1_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_12 = 2*tmp_11;
      real_t tmp_13 = 1.0*tmp_7;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_13*tmp_14 + tmp_13*tmp_3;
      real_t tmp_16 = 2.0*tmp_7;
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_4*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_21*tmp_9;
      real_t tmp_24 = 0.5*tmp_22 + 0.5*tmp_23;
      real_t tmp_25 = 2*tmp_24;
      real_t tmp_26 = 1.0*tmp_21;
      real_t tmp_27 = tmp_14*tmp_26 + tmp_26*tmp_3;
      real_t tmp_28 = 2.0*tmp_21;
      real_t tmp_29 = 0.16666666666666666*tmp_17;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = 0.66666666666666663;
      real_t tmp_32 = tmp_4*(tmp_30 + tmp_31 - 3);
      real_t tmp_33 = tmp_1*tmp_32;
      real_t tmp_34 = tmp_32*tmp_9;
      real_t tmp_35 = 0.5*tmp_33 + 0.5*tmp_34;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 1.0*tmp_32;
      real_t tmp_38 = tmp_14*tmp_37 + tmp_3*tmp_37;
      real_t tmp_39 = 2.0*tmp_32;
      real_t tmp_40 = 0.16666666666666666*tmp_17;
      real_t tmp_41 = tmp_5 - 1;
      real_t tmp_42 = 2.0*tmp_4;
      real_t tmp_43 = tmp_14*tmp_42;
      real_t tmp_44 = tmp_1*tmp_4;
      real_t tmp_45 = 2.0*tmp_44;
      real_t tmp_46 = tmp_19 - 1;
      real_t tmp_47 = tmp_30 - 1;
      real_t tmp_48 = tmp_6 - 1;
      real_t tmp_49 = tmp_3*tmp_42;
      real_t tmp_50 = tmp_4*tmp_9;
      real_t tmp_51 = 2.0*tmp_50;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_31 - 1;
      real_t tmp_54 = 8.0*tmp_4;
      real_t tmp_55 = tmp_3*tmp_54;
      real_t tmp_56 = 0.16666666666666666*tmp_55;
      real_t tmp_57 = tmp_14*tmp_54;
      real_t tmp_58 = 0.66666666666666663*tmp_57;
      real_t tmp_59 = 4.0*tmp_50;
      real_t tmp_60 = 0.16666666666666666*tmp_59;
      real_t tmp_61 = 4.0*tmp_44;
      real_t tmp_62 = 0.66666666666666663*tmp_61;
      real_t tmp_63 = 0.66666666666666663*tmp_55;
      real_t tmp_64 = 0.16666666666666666*tmp_57;
      real_t tmp_65 = 0.66666666666666663*tmp_59;
      real_t tmp_66 = 0.16666666666666666*tmp_61;
      real_t tmp_67 = 0.16666666666666666*tmp_55;
      real_t tmp_68 = 0.16666666666666666*tmp_57;
      real_t tmp_69 = 0.16666666666666666*tmp_59;
      real_t tmp_70 = 0.16666666666666666*tmp_61;
      real_t tmp_71 = -tmp_5 - 1.333333333333333;
      real_t tmp_72 = 2.666666666666667 - tmp_19;
      real_t tmp_73 = 2.666666666666667 - tmp_30;
      real_t tmp_74 = 2.666666666666667 - tmp_6;
      real_t tmp_75 = -tmp_20 - 1.333333333333333;
      real_t tmp_76 = 2.666666666666667 - tmp_31;
      real_t a_0_0 = tmp_18*(tmp_12*(tmp_10 + tmp_8) + tmp_15*(tmp_14*tmp_16 + tmp_16*tmp_3)) + tmp_29*(tmp_25*(tmp_22 + tmp_23) + tmp_27*(tmp_14*tmp_28 + tmp_28*tmp_3)) + tmp_40*(tmp_36*(tmp_33 + tmp_34) + tmp_38*(tmp_14*tmp_39 + tmp_3*tmp_39));
      real_t a_0_1 = tmp_18*(tmp_11*tmp_41*tmp_45 + tmp_15*tmp_41*tmp_43) + tmp_29*(tmp_24*tmp_45*tmp_46 + tmp_27*tmp_43*tmp_46) + tmp_40*(tmp_35*tmp_45*tmp_47 + tmp_38*tmp_43*tmp_47);
      real_t a_0_2 = tmp_18*(tmp_11*tmp_48*tmp_51 + tmp_15*tmp_48*tmp_49) + tmp_29*(tmp_24*tmp_51*tmp_52 + tmp_27*tmp_49*tmp_52) + tmp_40*(tmp_35*tmp_51*tmp_53 + tmp_38*tmp_49*tmp_53);
      real_t a_0_3 = tmp_18*(tmp_12*(tmp_60 + tmp_62) + tmp_15*(tmp_56 + tmp_58)) + tmp_29*(tmp_25*(tmp_65 + tmp_66) + tmp_27*(tmp_63 + tmp_64)) + tmp_40*(tmp_36*(tmp_69 + tmp_70) + tmp_38*(tmp_67 + tmp_68));
      real_t a_0_4 = tmp_18*(tmp_12*(tmp_50*tmp_71 - tmp_62) + tmp_15*(tmp_49*tmp_71 - tmp_58)) + tmp_29*(tmp_25*(tmp_50*tmp_72 - tmp_66) + tmp_27*(tmp_49*tmp_72 - tmp_64)) + tmp_40*(tmp_36*(tmp_50*tmp_73 - tmp_70) + tmp_38*(tmp_49*tmp_73 - tmp_68));
      real_t a_0_5 = tmp_18*(tmp_12*(tmp_44*tmp_74 - tmp_60) + tmp_15*(tmp_43*tmp_74 - tmp_56)) + tmp_29*(tmp_25*(tmp_44*tmp_75 - tmp_65) + tmp_27*(tmp_43*tmp_75 - tmp_63)) + tmp_40*(tmp_36*(tmp_44*tmp_76 - tmp_69) + tmp_38*(tmp_43*tmp_76 - tmp_67));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_1_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_32 = 2*tmp_31;
      real_t tmp_33 = -tmp_11*tmp_3 + tmp_14*tmp_5;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = -tmp_10*tmp_14 + tmp_3*tmp_8;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_34 + tmp_36 + tmp_38;
      real_t tmp_40 = 0.5*tmp_34 + 0.5*tmp_36 + 0.5*tmp_38;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = tmp_12 - tmp_16;
      real_t tmp_43 = 1.0*tmp_24;
      real_t tmp_44 = -tmp_18 + tmp_9;
      real_t tmp_45 = tmp_15 - tmp_17;
      real_t tmp_46 = tmp_42*tmp_43 + tmp_43*tmp_44 + tmp_43*tmp_45;
      real_t tmp_47 = 2.0*tmp_24;
      real_t tmp_48 = tmp_42*tmp_47 + tmp_44*tmp_47 + tmp_45*tmp_47;
      real_t tmp_49 = p_affine_0_0*p_affine_1_1;
      real_t tmp_50 = p_affine_0_0*p_affine_1_2;
      real_t tmp_51 = p_affine_2_1*p_affine_3_2;
      real_t tmp_52 = p_affine_0_1*p_affine_1_0;
      real_t tmp_53 = p_affine_0_1*p_affine_1_2;
      real_t tmp_54 = p_affine_2_2*p_affine_3_0;
      real_t tmp_55 = p_affine_0_2*p_affine_1_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_1;
      real_t tmp_58 = p_affine_2_2*p_affine_3_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_2;
      real_t tmp_60 = p_affine_2_1*p_affine_3_0;
      real_t tmp_61 = std::abs(p_affine_0_0*tmp_51 - p_affine_0_0*tmp_58 + p_affine_0_1*tmp_54 - p_affine_0_1*tmp_59 + p_affine_0_2*tmp_57 - p_affine_0_2*tmp_60 - p_affine_1_0*tmp_51 + p_affine_1_0*tmp_58 - p_affine_1_1*tmp_54 + p_affine_1_1*tmp_59 - p_affine_1_2*tmp_57 + p_affine_1_2*tmp_60 + p_affine_2_0*tmp_53 - p_affine_2_0*tmp_56 - p_affine_2_1*tmp_50 + p_affine_2_1*tmp_55 + p_affine_2_2*tmp_49 - p_affine_2_2*tmp_52 - p_affine_3_0*tmp_53 + p_affine_3_0*tmp_56 + p_affine_3_1*tmp_50 - p_affine_3_1*tmp_55 - p_affine_3_2*tmp_49 + p_affine_3_2*tmp_52);
      real_t tmp_62 = 0.041666666666666657*tmp_61;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 2.3416407864998732;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = tmp_20*(tmp_63 + tmp_64 + tmp_65 - 3.0);
      real_t tmp_67 = tmp_6*tmp_66;
      real_t tmp_68 = tmp_26*tmp_66;
      real_t tmp_69 = tmp_28*tmp_66;
      real_t tmp_70 = tmp_67 + tmp_68 + tmp_69;
      real_t tmp_71 = 0.5*tmp_67 + 0.5*tmp_68 + 0.5*tmp_69;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = tmp_33*tmp_66;
      real_t tmp_74 = tmp_35*tmp_66;
      real_t tmp_75 = tmp_37*tmp_66;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_66;
      real_t tmp_80 = tmp_42*tmp_79 + tmp_44*tmp_79 + tmp_45*tmp_79;
      real_t tmp_81 = 2.0*tmp_66;
      real_t tmp_82 = tmp_42*tmp_81 + tmp_44*tmp_81 + tmp_45*tmp_81;
      real_t tmp_83 = 0.041666666666666657*tmp_61;
      real_t tmp_84 = 2.3416407864998732;
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = tmp_20*(tmp_84 + tmp_85 + tmp_86 - 3.0);
      real_t tmp_88 = tmp_6*tmp_87;
      real_t tmp_89 = tmp_26*tmp_87;
      real_t tmp_90 = tmp_28*tmp_87;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90;
      real_t tmp_92 = 0.5*tmp_88 + 0.5*tmp_89 + 0.5*tmp_90;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_33*tmp_87;
      real_t tmp_95 = tmp_35*tmp_87;
      real_t tmp_96 = tmp_37*tmp_87;
      real_t tmp_97 = tmp_94 + tmp_95 + tmp_96;
      real_t tmp_98 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_99 = 2*tmp_98;
      real_t tmp_100 = 1.0*tmp_87;
      real_t tmp_101 = tmp_100*tmp_42 + tmp_100*tmp_44 + tmp_100*tmp_45;
      real_t tmp_102 = 2.0*tmp_87;
      real_t tmp_103 = tmp_102*tmp_42 + tmp_102*tmp_44 + tmp_102*tmp_45;
      real_t tmp_104 = 0.041666666666666657*tmp_61;
      real_t tmp_105 = 0.55278640450004235;
      real_t tmp_106 = 0.55278640450004235;
      real_t tmp_107 = 0.55278640450004235;
      real_t tmp_108 = tmp_20*(tmp_105 + tmp_106 + tmp_107 - 3.0);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_108*tmp_28;
      real_t tmp_112 = tmp_109 + tmp_110 + tmp_111;
      real_t tmp_113 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_114 = 2*tmp_113;
      real_t tmp_115 = tmp_108*tmp_33;
      real_t tmp_116 = tmp_108*tmp_35;
      real_t tmp_117 = tmp_108*tmp_37;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = 0.5*tmp_115 + 0.5*tmp_116 + 0.5*tmp_117;
      real_t tmp_120 = 2*tmp_119;
      real_t tmp_121 = 1.0*tmp_108;
      real_t tmp_122 = tmp_121*tmp_42 + tmp_121*tmp_44 + tmp_121*tmp_45;
      real_t tmp_123 = 2.0*tmp_108;
      real_t tmp_124 = tmp_123*tmp_42 + tmp_123*tmp_44 + tmp_123*tmp_45;
      real_t tmp_125 = 0.041666666666666657*tmp_61;
      real_t tmp_126 = tmp_21 - 1.0;
      real_t tmp_127 = 2.0*tmp_20;
      real_t tmp_128 = tmp_126*tmp_127;
      real_t tmp_129 = tmp_128*tmp_28;
      real_t tmp_130 = tmp_20*tmp_45;
      real_t tmp_131 = 2.0*tmp_130;
      real_t tmp_132 = tmp_126*tmp_131;
      real_t tmp_133 = tmp_128*tmp_37;
      real_t tmp_134 = tmp_63 - 1.0;
      real_t tmp_135 = tmp_127*tmp_134;
      real_t tmp_136 = tmp_135*tmp_28;
      real_t tmp_137 = tmp_131*tmp_134;
      real_t tmp_138 = tmp_135*tmp_37;
      real_t tmp_139 = tmp_84 - 1.0;
      real_t tmp_140 = tmp_127*tmp_139;
      real_t tmp_141 = tmp_140*tmp_28;
      real_t tmp_142 = tmp_131*tmp_139;
      real_t tmp_143 = tmp_140*tmp_37;
      real_t tmp_144 = tmp_105 - 1.0;
      real_t tmp_145 = tmp_127*tmp_144;
      real_t tmp_146 = tmp_145*tmp_28;
      real_t tmp_147 = tmp_131*tmp_144;
      real_t tmp_148 = tmp_145*tmp_37;
      real_t tmp_149 = tmp_22 - 1.0;
      real_t tmp_150 = tmp_127*tmp_149;
      real_t tmp_151 = tmp_150*tmp_26;
      real_t tmp_152 = tmp_20*tmp_44;
      real_t tmp_153 = 2.0*tmp_152;
      real_t tmp_154 = tmp_149*tmp_153;
      real_t tmp_155 = tmp_150*tmp_35;
      real_t tmp_156 = tmp_64 - 1.0;
      real_t tmp_157 = tmp_127*tmp_156;
      real_t tmp_158 = tmp_157*tmp_26;
      real_t tmp_159 = tmp_153*tmp_156;
      real_t tmp_160 = tmp_157*tmp_35;
      real_t tmp_161 = tmp_85 - 1.0;
      real_t tmp_162 = tmp_127*tmp_161;
      real_t tmp_163 = tmp_162*tmp_26;
      real_t tmp_164 = tmp_153*tmp_161;
      real_t tmp_165 = tmp_162*tmp_35;
      real_t tmp_166 = tmp_106 - 1.0;
      real_t tmp_167 = tmp_127*tmp_166;
      real_t tmp_168 = tmp_167*tmp_26;
      real_t tmp_169 = tmp_153*tmp_166;
      real_t tmp_170 = tmp_167*tmp_35;
      real_t tmp_171 = tmp_23 - 1.0;
      real_t tmp_172 = tmp_127*tmp_171;
      real_t tmp_173 = tmp_172*tmp_6;
      real_t tmp_174 = tmp_20*tmp_42;
      real_t tmp_175 = 2.0*tmp_174;
      real_t tmp_176 = tmp_171*tmp_175;
      real_t tmp_177 = tmp_172*tmp_33;
      real_t tmp_178 = tmp_65 - 1.0;
      real_t tmp_179 = tmp_127*tmp_178;
      real_t tmp_180 = tmp_179*tmp_6;
      real_t tmp_181 = tmp_175*tmp_178;
      real_t tmp_182 = tmp_179*tmp_33;
      real_t tmp_183 = tmp_86 - 1.0;
      real_t tmp_184 = tmp_127*tmp_183;
      real_t tmp_185 = tmp_184*tmp_6;
      real_t tmp_186 = tmp_175*tmp_183;
      real_t tmp_187 = tmp_184*tmp_33;
      real_t tmp_188 = tmp_107 - 1.0;
      real_t tmp_189 = tmp_127*tmp_188;
      real_t tmp_190 = tmp_189*tmp_6;
      real_t tmp_191 = tmp_175*tmp_188;
      real_t tmp_192 = tmp_189*tmp_33;
      real_t tmp_193 = 1.1055728090000847;
      real_t tmp_194 = tmp_174*tmp_193;
      real_t tmp_195 = 4.6832815729997463;
      real_t tmp_196 = tmp_152*tmp_195;
      real_t tmp_197 = tmp_194 + tmp_196;
      real_t tmp_198 = tmp_20*tmp_22;
      real_t tmp_199 = tmp_198*tmp_6;
      real_t tmp_200 = tmp_20*tmp_23;
      real_t tmp_201 = tmp_200*tmp_26;
      real_t tmp_202 = tmp_199 + tmp_201;
      real_t tmp_203 = tmp_198*tmp_33;
      real_t tmp_204 = tmp_200*tmp_35;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = 4.6832815729997463;
      real_t tmp_207 = tmp_174*tmp_206;
      real_t tmp_208 = 1.1055728090000847;
      real_t tmp_209 = tmp_152*tmp_208;
      real_t tmp_210 = tmp_207 + tmp_209;
      real_t tmp_211 = tmp_20*tmp_64;
      real_t tmp_212 = tmp_211*tmp_6;
      real_t tmp_213 = tmp_20*tmp_65;
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_212 + tmp_214;
      real_t tmp_216 = tmp_211*tmp_33;
      real_t tmp_217 = tmp_213*tmp_35;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_174*tmp_219;
      real_t tmp_221 = 1.1055728090000847;
      real_t tmp_222 = tmp_152*tmp_221;
      real_t tmp_223 = tmp_220 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_85;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_20*tmp_86;
      real_t tmp_227 = tmp_226*tmp_26;
      real_t tmp_228 = tmp_225 + tmp_227;
      real_t tmp_229 = tmp_224*tmp_33;
      real_t tmp_230 = tmp_226*tmp_35;
      real_t tmp_231 = tmp_229 + tmp_230;
      real_t tmp_232 = 1.1055728090000847;
      real_t tmp_233 = tmp_174*tmp_232;
      real_t tmp_234 = 1.1055728090000847;
      real_t tmp_235 = tmp_152*tmp_234;
      real_t tmp_236 = tmp_233 + tmp_235;
      real_t tmp_237 = tmp_106*tmp_20;
      real_t tmp_238 = tmp_237*tmp_6;
      real_t tmp_239 = tmp_107*tmp_20;
      real_t tmp_240 = tmp_239*tmp_26;
      real_t tmp_241 = tmp_238 + tmp_240;
      real_t tmp_242 = tmp_237*tmp_33;
      real_t tmp_243 = tmp_239*tmp_35;
      real_t tmp_244 = tmp_242 + tmp_243;
      real_t tmp_245 = 1.1055728090000847;
      real_t tmp_246 = tmp_174*tmp_245;
      real_t tmp_247 = tmp_130*tmp_195;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_20*tmp_21;
      real_t tmp_250 = tmp_249*tmp_6;
      real_t tmp_251 = tmp_200*tmp_28;
      real_t tmp_252 = tmp_250 + tmp_251;
      real_t tmp_253 = tmp_249*tmp_33;
      real_t tmp_254 = tmp_200*tmp_37;
      real_t tmp_255 = tmp_253 + tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_174*tmp_256;
      real_t tmp_258 = tmp_130*tmp_208;
      real_t tmp_259 = tmp_257 + tmp_258;
      real_t tmp_260 = tmp_20*tmp_63;
      real_t tmp_261 = tmp_260*tmp_6;
      real_t tmp_262 = tmp_213*tmp_28;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = tmp_260*tmp_33;
      real_t tmp_265 = tmp_213*tmp_37;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = 4.6832815729997463;
      real_t tmp_268 = tmp_174*tmp_267;
      real_t tmp_269 = tmp_130*tmp_221;
      real_t tmp_270 = tmp_268 + tmp_269;
      real_t tmp_271 = tmp_20*tmp_84;
      real_t tmp_272 = tmp_271*tmp_6;
      real_t tmp_273 = tmp_226*tmp_28;
      real_t tmp_274 = tmp_272 + tmp_273;
      real_t tmp_275 = tmp_271*tmp_33;
      real_t tmp_276 = tmp_226*tmp_37;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = 1.1055728090000847;
      real_t tmp_279 = tmp_174*tmp_278;
      real_t tmp_280 = tmp_130*tmp_234;
      real_t tmp_281 = tmp_279 + tmp_280;
      real_t tmp_282 = tmp_105*tmp_20;
      real_t tmp_283 = tmp_282*tmp_6;
      real_t tmp_284 = tmp_239*tmp_28;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_282*tmp_33;
      real_t tmp_287 = tmp_239*tmp_37;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = tmp_152*tmp_245;
      real_t tmp_290 = tmp_130*tmp_193;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_249*tmp_26;
      real_t tmp_293 = tmp_198*tmp_28;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_249*tmp_35;
      real_t tmp_296 = tmp_198*tmp_37;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_152*tmp_256;
      real_t tmp_299 = tmp_130*tmp_206;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_26*tmp_260;
      real_t tmp_302 = tmp_211*tmp_28;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = tmp_260*tmp_35;
      real_t tmp_305 = tmp_211*tmp_37;
      real_t tmp_306 = tmp_304 + tmp_305;
      real_t tmp_307 = tmp_152*tmp_267;
      real_t tmp_308 = tmp_130*tmp_219;
      real_t tmp_309 = tmp_307 + tmp_308;
      real_t tmp_310 = tmp_26*tmp_271;
      real_t tmp_311 = tmp_224*tmp_28;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_271*tmp_35;
      real_t tmp_314 = tmp_224*tmp_37;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_152*tmp_278;
      real_t tmp_317 = tmp_130*tmp_232;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_26*tmp_282;
      real_t tmp_320 = tmp_237*tmp_28;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = tmp_282*tmp_35;
      real_t tmp_323 = tmp_237*tmp_37;
      real_t tmp_324 = tmp_322 + tmp_323;
      real_t tmp_325 = -tmp_22;
      real_t tmp_326 = 4.0 - tmp_21;
      real_t tmp_327 = tmp_20*(-tmp_195 + tmp_325 + tmp_326);
      real_t tmp_328 = tmp_327*tmp_6;
      real_t tmp_329 = -tmp_201 - tmp_251 + tmp_328;
      real_t tmp_330 = 2.0*tmp_42;
      real_t tmp_331 = -tmp_196 - tmp_247 + tmp_327*tmp_330;
      real_t tmp_332 = tmp_327*tmp_33;
      real_t tmp_333 = -tmp_204 - tmp_254 + tmp_332;
      real_t tmp_334 = -tmp_64;
      real_t tmp_335 = 4.0 - tmp_63;
      real_t tmp_336 = tmp_20*(-tmp_208 + tmp_334 + tmp_335);
      real_t tmp_337 = tmp_336*tmp_6;
      real_t tmp_338 = -tmp_214 - tmp_262 + tmp_337;
      real_t tmp_339 = -tmp_209 - tmp_258 + tmp_330*tmp_336;
      real_t tmp_340 = tmp_33*tmp_336;
      real_t tmp_341 = -tmp_217 - tmp_265 + tmp_340;
      real_t tmp_342 = -tmp_85;
      real_t tmp_343 = 4.0 - tmp_84;
      real_t tmp_344 = tmp_20*(-tmp_221 + tmp_342 + tmp_343);
      real_t tmp_345 = tmp_344*tmp_6;
      real_t tmp_346 = -tmp_227 - tmp_273 + tmp_345;
      real_t tmp_347 = -tmp_222 - tmp_269 + tmp_330*tmp_344;
      real_t tmp_348 = tmp_33*tmp_344;
      real_t tmp_349 = -tmp_230 - tmp_276 + tmp_348;
      real_t tmp_350 = -tmp_106;
      real_t tmp_351 = 4.0 - tmp_105;
      real_t tmp_352 = tmp_20*(-tmp_234 + tmp_350 + tmp_351);
      real_t tmp_353 = tmp_352*tmp_6;
      real_t tmp_354 = -tmp_240 - tmp_284 + tmp_353;
      real_t tmp_355 = -tmp_235 - tmp_280 + tmp_330*tmp_352;
      real_t tmp_356 = tmp_33*tmp_352;
      real_t tmp_357 = -tmp_243 - tmp_287 + tmp_356;
      real_t tmp_358 = -tmp_23;
      real_t tmp_359 = tmp_20*(-tmp_193 + tmp_326 + tmp_358);
      real_t tmp_360 = tmp_26*tmp_359;
      real_t tmp_361 = -tmp_199 - tmp_293 + tmp_360;
      real_t tmp_362 = 2.0*tmp_44;
      real_t tmp_363 = -tmp_194 - tmp_290 + tmp_359*tmp_362;
      real_t tmp_364 = tmp_35*tmp_359;
      real_t tmp_365 = -tmp_203 - tmp_296 + tmp_364;
      real_t tmp_366 = -tmp_65;
      real_t tmp_367 = tmp_20*(-tmp_206 + tmp_335 + tmp_366);
      real_t tmp_368 = tmp_26*tmp_367;
      real_t tmp_369 = -tmp_212 - tmp_302 + tmp_368;
      real_t tmp_370 = -tmp_207 - tmp_299 + tmp_362*tmp_367;
      real_t tmp_371 = tmp_35*tmp_367;
      real_t tmp_372 = -tmp_216 - tmp_305 + tmp_371;
      real_t tmp_373 = -tmp_86;
      real_t tmp_374 = tmp_20*(-tmp_219 + tmp_343 + tmp_373);
      real_t tmp_375 = tmp_26*tmp_374;
      real_t tmp_376 = -tmp_225 - tmp_311 + tmp_375;
      real_t tmp_377 = -tmp_220 - tmp_308 + tmp_362*tmp_374;
      real_t tmp_378 = tmp_35*tmp_374;
      real_t tmp_379 = -tmp_229 - tmp_314 + tmp_378;
      real_t tmp_380 = -tmp_107;
      real_t tmp_381 = tmp_20*(-tmp_232 + tmp_351 + tmp_380);
      real_t tmp_382 = tmp_26*tmp_381;
      real_t tmp_383 = -tmp_238 - tmp_320 + tmp_382;
      real_t tmp_384 = -tmp_233 - tmp_317 + tmp_362*tmp_381;
      real_t tmp_385 = tmp_35*tmp_381;
      real_t tmp_386 = -tmp_242 - tmp_323 + tmp_385;
      real_t tmp_387 = tmp_20*(-tmp_245 + tmp_325 + tmp_358 + 4.0);
      real_t tmp_388 = tmp_28*tmp_387;
      real_t tmp_389 = -tmp_250 - tmp_292 + tmp_388;
      real_t tmp_390 = 2.0*tmp_45;
      real_t tmp_391 = -tmp_246 - tmp_289 + tmp_387*tmp_390;
      real_t tmp_392 = tmp_37*tmp_387;
      real_t tmp_393 = -tmp_253 - tmp_295 + tmp_392;
      real_t tmp_394 = tmp_20*(-tmp_256 + tmp_334 + tmp_366 + 4.0);
      real_t tmp_395 = tmp_28*tmp_394;
      real_t tmp_396 = -tmp_261 - tmp_301 + tmp_395;
      real_t tmp_397 = -tmp_257 - tmp_298 + tmp_390*tmp_394;
      real_t tmp_398 = tmp_37*tmp_394;
      real_t tmp_399 = -tmp_264 - tmp_304 + tmp_398;
      real_t tmp_400 = tmp_20*(-tmp_267 + tmp_342 + tmp_373 + 4.0);
      real_t tmp_401 = tmp_28*tmp_400;
      real_t tmp_402 = -tmp_272 - tmp_310 + tmp_401;
      real_t tmp_403 = -tmp_268 - tmp_307 + tmp_390*tmp_400;
      real_t tmp_404 = tmp_37*tmp_400;
      real_t tmp_405 = -tmp_275 - tmp_313 + tmp_404;
      real_t tmp_406 = tmp_20*(-tmp_278 + tmp_350 + tmp_380 + 4.0);
      real_t tmp_407 = tmp_28*tmp_406;
      real_t tmp_408 = -tmp_283 - tmp_319 + tmp_407;
      real_t tmp_409 = -tmp_279 - tmp_316 + tmp_390*tmp_406;
      real_t tmp_410 = tmp_37*tmp_406;
      real_t tmp_411 = -tmp_286 - tmp_322 + tmp_410;
      real_t tmp_412 = 1.0*tmp_126;
      real_t tmp_413 = tmp_20*tmp_412;
      real_t tmp_414 = tmp_28*tmp_413;
      real_t tmp_415 = tmp_37*tmp_413;
      real_t tmp_416 = tmp_130*tmp_412;
      real_t tmp_417 = 1.0*tmp_134;
      real_t tmp_418 = tmp_20*tmp_417;
      real_t tmp_419 = tmp_28*tmp_418;
      real_t tmp_420 = tmp_37*tmp_418;
      real_t tmp_421 = tmp_130*tmp_417;
      real_t tmp_422 = 1.0*tmp_139;
      real_t tmp_423 = tmp_20*tmp_422;
      real_t tmp_424 = tmp_28*tmp_423;
      real_t tmp_425 = tmp_37*tmp_423;
      real_t tmp_426 = tmp_130*tmp_422;
      real_t tmp_427 = 1.0*tmp_144;
      real_t tmp_428 = tmp_20*tmp_427;
      real_t tmp_429 = tmp_28*tmp_428;
      real_t tmp_430 = tmp_37*tmp_428;
      real_t tmp_431 = tmp_130*tmp_427;
      real_t tmp_432 = (tmp_28*tmp_28);
      real_t tmp_433 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_434 = 0.012499999999999983*tmp_433;
      real_t tmp_435 = 16.0*tmp_434;
      real_t tmp_436 = 32.0*(tmp_45*tmp_45);
      real_t tmp_437 = (tmp_37*tmp_37);
      real_t tmp_438 = 0.012499999999999983*tmp_433;
      real_t tmp_439 = 16.0*tmp_438;
      real_t tmp_440 = 0.11249999999999989*tmp_433;
      real_t tmp_441 = 16.0*tmp_440;
      real_t tmp_442 = 0.012499999999999983*tmp_433;
      real_t tmp_443 = 16.0*tmp_442;
      real_t tmp_444 = tmp_149*tmp_433;
      real_t tmp_445 = tmp_412*tmp_444;
      real_t tmp_446 = tmp_26*tmp_28;
      real_t tmp_447 = tmp_362*tmp_45;
      real_t tmp_448 = tmp_35*tmp_37;
      real_t tmp_449 = tmp_156*tmp_433;
      real_t tmp_450 = tmp_417*tmp_449;
      real_t tmp_451 = tmp_161*tmp_433;
      real_t tmp_452 = tmp_422*tmp_451;
      real_t tmp_453 = tmp_166*tmp_433;
      real_t tmp_454 = tmp_427*tmp_453;
      real_t tmp_455 = tmp_104*(tmp_139*tmp_447*tmp_451 + tmp_446*tmp_452 + tmp_448*tmp_452) + tmp_125*(tmp_144*tmp_447*tmp_453 + tmp_446*tmp_454 + tmp_448*tmp_454) + tmp_62*(tmp_126*tmp_444*tmp_447 + tmp_445*tmp_446 + tmp_445*tmp_448) + tmp_83*(tmp_134*tmp_447*tmp_449 + tmp_446*tmp_450 + tmp_448*tmp_450);
      real_t tmp_456 = tmp_171*tmp_433;
      real_t tmp_457 = tmp_412*tmp_456;
      real_t tmp_458 = tmp_28*tmp_6;
      real_t tmp_459 = tmp_330*tmp_45;
      real_t tmp_460 = tmp_33*tmp_37;
      real_t tmp_461 = tmp_178*tmp_433;
      real_t tmp_462 = tmp_417*tmp_461;
      real_t tmp_463 = tmp_183*tmp_433;
      real_t tmp_464 = tmp_422*tmp_463;
      real_t tmp_465 = tmp_188*tmp_433;
      real_t tmp_466 = tmp_427*tmp_465;
      real_t tmp_467 = tmp_104*(tmp_139*tmp_459*tmp_463 + tmp_458*tmp_464 + tmp_460*tmp_464) + tmp_125*(tmp_144*tmp_459*tmp_465 + tmp_458*tmp_466 + tmp_460*tmp_466) + tmp_62*(tmp_126*tmp_456*tmp_459 + tmp_457*tmp_458 + tmp_457*tmp_460) + tmp_83*(tmp_134*tmp_459*tmp_461 + tmp_458*tmp_462 + tmp_460*tmp_462);
      real_t tmp_468 = 1.0*tmp_149;
      real_t tmp_469 = tmp_20*tmp_468;
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = tmp_35*tmp_469;
      real_t tmp_472 = tmp_152*tmp_468;
      real_t tmp_473 = 1.0*tmp_156;
      real_t tmp_474 = tmp_20*tmp_473;
      real_t tmp_475 = tmp_26*tmp_474;
      real_t tmp_476 = tmp_35*tmp_474;
      real_t tmp_477 = tmp_152*tmp_473;
      real_t tmp_478 = 1.0*tmp_161;
      real_t tmp_479 = tmp_20*tmp_478;
      real_t tmp_480 = tmp_26*tmp_479;
      real_t tmp_481 = tmp_35*tmp_479;
      real_t tmp_482 = tmp_152*tmp_478;
      real_t tmp_483 = 1.0*tmp_166;
      real_t tmp_484 = tmp_20*tmp_483;
      real_t tmp_485 = tmp_26*tmp_484;
      real_t tmp_486 = tmp_35*tmp_484;
      real_t tmp_487 = tmp_152*tmp_483;
      real_t tmp_488 = (tmp_26*tmp_26);
      real_t tmp_489 = 0.012499999999999983*tmp_433;
      real_t tmp_490 = 16.0*tmp_489;
      real_t tmp_491 = 32.0*(tmp_44*tmp_44);
      real_t tmp_492 = (tmp_35*tmp_35);
      real_t tmp_493 = 0.11249999999999989*tmp_433;
      real_t tmp_494 = 16.0*tmp_493;
      real_t tmp_495 = 0.012499999999999983*tmp_433;
      real_t tmp_496 = 16.0*tmp_495;
      real_t tmp_497 = 0.012499999999999983*tmp_433;
      real_t tmp_498 = 16.0*tmp_497;
      real_t tmp_499 = tmp_456*tmp_468;
      real_t tmp_500 = tmp_26*tmp_6;
      real_t tmp_501 = tmp_330*tmp_44;
      real_t tmp_502 = tmp_33*tmp_35;
      real_t tmp_503 = tmp_461*tmp_473;
      real_t tmp_504 = tmp_463*tmp_478;
      real_t tmp_505 = tmp_465*tmp_483;
      real_t tmp_506 = tmp_104*(tmp_183*tmp_451*tmp_501 + tmp_500*tmp_504 + tmp_502*tmp_504) + tmp_125*(tmp_188*tmp_453*tmp_501 + tmp_500*tmp_505 + tmp_502*tmp_505) + tmp_62*(tmp_171*tmp_444*tmp_501 + tmp_499*tmp_500 + tmp_499*tmp_502) + tmp_83*(tmp_178*tmp_449*tmp_501 + tmp_500*tmp_503 + tmp_502*tmp_503);
      real_t tmp_507 = 1.0*tmp_171;
      real_t tmp_508 = tmp_20*tmp_507;
      real_t tmp_509 = tmp_508*tmp_6;
      real_t tmp_510 = tmp_33*tmp_508;
      real_t tmp_511 = tmp_174*tmp_507;
      real_t tmp_512 = 1.0*tmp_178;
      real_t tmp_513 = tmp_20*tmp_512;
      real_t tmp_514 = tmp_513*tmp_6;
      real_t tmp_515 = tmp_33*tmp_513;
      real_t tmp_516 = tmp_174*tmp_512;
      real_t tmp_517 = 1.0*tmp_183;
      real_t tmp_518 = tmp_20*tmp_517;
      real_t tmp_519 = tmp_518*tmp_6;
      real_t tmp_520 = tmp_33*tmp_518;
      real_t tmp_521 = tmp_174*tmp_517;
      real_t tmp_522 = 1.0*tmp_188;
      real_t tmp_523 = tmp_20*tmp_522;
      real_t tmp_524 = tmp_523*tmp_6;
      real_t tmp_525 = tmp_33*tmp_523;
      real_t tmp_526 = tmp_174*tmp_522;
      real_t tmp_527 = (tmp_6*tmp_6);
      real_t tmp_528 = 0.11249999999999989*tmp_433;
      real_t tmp_529 = 16.0*tmp_528;
      real_t tmp_530 = 32.0*(tmp_42*tmp_42);
      real_t tmp_531 = (tmp_33*tmp_33);
      real_t tmp_532 = 0.012499999999999983*tmp_433;
      real_t tmp_533 = 16.0*tmp_532;
      real_t tmp_534 = 0.012499999999999983*tmp_433;
      real_t tmp_535 = 16.0*tmp_534;
      real_t tmp_536 = 0.012499999999999983*tmp_433;
      real_t tmp_537 = 16.0*tmp_536;
      real_t tmp_538 = 0.13819660112501059*tmp_127;
      real_t tmp_539 = tmp_538*tmp_6;
      real_t tmp_540 = 0.58541019662496829*tmp_127;
      real_t tmp_541 = tmp_26*tmp_540;
      real_t tmp_542 = tmp_539 + tmp_541;
      real_t tmp_543 = 2*tmp_542;
      real_t tmp_544 = tmp_33*tmp_538;
      real_t tmp_545 = tmp_35*tmp_540;
      real_t tmp_546 = tmp_544 + tmp_545;
      real_t tmp_547 = 2*tmp_546;
      real_t tmp_548 = tmp_174*tmp_22;
      real_t tmp_549 = tmp_152*tmp_23;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = 0.58541019662496829*tmp_127;
      real_t tmp_552 = tmp_551*tmp_6;
      real_t tmp_553 = 0.13819660112501059*tmp_127;
      real_t tmp_554 = tmp_26*tmp_553;
      real_t tmp_555 = tmp_552 + tmp_554;
      real_t tmp_556 = 2*tmp_555;
      real_t tmp_557 = tmp_33*tmp_551;
      real_t tmp_558 = tmp_35*tmp_553;
      real_t tmp_559 = tmp_557 + tmp_558;
      real_t tmp_560 = 2*tmp_559;
      real_t tmp_561 = tmp_174*tmp_64;
      real_t tmp_562 = tmp_152*tmp_65;
      real_t tmp_563 = tmp_561 + tmp_562;
      real_t tmp_564 = 0.13819660112501059*tmp_127;
      real_t tmp_565 = tmp_564*tmp_6;
      real_t tmp_566 = 0.13819660112501059*tmp_127;
      real_t tmp_567 = tmp_26*tmp_566;
      real_t tmp_568 = tmp_565 + tmp_567;
      real_t tmp_569 = 2*tmp_568;
      real_t tmp_570 = tmp_33*tmp_564;
      real_t tmp_571 = tmp_35*tmp_566;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = 2*tmp_572;
      real_t tmp_574 = tmp_174*tmp_85;
      real_t tmp_575 = tmp_152*tmp_86;
      real_t tmp_576 = tmp_574 + tmp_575;
      real_t tmp_577 = 0.13819660112501059*tmp_127;
      real_t tmp_578 = tmp_577*tmp_6;
      real_t tmp_579 = 0.13819660112501059*tmp_127;
      real_t tmp_580 = tmp_26*tmp_579;
      real_t tmp_581 = tmp_578 + tmp_580;
      real_t tmp_582 = 2*tmp_581;
      real_t tmp_583 = tmp_33*tmp_577;
      real_t tmp_584 = tmp_35*tmp_579;
      real_t tmp_585 = tmp_583 + tmp_584;
      real_t tmp_586 = 2*tmp_585;
      real_t tmp_587 = tmp_106*tmp_174;
      real_t tmp_588 = tmp_107*tmp_152;
      real_t tmp_589 = tmp_587 + tmp_588;
      real_t tmp_590 = 0.13819660112501059*tmp_127;
      real_t tmp_591 = tmp_590*tmp_6;
      real_t tmp_592 = tmp_28*tmp_540;
      real_t tmp_593 = tmp_591 + tmp_592;
      real_t tmp_594 = 2*tmp_593;
      real_t tmp_595 = tmp_33*tmp_590;
      real_t tmp_596 = tmp_37*tmp_540;
      real_t tmp_597 = tmp_595 + tmp_596;
      real_t tmp_598 = 2*tmp_597;
      real_t tmp_599 = tmp_174*tmp_21;
      real_t tmp_600 = tmp_200*tmp_45;
      real_t tmp_601 = tmp_599 + tmp_600;
      real_t tmp_602 = 0.13819660112501059*tmp_127;
      real_t tmp_603 = tmp_6*tmp_602;
      real_t tmp_604 = tmp_28*tmp_553;
      real_t tmp_605 = tmp_603 + tmp_604;
      real_t tmp_606 = 2*tmp_605;
      real_t tmp_607 = tmp_33*tmp_602;
      real_t tmp_608 = tmp_37*tmp_553;
      real_t tmp_609 = tmp_607 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_174*tmp_63;
      real_t tmp_612 = tmp_213*tmp_45;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 0.58541019662496829*tmp_127;
      real_t tmp_615 = tmp_6*tmp_614;
      real_t tmp_616 = tmp_28*tmp_566;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 2*tmp_617;
      real_t tmp_619 = tmp_33*tmp_614;
      real_t tmp_620 = tmp_37*tmp_566;
      real_t tmp_621 = tmp_619 + tmp_620;
      real_t tmp_622 = 2*tmp_621;
      real_t tmp_623 = tmp_174*tmp_84;
      real_t tmp_624 = tmp_226*tmp_45;
      real_t tmp_625 = tmp_623 + tmp_624;
      real_t tmp_626 = 0.13819660112501059*tmp_127;
      real_t tmp_627 = tmp_6*tmp_626;
      real_t tmp_628 = tmp_28*tmp_579;
      real_t tmp_629 = tmp_627 + tmp_628;
      real_t tmp_630 = 2*tmp_629;
      real_t tmp_631 = tmp_33*tmp_626;
      real_t tmp_632 = tmp_37*tmp_579;
      real_t tmp_633 = tmp_631 + tmp_632;
      real_t tmp_634 = 2*tmp_633;
      real_t tmp_635 = tmp_105*tmp_174;
      real_t tmp_636 = tmp_239*tmp_45;
      real_t tmp_637 = tmp_635 + tmp_636;
      real_t tmp_638 = tmp_26*tmp_590;
      real_t tmp_639 = tmp_28*tmp_538;
      real_t tmp_640 = tmp_638 + tmp_639;
      real_t tmp_641 = 2*tmp_640;
      real_t tmp_642 = tmp_35*tmp_590;
      real_t tmp_643 = tmp_37*tmp_538;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = 2*tmp_644;
      real_t tmp_646 = tmp_152*tmp_21;
      real_t tmp_647 = tmp_198*tmp_45;
      real_t tmp_648 = tmp_646 + tmp_647;
      real_t tmp_649 = tmp_26*tmp_602;
      real_t tmp_650 = tmp_28*tmp_551;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_35*tmp_602;
      real_t tmp_654 = tmp_37*tmp_551;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 2*tmp_655;
      real_t tmp_657 = tmp_152*tmp_63;
      real_t tmp_658 = tmp_211*tmp_45;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = tmp_26*tmp_614;
      real_t tmp_661 = tmp_28*tmp_564;
      real_t tmp_662 = tmp_660 + tmp_661;
      real_t tmp_663 = 2*tmp_662;
      real_t tmp_664 = tmp_35*tmp_614;
      real_t tmp_665 = tmp_37*tmp_564;
      real_t tmp_666 = tmp_664 + tmp_665;
      real_t tmp_667 = 2*tmp_666;
      real_t tmp_668 = tmp_152*tmp_84;
      real_t tmp_669 = tmp_224*tmp_45;
      real_t tmp_670 = tmp_668 + tmp_669;
      real_t tmp_671 = tmp_26*tmp_626;
      real_t tmp_672 = tmp_28*tmp_577;
      real_t tmp_673 = tmp_671 + tmp_672;
      real_t tmp_674 = 2*tmp_673;
      real_t tmp_675 = tmp_35*tmp_626;
      real_t tmp_676 = tmp_37*tmp_577;
      real_t tmp_677 = tmp_675 + tmp_676;
      real_t tmp_678 = 2*tmp_677;
      real_t tmp_679 = tmp_105*tmp_152;
      real_t tmp_680 = tmp_237*tmp_45;
      real_t tmp_681 = tmp_679 + tmp_680;
      real_t tmp_682 = 0.5*tmp_328 - tmp_541 - tmp_592;
      real_t tmp_683 = 2*tmp_682;
      real_t tmp_684 = 0.5*tmp_332 - tmp_545 - tmp_596;
      real_t tmp_685 = 2*tmp_684;
      real_t tmp_686 = 1.0*tmp_42;
      real_t tmp_687 = tmp_327*tmp_686 - tmp_549 - tmp_600;
      real_t tmp_688 = 0.5*tmp_337 - tmp_554 - tmp_604;
      real_t tmp_689 = 2*tmp_688;
      real_t tmp_690 = 0.5*tmp_340 - tmp_558 - tmp_608;
      real_t tmp_691 = 2*tmp_690;
      real_t tmp_692 = tmp_336*tmp_686 - tmp_562 - tmp_612;
      real_t tmp_693 = 0.5*tmp_345 - tmp_567 - tmp_616;
      real_t tmp_694 = 2*tmp_693;
      real_t tmp_695 = 0.5*tmp_348 - tmp_571 - tmp_620;
      real_t tmp_696 = 2*tmp_695;
      real_t tmp_697 = tmp_344*tmp_686 - tmp_575 - tmp_624;
      real_t tmp_698 = 0.5*tmp_353 - tmp_580 - tmp_628;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = 0.5*tmp_356 - tmp_584 - tmp_632;
      real_t tmp_701 = 2*tmp_700;
      real_t tmp_702 = tmp_352*tmp_686 - tmp_588 - tmp_636;
      real_t tmp_703 = 0.5*tmp_360 - tmp_539 - tmp_639;
      real_t tmp_704 = 2*tmp_703;
      real_t tmp_705 = 0.5*tmp_364 - tmp_544 - tmp_643;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = 1.0*tmp_44;
      real_t tmp_708 = tmp_359*tmp_707 - tmp_548 - tmp_647;
      real_t tmp_709 = 0.5*tmp_368 - tmp_552 - tmp_650;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = 0.5*tmp_371 - tmp_557 - tmp_654;
      real_t tmp_712 = 2*tmp_711;
      real_t tmp_713 = tmp_367*tmp_707 - tmp_561 - tmp_658;
      real_t tmp_714 = 0.5*tmp_375 - tmp_565 - tmp_661;
      real_t tmp_715 = 2*tmp_714;
      real_t tmp_716 = 0.5*tmp_378 - tmp_570 - tmp_665;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_374*tmp_707 - tmp_574 - tmp_669;
      real_t tmp_719 = 0.5*tmp_382 - tmp_578 - tmp_672;
      real_t tmp_720 = 2*tmp_719;
      real_t tmp_721 = 0.5*tmp_385 - tmp_583 - tmp_676;
      real_t tmp_722 = 2*tmp_721;
      real_t tmp_723 = tmp_381*tmp_707 - tmp_587 - tmp_680;
      real_t tmp_724 = 0.5*tmp_388 - tmp_591 - tmp_638;
      real_t tmp_725 = 2*tmp_724;
      real_t tmp_726 = 0.5*tmp_392 - tmp_595 - tmp_642;
      real_t tmp_727 = 2*tmp_726;
      real_t tmp_728 = 1.0*tmp_45;
      real_t tmp_729 = tmp_387*tmp_728 - tmp_599 - tmp_646;
      real_t tmp_730 = 0.5*tmp_395 - tmp_603 - tmp_649;
      real_t tmp_731 = 2*tmp_730;
      real_t tmp_732 = 0.5*tmp_398 - tmp_607 - tmp_653;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = tmp_394*tmp_728 - tmp_611 - tmp_657;
      real_t tmp_735 = 0.5*tmp_401 - tmp_615 - tmp_660;
      real_t tmp_736 = 2*tmp_735;
      real_t tmp_737 = 0.5*tmp_404 - tmp_619 - tmp_664;
      real_t tmp_738 = 2*tmp_737;
      real_t tmp_739 = tmp_400*tmp_728 - tmp_623 - tmp_668;
      real_t tmp_740 = 0.5*tmp_407 - tmp_627 - tmp_671;
      real_t tmp_741 = 2*tmp_740;
      real_t tmp_742 = 0.5*tmp_410 - tmp_631 - tmp_675;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = tmp_406*tmp_728 - tmp_635 - tmp_679;
      real_t a_0_0 = tmp_104*(tmp_101*tmp_103 + tmp_91*tmp_93 + tmp_97*tmp_99) + tmp_125*(tmp_112*tmp_114 + tmp_118*tmp_120 + tmp_122*tmp_124) + tmp_62*(tmp_30*tmp_32 + tmp_39*tmp_41 + tmp_46*tmp_48) + tmp_83*(tmp_70*tmp_72 + tmp_76*tmp_78 + tmp_80*tmp_82);
      real_t a_0_1 = tmp_104*(tmp_101*tmp_142 + tmp_141*tmp_92 + tmp_143*tmp_98) + tmp_125*(tmp_113*tmp_146 + tmp_119*tmp_148 + tmp_122*tmp_147) + tmp_62*(tmp_129*tmp_31 + tmp_132*tmp_46 + tmp_133*tmp_40) + tmp_83*(tmp_136*tmp_71 + tmp_137*tmp_80 + tmp_138*tmp_77);
      real_t a_0_2 = tmp_104*(tmp_101*tmp_164 + tmp_163*tmp_92 + tmp_165*tmp_98) + tmp_125*(tmp_113*tmp_168 + tmp_119*tmp_170 + tmp_122*tmp_169) + tmp_62*(tmp_151*tmp_31 + tmp_154*tmp_46 + tmp_155*tmp_40) + tmp_83*(tmp_158*tmp_71 + tmp_159*tmp_80 + tmp_160*tmp_77);
      real_t a_0_3 = tmp_104*(tmp_101*tmp_186 + tmp_185*tmp_92 + tmp_187*tmp_98) + tmp_125*(tmp_113*tmp_190 + tmp_119*tmp_192 + tmp_122*tmp_191) + tmp_62*(tmp_173*tmp_31 + tmp_176*tmp_46 + tmp_177*tmp_40) + tmp_83*(tmp_180*tmp_71 + tmp_181*tmp_80 + tmp_182*tmp_77);
      real_t a_0_4 = tmp_104*(tmp_101*tmp_223 + tmp_228*tmp_93 + tmp_231*tmp_99) + tmp_125*(tmp_114*tmp_241 + tmp_120*tmp_244 + tmp_122*tmp_236) + tmp_62*(tmp_197*tmp_46 + tmp_202*tmp_32 + tmp_205*tmp_41) + tmp_83*(tmp_210*tmp_80 + tmp_215*tmp_72 + tmp_218*tmp_78);
      real_t a_0_5 = tmp_104*(tmp_101*tmp_270 + tmp_274*tmp_93 + tmp_277*tmp_99) + tmp_125*(tmp_114*tmp_285 + tmp_120*tmp_288 + tmp_122*tmp_281) + tmp_62*(tmp_248*tmp_46 + tmp_252*tmp_32 + tmp_255*tmp_41) + tmp_83*(tmp_259*tmp_80 + tmp_263*tmp_72 + tmp_266*tmp_78);
      real_t a_0_6 = tmp_104*(tmp_101*tmp_309 + tmp_312*tmp_93 + tmp_315*tmp_99) + tmp_125*(tmp_114*tmp_321 + tmp_120*tmp_324 + tmp_122*tmp_318) + tmp_62*(tmp_291*tmp_46 + tmp_294*tmp_32 + tmp_297*tmp_41) + tmp_83*(tmp_300*tmp_80 + tmp_303*tmp_72 + tmp_306*tmp_78);
      real_t a_0_7 = tmp_104*(tmp_101*tmp_347 + tmp_346*tmp_93 + tmp_349*tmp_99) + tmp_125*(tmp_114*tmp_354 + tmp_120*tmp_357 + tmp_122*tmp_355) + tmp_62*(tmp_32*tmp_329 + tmp_331*tmp_46 + tmp_333*tmp_41) + tmp_83*(tmp_338*tmp_72 + tmp_339*tmp_80 + tmp_341*tmp_78);
      real_t a_0_8 = tmp_104*(tmp_101*tmp_377 + tmp_376*tmp_93 + tmp_379*tmp_99) + tmp_125*(tmp_114*tmp_383 + tmp_120*tmp_386 + tmp_122*tmp_384) + tmp_62*(tmp_32*tmp_361 + tmp_363*tmp_46 + tmp_365*tmp_41) + tmp_83*(tmp_369*tmp_72 + tmp_370*tmp_80 + tmp_372*tmp_78);
      real_t a_0_9 = tmp_104*(tmp_101*tmp_403 + tmp_402*tmp_93 + tmp_405*tmp_99) + tmp_125*(tmp_114*tmp_408 + tmp_120*tmp_411 + tmp_122*tmp_409) + tmp_62*(tmp_32*tmp_389 + tmp_391*tmp_46 + tmp_393*tmp_41) + tmp_83*(tmp_396*tmp_72 + tmp_397*tmp_80 + tmp_399*tmp_78);
      real_t a_1_0 = tmp_104*(tmp_103*tmp_426 + tmp_424*tmp_91 + tmp_425*tmp_97) + tmp_125*(tmp_112*tmp_429 + tmp_118*tmp_430 + tmp_124*tmp_431) + tmp_62*(tmp_30*tmp_414 + tmp_39*tmp_415 + tmp_416*tmp_48) + tmp_83*(tmp_419*tmp_70 + tmp_420*tmp_76 + tmp_421*tmp_82);
      real_t a_1_1 = tmp_104*(tmp_432*tmp_441 + tmp_436*tmp_440 + tmp_437*tmp_441) + tmp_125*(tmp_432*tmp_443 + tmp_436*tmp_442 + tmp_437*tmp_443) + tmp_62*(tmp_432*tmp_435 + tmp_434*tmp_436 + tmp_435*tmp_437) + tmp_83*(tmp_432*tmp_439 + tmp_436*tmp_438 + tmp_437*tmp_439);
      real_t a_1_2 = tmp_455;
      real_t a_1_3 = tmp_467;
      real_t a_1_4 = tmp_104*(tmp_223*tmp_426 + tmp_228*tmp_424 + tmp_231*tmp_425) + tmp_125*(tmp_236*tmp_431 + tmp_241*tmp_429 + tmp_244*tmp_430) + tmp_62*(tmp_197*tmp_416 + tmp_202*tmp_414 + tmp_205*tmp_415) + tmp_83*(tmp_210*tmp_421 + tmp_215*tmp_419 + tmp_218*tmp_420);
      real_t a_1_5 = tmp_104*(tmp_270*tmp_426 + tmp_274*tmp_424 + tmp_277*tmp_425) + tmp_125*(tmp_281*tmp_431 + tmp_285*tmp_429 + tmp_288*tmp_430) + tmp_62*(tmp_248*tmp_416 + tmp_252*tmp_414 + tmp_255*tmp_415) + tmp_83*(tmp_259*tmp_421 + tmp_263*tmp_419 + tmp_266*tmp_420);
      real_t a_1_6 = tmp_104*(tmp_309*tmp_426 + tmp_312*tmp_424 + tmp_315*tmp_425) + tmp_125*(tmp_318*tmp_431 + tmp_321*tmp_429 + tmp_324*tmp_430) + tmp_62*(tmp_291*tmp_416 + tmp_294*tmp_414 + tmp_297*tmp_415) + tmp_83*(tmp_300*tmp_421 + tmp_303*tmp_419 + tmp_306*tmp_420);
      real_t a_1_7 = tmp_104*(tmp_346*tmp_424 + tmp_347*tmp_426 + tmp_349*tmp_425) + tmp_125*(tmp_354*tmp_429 + tmp_355*tmp_431 + tmp_357*tmp_430) + tmp_62*(tmp_329*tmp_414 + tmp_331*tmp_416 + tmp_333*tmp_415) + tmp_83*(tmp_338*tmp_419 + tmp_339*tmp_421 + tmp_341*tmp_420);
      real_t a_1_8 = tmp_104*(tmp_376*tmp_424 + tmp_377*tmp_426 + tmp_379*tmp_425) + tmp_125*(tmp_383*tmp_429 + tmp_384*tmp_431 + tmp_386*tmp_430) + tmp_62*(tmp_361*tmp_414 + tmp_363*tmp_416 + tmp_365*tmp_415) + tmp_83*(tmp_369*tmp_419 + tmp_370*tmp_421 + tmp_372*tmp_420);
      real_t a_1_9 = tmp_104*(tmp_402*tmp_424 + tmp_403*tmp_426 + tmp_405*tmp_425) + tmp_125*(tmp_408*tmp_429 + tmp_409*tmp_431 + tmp_411*tmp_430) + tmp_62*(tmp_389*tmp_414 + tmp_391*tmp_416 + tmp_393*tmp_415) + tmp_83*(tmp_396*tmp_419 + tmp_397*tmp_421 + tmp_399*tmp_420);
      real_t a_2_0 = tmp_104*(tmp_103*tmp_482 + tmp_480*tmp_91 + tmp_481*tmp_97) + tmp_125*(tmp_112*tmp_485 + tmp_118*tmp_486 + tmp_124*tmp_487) + tmp_62*(tmp_30*tmp_470 + tmp_39*tmp_471 + tmp_472*tmp_48) + tmp_83*(tmp_475*tmp_70 + tmp_476*tmp_76 + tmp_477*tmp_82);
      real_t a_2_1 = tmp_455;
      real_t a_2_2 = tmp_104*(tmp_488*tmp_496 + tmp_491*tmp_495 + tmp_492*tmp_496) + tmp_125*(tmp_488*tmp_498 + tmp_491*tmp_497 + tmp_492*tmp_498) + tmp_62*(tmp_488*tmp_490 + tmp_489*tmp_491 + tmp_490*tmp_492) + tmp_83*(tmp_488*tmp_494 + tmp_491*tmp_493 + tmp_492*tmp_494);
      real_t a_2_3 = tmp_506;
      real_t a_2_4 = tmp_104*(tmp_223*tmp_482 + tmp_228*tmp_480 + tmp_231*tmp_481) + tmp_125*(tmp_236*tmp_487 + tmp_241*tmp_485 + tmp_244*tmp_486) + tmp_62*(tmp_197*tmp_472 + tmp_202*tmp_470 + tmp_205*tmp_471) + tmp_83*(tmp_210*tmp_477 + tmp_215*tmp_475 + tmp_218*tmp_476);
      real_t a_2_5 = tmp_104*(tmp_270*tmp_482 + tmp_274*tmp_480 + tmp_277*tmp_481) + tmp_125*(tmp_281*tmp_487 + tmp_285*tmp_485 + tmp_288*tmp_486) + tmp_62*(tmp_248*tmp_472 + tmp_252*tmp_470 + tmp_255*tmp_471) + tmp_83*(tmp_259*tmp_477 + tmp_263*tmp_475 + tmp_266*tmp_476);
      real_t a_2_6 = tmp_104*(tmp_309*tmp_482 + tmp_312*tmp_480 + tmp_315*tmp_481) + tmp_125*(tmp_318*tmp_487 + tmp_321*tmp_485 + tmp_324*tmp_486) + tmp_62*(tmp_291*tmp_472 + tmp_294*tmp_470 + tmp_297*tmp_471) + tmp_83*(tmp_300*tmp_477 + tmp_303*tmp_475 + tmp_306*tmp_476);
      real_t a_2_7 = tmp_104*(tmp_346*tmp_480 + tmp_347*tmp_482 + tmp_349*tmp_481) + tmp_125*(tmp_354*tmp_485 + tmp_355*tmp_487 + tmp_357*tmp_486) + tmp_62*(tmp_329*tmp_470 + tmp_331*tmp_472 + tmp_333*tmp_471) + tmp_83*(tmp_338*tmp_475 + tmp_339*tmp_477 + tmp_341*tmp_476);
      real_t a_2_8 = tmp_104*(tmp_376*tmp_480 + tmp_377*tmp_482 + tmp_379*tmp_481) + tmp_125*(tmp_383*tmp_485 + tmp_384*tmp_487 + tmp_386*tmp_486) + tmp_62*(tmp_361*tmp_470 + tmp_363*tmp_472 + tmp_365*tmp_471) + tmp_83*(tmp_369*tmp_475 + tmp_370*tmp_477 + tmp_372*tmp_476);
      real_t a_2_9 = tmp_104*(tmp_402*tmp_480 + tmp_403*tmp_482 + tmp_405*tmp_481) + tmp_125*(tmp_408*tmp_485 + tmp_409*tmp_487 + tmp_411*tmp_486) + tmp_62*(tmp_389*tmp_470 + tmp_391*tmp_472 + tmp_393*tmp_471) + tmp_83*(tmp_396*tmp_475 + tmp_397*tmp_477 + tmp_399*tmp_476);
      real_t a_3_0 = tmp_104*(tmp_103*tmp_521 + tmp_519*tmp_91 + tmp_520*tmp_97) + tmp_125*(tmp_112*tmp_524 + tmp_118*tmp_525 + tmp_124*tmp_526) + tmp_62*(tmp_30*tmp_509 + tmp_39*tmp_510 + tmp_48*tmp_511) + tmp_83*(tmp_514*tmp_70 + tmp_515*tmp_76 + tmp_516*tmp_82);
      real_t a_3_1 = tmp_467;
      real_t a_3_2 = tmp_506;
      real_t a_3_3 = tmp_104*(tmp_527*tmp_535 + tmp_530*tmp_534 + tmp_531*tmp_535) + tmp_125*(tmp_527*tmp_537 + tmp_530*tmp_536 + tmp_531*tmp_537) + tmp_62*(tmp_527*tmp_529 + tmp_528*tmp_530 + tmp_529*tmp_531) + tmp_83*(tmp_527*tmp_533 + tmp_530*tmp_532 + tmp_531*tmp_533);
      real_t a_3_4 = tmp_104*(tmp_223*tmp_521 + tmp_228*tmp_519 + tmp_231*tmp_520) + tmp_125*(tmp_236*tmp_526 + tmp_241*tmp_524 + tmp_244*tmp_525) + tmp_62*(tmp_197*tmp_511 + tmp_202*tmp_509 + tmp_205*tmp_510) + tmp_83*(tmp_210*tmp_516 + tmp_215*tmp_514 + tmp_218*tmp_515);
      real_t a_3_5 = tmp_104*(tmp_270*tmp_521 + tmp_274*tmp_519 + tmp_277*tmp_520) + tmp_125*(tmp_281*tmp_526 + tmp_285*tmp_524 + tmp_288*tmp_525) + tmp_62*(tmp_248*tmp_511 + tmp_252*tmp_509 + tmp_255*tmp_510) + tmp_83*(tmp_259*tmp_516 + tmp_263*tmp_514 + tmp_266*tmp_515);
      real_t a_3_6 = tmp_104*(tmp_309*tmp_521 + tmp_312*tmp_519 + tmp_315*tmp_520) + tmp_125*(tmp_318*tmp_526 + tmp_321*tmp_524 + tmp_324*tmp_525) + tmp_62*(tmp_291*tmp_511 + tmp_294*tmp_509 + tmp_297*tmp_510) + tmp_83*(tmp_300*tmp_516 + tmp_303*tmp_514 + tmp_306*tmp_515);
      real_t a_3_7 = tmp_104*(tmp_346*tmp_519 + tmp_347*tmp_521 + tmp_349*tmp_520) + tmp_125*(tmp_354*tmp_524 + tmp_355*tmp_526 + tmp_357*tmp_525) + tmp_62*(tmp_329*tmp_509 + tmp_331*tmp_511 + tmp_333*tmp_510) + tmp_83*(tmp_338*tmp_514 + tmp_339*tmp_516 + tmp_341*tmp_515);
      real_t a_3_8 = tmp_104*(tmp_376*tmp_519 + tmp_377*tmp_521 + tmp_379*tmp_520) + tmp_125*(tmp_383*tmp_524 + tmp_384*tmp_526 + tmp_386*tmp_525) + tmp_62*(tmp_361*tmp_509 + tmp_363*tmp_511 + tmp_365*tmp_510) + tmp_83*(tmp_369*tmp_514 + tmp_370*tmp_516 + tmp_372*tmp_515);
      real_t a_3_9 = tmp_104*(tmp_402*tmp_519 + tmp_403*tmp_521 + tmp_405*tmp_520) + tmp_125*(tmp_408*tmp_524 + tmp_409*tmp_526 + tmp_411*tmp_525) + tmp_62*(tmp_389*tmp_509 + tmp_391*tmp_511 + tmp_393*tmp_510) + tmp_83*(tmp_396*tmp_514 + tmp_397*tmp_516 + tmp_399*tmp_515);
      real_t a_4_0 = tmp_104*(tmp_103*tmp_576 + tmp_569*tmp_91 + tmp_573*tmp_97) + tmp_125*(tmp_112*tmp_582 + tmp_118*tmp_586 + tmp_124*tmp_589) + tmp_62*(tmp_30*tmp_543 + tmp_39*tmp_547 + tmp_48*tmp_550) + tmp_83*(tmp_556*tmp_70 + tmp_560*tmp_76 + tmp_563*tmp_82);
      real_t a_4_1 = tmp_104*(tmp_141*tmp_568 + tmp_142*tmp_576 + tmp_143*tmp_572) + tmp_125*(tmp_146*tmp_581 + tmp_147*tmp_589 + tmp_148*tmp_585) + tmp_62*(tmp_129*tmp_542 + tmp_132*tmp_550 + tmp_133*tmp_546) + tmp_83*(tmp_136*tmp_555 + tmp_137*tmp_563 + tmp_138*tmp_559);
      real_t a_4_2 = tmp_104*(tmp_163*tmp_568 + tmp_164*tmp_576 + tmp_165*tmp_572) + tmp_125*(tmp_168*tmp_581 + tmp_169*tmp_589 + tmp_170*tmp_585) + tmp_62*(tmp_151*tmp_542 + tmp_154*tmp_550 + tmp_155*tmp_546) + tmp_83*(tmp_158*tmp_555 + tmp_159*tmp_563 + tmp_160*tmp_559);
      real_t a_4_3 = tmp_104*(tmp_185*tmp_568 + tmp_186*tmp_576 + tmp_187*tmp_572) + tmp_125*(tmp_190*tmp_581 + tmp_191*tmp_589 + tmp_192*tmp_585) + tmp_62*(tmp_173*tmp_542 + tmp_176*tmp_550 + tmp_177*tmp_546) + tmp_83*(tmp_180*tmp_555 + tmp_181*tmp_563 + tmp_182*tmp_559);
      real_t a_4_4 = tmp_104*(tmp_223*tmp_576 + tmp_228*tmp_569 + tmp_231*tmp_573) + tmp_125*(tmp_236*tmp_589 + tmp_241*tmp_582 + tmp_244*tmp_586) + tmp_62*(tmp_197*tmp_550 + tmp_202*tmp_543 + tmp_205*tmp_547) + tmp_83*(tmp_210*tmp_563 + tmp_215*tmp_556 + tmp_218*tmp_560);
      real_t a_4_5 = tmp_104*(tmp_270*tmp_576 + tmp_274*tmp_569 + tmp_277*tmp_573) + tmp_125*(tmp_281*tmp_589 + tmp_285*tmp_582 + tmp_288*tmp_586) + tmp_62*(tmp_248*tmp_550 + tmp_252*tmp_543 + tmp_255*tmp_547) + tmp_83*(tmp_259*tmp_563 + tmp_263*tmp_556 + tmp_266*tmp_560);
      real_t a_4_6 = tmp_104*(tmp_309*tmp_576 + tmp_312*tmp_569 + tmp_315*tmp_573) + tmp_125*(tmp_318*tmp_589 + tmp_321*tmp_582 + tmp_324*tmp_586) + tmp_62*(tmp_291*tmp_550 + tmp_294*tmp_543 + tmp_297*tmp_547) + tmp_83*(tmp_300*tmp_563 + tmp_303*tmp_556 + tmp_306*tmp_560);
      real_t a_4_7 = tmp_104*(tmp_346*tmp_569 + tmp_347*tmp_576 + tmp_349*tmp_573) + tmp_125*(tmp_354*tmp_582 + tmp_355*tmp_589 + tmp_357*tmp_586) + tmp_62*(tmp_329*tmp_543 + tmp_331*tmp_550 + tmp_333*tmp_547) + tmp_83*(tmp_338*tmp_556 + tmp_339*tmp_563 + tmp_341*tmp_560);
      real_t a_4_8 = tmp_104*(tmp_376*tmp_569 + tmp_377*tmp_576 + tmp_379*tmp_573) + tmp_125*(tmp_383*tmp_582 + tmp_384*tmp_589 + tmp_386*tmp_586) + tmp_62*(tmp_361*tmp_543 + tmp_363*tmp_550 + tmp_365*tmp_547) + tmp_83*(tmp_369*tmp_556 + tmp_370*tmp_563 + tmp_372*tmp_560);
      real_t a_4_9 = tmp_104*(tmp_402*tmp_569 + tmp_403*tmp_576 + tmp_405*tmp_573) + tmp_125*(tmp_408*tmp_582 + tmp_409*tmp_589 + tmp_411*tmp_586) + tmp_62*(tmp_389*tmp_543 + tmp_391*tmp_550 + tmp_393*tmp_547) + tmp_83*(tmp_396*tmp_556 + tmp_397*tmp_563 + tmp_399*tmp_560);
      real_t a_5_0 = tmp_104*(tmp_103*tmp_625 + tmp_618*tmp_91 + tmp_622*tmp_97) + tmp_125*(tmp_112*tmp_630 + tmp_118*tmp_634 + tmp_124*tmp_637) + tmp_62*(tmp_30*tmp_594 + tmp_39*tmp_598 + tmp_48*tmp_601) + tmp_83*(tmp_606*tmp_70 + tmp_610*tmp_76 + tmp_613*tmp_82);
      real_t a_5_1 = tmp_104*(tmp_141*tmp_617 + tmp_142*tmp_625 + tmp_143*tmp_621) + tmp_125*(tmp_146*tmp_629 + tmp_147*tmp_637 + tmp_148*tmp_633) + tmp_62*(tmp_129*tmp_593 + tmp_132*tmp_601 + tmp_133*tmp_597) + tmp_83*(tmp_136*tmp_605 + tmp_137*tmp_613 + tmp_138*tmp_609);
      real_t a_5_2 = tmp_104*(tmp_163*tmp_617 + tmp_164*tmp_625 + tmp_165*tmp_621) + tmp_125*(tmp_168*tmp_629 + tmp_169*tmp_637 + tmp_170*tmp_633) + tmp_62*(tmp_151*tmp_593 + tmp_154*tmp_601 + tmp_155*tmp_597) + tmp_83*(tmp_158*tmp_605 + tmp_159*tmp_613 + tmp_160*tmp_609);
      real_t a_5_3 = tmp_104*(tmp_185*tmp_617 + tmp_186*tmp_625 + tmp_187*tmp_621) + tmp_125*(tmp_190*tmp_629 + tmp_191*tmp_637 + tmp_192*tmp_633) + tmp_62*(tmp_173*tmp_593 + tmp_176*tmp_601 + tmp_177*tmp_597) + tmp_83*(tmp_180*tmp_605 + tmp_181*tmp_613 + tmp_182*tmp_609);
      real_t a_5_4 = tmp_104*(tmp_223*tmp_625 + tmp_228*tmp_618 + tmp_231*tmp_622) + tmp_125*(tmp_236*tmp_637 + tmp_241*tmp_630 + tmp_244*tmp_634) + tmp_62*(tmp_197*tmp_601 + tmp_202*tmp_594 + tmp_205*tmp_598) + tmp_83*(tmp_210*tmp_613 + tmp_215*tmp_606 + tmp_218*tmp_610);
      real_t a_5_5 = tmp_104*(tmp_270*tmp_625 + tmp_274*tmp_618 + tmp_277*tmp_622) + tmp_125*(tmp_281*tmp_637 + tmp_285*tmp_630 + tmp_288*tmp_634) + tmp_62*(tmp_248*tmp_601 + tmp_252*tmp_594 + tmp_255*tmp_598) + tmp_83*(tmp_259*tmp_613 + tmp_263*tmp_606 + tmp_266*tmp_610);
      real_t a_5_6 = tmp_104*(tmp_309*tmp_625 + tmp_312*tmp_618 + tmp_315*tmp_622) + tmp_125*(tmp_318*tmp_637 + tmp_321*tmp_630 + tmp_324*tmp_634) + tmp_62*(tmp_291*tmp_601 + tmp_294*tmp_594 + tmp_297*tmp_598) + tmp_83*(tmp_300*tmp_613 + tmp_303*tmp_606 + tmp_306*tmp_610);
      real_t a_5_7 = tmp_104*(tmp_346*tmp_618 + tmp_347*tmp_625 + tmp_349*tmp_622) + tmp_125*(tmp_354*tmp_630 + tmp_355*tmp_637 + tmp_357*tmp_634) + tmp_62*(tmp_329*tmp_594 + tmp_331*tmp_601 + tmp_333*tmp_598) + tmp_83*(tmp_338*tmp_606 + tmp_339*tmp_613 + tmp_341*tmp_610);
      real_t a_5_8 = tmp_104*(tmp_376*tmp_618 + tmp_377*tmp_625 + tmp_379*tmp_622) + tmp_125*(tmp_383*tmp_630 + tmp_384*tmp_637 + tmp_386*tmp_634) + tmp_62*(tmp_361*tmp_594 + tmp_363*tmp_601 + tmp_365*tmp_598) + tmp_83*(tmp_369*tmp_606 + tmp_370*tmp_613 + tmp_372*tmp_610);
      real_t a_5_9 = tmp_104*(tmp_402*tmp_618 + tmp_403*tmp_625 + tmp_405*tmp_622) + tmp_125*(tmp_408*tmp_630 + tmp_409*tmp_637 + tmp_411*tmp_634) + tmp_62*(tmp_389*tmp_594 + tmp_391*tmp_601 + tmp_393*tmp_598) + tmp_83*(tmp_396*tmp_606 + tmp_397*tmp_613 + tmp_399*tmp_610);
      real_t a_6_0 = tmp_104*(tmp_103*tmp_670 + tmp_663*tmp_91 + tmp_667*tmp_97) + tmp_125*(tmp_112*tmp_674 + tmp_118*tmp_678 + tmp_124*tmp_681) + tmp_62*(tmp_30*tmp_641 + tmp_39*tmp_645 + tmp_48*tmp_648) + tmp_83*(tmp_652*tmp_70 + tmp_656*tmp_76 + tmp_659*tmp_82);
      real_t a_6_1 = tmp_104*(tmp_141*tmp_662 + tmp_142*tmp_670 + tmp_143*tmp_666) + tmp_125*(tmp_146*tmp_673 + tmp_147*tmp_681 + tmp_148*tmp_677) + tmp_62*(tmp_129*tmp_640 + tmp_132*tmp_648 + tmp_133*tmp_644) + tmp_83*(tmp_136*tmp_651 + tmp_137*tmp_659 + tmp_138*tmp_655);
      real_t a_6_2 = tmp_104*(tmp_163*tmp_662 + tmp_164*tmp_670 + tmp_165*tmp_666) + tmp_125*(tmp_168*tmp_673 + tmp_169*tmp_681 + tmp_170*tmp_677) + tmp_62*(tmp_151*tmp_640 + tmp_154*tmp_648 + tmp_155*tmp_644) + tmp_83*(tmp_158*tmp_651 + tmp_159*tmp_659 + tmp_160*tmp_655);
      real_t a_6_3 = tmp_104*(tmp_185*tmp_662 + tmp_186*tmp_670 + tmp_187*tmp_666) + tmp_125*(tmp_190*tmp_673 + tmp_191*tmp_681 + tmp_192*tmp_677) + tmp_62*(tmp_173*tmp_640 + tmp_176*tmp_648 + tmp_177*tmp_644) + tmp_83*(tmp_180*tmp_651 + tmp_181*tmp_659 + tmp_182*tmp_655);
      real_t a_6_4 = tmp_104*(tmp_223*tmp_670 + tmp_228*tmp_663 + tmp_231*tmp_667) + tmp_125*(tmp_236*tmp_681 + tmp_241*tmp_674 + tmp_244*tmp_678) + tmp_62*(tmp_197*tmp_648 + tmp_202*tmp_641 + tmp_205*tmp_645) + tmp_83*(tmp_210*tmp_659 + tmp_215*tmp_652 + tmp_218*tmp_656);
      real_t a_6_5 = tmp_104*(tmp_270*tmp_670 + tmp_274*tmp_663 + tmp_277*tmp_667) + tmp_125*(tmp_281*tmp_681 + tmp_285*tmp_674 + tmp_288*tmp_678) + tmp_62*(tmp_248*tmp_648 + tmp_252*tmp_641 + tmp_255*tmp_645) + tmp_83*(tmp_259*tmp_659 + tmp_263*tmp_652 + tmp_266*tmp_656);
      real_t a_6_6 = tmp_104*(tmp_309*tmp_670 + tmp_312*tmp_663 + tmp_315*tmp_667) + tmp_125*(tmp_318*tmp_681 + tmp_321*tmp_674 + tmp_324*tmp_678) + tmp_62*(tmp_291*tmp_648 + tmp_294*tmp_641 + tmp_297*tmp_645) + tmp_83*(tmp_300*tmp_659 + tmp_303*tmp_652 + tmp_306*tmp_656);
      real_t a_6_7 = tmp_104*(tmp_346*tmp_663 + tmp_347*tmp_670 + tmp_349*tmp_667) + tmp_125*(tmp_354*tmp_674 + tmp_355*tmp_681 + tmp_357*tmp_678) + tmp_62*(tmp_329*tmp_641 + tmp_331*tmp_648 + tmp_333*tmp_645) + tmp_83*(tmp_338*tmp_652 + tmp_339*tmp_659 + tmp_341*tmp_656);
      real_t a_6_8 = tmp_104*(tmp_376*tmp_663 + tmp_377*tmp_670 + tmp_379*tmp_667) + tmp_125*(tmp_383*tmp_674 + tmp_384*tmp_681 + tmp_386*tmp_678) + tmp_62*(tmp_361*tmp_641 + tmp_363*tmp_648 + tmp_365*tmp_645) + tmp_83*(tmp_369*tmp_652 + tmp_370*tmp_659 + tmp_372*tmp_656);
      real_t a_6_9 = tmp_104*(tmp_402*tmp_663 + tmp_403*tmp_670 + tmp_405*tmp_667) + tmp_125*(tmp_408*tmp_674 + tmp_409*tmp_681 + tmp_411*tmp_678) + tmp_62*(tmp_389*tmp_641 + tmp_391*tmp_648 + tmp_393*tmp_645) + tmp_83*(tmp_396*tmp_652 + tmp_397*tmp_659 + tmp_399*tmp_656);
      real_t a_7_0 = tmp_104*(tmp_103*tmp_697 + tmp_694*tmp_91 + tmp_696*tmp_97) + tmp_125*(tmp_112*tmp_699 + tmp_118*tmp_701 + tmp_124*tmp_702) + tmp_62*(tmp_30*tmp_683 + tmp_39*tmp_685 + tmp_48*tmp_687) + tmp_83*(tmp_689*tmp_70 + tmp_691*tmp_76 + tmp_692*tmp_82);
      real_t a_7_1 = tmp_104*(tmp_141*tmp_693 + tmp_142*tmp_697 + tmp_143*tmp_695) + tmp_125*(tmp_146*tmp_698 + tmp_147*tmp_702 + tmp_148*tmp_700) + tmp_62*(tmp_129*tmp_682 + tmp_132*tmp_687 + tmp_133*tmp_684) + tmp_83*(tmp_136*tmp_688 + tmp_137*tmp_692 + tmp_138*tmp_690);
      real_t a_7_2 = tmp_104*(tmp_163*tmp_693 + tmp_164*tmp_697 + tmp_165*tmp_695) + tmp_125*(tmp_168*tmp_698 + tmp_169*tmp_702 + tmp_170*tmp_700) + tmp_62*(tmp_151*tmp_682 + tmp_154*tmp_687 + tmp_155*tmp_684) + tmp_83*(tmp_158*tmp_688 + tmp_159*tmp_692 + tmp_160*tmp_690);
      real_t a_7_3 = tmp_104*(tmp_185*tmp_693 + tmp_186*tmp_697 + tmp_187*tmp_695) + tmp_125*(tmp_190*tmp_698 + tmp_191*tmp_702 + tmp_192*tmp_700) + tmp_62*(tmp_173*tmp_682 + tmp_176*tmp_687 + tmp_177*tmp_684) + tmp_83*(tmp_180*tmp_688 + tmp_181*tmp_692 + tmp_182*tmp_690);
      real_t a_7_4 = tmp_104*(tmp_223*tmp_697 + tmp_228*tmp_694 + tmp_231*tmp_696) + tmp_125*(tmp_236*tmp_702 + tmp_241*tmp_699 + tmp_244*tmp_701) + tmp_62*(tmp_197*tmp_687 + tmp_202*tmp_683 + tmp_205*tmp_685) + tmp_83*(tmp_210*tmp_692 + tmp_215*tmp_689 + tmp_218*tmp_691);
      real_t a_7_5 = tmp_104*(tmp_270*tmp_697 + tmp_274*tmp_694 + tmp_277*tmp_696) + tmp_125*(tmp_281*tmp_702 + tmp_285*tmp_699 + tmp_288*tmp_701) + tmp_62*(tmp_248*tmp_687 + tmp_252*tmp_683 + tmp_255*tmp_685) + tmp_83*(tmp_259*tmp_692 + tmp_263*tmp_689 + tmp_266*tmp_691);
      real_t a_7_6 = tmp_104*(tmp_309*tmp_697 + tmp_312*tmp_694 + tmp_315*tmp_696) + tmp_125*(tmp_318*tmp_702 + tmp_321*tmp_699 + tmp_324*tmp_701) + tmp_62*(tmp_291*tmp_687 + tmp_294*tmp_683 + tmp_297*tmp_685) + tmp_83*(tmp_300*tmp_692 + tmp_303*tmp_689 + tmp_306*tmp_691);
      real_t a_7_7 = tmp_104*(tmp_346*tmp_694 + tmp_347*tmp_697 + tmp_349*tmp_696) + tmp_125*(tmp_354*tmp_699 + tmp_355*tmp_702 + tmp_357*tmp_701) + tmp_62*(tmp_329*tmp_683 + tmp_331*tmp_687 + tmp_333*tmp_685) + tmp_83*(tmp_338*tmp_689 + tmp_339*tmp_692 + tmp_341*tmp_691);
      real_t a_7_8 = tmp_104*(tmp_376*tmp_694 + tmp_377*tmp_697 + tmp_379*tmp_696) + tmp_125*(tmp_383*tmp_699 + tmp_384*tmp_702 + tmp_386*tmp_701) + tmp_62*(tmp_361*tmp_683 + tmp_363*tmp_687 + tmp_365*tmp_685) + tmp_83*(tmp_369*tmp_689 + tmp_370*tmp_692 + tmp_372*tmp_691);
      real_t a_7_9 = tmp_104*(tmp_402*tmp_694 + tmp_403*tmp_697 + tmp_405*tmp_696) + tmp_125*(tmp_408*tmp_699 + tmp_409*tmp_702 + tmp_411*tmp_701) + tmp_62*(tmp_389*tmp_683 + tmp_391*tmp_687 + tmp_393*tmp_685) + tmp_83*(tmp_396*tmp_689 + tmp_397*tmp_692 + tmp_399*tmp_691);
      real_t a_8_0 = tmp_104*(tmp_103*tmp_718 + tmp_715*tmp_91 + tmp_717*tmp_97) + tmp_125*(tmp_112*tmp_720 + tmp_118*tmp_722 + tmp_124*tmp_723) + tmp_62*(tmp_30*tmp_704 + tmp_39*tmp_706 + tmp_48*tmp_708) + tmp_83*(tmp_70*tmp_710 + tmp_712*tmp_76 + tmp_713*tmp_82);
      real_t a_8_1 = tmp_104*(tmp_141*tmp_714 + tmp_142*tmp_718 + tmp_143*tmp_716) + tmp_125*(tmp_146*tmp_719 + tmp_147*tmp_723 + tmp_148*tmp_721) + tmp_62*(tmp_129*tmp_703 + tmp_132*tmp_708 + tmp_133*tmp_705) + tmp_83*(tmp_136*tmp_709 + tmp_137*tmp_713 + tmp_138*tmp_711);
      real_t a_8_2 = tmp_104*(tmp_163*tmp_714 + tmp_164*tmp_718 + tmp_165*tmp_716) + tmp_125*(tmp_168*tmp_719 + tmp_169*tmp_723 + tmp_170*tmp_721) + tmp_62*(tmp_151*tmp_703 + tmp_154*tmp_708 + tmp_155*tmp_705) + tmp_83*(tmp_158*tmp_709 + tmp_159*tmp_713 + tmp_160*tmp_711);
      real_t a_8_3 = tmp_104*(tmp_185*tmp_714 + tmp_186*tmp_718 + tmp_187*tmp_716) + tmp_125*(tmp_190*tmp_719 + tmp_191*tmp_723 + tmp_192*tmp_721) + tmp_62*(tmp_173*tmp_703 + tmp_176*tmp_708 + tmp_177*tmp_705) + tmp_83*(tmp_180*tmp_709 + tmp_181*tmp_713 + tmp_182*tmp_711);
      real_t a_8_4 = tmp_104*(tmp_223*tmp_718 + tmp_228*tmp_715 + tmp_231*tmp_717) + tmp_125*(tmp_236*tmp_723 + tmp_241*tmp_720 + tmp_244*tmp_722) + tmp_62*(tmp_197*tmp_708 + tmp_202*tmp_704 + tmp_205*tmp_706) + tmp_83*(tmp_210*tmp_713 + tmp_215*tmp_710 + tmp_218*tmp_712);
      real_t a_8_5 = tmp_104*(tmp_270*tmp_718 + tmp_274*tmp_715 + tmp_277*tmp_717) + tmp_125*(tmp_281*tmp_723 + tmp_285*tmp_720 + tmp_288*tmp_722) + tmp_62*(tmp_248*tmp_708 + tmp_252*tmp_704 + tmp_255*tmp_706) + tmp_83*(tmp_259*tmp_713 + tmp_263*tmp_710 + tmp_266*tmp_712);
      real_t a_8_6 = tmp_104*(tmp_309*tmp_718 + tmp_312*tmp_715 + tmp_315*tmp_717) + tmp_125*(tmp_318*tmp_723 + tmp_321*tmp_720 + tmp_324*tmp_722) + tmp_62*(tmp_291*tmp_708 + tmp_294*tmp_704 + tmp_297*tmp_706) + tmp_83*(tmp_300*tmp_713 + tmp_303*tmp_710 + tmp_306*tmp_712);
      real_t a_8_7 = tmp_104*(tmp_346*tmp_715 + tmp_347*tmp_718 + tmp_349*tmp_717) + tmp_125*(tmp_354*tmp_720 + tmp_355*tmp_723 + tmp_357*tmp_722) + tmp_62*(tmp_329*tmp_704 + tmp_331*tmp_708 + tmp_333*tmp_706) + tmp_83*(tmp_338*tmp_710 + tmp_339*tmp_713 + tmp_341*tmp_712);
      real_t a_8_8 = tmp_104*(tmp_376*tmp_715 + tmp_377*tmp_718 + tmp_379*tmp_717) + tmp_125*(tmp_383*tmp_720 + tmp_384*tmp_723 + tmp_386*tmp_722) + tmp_62*(tmp_361*tmp_704 + tmp_363*tmp_708 + tmp_365*tmp_706) + tmp_83*(tmp_369*tmp_710 + tmp_370*tmp_713 + tmp_372*tmp_712);
      real_t a_8_9 = tmp_104*(tmp_402*tmp_715 + tmp_403*tmp_718 + tmp_405*tmp_717) + tmp_125*(tmp_408*tmp_720 + tmp_409*tmp_723 + tmp_411*tmp_722) + tmp_62*(tmp_389*tmp_704 + tmp_391*tmp_708 + tmp_393*tmp_706) + tmp_83*(tmp_396*tmp_710 + tmp_397*tmp_713 + tmp_399*tmp_712);
      real_t a_9_0 = tmp_104*(tmp_103*tmp_739 + tmp_736*tmp_91 + tmp_738*tmp_97) + tmp_125*(tmp_112*tmp_741 + tmp_118*tmp_743 + tmp_124*tmp_744) + tmp_62*(tmp_30*tmp_725 + tmp_39*tmp_727 + tmp_48*tmp_729) + tmp_83*(tmp_70*tmp_731 + tmp_733*tmp_76 + tmp_734*tmp_82);
      real_t a_9_1 = tmp_104*(tmp_141*tmp_735 + tmp_142*tmp_739 + tmp_143*tmp_737) + tmp_125*(tmp_146*tmp_740 + tmp_147*tmp_744 + tmp_148*tmp_742) + tmp_62*(tmp_129*tmp_724 + tmp_132*tmp_729 + tmp_133*tmp_726) + tmp_83*(tmp_136*tmp_730 + tmp_137*tmp_734 + tmp_138*tmp_732);
      real_t a_9_2 = tmp_104*(tmp_163*tmp_735 + tmp_164*tmp_739 + tmp_165*tmp_737) + tmp_125*(tmp_168*tmp_740 + tmp_169*tmp_744 + tmp_170*tmp_742) + tmp_62*(tmp_151*tmp_724 + tmp_154*tmp_729 + tmp_155*tmp_726) + tmp_83*(tmp_158*tmp_730 + tmp_159*tmp_734 + tmp_160*tmp_732);
      real_t a_9_3 = tmp_104*(tmp_185*tmp_735 + tmp_186*tmp_739 + tmp_187*tmp_737) + tmp_125*(tmp_190*tmp_740 + tmp_191*tmp_744 + tmp_192*tmp_742) + tmp_62*(tmp_173*tmp_724 + tmp_176*tmp_729 + tmp_177*tmp_726) + tmp_83*(tmp_180*tmp_730 + tmp_181*tmp_734 + tmp_182*tmp_732);
      real_t a_9_4 = tmp_104*(tmp_223*tmp_739 + tmp_228*tmp_736 + tmp_231*tmp_738) + tmp_125*(tmp_236*tmp_744 + tmp_241*tmp_741 + tmp_244*tmp_743) + tmp_62*(tmp_197*tmp_729 + tmp_202*tmp_725 + tmp_205*tmp_727) + tmp_83*(tmp_210*tmp_734 + tmp_215*tmp_731 + tmp_218*tmp_733);
      real_t a_9_5 = tmp_104*(tmp_270*tmp_739 + tmp_274*tmp_736 + tmp_277*tmp_738) + tmp_125*(tmp_281*tmp_744 + tmp_285*tmp_741 + tmp_288*tmp_743) + tmp_62*(tmp_248*tmp_729 + tmp_252*tmp_725 + tmp_255*tmp_727) + tmp_83*(tmp_259*tmp_734 + tmp_263*tmp_731 + tmp_266*tmp_733);
      real_t a_9_6 = tmp_104*(tmp_309*tmp_739 + tmp_312*tmp_736 + tmp_315*tmp_738) + tmp_125*(tmp_318*tmp_744 + tmp_321*tmp_741 + tmp_324*tmp_743) + tmp_62*(tmp_291*tmp_729 + tmp_294*tmp_725 + tmp_297*tmp_727) + tmp_83*(tmp_300*tmp_734 + tmp_303*tmp_731 + tmp_306*tmp_733);
      real_t a_9_7 = tmp_104*(tmp_346*tmp_736 + tmp_347*tmp_739 + tmp_349*tmp_738) + tmp_125*(tmp_354*tmp_741 + tmp_355*tmp_744 + tmp_357*tmp_743) + tmp_62*(tmp_329*tmp_725 + tmp_331*tmp_729 + tmp_333*tmp_727) + tmp_83*(tmp_338*tmp_731 + tmp_339*tmp_734 + tmp_341*tmp_733);
      real_t a_9_8 = tmp_104*(tmp_376*tmp_736 + tmp_377*tmp_739 + tmp_379*tmp_738) + tmp_125*(tmp_383*tmp_741 + tmp_384*tmp_744 + tmp_386*tmp_743) + tmp_62*(tmp_361*tmp_725 + tmp_363*tmp_729 + tmp_365*tmp_727) + tmp_83*(tmp_369*tmp_731 + tmp_370*tmp_734 + tmp_372*tmp_733);
      real_t a_9_9 = tmp_104*(tmp_402*tmp_736 + tmp_403*tmp_739 + tmp_405*tmp_738) + tmp_125*(tmp_408*tmp_741 + tmp_409*tmp_744 + tmp_411*tmp_743) + tmp_62*(tmp_389*tmp_725 + tmp_391*tmp_729 + tmp_393*tmp_727) + tmp_83*(tmp_396*tmp_731 + tmp_397*tmp_734 + tmp_399*tmp_733);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = -tmp_11*tmp_3 + tmp_14*tmp_5;
      real_t tmp_32 = tmp_23*tmp_31;
      real_t tmp_33 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_34 = tmp_23*tmp_33;
      real_t tmp_35 = -tmp_10*tmp_14 + tmp_3*tmp_8;
      real_t tmp_36 = tmp_23*tmp_35;
      real_t tmp_37 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_38 = 2*tmp_37;
      real_t tmp_39 = tmp_12 - tmp_16;
      real_t tmp_40 = 1.0*tmp_23;
      real_t tmp_41 = -tmp_18 + tmp_9;
      real_t tmp_42 = tmp_15 - tmp_17;
      real_t tmp_43 = tmp_39*tmp_40 + tmp_40*tmp_41 + tmp_40*tmp_42;
      real_t tmp_44 = 2.0*tmp_23;
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 2.3416407864998732;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_19*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_6*tmp_62;
      real_t tmp_64 = tmp_25*tmp_62;
      real_t tmp_65 = tmp_27*tmp_62;
      real_t tmp_66 = 0.5*tmp_63 + 0.5*tmp_64 + 0.5*tmp_65;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = tmp_31*tmp_62;
      real_t tmp_69 = tmp_33*tmp_62;
      real_t tmp_70 = tmp_35*tmp_62;
      real_t tmp_71 = 0.5*tmp_68 + 0.5*tmp_69 + 0.5*tmp_70;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 1.0*tmp_62;
      real_t tmp_74 = tmp_39*tmp_73 + tmp_41*tmp_73 + tmp_42*tmp_73;
      real_t tmp_75 = 2.0*tmp_62;
      real_t tmp_76 = 0.041666666666666657*tmp_57;
      real_t tmp_77 = 2.3416407864998732;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = tmp_19*(tmp_77 + tmp_78 + tmp_79 - 3.0);
      real_t tmp_81 = tmp_6*tmp_80;
      real_t tmp_82 = tmp_25*tmp_80;
      real_t tmp_83 = tmp_27*tmp_80;
      real_t tmp_84 = 0.5*tmp_81 + 0.5*tmp_82 + 0.5*tmp_83;
      real_t tmp_85 = 2*tmp_84;
      real_t tmp_86 = tmp_31*tmp_80;
      real_t tmp_87 = tmp_33*tmp_80;
      real_t tmp_88 = tmp_35*tmp_80;
      real_t tmp_89 = 0.5*tmp_86 + 0.5*tmp_87 + 0.5*tmp_88;
      real_t tmp_90 = 2*tmp_89;
      real_t tmp_91 = 1.0*tmp_80;
      real_t tmp_92 = tmp_39*tmp_91 + tmp_41*tmp_91 + tmp_42*tmp_91;
      real_t tmp_93 = 2.0*tmp_80;
      real_t tmp_94 = 0.041666666666666657*tmp_57;
      real_t tmp_95 = 0.55278640450004235;
      real_t tmp_96 = 0.55278640450004235;
      real_t tmp_97 = 0.55278640450004235;
      real_t tmp_98 = tmp_19*(tmp_95 + tmp_96 + tmp_97 - 3.0);
      real_t tmp_99 = tmp_6*tmp_98;
      real_t tmp_100 = tmp_25*tmp_98;
      real_t tmp_101 = tmp_27*tmp_98;
      real_t tmp_102 = 0.5*tmp_100 + 0.5*tmp_101 + 0.5*tmp_99;
      real_t tmp_103 = 2*tmp_102;
      real_t tmp_104 = tmp_31*tmp_98;
      real_t tmp_105 = tmp_33*tmp_98;
      real_t tmp_106 = tmp_35*tmp_98;
      real_t tmp_107 = 0.5*tmp_104 + 0.5*tmp_105 + 0.5*tmp_106;
      real_t tmp_108 = 2*tmp_107;
      real_t tmp_109 = 1.0*tmp_98;
      real_t tmp_110 = tmp_109*tmp_39 + tmp_109*tmp_41 + tmp_109*tmp_42;
      real_t tmp_111 = 2.0*tmp_98;
      real_t tmp_112 = 0.041666666666666657*tmp_57;
      real_t tmp_113 = 2.0*tmp_20 - 2.0;
      real_t tmp_114 = tmp_113*tmp_19;
      real_t tmp_115 = tmp_19*tmp_42;
      real_t tmp_116 = 2.0*tmp_59 - 2.0;
      real_t tmp_117 = tmp_116*tmp_19;
      real_t tmp_118 = 2.0*tmp_77 - 2.0;
      real_t tmp_119 = tmp_118*tmp_19;
      real_t tmp_120 = 2.0*tmp_95 - 2.0;
      real_t tmp_121 = tmp_120*tmp_19;
      real_t tmp_122 = 2.0*tmp_21 - 2.0;
      real_t tmp_123 = tmp_122*tmp_19;
      real_t tmp_124 = tmp_19*tmp_41;
      real_t tmp_125 = 2.0*tmp_60 - 2.0;
      real_t tmp_126 = tmp_125*tmp_19;
      real_t tmp_127 = 2.0*tmp_78 - 2.0;
      real_t tmp_128 = tmp_127*tmp_19;
      real_t tmp_129 = 2.0*tmp_96 - 2.0;
      real_t tmp_130 = tmp_129*tmp_19;
      real_t tmp_131 = 2.0*tmp_22 - 2.0;
      real_t tmp_132 = tmp_131*tmp_19;
      real_t tmp_133 = tmp_19*tmp_39;
      real_t tmp_134 = 2.0*tmp_61 - 2.0;
      real_t tmp_135 = tmp_134*tmp_19;
      real_t tmp_136 = 2.0*tmp_79 - 2.0;
      real_t tmp_137 = tmp_136*tmp_19;
      real_t tmp_138 = 2.0*tmp_97 - 2.0;
      real_t tmp_139 = tmp_138*tmp_19;
      real_t tmp_140 = 1.1055728090000847;
      real_t tmp_141 = tmp_133*tmp_140;
      real_t tmp_142 = 4.6832815729997463;
      real_t tmp_143 = tmp_124*tmp_142;
      real_t tmp_144 = tmp_19*tmp_21;
      real_t tmp_145 = tmp_144*tmp_6;
      real_t tmp_146 = tmp_19*tmp_22;
      real_t tmp_147 = tmp_146*tmp_25;
      real_t tmp_148 = tmp_144*tmp_31;
      real_t tmp_149 = tmp_146*tmp_33;
      real_t tmp_150 = 4.6832815729997463;
      real_t tmp_151 = tmp_133*tmp_150;
      real_t tmp_152 = 1.1055728090000847;
      real_t tmp_153 = tmp_124*tmp_152;
      real_t tmp_154 = tmp_19*tmp_60;
      real_t tmp_155 = tmp_154*tmp_6;
      real_t tmp_156 = tmp_19*tmp_61;
      real_t tmp_157 = tmp_156*tmp_25;
      real_t tmp_158 = tmp_154*tmp_31;
      real_t tmp_159 = tmp_156*tmp_33;
      real_t tmp_160 = 1.1055728090000847;
      real_t tmp_161 = tmp_133*tmp_160;
      real_t tmp_162 = 1.1055728090000847;
      real_t tmp_163 = tmp_124*tmp_162;
      real_t tmp_164 = tmp_19*tmp_78;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_19*tmp_79;
      real_t tmp_167 = tmp_166*tmp_25;
      real_t tmp_168 = tmp_164*tmp_31;
      real_t tmp_169 = tmp_166*tmp_33;
      real_t tmp_170 = 1.1055728090000847;
      real_t tmp_171 = tmp_133*tmp_170;
      real_t tmp_172 = 1.1055728090000847;
      real_t tmp_173 = tmp_124*tmp_172;
      real_t tmp_174 = tmp_19*tmp_96;
      real_t tmp_175 = tmp_174*tmp_6;
      real_t tmp_176 = tmp_19*tmp_97;
      real_t tmp_177 = tmp_176*tmp_25;
      real_t tmp_178 = tmp_174*tmp_31;
      real_t tmp_179 = tmp_176*tmp_33;
      real_t tmp_180 = 1.1055728090000847;
      real_t tmp_181 = tmp_133*tmp_180;
      real_t tmp_182 = tmp_115*tmp_142;
      real_t tmp_183 = tmp_19*tmp_20;
      real_t tmp_184 = tmp_183*tmp_6;
      real_t tmp_185 = tmp_146*tmp_27;
      real_t tmp_186 = tmp_183*tmp_31;
      real_t tmp_187 = tmp_146*tmp_35;
      real_t tmp_188 = 1.1055728090000847;
      real_t tmp_189 = tmp_133*tmp_188;
      real_t tmp_190 = tmp_115*tmp_152;
      real_t tmp_191 = tmp_19*tmp_59;
      real_t tmp_192 = tmp_191*tmp_6;
      real_t tmp_193 = tmp_156*tmp_27;
      real_t tmp_194 = tmp_191*tmp_31;
      real_t tmp_195 = tmp_156*tmp_35;
      real_t tmp_196 = 4.6832815729997463;
      real_t tmp_197 = tmp_133*tmp_196;
      real_t tmp_198 = tmp_115*tmp_162;
      real_t tmp_199 = tmp_19*tmp_77;
      real_t tmp_200 = tmp_199*tmp_6;
      real_t tmp_201 = tmp_166*tmp_27;
      real_t tmp_202 = tmp_199*tmp_31;
      real_t tmp_203 = tmp_166*tmp_35;
      real_t tmp_204 = 1.1055728090000847;
      real_t tmp_205 = tmp_133*tmp_204;
      real_t tmp_206 = tmp_115*tmp_172;
      real_t tmp_207 = tmp_19*tmp_95;
      real_t tmp_208 = tmp_207*tmp_6;
      real_t tmp_209 = tmp_176*tmp_27;
      real_t tmp_210 = tmp_207*tmp_31;
      real_t tmp_211 = tmp_176*tmp_35;
      real_t tmp_212 = tmp_124*tmp_180;
      real_t tmp_213 = tmp_115*tmp_140;
      real_t tmp_214 = tmp_183*tmp_25;
      real_t tmp_215 = tmp_144*tmp_27;
      real_t tmp_216 = tmp_183*tmp_33;
      real_t tmp_217 = tmp_144*tmp_35;
      real_t tmp_218 = tmp_124*tmp_188;
      real_t tmp_219 = tmp_115*tmp_150;
      real_t tmp_220 = tmp_191*tmp_25;
      real_t tmp_221 = tmp_154*tmp_27;
      real_t tmp_222 = tmp_191*tmp_33;
      real_t tmp_223 = tmp_154*tmp_35;
      real_t tmp_224 = tmp_124*tmp_196;
      real_t tmp_225 = tmp_115*tmp_160;
      real_t tmp_226 = tmp_199*tmp_25;
      real_t tmp_227 = tmp_164*tmp_27;
      real_t tmp_228 = tmp_199*tmp_33;
      real_t tmp_229 = tmp_164*tmp_35;
      real_t tmp_230 = tmp_124*tmp_204;
      real_t tmp_231 = tmp_115*tmp_170;
      real_t tmp_232 = tmp_207*tmp_25;
      real_t tmp_233 = tmp_174*tmp_27;
      real_t tmp_234 = tmp_207*tmp_33;
      real_t tmp_235 = tmp_174*tmp_35;
      real_t tmp_236 = -tmp_21;
      real_t tmp_237 = 4.0 - tmp_20;
      real_t tmp_238 = tmp_19*(-tmp_142 + tmp_236 + tmp_237);
      real_t tmp_239 = 2.0*tmp_39;
      real_t tmp_240 = -tmp_60;
      real_t tmp_241 = 4.0 - tmp_59;
      real_t tmp_242 = tmp_19*(-tmp_152 + tmp_240 + tmp_241);
      real_t tmp_243 = -tmp_78;
      real_t tmp_244 = 4.0 - tmp_77;
      real_t tmp_245 = tmp_19*(-tmp_162 + tmp_243 + tmp_244);
      real_t tmp_246 = -tmp_96;
      real_t tmp_247 = 4.0 - tmp_95;
      real_t tmp_248 = tmp_19*(-tmp_172 + tmp_246 + tmp_247);
      real_t tmp_249 = -tmp_22;
      real_t tmp_250 = tmp_19*(-tmp_140 + tmp_237 + tmp_249);
      real_t tmp_251 = 2.0*tmp_41;
      real_t tmp_252 = -tmp_61;
      real_t tmp_253 = tmp_19*(-tmp_150 + tmp_241 + tmp_252);
      real_t tmp_254 = -tmp_79;
      real_t tmp_255 = tmp_19*(-tmp_160 + tmp_244 + tmp_254);
      real_t tmp_256 = -tmp_97;
      real_t tmp_257 = tmp_19*(-tmp_170 + tmp_247 + tmp_256);
      real_t tmp_258 = tmp_19*(-tmp_180 + tmp_236 + tmp_249 + 4.0);
      real_t tmp_259 = 2.0*tmp_42;
      real_t tmp_260 = tmp_19*(-tmp_188 + tmp_240 + tmp_252 + 4.0);
      real_t tmp_261 = tmp_19*(-tmp_196 + tmp_243 + tmp_254 + 4.0);
      real_t tmp_262 = tmp_19*(-tmp_204 + tmp_246 + tmp_256 + 4.0);
      real_t a_0_0 = tmp_112*(tmp_103*(tmp_100 + tmp_101 + tmp_99) + tmp_108*(tmp_104 + tmp_105 + tmp_106) + tmp_110*(tmp_111*tmp_39 + tmp_111*tmp_41 + tmp_111*tmp_42)) + tmp_58*(tmp_30*(tmp_24 + tmp_26 + tmp_28) + tmp_38*(tmp_32 + tmp_34 + tmp_36) + tmp_43*(tmp_39*tmp_44 + tmp_41*tmp_44 + tmp_42*tmp_44)) + tmp_76*(tmp_67*(tmp_63 + tmp_64 + tmp_65) + tmp_72*(tmp_68 + tmp_69 + tmp_70) + tmp_74*(tmp_39*tmp_75 + tmp_41*tmp_75 + tmp_42*tmp_75)) + tmp_94*(tmp_85*(tmp_81 + tmp_82 + tmp_83) + tmp_90*(tmp_86 + tmp_87 + tmp_88) + tmp_92*(tmp_39*tmp_93 + tmp_41*tmp_93 + tmp_42*tmp_93));
      real_t a_0_1 = tmp_112*(tmp_102*tmp_121*tmp_27 + tmp_107*tmp_121*tmp_35 + tmp_110*tmp_115*tmp_120) + tmp_58*(tmp_113*tmp_115*tmp_43 + tmp_114*tmp_27*tmp_29 + tmp_114*tmp_35*tmp_37) + tmp_76*(tmp_115*tmp_116*tmp_74 + tmp_117*tmp_27*tmp_66 + tmp_117*tmp_35*tmp_71) + tmp_94*(tmp_115*tmp_118*tmp_92 + tmp_119*tmp_27*tmp_84 + tmp_119*tmp_35*tmp_89);
      real_t a_0_2 = tmp_112*(tmp_102*tmp_130*tmp_25 + tmp_107*tmp_130*tmp_33 + tmp_110*tmp_124*tmp_129) + tmp_58*(tmp_122*tmp_124*tmp_43 + tmp_123*tmp_25*tmp_29 + tmp_123*tmp_33*tmp_37) + tmp_76*(tmp_124*tmp_125*tmp_74 + tmp_126*tmp_25*tmp_66 + tmp_126*tmp_33*tmp_71) + tmp_94*(tmp_124*tmp_127*tmp_92 + tmp_128*tmp_25*tmp_84 + tmp_128*tmp_33*tmp_89);
      real_t a_0_3 = tmp_112*(tmp_102*tmp_139*tmp_6 + tmp_107*tmp_139*tmp_31 + tmp_110*tmp_133*tmp_138) + tmp_58*(tmp_131*tmp_133*tmp_43 + tmp_132*tmp_29*tmp_6 + tmp_132*tmp_31*tmp_37) + tmp_76*(tmp_133*tmp_134*tmp_74 + tmp_135*tmp_31*tmp_71 + tmp_135*tmp_6*tmp_66) + tmp_94*(tmp_133*tmp_136*tmp_92 + tmp_137*tmp_31*tmp_89 + tmp_137*tmp_6*tmp_84);
      real_t a_0_4 = tmp_112*(tmp_103*(tmp_175 + tmp_177) + tmp_108*(tmp_178 + tmp_179) + tmp_110*(tmp_171 + tmp_173)) + tmp_58*(tmp_30*(tmp_145 + tmp_147) + tmp_38*(tmp_148 + tmp_149) + tmp_43*(tmp_141 + tmp_143)) + tmp_76*(tmp_67*(tmp_155 + tmp_157) + tmp_72*(tmp_158 + tmp_159) + tmp_74*(tmp_151 + tmp_153)) + tmp_94*(tmp_85*(tmp_165 + tmp_167) + tmp_90*(tmp_168 + tmp_169) + tmp_92*(tmp_161 + tmp_163));
      real_t a_0_5 = tmp_112*(tmp_103*(tmp_208 + tmp_209) + tmp_108*(tmp_210 + tmp_211) + tmp_110*(tmp_205 + tmp_206)) + tmp_58*(tmp_30*(tmp_184 + tmp_185) + tmp_38*(tmp_186 + tmp_187) + tmp_43*(tmp_181 + tmp_182)) + tmp_76*(tmp_67*(tmp_192 + tmp_193) + tmp_72*(tmp_194 + tmp_195) + tmp_74*(tmp_189 + tmp_190)) + tmp_94*(tmp_85*(tmp_200 + tmp_201) + tmp_90*(tmp_202 + tmp_203) + tmp_92*(tmp_197 + tmp_198));
      real_t a_0_6 = tmp_112*(tmp_103*(tmp_232 + tmp_233) + tmp_108*(tmp_234 + tmp_235) + tmp_110*(tmp_230 + tmp_231)) + tmp_58*(tmp_30*(tmp_214 + tmp_215) + tmp_38*(tmp_216 + tmp_217) + tmp_43*(tmp_212 + tmp_213)) + tmp_76*(tmp_67*(tmp_220 + tmp_221) + tmp_72*(tmp_222 + tmp_223) + tmp_74*(tmp_218 + tmp_219)) + tmp_94*(tmp_85*(tmp_226 + tmp_227) + tmp_90*(tmp_228 + tmp_229) + tmp_92*(tmp_224 + tmp_225));
      real_t a_0_7 = tmp_112*(tmp_103*(-tmp_177 - tmp_209 + tmp_248*tmp_6) + tmp_108*(-tmp_179 - tmp_211 + tmp_248*tmp_31) + tmp_110*(-tmp_173 - tmp_206 + tmp_239*tmp_248)) + tmp_58*(tmp_30*(-tmp_147 - tmp_185 + tmp_238*tmp_6) + tmp_38*(-tmp_149 - tmp_187 + tmp_238*tmp_31) + tmp_43*(-tmp_143 - tmp_182 + tmp_238*tmp_239)) + tmp_76*(tmp_67*(-tmp_157 - tmp_193 + tmp_242*tmp_6) + tmp_72*(-tmp_159 - tmp_195 + tmp_242*tmp_31) + tmp_74*(-tmp_153 - tmp_190 + tmp_239*tmp_242)) + tmp_94*(tmp_85*(-tmp_167 - tmp_201 + tmp_245*tmp_6) + tmp_90*(-tmp_169 - tmp_203 + tmp_245*tmp_31) + tmp_92*(-tmp_163 - tmp_198 + tmp_239*tmp_245));
      real_t a_0_8 = tmp_112*(tmp_103*(-tmp_175 - tmp_233 + tmp_25*tmp_257) + tmp_108*(-tmp_178 - tmp_235 + tmp_257*tmp_33) + tmp_110*(-tmp_171 - tmp_231 + tmp_251*tmp_257)) + tmp_58*(tmp_30*(-tmp_145 - tmp_215 + tmp_25*tmp_250) + tmp_38*(-tmp_148 - tmp_217 + tmp_250*tmp_33) + tmp_43*(-tmp_141 - tmp_213 + tmp_250*tmp_251)) + tmp_76*(tmp_67*(-tmp_155 - tmp_221 + tmp_25*tmp_253) + tmp_72*(-tmp_158 - tmp_223 + tmp_253*tmp_33) + tmp_74*(-tmp_151 - tmp_219 + tmp_251*tmp_253)) + tmp_94*(tmp_85*(-tmp_165 - tmp_227 + tmp_25*tmp_255) + tmp_90*(-tmp_168 - tmp_229 + tmp_255*tmp_33) + tmp_92*(-tmp_161 - tmp_225 + tmp_251*tmp_255));
      real_t a_0_9 = tmp_112*(tmp_103*(-tmp_208 - tmp_232 + tmp_262*tmp_27) + tmp_108*(-tmp_210 - tmp_234 + tmp_262*tmp_35) + tmp_110*(-tmp_205 - tmp_230 + tmp_259*tmp_262)) + tmp_58*(tmp_30*(-tmp_184 - tmp_214 + tmp_258*tmp_27) + tmp_38*(-tmp_186 - tmp_216 + tmp_258*tmp_35) + tmp_43*(-tmp_181 - tmp_212 + tmp_258*tmp_259)) + tmp_76*(tmp_67*(-tmp_192 - tmp_220 + tmp_260*tmp_27) + tmp_72*(-tmp_194 - tmp_222 + tmp_260*tmp_35) + tmp_74*(-tmp_189 - tmp_218 + tmp_259*tmp_260)) + tmp_94*(tmp_85*(-tmp_200 - tmp_226 + tmp_261*tmp_27) + tmp_90*(-tmp_202 - tmp_228 + tmp_261*tmp_35) + tmp_92*(-tmp_197 - tmp_224 + tmp_259*tmp_261));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_1_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_1_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_12 - tmp_18;
      real_t tmp_26 = tmp_16 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_31 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_12 - tmp_18;
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_43 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = tmp_13 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_31 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_16 - tmp_17;
      real_t tmp_25 = tmp_13 - tmp_18;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_43 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = tmp_13 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8;
      real_t tmp_28 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_29 = 0.5*tmp_24;
      real_t tmp_30 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_31 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_32 = tmp_28*tmp_29 + tmp_29*tmp_30 + tmp_29*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 2*tmp_45;
      real_t tmp_47 = 0.041666666666666657*tmp_46;
      real_t tmp_48 = tmp_32*tmp_47;
      real_t tmp_49 = 0.55278640450004235;
      real_t tmp_50 = 2.3416407864998732;
      real_t tmp_51 = 0.55278640450004235;
      real_t tmp_52 = tmp_20*(tmp_49 + tmp_50 + tmp_51 - 3.0);
      real_t tmp_53 = tmp_25*tmp_52 + tmp_26*tmp_52 + tmp_52*tmp_8;
      real_t tmp_54 = 0.5*tmp_52;
      real_t tmp_55 = tmp_28*tmp_54 + tmp_30*tmp_54 + tmp_31*tmp_54;
      real_t tmp_56 = 0.041666666666666657*tmp_46;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_20*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8;
      real_t tmp_63 = 0.5*tmp_61;
      real_t tmp_64 = tmp_28*tmp_63 + tmp_30*tmp_63 + tmp_31*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_46;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = tmp_20*(tmp_67 + tmp_68 + tmp_69 - 3.0);
      real_t tmp_71 = tmp_25*tmp_70 + tmp_26*tmp_70 + tmp_70*tmp_8;
      real_t tmp_72 = 0.5*tmp_70;
      real_t tmp_73 = tmp_28*tmp_72 + tmp_30*tmp_72 + tmp_31*tmp_72;
      real_t tmp_74 = 0.041666666666666657*tmp_46;
      real_t tmp_75 = tmp_73*tmp_74;
      real_t tmp_76 = tmp_20*tmp_26;
      real_t tmp_77 = 2.0*tmp_45;
      real_t tmp_78 = tmp_76*tmp_77;
      real_t tmp_79 = 0.041666666666666657*tmp_21 - 0.041666666666666657;
      real_t tmp_80 = tmp_78*tmp_79;
      real_t tmp_81 = 0.041666666666666657*tmp_55;
      real_t tmp_82 = tmp_49 - 1.0;
      real_t tmp_83 = tmp_78*tmp_82;
      real_t tmp_84 = 0.041666666666666657*tmp_64;
      real_t tmp_85 = tmp_58 - 1.0;
      real_t tmp_86 = tmp_78*tmp_85;
      real_t tmp_87 = 0.041666666666666657*tmp_73;
      real_t tmp_88 = tmp_67 - 1.0;
      real_t tmp_89 = tmp_78*tmp_88;
      real_t tmp_90 = tmp_20*tmp_25;
      real_t tmp_91 = tmp_77*tmp_90;
      real_t tmp_92 = tmp_22 - 1.0;
      real_t tmp_93 = 0.041666666666666657*tmp_92;
      real_t tmp_94 = tmp_91*tmp_93;
      real_t tmp_95 = tmp_50 - 1.0;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_59 - 1.0;
      real_t tmp_98 = tmp_91*tmp_97;
      real_t tmp_99 = tmp_68 - 1.0;
      real_t tmp_100 = tmp_91*tmp_99;
      real_t tmp_101 = tmp_20*tmp_8;
      real_t tmp_102 = tmp_101*tmp_77;
      real_t tmp_103 = tmp_23 - 1.0;
      real_t tmp_104 = 0.041666666666666657*tmp_103;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_51 - 1.0;
      real_t tmp_107 = tmp_102*tmp_106;
      real_t tmp_108 = tmp_60 - 1.0;
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = tmp_69 - 1.0;
      real_t tmp_111 = tmp_102*tmp_110;
      real_t tmp_112 = tmp_101*tmp_22;
      real_t tmp_113 = tmp_23*tmp_90;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = tmp_101*tmp_50;
      real_t tmp_116 = tmp_51*tmp_90;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_101*tmp_59;
      real_t tmp_119 = tmp_60*tmp_90;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = tmp_101*tmp_68;
      real_t tmp_122 = tmp_69*tmp_90;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = tmp_101*tmp_21;
      real_t tmp_125 = tmp_23*tmp_76;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = tmp_101*tmp_49;
      real_t tmp_128 = tmp_51*tmp_76;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = tmp_101*tmp_58;
      real_t tmp_131 = tmp_60*tmp_76;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_101*tmp_67;
      real_t tmp_134 = tmp_69*tmp_76;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = tmp_21*tmp_90;
      real_t tmp_137 = tmp_22*tmp_76;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = tmp_49*tmp_90;
      real_t tmp_140 = tmp_50*tmp_76;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_58*tmp_90;
      real_t tmp_143 = tmp_59*tmp_76;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = tmp_67*tmp_90;
      real_t tmp_146 = tmp_68*tmp_76;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_22;
      real_t tmp_149 = 4.0 - tmp_21;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_101*tmp_150 - tmp_113 - tmp_125;
      real_t tmp_152 = -tmp_50;
      real_t tmp_153 = 4.0 - tmp_49;
      real_t tmp_154 = tmp_152 + tmp_153 - 1.1055728090000847;
      real_t tmp_155 = tmp_101*tmp_154 - tmp_116 - tmp_128;
      real_t tmp_156 = -tmp_59;
      real_t tmp_157 = 4.0 - tmp_58;
      real_t tmp_158 = tmp_156 + tmp_157 - 1.1055728090000847;
      real_t tmp_159 = tmp_101*tmp_158 - tmp_119 - tmp_131;
      real_t tmp_160 = -tmp_68;
      real_t tmp_161 = 4.0 - tmp_67;
      real_t tmp_162 = tmp_160 + tmp_161 - 1.1055728090000847;
      real_t tmp_163 = tmp_101*tmp_162 - tmp_122 - tmp_134;
      real_t tmp_164 = -tmp_23;
      real_t tmp_165 = tmp_149 + tmp_164 - 1.1055728090000847;
      real_t tmp_166 = -tmp_112 - tmp_137 + tmp_165*tmp_90;
      real_t tmp_167 = -tmp_51;
      real_t tmp_168 = tmp_153 + tmp_167 - 4.6832815729997463;
      real_t tmp_169 = -tmp_115 - tmp_140 + tmp_168*tmp_90;
      real_t tmp_170 = -tmp_60;
      real_t tmp_171 = tmp_157 + tmp_170 - 1.1055728090000847;
      real_t tmp_172 = -tmp_118 - tmp_143 + tmp_171*tmp_90;
      real_t tmp_173 = -tmp_69;
      real_t tmp_174 = tmp_161 + tmp_173 - 1.1055728090000847;
      real_t tmp_175 = -tmp_121 - tmp_146 + tmp_174*tmp_90;
      real_t tmp_176 = tmp_148 + tmp_164 + 2.8944271909999153;
      real_t tmp_177 = -tmp_124 - tmp_136 + tmp_176*tmp_76;
      real_t tmp_178 = tmp_152 + tmp_167 + 2.8944271909999153;
      real_t tmp_179 = -tmp_127 - tmp_139 + tmp_178*tmp_76;
      real_t tmp_180 = tmp_156 + tmp_170 - 0.68328157299974634;
      real_t tmp_181 = -tmp_130 - tmp_142 + tmp_180*tmp_76;
      real_t tmp_182 = tmp_160 + tmp_173 + 2.8944271909999153;
      real_t tmp_183 = -tmp_133 - tmp_145 + tmp_182*tmp_76;
      real_t tmp_184 = tmp_31*tmp_45;
      real_t tmp_185 = 1.0*tmp_20;
      real_t tmp_186 = tmp_184*tmp_185;
      real_t tmp_187 = tmp_186*tmp_79;
      real_t tmp_188 = 0.041666666666666657*tmp_53;
      real_t tmp_189 = tmp_186*tmp_82;
      real_t tmp_190 = 0.041666666666666657*tmp_62;
      real_t tmp_191 = tmp_186*tmp_85;
      real_t tmp_192 = 0.041666666666666657*tmp_71;
      real_t tmp_193 = tmp_186*tmp_88;
      real_t tmp_194 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_195 = 16.0*tmp_194;
      real_t tmp_196 = 0.041666666666666657*tmp_195;
      real_t tmp_197 = tmp_184*tmp_26;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 1.0*tmp_194;
      real_t tmp_200 = tmp_184*tmp_199;
      real_t tmp_201 = tmp_200*tmp_25;
      real_t tmp_202 = tmp_79*tmp_92;
      real_t tmp_203 = 0.041666666666666657*tmp_82;
      real_t tmp_204 = tmp_203*tmp_95;
      real_t tmp_205 = 0.041666666666666657*tmp_85;
      real_t tmp_206 = tmp_205*tmp_97;
      real_t tmp_207 = 0.041666666666666657*tmp_88;
      real_t tmp_208 = tmp_207*tmp_99;
      real_t tmp_209 = tmp_200*tmp_8;
      real_t tmp_210 = tmp_103*tmp_79;
      real_t tmp_211 = tmp_106*tmp_203;
      real_t tmp_212 = tmp_108*tmp_205;
      real_t tmp_213 = tmp_110*tmp_207;
      real_t tmp_214 = 0.041666666666666657*tmp_189;
      real_t tmp_215 = 0.041666666666666657*tmp_191;
      real_t tmp_216 = 0.041666666666666657*tmp_193;
      real_t tmp_217 = tmp_30*tmp_45;
      real_t tmp_218 = tmp_185*tmp_217;
      real_t tmp_219 = tmp_218*tmp_93;
      real_t tmp_220 = tmp_218*tmp_95;
      real_t tmp_221 = tmp_218*tmp_97;
      real_t tmp_222 = tmp_218*tmp_99;
      real_t tmp_223 = tmp_199*tmp_217;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = tmp_217*tmp_25;
      real_t tmp_226 = tmp_195*tmp_225;
      real_t tmp_227 = tmp_223*tmp_8;
      real_t tmp_228 = tmp_103*tmp_93;
      real_t tmp_229 = 0.041666666666666657*tmp_106*tmp_95;
      real_t tmp_230 = 0.041666666666666657*tmp_108*tmp_97;
      real_t tmp_231 = 0.041666666666666657*tmp_110*tmp_99;
      real_t tmp_232 = 0.041666666666666657*tmp_220;
      real_t tmp_233 = 0.041666666666666657*tmp_221;
      real_t tmp_234 = 0.041666666666666657*tmp_222;
      real_t tmp_235 = tmp_28*tmp_45;
      real_t tmp_236 = tmp_185*tmp_235;
      real_t tmp_237 = tmp_104*tmp_236;
      real_t tmp_238 = tmp_106*tmp_236;
      real_t tmp_239 = tmp_108*tmp_236;
      real_t tmp_240 = tmp_110*tmp_236;
      real_t tmp_241 = tmp_199*tmp_235;
      real_t tmp_242 = tmp_241*tmp_26;
      real_t tmp_243 = tmp_241*tmp_25;
      real_t tmp_244 = tmp_235*tmp_8;
      real_t tmp_245 = tmp_195*tmp_244;
      real_t tmp_246 = 0.041666666666666657*tmp_238;
      real_t tmp_247 = 0.041666666666666657*tmp_239;
      real_t tmp_248 = 0.041666666666666657*tmp_240;
      real_t tmp_249 = 2.0*tmp_20;
      real_t tmp_250 = tmp_249*tmp_28;
      real_t tmp_251 = 0.13819660112501059*tmp_250;
      real_t tmp_252 = tmp_249*tmp_30;
      real_t tmp_253 = 0.58541019662496829*tmp_252;
      real_t tmp_254 = tmp_251 + tmp_253;
      real_t tmp_255 = tmp_254*tmp_47;
      real_t tmp_256 = 0.58541019662496829*tmp_250;
      real_t tmp_257 = 0.13819660112501059*tmp_252;
      real_t tmp_258 = tmp_256 + tmp_257;
      real_t tmp_259 = tmp_258*tmp_56;
      real_t tmp_260 = 0.13819660112501059*tmp_250;
      real_t tmp_261 = 0.13819660112501059*tmp_252;
      real_t tmp_262 = tmp_260 + tmp_261;
      real_t tmp_263 = tmp_262*tmp_65;
      real_t tmp_264 = 0.13819660112501059*tmp_250;
      real_t tmp_265 = 0.13819660112501059*tmp_252;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = tmp_266*tmp_74;
      real_t tmp_268 = 0.041666666666666657*tmp_258;
      real_t tmp_269 = 0.041666666666666657*tmp_262;
      real_t tmp_270 = 0.041666666666666657*tmp_266;
      real_t tmp_271 = 0.13819660112501059*tmp_250;
      real_t tmp_272 = tmp_249*tmp_31;
      real_t tmp_273 = 0.58541019662496829*tmp_272;
      real_t tmp_274 = tmp_271 + tmp_273;
      real_t tmp_275 = tmp_274*tmp_47;
      real_t tmp_276 = 0.13819660112501059*tmp_250;
      real_t tmp_277 = 0.13819660112501059*tmp_272;
      real_t tmp_278 = tmp_276 + tmp_277;
      real_t tmp_279 = tmp_278*tmp_56;
      real_t tmp_280 = 0.58541019662496829*tmp_250;
      real_t tmp_281 = 0.13819660112501059*tmp_272;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_282*tmp_65;
      real_t tmp_284 = 0.13819660112501059*tmp_250;
      real_t tmp_285 = 0.13819660112501059*tmp_272;
      real_t tmp_286 = tmp_284 + tmp_285;
      real_t tmp_287 = tmp_286*tmp_74;
      real_t tmp_288 = 0.041666666666666657*tmp_278;
      real_t tmp_289 = 0.041666666666666657*tmp_282;
      real_t tmp_290 = 0.041666666666666657*tmp_286;
      real_t tmp_291 = 0.13819660112501059*tmp_252;
      real_t tmp_292 = 0.13819660112501059*tmp_272;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_293*tmp_47;
      real_t tmp_295 = 0.13819660112501059*tmp_252;
      real_t tmp_296 = 0.58541019662496829*tmp_272;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_297*tmp_56;
      real_t tmp_299 = 0.58541019662496829*tmp_252;
      real_t tmp_300 = 0.13819660112501059*tmp_272;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = tmp_301*tmp_65;
      real_t tmp_303 = 0.13819660112501059*tmp_252;
      real_t tmp_304 = 0.13819660112501059*tmp_272;
      real_t tmp_305 = tmp_303 + tmp_304;
      real_t tmp_306 = tmp_305*tmp_74;
      real_t tmp_307 = 0.041666666666666657*tmp_297;
      real_t tmp_308 = 0.041666666666666657*tmp_301;
      real_t tmp_309 = 0.041666666666666657*tmp_305;
      real_t tmp_310 = 0.5*tmp_20;
      real_t tmp_311 = tmp_28*tmp_310;
      real_t tmp_312 = tmp_150*tmp_311 - tmp_253 - tmp_273;
      real_t tmp_313 = tmp_312*tmp_47;
      real_t tmp_314 = tmp_154*tmp_311 - tmp_257 - tmp_277;
      real_t tmp_315 = tmp_314*tmp_56;
      real_t tmp_316 = tmp_158*tmp_311 - tmp_261 - tmp_281;
      real_t tmp_317 = tmp_316*tmp_65;
      real_t tmp_318 = tmp_162*tmp_311 - tmp_265 - tmp_285;
      real_t tmp_319 = tmp_318*tmp_74;
      real_t tmp_320 = 0.041666666666666657*tmp_314;
      real_t tmp_321 = 0.041666666666666657*tmp_316;
      real_t tmp_322 = 0.041666666666666657*tmp_318;
      real_t tmp_323 = tmp_30*tmp_310;
      real_t tmp_324 = tmp_165*tmp_323 - tmp_251 - tmp_292;
      real_t tmp_325 = tmp_324*tmp_47;
      real_t tmp_326 = tmp_168*tmp_323 - tmp_256 - tmp_296;
      real_t tmp_327 = tmp_326*tmp_56;
      real_t tmp_328 = tmp_171*tmp_323 - tmp_260 - tmp_300;
      real_t tmp_329 = tmp_328*tmp_65;
      real_t tmp_330 = tmp_174*tmp_323 - tmp_264 - tmp_304;
      real_t tmp_331 = tmp_330*tmp_74;
      real_t tmp_332 = 0.041666666666666657*tmp_326;
      real_t tmp_333 = 0.041666666666666657*tmp_328;
      real_t tmp_334 = 0.041666666666666657*tmp_330;
      real_t tmp_335 = tmp_31*tmp_310;
      real_t tmp_336 = tmp_176*tmp_335 - tmp_271 - tmp_291;
      real_t tmp_337 = tmp_336*tmp_47;
      real_t tmp_338 = tmp_178*tmp_335 - tmp_276 - tmp_295;
      real_t tmp_339 = tmp_338*tmp_56;
      real_t tmp_340 = tmp_180*tmp_335 - tmp_280 - tmp_299;
      real_t tmp_341 = tmp_340*tmp_65;
      real_t tmp_342 = tmp_182*tmp_335 - tmp_284 - tmp_303;
      real_t tmp_343 = tmp_342*tmp_74;
      real_t tmp_344 = 0.041666666666666657*tmp_338;
      real_t tmp_345 = 0.041666666666666657*tmp_340;
      real_t tmp_346 = 0.041666666666666657*tmp_342;
      real_t a_0_0 = tmp_27*tmp_48 + tmp_53*tmp_57 + tmp_62*tmp_66 + tmp_71*tmp_75;
      real_t a_0_1 = tmp_32*tmp_80 + tmp_81*tmp_83 + tmp_84*tmp_86 + tmp_87*tmp_89;
      real_t a_0_2 = tmp_100*tmp_87 + tmp_32*tmp_94 + tmp_81*tmp_96 + tmp_84*tmp_98;
      real_t a_0_3 = tmp_105*tmp_32 + tmp_107*tmp_81 + tmp_109*tmp_84 + tmp_111*tmp_87;
      real_t a_0_4 = tmp_114*tmp_48 + tmp_117*tmp_57 + tmp_120*tmp_66 + tmp_123*tmp_75;
      real_t a_0_5 = tmp_126*tmp_48 + tmp_129*tmp_57 + tmp_132*tmp_66 + tmp_135*tmp_75;
      real_t a_0_6 = tmp_138*tmp_48 + tmp_141*tmp_57 + tmp_144*tmp_66 + tmp_147*tmp_75;
      real_t a_0_7 = tmp_151*tmp_48 + tmp_155*tmp_57 + tmp_159*tmp_66 + tmp_163*tmp_75;
      real_t a_0_8 = tmp_166*tmp_48 + tmp_169*tmp_57 + tmp_172*tmp_66 + tmp_175*tmp_75;
      real_t a_0_9 = tmp_177*tmp_48 + tmp_179*tmp_57 + tmp_181*tmp_66 + tmp_183*tmp_75;
      real_t a_1_0 = tmp_187*tmp_27 + tmp_188*tmp_189 + tmp_190*tmp_191 + tmp_192*tmp_193;
      real_t a_1_1 = 0.012499999999999983*tmp_196*tmp_197 + 0.0057291666666666593*tmp_198;
      real_t a_1_2 = tmp_201*tmp_202 + tmp_201*tmp_204 + tmp_201*tmp_206 + tmp_201*tmp_208;
      real_t a_1_3 = tmp_209*tmp_210 + tmp_209*tmp_211 + tmp_209*tmp_212 + tmp_209*tmp_213;
      real_t a_1_4 = tmp_114*tmp_187 + tmp_117*tmp_214 + tmp_120*tmp_215 + tmp_123*tmp_216;
      real_t a_1_5 = tmp_126*tmp_187 + tmp_129*tmp_214 + tmp_132*tmp_215 + tmp_135*tmp_216;
      real_t a_1_6 = tmp_138*tmp_187 + tmp_141*tmp_214 + tmp_144*tmp_215 + tmp_147*tmp_216;
      real_t a_1_7 = tmp_151*tmp_187 + tmp_155*tmp_214 + tmp_159*tmp_215 + tmp_163*tmp_216;
      real_t a_1_8 = tmp_166*tmp_187 + tmp_169*tmp_214 + tmp_172*tmp_215 + tmp_175*tmp_216;
      real_t a_1_9 = tmp_177*tmp_187 + tmp_179*tmp_214 + tmp_181*tmp_215 + tmp_183*tmp_216;
      real_t a_2_0 = tmp_188*tmp_220 + tmp_190*tmp_221 + tmp_192*tmp_222 + tmp_219*tmp_27;
      real_t a_2_1 = tmp_202*tmp_224 + tmp_204*tmp_224 + tmp_206*tmp_224 + tmp_208*tmp_224;
      real_t a_2_2 = 0.012499999999999983*tmp_196*tmp_225 + 0.0057291666666666593*tmp_226;
      real_t a_2_3 = tmp_227*tmp_228 + tmp_227*tmp_229 + tmp_227*tmp_230 + tmp_227*tmp_231;
      real_t a_2_4 = tmp_114*tmp_219 + tmp_117*tmp_232 + tmp_120*tmp_233 + tmp_123*tmp_234;
      real_t a_2_5 = tmp_126*tmp_219 + tmp_129*tmp_232 + tmp_132*tmp_233 + tmp_135*tmp_234;
      real_t a_2_6 = tmp_138*tmp_219 + tmp_141*tmp_232 + tmp_144*tmp_233 + tmp_147*tmp_234;
      real_t a_2_7 = tmp_151*tmp_219 + tmp_155*tmp_232 + tmp_159*tmp_233 + tmp_163*tmp_234;
      real_t a_2_8 = tmp_166*tmp_219 + tmp_169*tmp_232 + tmp_172*tmp_233 + tmp_175*tmp_234;
      real_t a_2_9 = tmp_177*tmp_219 + tmp_179*tmp_232 + tmp_181*tmp_233 + tmp_183*tmp_234;
      real_t a_3_0 = tmp_188*tmp_238 + tmp_190*tmp_239 + tmp_192*tmp_240 + tmp_237*tmp_27;
      real_t a_3_1 = tmp_210*tmp_242 + tmp_211*tmp_242 + tmp_212*tmp_242 + tmp_213*tmp_242;
      real_t a_3_2 = tmp_228*tmp_243 + tmp_229*tmp_243 + tmp_230*tmp_243 + tmp_231*tmp_243;
      real_t a_3_3 = 0.11249999999999989*tmp_196*tmp_244 + 0.0015624999999999977*tmp_245;
      real_t a_3_4 = tmp_114*tmp_237 + tmp_117*tmp_246 + tmp_120*tmp_247 + tmp_123*tmp_248;
      real_t a_3_5 = tmp_126*tmp_237 + tmp_129*tmp_246 + tmp_132*tmp_247 + tmp_135*tmp_248;
      real_t a_3_6 = tmp_138*tmp_237 + tmp_141*tmp_246 + tmp_144*tmp_247 + tmp_147*tmp_248;
      real_t a_3_7 = tmp_151*tmp_237 + tmp_155*tmp_246 + tmp_159*tmp_247 + tmp_163*tmp_248;
      real_t a_3_8 = tmp_166*tmp_237 + tmp_169*tmp_246 + tmp_172*tmp_247 + tmp_175*tmp_248;
      real_t a_3_9 = tmp_177*tmp_237 + tmp_179*tmp_246 + tmp_181*tmp_247 + tmp_183*tmp_248;
      real_t a_4_0 = tmp_255*tmp_27 + tmp_259*tmp_53 + tmp_263*tmp_62 + tmp_267*tmp_71;
      real_t a_4_1 = tmp_254*tmp_80 + tmp_268*tmp_83 + tmp_269*tmp_86 + tmp_270*tmp_89;
      real_t a_4_2 = tmp_100*tmp_270 + tmp_254*tmp_94 + tmp_268*tmp_96 + tmp_269*tmp_98;
      real_t a_4_3 = tmp_105*tmp_254 + tmp_107*tmp_268 + tmp_109*tmp_269 + tmp_111*tmp_270;
      real_t a_4_4 = tmp_114*tmp_255 + tmp_117*tmp_259 + tmp_120*tmp_263 + tmp_123*tmp_267;
      real_t a_4_5 = tmp_126*tmp_255 + tmp_129*tmp_259 + tmp_132*tmp_263 + tmp_135*tmp_267;
      real_t a_4_6 = tmp_138*tmp_255 + tmp_141*tmp_259 + tmp_144*tmp_263 + tmp_147*tmp_267;
      real_t a_4_7 = tmp_151*tmp_255 + tmp_155*tmp_259 + tmp_159*tmp_263 + tmp_163*tmp_267;
      real_t a_4_8 = tmp_166*tmp_255 + tmp_169*tmp_259 + tmp_172*tmp_263 + tmp_175*tmp_267;
      real_t a_4_9 = tmp_177*tmp_255 + tmp_179*tmp_259 + tmp_181*tmp_263 + tmp_183*tmp_267;
      real_t a_5_0 = tmp_27*tmp_275 + tmp_279*tmp_53 + tmp_283*tmp_62 + tmp_287*tmp_71;
      real_t a_5_1 = tmp_274*tmp_80 + tmp_288*tmp_83 + tmp_289*tmp_86 + tmp_290*tmp_89;
      real_t a_5_2 = tmp_100*tmp_290 + tmp_274*tmp_94 + tmp_288*tmp_96 + tmp_289*tmp_98;
      real_t a_5_3 = tmp_105*tmp_274 + tmp_107*tmp_288 + tmp_109*tmp_289 + tmp_111*tmp_290;
      real_t a_5_4 = tmp_114*tmp_275 + tmp_117*tmp_279 + tmp_120*tmp_283 + tmp_123*tmp_287;
      real_t a_5_5 = tmp_126*tmp_275 + tmp_129*tmp_279 + tmp_132*tmp_283 + tmp_135*tmp_287;
      real_t a_5_6 = tmp_138*tmp_275 + tmp_141*tmp_279 + tmp_144*tmp_283 + tmp_147*tmp_287;
      real_t a_5_7 = tmp_151*tmp_275 + tmp_155*tmp_279 + tmp_159*tmp_283 + tmp_163*tmp_287;
      real_t a_5_8 = tmp_166*tmp_275 + tmp_169*tmp_279 + tmp_172*tmp_283 + tmp_175*tmp_287;
      real_t a_5_9 = tmp_177*tmp_275 + tmp_179*tmp_279 + tmp_181*tmp_283 + tmp_183*tmp_287;
      real_t a_6_0 = tmp_27*tmp_294 + tmp_298*tmp_53 + tmp_302*tmp_62 + tmp_306*tmp_71;
      real_t a_6_1 = tmp_293*tmp_80 + tmp_307*tmp_83 + tmp_308*tmp_86 + tmp_309*tmp_89;
      real_t a_6_2 = tmp_100*tmp_309 + tmp_293*tmp_94 + tmp_307*tmp_96 + tmp_308*tmp_98;
      real_t a_6_3 = tmp_105*tmp_293 + tmp_107*tmp_307 + tmp_109*tmp_308 + tmp_111*tmp_309;
      real_t a_6_4 = tmp_114*tmp_294 + tmp_117*tmp_298 + tmp_120*tmp_302 + tmp_123*tmp_306;
      real_t a_6_5 = tmp_126*tmp_294 + tmp_129*tmp_298 + tmp_132*tmp_302 + tmp_135*tmp_306;
      real_t a_6_6 = tmp_138*tmp_294 + tmp_141*tmp_298 + tmp_144*tmp_302 + tmp_147*tmp_306;
      real_t a_6_7 = tmp_151*tmp_294 + tmp_155*tmp_298 + tmp_159*tmp_302 + tmp_163*tmp_306;
      real_t a_6_8 = tmp_166*tmp_294 + tmp_169*tmp_298 + tmp_172*tmp_302 + tmp_175*tmp_306;
      real_t a_6_9 = tmp_177*tmp_294 + tmp_179*tmp_298 + tmp_181*tmp_302 + tmp_183*tmp_306;
      real_t a_7_0 = tmp_27*tmp_313 + tmp_315*tmp_53 + tmp_317*tmp_62 + tmp_319*tmp_71;
      real_t a_7_1 = tmp_312*tmp_80 + tmp_320*tmp_83 + tmp_321*tmp_86 + tmp_322*tmp_89;
      real_t a_7_2 = tmp_100*tmp_322 + tmp_312*tmp_94 + tmp_320*tmp_96 + tmp_321*tmp_98;
      real_t a_7_3 = tmp_105*tmp_312 + tmp_107*tmp_320 + tmp_109*tmp_321 + tmp_111*tmp_322;
      real_t a_7_4 = tmp_114*tmp_313 + tmp_117*tmp_315 + tmp_120*tmp_317 + tmp_123*tmp_319;
      real_t a_7_5 = tmp_126*tmp_313 + tmp_129*tmp_315 + tmp_132*tmp_317 + tmp_135*tmp_319;
      real_t a_7_6 = tmp_138*tmp_313 + tmp_141*tmp_315 + tmp_144*tmp_317 + tmp_147*tmp_319;
      real_t a_7_7 = tmp_151*tmp_313 + tmp_155*tmp_315 + tmp_159*tmp_317 + tmp_163*tmp_319;
      real_t a_7_8 = tmp_166*tmp_313 + tmp_169*tmp_315 + tmp_172*tmp_317 + tmp_175*tmp_319;
      real_t a_7_9 = tmp_177*tmp_313 + tmp_179*tmp_315 + tmp_181*tmp_317 + tmp_183*tmp_319;
      real_t a_8_0 = tmp_27*tmp_325 + tmp_327*tmp_53 + tmp_329*tmp_62 + tmp_331*tmp_71;
      real_t a_8_1 = tmp_324*tmp_80 + tmp_332*tmp_83 + tmp_333*tmp_86 + tmp_334*tmp_89;
      real_t a_8_2 = tmp_100*tmp_334 + tmp_324*tmp_94 + tmp_332*tmp_96 + tmp_333*tmp_98;
      real_t a_8_3 = tmp_105*tmp_324 + tmp_107*tmp_332 + tmp_109*tmp_333 + tmp_111*tmp_334;
      real_t a_8_4 = tmp_114*tmp_325 + tmp_117*tmp_327 + tmp_120*tmp_329 + tmp_123*tmp_331;
      real_t a_8_5 = tmp_126*tmp_325 + tmp_129*tmp_327 + tmp_132*tmp_329 + tmp_135*tmp_331;
      real_t a_8_6 = tmp_138*tmp_325 + tmp_141*tmp_327 + tmp_144*tmp_329 + tmp_147*tmp_331;
      real_t a_8_7 = tmp_151*tmp_325 + tmp_155*tmp_327 + tmp_159*tmp_329 + tmp_163*tmp_331;
      real_t a_8_8 = tmp_166*tmp_325 + tmp_169*tmp_327 + tmp_172*tmp_329 + tmp_175*tmp_331;
      real_t a_8_9 = tmp_177*tmp_325 + tmp_179*tmp_327 + tmp_181*tmp_329 + tmp_183*tmp_331;
      real_t a_9_0 = tmp_27*tmp_337 + tmp_339*tmp_53 + tmp_341*tmp_62 + tmp_343*tmp_71;
      real_t a_9_1 = tmp_336*tmp_80 + tmp_344*tmp_83 + tmp_345*tmp_86 + tmp_346*tmp_89;
      real_t a_9_2 = tmp_100*tmp_346 + tmp_336*tmp_94 + tmp_344*tmp_96 + tmp_345*tmp_98;
      real_t a_9_3 = tmp_105*tmp_336 + tmp_107*tmp_344 + tmp_109*tmp_345 + tmp_111*tmp_346;
      real_t a_9_4 = tmp_114*tmp_337 + tmp_117*tmp_339 + tmp_120*tmp_341 + tmp_123*tmp_343;
      real_t a_9_5 = tmp_126*tmp_337 + tmp_129*tmp_339 + tmp_132*tmp_341 + tmp_135*tmp_343;
      real_t a_9_6 = tmp_138*tmp_337 + tmp_141*tmp_339 + tmp_144*tmp_341 + tmp_147*tmp_343;
      real_t a_9_7 = tmp_151*tmp_337 + tmp_155*tmp_339 + tmp_159*tmp_341 + tmp_163*tmp_343;
      real_t a_9_8 = tmp_166*tmp_337 + tmp_169*tmp_339 + tmp_172*tmp_341 + tmp_175*tmp_343;
      real_t a_9_9 = tmp_177*tmp_337 + tmp_179*tmp_339 + tmp_181*tmp_341 + tmp_183*tmp_343;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_16 - tmp_17;
      real_t tmp_25 = tmp_13 - tmp_18;
      real_t tmp_26 = p_affine_0_0*p_affine_1_1;
      real_t tmp_27 = p_affine_0_0*p_affine_1_2;
      real_t tmp_28 = p_affine_2_1*p_affine_3_2;
      real_t tmp_29 = p_affine_0_1*p_affine_1_0;
      real_t tmp_30 = p_affine_0_1*p_affine_1_2;
      real_t tmp_31 = p_affine_2_2*p_affine_3_0;
      real_t tmp_32 = p_affine_0_2*p_affine_1_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_1;
      real_t tmp_34 = p_affine_2_0*p_affine_3_1;
      real_t tmp_35 = p_affine_2_2*p_affine_3_1;
      real_t tmp_36 = p_affine_2_0*p_affine_3_2;
      real_t tmp_37 = p_affine_2_1*p_affine_3_0;
      real_t tmp_38 = std::abs(p_affine_0_0*tmp_28 - p_affine_0_0*tmp_35 + p_affine_0_1*tmp_31 - p_affine_0_1*tmp_36 + p_affine_0_2*tmp_34 - p_affine_0_2*tmp_37 - p_affine_1_0*tmp_28 + p_affine_1_0*tmp_35 - p_affine_1_1*tmp_31 + p_affine_1_1*tmp_36 - p_affine_1_2*tmp_34 + p_affine_1_2*tmp_37 + p_affine_2_0*tmp_30 - p_affine_2_0*tmp_33 - p_affine_2_1*tmp_27 + p_affine_2_1*tmp_32 + p_affine_2_2*tmp_26 - p_affine_2_2*tmp_29 - p_affine_3_0*tmp_30 + p_affine_3_0*tmp_33 + p_affine_3_1*tmp_27 - p_affine_3_1*tmp_32 - p_affine_3_2*tmp_26 + p_affine_3_2*tmp_29);
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_41 = 0.5*tmp_23;
      real_t tmp_42 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_43 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_44 = 0.041666666666666657*tmp_40*tmp_41 + 0.041666666666666657*tmp_41*tmp_42 + 0.041666666666666657*tmp_41*tmp_43;
      real_t tmp_45 = tmp_39*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_19*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.5*tmp_49;
      real_t tmp_51 = 0.041666666666666657*tmp_40*tmp_50 + 0.041666666666666657*tmp_42*tmp_50 + 0.041666666666666657*tmp_43*tmp_50;
      real_t tmp_52 = tmp_39*tmp_51;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = 0.55278640450004235;
      real_t tmp_56 = tmp_19*(tmp_53 + tmp_54 + tmp_55 - 3.0);
      real_t tmp_57 = 0.5*tmp_56;
      real_t tmp_58 = 0.041666666666666657*tmp_40*tmp_57 + 0.041666666666666657*tmp_42*tmp_57 + 0.041666666666666657*tmp_43*tmp_57;
      real_t tmp_59 = tmp_39*tmp_58;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 0.55278640450004235;
      real_t tmp_63 = tmp_19*(tmp_60 + tmp_61 + tmp_62 - 3.0);
      real_t tmp_64 = 0.5*tmp_63;
      real_t tmp_65 = 0.041666666666666657*tmp_40*tmp_64 + 0.041666666666666657*tmp_42*tmp_64 + 0.041666666666666657*tmp_43*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_19*tmp_25;
      real_t tmp_68 = 2.0*tmp_38;
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_19*tmp_24;
      real_t tmp_71 = tmp_68*tmp_70;
      real_t tmp_72 = tmp_19*tmp_8;
      real_t tmp_73 = tmp_68*tmp_72;
      real_t tmp_74 = tmp_21*tmp_72;
      real_t tmp_75 = tmp_22*tmp_70;
      real_t tmp_76 = tmp_47*tmp_72;
      real_t tmp_77 = tmp_48*tmp_70;
      real_t tmp_78 = tmp_54*tmp_72;
      real_t tmp_79 = tmp_55*tmp_70;
      real_t tmp_80 = tmp_61*tmp_72;
      real_t tmp_81 = tmp_62*tmp_70;
      real_t tmp_82 = tmp_20*tmp_72;
      real_t tmp_83 = tmp_22*tmp_67;
      real_t tmp_84 = tmp_46*tmp_72;
      real_t tmp_85 = tmp_48*tmp_67;
      real_t tmp_86 = tmp_53*tmp_72;
      real_t tmp_87 = tmp_55*tmp_67;
      real_t tmp_88 = tmp_60*tmp_72;
      real_t tmp_89 = tmp_62*tmp_67;
      real_t tmp_90 = tmp_20*tmp_70;
      real_t tmp_91 = tmp_21*tmp_67;
      real_t tmp_92 = tmp_46*tmp_70;
      real_t tmp_93 = tmp_47*tmp_67;
      real_t tmp_94 = tmp_53*tmp_70;
      real_t tmp_95 = tmp_54*tmp_67;
      real_t tmp_96 = tmp_60*tmp_70;
      real_t tmp_97 = tmp_61*tmp_67;
      real_t tmp_98 = -tmp_21;
      real_t tmp_99 = 4.0 - tmp_20;
      real_t tmp_100 = -tmp_47;
      real_t tmp_101 = 4.0 - tmp_46;
      real_t tmp_102 = -tmp_54;
      real_t tmp_103 = 4.0 - tmp_53;
      real_t tmp_104 = -tmp_61;
      real_t tmp_105 = 4.0 - tmp_60;
      real_t tmp_106 = -tmp_22;
      real_t tmp_107 = -tmp_48;
      real_t tmp_108 = -tmp_55;
      real_t tmp_109 = -tmp_62;
      real_t a_0_0 = tmp_45*(tmp_23*tmp_24 + tmp_23*tmp_25 + tmp_23*tmp_8) + tmp_52*(tmp_24*tmp_49 + tmp_25*tmp_49 + tmp_49*tmp_8) + tmp_59*(tmp_24*tmp_56 + tmp_25*tmp_56 + tmp_56*tmp_8) + tmp_66*(tmp_24*tmp_63 + tmp_25*tmp_63 + tmp_63*tmp_8);
      real_t a_0_1 = tmp_44*tmp_69*(tmp_20 - 1.0) + tmp_51*tmp_69*(tmp_46 - 1.0) + tmp_58*tmp_69*(tmp_53 - 1.0) + tmp_65*tmp_69*(tmp_60 - 1.0);
      real_t a_0_2 = tmp_44*tmp_71*(tmp_21 - 1.0) + tmp_51*tmp_71*(tmp_47 - 1.0) + tmp_58*tmp_71*(tmp_54 - 1.0) + tmp_65*tmp_71*(tmp_61 - 1.0);
      real_t a_0_3 = tmp_44*tmp_73*(tmp_22 - 1.0) + tmp_51*tmp_73*(tmp_48 - 1.0) + tmp_58*tmp_73*(tmp_55 - 1.0) + tmp_65*tmp_73*(tmp_62 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_74 + tmp_75) + tmp_52*(tmp_76 + tmp_77) + tmp_59*(tmp_78 + tmp_79) + tmp_66*(tmp_80 + tmp_81);
      real_t a_0_5 = tmp_45*(tmp_82 + tmp_83) + tmp_52*(tmp_84 + tmp_85) + tmp_59*(tmp_86 + tmp_87) + tmp_66*(tmp_88 + tmp_89);
      real_t a_0_6 = tmp_45*(tmp_90 + tmp_91) + tmp_52*(tmp_92 + tmp_93) + tmp_59*(tmp_94 + tmp_95) + tmp_66*(tmp_96 + tmp_97);
      real_t a_0_7 = tmp_45*(tmp_72*(tmp_98 + tmp_99 - 4.6832815729997463) - tmp_75 - tmp_83) + tmp_52*(tmp_72*(tmp_100 + tmp_101 - 1.1055728090000847) - tmp_77 - tmp_85) + tmp_59*(tmp_72*(tmp_102 + tmp_103 - 1.1055728090000847) - tmp_79 - tmp_87) + tmp_66*(tmp_72*(tmp_104 + tmp_105 - 1.1055728090000847) - tmp_81 - tmp_89);
      real_t a_0_8 = tmp_45*(tmp_70*(tmp_106 + tmp_99 - 1.1055728090000847) - tmp_74 - tmp_91) + tmp_52*(tmp_70*(tmp_101 + tmp_107 - 4.6832815729997463) - tmp_76 - tmp_93) + tmp_59*(tmp_70*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_78 - tmp_95) + tmp_66*(tmp_70*(tmp_105 + tmp_109 - 1.1055728090000847) - tmp_80 - tmp_97);
      real_t a_0_9 = tmp_45*(tmp_67*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_82 - tmp_90) + tmp_52*(tmp_67*(tmp_100 + tmp_107 + 2.8944271909999153) - tmp_84 - tmp_92) + tmp_59*(tmp_67*(tmp_102 + tmp_108 - 0.68328157299974634) - tmp_86 - tmp_94) + tmp_66*(tmp_67*(tmp_104 + tmp_109 + 2.8944271909999153) - tmp_88 - tmp_96);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_32 = 2*tmp_31;
      real_t tmp_33 = tmp_14*tmp_5 - tmp_3*tmp_9;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_11*tmp_3 - tmp_14*tmp_7;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = -tmp_11*tmp_5 + tmp_7*tmp_9;
      real_t tmp_38 = tmp_24*tmp_37;
      real_t tmp_39 = tmp_34 + tmp_36 + tmp_38;
      real_t tmp_40 = 0.5*tmp_34 + 0.5*tmp_36 + 0.5*tmp_38;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = tmp_10 - tmp_17;
      real_t tmp_43 = 1.0*tmp_24;
      real_t tmp_44 = tmp_15 - tmp_16;
      real_t tmp_45 = tmp_12 - tmp_18;
      real_t tmp_46 = tmp_42*tmp_43 + tmp_43*tmp_44 + tmp_43*tmp_45;
      real_t tmp_47 = 2.0*tmp_24;
      real_t tmp_48 = tmp_42*tmp_47 + tmp_44*tmp_47 + tmp_45*tmp_47;
      real_t tmp_49 = p_affine_0_0*p_affine_1_1;
      real_t tmp_50 = p_affine_0_0*p_affine_1_2;
      real_t tmp_51 = p_affine_2_1*p_affine_3_2;
      real_t tmp_52 = p_affine_0_1*p_affine_1_0;
      real_t tmp_53 = p_affine_0_1*p_affine_1_2;
      real_t tmp_54 = p_affine_2_2*p_affine_3_0;
      real_t tmp_55 = p_affine_0_2*p_affine_1_0;
      real_t tmp_56 = p_affine_0_2*p_affine_1_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_1;
      real_t tmp_58 = p_affine_2_2*p_affine_3_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_2;
      real_t tmp_60 = p_affine_2_1*p_affine_3_0;
      real_t tmp_61 = std::abs(p_affine_0_0*tmp_51 - p_affine_0_0*tmp_58 + p_affine_0_1*tmp_54 - p_affine_0_1*tmp_59 + p_affine_0_2*tmp_57 - p_affine_0_2*tmp_60 - p_affine_1_0*tmp_51 + p_affine_1_0*tmp_58 - p_affine_1_1*tmp_54 + p_affine_1_1*tmp_59 - p_affine_1_2*tmp_57 + p_affine_1_2*tmp_60 + p_affine_2_0*tmp_53 - p_affine_2_0*tmp_56 - p_affine_2_1*tmp_50 + p_affine_2_1*tmp_55 + p_affine_2_2*tmp_49 - p_affine_2_2*tmp_52 - p_affine_3_0*tmp_53 + p_affine_3_0*tmp_56 + p_affine_3_1*tmp_50 - p_affine_3_1*tmp_55 - p_affine_3_2*tmp_49 + p_affine_3_2*tmp_52);
      real_t tmp_62 = 0.041666666666666657*tmp_61;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 2.3416407864998732;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = tmp_20*(tmp_63 + tmp_64 + tmp_65 - 3.0);
      real_t tmp_67 = tmp_6*tmp_66;
      real_t tmp_68 = tmp_26*tmp_66;
      real_t tmp_69 = tmp_28*tmp_66;
      real_t tmp_70 = tmp_67 + tmp_68 + tmp_69;
      real_t tmp_71 = 0.5*tmp_67 + 0.5*tmp_68 + 0.5*tmp_69;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = tmp_33*tmp_66;
      real_t tmp_74 = tmp_35*tmp_66;
      real_t tmp_75 = tmp_37*tmp_66;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_66;
      real_t tmp_80 = tmp_42*tmp_79 + tmp_44*tmp_79 + tmp_45*tmp_79;
      real_t tmp_81 = 2.0*tmp_66;
      real_t tmp_82 = tmp_42*tmp_81 + tmp_44*tmp_81 + tmp_45*tmp_81;
      real_t tmp_83 = 0.041666666666666657*tmp_61;
      real_t tmp_84 = 2.3416407864998732;
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = tmp_20*(tmp_84 + tmp_85 + tmp_86 - 3.0);
      real_t tmp_88 = tmp_6*tmp_87;
      real_t tmp_89 = tmp_26*tmp_87;
      real_t tmp_90 = tmp_28*tmp_87;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90;
      real_t tmp_92 = 0.5*tmp_88 + 0.5*tmp_89 + 0.5*tmp_90;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_33*tmp_87;
      real_t tmp_95 = tmp_35*tmp_87;
      real_t tmp_96 = tmp_37*tmp_87;
      real_t tmp_97 = tmp_94 + tmp_95 + tmp_96;
      real_t tmp_98 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_99 = 2*tmp_98;
      real_t tmp_100 = 1.0*tmp_87;
      real_t tmp_101 = tmp_100*tmp_42 + tmp_100*tmp_44 + tmp_100*tmp_45;
      real_t tmp_102 = 2.0*tmp_87;
      real_t tmp_103 = tmp_102*tmp_42 + tmp_102*tmp_44 + tmp_102*tmp_45;
      real_t tmp_104 = 0.041666666666666657*tmp_61;
      real_t tmp_105 = 0.55278640450004235;
      real_t tmp_106 = 0.55278640450004235;
      real_t tmp_107 = 0.55278640450004235;
      real_t tmp_108 = tmp_20*(tmp_105 + tmp_106 + tmp_107 - 3.0);
      real_t tmp_109 = tmp_108*tmp_6;
      real_t tmp_110 = tmp_108*tmp_26;
      real_t tmp_111 = tmp_108*tmp_28;
      real_t tmp_112 = tmp_109 + tmp_110 + tmp_111;
      real_t tmp_113 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_114 = 2*tmp_113;
      real_t tmp_115 = tmp_108*tmp_33;
      real_t tmp_116 = tmp_108*tmp_35;
      real_t tmp_117 = tmp_108*tmp_37;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = 0.5*tmp_115 + 0.5*tmp_116 + 0.5*tmp_117;
      real_t tmp_120 = 2*tmp_119;
      real_t tmp_121 = 1.0*tmp_108;
      real_t tmp_122 = tmp_121*tmp_42 + tmp_121*tmp_44 + tmp_121*tmp_45;
      real_t tmp_123 = 2.0*tmp_108;
      real_t tmp_124 = tmp_123*tmp_42 + tmp_123*tmp_44 + tmp_123*tmp_45;
      real_t tmp_125 = 0.041666666666666657*tmp_61;
      real_t tmp_126 = tmp_21 - 1.0;
      real_t tmp_127 = tmp_20*tmp_45;
      real_t tmp_128 = 2.0*tmp_127;
      real_t tmp_129 = tmp_126*tmp_128;
      real_t tmp_130 = 2.0*tmp_20;
      real_t tmp_131 = tmp_126*tmp_130;
      real_t tmp_132 = tmp_131*tmp_28;
      real_t tmp_133 = tmp_131*tmp_37;
      real_t tmp_134 = tmp_63 - 1.0;
      real_t tmp_135 = tmp_128*tmp_134;
      real_t tmp_136 = tmp_130*tmp_134;
      real_t tmp_137 = tmp_136*tmp_28;
      real_t tmp_138 = tmp_136*tmp_37;
      real_t tmp_139 = tmp_84 - 1.0;
      real_t tmp_140 = tmp_128*tmp_139;
      real_t tmp_141 = tmp_130*tmp_139;
      real_t tmp_142 = tmp_141*tmp_28;
      real_t tmp_143 = tmp_141*tmp_37;
      real_t tmp_144 = tmp_105 - 1.0;
      real_t tmp_145 = tmp_128*tmp_144;
      real_t tmp_146 = tmp_130*tmp_144;
      real_t tmp_147 = tmp_146*tmp_28;
      real_t tmp_148 = tmp_146*tmp_37;
      real_t tmp_149 = tmp_22 - 1.0;
      real_t tmp_150 = tmp_20*tmp_44;
      real_t tmp_151 = 2.0*tmp_150;
      real_t tmp_152 = tmp_149*tmp_151;
      real_t tmp_153 = tmp_130*tmp_149;
      real_t tmp_154 = tmp_153*tmp_26;
      real_t tmp_155 = tmp_153*tmp_35;
      real_t tmp_156 = tmp_64 - 1.0;
      real_t tmp_157 = tmp_151*tmp_156;
      real_t tmp_158 = tmp_130*tmp_156;
      real_t tmp_159 = tmp_158*tmp_26;
      real_t tmp_160 = tmp_158*tmp_35;
      real_t tmp_161 = tmp_85 - 1.0;
      real_t tmp_162 = tmp_151*tmp_161;
      real_t tmp_163 = tmp_130*tmp_161;
      real_t tmp_164 = tmp_163*tmp_26;
      real_t tmp_165 = tmp_163*tmp_35;
      real_t tmp_166 = tmp_106 - 1.0;
      real_t tmp_167 = tmp_151*tmp_166;
      real_t tmp_168 = tmp_130*tmp_166;
      real_t tmp_169 = tmp_168*tmp_26;
      real_t tmp_170 = tmp_168*tmp_35;
      real_t tmp_171 = tmp_23 - 1.0;
      real_t tmp_172 = tmp_20*tmp_42;
      real_t tmp_173 = 2.0*tmp_172;
      real_t tmp_174 = tmp_171*tmp_173;
      real_t tmp_175 = tmp_130*tmp_171;
      real_t tmp_176 = tmp_175*tmp_6;
      real_t tmp_177 = tmp_175*tmp_33;
      real_t tmp_178 = tmp_65 - 1.0;
      real_t tmp_179 = tmp_173*tmp_178;
      real_t tmp_180 = tmp_130*tmp_178;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_180*tmp_33;
      real_t tmp_183 = tmp_86 - 1.0;
      real_t tmp_184 = tmp_173*tmp_183;
      real_t tmp_185 = tmp_130*tmp_183;
      real_t tmp_186 = tmp_185*tmp_6;
      real_t tmp_187 = tmp_185*tmp_33;
      real_t tmp_188 = tmp_107 - 1.0;
      real_t tmp_189 = tmp_173*tmp_188;
      real_t tmp_190 = tmp_130*tmp_188;
      real_t tmp_191 = tmp_190*tmp_6;
      real_t tmp_192 = tmp_190*tmp_33;
      real_t tmp_193 = 1.1055728090000847;
      real_t tmp_194 = tmp_172*tmp_193;
      real_t tmp_195 = 4.6832815729997463;
      real_t tmp_196 = tmp_150*tmp_195;
      real_t tmp_197 = tmp_194 + tmp_196;
      real_t tmp_198 = tmp_20*tmp_22;
      real_t tmp_199 = tmp_198*tmp_6;
      real_t tmp_200 = tmp_20*tmp_23;
      real_t tmp_201 = tmp_200*tmp_26;
      real_t tmp_202 = tmp_199 + tmp_201;
      real_t tmp_203 = tmp_198*tmp_33;
      real_t tmp_204 = tmp_200*tmp_35;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = 4.6832815729997463;
      real_t tmp_207 = tmp_172*tmp_206;
      real_t tmp_208 = 1.1055728090000847;
      real_t tmp_209 = tmp_150*tmp_208;
      real_t tmp_210 = tmp_207 + tmp_209;
      real_t tmp_211 = tmp_20*tmp_64;
      real_t tmp_212 = tmp_211*tmp_6;
      real_t tmp_213 = tmp_20*tmp_65;
      real_t tmp_214 = tmp_213*tmp_26;
      real_t tmp_215 = tmp_212 + tmp_214;
      real_t tmp_216 = tmp_211*tmp_33;
      real_t tmp_217 = tmp_213*tmp_35;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_172*tmp_219;
      real_t tmp_221 = 1.1055728090000847;
      real_t tmp_222 = tmp_150*tmp_221;
      real_t tmp_223 = tmp_220 + tmp_222;
      real_t tmp_224 = tmp_20*tmp_85;
      real_t tmp_225 = tmp_224*tmp_6;
      real_t tmp_226 = tmp_20*tmp_86;
      real_t tmp_227 = tmp_226*tmp_26;
      real_t tmp_228 = tmp_225 + tmp_227;
      real_t tmp_229 = tmp_224*tmp_33;
      real_t tmp_230 = tmp_226*tmp_35;
      real_t tmp_231 = tmp_229 + tmp_230;
      real_t tmp_232 = 1.1055728090000847;
      real_t tmp_233 = tmp_172*tmp_232;
      real_t tmp_234 = 1.1055728090000847;
      real_t tmp_235 = tmp_150*tmp_234;
      real_t tmp_236 = tmp_233 + tmp_235;
      real_t tmp_237 = tmp_106*tmp_20;
      real_t tmp_238 = tmp_237*tmp_6;
      real_t tmp_239 = tmp_107*tmp_20;
      real_t tmp_240 = tmp_239*tmp_26;
      real_t tmp_241 = tmp_238 + tmp_240;
      real_t tmp_242 = tmp_237*tmp_33;
      real_t tmp_243 = tmp_239*tmp_35;
      real_t tmp_244 = tmp_242 + tmp_243;
      real_t tmp_245 = 1.1055728090000847;
      real_t tmp_246 = tmp_172*tmp_245;
      real_t tmp_247 = tmp_127*tmp_195;
      real_t tmp_248 = tmp_246 + tmp_247;
      real_t tmp_249 = tmp_20*tmp_21;
      real_t tmp_250 = tmp_249*tmp_6;
      real_t tmp_251 = tmp_200*tmp_28;
      real_t tmp_252 = tmp_250 + tmp_251;
      real_t tmp_253 = tmp_249*tmp_33;
      real_t tmp_254 = tmp_200*tmp_37;
      real_t tmp_255 = tmp_253 + tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_172*tmp_256;
      real_t tmp_258 = tmp_127*tmp_208;
      real_t tmp_259 = tmp_257 + tmp_258;
      real_t tmp_260 = tmp_20*tmp_63;
      real_t tmp_261 = tmp_260*tmp_6;
      real_t tmp_262 = tmp_213*tmp_28;
      real_t tmp_263 = tmp_261 + tmp_262;
      real_t tmp_264 = tmp_260*tmp_33;
      real_t tmp_265 = tmp_213*tmp_37;
      real_t tmp_266 = tmp_264 + tmp_265;
      real_t tmp_267 = 4.6832815729997463;
      real_t tmp_268 = tmp_172*tmp_267;
      real_t tmp_269 = tmp_127*tmp_221;
      real_t tmp_270 = tmp_268 + tmp_269;
      real_t tmp_271 = tmp_20*tmp_84;
      real_t tmp_272 = tmp_271*tmp_6;
      real_t tmp_273 = tmp_226*tmp_28;
      real_t tmp_274 = tmp_272 + tmp_273;
      real_t tmp_275 = tmp_271*tmp_33;
      real_t tmp_276 = tmp_226*tmp_37;
      real_t tmp_277 = tmp_275 + tmp_276;
      real_t tmp_278 = 1.1055728090000847;
      real_t tmp_279 = tmp_172*tmp_278;
      real_t tmp_280 = tmp_127*tmp_234;
      real_t tmp_281 = tmp_279 + tmp_280;
      real_t tmp_282 = tmp_105*tmp_20;
      real_t tmp_283 = tmp_282*tmp_6;
      real_t tmp_284 = tmp_239*tmp_28;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_282*tmp_33;
      real_t tmp_287 = tmp_239*tmp_37;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = tmp_150*tmp_245;
      real_t tmp_290 = tmp_127*tmp_193;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_249*tmp_26;
      real_t tmp_293 = tmp_198*tmp_28;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_249*tmp_35;
      real_t tmp_296 = tmp_198*tmp_37;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_150*tmp_256;
      real_t tmp_299 = tmp_127*tmp_206;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_26*tmp_260;
      real_t tmp_302 = tmp_211*tmp_28;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = tmp_260*tmp_35;
      real_t tmp_305 = tmp_211*tmp_37;
      real_t tmp_306 = tmp_304 + tmp_305;
      real_t tmp_307 = tmp_150*tmp_267;
      real_t tmp_308 = tmp_127*tmp_219;
      real_t tmp_309 = tmp_307 + tmp_308;
      real_t tmp_310 = tmp_26*tmp_271;
      real_t tmp_311 = tmp_224*tmp_28;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_271*tmp_35;
      real_t tmp_314 = tmp_224*tmp_37;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_150*tmp_278;
      real_t tmp_317 = tmp_127*tmp_232;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_26*tmp_282;
      real_t tmp_320 = tmp_237*tmp_28;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = tmp_282*tmp_35;
      real_t tmp_323 = tmp_237*tmp_37;
      real_t tmp_324 = tmp_322 + tmp_323;
      real_t tmp_325 = -tmp_22;
      real_t tmp_326 = 4.0 - tmp_21;
      real_t tmp_327 = tmp_20*(-tmp_195 + tmp_325 + tmp_326);
      real_t tmp_328 = 2.0*tmp_42;
      real_t tmp_329 = -tmp_196 - tmp_247 + tmp_327*tmp_328;
      real_t tmp_330 = tmp_327*tmp_6;
      real_t tmp_331 = -tmp_201 - tmp_251 + tmp_330;
      real_t tmp_332 = tmp_327*tmp_33;
      real_t tmp_333 = -tmp_204 - tmp_254 + tmp_332;
      real_t tmp_334 = -tmp_64;
      real_t tmp_335 = 4.0 - tmp_63;
      real_t tmp_336 = tmp_20*(-tmp_208 + tmp_334 + tmp_335);
      real_t tmp_337 = -tmp_209 - tmp_258 + tmp_328*tmp_336;
      real_t tmp_338 = tmp_336*tmp_6;
      real_t tmp_339 = -tmp_214 - tmp_262 + tmp_338;
      real_t tmp_340 = tmp_33*tmp_336;
      real_t tmp_341 = -tmp_217 - tmp_265 + tmp_340;
      real_t tmp_342 = -tmp_85;
      real_t tmp_343 = 4.0 - tmp_84;
      real_t tmp_344 = tmp_20*(-tmp_221 + tmp_342 + tmp_343);
      real_t tmp_345 = -tmp_222 - tmp_269 + tmp_328*tmp_344;
      real_t tmp_346 = tmp_344*tmp_6;
      real_t tmp_347 = -tmp_227 - tmp_273 + tmp_346;
      real_t tmp_348 = tmp_33*tmp_344;
      real_t tmp_349 = -tmp_230 - tmp_276 + tmp_348;
      real_t tmp_350 = -tmp_106;
      real_t tmp_351 = 4.0 - tmp_105;
      real_t tmp_352 = tmp_20*(-tmp_234 + tmp_350 + tmp_351);
      real_t tmp_353 = -tmp_235 - tmp_280 + tmp_328*tmp_352;
      real_t tmp_354 = tmp_352*tmp_6;
      real_t tmp_355 = -tmp_240 - tmp_284 + tmp_354;
      real_t tmp_356 = tmp_33*tmp_352;
      real_t tmp_357 = -tmp_243 - tmp_287 + tmp_356;
      real_t tmp_358 = -tmp_23;
      real_t tmp_359 = tmp_20*(-tmp_193 + tmp_326 + tmp_358);
      real_t tmp_360 = 2.0*tmp_44;
      real_t tmp_361 = -tmp_194 - tmp_290 + tmp_359*tmp_360;
      real_t tmp_362 = tmp_26*tmp_359;
      real_t tmp_363 = -tmp_199 - tmp_293 + tmp_362;
      real_t tmp_364 = tmp_35*tmp_359;
      real_t tmp_365 = -tmp_203 - tmp_296 + tmp_364;
      real_t tmp_366 = -tmp_65;
      real_t tmp_367 = tmp_20*(-tmp_206 + tmp_335 + tmp_366);
      real_t tmp_368 = -tmp_207 - tmp_299 + tmp_360*tmp_367;
      real_t tmp_369 = tmp_26*tmp_367;
      real_t tmp_370 = -tmp_212 - tmp_302 + tmp_369;
      real_t tmp_371 = tmp_35*tmp_367;
      real_t tmp_372 = -tmp_216 - tmp_305 + tmp_371;
      real_t tmp_373 = -tmp_86;
      real_t tmp_374 = tmp_20*(-tmp_219 + tmp_343 + tmp_373);
      real_t tmp_375 = -tmp_220 - tmp_308 + tmp_360*tmp_374;
      real_t tmp_376 = tmp_26*tmp_374;
      real_t tmp_377 = -tmp_225 - tmp_311 + tmp_376;
      real_t tmp_378 = tmp_35*tmp_374;
      real_t tmp_379 = -tmp_229 - tmp_314 + tmp_378;
      real_t tmp_380 = -tmp_107;
      real_t tmp_381 = tmp_20*(-tmp_232 + tmp_351 + tmp_380);
      real_t tmp_382 = -tmp_233 - tmp_317 + tmp_360*tmp_381;
      real_t tmp_383 = tmp_26*tmp_381;
      real_t tmp_384 = -tmp_238 - tmp_320 + tmp_383;
      real_t tmp_385 = tmp_35*tmp_381;
      real_t tmp_386 = -tmp_242 - tmp_323 + tmp_385;
      real_t tmp_387 = tmp_20*(-tmp_245 + tmp_325 + tmp_358 + 4.0);
      real_t tmp_388 = 2.0*tmp_45;
      real_t tmp_389 = -tmp_246 - tmp_289 + tmp_387*tmp_388;
      real_t tmp_390 = tmp_28*tmp_387;
      real_t tmp_391 = -tmp_250 - tmp_292 + tmp_390;
      real_t tmp_392 = tmp_37*tmp_387;
      real_t tmp_393 = -tmp_253 - tmp_295 + tmp_392;
      real_t tmp_394 = tmp_20*(-tmp_256 + tmp_334 + tmp_366 + 4.0);
      real_t tmp_395 = -tmp_257 - tmp_298 + tmp_388*tmp_394;
      real_t tmp_396 = tmp_28*tmp_394;
      real_t tmp_397 = -tmp_261 - tmp_301 + tmp_396;
      real_t tmp_398 = tmp_37*tmp_394;
      real_t tmp_399 = -tmp_264 - tmp_304 + tmp_398;
      real_t tmp_400 = tmp_20*(-tmp_267 + tmp_342 + tmp_373 + 4.0);
      real_t tmp_401 = -tmp_268 - tmp_307 + tmp_388*tmp_400;
      real_t tmp_402 = tmp_28*tmp_400;
      real_t tmp_403 = -tmp_272 - tmp_310 + tmp_402;
      real_t tmp_404 = tmp_37*tmp_400;
      real_t tmp_405 = -tmp_275 - tmp_313 + tmp_404;
      real_t tmp_406 = tmp_20*(-tmp_278 + tmp_350 + tmp_380 + 4.0);
      real_t tmp_407 = -tmp_279 - tmp_316 + tmp_388*tmp_406;
      real_t tmp_408 = tmp_28*tmp_406;
      real_t tmp_409 = -tmp_283 - tmp_319 + tmp_408;
      real_t tmp_410 = tmp_37*tmp_406;
      real_t tmp_411 = -tmp_286 - tmp_322 + tmp_410;
      real_t tmp_412 = 1.0*tmp_126;
      real_t tmp_413 = tmp_20*tmp_412;
      real_t tmp_414 = tmp_28*tmp_413;
      real_t tmp_415 = tmp_37*tmp_413;
      real_t tmp_416 = tmp_127*tmp_412;
      real_t tmp_417 = 1.0*tmp_134;
      real_t tmp_418 = tmp_20*tmp_417;
      real_t tmp_419 = tmp_28*tmp_418;
      real_t tmp_420 = tmp_37*tmp_418;
      real_t tmp_421 = tmp_127*tmp_417;
      real_t tmp_422 = 1.0*tmp_139;
      real_t tmp_423 = tmp_20*tmp_422;
      real_t tmp_424 = tmp_28*tmp_423;
      real_t tmp_425 = tmp_37*tmp_423;
      real_t tmp_426 = tmp_127*tmp_422;
      real_t tmp_427 = 1.0*tmp_144;
      real_t tmp_428 = tmp_20*tmp_427;
      real_t tmp_429 = tmp_28*tmp_428;
      real_t tmp_430 = tmp_37*tmp_428;
      real_t tmp_431 = tmp_127*tmp_427;
      real_t tmp_432 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_433 = 0.012499999999999983*tmp_432;
      real_t tmp_434 = 32.0*(tmp_45*tmp_45);
      real_t tmp_435 = (tmp_28*tmp_28);
      real_t tmp_436 = 16.0*tmp_433;
      real_t tmp_437 = (tmp_37*tmp_37);
      real_t tmp_438 = 0.012499999999999983*tmp_432;
      real_t tmp_439 = 16.0*tmp_438;
      real_t tmp_440 = 0.11249999999999989*tmp_432;
      real_t tmp_441 = 16.0*tmp_440;
      real_t tmp_442 = 0.012499999999999983*tmp_432;
      real_t tmp_443 = 16.0*tmp_442;
      real_t tmp_444 = tmp_149*tmp_432;
      real_t tmp_445 = tmp_360*tmp_45;
      real_t tmp_446 = tmp_412*tmp_444;
      real_t tmp_447 = tmp_26*tmp_28;
      real_t tmp_448 = tmp_35*tmp_37;
      real_t tmp_449 = tmp_156*tmp_432;
      real_t tmp_450 = tmp_417*tmp_449;
      real_t tmp_451 = tmp_161*tmp_432;
      real_t tmp_452 = tmp_422*tmp_451;
      real_t tmp_453 = tmp_166*tmp_432;
      real_t tmp_454 = tmp_427*tmp_453;
      real_t tmp_455 = tmp_104*(tmp_139*tmp_445*tmp_451 + tmp_447*tmp_452 + tmp_448*tmp_452) + tmp_125*(tmp_144*tmp_445*tmp_453 + tmp_447*tmp_454 + tmp_448*tmp_454) + tmp_62*(tmp_126*tmp_444*tmp_445 + tmp_446*tmp_447 + tmp_446*tmp_448) + tmp_83*(tmp_134*tmp_445*tmp_449 + tmp_447*tmp_450 + tmp_448*tmp_450);
      real_t tmp_456 = tmp_171*tmp_432;
      real_t tmp_457 = tmp_328*tmp_45;
      real_t tmp_458 = tmp_412*tmp_456;
      real_t tmp_459 = tmp_28*tmp_6;
      real_t tmp_460 = tmp_33*tmp_37;
      real_t tmp_461 = tmp_178*tmp_432;
      real_t tmp_462 = tmp_417*tmp_461;
      real_t tmp_463 = tmp_183*tmp_432;
      real_t tmp_464 = tmp_422*tmp_463;
      real_t tmp_465 = tmp_188*tmp_432;
      real_t tmp_466 = tmp_427*tmp_465;
      real_t tmp_467 = tmp_104*(tmp_139*tmp_457*tmp_463 + tmp_459*tmp_464 + tmp_460*tmp_464) + tmp_125*(tmp_144*tmp_457*tmp_465 + tmp_459*tmp_466 + tmp_460*tmp_466) + tmp_62*(tmp_126*tmp_456*tmp_457 + tmp_458*tmp_459 + tmp_458*tmp_460) + tmp_83*(tmp_134*tmp_457*tmp_461 + tmp_459*tmp_462 + tmp_460*tmp_462);
      real_t tmp_468 = 1.0*tmp_149;
      real_t tmp_469 = tmp_20*tmp_468;
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = tmp_35*tmp_469;
      real_t tmp_472 = tmp_150*tmp_468;
      real_t tmp_473 = 1.0*tmp_156;
      real_t tmp_474 = tmp_20*tmp_473;
      real_t tmp_475 = tmp_26*tmp_474;
      real_t tmp_476 = tmp_35*tmp_474;
      real_t tmp_477 = tmp_150*tmp_473;
      real_t tmp_478 = 1.0*tmp_161;
      real_t tmp_479 = tmp_20*tmp_478;
      real_t tmp_480 = tmp_26*tmp_479;
      real_t tmp_481 = tmp_35*tmp_479;
      real_t tmp_482 = tmp_150*tmp_478;
      real_t tmp_483 = 1.0*tmp_166;
      real_t tmp_484 = tmp_20*tmp_483;
      real_t tmp_485 = tmp_26*tmp_484;
      real_t tmp_486 = tmp_35*tmp_484;
      real_t tmp_487 = tmp_150*tmp_483;
      real_t tmp_488 = 0.012499999999999983*tmp_432;
      real_t tmp_489 = 32.0*(tmp_44*tmp_44);
      real_t tmp_490 = (tmp_26*tmp_26);
      real_t tmp_491 = 16.0*tmp_488;
      real_t tmp_492 = (tmp_35*tmp_35);
      real_t tmp_493 = 0.11249999999999989*tmp_432;
      real_t tmp_494 = 16.0*tmp_493;
      real_t tmp_495 = 0.012499999999999983*tmp_432;
      real_t tmp_496 = 16.0*tmp_495;
      real_t tmp_497 = 0.012499999999999983*tmp_432;
      real_t tmp_498 = 16.0*tmp_497;
      real_t tmp_499 = tmp_328*tmp_44;
      real_t tmp_500 = tmp_456*tmp_468;
      real_t tmp_501 = tmp_26*tmp_6;
      real_t tmp_502 = tmp_33*tmp_35;
      real_t tmp_503 = tmp_461*tmp_473;
      real_t tmp_504 = tmp_463*tmp_478;
      real_t tmp_505 = tmp_465*tmp_483;
      real_t tmp_506 = tmp_104*(tmp_183*tmp_451*tmp_499 + tmp_501*tmp_504 + tmp_502*tmp_504) + tmp_125*(tmp_188*tmp_453*tmp_499 + tmp_501*tmp_505 + tmp_502*tmp_505) + tmp_62*(tmp_171*tmp_444*tmp_499 + tmp_500*tmp_501 + tmp_500*tmp_502) + tmp_83*(tmp_178*tmp_449*tmp_499 + tmp_501*tmp_503 + tmp_502*tmp_503);
      real_t tmp_507 = 1.0*tmp_171;
      real_t tmp_508 = tmp_20*tmp_507;
      real_t tmp_509 = tmp_508*tmp_6;
      real_t tmp_510 = tmp_33*tmp_508;
      real_t tmp_511 = tmp_172*tmp_507;
      real_t tmp_512 = 1.0*tmp_178;
      real_t tmp_513 = tmp_20*tmp_512;
      real_t tmp_514 = tmp_513*tmp_6;
      real_t tmp_515 = tmp_33*tmp_513;
      real_t tmp_516 = tmp_172*tmp_512;
      real_t tmp_517 = 1.0*tmp_183;
      real_t tmp_518 = tmp_20*tmp_517;
      real_t tmp_519 = tmp_518*tmp_6;
      real_t tmp_520 = tmp_33*tmp_518;
      real_t tmp_521 = tmp_172*tmp_517;
      real_t tmp_522 = 1.0*tmp_188;
      real_t tmp_523 = tmp_20*tmp_522;
      real_t tmp_524 = tmp_523*tmp_6;
      real_t tmp_525 = tmp_33*tmp_523;
      real_t tmp_526 = tmp_172*tmp_522;
      real_t tmp_527 = 0.11249999999999989*tmp_432;
      real_t tmp_528 = 32.0*(tmp_42*tmp_42);
      real_t tmp_529 = (tmp_6*tmp_6);
      real_t tmp_530 = 16.0*tmp_527;
      real_t tmp_531 = (tmp_33*tmp_33);
      real_t tmp_532 = 0.012499999999999983*tmp_432;
      real_t tmp_533 = 16.0*tmp_532;
      real_t tmp_534 = 0.012499999999999983*tmp_432;
      real_t tmp_535 = 16.0*tmp_534;
      real_t tmp_536 = 0.012499999999999983*tmp_432;
      real_t tmp_537 = 16.0*tmp_536;
      real_t tmp_538 = 0.13819660112501059*tmp_130;
      real_t tmp_539 = tmp_538*tmp_6;
      real_t tmp_540 = 0.58541019662496829*tmp_130;
      real_t tmp_541 = tmp_26*tmp_540;
      real_t tmp_542 = tmp_539 + tmp_541;
      real_t tmp_543 = 2*tmp_542;
      real_t tmp_544 = tmp_33*tmp_538;
      real_t tmp_545 = tmp_35*tmp_540;
      real_t tmp_546 = tmp_544 + tmp_545;
      real_t tmp_547 = 2*tmp_546;
      real_t tmp_548 = tmp_172*tmp_22;
      real_t tmp_549 = tmp_150*tmp_23;
      real_t tmp_550 = tmp_548 + tmp_549;
      real_t tmp_551 = 0.58541019662496829*tmp_130;
      real_t tmp_552 = tmp_551*tmp_6;
      real_t tmp_553 = 0.13819660112501059*tmp_130;
      real_t tmp_554 = tmp_26*tmp_553;
      real_t tmp_555 = tmp_552 + tmp_554;
      real_t tmp_556 = 2*tmp_555;
      real_t tmp_557 = tmp_33*tmp_551;
      real_t tmp_558 = tmp_35*tmp_553;
      real_t tmp_559 = tmp_557 + tmp_558;
      real_t tmp_560 = 2*tmp_559;
      real_t tmp_561 = tmp_172*tmp_64;
      real_t tmp_562 = tmp_150*tmp_65;
      real_t tmp_563 = tmp_561 + tmp_562;
      real_t tmp_564 = 0.13819660112501059*tmp_130;
      real_t tmp_565 = tmp_564*tmp_6;
      real_t tmp_566 = 0.13819660112501059*tmp_130;
      real_t tmp_567 = tmp_26*tmp_566;
      real_t tmp_568 = tmp_565 + tmp_567;
      real_t tmp_569 = 2*tmp_568;
      real_t tmp_570 = tmp_33*tmp_564;
      real_t tmp_571 = tmp_35*tmp_566;
      real_t tmp_572 = tmp_570 + tmp_571;
      real_t tmp_573 = 2*tmp_572;
      real_t tmp_574 = tmp_172*tmp_85;
      real_t tmp_575 = tmp_150*tmp_86;
      real_t tmp_576 = tmp_574 + tmp_575;
      real_t tmp_577 = 0.13819660112501059*tmp_130;
      real_t tmp_578 = tmp_577*tmp_6;
      real_t tmp_579 = 0.13819660112501059*tmp_130;
      real_t tmp_580 = tmp_26*tmp_579;
      real_t tmp_581 = tmp_578 + tmp_580;
      real_t tmp_582 = 2*tmp_581;
      real_t tmp_583 = tmp_33*tmp_577;
      real_t tmp_584 = tmp_35*tmp_579;
      real_t tmp_585 = tmp_583 + tmp_584;
      real_t tmp_586 = 2*tmp_585;
      real_t tmp_587 = tmp_106*tmp_172;
      real_t tmp_588 = tmp_107*tmp_150;
      real_t tmp_589 = tmp_587 + tmp_588;
      real_t tmp_590 = 0.13819660112501059*tmp_130;
      real_t tmp_591 = tmp_590*tmp_6;
      real_t tmp_592 = tmp_28*tmp_540;
      real_t tmp_593 = tmp_591 + tmp_592;
      real_t tmp_594 = 2*tmp_593;
      real_t tmp_595 = tmp_33*tmp_590;
      real_t tmp_596 = tmp_37*tmp_540;
      real_t tmp_597 = tmp_595 + tmp_596;
      real_t tmp_598 = 2*tmp_597;
      real_t tmp_599 = tmp_172*tmp_21;
      real_t tmp_600 = tmp_200*tmp_45;
      real_t tmp_601 = tmp_599 + tmp_600;
      real_t tmp_602 = 0.13819660112501059*tmp_130;
      real_t tmp_603 = tmp_6*tmp_602;
      real_t tmp_604 = tmp_28*tmp_553;
      real_t tmp_605 = tmp_603 + tmp_604;
      real_t tmp_606 = 2*tmp_605;
      real_t tmp_607 = tmp_33*tmp_602;
      real_t tmp_608 = tmp_37*tmp_553;
      real_t tmp_609 = tmp_607 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_172*tmp_63;
      real_t tmp_612 = tmp_213*tmp_45;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 0.58541019662496829*tmp_130;
      real_t tmp_615 = tmp_6*tmp_614;
      real_t tmp_616 = tmp_28*tmp_566;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 2*tmp_617;
      real_t tmp_619 = tmp_33*tmp_614;
      real_t tmp_620 = tmp_37*tmp_566;
      real_t tmp_621 = tmp_619 + tmp_620;
      real_t tmp_622 = 2*tmp_621;
      real_t tmp_623 = tmp_172*tmp_84;
      real_t tmp_624 = tmp_226*tmp_45;
      real_t tmp_625 = tmp_623 + tmp_624;
      real_t tmp_626 = 0.13819660112501059*tmp_130;
      real_t tmp_627 = tmp_6*tmp_626;
      real_t tmp_628 = tmp_28*tmp_579;
      real_t tmp_629 = tmp_627 + tmp_628;
      real_t tmp_630 = 2*tmp_629;
      real_t tmp_631 = tmp_33*tmp_626;
      real_t tmp_632 = tmp_37*tmp_579;
      real_t tmp_633 = tmp_631 + tmp_632;
      real_t tmp_634 = 2*tmp_633;
      real_t tmp_635 = tmp_105*tmp_172;
      real_t tmp_636 = tmp_239*tmp_45;
      real_t tmp_637 = tmp_635 + tmp_636;
      real_t tmp_638 = tmp_26*tmp_590;
      real_t tmp_639 = tmp_28*tmp_538;
      real_t tmp_640 = tmp_638 + tmp_639;
      real_t tmp_641 = 2*tmp_640;
      real_t tmp_642 = tmp_35*tmp_590;
      real_t tmp_643 = tmp_37*tmp_538;
      real_t tmp_644 = tmp_642 + tmp_643;
      real_t tmp_645 = 2*tmp_644;
      real_t tmp_646 = tmp_150*tmp_21;
      real_t tmp_647 = tmp_198*tmp_45;
      real_t tmp_648 = tmp_646 + tmp_647;
      real_t tmp_649 = tmp_26*tmp_602;
      real_t tmp_650 = tmp_28*tmp_551;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_35*tmp_602;
      real_t tmp_654 = tmp_37*tmp_551;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 2*tmp_655;
      real_t tmp_657 = tmp_150*tmp_63;
      real_t tmp_658 = tmp_211*tmp_45;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = tmp_26*tmp_614;
      real_t tmp_661 = tmp_28*tmp_564;
      real_t tmp_662 = tmp_660 + tmp_661;
      real_t tmp_663 = 2*tmp_662;
      real_t tmp_664 = tmp_35*tmp_614;
      real_t tmp_665 = tmp_37*tmp_564;
      real_t tmp_666 = tmp_664 + tmp_665;
      real_t tmp_667 = 2*tmp_666;
      real_t tmp_668 = tmp_150*tmp_84;
      real_t tmp_669 = tmp_224*tmp_45;
      real_t tmp_670 = tmp_668 + tmp_669;
      real_t tmp_671 = tmp_26*tmp_626;
      real_t tmp_672 = tmp_28*tmp_577;
      real_t tmp_673 = tmp_671 + tmp_672;
      real_t tmp_674 = 2*tmp_673;
      real_t tmp_675 = tmp_35*tmp_626;
      real_t tmp_676 = tmp_37*tmp_577;
      real_t tmp_677 = tmp_675 + tmp_676;
      real_t tmp_678 = 2*tmp_677;
      real_t tmp_679 = tmp_105*tmp_150;
      real_t tmp_680 = tmp_237*tmp_45;
      real_t tmp_681 = tmp_679 + tmp_680;
      real_t tmp_682 = 0.5*tmp_330 - tmp_541 - tmp_592;
      real_t tmp_683 = 2*tmp_682;
      real_t tmp_684 = 0.5*tmp_332 - tmp_545 - tmp_596;
      real_t tmp_685 = 2*tmp_684;
      real_t tmp_686 = 1.0*tmp_42;
      real_t tmp_687 = tmp_327*tmp_686 - tmp_549 - tmp_600;
      real_t tmp_688 = 0.5*tmp_338 - tmp_554 - tmp_604;
      real_t tmp_689 = 2*tmp_688;
      real_t tmp_690 = 0.5*tmp_340 - tmp_558 - tmp_608;
      real_t tmp_691 = 2*tmp_690;
      real_t tmp_692 = tmp_336*tmp_686 - tmp_562 - tmp_612;
      real_t tmp_693 = 0.5*tmp_346 - tmp_567 - tmp_616;
      real_t tmp_694 = 2*tmp_693;
      real_t tmp_695 = 0.5*tmp_348 - tmp_571 - tmp_620;
      real_t tmp_696 = 2*tmp_695;
      real_t tmp_697 = tmp_344*tmp_686 - tmp_575 - tmp_624;
      real_t tmp_698 = 0.5*tmp_354 - tmp_580 - tmp_628;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = 0.5*tmp_356 - tmp_584 - tmp_632;
      real_t tmp_701 = 2*tmp_700;
      real_t tmp_702 = tmp_352*tmp_686 - tmp_588 - tmp_636;
      real_t tmp_703 = 0.5*tmp_362 - tmp_539 - tmp_639;
      real_t tmp_704 = 2*tmp_703;
      real_t tmp_705 = 0.5*tmp_364 - tmp_544 - tmp_643;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = 1.0*tmp_44;
      real_t tmp_708 = tmp_359*tmp_707 - tmp_548 - tmp_647;
      real_t tmp_709 = 0.5*tmp_369 - tmp_552 - tmp_650;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = 0.5*tmp_371 - tmp_557 - tmp_654;
      real_t tmp_712 = 2*tmp_711;
      real_t tmp_713 = tmp_367*tmp_707 - tmp_561 - tmp_658;
      real_t tmp_714 = 0.5*tmp_376 - tmp_565 - tmp_661;
      real_t tmp_715 = 2*tmp_714;
      real_t tmp_716 = 0.5*tmp_378 - tmp_570 - tmp_665;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_374*tmp_707 - tmp_574 - tmp_669;
      real_t tmp_719 = 0.5*tmp_383 - tmp_578 - tmp_672;
      real_t tmp_720 = 2*tmp_719;
      real_t tmp_721 = 0.5*tmp_385 - tmp_583 - tmp_676;
      real_t tmp_722 = 2*tmp_721;
      real_t tmp_723 = tmp_381*tmp_707 - tmp_587 - tmp_680;
      real_t tmp_724 = 0.5*tmp_390 - tmp_591 - tmp_638;
      real_t tmp_725 = 2*tmp_724;
      real_t tmp_726 = 0.5*tmp_392 - tmp_595 - tmp_642;
      real_t tmp_727 = 2*tmp_726;
      real_t tmp_728 = 1.0*tmp_45;
      real_t tmp_729 = tmp_387*tmp_728 - tmp_599 - tmp_646;
      real_t tmp_730 = 0.5*tmp_396 - tmp_603 - tmp_649;
      real_t tmp_731 = 2*tmp_730;
      real_t tmp_732 = 0.5*tmp_398 - tmp_607 - tmp_653;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = tmp_394*tmp_728 - tmp_611 - tmp_657;
      real_t tmp_735 = 0.5*tmp_402 - tmp_615 - tmp_660;
      real_t tmp_736 = 2*tmp_735;
      real_t tmp_737 = 0.5*tmp_404 - tmp_619 - tmp_664;
      real_t tmp_738 = 2*tmp_737;
      real_t tmp_739 = tmp_400*tmp_728 - tmp_623 - tmp_668;
      real_t tmp_740 = 0.5*tmp_408 - tmp_627 - tmp_671;
      real_t tmp_741 = 2*tmp_740;
      real_t tmp_742 = 0.5*tmp_410 - tmp_631 - tmp_675;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = tmp_406*tmp_728 - tmp_635 - tmp_679;
      real_t a_0_0 = tmp_104*(tmp_101*tmp_103 + tmp_91*tmp_93 + tmp_97*tmp_99) + tmp_125*(tmp_112*tmp_114 + tmp_118*tmp_120 + tmp_122*tmp_124) + tmp_62*(tmp_30*tmp_32 + tmp_39*tmp_41 + tmp_46*tmp_48) + tmp_83*(tmp_70*tmp_72 + tmp_76*tmp_78 + tmp_80*tmp_82);
      real_t a_0_1 = tmp_104*(tmp_101*tmp_140 + tmp_142*tmp_92 + tmp_143*tmp_98) + tmp_125*(tmp_113*tmp_147 + tmp_119*tmp_148 + tmp_122*tmp_145) + tmp_62*(tmp_129*tmp_46 + tmp_132*tmp_31 + tmp_133*tmp_40) + tmp_83*(tmp_135*tmp_80 + tmp_137*tmp_71 + tmp_138*tmp_77);
      real_t a_0_2 = tmp_104*(tmp_101*tmp_162 + tmp_164*tmp_92 + tmp_165*tmp_98) + tmp_125*(tmp_113*tmp_169 + tmp_119*tmp_170 + tmp_122*tmp_167) + tmp_62*(tmp_152*tmp_46 + tmp_154*tmp_31 + tmp_155*tmp_40) + tmp_83*(tmp_157*tmp_80 + tmp_159*tmp_71 + tmp_160*tmp_77);
      real_t a_0_3 = tmp_104*(tmp_101*tmp_184 + tmp_186*tmp_92 + tmp_187*tmp_98) + tmp_125*(tmp_113*tmp_191 + tmp_119*tmp_192 + tmp_122*tmp_189) + tmp_62*(tmp_174*tmp_46 + tmp_176*tmp_31 + tmp_177*tmp_40) + tmp_83*(tmp_179*tmp_80 + tmp_181*tmp_71 + tmp_182*tmp_77);
      real_t a_0_4 = tmp_104*(tmp_101*tmp_223 + tmp_228*tmp_93 + tmp_231*tmp_99) + tmp_125*(tmp_114*tmp_241 + tmp_120*tmp_244 + tmp_122*tmp_236) + tmp_62*(tmp_197*tmp_46 + tmp_202*tmp_32 + tmp_205*tmp_41) + tmp_83*(tmp_210*tmp_80 + tmp_215*tmp_72 + tmp_218*tmp_78);
      real_t a_0_5 = tmp_104*(tmp_101*tmp_270 + tmp_274*tmp_93 + tmp_277*tmp_99) + tmp_125*(tmp_114*tmp_285 + tmp_120*tmp_288 + tmp_122*tmp_281) + tmp_62*(tmp_248*tmp_46 + tmp_252*tmp_32 + tmp_255*tmp_41) + tmp_83*(tmp_259*tmp_80 + tmp_263*tmp_72 + tmp_266*tmp_78);
      real_t a_0_6 = tmp_104*(tmp_101*tmp_309 + tmp_312*tmp_93 + tmp_315*tmp_99) + tmp_125*(tmp_114*tmp_321 + tmp_120*tmp_324 + tmp_122*tmp_318) + tmp_62*(tmp_291*tmp_46 + tmp_294*tmp_32 + tmp_297*tmp_41) + tmp_83*(tmp_300*tmp_80 + tmp_303*tmp_72 + tmp_306*tmp_78);
      real_t a_0_7 = tmp_104*(tmp_101*tmp_345 + tmp_347*tmp_93 + tmp_349*tmp_99) + tmp_125*(tmp_114*tmp_355 + tmp_120*tmp_357 + tmp_122*tmp_353) + tmp_62*(tmp_32*tmp_331 + tmp_329*tmp_46 + tmp_333*tmp_41) + tmp_83*(tmp_337*tmp_80 + tmp_339*tmp_72 + tmp_341*tmp_78);
      real_t a_0_8 = tmp_104*(tmp_101*tmp_375 + tmp_377*tmp_93 + tmp_379*tmp_99) + tmp_125*(tmp_114*tmp_384 + tmp_120*tmp_386 + tmp_122*tmp_382) + tmp_62*(tmp_32*tmp_363 + tmp_361*tmp_46 + tmp_365*tmp_41) + tmp_83*(tmp_368*tmp_80 + tmp_370*tmp_72 + tmp_372*tmp_78);
      real_t a_0_9 = tmp_104*(tmp_101*tmp_401 + tmp_403*tmp_93 + tmp_405*tmp_99) + tmp_125*(tmp_114*tmp_409 + tmp_120*tmp_411 + tmp_122*tmp_407) + tmp_62*(tmp_32*tmp_391 + tmp_389*tmp_46 + tmp_393*tmp_41) + tmp_83*(tmp_395*tmp_80 + tmp_397*tmp_72 + tmp_399*tmp_78);
      real_t a_1_0 = tmp_104*(tmp_103*tmp_426 + tmp_424*tmp_91 + tmp_425*tmp_97) + tmp_125*(tmp_112*tmp_429 + tmp_118*tmp_430 + tmp_124*tmp_431) + tmp_62*(tmp_30*tmp_414 + tmp_39*tmp_415 + tmp_416*tmp_48) + tmp_83*(tmp_419*tmp_70 + tmp_420*tmp_76 + tmp_421*tmp_82);
      real_t a_1_1 = tmp_104*(tmp_434*tmp_440 + tmp_435*tmp_441 + tmp_437*tmp_441) + tmp_125*(tmp_434*tmp_442 + tmp_435*tmp_443 + tmp_437*tmp_443) + tmp_62*(tmp_433*tmp_434 + tmp_435*tmp_436 + tmp_436*tmp_437) + tmp_83*(tmp_434*tmp_438 + tmp_435*tmp_439 + tmp_437*tmp_439);
      real_t a_1_2 = tmp_455;
      real_t a_1_3 = tmp_467;
      real_t a_1_4 = tmp_104*(tmp_223*tmp_426 + tmp_228*tmp_424 + tmp_231*tmp_425) + tmp_125*(tmp_236*tmp_431 + tmp_241*tmp_429 + tmp_244*tmp_430) + tmp_62*(tmp_197*tmp_416 + tmp_202*tmp_414 + tmp_205*tmp_415) + tmp_83*(tmp_210*tmp_421 + tmp_215*tmp_419 + tmp_218*tmp_420);
      real_t a_1_5 = tmp_104*(tmp_270*tmp_426 + tmp_274*tmp_424 + tmp_277*tmp_425) + tmp_125*(tmp_281*tmp_431 + tmp_285*tmp_429 + tmp_288*tmp_430) + tmp_62*(tmp_248*tmp_416 + tmp_252*tmp_414 + tmp_255*tmp_415) + tmp_83*(tmp_259*tmp_421 + tmp_263*tmp_419 + tmp_266*tmp_420);
      real_t a_1_6 = tmp_104*(tmp_309*tmp_426 + tmp_312*tmp_424 + tmp_315*tmp_425) + tmp_125*(tmp_318*tmp_431 + tmp_321*tmp_429 + tmp_324*tmp_430) + tmp_62*(tmp_291*tmp_416 + tmp_294*tmp_414 + tmp_297*tmp_415) + tmp_83*(tmp_300*tmp_421 + tmp_303*tmp_419 + tmp_306*tmp_420);
      real_t a_1_7 = tmp_104*(tmp_345*tmp_426 + tmp_347*tmp_424 + tmp_349*tmp_425) + tmp_125*(tmp_353*tmp_431 + tmp_355*tmp_429 + tmp_357*tmp_430) + tmp_62*(tmp_329*tmp_416 + tmp_331*tmp_414 + tmp_333*tmp_415) + tmp_83*(tmp_337*tmp_421 + tmp_339*tmp_419 + tmp_341*tmp_420);
      real_t a_1_8 = tmp_104*(tmp_375*tmp_426 + tmp_377*tmp_424 + tmp_379*tmp_425) + tmp_125*(tmp_382*tmp_431 + tmp_384*tmp_429 + tmp_386*tmp_430) + tmp_62*(tmp_361*tmp_416 + tmp_363*tmp_414 + tmp_365*tmp_415) + tmp_83*(tmp_368*tmp_421 + tmp_370*tmp_419 + tmp_372*tmp_420);
      real_t a_1_9 = tmp_104*(tmp_401*tmp_426 + tmp_403*tmp_424 + tmp_405*tmp_425) + tmp_125*(tmp_407*tmp_431 + tmp_409*tmp_429 + tmp_411*tmp_430) + tmp_62*(tmp_389*tmp_416 + tmp_391*tmp_414 + tmp_393*tmp_415) + tmp_83*(tmp_395*tmp_421 + tmp_397*tmp_419 + tmp_399*tmp_420);
      real_t a_2_0 = tmp_104*(tmp_103*tmp_482 + tmp_480*tmp_91 + tmp_481*tmp_97) + tmp_125*(tmp_112*tmp_485 + tmp_118*tmp_486 + tmp_124*tmp_487) + tmp_62*(tmp_30*tmp_470 + tmp_39*tmp_471 + tmp_472*tmp_48) + tmp_83*(tmp_475*tmp_70 + tmp_476*tmp_76 + tmp_477*tmp_82);
      real_t a_2_1 = tmp_455;
      real_t a_2_2 = tmp_104*(tmp_489*tmp_495 + tmp_490*tmp_496 + tmp_492*tmp_496) + tmp_125*(tmp_489*tmp_497 + tmp_490*tmp_498 + tmp_492*tmp_498) + tmp_62*(tmp_488*tmp_489 + tmp_490*tmp_491 + tmp_491*tmp_492) + tmp_83*(tmp_489*tmp_493 + tmp_490*tmp_494 + tmp_492*tmp_494);
      real_t a_2_3 = tmp_506;
      real_t a_2_4 = tmp_104*(tmp_223*tmp_482 + tmp_228*tmp_480 + tmp_231*tmp_481) + tmp_125*(tmp_236*tmp_487 + tmp_241*tmp_485 + tmp_244*tmp_486) + tmp_62*(tmp_197*tmp_472 + tmp_202*tmp_470 + tmp_205*tmp_471) + tmp_83*(tmp_210*tmp_477 + tmp_215*tmp_475 + tmp_218*tmp_476);
      real_t a_2_5 = tmp_104*(tmp_270*tmp_482 + tmp_274*tmp_480 + tmp_277*tmp_481) + tmp_125*(tmp_281*tmp_487 + tmp_285*tmp_485 + tmp_288*tmp_486) + tmp_62*(tmp_248*tmp_472 + tmp_252*tmp_470 + tmp_255*tmp_471) + tmp_83*(tmp_259*tmp_477 + tmp_263*tmp_475 + tmp_266*tmp_476);
      real_t a_2_6 = tmp_104*(tmp_309*tmp_482 + tmp_312*tmp_480 + tmp_315*tmp_481) + tmp_125*(tmp_318*tmp_487 + tmp_321*tmp_485 + tmp_324*tmp_486) + tmp_62*(tmp_291*tmp_472 + tmp_294*tmp_470 + tmp_297*tmp_471) + tmp_83*(tmp_300*tmp_477 + tmp_303*tmp_475 + tmp_306*tmp_476);
      real_t a_2_7 = tmp_104*(tmp_345*tmp_482 + tmp_347*tmp_480 + tmp_349*tmp_481) + tmp_125*(tmp_353*tmp_487 + tmp_355*tmp_485 + tmp_357*tmp_486) + tmp_62*(tmp_329*tmp_472 + tmp_331*tmp_470 + tmp_333*tmp_471) + tmp_83*(tmp_337*tmp_477 + tmp_339*tmp_475 + tmp_341*tmp_476);
      real_t a_2_8 = tmp_104*(tmp_375*tmp_482 + tmp_377*tmp_480 + tmp_379*tmp_481) + tmp_125*(tmp_382*tmp_487 + tmp_384*tmp_485 + tmp_386*tmp_486) + tmp_62*(tmp_361*tmp_472 + tmp_363*tmp_470 + tmp_365*tmp_471) + tmp_83*(tmp_368*tmp_477 + tmp_370*tmp_475 + tmp_372*tmp_476);
      real_t a_2_9 = tmp_104*(tmp_401*tmp_482 + tmp_403*tmp_480 + tmp_405*tmp_481) + tmp_125*(tmp_407*tmp_487 + tmp_409*tmp_485 + tmp_411*tmp_486) + tmp_62*(tmp_389*tmp_472 + tmp_391*tmp_470 + tmp_393*tmp_471) + tmp_83*(tmp_395*tmp_477 + tmp_397*tmp_475 + tmp_399*tmp_476);
      real_t a_3_0 = tmp_104*(tmp_103*tmp_521 + tmp_519*tmp_91 + tmp_520*tmp_97) + tmp_125*(tmp_112*tmp_524 + tmp_118*tmp_525 + tmp_124*tmp_526) + tmp_62*(tmp_30*tmp_509 + tmp_39*tmp_510 + tmp_48*tmp_511) + tmp_83*(tmp_514*tmp_70 + tmp_515*tmp_76 + tmp_516*tmp_82);
      real_t a_3_1 = tmp_467;
      real_t a_3_2 = tmp_506;
      real_t a_3_3 = tmp_104*(tmp_528*tmp_534 + tmp_529*tmp_535 + tmp_531*tmp_535) + tmp_125*(tmp_528*tmp_536 + tmp_529*tmp_537 + tmp_531*tmp_537) + tmp_62*(tmp_527*tmp_528 + tmp_529*tmp_530 + tmp_530*tmp_531) + tmp_83*(tmp_528*tmp_532 + tmp_529*tmp_533 + tmp_531*tmp_533);
      real_t a_3_4 = tmp_104*(tmp_223*tmp_521 + tmp_228*tmp_519 + tmp_231*tmp_520) + tmp_125*(tmp_236*tmp_526 + tmp_241*tmp_524 + tmp_244*tmp_525) + tmp_62*(tmp_197*tmp_511 + tmp_202*tmp_509 + tmp_205*tmp_510) + tmp_83*(tmp_210*tmp_516 + tmp_215*tmp_514 + tmp_218*tmp_515);
      real_t a_3_5 = tmp_104*(tmp_270*tmp_521 + tmp_274*tmp_519 + tmp_277*tmp_520) + tmp_125*(tmp_281*tmp_526 + tmp_285*tmp_524 + tmp_288*tmp_525) + tmp_62*(tmp_248*tmp_511 + tmp_252*tmp_509 + tmp_255*tmp_510) + tmp_83*(tmp_259*tmp_516 + tmp_263*tmp_514 + tmp_266*tmp_515);
      real_t a_3_6 = tmp_104*(tmp_309*tmp_521 + tmp_312*tmp_519 + tmp_315*tmp_520) + tmp_125*(tmp_318*tmp_526 + tmp_321*tmp_524 + tmp_324*tmp_525) + tmp_62*(tmp_291*tmp_511 + tmp_294*tmp_509 + tmp_297*tmp_510) + tmp_83*(tmp_300*tmp_516 + tmp_303*tmp_514 + tmp_306*tmp_515);
      real_t a_3_7 = tmp_104*(tmp_345*tmp_521 + tmp_347*tmp_519 + tmp_349*tmp_520) + tmp_125*(tmp_353*tmp_526 + tmp_355*tmp_524 + tmp_357*tmp_525) + tmp_62*(tmp_329*tmp_511 + tmp_331*tmp_509 + tmp_333*tmp_510) + tmp_83*(tmp_337*tmp_516 + tmp_339*tmp_514 + tmp_341*tmp_515);
      real_t a_3_8 = tmp_104*(tmp_375*tmp_521 + tmp_377*tmp_519 + tmp_379*tmp_520) + tmp_125*(tmp_382*tmp_526 + tmp_384*tmp_524 + tmp_386*tmp_525) + tmp_62*(tmp_361*tmp_511 + tmp_363*tmp_509 + tmp_365*tmp_510) + tmp_83*(tmp_368*tmp_516 + tmp_370*tmp_514 + tmp_372*tmp_515);
      real_t a_3_9 = tmp_104*(tmp_401*tmp_521 + tmp_403*tmp_519 + tmp_405*tmp_520) + tmp_125*(tmp_407*tmp_526 + tmp_409*tmp_524 + tmp_411*tmp_525) + tmp_62*(tmp_389*tmp_511 + tmp_391*tmp_509 + tmp_393*tmp_510) + tmp_83*(tmp_395*tmp_516 + tmp_397*tmp_514 + tmp_399*tmp_515);
      real_t a_4_0 = tmp_104*(tmp_103*tmp_576 + tmp_569*tmp_91 + tmp_573*tmp_97) + tmp_125*(tmp_112*tmp_582 + tmp_118*tmp_586 + tmp_124*tmp_589) + tmp_62*(tmp_30*tmp_543 + tmp_39*tmp_547 + tmp_48*tmp_550) + tmp_83*(tmp_556*tmp_70 + tmp_560*tmp_76 + tmp_563*tmp_82);
      real_t a_4_1 = tmp_104*(tmp_140*tmp_576 + tmp_142*tmp_568 + tmp_143*tmp_572) + tmp_125*(tmp_145*tmp_589 + tmp_147*tmp_581 + tmp_148*tmp_585) + tmp_62*(tmp_129*tmp_550 + tmp_132*tmp_542 + tmp_133*tmp_546) + tmp_83*(tmp_135*tmp_563 + tmp_137*tmp_555 + tmp_138*tmp_559);
      real_t a_4_2 = tmp_104*(tmp_162*tmp_576 + tmp_164*tmp_568 + tmp_165*tmp_572) + tmp_125*(tmp_167*tmp_589 + tmp_169*tmp_581 + tmp_170*tmp_585) + tmp_62*(tmp_152*tmp_550 + tmp_154*tmp_542 + tmp_155*tmp_546) + tmp_83*(tmp_157*tmp_563 + tmp_159*tmp_555 + tmp_160*tmp_559);
      real_t a_4_3 = tmp_104*(tmp_184*tmp_576 + tmp_186*tmp_568 + tmp_187*tmp_572) + tmp_125*(tmp_189*tmp_589 + tmp_191*tmp_581 + tmp_192*tmp_585) + tmp_62*(tmp_174*tmp_550 + tmp_176*tmp_542 + tmp_177*tmp_546) + tmp_83*(tmp_179*tmp_563 + tmp_181*tmp_555 + tmp_182*tmp_559);
      real_t a_4_4 = tmp_104*(tmp_223*tmp_576 + tmp_228*tmp_569 + tmp_231*tmp_573) + tmp_125*(tmp_236*tmp_589 + tmp_241*tmp_582 + tmp_244*tmp_586) + tmp_62*(tmp_197*tmp_550 + tmp_202*tmp_543 + tmp_205*tmp_547) + tmp_83*(tmp_210*tmp_563 + tmp_215*tmp_556 + tmp_218*tmp_560);
      real_t a_4_5 = tmp_104*(tmp_270*tmp_576 + tmp_274*tmp_569 + tmp_277*tmp_573) + tmp_125*(tmp_281*tmp_589 + tmp_285*tmp_582 + tmp_288*tmp_586) + tmp_62*(tmp_248*tmp_550 + tmp_252*tmp_543 + tmp_255*tmp_547) + tmp_83*(tmp_259*tmp_563 + tmp_263*tmp_556 + tmp_266*tmp_560);
      real_t a_4_6 = tmp_104*(tmp_309*tmp_576 + tmp_312*tmp_569 + tmp_315*tmp_573) + tmp_125*(tmp_318*tmp_589 + tmp_321*tmp_582 + tmp_324*tmp_586) + tmp_62*(tmp_291*tmp_550 + tmp_294*tmp_543 + tmp_297*tmp_547) + tmp_83*(tmp_300*tmp_563 + tmp_303*tmp_556 + tmp_306*tmp_560);
      real_t a_4_7 = tmp_104*(tmp_345*tmp_576 + tmp_347*tmp_569 + tmp_349*tmp_573) + tmp_125*(tmp_353*tmp_589 + tmp_355*tmp_582 + tmp_357*tmp_586) + tmp_62*(tmp_329*tmp_550 + tmp_331*tmp_543 + tmp_333*tmp_547) + tmp_83*(tmp_337*tmp_563 + tmp_339*tmp_556 + tmp_341*tmp_560);
      real_t a_4_8 = tmp_104*(tmp_375*tmp_576 + tmp_377*tmp_569 + tmp_379*tmp_573) + tmp_125*(tmp_382*tmp_589 + tmp_384*tmp_582 + tmp_386*tmp_586) + tmp_62*(tmp_361*tmp_550 + tmp_363*tmp_543 + tmp_365*tmp_547) + tmp_83*(tmp_368*tmp_563 + tmp_370*tmp_556 + tmp_372*tmp_560);
      real_t a_4_9 = tmp_104*(tmp_401*tmp_576 + tmp_403*tmp_569 + tmp_405*tmp_573) + tmp_125*(tmp_407*tmp_589 + tmp_409*tmp_582 + tmp_411*tmp_586) + tmp_62*(tmp_389*tmp_550 + tmp_391*tmp_543 + tmp_393*tmp_547) + tmp_83*(tmp_395*tmp_563 + tmp_397*tmp_556 + tmp_399*tmp_560);
      real_t a_5_0 = tmp_104*(tmp_103*tmp_625 + tmp_618*tmp_91 + tmp_622*tmp_97) + tmp_125*(tmp_112*tmp_630 + tmp_118*tmp_634 + tmp_124*tmp_637) + tmp_62*(tmp_30*tmp_594 + tmp_39*tmp_598 + tmp_48*tmp_601) + tmp_83*(tmp_606*tmp_70 + tmp_610*tmp_76 + tmp_613*tmp_82);
      real_t a_5_1 = tmp_104*(tmp_140*tmp_625 + tmp_142*tmp_617 + tmp_143*tmp_621) + tmp_125*(tmp_145*tmp_637 + tmp_147*tmp_629 + tmp_148*tmp_633) + tmp_62*(tmp_129*tmp_601 + tmp_132*tmp_593 + tmp_133*tmp_597) + tmp_83*(tmp_135*tmp_613 + tmp_137*tmp_605 + tmp_138*tmp_609);
      real_t a_5_2 = tmp_104*(tmp_162*tmp_625 + tmp_164*tmp_617 + tmp_165*tmp_621) + tmp_125*(tmp_167*tmp_637 + tmp_169*tmp_629 + tmp_170*tmp_633) + tmp_62*(tmp_152*tmp_601 + tmp_154*tmp_593 + tmp_155*tmp_597) + tmp_83*(tmp_157*tmp_613 + tmp_159*tmp_605 + tmp_160*tmp_609);
      real_t a_5_3 = tmp_104*(tmp_184*tmp_625 + tmp_186*tmp_617 + tmp_187*tmp_621) + tmp_125*(tmp_189*tmp_637 + tmp_191*tmp_629 + tmp_192*tmp_633) + tmp_62*(tmp_174*tmp_601 + tmp_176*tmp_593 + tmp_177*tmp_597) + tmp_83*(tmp_179*tmp_613 + tmp_181*tmp_605 + tmp_182*tmp_609);
      real_t a_5_4 = tmp_104*(tmp_223*tmp_625 + tmp_228*tmp_618 + tmp_231*tmp_622) + tmp_125*(tmp_236*tmp_637 + tmp_241*tmp_630 + tmp_244*tmp_634) + tmp_62*(tmp_197*tmp_601 + tmp_202*tmp_594 + tmp_205*tmp_598) + tmp_83*(tmp_210*tmp_613 + tmp_215*tmp_606 + tmp_218*tmp_610);
      real_t a_5_5 = tmp_104*(tmp_270*tmp_625 + tmp_274*tmp_618 + tmp_277*tmp_622) + tmp_125*(tmp_281*tmp_637 + tmp_285*tmp_630 + tmp_288*tmp_634) + tmp_62*(tmp_248*tmp_601 + tmp_252*tmp_594 + tmp_255*tmp_598) + tmp_83*(tmp_259*tmp_613 + tmp_263*tmp_606 + tmp_266*tmp_610);
      real_t a_5_6 = tmp_104*(tmp_309*tmp_625 + tmp_312*tmp_618 + tmp_315*tmp_622) + tmp_125*(tmp_318*tmp_637 + tmp_321*tmp_630 + tmp_324*tmp_634) + tmp_62*(tmp_291*tmp_601 + tmp_294*tmp_594 + tmp_297*tmp_598) + tmp_83*(tmp_300*tmp_613 + tmp_303*tmp_606 + tmp_306*tmp_610);
      real_t a_5_7 = tmp_104*(tmp_345*tmp_625 + tmp_347*tmp_618 + tmp_349*tmp_622) + tmp_125*(tmp_353*tmp_637 + tmp_355*tmp_630 + tmp_357*tmp_634) + tmp_62*(tmp_329*tmp_601 + tmp_331*tmp_594 + tmp_333*tmp_598) + tmp_83*(tmp_337*tmp_613 + tmp_339*tmp_606 + tmp_341*tmp_610);
      real_t a_5_8 = tmp_104*(tmp_375*tmp_625 + tmp_377*tmp_618 + tmp_379*tmp_622) + tmp_125*(tmp_382*tmp_637 + tmp_384*tmp_630 + tmp_386*tmp_634) + tmp_62*(tmp_361*tmp_601 + tmp_363*tmp_594 + tmp_365*tmp_598) + tmp_83*(tmp_368*tmp_613 + tmp_370*tmp_606 + tmp_372*tmp_610);
      real_t a_5_9 = tmp_104*(tmp_401*tmp_625 + tmp_403*tmp_618 + tmp_405*tmp_622) + tmp_125*(tmp_407*tmp_637 + tmp_409*tmp_630 + tmp_411*tmp_634) + tmp_62*(tmp_389*tmp_601 + tmp_391*tmp_594 + tmp_393*tmp_598) + tmp_83*(tmp_395*tmp_613 + tmp_397*tmp_606 + tmp_399*tmp_610);
      real_t a_6_0 = tmp_104*(tmp_103*tmp_670 + tmp_663*tmp_91 + tmp_667*tmp_97) + tmp_125*(tmp_112*tmp_674 + tmp_118*tmp_678 + tmp_124*tmp_681) + tmp_62*(tmp_30*tmp_641 + tmp_39*tmp_645 + tmp_48*tmp_648) + tmp_83*(tmp_652*tmp_70 + tmp_656*tmp_76 + tmp_659*tmp_82);
      real_t a_6_1 = tmp_104*(tmp_140*tmp_670 + tmp_142*tmp_662 + tmp_143*tmp_666) + tmp_125*(tmp_145*tmp_681 + tmp_147*tmp_673 + tmp_148*tmp_677) + tmp_62*(tmp_129*tmp_648 + tmp_132*tmp_640 + tmp_133*tmp_644) + tmp_83*(tmp_135*tmp_659 + tmp_137*tmp_651 + tmp_138*tmp_655);
      real_t a_6_2 = tmp_104*(tmp_162*tmp_670 + tmp_164*tmp_662 + tmp_165*tmp_666) + tmp_125*(tmp_167*tmp_681 + tmp_169*tmp_673 + tmp_170*tmp_677) + tmp_62*(tmp_152*tmp_648 + tmp_154*tmp_640 + tmp_155*tmp_644) + tmp_83*(tmp_157*tmp_659 + tmp_159*tmp_651 + tmp_160*tmp_655);
      real_t a_6_3 = tmp_104*(tmp_184*tmp_670 + tmp_186*tmp_662 + tmp_187*tmp_666) + tmp_125*(tmp_189*tmp_681 + tmp_191*tmp_673 + tmp_192*tmp_677) + tmp_62*(tmp_174*tmp_648 + tmp_176*tmp_640 + tmp_177*tmp_644) + tmp_83*(tmp_179*tmp_659 + tmp_181*tmp_651 + tmp_182*tmp_655);
      real_t a_6_4 = tmp_104*(tmp_223*tmp_670 + tmp_228*tmp_663 + tmp_231*tmp_667) + tmp_125*(tmp_236*tmp_681 + tmp_241*tmp_674 + tmp_244*tmp_678) + tmp_62*(tmp_197*tmp_648 + tmp_202*tmp_641 + tmp_205*tmp_645) + tmp_83*(tmp_210*tmp_659 + tmp_215*tmp_652 + tmp_218*tmp_656);
      real_t a_6_5 = tmp_104*(tmp_270*tmp_670 + tmp_274*tmp_663 + tmp_277*tmp_667) + tmp_125*(tmp_281*tmp_681 + tmp_285*tmp_674 + tmp_288*tmp_678) + tmp_62*(tmp_248*tmp_648 + tmp_252*tmp_641 + tmp_255*tmp_645) + tmp_83*(tmp_259*tmp_659 + tmp_263*tmp_652 + tmp_266*tmp_656);
      real_t a_6_6 = tmp_104*(tmp_309*tmp_670 + tmp_312*tmp_663 + tmp_315*tmp_667) + tmp_125*(tmp_318*tmp_681 + tmp_321*tmp_674 + tmp_324*tmp_678) + tmp_62*(tmp_291*tmp_648 + tmp_294*tmp_641 + tmp_297*tmp_645) + tmp_83*(tmp_300*tmp_659 + tmp_303*tmp_652 + tmp_306*tmp_656);
      real_t a_6_7 = tmp_104*(tmp_345*tmp_670 + tmp_347*tmp_663 + tmp_349*tmp_667) + tmp_125*(tmp_353*tmp_681 + tmp_355*tmp_674 + tmp_357*tmp_678) + tmp_62*(tmp_329*tmp_648 + tmp_331*tmp_641 + tmp_333*tmp_645) + tmp_83*(tmp_337*tmp_659 + tmp_339*tmp_652 + tmp_341*tmp_656);
      real_t a_6_8 = tmp_104*(tmp_375*tmp_670 + tmp_377*tmp_663 + tmp_379*tmp_667) + tmp_125*(tmp_382*tmp_681 + tmp_384*tmp_674 + tmp_386*tmp_678) + tmp_62*(tmp_361*tmp_648 + tmp_363*tmp_641 + tmp_365*tmp_645) + tmp_83*(tmp_368*tmp_659 + tmp_370*tmp_652 + tmp_372*tmp_656);
      real_t a_6_9 = tmp_104*(tmp_401*tmp_670 + tmp_403*tmp_663 + tmp_405*tmp_667) + tmp_125*(tmp_407*tmp_681 + tmp_409*tmp_674 + tmp_411*tmp_678) + tmp_62*(tmp_389*tmp_648 + tmp_391*tmp_641 + tmp_393*tmp_645) + tmp_83*(tmp_395*tmp_659 + tmp_397*tmp_652 + tmp_399*tmp_656);
      real_t a_7_0 = tmp_104*(tmp_103*tmp_697 + tmp_694*tmp_91 + tmp_696*tmp_97) + tmp_125*(tmp_112*tmp_699 + tmp_118*tmp_701 + tmp_124*tmp_702) + tmp_62*(tmp_30*tmp_683 + tmp_39*tmp_685 + tmp_48*tmp_687) + tmp_83*(tmp_689*tmp_70 + tmp_691*tmp_76 + tmp_692*tmp_82);
      real_t a_7_1 = tmp_104*(tmp_140*tmp_697 + tmp_142*tmp_693 + tmp_143*tmp_695) + tmp_125*(tmp_145*tmp_702 + tmp_147*tmp_698 + tmp_148*tmp_700) + tmp_62*(tmp_129*tmp_687 + tmp_132*tmp_682 + tmp_133*tmp_684) + tmp_83*(tmp_135*tmp_692 + tmp_137*tmp_688 + tmp_138*tmp_690);
      real_t a_7_2 = tmp_104*(tmp_162*tmp_697 + tmp_164*tmp_693 + tmp_165*tmp_695) + tmp_125*(tmp_167*tmp_702 + tmp_169*tmp_698 + tmp_170*tmp_700) + tmp_62*(tmp_152*tmp_687 + tmp_154*tmp_682 + tmp_155*tmp_684) + tmp_83*(tmp_157*tmp_692 + tmp_159*tmp_688 + tmp_160*tmp_690);
      real_t a_7_3 = tmp_104*(tmp_184*tmp_697 + tmp_186*tmp_693 + tmp_187*tmp_695) + tmp_125*(tmp_189*tmp_702 + tmp_191*tmp_698 + tmp_192*tmp_700) + tmp_62*(tmp_174*tmp_687 + tmp_176*tmp_682 + tmp_177*tmp_684) + tmp_83*(tmp_179*tmp_692 + tmp_181*tmp_688 + tmp_182*tmp_690);
      real_t a_7_4 = tmp_104*(tmp_223*tmp_697 + tmp_228*tmp_694 + tmp_231*tmp_696) + tmp_125*(tmp_236*tmp_702 + tmp_241*tmp_699 + tmp_244*tmp_701) + tmp_62*(tmp_197*tmp_687 + tmp_202*tmp_683 + tmp_205*tmp_685) + tmp_83*(tmp_210*tmp_692 + tmp_215*tmp_689 + tmp_218*tmp_691);
      real_t a_7_5 = tmp_104*(tmp_270*tmp_697 + tmp_274*tmp_694 + tmp_277*tmp_696) + tmp_125*(tmp_281*tmp_702 + tmp_285*tmp_699 + tmp_288*tmp_701) + tmp_62*(tmp_248*tmp_687 + tmp_252*tmp_683 + tmp_255*tmp_685) + tmp_83*(tmp_259*tmp_692 + tmp_263*tmp_689 + tmp_266*tmp_691);
      real_t a_7_6 = tmp_104*(tmp_309*tmp_697 + tmp_312*tmp_694 + tmp_315*tmp_696) + tmp_125*(tmp_318*tmp_702 + tmp_321*tmp_699 + tmp_324*tmp_701) + tmp_62*(tmp_291*tmp_687 + tmp_294*tmp_683 + tmp_297*tmp_685) + tmp_83*(tmp_300*tmp_692 + tmp_303*tmp_689 + tmp_306*tmp_691);
      real_t a_7_7 = tmp_104*(tmp_345*tmp_697 + tmp_347*tmp_694 + tmp_349*tmp_696) + tmp_125*(tmp_353*tmp_702 + tmp_355*tmp_699 + tmp_357*tmp_701) + tmp_62*(tmp_329*tmp_687 + tmp_331*tmp_683 + tmp_333*tmp_685) + tmp_83*(tmp_337*tmp_692 + tmp_339*tmp_689 + tmp_341*tmp_691);
      real_t a_7_8 = tmp_104*(tmp_375*tmp_697 + tmp_377*tmp_694 + tmp_379*tmp_696) + tmp_125*(tmp_382*tmp_702 + tmp_384*tmp_699 + tmp_386*tmp_701) + tmp_62*(tmp_361*tmp_687 + tmp_363*tmp_683 + tmp_365*tmp_685) + tmp_83*(tmp_368*tmp_692 + tmp_370*tmp_689 + tmp_372*tmp_691);
      real_t a_7_9 = tmp_104*(tmp_401*tmp_697 + tmp_403*tmp_694 + tmp_405*tmp_696) + tmp_125*(tmp_407*tmp_702 + tmp_409*tmp_699 + tmp_411*tmp_701) + tmp_62*(tmp_389*tmp_687 + tmp_391*tmp_683 + tmp_393*tmp_685) + tmp_83*(tmp_395*tmp_692 + tmp_397*tmp_689 + tmp_399*tmp_691);
      real_t a_8_0 = tmp_104*(tmp_103*tmp_718 + tmp_715*tmp_91 + tmp_717*tmp_97) + tmp_125*(tmp_112*tmp_720 + tmp_118*tmp_722 + tmp_124*tmp_723) + tmp_62*(tmp_30*tmp_704 + tmp_39*tmp_706 + tmp_48*tmp_708) + tmp_83*(tmp_70*tmp_710 + tmp_712*tmp_76 + tmp_713*tmp_82);
      real_t a_8_1 = tmp_104*(tmp_140*tmp_718 + tmp_142*tmp_714 + tmp_143*tmp_716) + tmp_125*(tmp_145*tmp_723 + tmp_147*tmp_719 + tmp_148*tmp_721) + tmp_62*(tmp_129*tmp_708 + tmp_132*tmp_703 + tmp_133*tmp_705) + tmp_83*(tmp_135*tmp_713 + tmp_137*tmp_709 + tmp_138*tmp_711);
      real_t a_8_2 = tmp_104*(tmp_162*tmp_718 + tmp_164*tmp_714 + tmp_165*tmp_716) + tmp_125*(tmp_167*tmp_723 + tmp_169*tmp_719 + tmp_170*tmp_721) + tmp_62*(tmp_152*tmp_708 + tmp_154*tmp_703 + tmp_155*tmp_705) + tmp_83*(tmp_157*tmp_713 + tmp_159*tmp_709 + tmp_160*tmp_711);
      real_t a_8_3 = tmp_104*(tmp_184*tmp_718 + tmp_186*tmp_714 + tmp_187*tmp_716) + tmp_125*(tmp_189*tmp_723 + tmp_191*tmp_719 + tmp_192*tmp_721) + tmp_62*(tmp_174*tmp_708 + tmp_176*tmp_703 + tmp_177*tmp_705) + tmp_83*(tmp_179*tmp_713 + tmp_181*tmp_709 + tmp_182*tmp_711);
      real_t a_8_4 = tmp_104*(tmp_223*tmp_718 + tmp_228*tmp_715 + tmp_231*tmp_717) + tmp_125*(tmp_236*tmp_723 + tmp_241*tmp_720 + tmp_244*tmp_722) + tmp_62*(tmp_197*tmp_708 + tmp_202*tmp_704 + tmp_205*tmp_706) + tmp_83*(tmp_210*tmp_713 + tmp_215*tmp_710 + tmp_218*tmp_712);
      real_t a_8_5 = tmp_104*(tmp_270*tmp_718 + tmp_274*tmp_715 + tmp_277*tmp_717) + tmp_125*(tmp_281*tmp_723 + tmp_285*tmp_720 + tmp_288*tmp_722) + tmp_62*(tmp_248*tmp_708 + tmp_252*tmp_704 + tmp_255*tmp_706) + tmp_83*(tmp_259*tmp_713 + tmp_263*tmp_710 + tmp_266*tmp_712);
      real_t a_8_6 = tmp_104*(tmp_309*tmp_718 + tmp_312*tmp_715 + tmp_315*tmp_717) + tmp_125*(tmp_318*tmp_723 + tmp_321*tmp_720 + tmp_324*tmp_722) + tmp_62*(tmp_291*tmp_708 + tmp_294*tmp_704 + tmp_297*tmp_706) + tmp_83*(tmp_300*tmp_713 + tmp_303*tmp_710 + tmp_306*tmp_712);
      real_t a_8_7 = tmp_104*(tmp_345*tmp_718 + tmp_347*tmp_715 + tmp_349*tmp_717) + tmp_125*(tmp_353*tmp_723 + tmp_355*tmp_720 + tmp_357*tmp_722) + tmp_62*(tmp_329*tmp_708 + tmp_331*tmp_704 + tmp_333*tmp_706) + tmp_83*(tmp_337*tmp_713 + tmp_339*tmp_710 + tmp_341*tmp_712);
      real_t a_8_8 = tmp_104*(tmp_375*tmp_718 + tmp_377*tmp_715 + tmp_379*tmp_717) + tmp_125*(tmp_382*tmp_723 + tmp_384*tmp_720 + tmp_386*tmp_722) + tmp_62*(tmp_361*tmp_708 + tmp_363*tmp_704 + tmp_365*tmp_706) + tmp_83*(tmp_368*tmp_713 + tmp_370*tmp_710 + tmp_372*tmp_712);
      real_t a_8_9 = tmp_104*(tmp_401*tmp_718 + tmp_403*tmp_715 + tmp_405*tmp_717) + tmp_125*(tmp_407*tmp_723 + tmp_409*tmp_720 + tmp_411*tmp_722) + tmp_62*(tmp_389*tmp_708 + tmp_391*tmp_704 + tmp_393*tmp_706) + tmp_83*(tmp_395*tmp_713 + tmp_397*tmp_710 + tmp_399*tmp_712);
      real_t a_9_0 = tmp_104*(tmp_103*tmp_739 + tmp_736*tmp_91 + tmp_738*tmp_97) + tmp_125*(tmp_112*tmp_741 + tmp_118*tmp_743 + tmp_124*tmp_744) + tmp_62*(tmp_30*tmp_725 + tmp_39*tmp_727 + tmp_48*tmp_729) + tmp_83*(tmp_70*tmp_731 + tmp_733*tmp_76 + tmp_734*tmp_82);
      real_t a_9_1 = tmp_104*(tmp_140*tmp_739 + tmp_142*tmp_735 + tmp_143*tmp_737) + tmp_125*(tmp_145*tmp_744 + tmp_147*tmp_740 + tmp_148*tmp_742) + tmp_62*(tmp_129*tmp_729 + tmp_132*tmp_724 + tmp_133*tmp_726) + tmp_83*(tmp_135*tmp_734 + tmp_137*tmp_730 + tmp_138*tmp_732);
      real_t a_9_2 = tmp_104*(tmp_162*tmp_739 + tmp_164*tmp_735 + tmp_165*tmp_737) + tmp_125*(tmp_167*tmp_744 + tmp_169*tmp_740 + tmp_170*tmp_742) + tmp_62*(tmp_152*tmp_729 + tmp_154*tmp_724 + tmp_155*tmp_726) + tmp_83*(tmp_157*tmp_734 + tmp_159*tmp_730 + tmp_160*tmp_732);
      real_t a_9_3 = tmp_104*(tmp_184*tmp_739 + tmp_186*tmp_735 + tmp_187*tmp_737) + tmp_125*(tmp_189*tmp_744 + tmp_191*tmp_740 + tmp_192*tmp_742) + tmp_62*(tmp_174*tmp_729 + tmp_176*tmp_724 + tmp_177*tmp_726) + tmp_83*(tmp_179*tmp_734 + tmp_181*tmp_730 + tmp_182*tmp_732);
      real_t a_9_4 = tmp_104*(tmp_223*tmp_739 + tmp_228*tmp_736 + tmp_231*tmp_738) + tmp_125*(tmp_236*tmp_744 + tmp_241*tmp_741 + tmp_244*tmp_743) + tmp_62*(tmp_197*tmp_729 + tmp_202*tmp_725 + tmp_205*tmp_727) + tmp_83*(tmp_210*tmp_734 + tmp_215*tmp_731 + tmp_218*tmp_733);
      real_t a_9_5 = tmp_104*(tmp_270*tmp_739 + tmp_274*tmp_736 + tmp_277*tmp_738) + tmp_125*(tmp_281*tmp_744 + tmp_285*tmp_741 + tmp_288*tmp_743) + tmp_62*(tmp_248*tmp_729 + tmp_252*tmp_725 + tmp_255*tmp_727) + tmp_83*(tmp_259*tmp_734 + tmp_263*tmp_731 + tmp_266*tmp_733);
      real_t a_9_6 = tmp_104*(tmp_309*tmp_739 + tmp_312*tmp_736 + tmp_315*tmp_738) + tmp_125*(tmp_318*tmp_744 + tmp_321*tmp_741 + tmp_324*tmp_743) + tmp_62*(tmp_291*tmp_729 + tmp_294*tmp_725 + tmp_297*tmp_727) + tmp_83*(tmp_300*tmp_734 + tmp_303*tmp_731 + tmp_306*tmp_733);
      real_t a_9_7 = tmp_104*(tmp_345*tmp_739 + tmp_347*tmp_736 + tmp_349*tmp_738) + tmp_125*(tmp_353*tmp_744 + tmp_355*tmp_741 + tmp_357*tmp_743) + tmp_62*(tmp_329*tmp_729 + tmp_331*tmp_725 + tmp_333*tmp_727) + tmp_83*(tmp_337*tmp_734 + tmp_339*tmp_731 + tmp_341*tmp_733);
      real_t a_9_8 = tmp_104*(tmp_375*tmp_739 + tmp_377*tmp_736 + tmp_379*tmp_738) + tmp_125*(tmp_382*tmp_744 + tmp_384*tmp_741 + tmp_386*tmp_743) + tmp_62*(tmp_361*tmp_729 + tmp_363*tmp_725 + tmp_365*tmp_727) + tmp_83*(tmp_368*tmp_734 + tmp_370*tmp_731 + tmp_372*tmp_733);
      real_t a_9_9 = tmp_104*(tmp_401*tmp_739 + tmp_403*tmp_736 + tmp_405*tmp_738) + tmp_125*(tmp_407*tmp_744 + tmp_409*tmp_741 + tmp_411*tmp_743) + tmp_62*(tmp_389*tmp_729 + tmp_391*tmp_725 + tmp_393*tmp_727) + tmp_83*(tmp_395*tmp_734 + tmp_397*tmp_731 + tmp_399*tmp_733);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = tmp_14*tmp_5 - tmp_3*tmp_9;
      real_t tmp_32 = tmp_23*tmp_31;
      real_t tmp_33 = tmp_11*tmp_3 - tmp_14*tmp_7;
      real_t tmp_34 = tmp_23*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_5 + tmp_7*tmp_9;
      real_t tmp_36 = tmp_23*tmp_35;
      real_t tmp_37 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_38 = 2*tmp_37;
      real_t tmp_39 = tmp_10 - tmp_17;
      real_t tmp_40 = 1.0*tmp_23;
      real_t tmp_41 = tmp_15 - tmp_16;
      real_t tmp_42 = tmp_12 - tmp_18;
      real_t tmp_43 = tmp_39*tmp_40 + tmp_40*tmp_41 + tmp_40*tmp_42;
      real_t tmp_44 = 2.0*tmp_23;
      real_t tmp_45 = p_affine_0_0*p_affine_1_1;
      real_t tmp_46 = p_affine_0_0*p_affine_1_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_2;
      real_t tmp_48 = p_affine_0_1*p_affine_1_0;
      real_t tmp_49 = p_affine_0_1*p_affine_1_2;
      real_t tmp_50 = p_affine_2_2*p_affine_3_0;
      real_t tmp_51 = p_affine_0_2*p_affine_1_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_1;
      real_t tmp_54 = p_affine_2_2*p_affine_3_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_0;
      real_t tmp_57 = std::abs(p_affine_0_0*tmp_47 - p_affine_0_0*tmp_54 + p_affine_0_1*tmp_50 - p_affine_0_1*tmp_55 + p_affine_0_2*tmp_53 - p_affine_0_2*tmp_56 - p_affine_1_0*tmp_47 + p_affine_1_0*tmp_54 - p_affine_1_1*tmp_50 + p_affine_1_1*tmp_55 - p_affine_1_2*tmp_53 + p_affine_1_2*tmp_56 + p_affine_2_0*tmp_49 - p_affine_2_0*tmp_52 - p_affine_2_1*tmp_46 + p_affine_2_1*tmp_51 + p_affine_2_2*tmp_45 - p_affine_2_2*tmp_48 - p_affine_3_0*tmp_49 + p_affine_3_0*tmp_52 + p_affine_3_1*tmp_46 - p_affine_3_1*tmp_51 - p_affine_3_2*tmp_45 + p_affine_3_2*tmp_48);
      real_t tmp_58 = 0.041666666666666657*tmp_57;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 2.3416407864998732;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_19*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_6*tmp_62;
      real_t tmp_64 = tmp_25*tmp_62;
      real_t tmp_65 = tmp_27*tmp_62;
      real_t tmp_66 = 0.5*tmp_63 + 0.5*tmp_64 + 0.5*tmp_65;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = tmp_31*tmp_62;
      real_t tmp_69 = tmp_33*tmp_62;
      real_t tmp_70 = tmp_35*tmp_62;
      real_t tmp_71 = 0.5*tmp_68 + 0.5*tmp_69 + 0.5*tmp_70;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 1.0*tmp_62;
      real_t tmp_74 = tmp_39*tmp_73 + tmp_41*tmp_73 + tmp_42*tmp_73;
      real_t tmp_75 = 2.0*tmp_62;
      real_t tmp_76 = 0.041666666666666657*tmp_57;
      real_t tmp_77 = 2.3416407864998732;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = tmp_19*(tmp_77 + tmp_78 + tmp_79 - 3.0);
      real_t tmp_81 = tmp_6*tmp_80;
      real_t tmp_82 = tmp_25*tmp_80;
      real_t tmp_83 = tmp_27*tmp_80;
      real_t tmp_84 = 0.5*tmp_81 + 0.5*tmp_82 + 0.5*tmp_83;
      real_t tmp_85 = 2*tmp_84;
      real_t tmp_86 = tmp_31*tmp_80;
      real_t tmp_87 = tmp_33*tmp_80;
      real_t tmp_88 = tmp_35*tmp_80;
      real_t tmp_89 = 0.5*tmp_86 + 0.5*tmp_87 + 0.5*tmp_88;
      real_t tmp_90 = 2*tmp_89;
      real_t tmp_91 = 1.0*tmp_80;
      real_t tmp_92 = tmp_39*tmp_91 + tmp_41*tmp_91 + tmp_42*tmp_91;
      real_t tmp_93 = 2.0*tmp_80;
      real_t tmp_94 = 0.041666666666666657*tmp_57;
      real_t tmp_95 = 0.55278640450004235;
      real_t tmp_96 = 0.55278640450004235;
      real_t tmp_97 = 0.55278640450004235;
      real_t tmp_98 = tmp_19*(tmp_95 + tmp_96 + tmp_97 - 3.0);
      real_t tmp_99 = tmp_6*tmp_98;
      real_t tmp_100 = tmp_25*tmp_98;
      real_t tmp_101 = tmp_27*tmp_98;
      real_t tmp_102 = 0.5*tmp_100 + 0.5*tmp_101 + 0.5*tmp_99;
      real_t tmp_103 = 2*tmp_102;
      real_t tmp_104 = tmp_31*tmp_98;
      real_t tmp_105 = tmp_33*tmp_98;
      real_t tmp_106 = tmp_35*tmp_98;
      real_t tmp_107 = 0.5*tmp_104 + 0.5*tmp_105 + 0.5*tmp_106;
      real_t tmp_108 = 2*tmp_107;
      real_t tmp_109 = 1.0*tmp_98;
      real_t tmp_110 = tmp_109*tmp_39 + tmp_109*tmp_41 + tmp_109*tmp_42;
      real_t tmp_111 = 2.0*tmp_98;
      real_t tmp_112 = 0.041666666666666657*tmp_57;
      real_t tmp_113 = tmp_19*tmp_42;
      real_t tmp_114 = 2.0*tmp_20 - 2.0;
      real_t tmp_115 = tmp_114*tmp_19;
      real_t tmp_116 = 2.0*tmp_59 - 2.0;
      real_t tmp_117 = tmp_116*tmp_19;
      real_t tmp_118 = 2.0*tmp_77 - 2.0;
      real_t tmp_119 = tmp_118*tmp_19;
      real_t tmp_120 = 2.0*tmp_95 - 2.0;
      real_t tmp_121 = tmp_120*tmp_19;
      real_t tmp_122 = tmp_19*tmp_41;
      real_t tmp_123 = 2.0*tmp_21 - 2.0;
      real_t tmp_124 = tmp_123*tmp_19;
      real_t tmp_125 = 2.0*tmp_60 - 2.0;
      real_t tmp_126 = tmp_125*tmp_19;
      real_t tmp_127 = 2.0*tmp_78 - 2.0;
      real_t tmp_128 = tmp_127*tmp_19;
      real_t tmp_129 = 2.0*tmp_96 - 2.0;
      real_t tmp_130 = tmp_129*tmp_19;
      real_t tmp_131 = tmp_19*tmp_39;
      real_t tmp_132 = 2.0*tmp_22 - 2.0;
      real_t tmp_133 = tmp_132*tmp_19;
      real_t tmp_134 = 2.0*tmp_61 - 2.0;
      real_t tmp_135 = tmp_134*tmp_19;
      real_t tmp_136 = 2.0*tmp_79 - 2.0;
      real_t tmp_137 = tmp_136*tmp_19;
      real_t tmp_138 = 2.0*tmp_97 - 2.0;
      real_t tmp_139 = tmp_138*tmp_19;
      real_t tmp_140 = 1.1055728090000847;
      real_t tmp_141 = tmp_131*tmp_140;
      real_t tmp_142 = 4.6832815729997463;
      real_t tmp_143 = tmp_122*tmp_142;
      real_t tmp_144 = tmp_19*tmp_21;
      real_t tmp_145 = tmp_144*tmp_6;
      real_t tmp_146 = tmp_19*tmp_22;
      real_t tmp_147 = tmp_146*tmp_25;
      real_t tmp_148 = tmp_144*tmp_31;
      real_t tmp_149 = tmp_146*tmp_33;
      real_t tmp_150 = 4.6832815729997463;
      real_t tmp_151 = tmp_131*tmp_150;
      real_t tmp_152 = 1.1055728090000847;
      real_t tmp_153 = tmp_122*tmp_152;
      real_t tmp_154 = tmp_19*tmp_60;
      real_t tmp_155 = tmp_154*tmp_6;
      real_t tmp_156 = tmp_19*tmp_61;
      real_t tmp_157 = tmp_156*tmp_25;
      real_t tmp_158 = tmp_154*tmp_31;
      real_t tmp_159 = tmp_156*tmp_33;
      real_t tmp_160 = 1.1055728090000847;
      real_t tmp_161 = tmp_131*tmp_160;
      real_t tmp_162 = 1.1055728090000847;
      real_t tmp_163 = tmp_122*tmp_162;
      real_t tmp_164 = tmp_19*tmp_78;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = tmp_19*tmp_79;
      real_t tmp_167 = tmp_166*tmp_25;
      real_t tmp_168 = tmp_164*tmp_31;
      real_t tmp_169 = tmp_166*tmp_33;
      real_t tmp_170 = 1.1055728090000847;
      real_t tmp_171 = tmp_131*tmp_170;
      real_t tmp_172 = 1.1055728090000847;
      real_t tmp_173 = tmp_122*tmp_172;
      real_t tmp_174 = tmp_19*tmp_96;
      real_t tmp_175 = tmp_174*tmp_6;
      real_t tmp_176 = tmp_19*tmp_97;
      real_t tmp_177 = tmp_176*tmp_25;
      real_t tmp_178 = tmp_174*tmp_31;
      real_t tmp_179 = tmp_176*tmp_33;
      real_t tmp_180 = 1.1055728090000847;
      real_t tmp_181 = tmp_131*tmp_180;
      real_t tmp_182 = tmp_113*tmp_142;
      real_t tmp_183 = tmp_19*tmp_20;
      real_t tmp_184 = tmp_183*tmp_6;
      real_t tmp_185 = tmp_146*tmp_27;
      real_t tmp_186 = tmp_183*tmp_31;
      real_t tmp_187 = tmp_146*tmp_35;
      real_t tmp_188 = 1.1055728090000847;
      real_t tmp_189 = tmp_131*tmp_188;
      real_t tmp_190 = tmp_113*tmp_152;
      real_t tmp_191 = tmp_19*tmp_59;
      real_t tmp_192 = tmp_191*tmp_6;
      real_t tmp_193 = tmp_156*tmp_27;
      real_t tmp_194 = tmp_191*tmp_31;
      real_t tmp_195 = tmp_156*tmp_35;
      real_t tmp_196 = 4.6832815729997463;
      real_t tmp_197 = tmp_131*tmp_196;
      real_t tmp_198 = tmp_113*tmp_162;
      real_t tmp_199 = tmp_19*tmp_77;
      real_t tmp_200 = tmp_199*tmp_6;
      real_t tmp_201 = tmp_166*tmp_27;
      real_t tmp_202 = tmp_199*tmp_31;
      real_t tmp_203 = tmp_166*tmp_35;
      real_t tmp_204 = 1.1055728090000847;
      real_t tmp_205 = tmp_131*tmp_204;
      real_t tmp_206 = tmp_113*tmp_172;
      real_t tmp_207 = tmp_19*tmp_95;
      real_t tmp_208 = tmp_207*tmp_6;
      real_t tmp_209 = tmp_176*tmp_27;
      real_t tmp_210 = tmp_207*tmp_31;
      real_t tmp_211 = tmp_176*tmp_35;
      real_t tmp_212 = tmp_122*tmp_180;
      real_t tmp_213 = tmp_113*tmp_140;
      real_t tmp_214 = tmp_183*tmp_25;
      real_t tmp_215 = tmp_144*tmp_27;
      real_t tmp_216 = tmp_183*tmp_33;
      real_t tmp_217 = tmp_144*tmp_35;
      real_t tmp_218 = tmp_122*tmp_188;
      real_t tmp_219 = tmp_113*tmp_150;
      real_t tmp_220 = tmp_191*tmp_25;
      real_t tmp_221 = tmp_154*tmp_27;
      real_t tmp_222 = tmp_191*tmp_33;
      real_t tmp_223 = tmp_154*tmp_35;
      real_t tmp_224 = tmp_122*tmp_196;
      real_t tmp_225 = tmp_113*tmp_160;
      real_t tmp_226 = tmp_199*tmp_25;
      real_t tmp_227 = tmp_164*tmp_27;
      real_t tmp_228 = tmp_199*tmp_33;
      real_t tmp_229 = tmp_164*tmp_35;
      real_t tmp_230 = tmp_122*tmp_204;
      real_t tmp_231 = tmp_113*tmp_170;
      real_t tmp_232 = tmp_207*tmp_25;
      real_t tmp_233 = tmp_174*tmp_27;
      real_t tmp_234 = tmp_207*tmp_33;
      real_t tmp_235 = tmp_174*tmp_35;
      real_t tmp_236 = -tmp_21;
      real_t tmp_237 = 4.0 - tmp_20;
      real_t tmp_238 = tmp_19*(-tmp_142 + tmp_236 + tmp_237);
      real_t tmp_239 = 2.0*tmp_39;
      real_t tmp_240 = -tmp_60;
      real_t tmp_241 = 4.0 - tmp_59;
      real_t tmp_242 = tmp_19*(-tmp_152 + tmp_240 + tmp_241);
      real_t tmp_243 = -tmp_78;
      real_t tmp_244 = 4.0 - tmp_77;
      real_t tmp_245 = tmp_19*(-tmp_162 + tmp_243 + tmp_244);
      real_t tmp_246 = -tmp_96;
      real_t tmp_247 = 4.0 - tmp_95;
      real_t tmp_248 = tmp_19*(-tmp_172 + tmp_246 + tmp_247);
      real_t tmp_249 = -tmp_22;
      real_t tmp_250 = tmp_19*(-tmp_140 + tmp_237 + tmp_249);
      real_t tmp_251 = 2.0*tmp_41;
      real_t tmp_252 = -tmp_61;
      real_t tmp_253 = tmp_19*(-tmp_150 + tmp_241 + tmp_252);
      real_t tmp_254 = -tmp_79;
      real_t tmp_255 = tmp_19*(-tmp_160 + tmp_244 + tmp_254);
      real_t tmp_256 = -tmp_97;
      real_t tmp_257 = tmp_19*(-tmp_170 + tmp_247 + tmp_256);
      real_t tmp_258 = tmp_19*(-tmp_180 + tmp_236 + tmp_249 + 4.0);
      real_t tmp_259 = 2.0*tmp_42;
      real_t tmp_260 = tmp_19*(-tmp_188 + tmp_240 + tmp_252 + 4.0);
      real_t tmp_261 = tmp_19*(-tmp_196 + tmp_243 + tmp_254 + 4.0);
      real_t tmp_262 = tmp_19*(-tmp_204 + tmp_246 + tmp_256 + 4.0);
      real_t a_0_0 = tmp_112*(tmp_103*(tmp_100 + tmp_101 + tmp_99) + tmp_108*(tmp_104 + tmp_105 + tmp_106) + tmp_110*(tmp_111*tmp_39 + tmp_111*tmp_41 + tmp_111*tmp_42)) + tmp_58*(tmp_30*(tmp_24 + tmp_26 + tmp_28) + tmp_38*(tmp_32 + tmp_34 + tmp_36) + tmp_43*(tmp_39*tmp_44 + tmp_41*tmp_44 + tmp_42*tmp_44)) + tmp_76*(tmp_67*(tmp_63 + tmp_64 + tmp_65) + tmp_72*(tmp_68 + tmp_69 + tmp_70) + tmp_74*(tmp_39*tmp_75 + tmp_41*tmp_75 + tmp_42*tmp_75)) + tmp_94*(tmp_85*(tmp_81 + tmp_82 + tmp_83) + tmp_90*(tmp_86 + tmp_87 + tmp_88) + tmp_92*(tmp_39*tmp_93 + tmp_41*tmp_93 + tmp_42*tmp_93));
      real_t a_0_1 = tmp_112*(tmp_102*tmp_121*tmp_27 + tmp_107*tmp_121*tmp_35 + tmp_110*tmp_113*tmp_120) + tmp_58*(tmp_113*tmp_114*tmp_43 + tmp_115*tmp_27*tmp_29 + tmp_115*tmp_35*tmp_37) + tmp_76*(tmp_113*tmp_116*tmp_74 + tmp_117*tmp_27*tmp_66 + tmp_117*tmp_35*tmp_71) + tmp_94*(tmp_113*tmp_118*tmp_92 + tmp_119*tmp_27*tmp_84 + tmp_119*tmp_35*tmp_89);
      real_t a_0_2 = tmp_112*(tmp_102*tmp_130*tmp_25 + tmp_107*tmp_130*tmp_33 + tmp_110*tmp_122*tmp_129) + tmp_58*(tmp_122*tmp_123*tmp_43 + tmp_124*tmp_25*tmp_29 + tmp_124*tmp_33*tmp_37) + tmp_76*(tmp_122*tmp_125*tmp_74 + tmp_126*tmp_25*tmp_66 + tmp_126*tmp_33*tmp_71) + tmp_94*(tmp_122*tmp_127*tmp_92 + tmp_128*tmp_25*tmp_84 + tmp_128*tmp_33*tmp_89);
      real_t a_0_3 = tmp_112*(tmp_102*tmp_139*tmp_6 + tmp_107*tmp_139*tmp_31 + tmp_110*tmp_131*tmp_138) + tmp_58*(tmp_131*tmp_132*tmp_43 + tmp_133*tmp_29*tmp_6 + tmp_133*tmp_31*tmp_37) + tmp_76*(tmp_131*tmp_134*tmp_74 + tmp_135*tmp_31*tmp_71 + tmp_135*tmp_6*tmp_66) + tmp_94*(tmp_131*tmp_136*tmp_92 + tmp_137*tmp_31*tmp_89 + tmp_137*tmp_6*tmp_84);
      real_t a_0_4 = tmp_112*(tmp_103*(tmp_175 + tmp_177) + tmp_108*(tmp_178 + tmp_179) + tmp_110*(tmp_171 + tmp_173)) + tmp_58*(tmp_30*(tmp_145 + tmp_147) + tmp_38*(tmp_148 + tmp_149) + tmp_43*(tmp_141 + tmp_143)) + tmp_76*(tmp_67*(tmp_155 + tmp_157) + tmp_72*(tmp_158 + tmp_159) + tmp_74*(tmp_151 + tmp_153)) + tmp_94*(tmp_85*(tmp_165 + tmp_167) + tmp_90*(tmp_168 + tmp_169) + tmp_92*(tmp_161 + tmp_163));
      real_t a_0_5 = tmp_112*(tmp_103*(tmp_208 + tmp_209) + tmp_108*(tmp_210 + tmp_211) + tmp_110*(tmp_205 + tmp_206)) + tmp_58*(tmp_30*(tmp_184 + tmp_185) + tmp_38*(tmp_186 + tmp_187) + tmp_43*(tmp_181 + tmp_182)) + tmp_76*(tmp_67*(tmp_192 + tmp_193) + tmp_72*(tmp_194 + tmp_195) + tmp_74*(tmp_189 + tmp_190)) + tmp_94*(tmp_85*(tmp_200 + tmp_201) + tmp_90*(tmp_202 + tmp_203) + tmp_92*(tmp_197 + tmp_198));
      real_t a_0_6 = tmp_112*(tmp_103*(tmp_232 + tmp_233) + tmp_108*(tmp_234 + tmp_235) + tmp_110*(tmp_230 + tmp_231)) + tmp_58*(tmp_30*(tmp_214 + tmp_215) + tmp_38*(tmp_216 + tmp_217) + tmp_43*(tmp_212 + tmp_213)) + tmp_76*(tmp_67*(tmp_220 + tmp_221) + tmp_72*(tmp_222 + tmp_223) + tmp_74*(tmp_218 + tmp_219)) + tmp_94*(tmp_85*(tmp_226 + tmp_227) + tmp_90*(tmp_228 + tmp_229) + tmp_92*(tmp_224 + tmp_225));
      real_t a_0_7 = tmp_112*(tmp_103*(-tmp_177 - tmp_209 + tmp_248*tmp_6) + tmp_108*(-tmp_179 - tmp_211 + tmp_248*tmp_31) + tmp_110*(-tmp_173 - tmp_206 + tmp_239*tmp_248)) + tmp_58*(tmp_30*(-tmp_147 - tmp_185 + tmp_238*tmp_6) + tmp_38*(-tmp_149 - tmp_187 + tmp_238*tmp_31) + tmp_43*(-tmp_143 - tmp_182 + tmp_238*tmp_239)) + tmp_76*(tmp_67*(-tmp_157 - tmp_193 + tmp_242*tmp_6) + tmp_72*(-tmp_159 - tmp_195 + tmp_242*tmp_31) + tmp_74*(-tmp_153 - tmp_190 + tmp_239*tmp_242)) + tmp_94*(tmp_85*(-tmp_167 - tmp_201 + tmp_245*tmp_6) + tmp_90*(-tmp_169 - tmp_203 + tmp_245*tmp_31) + tmp_92*(-tmp_163 - tmp_198 + tmp_239*tmp_245));
      real_t a_0_8 = tmp_112*(tmp_103*(-tmp_175 - tmp_233 + tmp_25*tmp_257) + tmp_108*(-tmp_178 - tmp_235 + tmp_257*tmp_33) + tmp_110*(-tmp_171 - tmp_231 + tmp_251*tmp_257)) + tmp_58*(tmp_30*(-tmp_145 - tmp_215 + tmp_25*tmp_250) + tmp_38*(-tmp_148 - tmp_217 + tmp_250*tmp_33) + tmp_43*(-tmp_141 - tmp_213 + tmp_250*tmp_251)) + tmp_76*(tmp_67*(-tmp_155 - tmp_221 + tmp_25*tmp_253) + tmp_72*(-tmp_158 - tmp_223 + tmp_253*tmp_33) + tmp_74*(-tmp_151 - tmp_219 + tmp_251*tmp_253)) + tmp_94*(tmp_85*(-tmp_165 - tmp_227 + tmp_25*tmp_255) + tmp_90*(-tmp_168 - tmp_229 + tmp_255*tmp_33) + tmp_92*(-tmp_161 - tmp_225 + tmp_251*tmp_255));
      real_t a_0_9 = tmp_112*(tmp_103*(-tmp_208 - tmp_232 + tmp_262*tmp_27) + tmp_108*(-tmp_210 - tmp_234 + tmp_262*tmp_35) + tmp_110*(-tmp_205 - tmp_230 + tmp_259*tmp_262)) + tmp_58*(tmp_30*(-tmp_184 - tmp_214 + tmp_258*tmp_27) + tmp_38*(-tmp_186 - tmp_216 + tmp_258*tmp_35) + tmp_43*(-tmp_181 - tmp_212 + tmp_258*tmp_259)) + tmp_76*(tmp_67*(-tmp_192 - tmp_220 + tmp_260*tmp_27) + tmp_72*(-tmp_194 - tmp_222 + tmp_260*tmp_35) + tmp_74*(-tmp_189 - tmp_218 + tmp_259*tmp_260)) + tmp_94*(tmp_85*(-tmp_200 - tmp_226 + tmp_261*tmp_27) + tmp_90*(-tmp_202 - tmp_228 + tmp_261*tmp_35) + tmp_92*(-tmp_197 - tmp_224 + tmp_259*tmp_261));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

} // namespace forms
} // namespace hyteg
