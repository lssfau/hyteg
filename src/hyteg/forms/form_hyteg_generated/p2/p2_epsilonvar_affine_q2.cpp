/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.6
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsilonvar_affine_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_epsilonvar_0_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = 1.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_13 = 1.0*tmp_8;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_13*tmp_14 + tmp_13*tmp_3;
      real_t tmp_16 = 2*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_5*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_10*tmp_21;
      real_t tmp_24 = 1.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_25 = 1.0*tmp_21;
      real_t tmp_26 = tmp_14*tmp_25 + tmp_25*tmp_3;
      real_t tmp_27 = 2*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_28 = 0.16666666666666666*tmp_17;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = tmp_5*(tmp_29 + tmp_30 - 3);
      real_t tmp_32 = tmp_1*tmp_31;
      real_t tmp_33 = tmp_10*tmp_31;
      real_t tmp_34 = 1.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_35 = 1.0*tmp_31;
      real_t tmp_36 = tmp_14*tmp_35 + tmp_3*tmp_35;
      real_t tmp_37 = 2*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_38 = 0.16666666666666666*tmp_17;
      real_t tmp_39 = tmp_6 - 1;
      real_t tmp_40 = tmp_10*tmp_39;
      real_t tmp_41 = 0.5*tmp_11 + 0.5*tmp_9;
      real_t tmp_42 = 2.0*tmp_5;
      real_t tmp_43 = Scalar_Variable_Coefficient_2D_0_0*tmp_42;
      real_t tmp_44 = tmp_41*tmp_43;
      real_t tmp_45 = tmp_15*tmp_43;
      real_t tmp_46 = tmp_3*tmp_39;
      real_t tmp_47 = 0.5*tmp_22 + 0.5*tmp_23;
      real_t tmp_48 = tmp_10*tmp_42;
      real_t tmp_49 = tmp_19 - 1;
      real_t tmp_50 = Scalar_Variable_Coefficient_2D_1_0*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_3*tmp_42;
      real_t tmp_53 = tmp_50*tmp_52;
      real_t tmp_54 = 0.5*tmp_32 + 0.5*tmp_33;
      real_t tmp_55 = tmp_29 - 1;
      real_t tmp_56 = Scalar_Variable_Coefficient_2D_2_0*tmp_55;
      real_t tmp_57 = tmp_48*tmp_56;
      real_t tmp_58 = tmp_52*tmp_56;
      real_t tmp_59 = tmp_18*(tmp_40*tmp_44 + tmp_45*tmp_46) + tmp_28*(tmp_26*tmp_53 + tmp_47*tmp_51) + tmp_38*(tmp_36*tmp_58 + tmp_54*tmp_57);
      real_t tmp_60 = tmp_7 - 1;
      real_t tmp_61 = tmp_1*tmp_60;
      real_t tmp_62 = tmp_14*tmp_60;
      real_t tmp_63 = tmp_20 - 1;
      real_t tmp_64 = Scalar_Variable_Coefficient_2D_1_0*tmp_63;
      real_t tmp_65 = tmp_1*tmp_42;
      real_t tmp_66 = tmp_64*tmp_65;
      real_t tmp_67 = tmp_14*tmp_42;
      real_t tmp_68 = tmp_64*tmp_67;
      real_t tmp_69 = tmp_30 - 1;
      real_t tmp_70 = Scalar_Variable_Coefficient_2D_2_0*tmp_69;
      real_t tmp_71 = tmp_65*tmp_70;
      real_t tmp_72 = tmp_67*tmp_70;
      real_t tmp_73 = tmp_18*(tmp_44*tmp_61 + tmp_45*tmp_62) + tmp_28*(tmp_26*tmp_68 + tmp_47*tmp_66) + tmp_38*(tmp_36*tmp_72 + tmp_54*tmp_71);
      real_t tmp_74 = 0.16666666666666666*tmp_5;
      real_t tmp_75 = tmp_1*tmp_74;
      real_t tmp_76 = 2.0*tmp_75;
      real_t tmp_77 = 0.66666666666666663*tmp_5;
      real_t tmp_78 = tmp_10*tmp_77;
      real_t tmp_79 = 2.0*tmp_78;
      real_t tmp_80 = tmp_76 + tmp_79;
      real_t tmp_81 = 4*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_82 = tmp_41*tmp_81;
      real_t tmp_83 = tmp_14*tmp_74;
      real_t tmp_84 = 4.0*tmp_83;
      real_t tmp_85 = tmp_3*tmp_77;
      real_t tmp_86 = 4.0*tmp_85;
      real_t tmp_87 = tmp_84 + tmp_86;
      real_t tmp_88 = tmp_15*tmp_16;
      real_t tmp_89 = 0.66666666666666663*tmp_5;
      real_t tmp_90 = tmp_1*tmp_89;
      real_t tmp_91 = 2.0*tmp_90;
      real_t tmp_92 = 0.16666666666666666*tmp_5;
      real_t tmp_93 = tmp_10*tmp_92;
      real_t tmp_94 = 2.0*tmp_93;
      real_t tmp_95 = tmp_91 + tmp_94;
      real_t tmp_96 = 4*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_97 = tmp_47*tmp_96;
      real_t tmp_98 = tmp_14*tmp_89;
      real_t tmp_99 = 4.0*tmp_98;
      real_t tmp_100 = tmp_3*tmp_92;
      real_t tmp_101 = 4.0*tmp_100;
      real_t tmp_102 = tmp_101 + tmp_99;
      real_t tmp_103 = tmp_26*tmp_27;
      real_t tmp_104 = 0.16666666666666666*tmp_5;
      real_t tmp_105 = tmp_1*tmp_104;
      real_t tmp_106 = 2.0*tmp_105;
      real_t tmp_107 = 0.16666666666666666*tmp_5;
      real_t tmp_108 = tmp_10*tmp_107;
      real_t tmp_109 = 2.0*tmp_108;
      real_t tmp_110 = tmp_106 + tmp_109;
      real_t tmp_111 = 4*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_112 = tmp_111*tmp_54;
      real_t tmp_113 = tmp_104*tmp_14;
      real_t tmp_114 = 4.0*tmp_113;
      real_t tmp_115 = tmp_107*tmp_3;
      real_t tmp_116 = 4.0*tmp_115;
      real_t tmp_117 = tmp_114 + tmp_116;
      real_t tmp_118 = tmp_36*tmp_37;
      real_t tmp_119 = tmp_18*(tmp_80*tmp_82 + tmp_87*tmp_88) + tmp_28*(tmp_102*tmp_103 + tmp_95*tmp_97) + tmp_38*(tmp_110*tmp_112 + tmp_117*tmp_118);
      real_t tmp_120 = tmp_5*(-tmp_6 - 1.333333333333333);
      real_t tmp_121 = 0.5*tmp_1;
      real_t tmp_122 = tmp_120*tmp_121 - tmp_79;
      real_t tmp_123 = 1.0*tmp_14;
      real_t tmp_124 = tmp_120*tmp_123 - tmp_86;
      real_t tmp_125 = tmp_5*(2.666666666666667 - tmp_19);
      real_t tmp_126 = tmp_121*tmp_125 - tmp_94;
      real_t tmp_127 = -tmp_101 + tmp_123*tmp_125;
      real_t tmp_128 = tmp_5*(2.666666666666667 - tmp_29);
      real_t tmp_129 = -tmp_109 + tmp_121*tmp_128;
      real_t tmp_130 = -tmp_116 + tmp_123*tmp_128;
      real_t tmp_131 = tmp_18*(tmp_122*tmp_82 + tmp_124*tmp_88) + tmp_28*(tmp_103*tmp_127 + tmp_126*tmp_97) + tmp_38*(tmp_112*tmp_129 + tmp_118*tmp_130);
      real_t tmp_132 = tmp_5*(2.666666666666667 - tmp_7);
      real_t tmp_133 = 0.5*tmp_10;
      real_t tmp_134 = tmp_132*tmp_133 - tmp_76;
      real_t tmp_135 = 1.0*tmp_3;
      real_t tmp_136 = tmp_132*tmp_135 - tmp_84;
      real_t tmp_137 = tmp_5*(-tmp_20 - 1.333333333333333);
      real_t tmp_138 = tmp_133*tmp_137 - tmp_91;
      real_t tmp_139 = tmp_135*tmp_137 - tmp_99;
      real_t tmp_140 = tmp_5*(2.666666666666667 - tmp_30);
      real_t tmp_141 = -tmp_106 + tmp_133*tmp_140;
      real_t tmp_142 = -tmp_114 + tmp_135*tmp_140;
      real_t tmp_143 = tmp_18*(tmp_134*tmp_82 + tmp_136*tmp_88) + tmp_28*(tmp_103*tmp_139 + tmp_138*tmp_97) + tmp_38*(tmp_112*tmp_141 + tmp_118*tmp_142);
      real_t tmp_144 = (tmp_10*tmp_10);
      real_t tmp_145 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_146 = tmp_145*(tmp_39*tmp_39);
      real_t tmp_147 = 2.0*(tmp_3*tmp_3);
      real_t tmp_148 = tmp_145*(tmp_49*tmp_49);
      real_t tmp_149 = tmp_145*(tmp_55*tmp_55);
      real_t tmp_150 = 2.0*tmp_145;
      real_t tmp_151 = tmp_1*tmp_10*tmp_145;
      real_t tmp_152 = tmp_14*tmp_150*tmp_3;
      real_t tmp_153 = tmp_18*(Scalar_Variable_Coefficient_2D_0_0*tmp_150*tmp_46*tmp_62 + tmp_12*tmp_145*tmp_40*tmp_61) + tmp_28*(tmp_151*tmp_24*tmp_49*tmp_63 + tmp_152*tmp_50*tmp_63) + tmp_38*(tmp_151*tmp_34*tmp_55*tmp_69 + tmp_152*tmp_56*tmp_69);
      real_t tmp_154 = tmp_40*tmp_43;
      real_t tmp_155 = tmp_43*tmp_46;
      real_t tmp_156 = tmp_18*(tmp_154*tmp_80 + tmp_155*tmp_87) + tmp_28*(tmp_102*tmp_53 + tmp_51*tmp_95) + tmp_38*(tmp_110*tmp_57 + tmp_117*tmp_58);
      real_t tmp_157 = tmp_18*(tmp_122*tmp_154 + tmp_124*tmp_155) + tmp_28*(tmp_126*tmp_51 + tmp_127*tmp_53) + tmp_38*(tmp_129*tmp_57 + tmp_130*tmp_58);
      real_t tmp_158 = tmp_18*(tmp_134*tmp_154 + tmp_136*tmp_155) + tmp_28*(tmp_138*tmp_51 + tmp_139*tmp_53) + tmp_38*(tmp_141*tmp_57 + tmp_142*tmp_58);
      real_t tmp_159 = (tmp_1*tmp_1);
      real_t tmp_160 = tmp_145*(tmp_60*tmp_60);
      real_t tmp_161 = 2.0*(tmp_14*tmp_14);
      real_t tmp_162 = tmp_145*(tmp_63*tmp_63);
      real_t tmp_163 = tmp_145*(tmp_69*tmp_69);
      real_t tmp_164 = tmp_43*tmp_61;
      real_t tmp_165 = tmp_43*tmp_62;
      real_t tmp_166 = tmp_18*(tmp_164*tmp_80 + tmp_165*tmp_87) + tmp_28*(tmp_102*tmp_68 + tmp_66*tmp_95) + tmp_38*(tmp_110*tmp_71 + tmp_117*tmp_72);
      real_t tmp_167 = tmp_18*(tmp_122*tmp_164 + tmp_124*tmp_165) + tmp_28*(tmp_126*tmp_66 + tmp_127*tmp_68) + tmp_38*(tmp_129*tmp_71 + tmp_130*tmp_72);
      real_t tmp_168 = tmp_18*(tmp_134*tmp_164 + tmp_136*tmp_165) + tmp_28*(tmp_138*tmp_66 + tmp_139*tmp_68) + tmp_38*(tmp_141*tmp_71 + tmp_142*tmp_72);
      real_t tmp_169 = 16.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_170 = 32.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_171 = 16.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_172 = 32.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_173 = 16.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_174 = 32.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_175 = tmp_80*tmp_81;
      real_t tmp_176 = tmp_16*tmp_87;
      real_t tmp_177 = tmp_95*tmp_96;
      real_t tmp_178 = tmp_102*tmp_27;
      real_t tmp_179 = tmp_110*tmp_111;
      real_t tmp_180 = tmp_117*tmp_37;
      real_t tmp_181 = tmp_18*(tmp_122*tmp_175 + tmp_124*tmp_176) + tmp_28*(tmp_126*tmp_177 + tmp_127*tmp_178) + tmp_38*(tmp_129*tmp_179 + tmp_130*tmp_180);
      real_t tmp_182 = tmp_18*(tmp_134*tmp_175 + tmp_136*tmp_176) + tmp_28*(tmp_138*tmp_177 + tmp_139*tmp_178) + tmp_38*(tmp_141*tmp_179 + tmp_142*tmp_180);
      real_t tmp_183 = 0.25*tmp_120;
      real_t tmp_184 = 0.25*tmp_125;
      real_t tmp_185 = 0.25*tmp_128;
      real_t tmp_186 = tmp_18*(tmp_122*tmp_134*tmp_81 + tmp_124*tmp_136*tmp_16) + tmp_28*(tmp_126*tmp_138*tmp_96 + tmp_127*tmp_139*tmp_27) + tmp_38*(tmp_111*tmp_129*tmp_141 + tmp_130*tmp_142*tmp_37);
      real_t tmp_187 = 0.25*tmp_132;
      real_t tmp_188 = 0.25*tmp_137;
      real_t tmp_189 = 0.25*tmp_140;
      real_t a_0_0 = tmp_18*(tmp_12*((tmp_11 + tmp_9)*(tmp_11 + tmp_9)) + (tmp_15*tmp_15)*tmp_16) + tmp_28*(tmp_24*((tmp_22 + tmp_23)*(tmp_22 + tmp_23)) + (tmp_26*tmp_26)*tmp_27) + tmp_38*(tmp_34*((tmp_32 + tmp_33)*(tmp_32 + tmp_33)) + (tmp_36*tmp_36)*tmp_37);
      real_t a_0_1 = tmp_59;
      real_t a_0_2 = tmp_73;
      real_t a_0_3 = tmp_119;
      real_t a_0_4 = tmp_131;
      real_t a_0_5 = tmp_143;
      real_t a_1_0 = tmp_59;
      real_t a_1_1 = tmp_18*(Scalar_Variable_Coefficient_2D_0_0*tmp_146*tmp_147 + tmp_12*tmp_144*tmp_146) + tmp_28*(Scalar_Variable_Coefficient_2D_1_0*tmp_147*tmp_148 + tmp_144*tmp_148*tmp_24) + tmp_38*(Scalar_Variable_Coefficient_2D_2_0*tmp_147*tmp_149 + tmp_144*tmp_149*tmp_34);
      real_t a_1_2 = tmp_153;
      real_t a_1_3 = tmp_156;
      real_t a_1_4 = tmp_157;
      real_t a_1_5 = tmp_158;
      real_t a_2_0 = tmp_73;
      real_t a_2_1 = tmp_153;
      real_t a_2_2 = tmp_18*(Scalar_Variable_Coefficient_2D_0_0*tmp_160*tmp_161 + tmp_12*tmp_159*tmp_160) + tmp_28*(Scalar_Variable_Coefficient_2D_1_0*tmp_161*tmp_162 + tmp_159*tmp_162*tmp_24) + tmp_38*(Scalar_Variable_Coefficient_2D_2_0*tmp_161*tmp_163 + tmp_159*tmp_163*tmp_34);
      real_t a_2_3 = tmp_166;
      real_t a_2_4 = tmp_167;
      real_t a_2_5 = tmp_168;
      real_t a_3_0 = tmp_119;
      real_t a_3_1 = tmp_156;
      real_t a_3_2 = tmp_166;
      real_t a_3_3 = tmp_18*(tmp_169*((tmp_75 + tmp_78)*(tmp_75 + tmp_78)) + tmp_170*((tmp_83 + tmp_85)*(tmp_83 + tmp_85))) + tmp_28*(tmp_171*((tmp_90 + tmp_93)*(tmp_90 + tmp_93)) + tmp_172*((tmp_100 + tmp_98)*(tmp_100 + tmp_98))) + tmp_38*(tmp_173*((tmp_105 + tmp_108)*(tmp_105 + tmp_108)) + tmp_174*((tmp_113 + tmp_115)*(tmp_113 + tmp_115)));
      real_t a_3_4 = tmp_181;
      real_t a_3_5 = tmp_182;
      real_t a_4_0 = tmp_131;
      real_t a_4_1 = tmp_157;
      real_t a_4_2 = tmp_167;
      real_t a_4_3 = tmp_181;
      real_t a_4_4 = tmp_18*(tmp_169*((tmp_1*tmp_183 - tmp_78)*(tmp_1*tmp_183 - tmp_78)) + tmp_170*((tmp_14*tmp_183 - tmp_85)*(tmp_14*tmp_183 - tmp_85))) + tmp_28*(tmp_171*((tmp_1*tmp_184 - tmp_93)*(tmp_1*tmp_184 - tmp_93)) + tmp_172*((-tmp_100 + tmp_14*tmp_184)*(-tmp_100 + tmp_14*tmp_184))) + tmp_38*(tmp_173*((tmp_1*tmp_185 - tmp_108)*(tmp_1*tmp_185 - tmp_108)) + tmp_174*((-tmp_115 + tmp_14*tmp_185)*(-tmp_115 + tmp_14*tmp_185)));
      real_t a_4_5 = tmp_186;
      real_t a_5_0 = tmp_143;
      real_t a_5_1 = tmp_158;
      real_t a_5_2 = tmp_168;
      real_t a_5_3 = tmp_182;
      real_t a_5_4 = tmp_186;
      real_t a_5_5 = tmp_18*(tmp_169*((tmp_10*tmp_187 - tmp_75)*(tmp_10*tmp_187 - tmp_75)) + tmp_170*((tmp_187*tmp_3 - tmp_83)*(tmp_187*tmp_3 - tmp_83))) + tmp_28*(tmp_171*((tmp_10*tmp_188 - tmp_90)*(tmp_10*tmp_188 - tmp_90)) + tmp_172*((tmp_188*tmp_3 - tmp_98)*(tmp_188*tmp_3 - tmp_98))) + tmp_38*(tmp_173*((tmp_10*tmp_189 - tmp_105)*(tmp_10*tmp_189 - tmp_105)) + tmp_174*((-tmp_113 + tmp_189*tmp_3)*(-tmp_113 + tmp_189*tmp_3)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsilonvar_0_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = 1.0*tmp_7;
      real_t tmp_12 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_13 = tmp_11*tmp_12 + tmp_11*tmp_3;
      real_t tmp_14 = 2*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 0.16666666666666666*tmp_15;
      real_t tmp_17 = 2.6666666666666665;
      real_t tmp_18 = 0.66666666666666663;
      real_t tmp_19 = tmp_4*(tmp_17 + tmp_18 - 3);
      real_t tmp_20 = tmp_1*tmp_19;
      real_t tmp_21 = tmp_19*tmp_9;
      real_t tmp_22 = 1.0*tmp_19;
      real_t tmp_23 = tmp_12*tmp_22 + tmp_22*tmp_3;
      real_t tmp_24 = 2*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_25 = 0.16666666666666666*tmp_15;
      real_t tmp_26 = 0.66666666666666663;
      real_t tmp_27 = 0.66666666666666663;
      real_t tmp_28 = tmp_4*(tmp_26 + tmp_27 - 3);
      real_t tmp_29 = tmp_1*tmp_28;
      real_t tmp_30 = tmp_28*tmp_9;
      real_t tmp_31 = 1.0*tmp_28;
      real_t tmp_32 = tmp_12*tmp_31 + tmp_3*tmp_31;
      real_t tmp_33 = 2*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_34 = 0.16666666666666666*tmp_15;
      real_t tmp_35 = tmp_5 - 1;
      real_t tmp_36 = 2.0*tmp_4;
      real_t tmp_37 = tmp_36*tmp_9;
      real_t tmp_38 = Scalar_Variable_Coefficient_2D_0_0*(0.5*tmp_10 + 0.5*tmp_8);
      real_t tmp_39 = tmp_3*tmp_36;
      real_t tmp_40 = Scalar_Variable_Coefficient_2D_0_0*tmp_13;
      real_t tmp_41 = tmp_17 - 1;
      real_t tmp_42 = Scalar_Variable_Coefficient_2D_1_0*(0.5*tmp_20 + 0.5*tmp_21);
      real_t tmp_43 = Scalar_Variable_Coefficient_2D_1_0*tmp_23;
      real_t tmp_44 = tmp_26 - 1;
      real_t tmp_45 = Scalar_Variable_Coefficient_2D_2_0*(0.5*tmp_29 + 0.5*tmp_30);
      real_t tmp_46 = Scalar_Variable_Coefficient_2D_2_0*tmp_32;
      real_t tmp_47 = tmp_6 - 1;
      real_t tmp_48 = tmp_1*tmp_36;
      real_t tmp_49 = tmp_12*tmp_36;
      real_t tmp_50 = tmp_18 - 1;
      real_t tmp_51 = tmp_27 - 1;
      real_t tmp_52 = 0.16666666666666666*tmp_48;
      real_t tmp_53 = 0.66666666666666663*tmp_37;
      real_t tmp_54 = 4*tmp_38;
      real_t tmp_55 = 4.0*tmp_4;
      real_t tmp_56 = tmp_12*tmp_55;
      real_t tmp_57 = 0.16666666666666666*tmp_56;
      real_t tmp_58 = tmp_3*tmp_55;
      real_t tmp_59 = 0.66666666666666663*tmp_58;
      real_t tmp_60 = tmp_13*tmp_14;
      real_t tmp_61 = 0.66666666666666663*tmp_48;
      real_t tmp_62 = 0.16666666666666666*tmp_37;
      real_t tmp_63 = 4*tmp_42;
      real_t tmp_64 = 0.66666666666666663*tmp_56;
      real_t tmp_65 = 0.16666666666666666*tmp_58;
      real_t tmp_66 = tmp_23*tmp_24;
      real_t tmp_67 = 0.16666666666666666*tmp_48;
      real_t tmp_68 = 0.16666666666666666*tmp_37;
      real_t tmp_69 = 4*tmp_45;
      real_t tmp_70 = 0.16666666666666666*tmp_56;
      real_t tmp_71 = 0.16666666666666666*tmp_58;
      real_t tmp_72 = tmp_32*tmp_33;
      real_t tmp_73 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_74 = 0.5*tmp_1;
      real_t tmp_75 = 1.0*tmp_12;
      real_t tmp_76 = tmp_4*(2.666666666666667 - tmp_17);
      real_t tmp_77 = tmp_4*(2.666666666666667 - tmp_26);
      real_t tmp_78 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_79 = 0.5*tmp_9;
      real_t tmp_80 = 1.0*tmp_3;
      real_t tmp_81 = tmp_4*(-tmp_18 - 1.333333333333333);
      real_t tmp_82 = tmp_4*(2.666666666666667 - tmp_27);
      real_t a_0_0 = tmp_16*(1.0*Scalar_Variable_Coefficient_2D_0_0*((tmp_10 + tmp_8)*(tmp_10 + tmp_8)) + (tmp_13*tmp_13)*tmp_14) + tmp_25*(1.0*Scalar_Variable_Coefficient_2D_1_0*((tmp_20 + tmp_21)*(tmp_20 + tmp_21)) + (tmp_23*tmp_23)*tmp_24) + tmp_34*(1.0*Scalar_Variable_Coefficient_2D_2_0*((tmp_29 + tmp_30)*(tmp_29 + tmp_30)) + (tmp_32*tmp_32)*tmp_33);
      real_t a_0_1 = tmp_16*(tmp_35*tmp_37*tmp_38 + tmp_35*tmp_39*tmp_40) + tmp_25*(tmp_37*tmp_41*tmp_42 + tmp_39*tmp_41*tmp_43) + tmp_34*(tmp_37*tmp_44*tmp_45 + tmp_39*tmp_44*tmp_46);
      real_t a_0_2 = tmp_16*(tmp_38*tmp_47*tmp_48 + tmp_40*tmp_47*tmp_49) + tmp_25*(tmp_42*tmp_48*tmp_50 + tmp_43*tmp_49*tmp_50) + tmp_34*(tmp_45*tmp_48*tmp_51 + tmp_46*tmp_49*tmp_51);
      real_t a_0_3 = tmp_16*(tmp_54*(tmp_52 + tmp_53) + tmp_60*(tmp_57 + tmp_59)) + tmp_25*(tmp_63*(tmp_61 + tmp_62) + tmp_66*(tmp_64 + tmp_65)) + tmp_34*(tmp_69*(tmp_67 + tmp_68) + tmp_72*(tmp_70 + tmp_71));
      real_t a_0_4 = tmp_16*(tmp_54*(-tmp_53 + tmp_73*tmp_74) + tmp_60*(-tmp_59 + tmp_73*tmp_75)) + tmp_25*(tmp_63*(-tmp_62 + tmp_74*tmp_76) + tmp_66*(-tmp_65 + tmp_75*tmp_76)) + tmp_34*(tmp_69*(-tmp_68 + tmp_74*tmp_77) + tmp_72*(-tmp_71 + tmp_75*tmp_77));
      real_t a_0_5 = tmp_16*(tmp_54*(-tmp_52 + tmp_78*tmp_79) + tmp_60*(-tmp_57 + tmp_78*tmp_80)) + tmp_25*(tmp_63*(-tmp_61 + tmp_79*tmp_81) + tmp_66*(-tmp_64 + tmp_80*tmp_81)) + tmp_34*(tmp_69*(-tmp_67 + tmp_79*tmp_82) + tmp_72*(-tmp_70 + tmp_80*tmp_82));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsilonvar_0_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = -tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_11*tmp_4;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_1*tmp_8 - tmp_11*tmp_13;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_13*tmp_14 - tmp_4*tmp_8;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_15 - tmp_18;
      real_t tmp_38 = 1.0*tmp_24;
      real_t tmp_39 = tmp_12 - tmp_17;
      real_t tmp_40 = -tmp_16 + tmp_9;
      real_t tmp_41 = tmp_37*tmp_38 + tmp_38*tmp_39 + tmp_38*tmp_40;
      real_t tmp_42 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_43 = p_affine_0_0*p_affine_1_1;
      real_t tmp_44 = p_affine_0_0*p_affine_1_2;
      real_t tmp_45 = p_affine_2_1*p_affine_3_2;
      real_t tmp_46 = p_affine_0_1*p_affine_1_0;
      real_t tmp_47 = p_affine_0_1*p_affine_1_2;
      real_t tmp_48 = p_affine_2_2*p_affine_3_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_0;
      real_t tmp_50 = p_affine_0_2*p_affine_1_1;
      real_t tmp_51 = p_affine_2_0*p_affine_3_1;
      real_t tmp_52 = p_affine_2_2*p_affine_3_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_2;
      real_t tmp_54 = p_affine_2_1*p_affine_3_0;
      real_t tmp_55 = std::abs(p_affine_0_0*tmp_45 - p_affine_0_0*tmp_52 + p_affine_0_1*tmp_48 - p_affine_0_1*tmp_53 + p_affine_0_2*tmp_51 - p_affine_0_2*tmp_54 - p_affine_1_0*tmp_45 + p_affine_1_0*tmp_52 - p_affine_1_1*tmp_48 + p_affine_1_1*tmp_53 - p_affine_1_2*tmp_51 + p_affine_1_2*tmp_54 + p_affine_2_0*tmp_47 - p_affine_2_0*tmp_50 - p_affine_2_1*tmp_44 + p_affine_2_1*tmp_49 + p_affine_2_2*tmp_43 - p_affine_2_2*tmp_46 - p_affine_3_0*tmp_47 + p_affine_3_0*tmp_50 + p_affine_3_1*tmp_44 - p_affine_3_1*tmp_49 - p_affine_3_2*tmp_43 + p_affine_3_2*tmp_46);
      real_t tmp_56 = 0.041666666666666657*tmp_55;
      real_t tmp_57 = 0.55278640450004235;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = tmp_20*(tmp_57 + tmp_58 + tmp_59 - 3.0);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_28*tmp_60;
      real_t tmp_64 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_65 = tmp_31*tmp_60;
      real_t tmp_66 = tmp_33*tmp_60;
      real_t tmp_67 = tmp_35*tmp_60;
      real_t tmp_68 = 1.0*tmp_60;
      real_t tmp_69 = tmp_37*tmp_68 + tmp_39*tmp_68 + tmp_40*tmp_68;
      real_t tmp_70 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_71 = 0.041666666666666657*tmp_55;
      real_t tmp_72 = 2.3416407864998732;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_20*(tmp_72 + tmp_73 + tmp_74 - 3.0);
      real_t tmp_76 = tmp_6*tmp_75;
      real_t tmp_77 = tmp_26*tmp_75;
      real_t tmp_78 = tmp_28*tmp_75;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_80 = tmp_31*tmp_75;
      real_t tmp_81 = tmp_33*tmp_75;
      real_t tmp_82 = tmp_35*tmp_75;
      real_t tmp_83 = 1.0*tmp_75;
      real_t tmp_84 = tmp_37*tmp_83 + tmp_39*tmp_83 + tmp_40*tmp_83;
      real_t tmp_85 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_86 = 0.041666666666666657*tmp_55;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = tmp_20*(tmp_87 + tmp_88 + tmp_89 - 3.0);
      real_t tmp_91 = tmp_6*tmp_90;
      real_t tmp_92 = tmp_26*tmp_90;
      real_t tmp_93 = tmp_28*tmp_90;
      real_t tmp_94 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_95 = tmp_31*tmp_90;
      real_t tmp_96 = tmp_33*tmp_90;
      real_t tmp_97 = tmp_35*tmp_90;
      real_t tmp_98 = 1.0*tmp_90;
      real_t tmp_99 = tmp_37*tmp_98 + tmp_39*tmp_98 + tmp_40*tmp_98;
      real_t tmp_100 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_101 = 0.041666666666666657*tmp_55;
      real_t tmp_102 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_103 = tmp_20*tmp_28;
      real_t tmp_104 = 2.0*tmp_103;
      real_t tmp_105 = tmp_21 - 1.0;
      real_t tmp_106 = Scalar_Variable_Coefficient_3D_0_0*tmp_105;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_109 = tmp_20*tmp_35;
      real_t tmp_110 = 2.0*tmp_106;
      real_t tmp_111 = tmp_109*tmp_110;
      real_t tmp_112 = tmp_20*tmp_40;
      real_t tmp_113 = tmp_110*tmp_112;
      real_t tmp_114 = 0.5*tmp_61 + 0.5*tmp_62 + 0.5*tmp_63;
      real_t tmp_115 = tmp_57 - 1.0;
      real_t tmp_116 = Scalar_Variable_Coefficient_3D_1_0*tmp_115;
      real_t tmp_117 = tmp_104*tmp_116;
      real_t tmp_118 = 0.5*tmp_65 + 0.5*tmp_66 + 0.5*tmp_67;
      real_t tmp_119 = 2.0*tmp_116;
      real_t tmp_120 = tmp_109*tmp_119;
      real_t tmp_121 = tmp_112*tmp_119;
      real_t tmp_122 = 0.5*tmp_76 + 0.5*tmp_77 + 0.5*tmp_78;
      real_t tmp_123 = tmp_72 - 1.0;
      real_t tmp_124 = Scalar_Variable_Coefficient_3D_2_0*tmp_123;
      real_t tmp_125 = tmp_104*tmp_124;
      real_t tmp_126 = 0.5*tmp_80 + 0.5*tmp_81 + 0.5*tmp_82;
      real_t tmp_127 = 2.0*tmp_124;
      real_t tmp_128 = tmp_109*tmp_127;
      real_t tmp_129 = tmp_112*tmp_127;
      real_t tmp_130 = 0.5*tmp_91 + 0.5*tmp_92 + 0.5*tmp_93;
      real_t tmp_131 = tmp_87 - 1.0;
      real_t tmp_132 = Scalar_Variable_Coefficient_3D_3_0*tmp_131;
      real_t tmp_133 = tmp_104*tmp_132;
      real_t tmp_134 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_135 = 2.0*tmp_132;
      real_t tmp_136 = tmp_109*tmp_135;
      real_t tmp_137 = tmp_112*tmp_135;
      real_t tmp_138 = tmp_101*(tmp_130*tmp_133 + tmp_134*tmp_136 + tmp_137*tmp_99) + tmp_56*(tmp_102*tmp_107 + tmp_108*tmp_111 + tmp_113*tmp_41) + tmp_71*(tmp_114*tmp_117 + tmp_118*tmp_120 + tmp_121*tmp_69) + tmp_86*(tmp_122*tmp_125 + tmp_126*tmp_128 + tmp_129*tmp_84);
      real_t tmp_139 = tmp_20*tmp_26;
      real_t tmp_140 = tmp_22 - 1.0;
      real_t tmp_141 = Scalar_Variable_Coefficient_3D_0_0*tmp_140;
      real_t tmp_142 = 2.0*tmp_141;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_20*tmp_33;
      real_t tmp_145 = 2.0*tmp_144;
      real_t tmp_146 = tmp_141*tmp_145;
      real_t tmp_147 = tmp_20*tmp_39;
      real_t tmp_148 = tmp_142*tmp_147;
      real_t tmp_149 = tmp_58 - 1.0;
      real_t tmp_150 = Scalar_Variable_Coefficient_3D_1_0*tmp_149;
      real_t tmp_151 = 2.0*tmp_150;
      real_t tmp_152 = tmp_139*tmp_151;
      real_t tmp_153 = tmp_145*tmp_150;
      real_t tmp_154 = tmp_147*tmp_151;
      real_t tmp_155 = tmp_73 - 1.0;
      real_t tmp_156 = Scalar_Variable_Coefficient_3D_2_0*tmp_155;
      real_t tmp_157 = 2.0*tmp_156;
      real_t tmp_158 = tmp_139*tmp_157;
      real_t tmp_159 = tmp_145*tmp_156;
      real_t tmp_160 = tmp_147*tmp_157;
      real_t tmp_161 = tmp_88 - 1.0;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_3_0*tmp_161;
      real_t tmp_163 = 2.0*tmp_162;
      real_t tmp_164 = tmp_139*tmp_163;
      real_t tmp_165 = tmp_145*tmp_162;
      real_t tmp_166 = tmp_147*tmp_163;
      real_t tmp_167 = tmp_101*(tmp_130*tmp_164 + tmp_134*tmp_165 + tmp_166*tmp_99) + tmp_56*(tmp_102*tmp_143 + tmp_108*tmp_146 + tmp_148*tmp_41) + tmp_71*(tmp_114*tmp_152 + tmp_118*tmp_153 + tmp_154*tmp_69) + tmp_86*(tmp_122*tmp_158 + tmp_126*tmp_159 + tmp_160*tmp_84);
      real_t tmp_168 = tmp_20*tmp_6;
      real_t tmp_169 = 2.0*tmp_168;
      real_t tmp_170 = tmp_23 - 1.0;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_0_0*tmp_170;
      real_t tmp_172 = tmp_169*tmp_171;
      real_t tmp_173 = tmp_20*tmp_31;
      real_t tmp_174 = 2.0*tmp_171;
      real_t tmp_175 = tmp_173*tmp_174;
      real_t tmp_176 = tmp_20*tmp_37;
      real_t tmp_177 = tmp_174*tmp_176;
      real_t tmp_178 = tmp_59 - 1.0;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_1_0*tmp_178;
      real_t tmp_180 = tmp_169*tmp_179;
      real_t tmp_181 = 2.0*tmp_179;
      real_t tmp_182 = tmp_173*tmp_181;
      real_t tmp_183 = tmp_176*tmp_181;
      real_t tmp_184 = tmp_74 - 1.0;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_2_0*tmp_184;
      real_t tmp_186 = tmp_169*tmp_185;
      real_t tmp_187 = 2.0*tmp_185;
      real_t tmp_188 = tmp_173*tmp_187;
      real_t tmp_189 = tmp_176*tmp_187;
      real_t tmp_190 = tmp_89 - 1.0;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_3_0*tmp_190;
      real_t tmp_192 = tmp_169*tmp_191;
      real_t tmp_193 = 2.0*tmp_191;
      real_t tmp_194 = tmp_173*tmp_193;
      real_t tmp_195 = tmp_176*tmp_193;
      real_t tmp_196 = tmp_101*(tmp_130*tmp_192 + tmp_134*tmp_194 + tmp_195*tmp_99) + tmp_56*(tmp_102*tmp_172 + tmp_108*tmp_175 + tmp_177*tmp_41) + tmp_71*(tmp_114*tmp_180 + tmp_118*tmp_182 + tmp_183*tmp_69) + tmp_86*(tmp_122*tmp_186 + tmp_126*tmp_188 + tmp_189*tmp_84);
      real_t tmp_197 = 0.13819660112501059*tmp_20;
      real_t tmp_198 = tmp_197*tmp_6;
      real_t tmp_199 = 2.0*tmp_198;
      real_t tmp_200 = 0.58541019662496829*tmp_20;
      real_t tmp_201 = tmp_200*tmp_26;
      real_t tmp_202 = 2.0*tmp_201;
      real_t tmp_203 = tmp_199 + tmp_202;
      real_t tmp_204 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_205 = tmp_102*tmp_204;
      real_t tmp_206 = tmp_197*tmp_31;
      real_t tmp_207 = 2.0*tmp_206;
      real_t tmp_208 = tmp_200*tmp_33;
      real_t tmp_209 = 2.0*tmp_208;
      real_t tmp_210 = tmp_207 + tmp_209;
      real_t tmp_211 = tmp_108*tmp_204;
      real_t tmp_212 = tmp_176*tmp_22;
      real_t tmp_213 = tmp_147*tmp_23;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_41*tmp_42;
      real_t tmp_216 = 0.58541019662496829*tmp_20;
      real_t tmp_217 = tmp_216*tmp_6;
      real_t tmp_218 = 2.0*tmp_217;
      real_t tmp_219 = 0.13819660112501059*tmp_20;
      real_t tmp_220 = tmp_219*tmp_26;
      real_t tmp_221 = 2.0*tmp_220;
      real_t tmp_222 = tmp_218 + tmp_221;
      real_t tmp_223 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_224 = tmp_114*tmp_223;
      real_t tmp_225 = tmp_216*tmp_31;
      real_t tmp_226 = 2.0*tmp_225;
      real_t tmp_227 = tmp_219*tmp_33;
      real_t tmp_228 = 2.0*tmp_227;
      real_t tmp_229 = tmp_226 + tmp_228;
      real_t tmp_230 = tmp_118*tmp_223;
      real_t tmp_231 = tmp_176*tmp_58;
      real_t tmp_232 = tmp_147*tmp_59;
      real_t tmp_233 = tmp_231 + tmp_232;
      real_t tmp_234 = tmp_69*tmp_70;
      real_t tmp_235 = 0.13819660112501059*tmp_20;
      real_t tmp_236 = tmp_235*tmp_6;
      real_t tmp_237 = 2.0*tmp_236;
      real_t tmp_238 = 0.13819660112501059*tmp_20;
      real_t tmp_239 = tmp_238*tmp_26;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_237 + tmp_240;
      real_t tmp_242 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_243 = tmp_122*tmp_242;
      real_t tmp_244 = tmp_235*tmp_31;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = tmp_238*tmp_33;
      real_t tmp_247 = 2.0*tmp_246;
      real_t tmp_248 = tmp_245 + tmp_247;
      real_t tmp_249 = tmp_126*tmp_242;
      real_t tmp_250 = tmp_176*tmp_73;
      real_t tmp_251 = tmp_147*tmp_74;
      real_t tmp_252 = tmp_250 + tmp_251;
      real_t tmp_253 = tmp_84*tmp_85;
      real_t tmp_254 = 0.13819660112501059*tmp_20;
      real_t tmp_255 = tmp_254*tmp_6;
      real_t tmp_256 = 2.0*tmp_255;
      real_t tmp_257 = 0.13819660112501059*tmp_20;
      real_t tmp_258 = tmp_257*tmp_26;
      real_t tmp_259 = 2.0*tmp_258;
      real_t tmp_260 = tmp_256 + tmp_259;
      real_t tmp_261 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_262 = tmp_130*tmp_261;
      real_t tmp_263 = tmp_254*tmp_31;
      real_t tmp_264 = 2.0*tmp_263;
      real_t tmp_265 = tmp_257*tmp_33;
      real_t tmp_266 = 2.0*tmp_265;
      real_t tmp_267 = tmp_264 + tmp_266;
      real_t tmp_268 = tmp_134*tmp_261;
      real_t tmp_269 = tmp_176*tmp_88;
      real_t tmp_270 = tmp_147*tmp_89;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_100*tmp_99;
      real_t tmp_273 = tmp_101*(tmp_260*tmp_262 + tmp_267*tmp_268 + tmp_271*tmp_272) + tmp_56*(tmp_203*tmp_205 + tmp_210*tmp_211 + tmp_214*tmp_215) + tmp_71*(tmp_222*tmp_224 + tmp_229*tmp_230 + tmp_233*tmp_234) + tmp_86*(tmp_241*tmp_243 + tmp_248*tmp_249 + tmp_252*tmp_253);
      real_t tmp_274 = 0.13819660112501059*tmp_20;
      real_t tmp_275 = tmp_274*tmp_6;
      real_t tmp_276 = 2.0*tmp_275;
      real_t tmp_277 = tmp_200*tmp_28;
      real_t tmp_278 = 2.0*tmp_277;
      real_t tmp_279 = tmp_276 + tmp_278;
      real_t tmp_280 = tmp_274*tmp_31;
      real_t tmp_281 = 2.0*tmp_280;
      real_t tmp_282 = tmp_200*tmp_35;
      real_t tmp_283 = 2.0*tmp_282;
      real_t tmp_284 = tmp_281 + tmp_283;
      real_t tmp_285 = tmp_176*tmp_21;
      real_t tmp_286 = tmp_112*tmp_23;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = 0.13819660112501059*tmp_20;
      real_t tmp_289 = tmp_288*tmp_6;
      real_t tmp_290 = 2.0*tmp_289;
      real_t tmp_291 = tmp_219*tmp_28;
      real_t tmp_292 = 2.0*tmp_291;
      real_t tmp_293 = tmp_290 + tmp_292;
      real_t tmp_294 = tmp_288*tmp_31;
      real_t tmp_295 = 2.0*tmp_294;
      real_t tmp_296 = tmp_219*tmp_35;
      real_t tmp_297 = 2.0*tmp_296;
      real_t tmp_298 = tmp_295 + tmp_297;
      real_t tmp_299 = tmp_176*tmp_57;
      real_t tmp_300 = tmp_112*tmp_59;
      real_t tmp_301 = tmp_299 + tmp_300;
      real_t tmp_302 = 0.58541019662496829*tmp_20;
      real_t tmp_303 = tmp_302*tmp_6;
      real_t tmp_304 = 2.0*tmp_303;
      real_t tmp_305 = tmp_238*tmp_28;
      real_t tmp_306 = 2.0*tmp_305;
      real_t tmp_307 = tmp_304 + tmp_306;
      real_t tmp_308 = tmp_302*tmp_31;
      real_t tmp_309 = 2.0*tmp_308;
      real_t tmp_310 = tmp_238*tmp_35;
      real_t tmp_311 = 2.0*tmp_310;
      real_t tmp_312 = tmp_309 + tmp_311;
      real_t tmp_313 = tmp_176*tmp_72;
      real_t tmp_314 = tmp_112*tmp_74;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = 0.13819660112501059*tmp_20;
      real_t tmp_317 = tmp_316*tmp_6;
      real_t tmp_318 = 2.0*tmp_317;
      real_t tmp_319 = tmp_257*tmp_28;
      real_t tmp_320 = 2.0*tmp_319;
      real_t tmp_321 = tmp_318 + tmp_320;
      real_t tmp_322 = tmp_31*tmp_316;
      real_t tmp_323 = 2.0*tmp_322;
      real_t tmp_324 = tmp_257*tmp_35;
      real_t tmp_325 = 2.0*tmp_324;
      real_t tmp_326 = tmp_323 + tmp_325;
      real_t tmp_327 = tmp_176*tmp_87;
      real_t tmp_328 = tmp_112*tmp_89;
      real_t tmp_329 = tmp_327 + tmp_328;
      real_t tmp_330 = tmp_101*(tmp_262*tmp_321 + tmp_268*tmp_326 + tmp_272*tmp_329) + tmp_56*(tmp_205*tmp_279 + tmp_211*tmp_284 + tmp_215*tmp_287) + tmp_71*(tmp_224*tmp_293 + tmp_230*tmp_298 + tmp_234*tmp_301) + tmp_86*(tmp_243*tmp_307 + tmp_249*tmp_312 + tmp_253*tmp_315);
      real_t tmp_331 = tmp_26*tmp_274;
      real_t tmp_332 = 2.0*tmp_331;
      real_t tmp_333 = tmp_197*tmp_28;
      real_t tmp_334 = 2.0*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_274*tmp_33;
      real_t tmp_337 = 2.0*tmp_336;
      real_t tmp_338 = tmp_197*tmp_35;
      real_t tmp_339 = 2.0*tmp_338;
      real_t tmp_340 = tmp_337 + tmp_339;
      real_t tmp_341 = tmp_147*tmp_21;
      real_t tmp_342 = tmp_112*tmp_22;
      real_t tmp_343 = tmp_341 + tmp_342;
      real_t tmp_344 = tmp_26*tmp_288;
      real_t tmp_345 = 2.0*tmp_344;
      real_t tmp_346 = tmp_216*tmp_28;
      real_t tmp_347 = 2.0*tmp_346;
      real_t tmp_348 = tmp_345 + tmp_347;
      real_t tmp_349 = tmp_288*tmp_33;
      real_t tmp_350 = 2.0*tmp_349;
      real_t tmp_351 = tmp_216*tmp_35;
      real_t tmp_352 = 2.0*tmp_351;
      real_t tmp_353 = tmp_350 + tmp_352;
      real_t tmp_354 = tmp_147*tmp_57;
      real_t tmp_355 = tmp_112*tmp_58;
      real_t tmp_356 = tmp_354 + tmp_355;
      real_t tmp_357 = tmp_26*tmp_302;
      real_t tmp_358 = 2.0*tmp_357;
      real_t tmp_359 = tmp_235*tmp_28;
      real_t tmp_360 = 2.0*tmp_359;
      real_t tmp_361 = tmp_358 + tmp_360;
      real_t tmp_362 = tmp_302*tmp_33;
      real_t tmp_363 = 2.0*tmp_362;
      real_t tmp_364 = tmp_235*tmp_35;
      real_t tmp_365 = 2.0*tmp_364;
      real_t tmp_366 = tmp_363 + tmp_365;
      real_t tmp_367 = tmp_147*tmp_72;
      real_t tmp_368 = tmp_112*tmp_73;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = tmp_26*tmp_316;
      real_t tmp_371 = 2.0*tmp_370;
      real_t tmp_372 = tmp_254*tmp_28;
      real_t tmp_373 = 2.0*tmp_372;
      real_t tmp_374 = tmp_371 + tmp_373;
      real_t tmp_375 = tmp_316*tmp_33;
      real_t tmp_376 = 2.0*tmp_375;
      real_t tmp_377 = tmp_254*tmp_35;
      real_t tmp_378 = 2.0*tmp_377;
      real_t tmp_379 = tmp_376 + tmp_378;
      real_t tmp_380 = tmp_147*tmp_87;
      real_t tmp_381 = tmp_112*tmp_88;
      real_t tmp_382 = tmp_380 + tmp_381;
      real_t tmp_383 = tmp_101*(tmp_262*tmp_374 + tmp_268*tmp_379 + tmp_272*tmp_382) + tmp_56*(tmp_205*tmp_335 + tmp_211*tmp_340 + tmp_215*tmp_343) + tmp_71*(tmp_224*tmp_348 + tmp_230*tmp_353 + tmp_234*tmp_356) + tmp_86*(tmp_243*tmp_361 + tmp_249*tmp_366 + tmp_253*tmp_369);
      real_t tmp_384 = -tmp_22;
      real_t tmp_385 = 4.0 - tmp_21;
      real_t tmp_386 = tmp_384 + tmp_385 - 4.6832815729997463;
      real_t tmp_387 = 0.5*tmp_20;
      real_t tmp_388 = tmp_386*tmp_387;
      real_t tmp_389 = -tmp_202 - tmp_278 + tmp_388*tmp_6;
      real_t tmp_390 = -tmp_209 - tmp_283 + tmp_31*tmp_388;
      real_t tmp_391 = 1.0*tmp_176;
      real_t tmp_392 = -tmp_213 - tmp_286 + tmp_386*tmp_391;
      real_t tmp_393 = -tmp_58;
      real_t tmp_394 = 4.0 - tmp_57;
      real_t tmp_395 = tmp_393 + tmp_394 - 1.1055728090000847;
      real_t tmp_396 = tmp_387*tmp_395;
      real_t tmp_397 = -tmp_221 - tmp_292 + tmp_396*tmp_6;
      real_t tmp_398 = -tmp_228 - tmp_297 + tmp_31*tmp_396;
      real_t tmp_399 = -tmp_232 - tmp_300 + tmp_391*tmp_395;
      real_t tmp_400 = -tmp_73;
      real_t tmp_401 = 4.0 - tmp_72;
      real_t tmp_402 = tmp_400 + tmp_401 - 1.1055728090000847;
      real_t tmp_403 = tmp_387*tmp_402;
      real_t tmp_404 = -tmp_240 - tmp_306 + tmp_403*tmp_6;
      real_t tmp_405 = -tmp_247 + tmp_31*tmp_403 - tmp_311;
      real_t tmp_406 = -tmp_251 - tmp_314 + tmp_391*tmp_402;
      real_t tmp_407 = -tmp_88;
      real_t tmp_408 = 4.0 - tmp_87;
      real_t tmp_409 = tmp_407 + tmp_408 - 1.1055728090000847;
      real_t tmp_410 = tmp_387*tmp_409;
      real_t tmp_411 = -tmp_259 - tmp_320 + tmp_410*tmp_6;
      real_t tmp_412 = -tmp_266 + tmp_31*tmp_410 - tmp_325;
      real_t tmp_413 = -tmp_270 - tmp_328 + tmp_391*tmp_409;
      real_t tmp_414 = tmp_101*(tmp_262*tmp_411 + tmp_268*tmp_412 + tmp_272*tmp_413) + tmp_56*(tmp_205*tmp_389 + tmp_211*tmp_390 + tmp_215*tmp_392) + tmp_71*(tmp_224*tmp_397 + tmp_230*tmp_398 + tmp_234*tmp_399) + tmp_86*(tmp_243*tmp_404 + tmp_249*tmp_405 + tmp_253*tmp_406);
      real_t tmp_415 = -tmp_23;
      real_t tmp_416 = tmp_385 + tmp_415 - 1.1055728090000847;
      real_t tmp_417 = tmp_387*tmp_416;
      real_t tmp_418 = -tmp_199 + tmp_26*tmp_417 - tmp_334;
      real_t tmp_419 = -tmp_207 + tmp_33*tmp_417 - tmp_339;
      real_t tmp_420 = 1.0*tmp_147;
      real_t tmp_421 = -tmp_212 - tmp_342 + tmp_416*tmp_420;
      real_t tmp_422 = -tmp_59;
      real_t tmp_423 = tmp_394 + tmp_422 - 4.6832815729997463;
      real_t tmp_424 = tmp_387*tmp_423;
      real_t tmp_425 = -tmp_218 + tmp_26*tmp_424 - tmp_347;
      real_t tmp_426 = -tmp_226 + tmp_33*tmp_424 - tmp_352;
      real_t tmp_427 = -tmp_231 - tmp_355 + tmp_420*tmp_423;
      real_t tmp_428 = -tmp_74;
      real_t tmp_429 = tmp_401 + tmp_428 - 1.1055728090000847;
      real_t tmp_430 = tmp_387*tmp_429;
      real_t tmp_431 = -tmp_237 + tmp_26*tmp_430 - tmp_360;
      real_t tmp_432 = -tmp_245 + tmp_33*tmp_430 - tmp_365;
      real_t tmp_433 = -tmp_250 - tmp_368 + tmp_420*tmp_429;
      real_t tmp_434 = -tmp_89;
      real_t tmp_435 = tmp_408 + tmp_434 - 1.1055728090000847;
      real_t tmp_436 = tmp_387*tmp_435;
      real_t tmp_437 = -tmp_256 + tmp_26*tmp_436 - tmp_373;
      real_t tmp_438 = -tmp_264 + tmp_33*tmp_436 - tmp_378;
      real_t tmp_439 = -tmp_269 - tmp_381 + tmp_420*tmp_435;
      real_t tmp_440 = tmp_101*(tmp_262*tmp_437 + tmp_268*tmp_438 + tmp_272*tmp_439) + tmp_56*(tmp_205*tmp_418 + tmp_211*tmp_419 + tmp_215*tmp_421) + tmp_71*(tmp_224*tmp_425 + tmp_230*tmp_426 + tmp_234*tmp_427) + tmp_86*(tmp_243*tmp_431 + tmp_249*tmp_432 + tmp_253*tmp_433);
      real_t tmp_441 = tmp_384 + tmp_415 + 2.8944271909999153;
      real_t tmp_442 = tmp_387*tmp_441;
      real_t tmp_443 = -tmp_276 + tmp_28*tmp_442 - tmp_332;
      real_t tmp_444 = -tmp_281 - tmp_337 + tmp_35*tmp_442;
      real_t tmp_445 = 1.0*tmp_112;
      real_t tmp_446 = -tmp_285 - tmp_341 + tmp_441*tmp_445;
      real_t tmp_447 = tmp_393 + tmp_422 + 2.8944271909999153;
      real_t tmp_448 = tmp_387*tmp_447;
      real_t tmp_449 = tmp_28*tmp_448 - tmp_290 - tmp_345;
      real_t tmp_450 = -tmp_295 + tmp_35*tmp_448 - tmp_350;
      real_t tmp_451 = -tmp_299 - tmp_354 + tmp_445*tmp_447;
      real_t tmp_452 = tmp_400 + tmp_428 - 0.68328157299974634;
      real_t tmp_453 = tmp_387*tmp_452;
      real_t tmp_454 = tmp_28*tmp_453 - tmp_304 - tmp_358;
      real_t tmp_455 = -tmp_309 + tmp_35*tmp_453 - tmp_363;
      real_t tmp_456 = -tmp_313 - tmp_367 + tmp_445*tmp_452;
      real_t tmp_457 = tmp_407 + tmp_434 + 2.8944271909999153;
      real_t tmp_458 = tmp_387*tmp_457;
      real_t tmp_459 = tmp_28*tmp_458 - tmp_318 - tmp_371;
      real_t tmp_460 = -tmp_323 + tmp_35*tmp_458 - tmp_376;
      real_t tmp_461 = -tmp_327 - tmp_380 + tmp_445*tmp_457;
      real_t tmp_462 = tmp_101*(tmp_262*tmp_459 + tmp_268*tmp_460 + tmp_272*tmp_461) + tmp_56*(tmp_205*tmp_443 + tmp_211*tmp_444 + tmp_215*tmp_446) + tmp_71*(tmp_224*tmp_449 + tmp_230*tmp_450 + tmp_234*tmp_451) + tmp_86*(tmp_243*tmp_454 + tmp_249*tmp_455 + tmp_253*tmp_456);
      real_t tmp_463 = (tmp_28*tmp_28);
      real_t tmp_464 = 16.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_465 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_466 = 0.012499999999999983*tmp_465;
      real_t tmp_467 = tmp_464*tmp_466;
      real_t tmp_468 = (tmp_35*tmp_35);
      real_t tmp_469 = (tmp_40*tmp_40);
      real_t tmp_470 = 32.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_471 = 16.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_472 = 0.012499999999999983*tmp_465;
      real_t tmp_473 = tmp_471*tmp_472;
      real_t tmp_474 = 32.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_475 = 16.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_476 = 0.11249999999999989*tmp_465;
      real_t tmp_477 = tmp_475*tmp_476;
      real_t tmp_478 = 32.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_479 = 16.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_480 = 0.012499999999999983*tmp_465;
      real_t tmp_481 = tmp_479*tmp_480;
      real_t tmp_482 = 32.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_483 = tmp_140*tmp_465;
      real_t tmp_484 = tmp_105*tmp_30;
      real_t tmp_485 = tmp_483*tmp_484;
      real_t tmp_486 = tmp_26*tmp_28;
      real_t tmp_487 = tmp_33*tmp_35;
      real_t tmp_488 = tmp_39*tmp_40;
      real_t tmp_489 = tmp_149*tmp_465;
      real_t tmp_490 = tmp_115*tmp_64;
      real_t tmp_491 = tmp_489*tmp_490;
      real_t tmp_492 = tmp_155*tmp_465;
      real_t tmp_493 = tmp_123*tmp_79;
      real_t tmp_494 = tmp_492*tmp_493;
      real_t tmp_495 = tmp_161*tmp_465;
      real_t tmp_496 = tmp_131*tmp_94;
      real_t tmp_497 = tmp_495*tmp_496;
      real_t tmp_498 = tmp_101*(tmp_135*tmp_488*tmp_495 + tmp_486*tmp_497 + tmp_487*tmp_497) + tmp_56*(tmp_110*tmp_483*tmp_488 + tmp_485*tmp_486 + tmp_485*tmp_487) + tmp_71*(tmp_119*tmp_488*tmp_489 + tmp_486*tmp_491 + tmp_487*tmp_491) + tmp_86*(tmp_127*tmp_488*tmp_492 + tmp_486*tmp_494 + tmp_487*tmp_494);
      real_t tmp_499 = tmp_170*tmp_465;
      real_t tmp_500 = tmp_484*tmp_499;
      real_t tmp_501 = tmp_28*tmp_6;
      real_t tmp_502 = tmp_31*tmp_35;
      real_t tmp_503 = tmp_37*tmp_40;
      real_t tmp_504 = tmp_178*tmp_465;
      real_t tmp_505 = tmp_490*tmp_504;
      real_t tmp_506 = tmp_184*tmp_465;
      real_t tmp_507 = tmp_493*tmp_506;
      real_t tmp_508 = tmp_190*tmp_465;
      real_t tmp_509 = tmp_496*tmp_508;
      real_t tmp_510 = tmp_101*(tmp_135*tmp_503*tmp_508 + tmp_501*tmp_509 + tmp_502*tmp_509) + tmp_56*(tmp_110*tmp_499*tmp_503 + tmp_500*tmp_501 + tmp_500*tmp_502) + tmp_71*(tmp_119*tmp_503*tmp_504 + tmp_501*tmp_505 + tmp_502*tmp_505) + tmp_86*(tmp_127*tmp_503*tmp_506 + tmp_501*tmp_507 + tmp_502*tmp_507);
      real_t tmp_511 = tmp_101*(tmp_133*tmp_260 + tmp_136*tmp_267 + tmp_137*tmp_271) + tmp_56*(tmp_107*tmp_203 + tmp_111*tmp_210 + tmp_113*tmp_214) + tmp_71*(tmp_117*tmp_222 + tmp_120*tmp_229 + tmp_121*tmp_233) + tmp_86*(tmp_125*tmp_241 + tmp_128*tmp_248 + tmp_129*tmp_252);
      real_t tmp_512 = tmp_101*(tmp_133*tmp_321 + tmp_136*tmp_326 + tmp_137*tmp_329) + tmp_56*(tmp_107*tmp_279 + tmp_111*tmp_284 + tmp_113*tmp_287) + tmp_71*(tmp_117*tmp_293 + tmp_120*tmp_298 + tmp_121*tmp_301) + tmp_86*(tmp_125*tmp_307 + tmp_128*tmp_312 + tmp_129*tmp_315);
      real_t tmp_513 = tmp_101*(tmp_133*tmp_374 + tmp_136*tmp_379 + tmp_137*tmp_382) + tmp_56*(tmp_107*tmp_335 + tmp_111*tmp_340 + tmp_113*tmp_343) + tmp_71*(tmp_117*tmp_348 + tmp_120*tmp_353 + tmp_121*tmp_356) + tmp_86*(tmp_125*tmp_361 + tmp_128*tmp_366 + tmp_129*tmp_369);
      real_t tmp_514 = tmp_101*(tmp_133*tmp_411 + tmp_136*tmp_412 + tmp_137*tmp_413) + tmp_56*(tmp_107*tmp_389 + tmp_111*tmp_390 + tmp_113*tmp_392) + tmp_71*(tmp_117*tmp_397 + tmp_120*tmp_398 + tmp_121*tmp_399) + tmp_86*(tmp_125*tmp_404 + tmp_128*tmp_405 + tmp_129*tmp_406);
      real_t tmp_515 = tmp_101*(tmp_133*tmp_437 + tmp_136*tmp_438 + tmp_137*tmp_439) + tmp_56*(tmp_107*tmp_418 + tmp_111*tmp_419 + tmp_113*tmp_421) + tmp_71*(tmp_117*tmp_425 + tmp_120*tmp_426 + tmp_121*tmp_427) + tmp_86*(tmp_125*tmp_431 + tmp_128*tmp_432 + tmp_129*tmp_433);
      real_t tmp_516 = tmp_101*(tmp_133*tmp_459 + tmp_136*tmp_460 + tmp_137*tmp_461) + tmp_56*(tmp_107*tmp_443 + tmp_111*tmp_444 + tmp_113*tmp_446) + tmp_71*(tmp_117*tmp_449 + tmp_120*tmp_450 + tmp_121*tmp_451) + tmp_86*(tmp_125*tmp_454 + tmp_128*tmp_455 + tmp_129*tmp_456);
      real_t tmp_517 = (tmp_26*tmp_26);
      real_t tmp_518 = 0.012499999999999983*tmp_465;
      real_t tmp_519 = tmp_464*tmp_518;
      real_t tmp_520 = (tmp_33*tmp_33);
      real_t tmp_521 = (tmp_39*tmp_39);
      real_t tmp_522 = 0.11249999999999989*tmp_465;
      real_t tmp_523 = tmp_471*tmp_522;
      real_t tmp_524 = 0.012499999999999983*tmp_465;
      real_t tmp_525 = tmp_475*tmp_524;
      real_t tmp_526 = 0.012499999999999983*tmp_465;
      real_t tmp_527 = tmp_479*tmp_526;
      real_t tmp_528 = tmp_26*tmp_6;
      real_t tmp_529 = tmp_170*tmp_30*tmp_483;
      real_t tmp_530 = tmp_31*tmp_33;
      real_t tmp_531 = tmp_37*tmp_39;
      real_t tmp_532 = tmp_178*tmp_489*tmp_64;
      real_t tmp_533 = tmp_184*tmp_492*tmp_79;
      real_t tmp_534 = tmp_190*tmp_495*tmp_94;
      real_t tmp_535 = tmp_101*(tmp_163*tmp_508*tmp_531 + tmp_528*tmp_534 + tmp_530*tmp_534) + tmp_56*(tmp_142*tmp_499*tmp_531 + tmp_528*tmp_529 + tmp_529*tmp_530) + tmp_71*(tmp_151*tmp_504*tmp_531 + tmp_528*tmp_532 + tmp_530*tmp_532) + tmp_86*(tmp_157*tmp_506*tmp_531 + tmp_528*tmp_533 + tmp_530*tmp_533);
      real_t tmp_536 = tmp_101*(tmp_164*tmp_260 + tmp_165*tmp_267 + tmp_166*tmp_271) + tmp_56*(tmp_143*tmp_203 + tmp_146*tmp_210 + tmp_148*tmp_214) + tmp_71*(tmp_152*tmp_222 + tmp_153*tmp_229 + tmp_154*tmp_233) + tmp_86*(tmp_158*tmp_241 + tmp_159*tmp_248 + tmp_160*tmp_252);
      real_t tmp_537 = tmp_101*(tmp_164*tmp_321 + tmp_165*tmp_326 + tmp_166*tmp_329) + tmp_56*(tmp_143*tmp_279 + tmp_146*tmp_284 + tmp_148*tmp_287) + tmp_71*(tmp_152*tmp_293 + tmp_153*tmp_298 + tmp_154*tmp_301) + tmp_86*(tmp_158*tmp_307 + tmp_159*tmp_312 + tmp_160*tmp_315);
      real_t tmp_538 = tmp_101*(tmp_164*tmp_374 + tmp_165*tmp_379 + tmp_166*tmp_382) + tmp_56*(tmp_143*tmp_335 + tmp_146*tmp_340 + tmp_148*tmp_343) + tmp_71*(tmp_152*tmp_348 + tmp_153*tmp_353 + tmp_154*tmp_356) + tmp_86*(tmp_158*tmp_361 + tmp_159*tmp_366 + tmp_160*tmp_369);
      real_t tmp_539 = tmp_101*(tmp_164*tmp_411 + tmp_165*tmp_412 + tmp_166*tmp_413) + tmp_56*(tmp_143*tmp_389 + tmp_146*tmp_390 + tmp_148*tmp_392) + tmp_71*(tmp_152*tmp_397 + tmp_153*tmp_398 + tmp_154*tmp_399) + tmp_86*(tmp_158*tmp_404 + tmp_159*tmp_405 + tmp_160*tmp_406);
      real_t tmp_540 = tmp_101*(tmp_164*tmp_437 + tmp_165*tmp_438 + tmp_166*tmp_439) + tmp_56*(tmp_143*tmp_418 + tmp_146*tmp_419 + tmp_148*tmp_421) + tmp_71*(tmp_152*tmp_425 + tmp_153*tmp_426 + tmp_154*tmp_427) + tmp_86*(tmp_158*tmp_431 + tmp_159*tmp_432 + tmp_160*tmp_433);
      real_t tmp_541 = tmp_101*(tmp_164*tmp_459 + tmp_165*tmp_460 + tmp_166*tmp_461) + tmp_56*(tmp_143*tmp_443 + tmp_146*tmp_444 + tmp_148*tmp_446) + tmp_71*(tmp_152*tmp_449 + tmp_153*tmp_450 + tmp_154*tmp_451) + tmp_86*(tmp_158*tmp_454 + tmp_159*tmp_455 + tmp_160*tmp_456);
      real_t tmp_542 = (tmp_6*tmp_6);
      real_t tmp_543 = 0.11249999999999989*tmp_465;
      real_t tmp_544 = tmp_464*tmp_543;
      real_t tmp_545 = (tmp_31*tmp_31);
      real_t tmp_546 = (tmp_37*tmp_37);
      real_t tmp_547 = 0.012499999999999983*tmp_465;
      real_t tmp_548 = tmp_471*tmp_547;
      real_t tmp_549 = 0.012499999999999983*tmp_465;
      real_t tmp_550 = tmp_475*tmp_549;
      real_t tmp_551 = 0.012499999999999983*tmp_465;
      real_t tmp_552 = tmp_479*tmp_551;
      real_t tmp_553 = tmp_101*(tmp_192*tmp_260 + tmp_194*tmp_267 + tmp_195*tmp_271) + tmp_56*(tmp_172*tmp_203 + tmp_175*tmp_210 + tmp_177*tmp_214) + tmp_71*(tmp_180*tmp_222 + tmp_182*tmp_229 + tmp_183*tmp_233) + tmp_86*(tmp_186*tmp_241 + tmp_188*tmp_248 + tmp_189*tmp_252);
      real_t tmp_554 = tmp_101*(tmp_192*tmp_321 + tmp_194*tmp_326 + tmp_195*tmp_329) + tmp_56*(tmp_172*tmp_279 + tmp_175*tmp_284 + tmp_177*tmp_287) + tmp_71*(tmp_180*tmp_293 + tmp_182*tmp_298 + tmp_183*tmp_301) + tmp_86*(tmp_186*tmp_307 + tmp_188*tmp_312 + tmp_189*tmp_315);
      real_t tmp_555 = tmp_101*(tmp_192*tmp_374 + tmp_194*tmp_379 + tmp_195*tmp_382) + tmp_56*(tmp_172*tmp_335 + tmp_175*tmp_340 + tmp_177*tmp_343) + tmp_71*(tmp_180*tmp_348 + tmp_182*tmp_353 + tmp_183*tmp_356) + tmp_86*(tmp_186*tmp_361 + tmp_188*tmp_366 + tmp_189*tmp_369);
      real_t tmp_556 = tmp_101*(tmp_192*tmp_411 + tmp_194*tmp_412 + tmp_195*tmp_413) + tmp_56*(tmp_172*tmp_389 + tmp_175*tmp_390 + tmp_177*tmp_392) + tmp_71*(tmp_180*tmp_397 + tmp_182*tmp_398 + tmp_183*tmp_399) + tmp_86*(tmp_186*tmp_404 + tmp_188*tmp_405 + tmp_189*tmp_406);
      real_t tmp_557 = tmp_101*(tmp_192*tmp_437 + tmp_194*tmp_438 + tmp_195*tmp_439) + tmp_56*(tmp_172*tmp_418 + tmp_175*tmp_419 + tmp_177*tmp_421) + tmp_71*(tmp_180*tmp_425 + tmp_182*tmp_426 + tmp_183*tmp_427) + tmp_86*(tmp_186*tmp_431 + tmp_188*tmp_432 + tmp_189*tmp_433);
      real_t tmp_558 = tmp_101*(tmp_192*tmp_459 + tmp_194*tmp_460 + tmp_195*tmp_461) + tmp_56*(tmp_172*tmp_443 + tmp_175*tmp_444 + tmp_177*tmp_446) + tmp_71*(tmp_180*tmp_449 + tmp_182*tmp_450 + tmp_183*tmp_451) + tmp_86*(tmp_186*tmp_454 + tmp_188*tmp_455 + tmp_189*tmp_456);
      real_t tmp_559 = tmp_197*tmp_37;
      real_t tmp_560 = tmp_200*tmp_39;
      real_t tmp_561 = tmp_216*tmp_37;
      real_t tmp_562 = tmp_219*tmp_39;
      real_t tmp_563 = tmp_235*tmp_37;
      real_t tmp_564 = tmp_238*tmp_39;
      real_t tmp_565 = tmp_254*tmp_37;
      real_t tmp_566 = tmp_257*tmp_39;
      real_t tmp_567 = tmp_203*tmp_204;
      real_t tmp_568 = tmp_204*tmp_210;
      real_t tmp_569 = tmp_214*tmp_42;
      real_t tmp_570 = tmp_222*tmp_223;
      real_t tmp_571 = tmp_223*tmp_229;
      real_t tmp_572 = tmp_233*tmp_70;
      real_t tmp_573 = tmp_241*tmp_242;
      real_t tmp_574 = tmp_242*tmp_248;
      real_t tmp_575 = tmp_252*tmp_85;
      real_t tmp_576 = tmp_260*tmp_261;
      real_t tmp_577 = tmp_261*tmp_267;
      real_t tmp_578 = tmp_100*tmp_271;
      real_t tmp_579 = tmp_101*(tmp_321*tmp_576 + tmp_326*tmp_577 + tmp_329*tmp_578) + tmp_56*(tmp_279*tmp_567 + tmp_284*tmp_568 + tmp_287*tmp_569) + tmp_71*(tmp_293*tmp_570 + tmp_298*tmp_571 + tmp_301*tmp_572) + tmp_86*(tmp_307*tmp_573 + tmp_312*tmp_574 + tmp_315*tmp_575);
      real_t tmp_580 = tmp_101*(tmp_374*tmp_576 + tmp_379*tmp_577 + tmp_382*tmp_578) + tmp_56*(tmp_335*tmp_567 + tmp_340*tmp_568 + tmp_343*tmp_569) + tmp_71*(tmp_348*tmp_570 + tmp_353*tmp_571 + tmp_356*tmp_572) + tmp_86*(tmp_361*tmp_573 + tmp_366*tmp_574 + tmp_369*tmp_575);
      real_t tmp_581 = tmp_101*(tmp_411*tmp_576 + tmp_412*tmp_577 + tmp_413*tmp_578) + tmp_56*(tmp_389*tmp_567 + tmp_390*tmp_568 + tmp_392*tmp_569) + tmp_71*(tmp_397*tmp_570 + tmp_398*tmp_571 + tmp_399*tmp_572) + tmp_86*(tmp_404*tmp_573 + tmp_405*tmp_574 + tmp_406*tmp_575);
      real_t tmp_582 = tmp_101*(tmp_437*tmp_576 + tmp_438*tmp_577 + tmp_439*tmp_578) + tmp_56*(tmp_418*tmp_567 + tmp_419*tmp_568 + tmp_421*tmp_569) + tmp_71*(tmp_425*tmp_570 + tmp_426*tmp_571 + tmp_427*tmp_572) + tmp_86*(tmp_431*tmp_573 + tmp_432*tmp_574 + tmp_433*tmp_575);
      real_t tmp_583 = tmp_101*(tmp_459*tmp_576 + tmp_460*tmp_577 + tmp_461*tmp_578) + tmp_56*(tmp_443*tmp_567 + tmp_444*tmp_568 + tmp_446*tmp_569) + tmp_71*(tmp_449*tmp_570 + tmp_450*tmp_571 + tmp_451*tmp_572) + tmp_86*(tmp_454*tmp_573 + tmp_455*tmp_574 + tmp_456*tmp_575);
      real_t tmp_584 = tmp_274*tmp_37;
      real_t tmp_585 = tmp_200*tmp_40;
      real_t tmp_586 = tmp_288*tmp_37;
      real_t tmp_587 = tmp_219*tmp_40;
      real_t tmp_588 = tmp_302*tmp_37;
      real_t tmp_589 = tmp_238*tmp_40;
      real_t tmp_590 = tmp_316*tmp_37;
      real_t tmp_591 = tmp_257*tmp_40;
      real_t tmp_592 = tmp_204*tmp_279;
      real_t tmp_593 = tmp_204*tmp_284;
      real_t tmp_594 = tmp_287*tmp_42;
      real_t tmp_595 = tmp_223*tmp_293;
      real_t tmp_596 = tmp_223*tmp_298;
      real_t tmp_597 = tmp_301*tmp_70;
      real_t tmp_598 = tmp_242*tmp_307;
      real_t tmp_599 = tmp_242*tmp_312;
      real_t tmp_600 = tmp_315*tmp_85;
      real_t tmp_601 = tmp_261*tmp_321;
      real_t tmp_602 = tmp_261*tmp_326;
      real_t tmp_603 = tmp_100*tmp_329;
      real_t tmp_604 = tmp_101*(tmp_374*tmp_601 + tmp_379*tmp_602 + tmp_382*tmp_603) + tmp_56*(tmp_335*tmp_592 + tmp_340*tmp_593 + tmp_343*tmp_594) + tmp_71*(tmp_348*tmp_595 + tmp_353*tmp_596 + tmp_356*tmp_597) + tmp_86*(tmp_361*tmp_598 + tmp_366*tmp_599 + tmp_369*tmp_600);
      real_t tmp_605 = tmp_101*(tmp_411*tmp_601 + tmp_412*tmp_602 + tmp_413*tmp_603) + tmp_56*(tmp_389*tmp_592 + tmp_390*tmp_593 + tmp_392*tmp_594) + tmp_71*(tmp_397*tmp_595 + tmp_398*tmp_596 + tmp_399*tmp_597) + tmp_86*(tmp_404*tmp_598 + tmp_405*tmp_599 + tmp_406*tmp_600);
      real_t tmp_606 = tmp_101*(tmp_437*tmp_601 + tmp_438*tmp_602 + tmp_439*tmp_603) + tmp_56*(tmp_418*tmp_592 + tmp_419*tmp_593 + tmp_421*tmp_594) + tmp_71*(tmp_425*tmp_595 + tmp_426*tmp_596 + tmp_427*tmp_597) + tmp_86*(tmp_431*tmp_598 + tmp_432*tmp_599 + tmp_433*tmp_600);
      real_t tmp_607 = tmp_101*(tmp_459*tmp_601 + tmp_460*tmp_602 + tmp_461*tmp_603) + tmp_56*(tmp_443*tmp_592 + tmp_444*tmp_593 + tmp_446*tmp_594) + tmp_71*(tmp_449*tmp_595 + tmp_450*tmp_596 + tmp_451*tmp_597) + tmp_86*(tmp_454*tmp_598 + tmp_455*tmp_599 + tmp_456*tmp_600);
      real_t tmp_608 = tmp_274*tmp_39;
      real_t tmp_609 = tmp_197*tmp_40;
      real_t tmp_610 = tmp_288*tmp_39;
      real_t tmp_611 = tmp_216*tmp_40;
      real_t tmp_612 = tmp_302*tmp_39;
      real_t tmp_613 = tmp_235*tmp_40;
      real_t tmp_614 = tmp_316*tmp_39;
      real_t tmp_615 = tmp_254*tmp_40;
      real_t tmp_616 = tmp_204*tmp_335;
      real_t tmp_617 = tmp_204*tmp_340;
      real_t tmp_618 = tmp_343*tmp_42;
      real_t tmp_619 = tmp_223*tmp_348;
      real_t tmp_620 = tmp_223*tmp_353;
      real_t tmp_621 = tmp_356*tmp_70;
      real_t tmp_622 = tmp_242*tmp_361;
      real_t tmp_623 = tmp_242*tmp_366;
      real_t tmp_624 = tmp_369*tmp_85;
      real_t tmp_625 = tmp_261*tmp_374;
      real_t tmp_626 = tmp_261*tmp_379;
      real_t tmp_627 = tmp_100*tmp_382;
      real_t tmp_628 = tmp_101*(tmp_411*tmp_625 + tmp_412*tmp_626 + tmp_413*tmp_627) + tmp_56*(tmp_389*tmp_616 + tmp_390*tmp_617 + tmp_392*tmp_618) + tmp_71*(tmp_397*tmp_619 + tmp_398*tmp_620 + tmp_399*tmp_621) + tmp_86*(tmp_404*tmp_622 + tmp_405*tmp_623 + tmp_406*tmp_624);
      real_t tmp_629 = tmp_101*(tmp_437*tmp_625 + tmp_438*tmp_626 + tmp_439*tmp_627) + tmp_56*(tmp_418*tmp_616 + tmp_419*tmp_617 + tmp_421*tmp_618) + tmp_71*(tmp_425*tmp_619 + tmp_426*tmp_620 + tmp_427*tmp_621) + tmp_86*(tmp_431*tmp_622 + tmp_432*tmp_623 + tmp_433*tmp_624);
      real_t tmp_630 = tmp_101*(tmp_459*tmp_625 + tmp_460*tmp_626 + tmp_461*tmp_627) + tmp_56*(tmp_443*tmp_616 + tmp_444*tmp_617 + tmp_446*tmp_618) + tmp_71*(tmp_449*tmp_619 + tmp_450*tmp_620 + tmp_451*tmp_621) + tmp_86*(tmp_454*tmp_622 + tmp_455*tmp_623 + tmp_456*tmp_624);
      real_t tmp_631 = 0.25*tmp_386;
      real_t tmp_632 = 0.25*tmp_395;
      real_t tmp_633 = 0.25*tmp_402;
      real_t tmp_634 = 0.25*tmp_409;
      real_t tmp_635 = tmp_204*tmp_389;
      real_t tmp_636 = tmp_204*tmp_390;
      real_t tmp_637 = tmp_392*tmp_42;
      real_t tmp_638 = tmp_223*tmp_397;
      real_t tmp_639 = tmp_223*tmp_398;
      real_t tmp_640 = tmp_399*tmp_70;
      real_t tmp_641 = tmp_242*tmp_404;
      real_t tmp_642 = tmp_242*tmp_405;
      real_t tmp_643 = tmp_406*tmp_85;
      real_t tmp_644 = tmp_261*tmp_411;
      real_t tmp_645 = tmp_261*tmp_412;
      real_t tmp_646 = tmp_100*tmp_413;
      real_t tmp_647 = tmp_101*(tmp_437*tmp_644 + tmp_438*tmp_645 + tmp_439*tmp_646) + tmp_56*(tmp_418*tmp_635 + tmp_419*tmp_636 + tmp_421*tmp_637) + tmp_71*(tmp_425*tmp_638 + tmp_426*tmp_639 + tmp_427*tmp_640) + tmp_86*(tmp_431*tmp_641 + tmp_432*tmp_642 + tmp_433*tmp_643);
      real_t tmp_648 = tmp_101*(tmp_459*tmp_644 + tmp_460*tmp_645 + tmp_461*tmp_646) + tmp_56*(tmp_443*tmp_635 + tmp_444*tmp_636 + tmp_446*tmp_637) + tmp_71*(tmp_449*tmp_638 + tmp_450*tmp_639 + tmp_451*tmp_640) + tmp_86*(tmp_454*tmp_641 + tmp_455*tmp_642 + tmp_456*tmp_643);
      real_t tmp_649 = 0.25*tmp_416;
      real_t tmp_650 = 0.25*tmp_423;
      real_t tmp_651 = 0.25*tmp_429;
      real_t tmp_652 = 0.25*tmp_435;
      real_t tmp_653 = tmp_101*(tmp_100*tmp_439*tmp_461 + tmp_261*tmp_437*tmp_459 + tmp_261*tmp_438*tmp_460) + tmp_56*(tmp_204*tmp_418*tmp_443 + tmp_204*tmp_419*tmp_444 + tmp_42*tmp_421*tmp_446) + tmp_71*(tmp_223*tmp_425*tmp_449 + tmp_223*tmp_426*tmp_450 + tmp_427*tmp_451*tmp_70) + tmp_86*(tmp_242*tmp_431*tmp_454 + tmp_242*tmp_432*tmp_455 + tmp_433*tmp_456*tmp_85);
      real_t tmp_654 = 0.25*tmp_441;
      real_t tmp_655 = 0.25*tmp_447;
      real_t tmp_656 = 0.25*tmp_452;
      real_t tmp_657 = 0.25*tmp_457;
      real_t a_0_0 = tmp_101*(tmp_100*(tmp_99*tmp_99) + tmp_94*((tmp_91 + tmp_92 + tmp_93)*(tmp_91 + tmp_92 + tmp_93)) + tmp_94*((tmp_95 + tmp_96 + tmp_97)*(tmp_95 + tmp_96 + tmp_97))) + tmp_56*(tmp_30*((tmp_25 + tmp_27 + tmp_29)*(tmp_25 + tmp_27 + tmp_29)) + tmp_30*((tmp_32 + tmp_34 + tmp_36)*(tmp_32 + tmp_34 + tmp_36)) + (tmp_41*tmp_41)*tmp_42) + tmp_71*(tmp_64*((tmp_61 + tmp_62 + tmp_63)*(tmp_61 + tmp_62 + tmp_63)) + tmp_64*((tmp_65 + tmp_66 + tmp_67)*(tmp_65 + tmp_66 + tmp_67)) + (tmp_69*tmp_69)*tmp_70) + tmp_86*(tmp_79*((tmp_76 + tmp_77 + tmp_78)*(tmp_76 + tmp_77 + tmp_78)) + tmp_79*((tmp_80 + tmp_81 + tmp_82)*(tmp_80 + tmp_81 + tmp_82)) + (tmp_84*tmp_84)*tmp_85);
      real_t a_0_1 = tmp_138;
      real_t a_0_2 = tmp_167;
      real_t a_0_3 = tmp_196;
      real_t a_0_4 = tmp_273;
      real_t a_0_5 = tmp_330;
      real_t a_0_6 = tmp_383;
      real_t a_0_7 = tmp_414;
      real_t a_0_8 = tmp_440;
      real_t a_0_9 = tmp_462;
      real_t a_1_0 = tmp_138;
      real_t a_1_1 = tmp_101*(tmp_463*tmp_481 + tmp_468*tmp_481 + tmp_469*tmp_480*tmp_482) + tmp_56*(tmp_463*tmp_467 + tmp_466*tmp_469*tmp_470 + tmp_467*tmp_468) + tmp_71*(tmp_463*tmp_473 + tmp_468*tmp_473 + tmp_469*tmp_472*tmp_474) + tmp_86*(tmp_463*tmp_477 + tmp_468*tmp_477 + tmp_469*tmp_476*tmp_478);
      real_t a_1_2 = tmp_498;
      real_t a_1_3 = tmp_510;
      real_t a_1_4 = tmp_511;
      real_t a_1_5 = tmp_512;
      real_t a_1_6 = tmp_513;
      real_t a_1_7 = tmp_514;
      real_t a_1_8 = tmp_515;
      real_t a_1_9 = tmp_516;
      real_t a_2_0 = tmp_167;
      real_t a_2_1 = tmp_498;
      real_t a_2_2 = tmp_101*(tmp_482*tmp_521*tmp_526 + tmp_517*tmp_527 + tmp_520*tmp_527) + tmp_56*(tmp_470*tmp_518*tmp_521 + tmp_517*tmp_519 + tmp_519*tmp_520) + tmp_71*(tmp_474*tmp_521*tmp_522 + tmp_517*tmp_523 + tmp_520*tmp_523) + tmp_86*(tmp_478*tmp_521*tmp_524 + tmp_517*tmp_525 + tmp_520*tmp_525);
      real_t a_2_3 = tmp_535;
      real_t a_2_4 = tmp_536;
      real_t a_2_5 = tmp_537;
      real_t a_2_6 = tmp_538;
      real_t a_2_7 = tmp_539;
      real_t a_2_8 = tmp_540;
      real_t a_2_9 = tmp_541;
      real_t a_3_0 = tmp_196;
      real_t a_3_1 = tmp_510;
      real_t a_3_2 = tmp_535;
      real_t a_3_3 = tmp_101*(tmp_482*tmp_546*tmp_551 + tmp_542*tmp_552 + tmp_545*tmp_552) + tmp_56*(tmp_470*tmp_543*tmp_546 + tmp_542*tmp_544 + tmp_544*tmp_545) + tmp_71*(tmp_474*tmp_546*tmp_547 + tmp_542*tmp_548 + tmp_545*tmp_548) + tmp_86*(tmp_478*tmp_546*tmp_549 + tmp_542*tmp_550 + tmp_545*tmp_550);
      real_t a_3_4 = tmp_553;
      real_t a_3_5 = tmp_554;
      real_t a_3_6 = tmp_555;
      real_t a_3_7 = tmp_556;
      real_t a_3_8 = tmp_557;
      real_t a_3_9 = tmp_558;
      real_t a_4_0 = tmp_273;
      real_t a_4_1 = tmp_511;
      real_t a_4_2 = tmp_536;
      real_t a_4_3 = tmp_553;
      real_t a_4_4 = tmp_101*(tmp_479*((tmp_255 + tmp_258)*(tmp_255 + tmp_258)) + tmp_479*((tmp_263 + tmp_265)*(tmp_263 + tmp_265)) + tmp_482*((tmp_565 + tmp_566)*(tmp_565 + tmp_566))) + tmp_56*(tmp_464*((tmp_198 + tmp_201)*(tmp_198 + tmp_201)) + tmp_464*((tmp_206 + tmp_208)*(tmp_206 + tmp_208)) + tmp_470*((tmp_559 + tmp_560)*(tmp_559 + tmp_560))) + tmp_71*(tmp_471*((tmp_217 + tmp_220)*(tmp_217 + tmp_220)) + tmp_471*((tmp_225 + tmp_227)*(tmp_225 + tmp_227)) + tmp_474*((tmp_561 + tmp_562)*(tmp_561 + tmp_562))) + tmp_86*(tmp_475*((tmp_236 + tmp_239)*(tmp_236 + tmp_239)) + tmp_475*((tmp_244 + tmp_246)*(tmp_244 + tmp_246)) + tmp_478*((tmp_563 + tmp_564)*(tmp_563 + tmp_564)));
      real_t a_4_5 = tmp_579;
      real_t a_4_6 = tmp_580;
      real_t a_4_7 = tmp_581;
      real_t a_4_8 = tmp_582;
      real_t a_4_9 = tmp_583;
      real_t a_5_0 = tmp_330;
      real_t a_5_1 = tmp_512;
      real_t a_5_2 = tmp_537;
      real_t a_5_3 = tmp_554;
      real_t a_5_4 = tmp_579;
      real_t a_5_5 = tmp_101*(tmp_479*((tmp_317 + tmp_319)*(tmp_317 + tmp_319)) + tmp_479*((tmp_322 + tmp_324)*(tmp_322 + tmp_324)) + tmp_482*((tmp_590 + tmp_591)*(tmp_590 + tmp_591))) + tmp_56*(tmp_464*((tmp_275 + tmp_277)*(tmp_275 + tmp_277)) + tmp_464*((tmp_280 + tmp_282)*(tmp_280 + tmp_282)) + tmp_470*((tmp_584 + tmp_585)*(tmp_584 + tmp_585))) + tmp_71*(tmp_471*((tmp_289 + tmp_291)*(tmp_289 + tmp_291)) + tmp_471*((tmp_294 + tmp_296)*(tmp_294 + tmp_296)) + tmp_474*((tmp_586 + tmp_587)*(tmp_586 + tmp_587))) + tmp_86*(tmp_475*((tmp_303 + tmp_305)*(tmp_303 + tmp_305)) + tmp_475*((tmp_308 + tmp_310)*(tmp_308 + tmp_310)) + tmp_478*((tmp_588 + tmp_589)*(tmp_588 + tmp_589)));
      real_t a_5_6 = tmp_604;
      real_t a_5_7 = tmp_605;
      real_t a_5_8 = tmp_606;
      real_t a_5_9 = tmp_607;
      real_t a_6_0 = tmp_383;
      real_t a_6_1 = tmp_513;
      real_t a_6_2 = tmp_538;
      real_t a_6_3 = tmp_555;
      real_t a_6_4 = tmp_580;
      real_t a_6_5 = tmp_604;
      real_t a_6_6 = tmp_101*(tmp_479*((tmp_370 + tmp_372)*(tmp_370 + tmp_372)) + tmp_479*((tmp_375 + tmp_377)*(tmp_375 + tmp_377)) + tmp_482*((tmp_614 + tmp_615)*(tmp_614 + tmp_615))) + tmp_56*(tmp_464*((tmp_331 + tmp_333)*(tmp_331 + tmp_333)) + tmp_464*((tmp_336 + tmp_338)*(tmp_336 + tmp_338)) + tmp_470*((tmp_608 + tmp_609)*(tmp_608 + tmp_609))) + tmp_71*(tmp_471*((tmp_344 + tmp_346)*(tmp_344 + tmp_346)) + tmp_471*((tmp_349 + tmp_351)*(tmp_349 + tmp_351)) + tmp_474*((tmp_610 + tmp_611)*(tmp_610 + tmp_611))) + tmp_86*(tmp_475*((tmp_357 + tmp_359)*(tmp_357 + tmp_359)) + tmp_475*((tmp_362 + tmp_364)*(tmp_362 + tmp_364)) + tmp_478*((tmp_612 + tmp_613)*(tmp_612 + tmp_613)));
      real_t a_6_7 = tmp_628;
      real_t a_6_8 = tmp_629;
      real_t a_6_9 = tmp_630;
      real_t a_7_0 = tmp_414;
      real_t a_7_1 = tmp_514;
      real_t a_7_2 = tmp_539;
      real_t a_7_3 = tmp_556;
      real_t a_7_4 = tmp_581;
      real_t a_7_5 = tmp_605;
      real_t a_7_6 = tmp_628;
      real_t a_7_7 = tmp_101*(tmp_479*((tmp_168*tmp_634 - tmp_258 - tmp_319)*(tmp_168*tmp_634 - tmp_258 - tmp_319)) + tmp_479*((tmp_173*tmp_634 - tmp_265 - tmp_324)*(tmp_173*tmp_634 - tmp_265 - tmp_324)) + tmp_482*((tmp_176*tmp_634 - tmp_566 - tmp_591)*(tmp_176*tmp_634 - tmp_566 - tmp_591))) + tmp_56*(tmp_464*((tmp_168*tmp_631 - tmp_201 - tmp_277)*(tmp_168*tmp_631 - tmp_201 - tmp_277)) + tmp_464*((tmp_173*tmp_631 - tmp_208 - tmp_282)*(tmp_173*tmp_631 - tmp_208 - tmp_282)) + tmp_470*((tmp_176*tmp_631 - tmp_560 - tmp_585)*(tmp_176*tmp_631 - tmp_560 - tmp_585))) + tmp_71*(tmp_471*((tmp_168*tmp_632 - tmp_220 - tmp_291)*(tmp_168*tmp_632 - tmp_220 - tmp_291)) + tmp_471*((tmp_173*tmp_632 - tmp_227 - tmp_296)*(tmp_173*tmp_632 - tmp_227 - tmp_296)) + tmp_474*((tmp_176*tmp_632 - tmp_562 - tmp_587)*(tmp_176*tmp_632 - tmp_562 - tmp_587))) + tmp_86*(tmp_475*((tmp_168*tmp_633 - tmp_239 - tmp_305)*(tmp_168*tmp_633 - tmp_239 - tmp_305)) + tmp_475*((tmp_173*tmp_633 - tmp_246 - tmp_310)*(tmp_173*tmp_633 - tmp_246 - tmp_310)) + tmp_478*((tmp_176*tmp_633 - tmp_564 - tmp_589)*(tmp_176*tmp_633 - tmp_564 - tmp_589)));
      real_t a_7_8 = tmp_647;
      real_t a_7_9 = tmp_648;
      real_t a_8_0 = tmp_440;
      real_t a_8_1 = tmp_515;
      real_t a_8_2 = tmp_540;
      real_t a_8_3 = tmp_557;
      real_t a_8_4 = tmp_582;
      real_t a_8_5 = tmp_606;
      real_t a_8_6 = tmp_629;
      real_t a_8_7 = tmp_647;
      real_t a_8_8 = tmp_101*(tmp_479*((tmp_139*tmp_652 - tmp_255 - tmp_372)*(tmp_139*tmp_652 - tmp_255 - tmp_372)) + tmp_479*((tmp_144*tmp_652 - tmp_263 - tmp_377)*(tmp_144*tmp_652 - tmp_263 - tmp_377)) + tmp_482*((tmp_147*tmp_652 - tmp_565 - tmp_615)*(tmp_147*tmp_652 - tmp_565 - tmp_615))) + tmp_56*(tmp_464*((tmp_139*tmp_649 - tmp_198 - tmp_333)*(tmp_139*tmp_649 - tmp_198 - tmp_333)) + tmp_464*((tmp_144*tmp_649 - tmp_206 - tmp_338)*(tmp_144*tmp_649 - tmp_206 - tmp_338)) + tmp_470*((tmp_147*tmp_649 - tmp_559 - tmp_609)*(tmp_147*tmp_649 - tmp_559 - tmp_609))) + tmp_71*(tmp_471*((tmp_139*tmp_650 - tmp_217 - tmp_346)*(tmp_139*tmp_650 - tmp_217 - tmp_346)) + tmp_471*((tmp_144*tmp_650 - tmp_225 - tmp_351)*(tmp_144*tmp_650 - tmp_225 - tmp_351)) + tmp_474*((tmp_147*tmp_650 - tmp_561 - tmp_611)*(tmp_147*tmp_650 - tmp_561 - tmp_611))) + tmp_86*(tmp_475*((tmp_139*tmp_651 - tmp_236 - tmp_359)*(tmp_139*tmp_651 - tmp_236 - tmp_359)) + tmp_475*((tmp_144*tmp_651 - tmp_244 - tmp_364)*(tmp_144*tmp_651 - tmp_244 - tmp_364)) + tmp_478*((tmp_147*tmp_651 - tmp_563 - tmp_613)*(tmp_147*tmp_651 - tmp_563 - tmp_613)));
      real_t a_8_9 = tmp_653;
      real_t a_9_0 = tmp_462;
      real_t a_9_1 = tmp_516;
      real_t a_9_2 = tmp_541;
      real_t a_9_3 = tmp_558;
      real_t a_9_4 = tmp_583;
      real_t a_9_5 = tmp_607;
      real_t a_9_6 = tmp_630;
      real_t a_9_7 = tmp_648;
      real_t a_9_8 = tmp_653;
      real_t a_9_9 = tmp_101*(tmp_479*((tmp_103*tmp_657 - tmp_317 - tmp_370)*(tmp_103*tmp_657 - tmp_317 - tmp_370)) + tmp_479*((tmp_109*tmp_657 - tmp_322 - tmp_375)*(tmp_109*tmp_657 - tmp_322 - tmp_375)) + tmp_482*((tmp_112*tmp_657 - tmp_590 - tmp_614)*(tmp_112*tmp_657 - tmp_590 - tmp_614))) + tmp_56*(tmp_464*((tmp_103*tmp_654 - tmp_275 - tmp_331)*(tmp_103*tmp_654 - tmp_275 - tmp_331)) + tmp_464*((tmp_109*tmp_654 - tmp_280 - tmp_336)*(tmp_109*tmp_654 - tmp_280 - tmp_336)) + tmp_470*((tmp_112*tmp_654 - tmp_584 - tmp_608)*(tmp_112*tmp_654 - tmp_584 - tmp_608))) + tmp_71*(tmp_471*((tmp_103*tmp_655 - tmp_289 - tmp_344)*(tmp_103*tmp_655 - tmp_289 - tmp_344)) + tmp_471*((tmp_109*tmp_655 - tmp_294 - tmp_349)*(tmp_109*tmp_655 - tmp_294 - tmp_349)) + tmp_474*((tmp_112*tmp_655 - tmp_586 - tmp_610)*(tmp_112*tmp_655 - tmp_586 - tmp_610))) + tmp_86*(tmp_475*((tmp_103*tmp_656 - tmp_303 - tmp_357)*(tmp_103*tmp_656 - tmp_303 - tmp_357)) + tmp_475*((tmp_109*tmp_656 - tmp_308 - tmp_362)*(tmp_109*tmp_656 - tmp_308 - tmp_362)) + tmp_478*((tmp_112*tmp_656 - tmp_588 - tmp_612)*(tmp_112*tmp_656 - tmp_588 - tmp_612)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_0_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_11*tmp_4;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_1*tmp_8 - tmp_11*tmp_13;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_13*tmp_14 - tmp_4*tmp_8;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = tmp_15 - tmp_18;
      real_t tmp_37 = 1.0*tmp_23;
      real_t tmp_38 = tmp_12 - tmp_17;
      real_t tmp_39 = -tmp_16 + tmp_9;
      real_t tmp_40 = tmp_36*tmp_37 + tmp_37*tmp_38 + tmp_37*tmp_39;
      real_t tmp_41 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_42 = p_affine_0_0*p_affine_1_1;
      real_t tmp_43 = p_affine_0_0*p_affine_1_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_2;
      real_t tmp_45 = p_affine_0_1*p_affine_1_0;
      real_t tmp_46 = p_affine_0_1*p_affine_1_2;
      real_t tmp_47 = p_affine_2_2*p_affine_3_0;
      real_t tmp_48 = p_affine_0_2*p_affine_1_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_1;
      real_t tmp_50 = p_affine_2_0*p_affine_3_1;
      real_t tmp_51 = p_affine_2_2*p_affine_3_1;
      real_t tmp_52 = p_affine_2_0*p_affine_3_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_0;
      real_t tmp_54 = std::abs(p_affine_0_0*tmp_44 - p_affine_0_0*tmp_51 + p_affine_0_1*tmp_47 - p_affine_0_1*tmp_52 + p_affine_0_2*tmp_50 - p_affine_0_2*tmp_53 - p_affine_1_0*tmp_44 + p_affine_1_0*tmp_51 - p_affine_1_1*tmp_47 + p_affine_1_1*tmp_52 - p_affine_1_2*tmp_50 + p_affine_1_2*tmp_53 + p_affine_2_0*tmp_46 - p_affine_2_0*tmp_49 - p_affine_2_1*tmp_43 + p_affine_2_1*tmp_48 + p_affine_2_2*tmp_42 - p_affine_2_2*tmp_45 - p_affine_3_0*tmp_46 + p_affine_3_0*tmp_49 + p_affine_3_1*tmp_43 - p_affine_3_1*tmp_48 - p_affine_3_2*tmp_42 + p_affine_3_2*tmp_45);
      real_t tmp_55 = 0.041666666666666657*tmp_54;
      real_t tmp_56 = 0.55278640450004235;
      real_t tmp_57 = 2.3416407864998732;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = tmp_19*(tmp_56 + tmp_57 + tmp_58 - 3.0);
      real_t tmp_60 = tmp_59*tmp_6;
      real_t tmp_61 = tmp_25*tmp_59;
      real_t tmp_62 = tmp_27*tmp_59;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_64 = tmp_30*tmp_59;
      real_t tmp_65 = tmp_32*tmp_59;
      real_t tmp_66 = tmp_34*tmp_59;
      real_t tmp_67 = 1.0*tmp_59;
      real_t tmp_68 = tmp_36*tmp_67 + tmp_38*tmp_67 + tmp_39*tmp_67;
      real_t tmp_69 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_70 = 0.041666666666666657*tmp_54;
      real_t tmp_71 = 2.3416407864998732;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = tmp_19*(tmp_71 + tmp_72 + tmp_73 - 3.0);
      real_t tmp_75 = tmp_6*tmp_74;
      real_t tmp_76 = tmp_25*tmp_74;
      real_t tmp_77 = tmp_27*tmp_74;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_79 = tmp_30*tmp_74;
      real_t tmp_80 = tmp_32*tmp_74;
      real_t tmp_81 = tmp_34*tmp_74;
      real_t tmp_82 = 1.0*tmp_74;
      real_t tmp_83 = tmp_36*tmp_82 + tmp_38*tmp_82 + tmp_39*tmp_82;
      real_t tmp_84 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_85 = 0.041666666666666657*tmp_54;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_94 = tmp_30*tmp_89;
      real_t tmp_95 = tmp_32*tmp_89;
      real_t tmp_96 = tmp_34*tmp_89;
      real_t tmp_97 = 1.0*tmp_89;
      real_t tmp_98 = tmp_36*tmp_97 + tmp_38*tmp_97 + tmp_39*tmp_97;
      real_t tmp_99 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_100 = 0.041666666666666657*tmp_54;
      real_t tmp_101 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_102 = 2.0*tmp_19;
      real_t tmp_103 = tmp_102*tmp_27;
      real_t tmp_104 = Scalar_Variable_Coefficient_3D_0_0*(tmp_20 - 1.0);
      real_t tmp_105 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_106 = tmp_102*tmp_104;
      real_t tmp_107 = 0.5*tmp_60 + 0.5*tmp_61 + 0.5*tmp_62;
      real_t tmp_108 = Scalar_Variable_Coefficient_3D_1_0*(tmp_56 - 1.0);
      real_t tmp_109 = 0.5*tmp_64 + 0.5*tmp_65 + 0.5*tmp_66;
      real_t tmp_110 = tmp_102*tmp_108;
      real_t tmp_111 = 0.5*tmp_75 + 0.5*tmp_76 + 0.5*tmp_77;
      real_t tmp_112 = Scalar_Variable_Coefficient_3D_2_0*(tmp_71 - 1.0);
      real_t tmp_113 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_114 = tmp_102*tmp_112;
      real_t tmp_115 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_116 = Scalar_Variable_Coefficient_3D_3_0*(tmp_86 - 1.0);
      real_t tmp_117 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_118 = tmp_102*tmp_116;
      real_t tmp_119 = Scalar_Variable_Coefficient_3D_0_0*(tmp_21 - 1.0);
      real_t tmp_120 = tmp_102*tmp_25;
      real_t tmp_121 = tmp_102*tmp_32;
      real_t tmp_122 = tmp_19*tmp_38;
      real_t tmp_123 = 2.0*tmp_122;
      real_t tmp_124 = Scalar_Variable_Coefficient_3D_1_0*(tmp_57 - 1.0);
      real_t tmp_125 = Scalar_Variable_Coefficient_3D_2_0*(tmp_72 - 1.0);
      real_t tmp_126 = Scalar_Variable_Coefficient_3D_3_0*(tmp_87 - 1.0);
      real_t tmp_127 = Scalar_Variable_Coefficient_3D_0_0*(tmp_22 - 1.0);
      real_t tmp_128 = tmp_102*tmp_6;
      real_t tmp_129 = tmp_102*tmp_30;
      real_t tmp_130 = tmp_19*tmp_36;
      real_t tmp_131 = 2.0*tmp_130;
      real_t tmp_132 = Scalar_Variable_Coefficient_3D_1_0*(tmp_58 - 1.0);
      real_t tmp_133 = Scalar_Variable_Coefficient_3D_2_0*(tmp_73 - 1.0);
      real_t tmp_134 = Scalar_Variable_Coefficient_3D_3_0*(tmp_88 - 1.0);
      real_t tmp_135 = 0.13819660112501059*tmp_102;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = 0.58541019662496829*tmp_102;
      real_t tmp_138 = tmp_137*tmp_25;
      real_t tmp_139 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_140 = tmp_101*tmp_139;
      real_t tmp_141 = tmp_135*tmp_30;
      real_t tmp_142 = tmp_137*tmp_32;
      real_t tmp_143 = tmp_105*tmp_139;
      real_t tmp_144 = tmp_130*tmp_21;
      real_t tmp_145 = tmp_122*tmp_22;
      real_t tmp_146 = tmp_40*tmp_41;
      real_t tmp_147 = 0.58541019662496829*tmp_102;
      real_t tmp_148 = tmp_147*tmp_6;
      real_t tmp_149 = 0.13819660112501059*tmp_102;
      real_t tmp_150 = tmp_149*tmp_25;
      real_t tmp_151 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_152 = tmp_107*tmp_151;
      real_t tmp_153 = tmp_147*tmp_30;
      real_t tmp_154 = tmp_149*tmp_32;
      real_t tmp_155 = tmp_109*tmp_151;
      real_t tmp_156 = tmp_130*tmp_57;
      real_t tmp_157 = tmp_122*tmp_58;
      real_t tmp_158 = tmp_68*tmp_69;
      real_t tmp_159 = 0.13819660112501059*tmp_102;
      real_t tmp_160 = tmp_159*tmp_6;
      real_t tmp_161 = 0.13819660112501059*tmp_102;
      real_t tmp_162 = tmp_161*tmp_25;
      real_t tmp_163 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_164 = tmp_111*tmp_163;
      real_t tmp_165 = tmp_159*tmp_30;
      real_t tmp_166 = tmp_161*tmp_32;
      real_t tmp_167 = tmp_113*tmp_163;
      real_t tmp_168 = tmp_130*tmp_72;
      real_t tmp_169 = tmp_122*tmp_73;
      real_t tmp_170 = tmp_83*tmp_84;
      real_t tmp_171 = 0.13819660112501059*tmp_102;
      real_t tmp_172 = tmp_171*tmp_6;
      real_t tmp_173 = 0.13819660112501059*tmp_102;
      real_t tmp_174 = tmp_173*tmp_25;
      real_t tmp_175 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_176 = tmp_115*tmp_175;
      real_t tmp_177 = tmp_171*tmp_30;
      real_t tmp_178 = tmp_173*tmp_32;
      real_t tmp_179 = tmp_117*tmp_175;
      real_t tmp_180 = tmp_130*tmp_87;
      real_t tmp_181 = tmp_122*tmp_88;
      real_t tmp_182 = tmp_98*tmp_99;
      real_t tmp_183 = 0.13819660112501059*tmp_102;
      real_t tmp_184 = tmp_183*tmp_6;
      real_t tmp_185 = tmp_137*tmp_27;
      real_t tmp_186 = tmp_183*tmp_30;
      real_t tmp_187 = tmp_137*tmp_34;
      real_t tmp_188 = tmp_130*tmp_20;
      real_t tmp_189 = tmp_19*tmp_39;
      real_t tmp_190 = tmp_189*tmp_22;
      real_t tmp_191 = 0.13819660112501059*tmp_102;
      real_t tmp_192 = tmp_191*tmp_6;
      real_t tmp_193 = tmp_149*tmp_27;
      real_t tmp_194 = tmp_191*tmp_30;
      real_t tmp_195 = tmp_149*tmp_34;
      real_t tmp_196 = tmp_130*tmp_56;
      real_t tmp_197 = tmp_189*tmp_58;
      real_t tmp_198 = 0.58541019662496829*tmp_102;
      real_t tmp_199 = tmp_198*tmp_6;
      real_t tmp_200 = tmp_161*tmp_27;
      real_t tmp_201 = tmp_198*tmp_30;
      real_t tmp_202 = tmp_161*tmp_34;
      real_t tmp_203 = tmp_130*tmp_71;
      real_t tmp_204 = tmp_189*tmp_73;
      real_t tmp_205 = 0.13819660112501059*tmp_102;
      real_t tmp_206 = tmp_205*tmp_6;
      real_t tmp_207 = tmp_173*tmp_27;
      real_t tmp_208 = tmp_205*tmp_30;
      real_t tmp_209 = tmp_173*tmp_34;
      real_t tmp_210 = tmp_130*tmp_86;
      real_t tmp_211 = tmp_189*tmp_88;
      real_t tmp_212 = tmp_183*tmp_25;
      real_t tmp_213 = tmp_135*tmp_27;
      real_t tmp_214 = tmp_183*tmp_32;
      real_t tmp_215 = tmp_135*tmp_34;
      real_t tmp_216 = tmp_122*tmp_20;
      real_t tmp_217 = tmp_189*tmp_21;
      real_t tmp_218 = tmp_191*tmp_25;
      real_t tmp_219 = tmp_147*tmp_27;
      real_t tmp_220 = tmp_191*tmp_32;
      real_t tmp_221 = tmp_147*tmp_34;
      real_t tmp_222 = tmp_122*tmp_56;
      real_t tmp_223 = tmp_189*tmp_57;
      real_t tmp_224 = tmp_198*tmp_25;
      real_t tmp_225 = tmp_159*tmp_27;
      real_t tmp_226 = tmp_198*tmp_32;
      real_t tmp_227 = tmp_159*tmp_34;
      real_t tmp_228 = tmp_122*tmp_71;
      real_t tmp_229 = tmp_189*tmp_72;
      real_t tmp_230 = tmp_205*tmp_25;
      real_t tmp_231 = tmp_171*tmp_27;
      real_t tmp_232 = tmp_205*tmp_32;
      real_t tmp_233 = tmp_171*tmp_34;
      real_t tmp_234 = tmp_122*tmp_86;
      real_t tmp_235 = tmp_189*tmp_87;
      real_t tmp_236 = -tmp_21;
      real_t tmp_237 = 4.0 - tmp_20;
      real_t tmp_238 = tmp_236 + tmp_237 - 4.6832815729997463;
      real_t tmp_239 = 0.5*tmp_19;
      real_t tmp_240 = tmp_238*tmp_239;
      real_t tmp_241 = 1.0*tmp_130;
      real_t tmp_242 = -tmp_57;
      real_t tmp_243 = 4.0 - tmp_56;
      real_t tmp_244 = tmp_242 + tmp_243 - 1.1055728090000847;
      real_t tmp_245 = tmp_239*tmp_244;
      real_t tmp_246 = -tmp_72;
      real_t tmp_247 = 4.0 - tmp_71;
      real_t tmp_248 = tmp_246 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = tmp_239*tmp_248;
      real_t tmp_250 = -tmp_87;
      real_t tmp_251 = 4.0 - tmp_86;
      real_t tmp_252 = tmp_250 + tmp_251 - 1.1055728090000847;
      real_t tmp_253 = tmp_239*tmp_252;
      real_t tmp_254 = -tmp_22;
      real_t tmp_255 = tmp_237 + tmp_254 - 1.1055728090000847;
      real_t tmp_256 = tmp_239*tmp_255;
      real_t tmp_257 = 1.0*tmp_122;
      real_t tmp_258 = -tmp_58;
      real_t tmp_259 = tmp_243 + tmp_258 - 4.6832815729997463;
      real_t tmp_260 = tmp_239*tmp_259;
      real_t tmp_261 = -tmp_73;
      real_t tmp_262 = tmp_247 + tmp_261 - 1.1055728090000847;
      real_t tmp_263 = tmp_239*tmp_262;
      real_t tmp_264 = -tmp_88;
      real_t tmp_265 = tmp_251 + tmp_264 - 1.1055728090000847;
      real_t tmp_266 = tmp_239*tmp_265;
      real_t tmp_267 = tmp_236 + tmp_254 + 2.8944271909999153;
      real_t tmp_268 = tmp_239*tmp_267;
      real_t tmp_269 = 1.0*tmp_189;
      real_t tmp_270 = tmp_242 + tmp_258 + 2.8944271909999153;
      real_t tmp_271 = tmp_239*tmp_270;
      real_t tmp_272 = tmp_246 + tmp_261 - 0.68328157299974634;
      real_t tmp_273 = tmp_239*tmp_272;
      real_t tmp_274 = tmp_250 + tmp_264 + 2.8944271909999153;
      real_t tmp_275 = tmp_239*tmp_274;
      real_t a_0_0 = tmp_100*(tmp_93*((tmp_90 + tmp_91 + tmp_92)*(tmp_90 + tmp_91 + tmp_92)) + tmp_93*((tmp_94 + tmp_95 + tmp_96)*(tmp_94 + tmp_95 + tmp_96)) + (tmp_98*tmp_98)*tmp_99) + tmp_55*(tmp_29*((tmp_24 + tmp_26 + tmp_28)*(tmp_24 + tmp_26 + tmp_28)) + tmp_29*((tmp_31 + tmp_33 + tmp_35)*(tmp_31 + tmp_33 + tmp_35)) + (tmp_40*tmp_40)*tmp_41) + tmp_70*(tmp_63*((tmp_60 + tmp_61 + tmp_62)*(tmp_60 + tmp_61 + tmp_62)) + tmp_63*((tmp_64 + tmp_65 + tmp_66)*(tmp_64 + tmp_65 + tmp_66)) + (tmp_68*tmp_68)*tmp_69) + tmp_85*(tmp_78*((tmp_75 + tmp_76 + tmp_77)*(tmp_75 + tmp_76 + tmp_77)) + tmp_78*((tmp_79 + tmp_80 + tmp_81)*(tmp_79 + tmp_80 + tmp_81)) + (tmp_83*tmp_83)*tmp_84);
      real_t a_0_1 = tmp_100*(tmp_103*tmp_115*tmp_116 + tmp_117*tmp_118*tmp_34 + tmp_118*tmp_39*tmp_98) + tmp_55*(tmp_101*tmp_103*tmp_104 + tmp_105*tmp_106*tmp_34 + tmp_106*tmp_39*tmp_40) + tmp_70*(tmp_103*tmp_107*tmp_108 + tmp_109*tmp_110*tmp_34 + tmp_110*tmp_39*tmp_68) + tmp_85*(tmp_103*tmp_111*tmp_112 + tmp_113*tmp_114*tmp_34 + tmp_114*tmp_39*tmp_83);
      real_t a_0_2 = tmp_100*(tmp_115*tmp_120*tmp_126 + tmp_117*tmp_121*tmp_126 + tmp_123*tmp_126*tmp_98) + tmp_55*(tmp_101*tmp_119*tmp_120 + tmp_105*tmp_119*tmp_121 + tmp_119*tmp_123*tmp_40) + tmp_70*(tmp_107*tmp_120*tmp_124 + tmp_109*tmp_121*tmp_124 + tmp_123*tmp_124*tmp_68) + tmp_85*(tmp_111*tmp_120*tmp_125 + tmp_113*tmp_121*tmp_125 + tmp_123*tmp_125*tmp_83);
      real_t a_0_3 = tmp_100*(tmp_115*tmp_128*tmp_134 + tmp_117*tmp_129*tmp_134 + tmp_131*tmp_134*tmp_98) + tmp_55*(tmp_101*tmp_127*tmp_128 + tmp_105*tmp_127*tmp_129 + tmp_127*tmp_131*tmp_40) + tmp_70*(tmp_107*tmp_128*tmp_132 + tmp_109*tmp_129*tmp_132 + tmp_131*tmp_132*tmp_68) + tmp_85*(tmp_111*tmp_128*tmp_133 + tmp_113*tmp_129*tmp_133 + tmp_131*tmp_133*tmp_83);
      real_t a_0_4 = tmp_100*(tmp_176*(tmp_172 + tmp_174) + tmp_179*(tmp_177 + tmp_178) + tmp_182*(tmp_180 + tmp_181)) + tmp_55*(tmp_140*(tmp_136 + tmp_138) + tmp_143*(tmp_141 + tmp_142) + tmp_146*(tmp_144 + tmp_145)) + tmp_70*(tmp_152*(tmp_148 + tmp_150) + tmp_155*(tmp_153 + tmp_154) + tmp_158*(tmp_156 + tmp_157)) + tmp_85*(tmp_164*(tmp_160 + tmp_162) + tmp_167*(tmp_165 + tmp_166) + tmp_170*(tmp_168 + tmp_169));
      real_t a_0_5 = tmp_100*(tmp_176*(tmp_206 + tmp_207) + tmp_179*(tmp_208 + tmp_209) + tmp_182*(tmp_210 + tmp_211)) + tmp_55*(tmp_140*(tmp_184 + tmp_185) + tmp_143*(tmp_186 + tmp_187) + tmp_146*(tmp_188 + tmp_190)) + tmp_70*(tmp_152*(tmp_192 + tmp_193) + tmp_155*(tmp_194 + tmp_195) + tmp_158*(tmp_196 + tmp_197)) + tmp_85*(tmp_164*(tmp_199 + tmp_200) + tmp_167*(tmp_201 + tmp_202) + tmp_170*(tmp_203 + tmp_204));
      real_t a_0_6 = tmp_100*(tmp_176*(tmp_230 + tmp_231) + tmp_179*(tmp_232 + tmp_233) + tmp_182*(tmp_234 + tmp_235)) + tmp_55*(tmp_140*(tmp_212 + tmp_213) + tmp_143*(tmp_214 + tmp_215) + tmp_146*(tmp_216 + tmp_217)) + tmp_70*(tmp_152*(tmp_218 + tmp_219) + tmp_155*(tmp_220 + tmp_221) + tmp_158*(tmp_222 + tmp_223)) + tmp_85*(tmp_164*(tmp_224 + tmp_225) + tmp_167*(tmp_226 + tmp_227) + tmp_170*(tmp_228 + tmp_229));
      real_t a_0_7 = tmp_100*(tmp_176*(-tmp_174 - tmp_207 + tmp_253*tmp_6) + tmp_179*(-tmp_178 - tmp_209 + tmp_253*tmp_30) + tmp_182*(-tmp_181 - tmp_211 + tmp_241*tmp_252)) + tmp_55*(tmp_140*(-tmp_138 - tmp_185 + tmp_240*tmp_6) + tmp_143*(-tmp_142 - tmp_187 + tmp_240*tmp_30) + tmp_146*(-tmp_145 - tmp_190 + tmp_238*tmp_241)) + tmp_70*(tmp_152*(-tmp_150 - tmp_193 + tmp_245*tmp_6) + tmp_155*(-tmp_154 - tmp_195 + tmp_245*tmp_30) + tmp_158*(-tmp_157 - tmp_197 + tmp_241*tmp_244)) + tmp_85*(tmp_164*(-tmp_162 - tmp_200 + tmp_249*tmp_6) + tmp_167*(-tmp_166 - tmp_202 + tmp_249*tmp_30) + tmp_170*(-tmp_169 - tmp_204 + tmp_241*tmp_248));
      real_t a_0_8 = tmp_100*(tmp_176*(-tmp_172 - tmp_231 + tmp_25*tmp_266) + tmp_179*(-tmp_177 - tmp_233 + tmp_266*tmp_32) + tmp_182*(-tmp_180 - tmp_235 + tmp_257*tmp_265)) + tmp_55*(tmp_140*(-tmp_136 - tmp_213 + tmp_25*tmp_256) + tmp_143*(-tmp_141 - tmp_215 + tmp_256*tmp_32) + tmp_146*(-tmp_144 - tmp_217 + tmp_255*tmp_257)) + tmp_70*(tmp_152*(-tmp_148 - tmp_219 + tmp_25*tmp_260) + tmp_155*(-tmp_153 - tmp_221 + tmp_260*tmp_32) + tmp_158*(-tmp_156 - tmp_223 + tmp_257*tmp_259)) + tmp_85*(tmp_164*(-tmp_160 - tmp_225 + tmp_25*tmp_263) + tmp_167*(-tmp_165 - tmp_227 + tmp_263*tmp_32) + tmp_170*(-tmp_168 - tmp_229 + tmp_257*tmp_262));
      real_t a_0_9 = tmp_100*(tmp_176*(-tmp_206 - tmp_230 + tmp_27*tmp_275) + tmp_179*(-tmp_208 - tmp_232 + tmp_275*tmp_34) + tmp_182*(-tmp_210 - tmp_234 + tmp_269*tmp_274)) + tmp_55*(tmp_140*(-tmp_184 - tmp_212 + tmp_268*tmp_27) + tmp_143*(-tmp_186 - tmp_214 + tmp_268*tmp_34) + tmp_146*(-tmp_188 - tmp_216 + tmp_267*tmp_269)) + tmp_70*(tmp_152*(-tmp_192 - tmp_218 + tmp_27*tmp_271) + tmp_155*(-tmp_194 - tmp_220 + tmp_271*tmp_34) + tmp_158*(-tmp_196 - tmp_222 + tmp_269*tmp_270)) + tmp_85*(tmp_164*(-tmp_199 - tmp_224 + tmp_27*tmp_273) + tmp_167*(-tmp_201 - tmp_226 + tmp_273*tmp_34) + tmp_170*(-tmp_203 - tmp_228 + tmp_269*tmp_272));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_0_0_affine_q2::Scalar_Variable_Coefficient_2D( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback2D( Point3D( {in_0, in_1, 0} ) );
   }

   void p2_epsilonvar_0_0_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_0_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = 0.66666666666666663;
      real_t tmp_3 = 2.6666666666666665;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = tmp_1*tmp_5;
      real_t tmp_7 = tmp_6 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_4);
      real_t tmp_8 = 1.0 / (tmp_7);
      real_t tmp_9 = 0.5*tmp_8;
      real_t tmp_10 = tmp_9*(tmp_2 + tmp_3 - 3);
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_1*tmp_10 + tmp_10*tmp_11;
      real_t tmp_13 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_14 = tmp_10*tmp_13 + tmp_10*tmp_5;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 4*tmp_15;
      real_t tmp_17 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_18 = tmp_16*tmp_17;
      real_t tmp_19 = tmp_14*tmp_18;
      real_t tmp_20 = 2.6666666666666665;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_9*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22 + tmp_11*tmp_22;
      real_t tmp_24 = tmp_13*tmp_22 + tmp_22*tmp_5;
      real_t tmp_25 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_26 = tmp_16*tmp_25;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_9*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30 + tmp_11*tmp_30;
      real_t tmp_32 = tmp_13*tmp_30 + tmp_30*tmp_5;
      real_t tmp_33 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_34 = tmp_16*tmp_33;
      real_t tmp_35 = tmp_32*tmp_34;
      real_t tmp_36 = tmp_14*tmp_17;
      real_t tmp_37 = tmp_2 - 1;
      real_t tmp_38 = 2.0*tmp_8;
      real_t tmp_39 = tmp_1*tmp_38;
      real_t tmp_40 = tmp_15*tmp_39;
      real_t tmp_41 = tmp_37*tmp_40;
      real_t tmp_42 = tmp_24*tmp_25;
      real_t tmp_43 = tmp_20 - 1;
      real_t tmp_44 = tmp_40*tmp_43;
      real_t tmp_45 = tmp_32*tmp_33;
      real_t tmp_46 = tmp_28 - 1;
      real_t tmp_47 = tmp_40*tmp_46;
      real_t tmp_48 = tmp_3 - 1;
      real_t tmp_49 = tmp_11*tmp_38;
      real_t tmp_50 = tmp_15*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_21 - 1;
      real_t tmp_53 = tmp_50*tmp_52;
      real_t tmp_54 = tmp_29 - 1;
      real_t tmp_55 = tmp_50*tmp_54;
      real_t tmp_56 = 0.16666666666666666*tmp_49;
      real_t tmp_57 = 0.66666666666666663*tmp_39;
      real_t tmp_58 = tmp_56 + tmp_57;
      real_t tmp_59 = 0.66666666666666663*tmp_49;
      real_t tmp_60 = 0.16666666666666666*tmp_39;
      real_t tmp_61 = tmp_59 + tmp_60;
      real_t tmp_62 = 0.16666666666666666*tmp_49;
      real_t tmp_63 = 0.16666666666666666*tmp_39;
      real_t tmp_64 = tmp_62 + tmp_63;
      real_t tmp_65 = -tmp_2 - 1.333333333333333;
      real_t tmp_66 = tmp_11*tmp_9;
      real_t tmp_67 = -tmp_57 + tmp_65*tmp_66;
      real_t tmp_68 = 2.666666666666667 - tmp_20;
      real_t tmp_69 = -tmp_60 + tmp_66*tmp_68;
      real_t tmp_70 = 2.666666666666667 - tmp_28;
      real_t tmp_71 = -tmp_63 + tmp_66*tmp_70;
      real_t tmp_72 = 2.666666666666667 - tmp_3;
      real_t tmp_73 = tmp_1*tmp_9;
      real_t tmp_74 = -tmp_56 + tmp_72*tmp_73;
      real_t tmp_75 = -tmp_21 - 1.333333333333333;
      real_t tmp_76 = -tmp_59 + tmp_73*tmp_75;
      real_t tmp_77 = 2.666666666666667 - tmp_29;
      real_t tmp_78 = -tmp_62 + tmp_73*tmp_77;
      real_t tmp_79 = tmp_12*tmp_17;
      real_t tmp_80 = tmp_13*tmp_38;
      real_t tmp_81 = tmp_15*tmp_80;
      real_t tmp_82 = tmp_37*tmp_81;
      real_t tmp_83 = tmp_23*tmp_25;
      real_t tmp_84 = tmp_43*tmp_81;
      real_t tmp_85 = tmp_31*tmp_33;
      real_t tmp_86 = tmp_46*tmp_81;
      real_t tmp_87 = tmp_15*tmp_17;
      real_t tmp_88 = 1.0/(tmp_7*tmp_7);
      real_t tmp_89 = tmp_87*tmp_88;
      real_t tmp_90 = tmp_1*tmp_13;
      real_t tmp_91 = tmp_15*tmp_88;
      real_t tmp_92 = tmp_90*tmp_91;
      real_t tmp_93 = tmp_11*tmp_13;
      real_t tmp_94 = tmp_37*tmp_48*tmp_89;
      real_t tmp_95 = tmp_91*tmp_93;
      real_t tmp_96 = tmp_25*tmp_43*tmp_52;
      real_t tmp_97 = tmp_33*tmp_46*tmp_54;
      real_t tmp_98 = tmp_17*tmp_82;
      real_t tmp_99 = tmp_25*tmp_84;
      real_t tmp_100 = tmp_33*tmp_86;
      real_t tmp_101 = tmp_38*tmp_5;
      real_t tmp_102 = tmp_101*tmp_15;
      real_t tmp_103 = tmp_102*tmp_52;
      real_t tmp_104 = tmp_102*tmp_54;
      real_t tmp_105 = tmp_6*tmp_91;
      real_t tmp_106 = tmp_11*tmp_5;
      real_t tmp_107 = tmp_106*tmp_91;
      real_t tmp_108 = tmp_101*tmp_48*tmp_87;
      real_t tmp_109 = tmp_103*tmp_25;
      real_t tmp_110 = tmp_104*tmp_33;
      real_t tmp_111 = 0.16666666666666666*tmp_101;
      real_t tmp_112 = 0.66666666666666663*tmp_80;
      real_t tmp_113 = tmp_111 + tmp_112;
      real_t tmp_114 = tmp_113*tmp_18;
      real_t tmp_115 = 0.66666666666666663*tmp_101;
      real_t tmp_116 = 0.16666666666666666*tmp_80;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = 0.16666666666666666*tmp_101;
      real_t tmp_120 = 0.16666666666666666*tmp_80;
      real_t tmp_121 = tmp_119 + tmp_120;
      real_t tmp_122 = tmp_121*tmp_34;
      real_t tmp_123 = tmp_113*tmp_17;
      real_t tmp_124 = tmp_117*tmp_25;
      real_t tmp_125 = tmp_121*tmp_33;
      real_t tmp_126 = tmp_5*tmp_9;
      real_t tmp_127 = -tmp_112 + tmp_126*tmp_65;
      real_t tmp_128 = tmp_127*tmp_18;
      real_t tmp_129 = -tmp_116 + tmp_126*tmp_68;
      real_t tmp_130 = tmp_129*tmp_26;
      real_t tmp_131 = -tmp_120 + tmp_126*tmp_70;
      real_t tmp_132 = tmp_131*tmp_34;
      real_t tmp_133 = tmp_127*tmp_17;
      real_t tmp_134 = tmp_129*tmp_25;
      real_t tmp_135 = tmp_131*tmp_33;
      real_t tmp_136 = tmp_13*tmp_9;
      real_t tmp_137 = -tmp_111 + tmp_136*tmp_72;
      real_t tmp_138 = tmp_137*tmp_18;
      real_t tmp_139 = -tmp_115 + tmp_136*tmp_75;
      real_t tmp_140 = tmp_139*tmp_26;
      real_t tmp_141 = -tmp_119 + tmp_136*tmp_77;
      real_t tmp_142 = tmp_141*tmp_34;
      real_t tmp_143 = tmp_137*tmp_17;
      real_t tmp_144 = tmp_139*tmp_25;
      real_t tmp_145 = tmp_141*tmp_33;
      real_t a_0_0 = tmp_12*tmp_19 + tmp_23*tmp_27 + tmp_31*tmp_35;
      real_t a_0_1 = tmp_36*tmp_41 + tmp_42*tmp_44 + tmp_45*tmp_47;
      real_t a_0_2 = tmp_36*tmp_51 + tmp_42*tmp_53 + tmp_45*tmp_55;
      real_t a_0_3 = tmp_19*tmp_58 + tmp_27*tmp_61 + tmp_35*tmp_64;
      real_t a_0_4 = tmp_19*tmp_67 + tmp_27*tmp_69 + tmp_35*tmp_71;
      real_t a_0_5 = tmp_19*tmp_74 + tmp_27*tmp_76 + tmp_35*tmp_78;
      real_t a_1_0 = tmp_79*tmp_82 + tmp_83*tmp_84 + tmp_85*tmp_86;
      real_t a_1_1 = tmp_25*(tmp_43*tmp_43)*tmp_92 + tmp_33*(tmp_46*tmp_46)*tmp_92 + (tmp_37*tmp_37)*tmp_89*tmp_90;
      real_t a_1_2 = tmp_93*tmp_94 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t a_1_3 = tmp_100*tmp_64 + tmp_58*tmp_98 + tmp_61*tmp_99;
      real_t a_1_4 = tmp_100*tmp_71 + tmp_67*tmp_98 + tmp_69*tmp_99;
      real_t a_1_5 = tmp_100*tmp_78 + tmp_74*tmp_98 + tmp_76*tmp_99;
      real_t a_2_0 = tmp_102*tmp_48*tmp_79 + tmp_103*tmp_83 + tmp_104*tmp_85;
      real_t a_2_1 = tmp_105*tmp_96 + tmp_105*tmp_97 + tmp_6*tmp_94;
      real_t a_2_2 = tmp_106*(tmp_48*tmp_48)*tmp_89 + tmp_107*tmp_25*(tmp_52*tmp_52) + tmp_107*tmp_33*(tmp_54*tmp_54);
      real_t a_2_3 = tmp_108*tmp_58 + tmp_109*tmp_61 + tmp_110*tmp_64;
      real_t a_2_4 = tmp_108*tmp_67 + tmp_109*tmp_69 + tmp_110*tmp_71;
      real_t a_2_5 = tmp_108*tmp_74 + tmp_109*tmp_76 + tmp_110*tmp_78;
      real_t a_3_0 = tmp_114*tmp_12 + tmp_118*tmp_23 + tmp_122*tmp_31;
      real_t a_3_1 = tmp_123*tmp_41 + tmp_124*tmp_44 + tmp_125*tmp_47;
      real_t a_3_2 = tmp_123*tmp_51 + tmp_124*tmp_53 + tmp_125*tmp_55;
      real_t a_3_3 = tmp_114*tmp_58 + tmp_118*tmp_61 + tmp_122*tmp_64;
      real_t a_3_4 = tmp_114*tmp_67 + tmp_118*tmp_69 + tmp_122*tmp_71;
      real_t a_3_5 = tmp_114*tmp_74 + tmp_118*tmp_76 + tmp_122*tmp_78;
      real_t a_4_0 = tmp_12*tmp_128 + tmp_130*tmp_23 + tmp_132*tmp_31;
      real_t a_4_1 = tmp_133*tmp_41 + tmp_134*tmp_44 + tmp_135*tmp_47;
      real_t a_4_2 = tmp_133*tmp_51 + tmp_134*tmp_53 + tmp_135*tmp_55;
      real_t a_4_3 = tmp_128*tmp_58 + tmp_130*tmp_61 + tmp_132*tmp_64;
      real_t a_4_4 = tmp_128*tmp_67 + tmp_130*tmp_69 + tmp_132*tmp_71;
      real_t a_4_5 = tmp_128*tmp_74 + tmp_130*tmp_76 + tmp_132*tmp_78;
      real_t a_5_0 = tmp_12*tmp_138 + tmp_140*tmp_23 + tmp_142*tmp_31;
      real_t a_5_1 = tmp_143*tmp_41 + tmp_144*tmp_44 + tmp_145*tmp_47;
      real_t a_5_2 = tmp_143*tmp_51 + tmp_144*tmp_53 + tmp_145*tmp_55;
      real_t a_5_3 = tmp_138*tmp_58 + tmp_140*tmp_61 + tmp_142*tmp_64;
      real_t a_5_4 = tmp_138*tmp_67 + tmp_140*tmp_69 + tmp_142*tmp_71;
      real_t a_5_5 = tmp_138*tmp_74 + tmp_140*tmp_76 + tmp_142*tmp_78;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsilonvar_0_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = 0.66666666666666663;
      real_t tmp_3 = 2.6666666666666665;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = 1.0 / (tmp_1*tmp_5 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_4));
      real_t tmp_7 = 0.5*tmp_6;
      real_t tmp_8 = tmp_7*(tmp_2 + tmp_3 - 3);
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_11 = 4*tmp_10;
      real_t tmp_12 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_13 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_0_0*(tmp_12*tmp_8 + tmp_5*tmp_8);
      real_t tmp_14 = tmp_11*tmp_13;
      real_t tmp_15 = 2.6666666666666665;
      real_t tmp_16 = 0.66666666666666663;
      real_t tmp_17 = tmp_7*(tmp_15 + tmp_16 - 3);
      real_t tmp_18 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_1_0*(tmp_12*tmp_17 + tmp_17*tmp_5);
      real_t tmp_19 = tmp_11*tmp_18;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_7*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_2_0*(tmp_12*tmp_22 + tmp_22*tmp_5);
      real_t tmp_24 = tmp_11*tmp_23;
      real_t tmp_25 = 2.0*tmp_6;
      real_t tmp_26 = tmp_1*tmp_25;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_25*tmp_9;
      real_t tmp_29 = tmp_10*tmp_28;
      real_t tmp_30 = 0.16666666666666666*tmp_28;
      real_t tmp_31 = 0.66666666666666663*tmp_26;
      real_t tmp_32 = 0.66666666666666663*tmp_28;
      real_t tmp_33 = 0.16666666666666666*tmp_26;
      real_t tmp_34 = 0.16666666666666666*tmp_28;
      real_t tmp_35 = 0.16666666666666666*tmp_26;
      real_t tmp_36 = tmp_7*tmp_9;
      real_t tmp_37 = tmp_1*tmp_7;
      real_t a_0_0 = tmp_14*(tmp_1*tmp_8 + tmp_8*tmp_9) + tmp_19*(tmp_1*tmp_17 + tmp_17*tmp_9) + tmp_24*(tmp_1*tmp_22 + tmp_22*tmp_9);
      real_t a_0_1 = tmp_13*tmp_27*(tmp_2 - 1) + tmp_18*tmp_27*(tmp_15 - 1) + tmp_23*tmp_27*(tmp_20 - 1);
      real_t a_0_2 = tmp_13*tmp_29*(tmp_3 - 1) + tmp_18*tmp_29*(tmp_16 - 1) + tmp_23*tmp_29*(tmp_21 - 1);
      real_t a_0_3 = tmp_14*(tmp_30 + tmp_31) + tmp_19*(tmp_32 + tmp_33) + tmp_24*(tmp_34 + tmp_35);
      real_t a_0_4 = tmp_14*(-tmp_31 + tmp_36*(-tmp_2 - 1.333333333333333)) + tmp_19*(-tmp_33 + tmp_36*(2.666666666666667 - tmp_15)) + tmp_24*(-tmp_35 + tmp_36*(2.666666666666667 - tmp_20));
      real_t a_0_5 = tmp_14*(-tmp_30 + tmp_37*(2.666666666666667 - tmp_3)) + tmp_19*(-tmp_32 + tmp_37*(-tmp_16 - 1.333333333333333)) + tmp_24*(-tmp_34 + tmp_37*(2.666666666666667 - tmp_21));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsilonvar_0_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = -p_affine_0_0;
      real_t tmp_11 = p_affine_1_0 + tmp_10;
      real_t tmp_12 = p_affine_3_2 + tmp_2;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = p_affine_2_0 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_3_0 + tmp_10;
      real_t tmp_18 = tmp_17*tmp_3;
      real_t tmp_19 = tmp_11*tmp_3;
      real_t tmp_20 = tmp_12*tmp_15;
      real_t tmp_21 = tmp_17*tmp_5;
      real_t tmp_22 = tmp_1*tmp_18 - tmp_1*tmp_20 + tmp_13*tmp_4 + tmp_14*tmp_16 - tmp_14*tmp_19 - tmp_21*tmp_4;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_26 = -tmp_1*tmp_12 + tmp_14*tmp_5;
      real_t tmp_27 = tmp_12*tmp_4 - tmp_14*tmp_3;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_6;
      real_t tmp_29 = tmp_16 - tmp_19;
      real_t tmp_30 = tmp_13 - tmp_21;
      real_t tmp_31 = tmp_18 - tmp_20;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_6;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_6*tmp_62;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_6*tmp_71;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_7 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_8 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_9 - 1.0;
      real_t tmp_103 = tmp_6*tmp_79;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_8;
      real_t tmp_149 = 4.0 - tmp_7;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_6;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_9;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_6;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_6;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_6;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_0_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = -p_affine_0_0;
      real_t tmp_11 = p_affine_1_0 + tmp_10;
      real_t tmp_12 = p_affine_3_2 + tmp_2;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = p_affine_2_0 + tmp_10;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_3_0 + tmp_10;
      real_t tmp_18 = tmp_17*tmp_3;
      real_t tmp_19 = tmp_11*tmp_3;
      real_t tmp_20 = tmp_12*tmp_15;
      real_t tmp_21 = tmp_17*tmp_5;
      real_t tmp_22 = 1.0 / (tmp_1*tmp_18 - tmp_1*tmp_20 + tmp_13*tmp_4 + tmp_14*tmp_16 - tmp_14*tmp_19 - tmp_21*tmp_4);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_25 = -tmp_1*tmp_12 + tmp_14*tmp_5;
      real_t tmp_26 = tmp_12*tmp_4 - tmp_14*tmp_3;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = tmp_16 - tmp_19;
      real_t tmp_42 = tmp_13 - tmp_21;
      real_t tmp_43 = tmp_18 - tmp_20;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_6*tmp_64;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_8;
      real_t tmp_96 = 4.0 - tmp_7;
      real_t tmp_97 = tmp_23*tmp_6;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_9;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_6) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_6) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_6) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_6*tmp_61);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_7 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_8 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_9 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_0_1_affine_q2::Scalar_Variable_Coefficient_2D( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback2D( Point3D( {in_0, in_1, 0} ) );
   }

   void p2_epsilonvar_0_1_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_0_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_0_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_0_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = p_affine_3_2 + tmp_2;
      real_t tmp_11 = -p_affine_0_0;
      real_t tmp_12 = p_affine_1_0 + tmp_11;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_0 + tmp_11;
      real_t tmp_15 = p_affine_3_1 + tmp_0;
      real_t tmp_16 = tmp_14*tmp_15;
      real_t tmp_17 = p_affine_3_0 + tmp_11;
      real_t tmp_18 = tmp_1*tmp_17;
      real_t tmp_19 = tmp_12*tmp_15;
      real_t tmp_20 = tmp_1*tmp_14;
      real_t tmp_21 = tmp_17*tmp_4;
      real_t tmp_22 = tmp_10*tmp_13 - tmp_10*tmp_20 + tmp_16*tmp_5 + tmp_18*tmp_3 - tmp_19*tmp_3 - tmp_21*tmp_5;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_15*tmp_5;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_15*tmp_3;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_6;
      real_t tmp_29 = tmp_13 - tmp_20;
      real_t tmp_30 = tmp_18 - tmp_19;
      real_t tmp_31 = tmp_16 - tmp_21;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_6;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_6*tmp_62;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_6*tmp_71;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_7 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_8 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_9 - 1.0;
      real_t tmp_103 = tmp_6*tmp_79;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_8;
      real_t tmp_149 = 4.0 - tmp_7;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_6;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_9;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_6;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_6;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_6;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_0_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = p_affine_3_2 + tmp_2;
      real_t tmp_11 = -p_affine_0_0;
      real_t tmp_12 = p_affine_1_0 + tmp_11;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_2_0 + tmp_11;
      real_t tmp_15 = p_affine_3_1 + tmp_0;
      real_t tmp_16 = tmp_14*tmp_15;
      real_t tmp_17 = p_affine_3_0 + tmp_11;
      real_t tmp_18 = tmp_1*tmp_17;
      real_t tmp_19 = tmp_12*tmp_15;
      real_t tmp_20 = tmp_1*tmp_14;
      real_t tmp_21 = tmp_17*tmp_4;
      real_t tmp_22 = 1.0 / (tmp_10*tmp_13 - tmp_10*tmp_20 + tmp_16*tmp_5 + tmp_18*tmp_3 - tmp_19*tmp_3 - tmp_21*tmp_5);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_15*tmp_5;
      real_t tmp_26 = tmp_10*tmp_4 - tmp_15*tmp_3;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = tmp_13 - tmp_20;
      real_t tmp_42 = tmp_18 - tmp_19;
      real_t tmp_43 = tmp_16 - tmp_21;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_6*tmp_64;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_8;
      real_t tmp_96 = 4.0 - tmp_7;
      real_t tmp_97 = tmp_23*tmp_6;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_9;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_6) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_6) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_6) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_6*tmp_61);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_7 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_8 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_9 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_0_2_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_1_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = 0.66666666666666663;
      real_t tmp_3 = 2.6666666666666665;
      real_t tmp_4 = -p_affine_0_1;
      real_t tmp_5 = p_affine_2_1 + tmp_4;
      real_t tmp_6 = tmp_1*tmp_5;
      real_t tmp_7 = tmp_6 - (p_affine_1_1 + tmp_4)*(p_affine_2_0 + tmp_0);
      real_t tmp_8 = 1.0 / (tmp_7);
      real_t tmp_9 = 0.5*tmp_8;
      real_t tmp_10 = tmp_9*(tmp_2 + tmp_3 - 3);
      real_t tmp_11 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_12 = tmp_1*tmp_10 + tmp_10*tmp_11;
      real_t tmp_13 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_14 = tmp_10*tmp_13 + tmp_10*tmp_5;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 4*tmp_15;
      real_t tmp_17 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_18 = tmp_16*tmp_17;
      real_t tmp_19 = tmp_14*tmp_18;
      real_t tmp_20 = 2.6666666666666665;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_9*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22 + tmp_11*tmp_22;
      real_t tmp_24 = tmp_13*tmp_22 + tmp_22*tmp_5;
      real_t tmp_25 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_26 = tmp_16*tmp_25;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_9*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30 + tmp_11*tmp_30;
      real_t tmp_32 = tmp_13*tmp_30 + tmp_30*tmp_5;
      real_t tmp_33 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_34 = tmp_16*tmp_33;
      real_t tmp_35 = tmp_32*tmp_34;
      real_t tmp_36 = tmp_14*tmp_17;
      real_t tmp_37 = tmp_2 - 1;
      real_t tmp_38 = 2.0*tmp_8;
      real_t tmp_39 = tmp_11*tmp_38;
      real_t tmp_40 = tmp_15*tmp_39;
      real_t tmp_41 = tmp_37*tmp_40;
      real_t tmp_42 = tmp_24*tmp_25;
      real_t tmp_43 = tmp_20 - 1;
      real_t tmp_44 = tmp_40*tmp_43;
      real_t tmp_45 = tmp_32*tmp_33;
      real_t tmp_46 = tmp_28 - 1;
      real_t tmp_47 = tmp_40*tmp_46;
      real_t tmp_48 = tmp_3 - 1;
      real_t tmp_49 = tmp_1*tmp_38;
      real_t tmp_50 = tmp_15*tmp_49;
      real_t tmp_51 = tmp_48*tmp_50;
      real_t tmp_52 = tmp_21 - 1;
      real_t tmp_53 = tmp_50*tmp_52;
      real_t tmp_54 = tmp_29 - 1;
      real_t tmp_55 = tmp_50*tmp_54;
      real_t tmp_56 = 0.16666666666666666*tmp_49;
      real_t tmp_57 = 0.66666666666666663*tmp_39;
      real_t tmp_58 = tmp_56 + tmp_57;
      real_t tmp_59 = 0.66666666666666663*tmp_49;
      real_t tmp_60 = 0.16666666666666666*tmp_39;
      real_t tmp_61 = tmp_59 + tmp_60;
      real_t tmp_62 = 0.16666666666666666*tmp_49;
      real_t tmp_63 = 0.16666666666666666*tmp_39;
      real_t tmp_64 = tmp_62 + tmp_63;
      real_t tmp_65 = -tmp_2 - 1.333333333333333;
      real_t tmp_66 = tmp_1*tmp_9;
      real_t tmp_67 = -tmp_57 + tmp_65*tmp_66;
      real_t tmp_68 = 2.666666666666667 - tmp_20;
      real_t tmp_69 = -tmp_60 + tmp_66*tmp_68;
      real_t tmp_70 = 2.666666666666667 - tmp_28;
      real_t tmp_71 = -tmp_63 + tmp_66*tmp_70;
      real_t tmp_72 = 2.666666666666667 - tmp_3;
      real_t tmp_73 = tmp_11*tmp_9;
      real_t tmp_74 = -tmp_56 + tmp_72*tmp_73;
      real_t tmp_75 = -tmp_21 - 1.333333333333333;
      real_t tmp_76 = -tmp_59 + tmp_73*tmp_75;
      real_t tmp_77 = 2.666666666666667 - tmp_29;
      real_t tmp_78 = -tmp_62 + tmp_73*tmp_77;
      real_t tmp_79 = tmp_12*tmp_17;
      real_t tmp_80 = tmp_38*tmp_5;
      real_t tmp_81 = tmp_15*tmp_80;
      real_t tmp_82 = tmp_37*tmp_81;
      real_t tmp_83 = tmp_23*tmp_25;
      real_t tmp_84 = tmp_43*tmp_81;
      real_t tmp_85 = tmp_31*tmp_33;
      real_t tmp_86 = tmp_46*tmp_81;
      real_t tmp_87 = tmp_15*tmp_17;
      real_t tmp_88 = 1.0/(tmp_7*tmp_7);
      real_t tmp_89 = tmp_87*tmp_88;
      real_t tmp_90 = tmp_11*tmp_5;
      real_t tmp_91 = tmp_15*tmp_88;
      real_t tmp_92 = tmp_90*tmp_91;
      real_t tmp_93 = tmp_37*tmp_48*tmp_89;
      real_t tmp_94 = tmp_6*tmp_91;
      real_t tmp_95 = tmp_25*tmp_43*tmp_52;
      real_t tmp_96 = tmp_33*tmp_46*tmp_54;
      real_t tmp_97 = tmp_17*tmp_82;
      real_t tmp_98 = tmp_25*tmp_84;
      real_t tmp_99 = tmp_33*tmp_86;
      real_t tmp_100 = tmp_13*tmp_38;
      real_t tmp_101 = tmp_100*tmp_15;
      real_t tmp_102 = tmp_101*tmp_52;
      real_t tmp_103 = tmp_101*tmp_54;
      real_t tmp_104 = tmp_11*tmp_13;
      real_t tmp_105 = tmp_104*tmp_91;
      real_t tmp_106 = tmp_1*tmp_13;
      real_t tmp_107 = tmp_106*tmp_91;
      real_t tmp_108 = tmp_100*tmp_48*tmp_87;
      real_t tmp_109 = tmp_102*tmp_25;
      real_t tmp_110 = tmp_103*tmp_33;
      real_t tmp_111 = 0.16666666666666666*tmp_100;
      real_t tmp_112 = 0.66666666666666663*tmp_80;
      real_t tmp_113 = tmp_111 + tmp_112;
      real_t tmp_114 = tmp_113*tmp_18;
      real_t tmp_115 = 0.66666666666666663*tmp_100;
      real_t tmp_116 = 0.16666666666666666*tmp_80;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = tmp_117*tmp_26;
      real_t tmp_119 = 0.16666666666666666*tmp_100;
      real_t tmp_120 = 0.16666666666666666*tmp_80;
      real_t tmp_121 = tmp_119 + tmp_120;
      real_t tmp_122 = tmp_121*tmp_34;
      real_t tmp_123 = tmp_113*tmp_17;
      real_t tmp_124 = tmp_117*tmp_25;
      real_t tmp_125 = tmp_121*tmp_33;
      real_t tmp_126 = tmp_13*tmp_9;
      real_t tmp_127 = -tmp_112 + tmp_126*tmp_65;
      real_t tmp_128 = tmp_127*tmp_18;
      real_t tmp_129 = -tmp_116 + tmp_126*tmp_68;
      real_t tmp_130 = tmp_129*tmp_26;
      real_t tmp_131 = -tmp_120 + tmp_126*tmp_70;
      real_t tmp_132 = tmp_131*tmp_34;
      real_t tmp_133 = tmp_127*tmp_17;
      real_t tmp_134 = tmp_129*tmp_25;
      real_t tmp_135 = tmp_131*tmp_33;
      real_t tmp_136 = tmp_5*tmp_9;
      real_t tmp_137 = -tmp_111 + tmp_136*tmp_72;
      real_t tmp_138 = tmp_137*tmp_18;
      real_t tmp_139 = -tmp_115 + tmp_136*tmp_75;
      real_t tmp_140 = tmp_139*tmp_26;
      real_t tmp_141 = -tmp_119 + tmp_136*tmp_77;
      real_t tmp_142 = tmp_141*tmp_34;
      real_t tmp_143 = tmp_137*tmp_17;
      real_t tmp_144 = tmp_139*tmp_25;
      real_t tmp_145 = tmp_141*tmp_33;
      real_t a_0_0 = tmp_12*tmp_19 + tmp_23*tmp_27 + tmp_31*tmp_35;
      real_t a_0_1 = tmp_36*tmp_41 + tmp_42*tmp_44 + tmp_45*tmp_47;
      real_t a_0_2 = tmp_36*tmp_51 + tmp_42*tmp_53 + tmp_45*tmp_55;
      real_t a_0_3 = tmp_19*tmp_58 + tmp_27*tmp_61 + tmp_35*tmp_64;
      real_t a_0_4 = tmp_19*tmp_67 + tmp_27*tmp_69 + tmp_35*tmp_71;
      real_t a_0_5 = tmp_19*tmp_74 + tmp_27*tmp_76 + tmp_35*tmp_78;
      real_t a_1_0 = tmp_79*tmp_82 + tmp_83*tmp_84 + tmp_85*tmp_86;
      real_t a_1_1 = tmp_25*(tmp_43*tmp_43)*tmp_92 + tmp_33*(tmp_46*tmp_46)*tmp_92 + (tmp_37*tmp_37)*tmp_89*tmp_90;
      real_t a_1_2 = tmp_6*tmp_93 + tmp_94*tmp_95 + tmp_94*tmp_96;
      real_t a_1_3 = tmp_58*tmp_97 + tmp_61*tmp_98 + tmp_64*tmp_99;
      real_t a_1_4 = tmp_67*tmp_97 + tmp_69*tmp_98 + tmp_71*tmp_99;
      real_t a_1_5 = tmp_74*tmp_97 + tmp_76*tmp_98 + tmp_78*tmp_99;
      real_t a_2_0 = tmp_101*tmp_48*tmp_79 + tmp_102*tmp_83 + tmp_103*tmp_85;
      real_t a_2_1 = tmp_104*tmp_93 + tmp_105*tmp_95 + tmp_105*tmp_96;
      real_t a_2_2 = tmp_106*(tmp_48*tmp_48)*tmp_89 + tmp_107*tmp_25*(tmp_52*tmp_52) + tmp_107*tmp_33*(tmp_54*tmp_54);
      real_t a_2_3 = tmp_108*tmp_58 + tmp_109*tmp_61 + tmp_110*tmp_64;
      real_t a_2_4 = tmp_108*tmp_67 + tmp_109*tmp_69 + tmp_110*tmp_71;
      real_t a_2_5 = tmp_108*tmp_74 + tmp_109*tmp_76 + tmp_110*tmp_78;
      real_t a_3_0 = tmp_114*tmp_12 + tmp_118*tmp_23 + tmp_122*tmp_31;
      real_t a_3_1 = tmp_123*tmp_41 + tmp_124*tmp_44 + tmp_125*tmp_47;
      real_t a_3_2 = tmp_123*tmp_51 + tmp_124*tmp_53 + tmp_125*tmp_55;
      real_t a_3_3 = tmp_114*tmp_58 + tmp_118*tmp_61 + tmp_122*tmp_64;
      real_t a_3_4 = tmp_114*tmp_67 + tmp_118*tmp_69 + tmp_122*tmp_71;
      real_t a_3_5 = tmp_114*tmp_74 + tmp_118*tmp_76 + tmp_122*tmp_78;
      real_t a_4_0 = tmp_12*tmp_128 + tmp_130*tmp_23 + tmp_132*tmp_31;
      real_t a_4_1 = tmp_133*tmp_41 + tmp_134*tmp_44 + tmp_135*tmp_47;
      real_t a_4_2 = tmp_133*tmp_51 + tmp_134*tmp_53 + tmp_135*tmp_55;
      real_t a_4_3 = tmp_128*tmp_58 + tmp_130*tmp_61 + tmp_132*tmp_64;
      real_t a_4_4 = tmp_128*tmp_67 + tmp_130*tmp_69 + tmp_132*tmp_71;
      real_t a_4_5 = tmp_128*tmp_74 + tmp_130*tmp_76 + tmp_132*tmp_78;
      real_t a_5_0 = tmp_12*tmp_138 + tmp_140*tmp_23 + tmp_142*tmp_31;
      real_t a_5_1 = tmp_143*tmp_41 + tmp_144*tmp_44 + tmp_145*tmp_47;
      real_t a_5_2 = tmp_143*tmp_51 + tmp_144*tmp_53 + tmp_145*tmp_55;
      real_t a_5_3 = tmp_138*tmp_58 + tmp_140*tmp_61 + tmp_142*tmp_64;
      real_t a_5_4 = tmp_138*tmp_67 + tmp_140*tmp_69 + tmp_142*tmp_71;
      real_t a_5_5 = tmp_138*tmp_74 + tmp_140*tmp_76 + tmp_142*tmp_78;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsilonvar_1_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = 0.66666666666666663;
      real_t tmp_3 = 2.6666666666666665;
      real_t tmp_4 = -p_affine_0_1;
      real_t tmp_5 = p_affine_2_1 + tmp_4;
      real_t tmp_6 = 1.0 / (tmp_1*tmp_5 - (p_affine_1_1 + tmp_4)*(p_affine_2_0 + tmp_0));
      real_t tmp_7 = 0.5*tmp_6;
      real_t tmp_8 = tmp_7*(tmp_2 + tmp_3 - 3);
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_11 = 4*tmp_10;
      real_t tmp_12 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_13 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_0_0*(tmp_12*tmp_8 + tmp_5*tmp_8);
      real_t tmp_14 = tmp_11*tmp_13;
      real_t tmp_15 = 2.6666666666666665;
      real_t tmp_16 = 0.66666666666666663;
      real_t tmp_17 = tmp_7*(tmp_15 + tmp_16 - 3);
      real_t tmp_18 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_1_0*(tmp_12*tmp_17 + tmp_17*tmp_5);
      real_t tmp_19 = tmp_11*tmp_18;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_7*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = 0.16666666666666666*Scalar_Variable_Coefficient_2D_2_0*(tmp_12*tmp_22 + tmp_22*tmp_5);
      real_t tmp_24 = tmp_11*tmp_23;
      real_t tmp_25 = 2.0*tmp_6;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_1*tmp_25;
      real_t tmp_29 = tmp_10*tmp_28;
      real_t tmp_30 = 0.16666666666666666*tmp_28;
      real_t tmp_31 = 0.66666666666666663*tmp_26;
      real_t tmp_32 = 0.66666666666666663*tmp_28;
      real_t tmp_33 = 0.16666666666666666*tmp_26;
      real_t tmp_34 = 0.16666666666666666*tmp_28;
      real_t tmp_35 = 0.16666666666666666*tmp_26;
      real_t tmp_36 = tmp_1*tmp_7;
      real_t tmp_37 = tmp_7*tmp_9;
      real_t a_0_0 = tmp_14*(tmp_1*tmp_8 + tmp_8*tmp_9) + tmp_19*(tmp_1*tmp_17 + tmp_17*tmp_9) + tmp_24*(tmp_1*tmp_22 + tmp_22*tmp_9);
      real_t a_0_1 = tmp_13*tmp_27*(tmp_2 - 1) + tmp_18*tmp_27*(tmp_15 - 1) + tmp_23*tmp_27*(tmp_20 - 1);
      real_t a_0_2 = tmp_13*tmp_29*(tmp_3 - 1) + tmp_18*tmp_29*(tmp_16 - 1) + tmp_23*tmp_29*(tmp_21 - 1);
      real_t a_0_3 = tmp_14*(tmp_30 + tmp_31) + tmp_19*(tmp_32 + tmp_33) + tmp_24*(tmp_34 + tmp_35);
      real_t a_0_4 = tmp_14*(-tmp_31 + tmp_36*(-tmp_2 - 1.333333333333333)) + tmp_19*(-tmp_33 + tmp_36*(2.666666666666667 - tmp_15)) + tmp_24*(-tmp_35 + tmp_36*(2.666666666666667 - tmp_20));
      real_t a_0_5 = tmp_14*(-tmp_30 + tmp_37*(2.666666666666667 - tmp_3)) + tmp_19*(-tmp_32 + tmp_37*(-tmp_16 - 1.333333333333333)) + tmp_24*(-tmp_34 + tmp_37*(2.666666666666667 - tmp_21));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsilonvar_1_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_1;
      real_t tmp_13 = p_affine_2_1 + tmp_12;
      real_t tmp_14 = p_affine_3_2 + tmp_2;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = p_affine_3_1 + tmp_12;
      real_t tmp_17 = p_affine_1_1 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_14;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = tmp_13*tmp_15 - tmp_13*tmp_21 + tmp_16*tmp_4 - tmp_16*tmp_7 + tmp_17*tmp_19 - tmp_17*tmp_20;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_26 = tmp_15 - tmp_21;
      real_t tmp_27 = tmp_19 - tmp_20;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_8;
      real_t tmp_29 = -tmp_13*tmp_3 + tmp_17*tmp_6;
      real_t tmp_30 = -tmp_14*tmp_17 + tmp_16*tmp_3;
      real_t tmp_31 = tmp_13*tmp_14 - tmp_16*tmp_6;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_8;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_62*tmp_8;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_71*tmp_8;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_9 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_10 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_11 - 1.0;
      real_t tmp_103 = tmp_79*tmp_8;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_10;
      real_t tmp_149 = 4.0 - tmp_9;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_8;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_11;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_8;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_8;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_8;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_1_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_1;
      real_t tmp_13 = p_affine_2_1 + tmp_12;
      real_t tmp_14 = p_affine_3_2 + tmp_2;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = p_affine_3_1 + tmp_12;
      real_t tmp_17 = p_affine_1_1 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_14;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = 1.0 / (tmp_13*tmp_15 - tmp_13*tmp_21 + tmp_16*tmp_4 - tmp_16*tmp_7 + tmp_17*tmp_19 - tmp_17*tmp_20);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_25 = tmp_15 - tmp_21;
      real_t tmp_26 = tmp_19 - tmp_20;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = -tmp_13*tmp_3 + tmp_17*tmp_6;
      real_t tmp_42 = -tmp_14*tmp_17 + tmp_16*tmp_3;
      real_t tmp_43 = tmp_13*tmp_14 - tmp_16*tmp_6;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_64*tmp_8;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_10;
      real_t tmp_96 = 4.0 - tmp_9;
      real_t tmp_97 = tmp_23*tmp_8;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_11;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_8) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_8) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_9 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_10 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_11 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_1_0_affine_q2::Scalar_Variable_Coefficient_2D( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback2D( Point3D( {in_0, in_1, 0} ) );
   }

   void p2_epsilonvar_1_0_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_1_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = 1.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_13 = 1.0*tmp_8;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_13*tmp_14 + tmp_13*tmp_3;
      real_t tmp_16 = 2*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_17 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_18 = 0.16666666666666666*tmp_17;
      real_t tmp_19 = 2.6666666666666665;
      real_t tmp_20 = 0.66666666666666663;
      real_t tmp_21 = tmp_5*(tmp_19 + tmp_20 - 3);
      real_t tmp_22 = tmp_1*tmp_21;
      real_t tmp_23 = tmp_10*tmp_21;
      real_t tmp_24 = 1.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_25 = 1.0*tmp_21;
      real_t tmp_26 = tmp_14*tmp_25 + tmp_25*tmp_3;
      real_t tmp_27 = 2*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_28 = 0.16666666666666666*tmp_17;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = tmp_5*(tmp_29 + tmp_30 - 3);
      real_t tmp_32 = tmp_1*tmp_31;
      real_t tmp_33 = tmp_10*tmp_31;
      real_t tmp_34 = 1.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_35 = 1.0*tmp_31;
      real_t tmp_36 = tmp_14*tmp_35 + tmp_3*tmp_35;
      real_t tmp_37 = 2*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_38 = 0.16666666666666666*tmp_17;
      real_t tmp_39 = 2.0*tmp_5;
      real_t tmp_40 = tmp_14*tmp_39;
      real_t tmp_41 = tmp_6 - 1;
      real_t tmp_42 = Scalar_Variable_Coefficient_2D_0_0*tmp_41;
      real_t tmp_43 = tmp_40*tmp_42;
      real_t tmp_44 = 0.5*tmp_11 + 0.5*tmp_9;
      real_t tmp_45 = tmp_1*tmp_39;
      real_t tmp_46 = tmp_42*tmp_45;
      real_t tmp_47 = tmp_19 - 1;
      real_t tmp_48 = Scalar_Variable_Coefficient_2D_1_0*tmp_47;
      real_t tmp_49 = tmp_40*tmp_48;
      real_t tmp_50 = 0.5*tmp_22 + 0.5*tmp_23;
      real_t tmp_51 = tmp_45*tmp_48;
      real_t tmp_52 = tmp_29 - 1;
      real_t tmp_53 = Scalar_Variable_Coefficient_2D_2_0*tmp_52;
      real_t tmp_54 = tmp_40*tmp_53;
      real_t tmp_55 = 0.5*tmp_32 + 0.5*tmp_33;
      real_t tmp_56 = tmp_45*tmp_53;
      real_t tmp_57 = tmp_18*(tmp_15*tmp_43 + tmp_44*tmp_46) + tmp_28*(tmp_26*tmp_49 + tmp_50*tmp_51) + tmp_38*(tmp_36*tmp_54 + tmp_55*tmp_56);
      real_t tmp_58 = tmp_7 - 1;
      real_t tmp_59 = Scalar_Variable_Coefficient_2D_0_0*tmp_58;
      real_t tmp_60 = tmp_3*tmp_39;
      real_t tmp_61 = tmp_59*tmp_60;
      real_t tmp_62 = tmp_10*tmp_39;
      real_t tmp_63 = tmp_59*tmp_62;
      real_t tmp_64 = tmp_20 - 1;
      real_t tmp_65 = Scalar_Variable_Coefficient_2D_1_0*tmp_64;
      real_t tmp_66 = tmp_60*tmp_65;
      real_t tmp_67 = tmp_62*tmp_65;
      real_t tmp_68 = tmp_30 - 1;
      real_t tmp_69 = Scalar_Variable_Coefficient_2D_2_0*tmp_68;
      real_t tmp_70 = tmp_60*tmp_69;
      real_t tmp_71 = tmp_62*tmp_69;
      real_t tmp_72 = tmp_18*(tmp_15*tmp_61 + tmp_44*tmp_63) + tmp_28*(tmp_26*tmp_66 + tmp_50*tmp_67) + tmp_38*(tmp_36*tmp_70 + tmp_55*tmp_71);
      real_t tmp_73 = 0.16666666666666666*tmp_5;
      real_t tmp_74 = tmp_3*tmp_73;
      real_t tmp_75 = 4.0*tmp_74;
      real_t tmp_76 = 0.66666666666666663*tmp_5;
      real_t tmp_77 = tmp_14*tmp_76;
      real_t tmp_78 = 4.0*tmp_77;
      real_t tmp_79 = tmp_75 + tmp_78;
      real_t tmp_80 = tmp_15*tmp_16;
      real_t tmp_81 = tmp_10*tmp_73;
      real_t tmp_82 = 2.0*tmp_81;
      real_t tmp_83 = tmp_1*tmp_76;
      real_t tmp_84 = 2.0*tmp_83;
      real_t tmp_85 = tmp_82 + tmp_84;
      real_t tmp_86 = 4*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_87 = tmp_44*tmp_86;
      real_t tmp_88 = 0.66666666666666663*tmp_5;
      real_t tmp_89 = tmp_3*tmp_88;
      real_t tmp_90 = 4.0*tmp_89;
      real_t tmp_91 = 0.16666666666666666*tmp_5;
      real_t tmp_92 = tmp_14*tmp_91;
      real_t tmp_93 = 4.0*tmp_92;
      real_t tmp_94 = tmp_90 + tmp_93;
      real_t tmp_95 = tmp_26*tmp_27;
      real_t tmp_96 = tmp_10*tmp_88;
      real_t tmp_97 = 2.0*tmp_96;
      real_t tmp_98 = tmp_1*tmp_91;
      real_t tmp_99 = 2.0*tmp_98;
      real_t tmp_100 = tmp_97 + tmp_99;
      real_t tmp_101 = 4*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_102 = tmp_101*tmp_50;
      real_t tmp_103 = 0.16666666666666666*tmp_5;
      real_t tmp_104 = tmp_103*tmp_3;
      real_t tmp_105 = 4.0*tmp_104;
      real_t tmp_106 = 0.16666666666666666*tmp_5;
      real_t tmp_107 = tmp_106*tmp_14;
      real_t tmp_108 = 4.0*tmp_107;
      real_t tmp_109 = tmp_105 + tmp_108;
      real_t tmp_110 = tmp_36*tmp_37;
      real_t tmp_111 = tmp_10*tmp_103;
      real_t tmp_112 = 2.0*tmp_111;
      real_t tmp_113 = tmp_1*tmp_106;
      real_t tmp_114 = 2.0*tmp_113;
      real_t tmp_115 = tmp_112 + tmp_114;
      real_t tmp_116 = 4*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_117 = tmp_116*tmp_55;
      real_t tmp_118 = tmp_18*(tmp_79*tmp_80 + tmp_85*tmp_87) + tmp_28*(tmp_100*tmp_102 + tmp_94*tmp_95) + tmp_38*(tmp_109*tmp_110 + tmp_115*tmp_117);
      real_t tmp_119 = tmp_5*(-tmp_6 - 1.333333333333333);
      real_t tmp_120 = 1.0*tmp_3;
      real_t tmp_121 = tmp_119*tmp_120 - tmp_78;
      real_t tmp_122 = 0.5*tmp_10;
      real_t tmp_123 = tmp_119*tmp_122 - tmp_84;
      real_t tmp_124 = tmp_5*(2.666666666666667 - tmp_19);
      real_t tmp_125 = tmp_120*tmp_124 - tmp_93;
      real_t tmp_126 = tmp_122*tmp_124 - tmp_99;
      real_t tmp_127 = tmp_5*(2.666666666666667 - tmp_29);
      real_t tmp_128 = -tmp_108 + tmp_120*tmp_127;
      real_t tmp_129 = -tmp_114 + tmp_122*tmp_127;
      real_t tmp_130 = tmp_18*(tmp_121*tmp_80 + tmp_123*tmp_87) + tmp_28*(tmp_102*tmp_126 + tmp_125*tmp_95) + tmp_38*(tmp_110*tmp_128 + tmp_117*tmp_129);
      real_t tmp_131 = tmp_5*(2.666666666666667 - tmp_7);
      real_t tmp_132 = 1.0*tmp_14;
      real_t tmp_133 = tmp_131*tmp_132 - tmp_75;
      real_t tmp_134 = 0.5*tmp_1;
      real_t tmp_135 = tmp_131*tmp_134 - tmp_82;
      real_t tmp_136 = tmp_5*(-tmp_20 - 1.333333333333333);
      real_t tmp_137 = tmp_132*tmp_136 - tmp_90;
      real_t tmp_138 = tmp_134*tmp_136 - tmp_97;
      real_t tmp_139 = tmp_5*(2.666666666666667 - tmp_30);
      real_t tmp_140 = -tmp_105 + tmp_132*tmp_139;
      real_t tmp_141 = -tmp_112 + tmp_134*tmp_139;
      real_t tmp_142 = tmp_18*(tmp_133*tmp_80 + tmp_135*tmp_87) + tmp_28*(tmp_102*tmp_138 + tmp_137*tmp_95) + tmp_38*(tmp_110*tmp_140 + tmp_117*tmp_141);
      real_t tmp_143 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_144 = tmp_143*(tmp_41*tmp_41);
      real_t tmp_145 = 2.0*(tmp_14*tmp_14);
      real_t tmp_146 = (tmp_1*tmp_1);
      real_t tmp_147 = tmp_143*(tmp_47*tmp_47);
      real_t tmp_148 = tmp_143*(tmp_52*tmp_52);
      real_t tmp_149 = tmp_143*tmp_58;
      real_t tmp_150 = 2.0*tmp_14*tmp_3;
      real_t tmp_151 = tmp_1*tmp_10;
      real_t tmp_152 = tmp_143*tmp_64;
      real_t tmp_153 = tmp_143*tmp_68;
      real_t tmp_154 = tmp_18*(tmp_12*tmp_149*tmp_151*tmp_41 + tmp_149*tmp_150*tmp_42) + tmp_28*(tmp_150*tmp_152*tmp_48 + tmp_151*tmp_152*tmp_24*tmp_47) + tmp_38*(tmp_150*tmp_153*tmp_53 + tmp_151*tmp_153*tmp_34*tmp_52);
      real_t tmp_155 = tmp_18*(tmp_43*tmp_79 + tmp_46*tmp_85) + tmp_28*(tmp_100*tmp_51 + tmp_49*tmp_94) + tmp_38*(tmp_109*tmp_54 + tmp_115*tmp_56);
      real_t tmp_156 = tmp_18*(tmp_121*tmp_43 + tmp_123*tmp_46) + tmp_28*(tmp_125*tmp_49 + tmp_126*tmp_51) + tmp_38*(tmp_128*tmp_54 + tmp_129*tmp_56);
      real_t tmp_157 = tmp_18*(tmp_133*tmp_43 + tmp_135*tmp_46) + tmp_28*(tmp_137*tmp_49 + tmp_138*tmp_51) + tmp_38*(tmp_140*tmp_54 + tmp_141*tmp_56);
      real_t tmp_158 = tmp_143*(tmp_58*tmp_58);
      real_t tmp_159 = 2.0*(tmp_3*tmp_3);
      real_t tmp_160 = (tmp_10*tmp_10);
      real_t tmp_161 = tmp_143*(tmp_64*tmp_64);
      real_t tmp_162 = tmp_143*(tmp_68*tmp_68);
      real_t tmp_163 = tmp_18*(tmp_61*tmp_79 + tmp_63*tmp_85) + tmp_28*(tmp_100*tmp_67 + tmp_66*tmp_94) + tmp_38*(tmp_109*tmp_70 + tmp_115*tmp_71);
      real_t tmp_164 = tmp_18*(tmp_121*tmp_61 + tmp_123*tmp_63) + tmp_28*(tmp_125*tmp_66 + tmp_126*tmp_67) + tmp_38*(tmp_128*tmp_70 + tmp_129*tmp_71);
      real_t tmp_165 = tmp_18*(tmp_133*tmp_61 + tmp_135*tmp_63) + tmp_28*(tmp_137*tmp_66 + tmp_138*tmp_67) + tmp_38*(tmp_140*tmp_70 + tmp_141*tmp_71);
      real_t tmp_166 = 32.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_167 = 16.0*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_168 = 32.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_169 = 16.0*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_170 = 32.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_171 = 16.0*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_172 = tmp_16*tmp_79;
      real_t tmp_173 = tmp_85*tmp_86;
      real_t tmp_174 = tmp_27*tmp_94;
      real_t tmp_175 = tmp_100*tmp_101;
      real_t tmp_176 = tmp_109*tmp_37;
      real_t tmp_177 = tmp_115*tmp_116;
      real_t tmp_178 = tmp_18*(tmp_121*tmp_172 + tmp_123*tmp_173) + tmp_28*(tmp_125*tmp_174 + tmp_126*tmp_175) + tmp_38*(tmp_128*tmp_176 + tmp_129*tmp_177);
      real_t tmp_179 = tmp_18*(tmp_133*tmp_172 + tmp_135*tmp_173) + tmp_28*(tmp_137*tmp_174 + tmp_138*tmp_175) + tmp_38*(tmp_140*tmp_176 + tmp_141*tmp_177);
      real_t tmp_180 = 0.25*tmp_119;
      real_t tmp_181 = 0.25*tmp_124;
      real_t tmp_182 = 0.25*tmp_127;
      real_t tmp_183 = tmp_18*(tmp_121*tmp_133*tmp_16 + tmp_123*tmp_135*tmp_86) + tmp_28*(tmp_101*tmp_126*tmp_138 + tmp_125*tmp_137*tmp_27) + tmp_38*(tmp_116*tmp_129*tmp_141 + tmp_128*tmp_140*tmp_37);
      real_t tmp_184 = 0.25*tmp_131;
      real_t tmp_185 = 0.25*tmp_136;
      real_t tmp_186 = 0.25*tmp_139;
      real_t a_0_0 = tmp_18*(tmp_12*((tmp_11 + tmp_9)*(tmp_11 + tmp_9)) + (tmp_15*tmp_15)*tmp_16) + tmp_28*(tmp_24*((tmp_22 + tmp_23)*(tmp_22 + tmp_23)) + (tmp_26*tmp_26)*tmp_27) + tmp_38*(tmp_34*((tmp_32 + tmp_33)*(tmp_32 + tmp_33)) + (tmp_36*tmp_36)*tmp_37);
      real_t a_0_1 = tmp_57;
      real_t a_0_2 = tmp_72;
      real_t a_0_3 = tmp_118;
      real_t a_0_4 = tmp_130;
      real_t a_0_5 = tmp_142;
      real_t a_1_0 = tmp_57;
      real_t a_1_1 = tmp_18*(Scalar_Variable_Coefficient_2D_0_0*tmp_144*tmp_145 + tmp_12*tmp_144*tmp_146) + tmp_28*(Scalar_Variable_Coefficient_2D_1_0*tmp_145*tmp_147 + tmp_146*tmp_147*tmp_24) + tmp_38*(Scalar_Variable_Coefficient_2D_2_0*tmp_145*tmp_148 + tmp_146*tmp_148*tmp_34);
      real_t a_1_2 = tmp_154;
      real_t a_1_3 = tmp_155;
      real_t a_1_4 = tmp_156;
      real_t a_1_5 = tmp_157;
      real_t a_2_0 = tmp_72;
      real_t a_2_1 = tmp_154;
      real_t a_2_2 = tmp_18*(Scalar_Variable_Coefficient_2D_0_0*tmp_158*tmp_159 + tmp_12*tmp_158*tmp_160) + tmp_28*(Scalar_Variable_Coefficient_2D_1_0*tmp_159*tmp_161 + tmp_160*tmp_161*tmp_24) + tmp_38*(Scalar_Variable_Coefficient_2D_2_0*tmp_159*tmp_162 + tmp_160*tmp_162*tmp_34);
      real_t a_2_3 = tmp_163;
      real_t a_2_4 = tmp_164;
      real_t a_2_5 = tmp_165;
      real_t a_3_0 = tmp_118;
      real_t a_3_1 = tmp_155;
      real_t a_3_2 = tmp_163;
      real_t a_3_3 = tmp_18*(tmp_166*((tmp_74 + tmp_77)*(tmp_74 + tmp_77)) + tmp_167*((tmp_81 + tmp_83)*(tmp_81 + tmp_83))) + tmp_28*(tmp_168*((tmp_89 + tmp_92)*(tmp_89 + tmp_92)) + tmp_169*((tmp_96 + tmp_98)*(tmp_96 + tmp_98))) + tmp_38*(tmp_170*((tmp_104 + tmp_107)*(tmp_104 + tmp_107)) + tmp_171*((tmp_111 + tmp_113)*(tmp_111 + tmp_113)));
      real_t a_3_4 = tmp_178;
      real_t a_3_5 = tmp_179;
      real_t a_4_0 = tmp_130;
      real_t a_4_1 = tmp_156;
      real_t a_4_2 = tmp_164;
      real_t a_4_3 = tmp_178;
      real_t a_4_4 = tmp_18*(tmp_166*((tmp_180*tmp_3 - tmp_77)*(tmp_180*tmp_3 - tmp_77)) + tmp_167*((tmp_10*tmp_180 - tmp_83)*(tmp_10*tmp_180 - tmp_83))) + tmp_28*(tmp_168*((tmp_181*tmp_3 - tmp_92)*(tmp_181*tmp_3 - tmp_92)) + tmp_169*((tmp_10*tmp_181 - tmp_98)*(tmp_10*tmp_181 - tmp_98))) + tmp_38*(tmp_170*((-tmp_107 + tmp_182*tmp_3)*(-tmp_107 + tmp_182*tmp_3)) + tmp_171*((tmp_10*tmp_182 - tmp_113)*(tmp_10*tmp_182 - tmp_113)));
      real_t a_4_5 = tmp_183;
      real_t a_5_0 = tmp_142;
      real_t a_5_1 = tmp_157;
      real_t a_5_2 = tmp_165;
      real_t a_5_3 = tmp_179;
      real_t a_5_4 = tmp_183;
      real_t a_5_5 = tmp_18*(tmp_166*((tmp_14*tmp_184 - tmp_74)*(tmp_14*tmp_184 - tmp_74)) + tmp_167*((tmp_1*tmp_184 - tmp_81)*(tmp_1*tmp_184 - tmp_81))) + tmp_28*(tmp_168*((tmp_14*tmp_185 - tmp_89)*(tmp_14*tmp_185 - tmp_89)) + tmp_169*((tmp_1*tmp_185 - tmp_96)*(tmp_1*tmp_185 - tmp_96))) + tmp_38*(tmp_170*((-tmp_104 + tmp_14*tmp_186)*(-tmp_104 + tmp_14*tmp_186)) + tmp_171*((tmp_1*tmp_186 - tmp_111)*(tmp_1*tmp_186 - tmp_111)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsilonvar_1_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Scalar_Variable_Coefficient_2D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_2D_2_0 = 0;
      Scalar_Variable_Coefficient_2D( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Scalar_Variable_Coefficient_2D_0_0 );
      Scalar_Variable_Coefficient_2D( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_1_0 );
      Scalar_Variable_Coefficient_2D( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Scalar_Variable_Coefficient_2D_2_0 );
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = 1.0*tmp_7;
      real_t tmp_12 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_13 = tmp_11*tmp_12 + tmp_11*tmp_3;
      real_t tmp_14 = 2*Scalar_Variable_Coefficient_2D_0_0;
      real_t tmp_15 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_16 = 0.16666666666666666*tmp_15;
      real_t tmp_17 = 2.6666666666666665;
      real_t tmp_18 = 0.66666666666666663;
      real_t tmp_19 = tmp_4*(tmp_17 + tmp_18 - 3);
      real_t tmp_20 = tmp_1*tmp_19;
      real_t tmp_21 = tmp_19*tmp_9;
      real_t tmp_22 = 1.0*tmp_19;
      real_t tmp_23 = tmp_12*tmp_22 + tmp_22*tmp_3;
      real_t tmp_24 = 2*Scalar_Variable_Coefficient_2D_1_0;
      real_t tmp_25 = 0.16666666666666666*tmp_15;
      real_t tmp_26 = 0.66666666666666663;
      real_t tmp_27 = 0.66666666666666663;
      real_t tmp_28 = tmp_4*(tmp_26 + tmp_27 - 3);
      real_t tmp_29 = tmp_1*tmp_28;
      real_t tmp_30 = tmp_28*tmp_9;
      real_t tmp_31 = 1.0*tmp_28;
      real_t tmp_32 = tmp_12*tmp_31 + tmp_3*tmp_31;
      real_t tmp_33 = 2*Scalar_Variable_Coefficient_2D_2_0;
      real_t tmp_34 = 0.16666666666666666*tmp_15;
      real_t tmp_35 = tmp_5 - 1;
      real_t tmp_36 = 2.0*tmp_4;
      real_t tmp_37 = tmp_12*tmp_36;
      real_t tmp_38 = Scalar_Variable_Coefficient_2D_0_0*tmp_13;
      real_t tmp_39 = tmp_1*tmp_36;
      real_t tmp_40 = Scalar_Variable_Coefficient_2D_0_0*(0.5*tmp_10 + 0.5*tmp_8);
      real_t tmp_41 = tmp_17 - 1;
      real_t tmp_42 = Scalar_Variable_Coefficient_2D_1_0*tmp_23;
      real_t tmp_43 = Scalar_Variable_Coefficient_2D_1_0*(0.5*tmp_20 + 0.5*tmp_21);
      real_t tmp_44 = tmp_26 - 1;
      real_t tmp_45 = Scalar_Variable_Coefficient_2D_2_0*tmp_32;
      real_t tmp_46 = Scalar_Variable_Coefficient_2D_2_0*(0.5*tmp_29 + 0.5*tmp_30);
      real_t tmp_47 = tmp_6 - 1;
      real_t tmp_48 = tmp_3*tmp_36;
      real_t tmp_49 = tmp_36*tmp_9;
      real_t tmp_50 = tmp_18 - 1;
      real_t tmp_51 = tmp_27 - 1;
      real_t tmp_52 = 4.0*tmp_4;
      real_t tmp_53 = tmp_3*tmp_52;
      real_t tmp_54 = 0.16666666666666666*tmp_53;
      real_t tmp_55 = tmp_12*tmp_52;
      real_t tmp_56 = 0.66666666666666663*tmp_55;
      real_t tmp_57 = tmp_13*tmp_14;
      real_t tmp_58 = 0.16666666666666666*tmp_49;
      real_t tmp_59 = 0.66666666666666663*tmp_39;
      real_t tmp_60 = 4*tmp_40;
      real_t tmp_61 = 0.66666666666666663*tmp_53;
      real_t tmp_62 = 0.16666666666666666*tmp_55;
      real_t tmp_63 = tmp_23*tmp_24;
      real_t tmp_64 = 0.66666666666666663*tmp_49;
      real_t tmp_65 = 0.16666666666666666*tmp_39;
      real_t tmp_66 = 4*tmp_43;
      real_t tmp_67 = 0.16666666666666666*tmp_53;
      real_t tmp_68 = 0.16666666666666666*tmp_55;
      real_t tmp_69 = tmp_32*tmp_33;
      real_t tmp_70 = 0.16666666666666666*tmp_49;
      real_t tmp_71 = 0.16666666666666666*tmp_39;
      real_t tmp_72 = 4*tmp_46;
      real_t tmp_73 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_74 = 1.0*tmp_3;
      real_t tmp_75 = 0.5*tmp_9;
      real_t tmp_76 = tmp_4*(2.666666666666667 - tmp_17);
      real_t tmp_77 = tmp_4*(2.666666666666667 - tmp_26);
      real_t tmp_78 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_79 = 1.0*tmp_12;
      real_t tmp_80 = 0.5*tmp_1;
      real_t tmp_81 = tmp_4*(-tmp_18 - 1.333333333333333);
      real_t tmp_82 = tmp_4*(2.666666666666667 - tmp_27);
      real_t a_0_0 = tmp_16*(1.0*Scalar_Variable_Coefficient_2D_0_0*((tmp_10 + tmp_8)*(tmp_10 + tmp_8)) + (tmp_13*tmp_13)*tmp_14) + tmp_25*(1.0*Scalar_Variable_Coefficient_2D_1_0*((tmp_20 + tmp_21)*(tmp_20 + tmp_21)) + (tmp_23*tmp_23)*tmp_24) + tmp_34*(1.0*Scalar_Variable_Coefficient_2D_2_0*((tmp_29 + tmp_30)*(tmp_29 + tmp_30)) + (tmp_32*tmp_32)*tmp_33);
      real_t a_0_1 = tmp_16*(tmp_35*tmp_37*tmp_38 + tmp_35*tmp_39*tmp_40) + tmp_25*(tmp_37*tmp_41*tmp_42 + tmp_39*tmp_41*tmp_43) + tmp_34*(tmp_37*tmp_44*tmp_45 + tmp_39*tmp_44*tmp_46);
      real_t a_0_2 = tmp_16*(tmp_38*tmp_47*tmp_48 + tmp_40*tmp_47*tmp_49) + tmp_25*(tmp_42*tmp_48*tmp_50 + tmp_43*tmp_49*tmp_50) + tmp_34*(tmp_45*tmp_48*tmp_51 + tmp_46*tmp_49*tmp_51);
      real_t a_0_3 = tmp_16*(tmp_57*(tmp_54 + tmp_56) + tmp_60*(tmp_58 + tmp_59)) + tmp_25*(tmp_63*(tmp_61 + tmp_62) + tmp_66*(tmp_64 + tmp_65)) + tmp_34*(tmp_69*(tmp_67 + tmp_68) + tmp_72*(tmp_70 + tmp_71));
      real_t a_0_4 = tmp_16*(tmp_57*(-tmp_56 + tmp_73*tmp_74) + tmp_60*(-tmp_59 + tmp_73*tmp_75)) + tmp_25*(tmp_63*(-tmp_62 + tmp_74*tmp_76) + tmp_66*(-tmp_65 + tmp_75*tmp_76)) + tmp_34*(tmp_69*(-tmp_68 + tmp_74*tmp_77) + tmp_72*(-tmp_71 + tmp_75*tmp_77));
      real_t a_0_5 = tmp_16*(tmp_57*(-tmp_54 + tmp_78*tmp_79) + tmp_60*(-tmp_58 + tmp_78*tmp_80)) + tmp_25*(tmp_63*(-tmp_61 + tmp_79*tmp_81) + tmp_66*(-tmp_64 + tmp_80*tmp_81)) + tmp_34*(tmp_69*(-tmp_67 + tmp_79*tmp_82) + tmp_72*(-tmp_70 + tmp_80*tmp_82));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsilonvar_1_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_31 = -tmp_11*tmp_3 + tmp_14*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = -tmp_10*tmp_14 + tmp_3*tmp_8;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_12 - tmp_16;
      real_t tmp_38 = 1.0*tmp_24;
      real_t tmp_39 = -tmp_18 + tmp_9;
      real_t tmp_40 = tmp_15 - tmp_17;
      real_t tmp_41 = tmp_37*tmp_38 + tmp_38*tmp_39 + tmp_38*tmp_40;
      real_t tmp_42 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_43 = p_affine_0_0*p_affine_1_1;
      real_t tmp_44 = p_affine_0_0*p_affine_1_2;
      real_t tmp_45 = p_affine_2_1*p_affine_3_2;
      real_t tmp_46 = p_affine_0_1*p_affine_1_0;
      real_t tmp_47 = p_affine_0_1*p_affine_1_2;
      real_t tmp_48 = p_affine_2_2*p_affine_3_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_0;
      real_t tmp_50 = p_affine_0_2*p_affine_1_1;
      real_t tmp_51 = p_affine_2_0*p_affine_3_1;
      real_t tmp_52 = p_affine_2_2*p_affine_3_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_2;
      real_t tmp_54 = p_affine_2_1*p_affine_3_0;
      real_t tmp_55 = std::abs(p_affine_0_0*tmp_45 - p_affine_0_0*tmp_52 + p_affine_0_1*tmp_48 - p_affine_0_1*tmp_53 + p_affine_0_2*tmp_51 - p_affine_0_2*tmp_54 - p_affine_1_0*tmp_45 + p_affine_1_0*tmp_52 - p_affine_1_1*tmp_48 + p_affine_1_1*tmp_53 - p_affine_1_2*tmp_51 + p_affine_1_2*tmp_54 + p_affine_2_0*tmp_47 - p_affine_2_0*tmp_50 - p_affine_2_1*tmp_44 + p_affine_2_1*tmp_49 + p_affine_2_2*tmp_43 - p_affine_2_2*tmp_46 - p_affine_3_0*tmp_47 + p_affine_3_0*tmp_50 + p_affine_3_1*tmp_44 - p_affine_3_1*tmp_49 - p_affine_3_2*tmp_43 + p_affine_3_2*tmp_46);
      real_t tmp_56 = 0.041666666666666657*tmp_55;
      real_t tmp_57 = 0.55278640450004235;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = tmp_20*(tmp_57 + tmp_58 + tmp_59 - 3.0);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_28*tmp_60;
      real_t tmp_64 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_65 = tmp_31*tmp_60;
      real_t tmp_66 = tmp_33*tmp_60;
      real_t tmp_67 = tmp_35*tmp_60;
      real_t tmp_68 = 1.0*tmp_60;
      real_t tmp_69 = tmp_37*tmp_68 + tmp_39*tmp_68 + tmp_40*tmp_68;
      real_t tmp_70 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_71 = 0.041666666666666657*tmp_55;
      real_t tmp_72 = 2.3416407864998732;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_20*(tmp_72 + tmp_73 + tmp_74 - 3.0);
      real_t tmp_76 = tmp_6*tmp_75;
      real_t tmp_77 = tmp_26*tmp_75;
      real_t tmp_78 = tmp_28*tmp_75;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_80 = tmp_31*tmp_75;
      real_t tmp_81 = tmp_33*tmp_75;
      real_t tmp_82 = tmp_35*tmp_75;
      real_t tmp_83 = 1.0*tmp_75;
      real_t tmp_84 = tmp_37*tmp_83 + tmp_39*tmp_83 + tmp_40*tmp_83;
      real_t tmp_85 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_86 = 0.041666666666666657*tmp_55;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = tmp_20*(tmp_87 + tmp_88 + tmp_89 - 3.0);
      real_t tmp_91 = tmp_6*tmp_90;
      real_t tmp_92 = tmp_26*tmp_90;
      real_t tmp_93 = tmp_28*tmp_90;
      real_t tmp_94 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_95 = tmp_31*tmp_90;
      real_t tmp_96 = tmp_33*tmp_90;
      real_t tmp_97 = tmp_35*tmp_90;
      real_t tmp_98 = 1.0*tmp_90;
      real_t tmp_99 = tmp_37*tmp_98 + tmp_39*tmp_98 + tmp_40*tmp_98;
      real_t tmp_100 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_101 = 0.041666666666666657*tmp_55;
      real_t tmp_102 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_103 = tmp_20*tmp_28;
      real_t tmp_104 = 2.0*tmp_103;
      real_t tmp_105 = tmp_21 - 1.0;
      real_t tmp_106 = Scalar_Variable_Coefficient_3D_0_0*tmp_105;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_20*tmp_40;
      real_t tmp_109 = 2.0*tmp_106;
      real_t tmp_110 = tmp_108*tmp_109;
      real_t tmp_111 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_112 = tmp_20*tmp_35;
      real_t tmp_113 = tmp_109*tmp_112;
      real_t tmp_114 = 0.5*tmp_61 + 0.5*tmp_62 + 0.5*tmp_63;
      real_t tmp_115 = tmp_57 - 1.0;
      real_t tmp_116 = Scalar_Variable_Coefficient_3D_1_0*tmp_115;
      real_t tmp_117 = tmp_104*tmp_116;
      real_t tmp_118 = 2.0*tmp_116;
      real_t tmp_119 = tmp_108*tmp_118;
      real_t tmp_120 = 0.5*tmp_65 + 0.5*tmp_66 + 0.5*tmp_67;
      real_t tmp_121 = tmp_112*tmp_118;
      real_t tmp_122 = 0.5*tmp_76 + 0.5*tmp_77 + 0.5*tmp_78;
      real_t tmp_123 = tmp_72 - 1.0;
      real_t tmp_124 = Scalar_Variable_Coefficient_3D_2_0*tmp_123;
      real_t tmp_125 = tmp_104*tmp_124;
      real_t tmp_126 = 2.0*tmp_124;
      real_t tmp_127 = tmp_108*tmp_126;
      real_t tmp_128 = 0.5*tmp_80 + 0.5*tmp_81 + 0.5*tmp_82;
      real_t tmp_129 = tmp_112*tmp_126;
      real_t tmp_130 = 0.5*tmp_91 + 0.5*tmp_92 + 0.5*tmp_93;
      real_t tmp_131 = tmp_87 - 1.0;
      real_t tmp_132 = Scalar_Variable_Coefficient_3D_3_0*tmp_131;
      real_t tmp_133 = tmp_104*tmp_132;
      real_t tmp_134 = 2.0*tmp_132;
      real_t tmp_135 = tmp_108*tmp_134;
      real_t tmp_136 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_137 = tmp_112*tmp_134;
      real_t tmp_138 = tmp_101*(tmp_130*tmp_133 + tmp_135*tmp_99 + tmp_136*tmp_137) + tmp_56*(tmp_102*tmp_107 + tmp_110*tmp_41 + tmp_111*tmp_113) + tmp_71*(tmp_114*tmp_117 + tmp_119*tmp_69 + tmp_120*tmp_121) + tmp_86*(tmp_122*tmp_125 + tmp_127*tmp_84 + tmp_128*tmp_129);
      real_t tmp_139 = tmp_20*tmp_26;
      real_t tmp_140 = tmp_22 - 1.0;
      real_t tmp_141 = Scalar_Variable_Coefficient_3D_0_0*tmp_140;
      real_t tmp_142 = 2.0*tmp_141;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_20*tmp_39;
      real_t tmp_145 = 2.0*tmp_144;
      real_t tmp_146 = tmp_141*tmp_145;
      real_t tmp_147 = tmp_20*tmp_33;
      real_t tmp_148 = tmp_142*tmp_147;
      real_t tmp_149 = tmp_58 - 1.0;
      real_t tmp_150 = Scalar_Variable_Coefficient_3D_1_0*tmp_149;
      real_t tmp_151 = 2.0*tmp_150;
      real_t tmp_152 = tmp_139*tmp_151;
      real_t tmp_153 = tmp_145*tmp_150;
      real_t tmp_154 = tmp_147*tmp_151;
      real_t tmp_155 = tmp_73 - 1.0;
      real_t tmp_156 = Scalar_Variable_Coefficient_3D_2_0*tmp_155;
      real_t tmp_157 = 2.0*tmp_156;
      real_t tmp_158 = tmp_139*tmp_157;
      real_t tmp_159 = tmp_145*tmp_156;
      real_t tmp_160 = tmp_147*tmp_157;
      real_t tmp_161 = tmp_88 - 1.0;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_3_0*tmp_161;
      real_t tmp_163 = 2.0*tmp_162;
      real_t tmp_164 = tmp_139*tmp_163;
      real_t tmp_165 = tmp_145*tmp_162;
      real_t tmp_166 = tmp_147*tmp_163;
      real_t tmp_167 = tmp_101*(tmp_130*tmp_164 + tmp_136*tmp_166 + tmp_165*tmp_99) + tmp_56*(tmp_102*tmp_143 + tmp_111*tmp_148 + tmp_146*tmp_41) + tmp_71*(tmp_114*tmp_152 + tmp_120*tmp_154 + tmp_153*tmp_69) + tmp_86*(tmp_122*tmp_158 + tmp_128*tmp_160 + tmp_159*tmp_84);
      real_t tmp_168 = tmp_20*tmp_6;
      real_t tmp_169 = 2.0*tmp_168;
      real_t tmp_170 = tmp_23 - 1.0;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_0_0*tmp_170;
      real_t tmp_172 = tmp_169*tmp_171;
      real_t tmp_173 = tmp_20*tmp_37;
      real_t tmp_174 = 2.0*tmp_171;
      real_t tmp_175 = tmp_173*tmp_174;
      real_t tmp_176 = tmp_20*tmp_31;
      real_t tmp_177 = tmp_174*tmp_176;
      real_t tmp_178 = tmp_59 - 1.0;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_1_0*tmp_178;
      real_t tmp_180 = tmp_169*tmp_179;
      real_t tmp_181 = 2.0*tmp_179;
      real_t tmp_182 = tmp_173*tmp_181;
      real_t tmp_183 = tmp_176*tmp_181;
      real_t tmp_184 = tmp_74 - 1.0;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_2_0*tmp_184;
      real_t tmp_186 = tmp_169*tmp_185;
      real_t tmp_187 = 2.0*tmp_185;
      real_t tmp_188 = tmp_173*tmp_187;
      real_t tmp_189 = tmp_176*tmp_187;
      real_t tmp_190 = tmp_89 - 1.0;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_3_0*tmp_190;
      real_t tmp_192 = tmp_169*tmp_191;
      real_t tmp_193 = 2.0*tmp_191;
      real_t tmp_194 = tmp_173*tmp_193;
      real_t tmp_195 = tmp_176*tmp_193;
      real_t tmp_196 = tmp_101*(tmp_130*tmp_192 + tmp_136*tmp_195 + tmp_194*tmp_99) + tmp_56*(tmp_102*tmp_172 + tmp_111*tmp_177 + tmp_175*tmp_41) + tmp_71*(tmp_114*tmp_180 + tmp_120*tmp_183 + tmp_182*tmp_69) + tmp_86*(tmp_122*tmp_186 + tmp_128*tmp_189 + tmp_188*tmp_84);
      real_t tmp_197 = 0.13819660112501059*tmp_20;
      real_t tmp_198 = tmp_197*tmp_6;
      real_t tmp_199 = 2.0*tmp_198;
      real_t tmp_200 = 0.58541019662496829*tmp_20;
      real_t tmp_201 = tmp_200*tmp_26;
      real_t tmp_202 = 2.0*tmp_201;
      real_t tmp_203 = tmp_199 + tmp_202;
      real_t tmp_204 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_205 = tmp_102*tmp_204;
      real_t tmp_206 = tmp_173*tmp_22;
      real_t tmp_207 = tmp_144*tmp_23;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_41*tmp_42;
      real_t tmp_210 = tmp_197*tmp_31;
      real_t tmp_211 = 2.0*tmp_210;
      real_t tmp_212 = tmp_200*tmp_33;
      real_t tmp_213 = 2.0*tmp_212;
      real_t tmp_214 = tmp_211 + tmp_213;
      real_t tmp_215 = tmp_111*tmp_204;
      real_t tmp_216 = 0.58541019662496829*tmp_20;
      real_t tmp_217 = tmp_216*tmp_6;
      real_t tmp_218 = 2.0*tmp_217;
      real_t tmp_219 = 0.13819660112501059*tmp_20;
      real_t tmp_220 = tmp_219*tmp_26;
      real_t tmp_221 = 2.0*tmp_220;
      real_t tmp_222 = tmp_218 + tmp_221;
      real_t tmp_223 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_224 = tmp_114*tmp_223;
      real_t tmp_225 = tmp_173*tmp_58;
      real_t tmp_226 = tmp_144*tmp_59;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_69*tmp_70;
      real_t tmp_229 = tmp_216*tmp_31;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = tmp_219*tmp_33;
      real_t tmp_232 = 2.0*tmp_231;
      real_t tmp_233 = tmp_230 + tmp_232;
      real_t tmp_234 = tmp_120*tmp_223;
      real_t tmp_235 = 0.13819660112501059*tmp_20;
      real_t tmp_236 = tmp_235*tmp_6;
      real_t tmp_237 = 2.0*tmp_236;
      real_t tmp_238 = 0.13819660112501059*tmp_20;
      real_t tmp_239 = tmp_238*tmp_26;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_237 + tmp_240;
      real_t tmp_242 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_243 = tmp_122*tmp_242;
      real_t tmp_244 = tmp_173*tmp_73;
      real_t tmp_245 = tmp_144*tmp_74;
      real_t tmp_246 = tmp_244 + tmp_245;
      real_t tmp_247 = tmp_84*tmp_85;
      real_t tmp_248 = tmp_235*tmp_31;
      real_t tmp_249 = 2.0*tmp_248;
      real_t tmp_250 = tmp_238*tmp_33;
      real_t tmp_251 = 2.0*tmp_250;
      real_t tmp_252 = tmp_249 + tmp_251;
      real_t tmp_253 = tmp_128*tmp_242;
      real_t tmp_254 = 0.13819660112501059*tmp_20;
      real_t tmp_255 = tmp_254*tmp_6;
      real_t tmp_256 = 2.0*tmp_255;
      real_t tmp_257 = 0.13819660112501059*tmp_20;
      real_t tmp_258 = tmp_257*tmp_26;
      real_t tmp_259 = 2.0*tmp_258;
      real_t tmp_260 = tmp_256 + tmp_259;
      real_t tmp_261 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_262 = tmp_130*tmp_261;
      real_t tmp_263 = tmp_173*tmp_88;
      real_t tmp_264 = tmp_144*tmp_89;
      real_t tmp_265 = tmp_263 + tmp_264;
      real_t tmp_266 = tmp_100*tmp_99;
      real_t tmp_267 = tmp_254*tmp_31;
      real_t tmp_268 = 2.0*tmp_267;
      real_t tmp_269 = tmp_257*tmp_33;
      real_t tmp_270 = 2.0*tmp_269;
      real_t tmp_271 = tmp_268 + tmp_270;
      real_t tmp_272 = tmp_136*tmp_261;
      real_t tmp_273 = tmp_101*(tmp_260*tmp_262 + tmp_265*tmp_266 + tmp_271*tmp_272) + tmp_56*(tmp_203*tmp_205 + tmp_208*tmp_209 + tmp_214*tmp_215) + tmp_71*(tmp_222*tmp_224 + tmp_227*tmp_228 + tmp_233*tmp_234) + tmp_86*(tmp_241*tmp_243 + tmp_246*tmp_247 + tmp_252*tmp_253);
      real_t tmp_274 = 0.13819660112501059*tmp_20;
      real_t tmp_275 = tmp_274*tmp_6;
      real_t tmp_276 = 2.0*tmp_275;
      real_t tmp_277 = tmp_200*tmp_28;
      real_t tmp_278 = 2.0*tmp_277;
      real_t tmp_279 = tmp_276 + tmp_278;
      real_t tmp_280 = tmp_173*tmp_21;
      real_t tmp_281 = tmp_108*tmp_23;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_274*tmp_31;
      real_t tmp_284 = 2.0*tmp_283;
      real_t tmp_285 = tmp_200*tmp_35;
      real_t tmp_286 = 2.0*tmp_285;
      real_t tmp_287 = tmp_284 + tmp_286;
      real_t tmp_288 = 0.13819660112501059*tmp_20;
      real_t tmp_289 = tmp_288*tmp_6;
      real_t tmp_290 = 2.0*tmp_289;
      real_t tmp_291 = tmp_219*tmp_28;
      real_t tmp_292 = 2.0*tmp_291;
      real_t tmp_293 = tmp_290 + tmp_292;
      real_t tmp_294 = tmp_173*tmp_57;
      real_t tmp_295 = tmp_108*tmp_59;
      real_t tmp_296 = tmp_294 + tmp_295;
      real_t tmp_297 = tmp_288*tmp_31;
      real_t tmp_298 = 2.0*tmp_297;
      real_t tmp_299 = tmp_219*tmp_35;
      real_t tmp_300 = 2.0*tmp_299;
      real_t tmp_301 = tmp_298 + tmp_300;
      real_t tmp_302 = 0.58541019662496829*tmp_20;
      real_t tmp_303 = tmp_302*tmp_6;
      real_t tmp_304 = 2.0*tmp_303;
      real_t tmp_305 = tmp_238*tmp_28;
      real_t tmp_306 = 2.0*tmp_305;
      real_t tmp_307 = tmp_304 + tmp_306;
      real_t tmp_308 = tmp_173*tmp_72;
      real_t tmp_309 = tmp_108*tmp_74;
      real_t tmp_310 = tmp_308 + tmp_309;
      real_t tmp_311 = tmp_302*tmp_31;
      real_t tmp_312 = 2.0*tmp_311;
      real_t tmp_313 = tmp_238*tmp_35;
      real_t tmp_314 = 2.0*tmp_313;
      real_t tmp_315 = tmp_312 + tmp_314;
      real_t tmp_316 = 0.13819660112501059*tmp_20;
      real_t tmp_317 = tmp_316*tmp_6;
      real_t tmp_318 = 2.0*tmp_317;
      real_t tmp_319 = tmp_257*tmp_28;
      real_t tmp_320 = 2.0*tmp_319;
      real_t tmp_321 = tmp_318 + tmp_320;
      real_t tmp_322 = tmp_173*tmp_87;
      real_t tmp_323 = tmp_108*tmp_89;
      real_t tmp_324 = tmp_322 + tmp_323;
      real_t tmp_325 = tmp_31*tmp_316;
      real_t tmp_326 = 2.0*tmp_325;
      real_t tmp_327 = tmp_257*tmp_35;
      real_t tmp_328 = 2.0*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_101*(tmp_262*tmp_321 + tmp_266*tmp_324 + tmp_272*tmp_329) + tmp_56*(tmp_205*tmp_279 + tmp_209*tmp_282 + tmp_215*tmp_287) + tmp_71*(tmp_224*tmp_293 + tmp_228*tmp_296 + tmp_234*tmp_301) + tmp_86*(tmp_243*tmp_307 + tmp_247*tmp_310 + tmp_253*tmp_315);
      real_t tmp_331 = tmp_26*tmp_274;
      real_t tmp_332 = 2.0*tmp_331;
      real_t tmp_333 = tmp_197*tmp_28;
      real_t tmp_334 = 2.0*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_144*tmp_21;
      real_t tmp_337 = tmp_108*tmp_22;
      real_t tmp_338 = tmp_336 + tmp_337;
      real_t tmp_339 = tmp_274*tmp_33;
      real_t tmp_340 = 2.0*tmp_339;
      real_t tmp_341 = tmp_197*tmp_35;
      real_t tmp_342 = 2.0*tmp_341;
      real_t tmp_343 = tmp_340 + tmp_342;
      real_t tmp_344 = tmp_26*tmp_288;
      real_t tmp_345 = 2.0*tmp_344;
      real_t tmp_346 = tmp_216*tmp_28;
      real_t tmp_347 = 2.0*tmp_346;
      real_t tmp_348 = tmp_345 + tmp_347;
      real_t tmp_349 = tmp_144*tmp_57;
      real_t tmp_350 = tmp_108*tmp_58;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_288*tmp_33;
      real_t tmp_353 = 2.0*tmp_352;
      real_t tmp_354 = tmp_216*tmp_35;
      real_t tmp_355 = 2.0*tmp_354;
      real_t tmp_356 = tmp_353 + tmp_355;
      real_t tmp_357 = tmp_26*tmp_302;
      real_t tmp_358 = 2.0*tmp_357;
      real_t tmp_359 = tmp_235*tmp_28;
      real_t tmp_360 = 2.0*tmp_359;
      real_t tmp_361 = tmp_358 + tmp_360;
      real_t tmp_362 = tmp_144*tmp_72;
      real_t tmp_363 = tmp_108*tmp_73;
      real_t tmp_364 = tmp_362 + tmp_363;
      real_t tmp_365 = tmp_302*tmp_33;
      real_t tmp_366 = 2.0*tmp_365;
      real_t tmp_367 = tmp_235*tmp_35;
      real_t tmp_368 = 2.0*tmp_367;
      real_t tmp_369 = tmp_366 + tmp_368;
      real_t tmp_370 = tmp_26*tmp_316;
      real_t tmp_371 = 2.0*tmp_370;
      real_t tmp_372 = tmp_254*tmp_28;
      real_t tmp_373 = 2.0*tmp_372;
      real_t tmp_374 = tmp_371 + tmp_373;
      real_t tmp_375 = tmp_144*tmp_87;
      real_t tmp_376 = tmp_108*tmp_88;
      real_t tmp_377 = tmp_375 + tmp_376;
      real_t tmp_378 = tmp_316*tmp_33;
      real_t tmp_379 = 2.0*tmp_378;
      real_t tmp_380 = tmp_254*tmp_35;
      real_t tmp_381 = 2.0*tmp_380;
      real_t tmp_382 = tmp_379 + tmp_381;
      real_t tmp_383 = tmp_101*(tmp_262*tmp_374 + tmp_266*tmp_377 + tmp_272*tmp_382) + tmp_56*(tmp_205*tmp_335 + tmp_209*tmp_338 + tmp_215*tmp_343) + tmp_71*(tmp_224*tmp_348 + tmp_228*tmp_351 + tmp_234*tmp_356) + tmp_86*(tmp_243*tmp_361 + tmp_247*tmp_364 + tmp_253*tmp_369);
      real_t tmp_384 = -tmp_22;
      real_t tmp_385 = 4.0 - tmp_21;
      real_t tmp_386 = tmp_384 + tmp_385 - 4.6832815729997463;
      real_t tmp_387 = 0.5*tmp_20;
      real_t tmp_388 = tmp_386*tmp_387;
      real_t tmp_389 = -tmp_202 - tmp_278 + tmp_388*tmp_6;
      real_t tmp_390 = 1.0*tmp_173;
      real_t tmp_391 = -tmp_207 - tmp_281 + tmp_386*tmp_390;
      real_t tmp_392 = -tmp_213 - tmp_286 + tmp_31*tmp_388;
      real_t tmp_393 = -tmp_58;
      real_t tmp_394 = 4.0 - tmp_57;
      real_t tmp_395 = tmp_393 + tmp_394 - 1.1055728090000847;
      real_t tmp_396 = tmp_387*tmp_395;
      real_t tmp_397 = -tmp_221 - tmp_292 + tmp_396*tmp_6;
      real_t tmp_398 = -tmp_226 - tmp_295 + tmp_390*tmp_395;
      real_t tmp_399 = -tmp_232 - tmp_300 + tmp_31*tmp_396;
      real_t tmp_400 = -tmp_73;
      real_t tmp_401 = 4.0 - tmp_72;
      real_t tmp_402 = tmp_400 + tmp_401 - 1.1055728090000847;
      real_t tmp_403 = tmp_387*tmp_402;
      real_t tmp_404 = -tmp_240 - tmp_306 + tmp_403*tmp_6;
      real_t tmp_405 = -tmp_245 - tmp_309 + tmp_390*tmp_402;
      real_t tmp_406 = -tmp_251 + tmp_31*tmp_403 - tmp_314;
      real_t tmp_407 = -tmp_88;
      real_t tmp_408 = 4.0 - tmp_87;
      real_t tmp_409 = tmp_407 + tmp_408 - 1.1055728090000847;
      real_t tmp_410 = tmp_387*tmp_409;
      real_t tmp_411 = -tmp_259 - tmp_320 + tmp_410*tmp_6;
      real_t tmp_412 = -tmp_264 - tmp_323 + tmp_390*tmp_409;
      real_t tmp_413 = -tmp_270 + tmp_31*tmp_410 - tmp_328;
      real_t tmp_414 = tmp_101*(tmp_262*tmp_411 + tmp_266*tmp_412 + tmp_272*tmp_413) + tmp_56*(tmp_205*tmp_389 + tmp_209*tmp_391 + tmp_215*tmp_392) + tmp_71*(tmp_224*tmp_397 + tmp_228*tmp_398 + tmp_234*tmp_399) + tmp_86*(tmp_243*tmp_404 + tmp_247*tmp_405 + tmp_253*tmp_406);
      real_t tmp_415 = -tmp_23;
      real_t tmp_416 = tmp_385 + tmp_415 - 1.1055728090000847;
      real_t tmp_417 = tmp_387*tmp_416;
      real_t tmp_418 = -tmp_199 + tmp_26*tmp_417 - tmp_334;
      real_t tmp_419 = 1.0*tmp_144;
      real_t tmp_420 = -tmp_206 - tmp_337 + tmp_416*tmp_419;
      real_t tmp_421 = -tmp_211 + tmp_33*tmp_417 - tmp_342;
      real_t tmp_422 = -tmp_59;
      real_t tmp_423 = tmp_394 + tmp_422 - 4.6832815729997463;
      real_t tmp_424 = tmp_387*tmp_423;
      real_t tmp_425 = -tmp_218 + tmp_26*tmp_424 - tmp_347;
      real_t tmp_426 = -tmp_225 - tmp_350 + tmp_419*tmp_423;
      real_t tmp_427 = -tmp_230 + tmp_33*tmp_424 - tmp_355;
      real_t tmp_428 = -tmp_74;
      real_t tmp_429 = tmp_401 + tmp_428 - 1.1055728090000847;
      real_t tmp_430 = tmp_387*tmp_429;
      real_t tmp_431 = -tmp_237 + tmp_26*tmp_430 - tmp_360;
      real_t tmp_432 = -tmp_244 - tmp_363 + tmp_419*tmp_429;
      real_t tmp_433 = -tmp_249 + tmp_33*tmp_430 - tmp_368;
      real_t tmp_434 = -tmp_89;
      real_t tmp_435 = tmp_408 + tmp_434 - 1.1055728090000847;
      real_t tmp_436 = tmp_387*tmp_435;
      real_t tmp_437 = -tmp_256 + tmp_26*tmp_436 - tmp_373;
      real_t tmp_438 = -tmp_263 - tmp_376 + tmp_419*tmp_435;
      real_t tmp_439 = -tmp_268 + tmp_33*tmp_436 - tmp_381;
      real_t tmp_440 = tmp_101*(tmp_262*tmp_437 + tmp_266*tmp_438 + tmp_272*tmp_439) + tmp_56*(tmp_205*tmp_418 + tmp_209*tmp_420 + tmp_215*tmp_421) + tmp_71*(tmp_224*tmp_425 + tmp_228*tmp_426 + tmp_234*tmp_427) + tmp_86*(tmp_243*tmp_431 + tmp_247*tmp_432 + tmp_253*tmp_433);
      real_t tmp_441 = tmp_384 + tmp_415 + 2.8944271909999153;
      real_t tmp_442 = tmp_387*tmp_441;
      real_t tmp_443 = -tmp_276 + tmp_28*tmp_442 - tmp_332;
      real_t tmp_444 = 1.0*tmp_108;
      real_t tmp_445 = -tmp_280 - tmp_336 + tmp_441*tmp_444;
      real_t tmp_446 = -tmp_284 - tmp_340 + tmp_35*tmp_442;
      real_t tmp_447 = tmp_393 + tmp_422 + 2.8944271909999153;
      real_t tmp_448 = tmp_387*tmp_447;
      real_t tmp_449 = tmp_28*tmp_448 - tmp_290 - tmp_345;
      real_t tmp_450 = -tmp_294 - tmp_349 + tmp_444*tmp_447;
      real_t tmp_451 = -tmp_298 + tmp_35*tmp_448 - tmp_353;
      real_t tmp_452 = tmp_400 + tmp_428 - 0.68328157299974634;
      real_t tmp_453 = tmp_387*tmp_452;
      real_t tmp_454 = tmp_28*tmp_453 - tmp_304 - tmp_358;
      real_t tmp_455 = -tmp_308 - tmp_362 + tmp_444*tmp_452;
      real_t tmp_456 = -tmp_312 + tmp_35*tmp_453 - tmp_366;
      real_t tmp_457 = tmp_407 + tmp_434 + 2.8944271909999153;
      real_t tmp_458 = tmp_387*tmp_457;
      real_t tmp_459 = tmp_28*tmp_458 - tmp_318 - tmp_371;
      real_t tmp_460 = -tmp_322 - tmp_375 + tmp_444*tmp_457;
      real_t tmp_461 = -tmp_326 + tmp_35*tmp_458 - tmp_379;
      real_t tmp_462 = tmp_101*(tmp_262*tmp_459 + tmp_266*tmp_460 + tmp_272*tmp_461) + tmp_56*(tmp_205*tmp_443 + tmp_209*tmp_445 + tmp_215*tmp_446) + tmp_71*(tmp_224*tmp_449 + tmp_228*tmp_450 + tmp_234*tmp_451) + tmp_86*(tmp_243*tmp_454 + tmp_247*tmp_455 + tmp_253*tmp_456);
      real_t tmp_463 = (tmp_28*tmp_28);
      real_t tmp_464 = 16.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_465 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_466 = 0.012499999999999983*tmp_465;
      real_t tmp_467 = tmp_464*tmp_466;
      real_t tmp_468 = (tmp_40*tmp_40);
      real_t tmp_469 = 32.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_470 = (tmp_35*tmp_35);
      real_t tmp_471 = 16.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_472 = 0.012499999999999983*tmp_465;
      real_t tmp_473 = tmp_471*tmp_472;
      real_t tmp_474 = 32.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_475 = 16.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_476 = 0.11249999999999989*tmp_465;
      real_t tmp_477 = tmp_475*tmp_476;
      real_t tmp_478 = 32.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_479 = 16.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_480 = 0.012499999999999983*tmp_465;
      real_t tmp_481 = tmp_479*tmp_480;
      real_t tmp_482 = 32.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_483 = tmp_26*tmp_28;
      real_t tmp_484 = tmp_140*tmp_465;
      real_t tmp_485 = tmp_105*tmp_30;
      real_t tmp_486 = tmp_484*tmp_485;
      real_t tmp_487 = tmp_39*tmp_40;
      real_t tmp_488 = tmp_33*tmp_35;
      real_t tmp_489 = tmp_149*tmp_465;
      real_t tmp_490 = tmp_115*tmp_64;
      real_t tmp_491 = tmp_489*tmp_490;
      real_t tmp_492 = tmp_155*tmp_465;
      real_t tmp_493 = tmp_123*tmp_79;
      real_t tmp_494 = tmp_492*tmp_493;
      real_t tmp_495 = tmp_161*tmp_465;
      real_t tmp_496 = tmp_131*tmp_94;
      real_t tmp_497 = tmp_495*tmp_496;
      real_t tmp_498 = tmp_101*(tmp_134*tmp_487*tmp_495 + tmp_483*tmp_497 + tmp_488*tmp_497) + tmp_56*(tmp_109*tmp_484*tmp_487 + tmp_483*tmp_486 + tmp_486*tmp_488) + tmp_71*(tmp_118*tmp_487*tmp_489 + tmp_483*tmp_491 + tmp_488*tmp_491) + tmp_86*(tmp_126*tmp_487*tmp_492 + tmp_483*tmp_494 + tmp_488*tmp_494);
      real_t tmp_499 = tmp_170*tmp_465;
      real_t tmp_500 = tmp_485*tmp_499;
      real_t tmp_501 = tmp_28*tmp_6;
      real_t tmp_502 = tmp_37*tmp_40;
      real_t tmp_503 = tmp_31*tmp_35;
      real_t tmp_504 = tmp_178*tmp_465;
      real_t tmp_505 = tmp_490*tmp_504;
      real_t tmp_506 = tmp_184*tmp_465;
      real_t tmp_507 = tmp_493*tmp_506;
      real_t tmp_508 = tmp_190*tmp_465;
      real_t tmp_509 = tmp_496*tmp_508;
      real_t tmp_510 = tmp_101*(tmp_134*tmp_502*tmp_508 + tmp_501*tmp_509 + tmp_503*tmp_509) + tmp_56*(tmp_109*tmp_499*tmp_502 + tmp_500*tmp_501 + tmp_500*tmp_503) + tmp_71*(tmp_118*tmp_502*tmp_504 + tmp_501*tmp_505 + tmp_503*tmp_505) + tmp_86*(tmp_126*tmp_502*tmp_506 + tmp_501*tmp_507 + tmp_503*tmp_507);
      real_t tmp_511 = tmp_101*(tmp_133*tmp_260 + tmp_135*tmp_265 + tmp_137*tmp_271) + tmp_56*(tmp_107*tmp_203 + tmp_110*tmp_208 + tmp_113*tmp_214) + tmp_71*(tmp_117*tmp_222 + tmp_119*tmp_227 + tmp_121*tmp_233) + tmp_86*(tmp_125*tmp_241 + tmp_127*tmp_246 + tmp_129*tmp_252);
      real_t tmp_512 = tmp_101*(tmp_133*tmp_321 + tmp_135*tmp_324 + tmp_137*tmp_329) + tmp_56*(tmp_107*tmp_279 + tmp_110*tmp_282 + tmp_113*tmp_287) + tmp_71*(tmp_117*tmp_293 + tmp_119*tmp_296 + tmp_121*tmp_301) + tmp_86*(tmp_125*tmp_307 + tmp_127*tmp_310 + tmp_129*tmp_315);
      real_t tmp_513 = tmp_101*(tmp_133*tmp_374 + tmp_135*tmp_377 + tmp_137*tmp_382) + tmp_56*(tmp_107*tmp_335 + tmp_110*tmp_338 + tmp_113*tmp_343) + tmp_71*(tmp_117*tmp_348 + tmp_119*tmp_351 + tmp_121*tmp_356) + tmp_86*(tmp_125*tmp_361 + tmp_127*tmp_364 + tmp_129*tmp_369);
      real_t tmp_514 = tmp_101*(tmp_133*tmp_411 + tmp_135*tmp_412 + tmp_137*tmp_413) + tmp_56*(tmp_107*tmp_389 + tmp_110*tmp_391 + tmp_113*tmp_392) + tmp_71*(tmp_117*tmp_397 + tmp_119*tmp_398 + tmp_121*tmp_399) + tmp_86*(tmp_125*tmp_404 + tmp_127*tmp_405 + tmp_129*tmp_406);
      real_t tmp_515 = tmp_101*(tmp_133*tmp_437 + tmp_135*tmp_438 + tmp_137*tmp_439) + tmp_56*(tmp_107*tmp_418 + tmp_110*tmp_420 + tmp_113*tmp_421) + tmp_71*(tmp_117*tmp_425 + tmp_119*tmp_426 + tmp_121*tmp_427) + tmp_86*(tmp_125*tmp_431 + tmp_127*tmp_432 + tmp_129*tmp_433);
      real_t tmp_516 = tmp_101*(tmp_133*tmp_459 + tmp_135*tmp_460 + tmp_137*tmp_461) + tmp_56*(tmp_107*tmp_443 + tmp_110*tmp_445 + tmp_113*tmp_446) + tmp_71*(tmp_117*tmp_449 + tmp_119*tmp_450 + tmp_121*tmp_451) + tmp_86*(tmp_125*tmp_454 + tmp_127*tmp_455 + tmp_129*tmp_456);
      real_t tmp_517 = (tmp_26*tmp_26);
      real_t tmp_518 = 0.012499999999999983*tmp_465;
      real_t tmp_519 = tmp_464*tmp_518;
      real_t tmp_520 = (tmp_39*tmp_39);
      real_t tmp_521 = (tmp_33*tmp_33);
      real_t tmp_522 = 0.11249999999999989*tmp_465;
      real_t tmp_523 = tmp_471*tmp_522;
      real_t tmp_524 = 0.012499999999999983*tmp_465;
      real_t tmp_525 = tmp_475*tmp_524;
      real_t tmp_526 = 0.012499999999999983*tmp_465;
      real_t tmp_527 = tmp_479*tmp_526;
      real_t tmp_528 = tmp_26*tmp_6;
      real_t tmp_529 = tmp_170*tmp_30*tmp_484;
      real_t tmp_530 = tmp_37*tmp_39;
      real_t tmp_531 = tmp_31*tmp_33;
      real_t tmp_532 = tmp_178*tmp_489*tmp_64;
      real_t tmp_533 = tmp_184*tmp_492*tmp_79;
      real_t tmp_534 = tmp_190*tmp_495*tmp_94;
      real_t tmp_535 = tmp_101*(tmp_163*tmp_508*tmp_530 + tmp_528*tmp_534 + tmp_531*tmp_534) + tmp_56*(tmp_142*tmp_499*tmp_530 + tmp_528*tmp_529 + tmp_529*tmp_531) + tmp_71*(tmp_151*tmp_504*tmp_530 + tmp_528*tmp_532 + tmp_531*tmp_532) + tmp_86*(tmp_157*tmp_506*tmp_530 + tmp_528*tmp_533 + tmp_531*tmp_533);
      real_t tmp_536 = tmp_101*(tmp_164*tmp_260 + tmp_165*tmp_265 + tmp_166*tmp_271) + tmp_56*(tmp_143*tmp_203 + tmp_146*tmp_208 + tmp_148*tmp_214) + tmp_71*(tmp_152*tmp_222 + tmp_153*tmp_227 + tmp_154*tmp_233) + tmp_86*(tmp_158*tmp_241 + tmp_159*tmp_246 + tmp_160*tmp_252);
      real_t tmp_537 = tmp_101*(tmp_164*tmp_321 + tmp_165*tmp_324 + tmp_166*tmp_329) + tmp_56*(tmp_143*tmp_279 + tmp_146*tmp_282 + tmp_148*tmp_287) + tmp_71*(tmp_152*tmp_293 + tmp_153*tmp_296 + tmp_154*tmp_301) + tmp_86*(tmp_158*tmp_307 + tmp_159*tmp_310 + tmp_160*tmp_315);
      real_t tmp_538 = tmp_101*(tmp_164*tmp_374 + tmp_165*tmp_377 + tmp_166*tmp_382) + tmp_56*(tmp_143*tmp_335 + tmp_146*tmp_338 + tmp_148*tmp_343) + tmp_71*(tmp_152*tmp_348 + tmp_153*tmp_351 + tmp_154*tmp_356) + tmp_86*(tmp_158*tmp_361 + tmp_159*tmp_364 + tmp_160*tmp_369);
      real_t tmp_539 = tmp_101*(tmp_164*tmp_411 + tmp_165*tmp_412 + tmp_166*tmp_413) + tmp_56*(tmp_143*tmp_389 + tmp_146*tmp_391 + tmp_148*tmp_392) + tmp_71*(tmp_152*tmp_397 + tmp_153*tmp_398 + tmp_154*tmp_399) + tmp_86*(tmp_158*tmp_404 + tmp_159*tmp_405 + tmp_160*tmp_406);
      real_t tmp_540 = tmp_101*(tmp_164*tmp_437 + tmp_165*tmp_438 + tmp_166*tmp_439) + tmp_56*(tmp_143*tmp_418 + tmp_146*tmp_420 + tmp_148*tmp_421) + tmp_71*(tmp_152*tmp_425 + tmp_153*tmp_426 + tmp_154*tmp_427) + tmp_86*(tmp_158*tmp_431 + tmp_159*tmp_432 + tmp_160*tmp_433);
      real_t tmp_541 = tmp_101*(tmp_164*tmp_459 + tmp_165*tmp_460 + tmp_166*tmp_461) + tmp_56*(tmp_143*tmp_443 + tmp_146*tmp_445 + tmp_148*tmp_446) + tmp_71*(tmp_152*tmp_449 + tmp_153*tmp_450 + tmp_154*tmp_451) + tmp_86*(tmp_158*tmp_454 + tmp_159*tmp_455 + tmp_160*tmp_456);
      real_t tmp_542 = (tmp_6*tmp_6);
      real_t tmp_543 = 0.11249999999999989*tmp_465;
      real_t tmp_544 = tmp_464*tmp_543;
      real_t tmp_545 = (tmp_37*tmp_37);
      real_t tmp_546 = (tmp_31*tmp_31);
      real_t tmp_547 = 0.012499999999999983*tmp_465;
      real_t tmp_548 = tmp_471*tmp_547;
      real_t tmp_549 = 0.012499999999999983*tmp_465;
      real_t tmp_550 = tmp_475*tmp_549;
      real_t tmp_551 = 0.012499999999999983*tmp_465;
      real_t tmp_552 = tmp_479*tmp_551;
      real_t tmp_553 = tmp_101*(tmp_192*tmp_260 + tmp_194*tmp_265 + tmp_195*tmp_271) + tmp_56*(tmp_172*tmp_203 + tmp_175*tmp_208 + tmp_177*tmp_214) + tmp_71*(tmp_180*tmp_222 + tmp_182*tmp_227 + tmp_183*tmp_233) + tmp_86*(tmp_186*tmp_241 + tmp_188*tmp_246 + tmp_189*tmp_252);
      real_t tmp_554 = tmp_101*(tmp_192*tmp_321 + tmp_194*tmp_324 + tmp_195*tmp_329) + tmp_56*(tmp_172*tmp_279 + tmp_175*tmp_282 + tmp_177*tmp_287) + tmp_71*(tmp_180*tmp_293 + tmp_182*tmp_296 + tmp_183*tmp_301) + tmp_86*(tmp_186*tmp_307 + tmp_188*tmp_310 + tmp_189*tmp_315);
      real_t tmp_555 = tmp_101*(tmp_192*tmp_374 + tmp_194*tmp_377 + tmp_195*tmp_382) + tmp_56*(tmp_172*tmp_335 + tmp_175*tmp_338 + tmp_177*tmp_343) + tmp_71*(tmp_180*tmp_348 + tmp_182*tmp_351 + tmp_183*tmp_356) + tmp_86*(tmp_186*tmp_361 + tmp_188*tmp_364 + tmp_189*tmp_369);
      real_t tmp_556 = tmp_101*(tmp_192*tmp_411 + tmp_194*tmp_412 + tmp_195*tmp_413) + tmp_56*(tmp_172*tmp_389 + tmp_175*tmp_391 + tmp_177*tmp_392) + tmp_71*(tmp_180*tmp_397 + tmp_182*tmp_398 + tmp_183*tmp_399) + tmp_86*(tmp_186*tmp_404 + tmp_188*tmp_405 + tmp_189*tmp_406);
      real_t tmp_557 = tmp_101*(tmp_192*tmp_437 + tmp_194*tmp_438 + tmp_195*tmp_439) + tmp_56*(tmp_172*tmp_418 + tmp_175*tmp_420 + tmp_177*tmp_421) + tmp_71*(tmp_180*tmp_425 + tmp_182*tmp_426 + tmp_183*tmp_427) + tmp_86*(tmp_186*tmp_431 + tmp_188*tmp_432 + tmp_189*tmp_433);
      real_t tmp_558 = tmp_101*(tmp_192*tmp_459 + tmp_194*tmp_460 + tmp_195*tmp_461) + tmp_56*(tmp_172*tmp_443 + tmp_175*tmp_445 + tmp_177*tmp_446) + tmp_71*(tmp_180*tmp_449 + tmp_182*tmp_450 + tmp_183*tmp_451) + tmp_86*(tmp_186*tmp_454 + tmp_188*tmp_455 + tmp_189*tmp_456);
      real_t tmp_559 = tmp_197*tmp_37;
      real_t tmp_560 = tmp_200*tmp_39;
      real_t tmp_561 = tmp_216*tmp_37;
      real_t tmp_562 = tmp_219*tmp_39;
      real_t tmp_563 = tmp_235*tmp_37;
      real_t tmp_564 = tmp_238*tmp_39;
      real_t tmp_565 = tmp_254*tmp_37;
      real_t tmp_566 = tmp_257*tmp_39;
      real_t tmp_567 = tmp_203*tmp_204;
      real_t tmp_568 = tmp_208*tmp_42;
      real_t tmp_569 = tmp_204*tmp_214;
      real_t tmp_570 = tmp_222*tmp_223;
      real_t tmp_571 = tmp_227*tmp_70;
      real_t tmp_572 = tmp_223*tmp_233;
      real_t tmp_573 = tmp_241*tmp_242;
      real_t tmp_574 = tmp_246*tmp_85;
      real_t tmp_575 = tmp_242*tmp_252;
      real_t tmp_576 = tmp_260*tmp_261;
      real_t tmp_577 = tmp_100*tmp_265;
      real_t tmp_578 = tmp_261*tmp_271;
      real_t tmp_579 = tmp_101*(tmp_321*tmp_576 + tmp_324*tmp_577 + tmp_329*tmp_578) + tmp_56*(tmp_279*tmp_567 + tmp_282*tmp_568 + tmp_287*tmp_569) + tmp_71*(tmp_293*tmp_570 + tmp_296*tmp_571 + tmp_301*tmp_572) + tmp_86*(tmp_307*tmp_573 + tmp_310*tmp_574 + tmp_315*tmp_575);
      real_t tmp_580 = tmp_101*(tmp_374*tmp_576 + tmp_377*tmp_577 + tmp_382*tmp_578) + tmp_56*(tmp_335*tmp_567 + tmp_338*tmp_568 + tmp_343*tmp_569) + tmp_71*(tmp_348*tmp_570 + tmp_351*tmp_571 + tmp_356*tmp_572) + tmp_86*(tmp_361*tmp_573 + tmp_364*tmp_574 + tmp_369*tmp_575);
      real_t tmp_581 = tmp_101*(tmp_411*tmp_576 + tmp_412*tmp_577 + tmp_413*tmp_578) + tmp_56*(tmp_389*tmp_567 + tmp_391*tmp_568 + tmp_392*tmp_569) + tmp_71*(tmp_397*tmp_570 + tmp_398*tmp_571 + tmp_399*tmp_572) + tmp_86*(tmp_404*tmp_573 + tmp_405*tmp_574 + tmp_406*tmp_575);
      real_t tmp_582 = tmp_101*(tmp_437*tmp_576 + tmp_438*tmp_577 + tmp_439*tmp_578) + tmp_56*(tmp_418*tmp_567 + tmp_420*tmp_568 + tmp_421*tmp_569) + tmp_71*(tmp_425*tmp_570 + tmp_426*tmp_571 + tmp_427*tmp_572) + tmp_86*(tmp_431*tmp_573 + tmp_432*tmp_574 + tmp_433*tmp_575);
      real_t tmp_583 = tmp_101*(tmp_459*tmp_576 + tmp_460*tmp_577 + tmp_461*tmp_578) + tmp_56*(tmp_443*tmp_567 + tmp_445*tmp_568 + tmp_446*tmp_569) + tmp_71*(tmp_449*tmp_570 + tmp_450*tmp_571 + tmp_451*tmp_572) + tmp_86*(tmp_454*tmp_573 + tmp_455*tmp_574 + tmp_456*tmp_575);
      real_t tmp_584 = tmp_274*tmp_37;
      real_t tmp_585 = tmp_200*tmp_40;
      real_t tmp_586 = tmp_288*tmp_37;
      real_t tmp_587 = tmp_219*tmp_40;
      real_t tmp_588 = tmp_302*tmp_37;
      real_t tmp_589 = tmp_238*tmp_40;
      real_t tmp_590 = tmp_316*tmp_37;
      real_t tmp_591 = tmp_257*tmp_40;
      real_t tmp_592 = tmp_204*tmp_279;
      real_t tmp_593 = tmp_282*tmp_42;
      real_t tmp_594 = tmp_204*tmp_287;
      real_t tmp_595 = tmp_223*tmp_293;
      real_t tmp_596 = tmp_296*tmp_70;
      real_t tmp_597 = tmp_223*tmp_301;
      real_t tmp_598 = tmp_242*tmp_307;
      real_t tmp_599 = tmp_310*tmp_85;
      real_t tmp_600 = tmp_242*tmp_315;
      real_t tmp_601 = tmp_261*tmp_321;
      real_t tmp_602 = tmp_100*tmp_324;
      real_t tmp_603 = tmp_261*tmp_329;
      real_t tmp_604 = tmp_101*(tmp_374*tmp_601 + tmp_377*tmp_602 + tmp_382*tmp_603) + tmp_56*(tmp_335*tmp_592 + tmp_338*tmp_593 + tmp_343*tmp_594) + tmp_71*(tmp_348*tmp_595 + tmp_351*tmp_596 + tmp_356*tmp_597) + tmp_86*(tmp_361*tmp_598 + tmp_364*tmp_599 + tmp_369*tmp_600);
      real_t tmp_605 = tmp_101*(tmp_411*tmp_601 + tmp_412*tmp_602 + tmp_413*tmp_603) + tmp_56*(tmp_389*tmp_592 + tmp_391*tmp_593 + tmp_392*tmp_594) + tmp_71*(tmp_397*tmp_595 + tmp_398*tmp_596 + tmp_399*tmp_597) + tmp_86*(tmp_404*tmp_598 + tmp_405*tmp_599 + tmp_406*tmp_600);
      real_t tmp_606 = tmp_101*(tmp_437*tmp_601 + tmp_438*tmp_602 + tmp_439*tmp_603) + tmp_56*(tmp_418*tmp_592 + tmp_420*tmp_593 + tmp_421*tmp_594) + tmp_71*(tmp_425*tmp_595 + tmp_426*tmp_596 + tmp_427*tmp_597) + tmp_86*(tmp_431*tmp_598 + tmp_432*tmp_599 + tmp_433*tmp_600);
      real_t tmp_607 = tmp_101*(tmp_459*tmp_601 + tmp_460*tmp_602 + tmp_461*tmp_603) + tmp_56*(tmp_443*tmp_592 + tmp_445*tmp_593 + tmp_446*tmp_594) + tmp_71*(tmp_449*tmp_595 + tmp_450*tmp_596 + tmp_451*tmp_597) + tmp_86*(tmp_454*tmp_598 + tmp_455*tmp_599 + tmp_456*tmp_600);
      real_t tmp_608 = tmp_274*tmp_39;
      real_t tmp_609 = tmp_197*tmp_40;
      real_t tmp_610 = tmp_288*tmp_39;
      real_t tmp_611 = tmp_216*tmp_40;
      real_t tmp_612 = tmp_302*tmp_39;
      real_t tmp_613 = tmp_235*tmp_40;
      real_t tmp_614 = tmp_316*tmp_39;
      real_t tmp_615 = tmp_254*tmp_40;
      real_t tmp_616 = tmp_204*tmp_335;
      real_t tmp_617 = tmp_338*tmp_42;
      real_t tmp_618 = tmp_204*tmp_343;
      real_t tmp_619 = tmp_223*tmp_348;
      real_t tmp_620 = tmp_351*tmp_70;
      real_t tmp_621 = tmp_223*tmp_356;
      real_t tmp_622 = tmp_242*tmp_361;
      real_t tmp_623 = tmp_364*tmp_85;
      real_t tmp_624 = tmp_242*tmp_369;
      real_t tmp_625 = tmp_261*tmp_374;
      real_t tmp_626 = tmp_100*tmp_377;
      real_t tmp_627 = tmp_261*tmp_382;
      real_t tmp_628 = tmp_101*(tmp_411*tmp_625 + tmp_412*tmp_626 + tmp_413*tmp_627) + tmp_56*(tmp_389*tmp_616 + tmp_391*tmp_617 + tmp_392*tmp_618) + tmp_71*(tmp_397*tmp_619 + tmp_398*tmp_620 + tmp_399*tmp_621) + tmp_86*(tmp_404*tmp_622 + tmp_405*tmp_623 + tmp_406*tmp_624);
      real_t tmp_629 = tmp_101*(tmp_437*tmp_625 + tmp_438*tmp_626 + tmp_439*tmp_627) + tmp_56*(tmp_418*tmp_616 + tmp_420*tmp_617 + tmp_421*tmp_618) + tmp_71*(tmp_425*tmp_619 + tmp_426*tmp_620 + tmp_427*tmp_621) + tmp_86*(tmp_431*tmp_622 + tmp_432*tmp_623 + tmp_433*tmp_624);
      real_t tmp_630 = tmp_101*(tmp_459*tmp_625 + tmp_460*tmp_626 + tmp_461*tmp_627) + tmp_56*(tmp_443*tmp_616 + tmp_445*tmp_617 + tmp_446*tmp_618) + tmp_71*(tmp_449*tmp_619 + tmp_450*tmp_620 + tmp_451*tmp_621) + tmp_86*(tmp_454*tmp_622 + tmp_455*tmp_623 + tmp_456*tmp_624);
      real_t tmp_631 = 0.25*tmp_386;
      real_t tmp_632 = 0.25*tmp_395;
      real_t tmp_633 = 0.25*tmp_402;
      real_t tmp_634 = 0.25*tmp_409;
      real_t tmp_635 = tmp_204*tmp_389;
      real_t tmp_636 = tmp_391*tmp_42;
      real_t tmp_637 = tmp_204*tmp_392;
      real_t tmp_638 = tmp_223*tmp_397;
      real_t tmp_639 = tmp_398*tmp_70;
      real_t tmp_640 = tmp_223*tmp_399;
      real_t tmp_641 = tmp_242*tmp_404;
      real_t tmp_642 = tmp_405*tmp_85;
      real_t tmp_643 = tmp_242*tmp_406;
      real_t tmp_644 = tmp_261*tmp_411;
      real_t tmp_645 = tmp_100*tmp_412;
      real_t tmp_646 = tmp_261*tmp_413;
      real_t tmp_647 = tmp_101*(tmp_437*tmp_644 + tmp_438*tmp_645 + tmp_439*tmp_646) + tmp_56*(tmp_418*tmp_635 + tmp_420*tmp_636 + tmp_421*tmp_637) + tmp_71*(tmp_425*tmp_638 + tmp_426*tmp_639 + tmp_427*tmp_640) + tmp_86*(tmp_431*tmp_641 + tmp_432*tmp_642 + tmp_433*tmp_643);
      real_t tmp_648 = tmp_101*(tmp_459*tmp_644 + tmp_460*tmp_645 + tmp_461*tmp_646) + tmp_56*(tmp_443*tmp_635 + tmp_445*tmp_636 + tmp_446*tmp_637) + tmp_71*(tmp_449*tmp_638 + tmp_450*tmp_639 + tmp_451*tmp_640) + tmp_86*(tmp_454*tmp_641 + tmp_455*tmp_642 + tmp_456*tmp_643);
      real_t tmp_649 = 0.25*tmp_416;
      real_t tmp_650 = 0.25*tmp_423;
      real_t tmp_651 = 0.25*tmp_429;
      real_t tmp_652 = 0.25*tmp_435;
      real_t tmp_653 = tmp_101*(tmp_100*tmp_438*tmp_460 + tmp_261*tmp_437*tmp_459 + tmp_261*tmp_439*tmp_461) + tmp_56*(tmp_204*tmp_418*tmp_443 + tmp_204*tmp_421*tmp_446 + tmp_42*tmp_420*tmp_445) + tmp_71*(tmp_223*tmp_425*tmp_449 + tmp_223*tmp_427*tmp_451 + tmp_426*tmp_450*tmp_70) + tmp_86*(tmp_242*tmp_431*tmp_454 + tmp_242*tmp_433*tmp_456 + tmp_432*tmp_455*tmp_85);
      real_t tmp_654 = 0.25*tmp_441;
      real_t tmp_655 = 0.25*tmp_447;
      real_t tmp_656 = 0.25*tmp_452;
      real_t tmp_657 = 0.25*tmp_457;
      real_t a_0_0 = tmp_101*(tmp_100*(tmp_99*tmp_99) + tmp_94*((tmp_91 + tmp_92 + tmp_93)*(tmp_91 + tmp_92 + tmp_93)) + tmp_94*((tmp_95 + tmp_96 + tmp_97)*(tmp_95 + tmp_96 + tmp_97))) + tmp_56*(tmp_30*((tmp_25 + tmp_27 + tmp_29)*(tmp_25 + tmp_27 + tmp_29)) + tmp_30*((tmp_32 + tmp_34 + tmp_36)*(tmp_32 + tmp_34 + tmp_36)) + (tmp_41*tmp_41)*tmp_42) + tmp_71*(tmp_64*((tmp_61 + tmp_62 + tmp_63)*(tmp_61 + tmp_62 + tmp_63)) + tmp_64*((tmp_65 + tmp_66 + tmp_67)*(tmp_65 + tmp_66 + tmp_67)) + (tmp_69*tmp_69)*tmp_70) + tmp_86*(tmp_79*((tmp_76 + tmp_77 + tmp_78)*(tmp_76 + tmp_77 + tmp_78)) + tmp_79*((tmp_80 + tmp_81 + tmp_82)*(tmp_80 + tmp_81 + tmp_82)) + (tmp_84*tmp_84)*tmp_85);
      real_t a_0_1 = tmp_138;
      real_t a_0_2 = tmp_167;
      real_t a_0_3 = tmp_196;
      real_t a_0_4 = tmp_273;
      real_t a_0_5 = tmp_330;
      real_t a_0_6 = tmp_383;
      real_t a_0_7 = tmp_414;
      real_t a_0_8 = tmp_440;
      real_t a_0_9 = tmp_462;
      real_t a_1_0 = tmp_138;
      real_t a_1_1 = tmp_101*(tmp_463*tmp_481 + tmp_468*tmp_480*tmp_482 + tmp_470*tmp_481) + tmp_56*(tmp_463*tmp_467 + tmp_466*tmp_468*tmp_469 + tmp_467*tmp_470) + tmp_71*(tmp_463*tmp_473 + tmp_468*tmp_472*tmp_474 + tmp_470*tmp_473) + tmp_86*(tmp_463*tmp_477 + tmp_468*tmp_476*tmp_478 + tmp_470*tmp_477);
      real_t a_1_2 = tmp_498;
      real_t a_1_3 = tmp_510;
      real_t a_1_4 = tmp_511;
      real_t a_1_5 = tmp_512;
      real_t a_1_6 = tmp_513;
      real_t a_1_7 = tmp_514;
      real_t a_1_8 = tmp_515;
      real_t a_1_9 = tmp_516;
      real_t a_2_0 = tmp_167;
      real_t a_2_1 = tmp_498;
      real_t a_2_2 = tmp_101*(tmp_482*tmp_520*tmp_526 + tmp_517*tmp_527 + tmp_521*tmp_527) + tmp_56*(tmp_469*tmp_518*tmp_520 + tmp_517*tmp_519 + tmp_519*tmp_521) + tmp_71*(tmp_474*tmp_520*tmp_522 + tmp_517*tmp_523 + tmp_521*tmp_523) + tmp_86*(tmp_478*tmp_520*tmp_524 + tmp_517*tmp_525 + tmp_521*tmp_525);
      real_t a_2_3 = tmp_535;
      real_t a_2_4 = tmp_536;
      real_t a_2_5 = tmp_537;
      real_t a_2_6 = tmp_538;
      real_t a_2_7 = tmp_539;
      real_t a_2_8 = tmp_540;
      real_t a_2_9 = tmp_541;
      real_t a_3_0 = tmp_196;
      real_t a_3_1 = tmp_510;
      real_t a_3_2 = tmp_535;
      real_t a_3_3 = tmp_101*(tmp_482*tmp_545*tmp_551 + tmp_542*tmp_552 + tmp_546*tmp_552) + tmp_56*(tmp_469*tmp_543*tmp_545 + tmp_542*tmp_544 + tmp_544*tmp_546) + tmp_71*(tmp_474*tmp_545*tmp_547 + tmp_542*tmp_548 + tmp_546*tmp_548) + tmp_86*(tmp_478*tmp_545*tmp_549 + tmp_542*tmp_550 + tmp_546*tmp_550);
      real_t a_3_4 = tmp_553;
      real_t a_3_5 = tmp_554;
      real_t a_3_6 = tmp_555;
      real_t a_3_7 = tmp_556;
      real_t a_3_8 = tmp_557;
      real_t a_3_9 = tmp_558;
      real_t a_4_0 = tmp_273;
      real_t a_4_1 = tmp_511;
      real_t a_4_2 = tmp_536;
      real_t a_4_3 = tmp_553;
      real_t a_4_4 = tmp_101*(tmp_479*((tmp_255 + tmp_258)*(tmp_255 + tmp_258)) + tmp_479*((tmp_267 + tmp_269)*(tmp_267 + tmp_269)) + tmp_482*((tmp_565 + tmp_566)*(tmp_565 + tmp_566))) + tmp_56*(tmp_464*((tmp_198 + tmp_201)*(tmp_198 + tmp_201)) + tmp_464*((tmp_210 + tmp_212)*(tmp_210 + tmp_212)) + tmp_469*((tmp_559 + tmp_560)*(tmp_559 + tmp_560))) + tmp_71*(tmp_471*((tmp_217 + tmp_220)*(tmp_217 + tmp_220)) + tmp_471*((tmp_229 + tmp_231)*(tmp_229 + tmp_231)) + tmp_474*((tmp_561 + tmp_562)*(tmp_561 + tmp_562))) + tmp_86*(tmp_475*((tmp_236 + tmp_239)*(tmp_236 + tmp_239)) + tmp_475*((tmp_248 + tmp_250)*(tmp_248 + tmp_250)) + tmp_478*((tmp_563 + tmp_564)*(tmp_563 + tmp_564)));
      real_t a_4_5 = tmp_579;
      real_t a_4_6 = tmp_580;
      real_t a_4_7 = tmp_581;
      real_t a_4_8 = tmp_582;
      real_t a_4_9 = tmp_583;
      real_t a_5_0 = tmp_330;
      real_t a_5_1 = tmp_512;
      real_t a_5_2 = tmp_537;
      real_t a_5_3 = tmp_554;
      real_t a_5_4 = tmp_579;
      real_t a_5_5 = tmp_101*(tmp_479*((tmp_317 + tmp_319)*(tmp_317 + tmp_319)) + tmp_479*((tmp_325 + tmp_327)*(tmp_325 + tmp_327)) + tmp_482*((tmp_590 + tmp_591)*(tmp_590 + tmp_591))) + tmp_56*(tmp_464*((tmp_275 + tmp_277)*(tmp_275 + tmp_277)) + tmp_464*((tmp_283 + tmp_285)*(tmp_283 + tmp_285)) + tmp_469*((tmp_584 + tmp_585)*(tmp_584 + tmp_585))) + tmp_71*(tmp_471*((tmp_289 + tmp_291)*(tmp_289 + tmp_291)) + tmp_471*((tmp_297 + tmp_299)*(tmp_297 + tmp_299)) + tmp_474*((tmp_586 + tmp_587)*(tmp_586 + tmp_587))) + tmp_86*(tmp_475*((tmp_303 + tmp_305)*(tmp_303 + tmp_305)) + tmp_475*((tmp_311 + tmp_313)*(tmp_311 + tmp_313)) + tmp_478*((tmp_588 + tmp_589)*(tmp_588 + tmp_589)));
      real_t a_5_6 = tmp_604;
      real_t a_5_7 = tmp_605;
      real_t a_5_8 = tmp_606;
      real_t a_5_9 = tmp_607;
      real_t a_6_0 = tmp_383;
      real_t a_6_1 = tmp_513;
      real_t a_6_2 = tmp_538;
      real_t a_6_3 = tmp_555;
      real_t a_6_4 = tmp_580;
      real_t a_6_5 = tmp_604;
      real_t a_6_6 = tmp_101*(tmp_479*((tmp_370 + tmp_372)*(tmp_370 + tmp_372)) + tmp_479*((tmp_378 + tmp_380)*(tmp_378 + tmp_380)) + tmp_482*((tmp_614 + tmp_615)*(tmp_614 + tmp_615))) + tmp_56*(tmp_464*((tmp_331 + tmp_333)*(tmp_331 + tmp_333)) + tmp_464*((tmp_339 + tmp_341)*(tmp_339 + tmp_341)) + tmp_469*((tmp_608 + tmp_609)*(tmp_608 + tmp_609))) + tmp_71*(tmp_471*((tmp_344 + tmp_346)*(tmp_344 + tmp_346)) + tmp_471*((tmp_352 + tmp_354)*(tmp_352 + tmp_354)) + tmp_474*((tmp_610 + tmp_611)*(tmp_610 + tmp_611))) + tmp_86*(tmp_475*((tmp_357 + tmp_359)*(tmp_357 + tmp_359)) + tmp_475*((tmp_365 + tmp_367)*(tmp_365 + tmp_367)) + tmp_478*((tmp_612 + tmp_613)*(tmp_612 + tmp_613)));
      real_t a_6_7 = tmp_628;
      real_t a_6_8 = tmp_629;
      real_t a_6_9 = tmp_630;
      real_t a_7_0 = tmp_414;
      real_t a_7_1 = tmp_514;
      real_t a_7_2 = tmp_539;
      real_t a_7_3 = tmp_556;
      real_t a_7_4 = tmp_581;
      real_t a_7_5 = tmp_605;
      real_t a_7_6 = tmp_628;
      real_t a_7_7 = tmp_101*(tmp_479*((tmp_168*tmp_634 - tmp_258 - tmp_319)*(tmp_168*tmp_634 - tmp_258 - tmp_319)) + tmp_479*((tmp_176*tmp_634 - tmp_269 - tmp_327)*(tmp_176*tmp_634 - tmp_269 - tmp_327)) + tmp_482*((tmp_173*tmp_634 - tmp_566 - tmp_591)*(tmp_173*tmp_634 - tmp_566 - tmp_591))) + tmp_56*(tmp_464*((tmp_168*tmp_631 - tmp_201 - tmp_277)*(tmp_168*tmp_631 - tmp_201 - tmp_277)) + tmp_464*((tmp_176*tmp_631 - tmp_212 - tmp_285)*(tmp_176*tmp_631 - tmp_212 - tmp_285)) + tmp_469*((tmp_173*tmp_631 - tmp_560 - tmp_585)*(tmp_173*tmp_631 - tmp_560 - tmp_585))) + tmp_71*(tmp_471*((tmp_168*tmp_632 - tmp_220 - tmp_291)*(tmp_168*tmp_632 - tmp_220 - tmp_291)) + tmp_471*((tmp_176*tmp_632 - tmp_231 - tmp_299)*(tmp_176*tmp_632 - tmp_231 - tmp_299)) + tmp_474*((tmp_173*tmp_632 - tmp_562 - tmp_587)*(tmp_173*tmp_632 - tmp_562 - tmp_587))) + tmp_86*(tmp_475*((tmp_168*tmp_633 - tmp_239 - tmp_305)*(tmp_168*tmp_633 - tmp_239 - tmp_305)) + tmp_475*((tmp_176*tmp_633 - tmp_250 - tmp_313)*(tmp_176*tmp_633 - tmp_250 - tmp_313)) + tmp_478*((tmp_173*tmp_633 - tmp_564 - tmp_589)*(tmp_173*tmp_633 - tmp_564 - tmp_589)));
      real_t a_7_8 = tmp_647;
      real_t a_7_9 = tmp_648;
      real_t a_8_0 = tmp_440;
      real_t a_8_1 = tmp_515;
      real_t a_8_2 = tmp_540;
      real_t a_8_3 = tmp_557;
      real_t a_8_4 = tmp_582;
      real_t a_8_5 = tmp_606;
      real_t a_8_6 = tmp_629;
      real_t a_8_7 = tmp_647;
      real_t a_8_8 = tmp_101*(tmp_479*((tmp_139*tmp_652 - tmp_255 - tmp_372)*(tmp_139*tmp_652 - tmp_255 - tmp_372)) + tmp_479*((tmp_147*tmp_652 - tmp_267 - tmp_380)*(tmp_147*tmp_652 - tmp_267 - tmp_380)) + tmp_482*((tmp_144*tmp_652 - tmp_565 - tmp_615)*(tmp_144*tmp_652 - tmp_565 - tmp_615))) + tmp_56*(tmp_464*((tmp_139*tmp_649 - tmp_198 - tmp_333)*(tmp_139*tmp_649 - tmp_198 - tmp_333)) + tmp_464*((tmp_147*tmp_649 - tmp_210 - tmp_341)*(tmp_147*tmp_649 - tmp_210 - tmp_341)) + tmp_469*((tmp_144*tmp_649 - tmp_559 - tmp_609)*(tmp_144*tmp_649 - tmp_559 - tmp_609))) + tmp_71*(tmp_471*((tmp_139*tmp_650 - tmp_217 - tmp_346)*(tmp_139*tmp_650 - tmp_217 - tmp_346)) + tmp_471*((tmp_147*tmp_650 - tmp_229 - tmp_354)*(tmp_147*tmp_650 - tmp_229 - tmp_354)) + tmp_474*((tmp_144*tmp_650 - tmp_561 - tmp_611)*(tmp_144*tmp_650 - tmp_561 - tmp_611))) + tmp_86*(tmp_475*((tmp_139*tmp_651 - tmp_236 - tmp_359)*(tmp_139*tmp_651 - tmp_236 - tmp_359)) + tmp_475*((tmp_147*tmp_651 - tmp_248 - tmp_367)*(tmp_147*tmp_651 - tmp_248 - tmp_367)) + tmp_478*((tmp_144*tmp_651 - tmp_563 - tmp_613)*(tmp_144*tmp_651 - tmp_563 - tmp_613)));
      real_t a_8_9 = tmp_653;
      real_t a_9_0 = tmp_462;
      real_t a_9_1 = tmp_516;
      real_t a_9_2 = tmp_541;
      real_t a_9_3 = tmp_558;
      real_t a_9_4 = tmp_583;
      real_t a_9_5 = tmp_607;
      real_t a_9_6 = tmp_630;
      real_t a_9_7 = tmp_648;
      real_t a_9_8 = tmp_653;
      real_t a_9_9 = tmp_101*(tmp_479*((tmp_103*tmp_657 - tmp_317 - tmp_370)*(tmp_103*tmp_657 - tmp_317 - tmp_370)) + tmp_479*((tmp_112*tmp_657 - tmp_325 - tmp_378)*(tmp_112*tmp_657 - tmp_325 - tmp_378)) + tmp_482*((tmp_108*tmp_657 - tmp_590 - tmp_614)*(tmp_108*tmp_657 - tmp_590 - tmp_614))) + tmp_56*(tmp_464*((tmp_103*tmp_654 - tmp_275 - tmp_331)*(tmp_103*tmp_654 - tmp_275 - tmp_331)) + tmp_464*((tmp_112*tmp_654 - tmp_283 - tmp_339)*(tmp_112*tmp_654 - tmp_283 - tmp_339)) + tmp_469*((tmp_108*tmp_654 - tmp_584 - tmp_608)*(tmp_108*tmp_654 - tmp_584 - tmp_608))) + tmp_71*(tmp_471*((tmp_103*tmp_655 - tmp_289 - tmp_344)*(tmp_103*tmp_655 - tmp_289 - tmp_344)) + tmp_471*((tmp_112*tmp_655 - tmp_297 - tmp_352)*(tmp_112*tmp_655 - tmp_297 - tmp_352)) + tmp_474*((tmp_108*tmp_655 - tmp_586 - tmp_610)*(tmp_108*tmp_655 - tmp_586 - tmp_610))) + tmp_86*(tmp_475*((tmp_103*tmp_656 - tmp_303 - tmp_357)*(tmp_103*tmp_656 - tmp_303 - tmp_357)) + tmp_475*((tmp_112*tmp_656 - tmp_311 - tmp_365)*(tmp_112*tmp_656 - tmp_311 - tmp_365)) + tmp_478*((tmp_108*tmp_656 - tmp_588 - tmp_612)*(tmp_108*tmp_656 - tmp_588 - tmp_612)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_1_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_30 = -tmp_11*tmp_3 + tmp_14*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_10*tmp_11 - tmp_5*tmp_8;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = -tmp_10*tmp_14 + tmp_3*tmp_8;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = tmp_12 - tmp_16;
      real_t tmp_37 = 1.0*tmp_23;
      real_t tmp_38 = -tmp_18 + tmp_9;
      real_t tmp_39 = tmp_15 - tmp_17;
      real_t tmp_40 = tmp_36*tmp_37 + tmp_37*tmp_38 + tmp_37*tmp_39;
      real_t tmp_41 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_42 = p_affine_0_0*p_affine_1_1;
      real_t tmp_43 = p_affine_0_0*p_affine_1_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_2;
      real_t tmp_45 = p_affine_0_1*p_affine_1_0;
      real_t tmp_46 = p_affine_0_1*p_affine_1_2;
      real_t tmp_47 = p_affine_2_2*p_affine_3_0;
      real_t tmp_48 = p_affine_0_2*p_affine_1_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_1;
      real_t tmp_50 = p_affine_2_0*p_affine_3_1;
      real_t tmp_51 = p_affine_2_2*p_affine_3_1;
      real_t tmp_52 = p_affine_2_0*p_affine_3_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_0;
      real_t tmp_54 = std::abs(p_affine_0_0*tmp_44 - p_affine_0_0*tmp_51 + p_affine_0_1*tmp_47 - p_affine_0_1*tmp_52 + p_affine_0_2*tmp_50 - p_affine_0_2*tmp_53 - p_affine_1_0*tmp_44 + p_affine_1_0*tmp_51 - p_affine_1_1*tmp_47 + p_affine_1_1*tmp_52 - p_affine_1_2*tmp_50 + p_affine_1_2*tmp_53 + p_affine_2_0*tmp_46 - p_affine_2_0*tmp_49 - p_affine_2_1*tmp_43 + p_affine_2_1*tmp_48 + p_affine_2_2*tmp_42 - p_affine_2_2*tmp_45 - p_affine_3_0*tmp_46 + p_affine_3_0*tmp_49 + p_affine_3_1*tmp_43 - p_affine_3_1*tmp_48 - p_affine_3_2*tmp_42 + p_affine_3_2*tmp_45);
      real_t tmp_55 = 0.041666666666666657*tmp_54;
      real_t tmp_56 = 0.55278640450004235;
      real_t tmp_57 = 2.3416407864998732;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = tmp_19*(tmp_56 + tmp_57 + tmp_58 - 3.0);
      real_t tmp_60 = tmp_59*tmp_6;
      real_t tmp_61 = tmp_25*tmp_59;
      real_t tmp_62 = tmp_27*tmp_59;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_64 = tmp_30*tmp_59;
      real_t tmp_65 = tmp_32*tmp_59;
      real_t tmp_66 = tmp_34*tmp_59;
      real_t tmp_67 = 1.0*tmp_59;
      real_t tmp_68 = tmp_36*tmp_67 + tmp_38*tmp_67 + tmp_39*tmp_67;
      real_t tmp_69 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_70 = 0.041666666666666657*tmp_54;
      real_t tmp_71 = 2.3416407864998732;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = tmp_19*(tmp_71 + tmp_72 + tmp_73 - 3.0);
      real_t tmp_75 = tmp_6*tmp_74;
      real_t tmp_76 = tmp_25*tmp_74;
      real_t tmp_77 = tmp_27*tmp_74;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_79 = tmp_30*tmp_74;
      real_t tmp_80 = tmp_32*tmp_74;
      real_t tmp_81 = tmp_34*tmp_74;
      real_t tmp_82 = 1.0*tmp_74;
      real_t tmp_83 = tmp_36*tmp_82 + tmp_38*tmp_82 + tmp_39*tmp_82;
      real_t tmp_84 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_85 = 0.041666666666666657*tmp_54;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_94 = tmp_30*tmp_89;
      real_t tmp_95 = tmp_32*tmp_89;
      real_t tmp_96 = tmp_34*tmp_89;
      real_t tmp_97 = 1.0*tmp_89;
      real_t tmp_98 = tmp_36*tmp_97 + tmp_38*tmp_97 + tmp_39*tmp_97;
      real_t tmp_99 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_100 = 0.041666666666666657*tmp_54;
      real_t tmp_101 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_102 = 2.0*tmp_19;
      real_t tmp_103 = tmp_102*tmp_27;
      real_t tmp_104 = Scalar_Variable_Coefficient_3D_0_0*(tmp_20 - 1.0);
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_107 = 0.5*tmp_60 + 0.5*tmp_61 + 0.5*tmp_62;
      real_t tmp_108 = Scalar_Variable_Coefficient_3D_1_0*(tmp_56 - 1.0);
      real_t tmp_109 = tmp_102*tmp_108;
      real_t tmp_110 = 0.5*tmp_64 + 0.5*tmp_65 + 0.5*tmp_66;
      real_t tmp_111 = 0.5*tmp_75 + 0.5*tmp_76 + 0.5*tmp_77;
      real_t tmp_112 = Scalar_Variable_Coefficient_3D_2_0*(tmp_71 - 1.0);
      real_t tmp_113 = tmp_102*tmp_112;
      real_t tmp_114 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_115 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_116 = Scalar_Variable_Coefficient_3D_3_0*(tmp_86 - 1.0);
      real_t tmp_117 = tmp_102*tmp_116;
      real_t tmp_118 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_119 = Scalar_Variable_Coefficient_3D_0_0*(tmp_21 - 1.0);
      real_t tmp_120 = tmp_102*tmp_119;
      real_t tmp_121 = tmp_19*tmp_38;
      real_t tmp_122 = 2.0*tmp_121;
      real_t tmp_123 = Scalar_Variable_Coefficient_3D_1_0*(tmp_57 - 1.0);
      real_t tmp_124 = tmp_102*tmp_123;
      real_t tmp_125 = Scalar_Variable_Coefficient_3D_2_0*(tmp_72 - 1.0);
      real_t tmp_126 = tmp_102*tmp_125;
      real_t tmp_127 = Scalar_Variable_Coefficient_3D_3_0*(tmp_87 - 1.0);
      real_t tmp_128 = tmp_102*tmp_127;
      real_t tmp_129 = Scalar_Variable_Coefficient_3D_0_0*(tmp_22 - 1.0);
      real_t tmp_130 = tmp_102*tmp_6;
      real_t tmp_131 = tmp_19*tmp_36;
      real_t tmp_132 = 2.0*tmp_131;
      real_t tmp_133 = tmp_102*tmp_30;
      real_t tmp_134 = Scalar_Variable_Coefficient_3D_1_0*(tmp_58 - 1.0);
      real_t tmp_135 = Scalar_Variable_Coefficient_3D_2_0*(tmp_73 - 1.0);
      real_t tmp_136 = Scalar_Variable_Coefficient_3D_3_0*(tmp_88 - 1.0);
      real_t tmp_137 = 0.13819660112501059*tmp_102;
      real_t tmp_138 = tmp_137*tmp_6;
      real_t tmp_139 = 0.58541019662496829*tmp_102;
      real_t tmp_140 = tmp_139*tmp_25;
      real_t tmp_141 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_142 = tmp_101*tmp_141;
      real_t tmp_143 = tmp_131*tmp_21;
      real_t tmp_144 = tmp_121*tmp_22;
      real_t tmp_145 = tmp_40*tmp_41;
      real_t tmp_146 = tmp_137*tmp_30;
      real_t tmp_147 = tmp_139*tmp_32;
      real_t tmp_148 = tmp_106*tmp_141;
      real_t tmp_149 = 0.58541019662496829*tmp_102;
      real_t tmp_150 = tmp_149*tmp_6;
      real_t tmp_151 = 0.13819660112501059*tmp_102;
      real_t tmp_152 = tmp_151*tmp_25;
      real_t tmp_153 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_154 = tmp_107*tmp_153;
      real_t tmp_155 = tmp_131*tmp_57;
      real_t tmp_156 = tmp_121*tmp_58;
      real_t tmp_157 = tmp_68*tmp_69;
      real_t tmp_158 = tmp_149*tmp_30;
      real_t tmp_159 = tmp_151*tmp_32;
      real_t tmp_160 = tmp_110*tmp_153;
      real_t tmp_161 = 0.13819660112501059*tmp_102;
      real_t tmp_162 = tmp_161*tmp_6;
      real_t tmp_163 = 0.13819660112501059*tmp_102;
      real_t tmp_164 = tmp_163*tmp_25;
      real_t tmp_165 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_166 = tmp_111*tmp_165;
      real_t tmp_167 = tmp_131*tmp_72;
      real_t tmp_168 = tmp_121*tmp_73;
      real_t tmp_169 = tmp_83*tmp_84;
      real_t tmp_170 = tmp_161*tmp_30;
      real_t tmp_171 = tmp_163*tmp_32;
      real_t tmp_172 = tmp_114*tmp_165;
      real_t tmp_173 = 0.13819660112501059*tmp_102;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = 0.13819660112501059*tmp_102;
      real_t tmp_176 = tmp_175*tmp_25;
      real_t tmp_177 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_178 = tmp_115*tmp_177;
      real_t tmp_179 = tmp_131*tmp_87;
      real_t tmp_180 = tmp_121*tmp_88;
      real_t tmp_181 = tmp_98*tmp_99;
      real_t tmp_182 = tmp_173*tmp_30;
      real_t tmp_183 = tmp_175*tmp_32;
      real_t tmp_184 = tmp_118*tmp_177;
      real_t tmp_185 = 0.13819660112501059*tmp_102;
      real_t tmp_186 = tmp_185*tmp_6;
      real_t tmp_187 = tmp_139*tmp_27;
      real_t tmp_188 = tmp_131*tmp_20;
      real_t tmp_189 = tmp_19*tmp_39;
      real_t tmp_190 = tmp_189*tmp_22;
      real_t tmp_191 = tmp_185*tmp_30;
      real_t tmp_192 = tmp_139*tmp_34;
      real_t tmp_193 = 0.13819660112501059*tmp_102;
      real_t tmp_194 = tmp_193*tmp_6;
      real_t tmp_195 = tmp_151*tmp_27;
      real_t tmp_196 = tmp_131*tmp_56;
      real_t tmp_197 = tmp_189*tmp_58;
      real_t tmp_198 = tmp_193*tmp_30;
      real_t tmp_199 = tmp_151*tmp_34;
      real_t tmp_200 = 0.58541019662496829*tmp_102;
      real_t tmp_201 = tmp_200*tmp_6;
      real_t tmp_202 = tmp_163*tmp_27;
      real_t tmp_203 = tmp_131*tmp_71;
      real_t tmp_204 = tmp_189*tmp_73;
      real_t tmp_205 = tmp_200*tmp_30;
      real_t tmp_206 = tmp_163*tmp_34;
      real_t tmp_207 = 0.13819660112501059*tmp_102;
      real_t tmp_208 = tmp_207*tmp_6;
      real_t tmp_209 = tmp_175*tmp_27;
      real_t tmp_210 = tmp_131*tmp_86;
      real_t tmp_211 = tmp_189*tmp_88;
      real_t tmp_212 = tmp_207*tmp_30;
      real_t tmp_213 = tmp_175*tmp_34;
      real_t tmp_214 = tmp_185*tmp_25;
      real_t tmp_215 = tmp_137*tmp_27;
      real_t tmp_216 = tmp_121*tmp_20;
      real_t tmp_217 = tmp_189*tmp_21;
      real_t tmp_218 = tmp_185*tmp_32;
      real_t tmp_219 = tmp_137*tmp_34;
      real_t tmp_220 = tmp_193*tmp_25;
      real_t tmp_221 = tmp_149*tmp_27;
      real_t tmp_222 = tmp_121*tmp_56;
      real_t tmp_223 = tmp_189*tmp_57;
      real_t tmp_224 = tmp_193*tmp_32;
      real_t tmp_225 = tmp_149*tmp_34;
      real_t tmp_226 = tmp_200*tmp_25;
      real_t tmp_227 = tmp_161*tmp_27;
      real_t tmp_228 = tmp_121*tmp_71;
      real_t tmp_229 = tmp_189*tmp_72;
      real_t tmp_230 = tmp_200*tmp_32;
      real_t tmp_231 = tmp_161*tmp_34;
      real_t tmp_232 = tmp_207*tmp_25;
      real_t tmp_233 = tmp_173*tmp_27;
      real_t tmp_234 = tmp_121*tmp_86;
      real_t tmp_235 = tmp_189*tmp_87;
      real_t tmp_236 = tmp_207*tmp_32;
      real_t tmp_237 = tmp_173*tmp_34;
      real_t tmp_238 = -tmp_21;
      real_t tmp_239 = 4.0 - tmp_20;
      real_t tmp_240 = tmp_238 + tmp_239 - 4.6832815729997463;
      real_t tmp_241 = 0.5*tmp_19;
      real_t tmp_242 = tmp_240*tmp_241;
      real_t tmp_243 = 1.0*tmp_131;
      real_t tmp_244 = -tmp_57;
      real_t tmp_245 = 4.0 - tmp_56;
      real_t tmp_246 = tmp_244 + tmp_245 - 1.1055728090000847;
      real_t tmp_247 = tmp_241*tmp_246;
      real_t tmp_248 = -tmp_72;
      real_t tmp_249 = 4.0 - tmp_71;
      real_t tmp_250 = tmp_248 + tmp_249 - 1.1055728090000847;
      real_t tmp_251 = tmp_241*tmp_250;
      real_t tmp_252 = -tmp_87;
      real_t tmp_253 = 4.0 - tmp_86;
      real_t tmp_254 = tmp_252 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_241*tmp_254;
      real_t tmp_256 = -tmp_22;
      real_t tmp_257 = tmp_239 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_241*tmp_257;
      real_t tmp_259 = 1.0*tmp_121;
      real_t tmp_260 = -tmp_58;
      real_t tmp_261 = tmp_245 + tmp_260 - 4.6832815729997463;
      real_t tmp_262 = tmp_241*tmp_261;
      real_t tmp_263 = -tmp_73;
      real_t tmp_264 = tmp_249 + tmp_263 - 1.1055728090000847;
      real_t tmp_265 = tmp_241*tmp_264;
      real_t tmp_266 = -tmp_88;
      real_t tmp_267 = tmp_253 + tmp_266 - 1.1055728090000847;
      real_t tmp_268 = tmp_241*tmp_267;
      real_t tmp_269 = tmp_238 + tmp_256 + 2.8944271909999153;
      real_t tmp_270 = tmp_241*tmp_269;
      real_t tmp_271 = 1.0*tmp_189;
      real_t tmp_272 = tmp_244 + tmp_260 + 2.8944271909999153;
      real_t tmp_273 = tmp_241*tmp_272;
      real_t tmp_274 = tmp_248 + tmp_263 - 0.68328157299974634;
      real_t tmp_275 = tmp_241*tmp_274;
      real_t tmp_276 = tmp_252 + tmp_266 + 2.8944271909999153;
      real_t tmp_277 = tmp_241*tmp_276;
      real_t a_0_0 = tmp_100*(tmp_93*((tmp_90 + tmp_91 + tmp_92)*(tmp_90 + tmp_91 + tmp_92)) + tmp_93*((tmp_94 + tmp_95 + tmp_96)*(tmp_94 + tmp_95 + tmp_96)) + (tmp_98*tmp_98)*tmp_99) + tmp_55*(tmp_29*((tmp_24 + tmp_26 + tmp_28)*(tmp_24 + tmp_26 + tmp_28)) + tmp_29*((tmp_31 + tmp_33 + tmp_35)*(tmp_31 + tmp_33 + tmp_35)) + (tmp_40*tmp_40)*tmp_41) + tmp_70*(tmp_63*((tmp_60 + tmp_61 + tmp_62)*(tmp_60 + tmp_61 + tmp_62)) + tmp_63*((tmp_64 + tmp_65 + tmp_66)*(tmp_64 + tmp_65 + tmp_66)) + (tmp_68*tmp_68)*tmp_69) + tmp_85*(tmp_78*((tmp_75 + tmp_76 + tmp_77)*(tmp_75 + tmp_76 + tmp_77)) + tmp_78*((tmp_79 + tmp_80 + tmp_81)*(tmp_79 + tmp_80 + tmp_81)) + (tmp_83*tmp_83)*tmp_84);
      real_t a_0_1 = tmp_100*(tmp_103*tmp_115*tmp_116 + tmp_117*tmp_118*tmp_34 + tmp_117*tmp_39*tmp_98) + tmp_55*(tmp_101*tmp_103*tmp_104 + tmp_105*tmp_106*tmp_34 + tmp_105*tmp_39*tmp_40) + tmp_70*(tmp_103*tmp_107*tmp_108 + tmp_109*tmp_110*tmp_34 + tmp_109*tmp_39*tmp_68) + tmp_85*(tmp_103*tmp_111*tmp_112 + tmp_113*tmp_114*tmp_34 + tmp_113*tmp_39*tmp_83);
      real_t a_0_2 = tmp_100*(tmp_115*tmp_128*tmp_25 + tmp_118*tmp_128*tmp_32 + tmp_122*tmp_127*tmp_98) + tmp_55*(tmp_101*tmp_120*tmp_25 + tmp_106*tmp_120*tmp_32 + tmp_119*tmp_122*tmp_40) + tmp_70*(tmp_107*tmp_124*tmp_25 + tmp_110*tmp_124*tmp_32 + tmp_122*tmp_123*tmp_68) + tmp_85*(tmp_111*tmp_126*tmp_25 + tmp_114*tmp_126*tmp_32 + tmp_122*tmp_125*tmp_83);
      real_t a_0_3 = tmp_100*(tmp_115*tmp_130*tmp_136 + tmp_118*tmp_133*tmp_136 + tmp_132*tmp_136*tmp_98) + tmp_55*(tmp_101*tmp_129*tmp_130 + tmp_106*tmp_129*tmp_133 + tmp_129*tmp_132*tmp_40) + tmp_70*(tmp_107*tmp_130*tmp_134 + tmp_110*tmp_133*tmp_134 + tmp_132*tmp_134*tmp_68) + tmp_85*(tmp_111*tmp_130*tmp_135 + tmp_114*tmp_133*tmp_135 + tmp_132*tmp_135*tmp_83);
      real_t a_0_4 = tmp_100*(tmp_178*(tmp_174 + tmp_176) + tmp_181*(tmp_179 + tmp_180) + tmp_184*(tmp_182 + tmp_183)) + tmp_55*(tmp_142*(tmp_138 + tmp_140) + tmp_145*(tmp_143 + tmp_144) + tmp_148*(tmp_146 + tmp_147)) + tmp_70*(tmp_154*(tmp_150 + tmp_152) + tmp_157*(tmp_155 + tmp_156) + tmp_160*(tmp_158 + tmp_159)) + tmp_85*(tmp_166*(tmp_162 + tmp_164) + tmp_169*(tmp_167 + tmp_168) + tmp_172*(tmp_170 + tmp_171));
      real_t a_0_5 = tmp_100*(tmp_178*(tmp_208 + tmp_209) + tmp_181*(tmp_210 + tmp_211) + tmp_184*(tmp_212 + tmp_213)) + tmp_55*(tmp_142*(tmp_186 + tmp_187) + tmp_145*(tmp_188 + tmp_190) + tmp_148*(tmp_191 + tmp_192)) + tmp_70*(tmp_154*(tmp_194 + tmp_195) + tmp_157*(tmp_196 + tmp_197) + tmp_160*(tmp_198 + tmp_199)) + tmp_85*(tmp_166*(tmp_201 + tmp_202) + tmp_169*(tmp_203 + tmp_204) + tmp_172*(tmp_205 + tmp_206));
      real_t a_0_6 = tmp_100*(tmp_178*(tmp_232 + tmp_233) + tmp_181*(tmp_234 + tmp_235) + tmp_184*(tmp_236 + tmp_237)) + tmp_55*(tmp_142*(tmp_214 + tmp_215) + tmp_145*(tmp_216 + tmp_217) + tmp_148*(tmp_218 + tmp_219)) + tmp_70*(tmp_154*(tmp_220 + tmp_221) + tmp_157*(tmp_222 + tmp_223) + tmp_160*(tmp_224 + tmp_225)) + tmp_85*(tmp_166*(tmp_226 + tmp_227) + tmp_169*(tmp_228 + tmp_229) + tmp_172*(tmp_230 + tmp_231));
      real_t a_0_7 = tmp_100*(tmp_178*(-tmp_176 - tmp_209 + tmp_255*tmp_6) + tmp_181*(-tmp_180 - tmp_211 + tmp_243*tmp_254) + tmp_184*(-tmp_183 - tmp_213 + tmp_255*tmp_30)) + tmp_55*(tmp_142*(-tmp_140 - tmp_187 + tmp_242*tmp_6) + tmp_145*(-tmp_144 - tmp_190 + tmp_240*tmp_243) + tmp_148*(-tmp_147 - tmp_192 + tmp_242*tmp_30)) + tmp_70*(tmp_154*(-tmp_152 - tmp_195 + tmp_247*tmp_6) + tmp_157*(-tmp_156 - tmp_197 + tmp_243*tmp_246) + tmp_160*(-tmp_159 - tmp_199 + tmp_247*tmp_30)) + tmp_85*(tmp_166*(-tmp_164 - tmp_202 + tmp_251*tmp_6) + tmp_169*(-tmp_168 - tmp_204 + tmp_243*tmp_250) + tmp_172*(-tmp_171 - tmp_206 + tmp_251*tmp_30));
      real_t a_0_8 = tmp_100*(tmp_178*(-tmp_174 - tmp_233 + tmp_25*tmp_268) + tmp_181*(-tmp_179 - tmp_235 + tmp_259*tmp_267) + tmp_184*(-tmp_182 - tmp_237 + tmp_268*tmp_32)) + tmp_55*(tmp_142*(-tmp_138 - tmp_215 + tmp_25*tmp_258) + tmp_145*(-tmp_143 - tmp_217 + tmp_257*tmp_259) + tmp_148*(-tmp_146 - tmp_219 + tmp_258*tmp_32)) + tmp_70*(tmp_154*(-tmp_150 - tmp_221 + tmp_25*tmp_262) + tmp_157*(-tmp_155 - tmp_223 + tmp_259*tmp_261) + tmp_160*(-tmp_158 - tmp_225 + tmp_262*tmp_32)) + tmp_85*(tmp_166*(-tmp_162 - tmp_227 + tmp_25*tmp_265) + tmp_169*(-tmp_167 - tmp_229 + tmp_259*tmp_264) + tmp_172*(-tmp_170 - tmp_231 + tmp_265*tmp_32));
      real_t a_0_9 = tmp_100*(tmp_178*(-tmp_208 - tmp_232 + tmp_27*tmp_277) + tmp_181*(-tmp_210 - tmp_234 + tmp_271*tmp_276) + tmp_184*(-tmp_212 - tmp_236 + tmp_277*tmp_34)) + tmp_55*(tmp_142*(-tmp_186 - tmp_214 + tmp_27*tmp_270) + tmp_145*(-tmp_188 - tmp_216 + tmp_269*tmp_271) + tmp_148*(-tmp_191 - tmp_218 + tmp_270*tmp_34)) + tmp_70*(tmp_154*(-tmp_194 - tmp_220 + tmp_27*tmp_273) + tmp_157*(-tmp_196 - tmp_222 + tmp_271*tmp_272) + tmp_160*(-tmp_198 - tmp_224 + tmp_273*tmp_34)) + tmp_85*(tmp_166*(-tmp_201 - tmp_226 + tmp_27*tmp_275) + tmp_169*(-tmp_203 - tmp_228 + tmp_271*tmp_274) + tmp_172*(-tmp_205 - tmp_230 + tmp_275*tmp_34));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_1_1_affine_q2::Scalar_Variable_Coefficient_2D( real_t in_0, real_t in_1, real_t * out_0 ) const
   {
      *out_0 = callback2D( Point3D( {in_0, in_1, 0} ) );
   }

   void p2_epsilonvar_1_1_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_1_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_1_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_1_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = p_affine_3_2 + tmp_2;
      real_t tmp_11 = -p_affine_0_1;
      real_t tmp_12 = p_affine_2_1 + tmp_11;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_3_1 + tmp_11;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = p_affine_3_0 + tmp_0;
      real_t tmp_17 = p_affine_1_1 + tmp_11;
      real_t tmp_18 = tmp_16*tmp_17;
      real_t tmp_19 = tmp_14*tmp_4;
      real_t tmp_20 = tmp_1*tmp_17;
      real_t tmp_21 = tmp_12*tmp_16;
      real_t tmp_22 = tmp_10*tmp_13 - tmp_10*tmp_20 + tmp_15*tmp_3 + tmp_18*tmp_5 - tmp_19*tmp_5 - tmp_21*tmp_3;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_26 = tmp_10*tmp_4 - tmp_16*tmp_3;
      real_t tmp_27 = -tmp_1*tmp_10 + tmp_16*tmp_5;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_6;
      real_t tmp_29 = tmp_13 - tmp_20;
      real_t tmp_30 = tmp_18 - tmp_19;
      real_t tmp_31 = tmp_15 - tmp_21;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_6;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_6*tmp_62;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_6*tmp_71;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_7 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_8 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_9 - 1.0;
      real_t tmp_103 = tmp_6*tmp_79;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_8;
      real_t tmp_149 = 4.0 - tmp_7;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_6;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_9;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_6;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_6;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_6;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_1_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = 0.55278640450004235;
      real_t tmp_8 = 0.55278640450004235;
      real_t tmp_9 = 2.3416407864998732;
      real_t tmp_10 = p_affine_3_2 + tmp_2;
      real_t tmp_11 = -p_affine_0_1;
      real_t tmp_12 = p_affine_2_1 + tmp_11;
      real_t tmp_13 = tmp_12*tmp_4;
      real_t tmp_14 = p_affine_3_1 + tmp_11;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = p_affine_3_0 + tmp_0;
      real_t tmp_17 = p_affine_1_1 + tmp_11;
      real_t tmp_18 = tmp_16*tmp_17;
      real_t tmp_19 = tmp_14*tmp_4;
      real_t tmp_20 = tmp_1*tmp_17;
      real_t tmp_21 = tmp_12*tmp_16;
      real_t tmp_22 = 1.0 / (tmp_10*tmp_13 - tmp_10*tmp_20 + tmp_15*tmp_3 + tmp_18*tmp_5 - tmp_19*tmp_5 - tmp_21*tmp_3);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_7 + tmp_8 + tmp_9 - 3.0);
      real_t tmp_25 = tmp_10*tmp_4 - tmp_16*tmp_3;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_16*tmp_5;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = tmp_13 - tmp_20;
      real_t tmp_42 = tmp_18 - tmp_19;
      real_t tmp_43 = tmp_15 - tmp_21;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_6*tmp_64;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_8;
      real_t tmp_96 = 4.0 - tmp_7;
      real_t tmp_97 = tmp_23*tmp_6;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_9;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_6) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_6) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_6) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_6*tmp_61);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_7 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_8 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_9 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_1_2_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_2_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_2;
      real_t tmp_13 = p_affine_3_2 + tmp_12;
      real_t tmp_14 = p_affine_1_2 + tmp_12;
      real_t tmp_15 = p_affine_3_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_2_2 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_15;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_21 + tmp_17*tmp_19 - tmp_17*tmp_20;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_26 = tmp_19 - tmp_20;
      real_t tmp_27 = tmp_16 - tmp_21;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_8;
      real_t tmp_29 = -tmp_14*tmp_3 + tmp_17*tmp_6;
      real_t tmp_30 = -tmp_13*tmp_6 + tmp_14*tmp_15;
      real_t tmp_31 = tmp_13*tmp_3 - tmp_15*tmp_17;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_8;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_62*tmp_8;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_71*tmp_8;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_9 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_10 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_11 - 1.0;
      real_t tmp_103 = tmp_79*tmp_8;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_10;
      real_t tmp_149 = 4.0 - tmp_9;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_8;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_11;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_8;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_8;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_8;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_2_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_2;
      real_t tmp_13 = p_affine_3_2 + tmp_12;
      real_t tmp_14 = p_affine_1_2 + tmp_12;
      real_t tmp_15 = p_affine_3_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_2_2 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_15;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = 1.0 / (tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_21 + tmp_17*tmp_19 - tmp_17*tmp_20);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_25 = tmp_19 - tmp_20;
      real_t tmp_26 = tmp_16 - tmp_21;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = -tmp_14*tmp_3 + tmp_17*tmp_6;
      real_t tmp_42 = -tmp_13*tmp_6 + tmp_14*tmp_15;
      real_t tmp_43 = tmp_13*tmp_3 - tmp_15*tmp_17;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_64*tmp_8;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_10;
      real_t tmp_96 = 4.0 - tmp_9;
      real_t tmp_97 = tmp_23*tmp_8;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_11;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_8) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_8) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_9 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_10 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_11 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_2_0_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_2_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_2;
      real_t tmp_13 = p_affine_3_2 + tmp_12;
      real_t tmp_14 = p_affine_1_2 + tmp_12;
      real_t tmp_15 = p_affine_3_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_2_2 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_15;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_21 + tmp_17*tmp_19 - tmp_17*tmp_20;
      real_t tmp_23 = 1.0 / (tmp_22);
      real_t tmp_24 = 0.5*tmp_23;
      real_t tmp_25 = tmp_24*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_26 = tmp_19 - tmp_20;
      real_t tmp_27 = tmp_16 - tmp_21;
      real_t tmp_28 = tmp_25*tmp_26 + tmp_25*tmp_27 + tmp_25*tmp_8;
      real_t tmp_29 = -tmp_1*tmp_17 + tmp_14*tmp_5;
      real_t tmp_30 = tmp_1*tmp_13 - tmp_14*tmp_18;
      real_t tmp_31 = -tmp_13*tmp_5 + tmp_17*tmp_18;
      real_t tmp_32 = tmp_25*tmp_29 + tmp_25*tmp_30 + tmp_25*tmp_31;
      real_t tmp_33 = p_affine_0_0*p_affine_1_1;
      real_t tmp_34 = p_affine_0_0*p_affine_1_2;
      real_t tmp_35 = p_affine_2_1*p_affine_3_2;
      real_t tmp_36 = p_affine_0_1*p_affine_1_0;
      real_t tmp_37 = p_affine_0_1*p_affine_1_2;
      real_t tmp_38 = p_affine_2_2*p_affine_3_0;
      real_t tmp_39 = p_affine_0_2*p_affine_1_0;
      real_t tmp_40 = p_affine_0_2*p_affine_1_1;
      real_t tmp_41 = p_affine_2_0*p_affine_3_1;
      real_t tmp_42 = p_affine_2_2*p_affine_3_1;
      real_t tmp_43 = p_affine_2_0*p_affine_3_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_0;
      real_t tmp_45 = std::abs(p_affine_0_0*tmp_35 - p_affine_0_0*tmp_42 + p_affine_0_1*tmp_38 - p_affine_0_1*tmp_43 + p_affine_0_2*tmp_41 - p_affine_0_2*tmp_44 - p_affine_1_0*tmp_35 + p_affine_1_0*tmp_42 - p_affine_1_1*tmp_38 + p_affine_1_1*tmp_43 - p_affine_1_2*tmp_41 + p_affine_1_2*tmp_44 + p_affine_2_0*tmp_37 - p_affine_2_0*tmp_40 - p_affine_2_1*tmp_34 + p_affine_2_1*tmp_39 + p_affine_2_2*tmp_33 - p_affine_2_2*tmp_36 - p_affine_3_0*tmp_37 + p_affine_3_0*tmp_40 + p_affine_3_1*tmp_34 - p_affine_3_1*tmp_39 - p_affine_3_2*tmp_33 + p_affine_3_2*tmp_36);
      real_t tmp_46 = 4*tmp_45;
      real_t tmp_47 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_48 = tmp_46*tmp_47;
      real_t tmp_49 = tmp_32*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_24*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_26*tmp_53 + tmp_27*tmp_53 + tmp_53*tmp_8;
      real_t tmp_55 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = tmp_55*tmp_57;
      real_t tmp_59 = 2.3416407864998732;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = tmp_24*(tmp_59 + tmp_60 + tmp_61 - 3.0);
      real_t tmp_63 = tmp_26*tmp_62 + tmp_27*tmp_62 + tmp_62*tmp_8;
      real_t tmp_64 = tmp_29*tmp_62 + tmp_30*tmp_62 + tmp_31*tmp_62;
      real_t tmp_65 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_66 = tmp_46*tmp_65;
      real_t tmp_67 = tmp_64*tmp_66;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = 0.55278640450004235;
      real_t tmp_70 = 0.55278640450004235;
      real_t tmp_71 = tmp_24*(tmp_68 + tmp_69 + tmp_70 - 3.0);
      real_t tmp_72 = tmp_26*tmp_71 + tmp_27*tmp_71 + tmp_71*tmp_8;
      real_t tmp_73 = tmp_29*tmp_71 + tmp_30*tmp_71 + tmp_31*tmp_71;
      real_t tmp_74 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_75 = tmp_46*tmp_74;
      real_t tmp_76 = tmp_73*tmp_75;
      real_t tmp_77 = tmp_32*tmp_47;
      real_t tmp_78 = tmp_9 - 1.0;
      real_t tmp_79 = 2.0*tmp_23;
      real_t tmp_80 = tmp_27*tmp_79;
      real_t tmp_81 = tmp_45*tmp_80;
      real_t tmp_82 = tmp_78*tmp_81;
      real_t tmp_83 = tmp_55*tmp_56;
      real_t tmp_84 = tmp_50 - 1.0;
      real_t tmp_85 = tmp_81*tmp_84;
      real_t tmp_86 = tmp_64*tmp_65;
      real_t tmp_87 = tmp_59 - 1.0;
      real_t tmp_88 = tmp_81*tmp_87;
      real_t tmp_89 = tmp_73*tmp_74;
      real_t tmp_90 = tmp_68 - 1.0;
      real_t tmp_91 = tmp_81*tmp_90;
      real_t tmp_92 = tmp_10 - 1.0;
      real_t tmp_93 = tmp_26*tmp_79;
      real_t tmp_94 = tmp_45*tmp_93;
      real_t tmp_95 = tmp_92*tmp_94;
      real_t tmp_96 = tmp_51 - 1.0;
      real_t tmp_97 = tmp_94*tmp_96;
      real_t tmp_98 = tmp_60 - 1.0;
      real_t tmp_99 = tmp_94*tmp_98;
      real_t tmp_100 = tmp_69 - 1.0;
      real_t tmp_101 = tmp_100*tmp_94;
      real_t tmp_102 = tmp_11 - 1.0;
      real_t tmp_103 = tmp_79*tmp_8;
      real_t tmp_104 = tmp_103*tmp_45;
      real_t tmp_105 = tmp_102*tmp_104;
      real_t tmp_106 = tmp_52 - 1.0;
      real_t tmp_107 = tmp_104*tmp_106;
      real_t tmp_108 = tmp_61 - 1.0;
      real_t tmp_109 = tmp_104*tmp_108;
      real_t tmp_110 = tmp_70 - 1.0;
      real_t tmp_111 = tmp_104*tmp_110;
      real_t tmp_112 = 0.13819660112501059*tmp_103;
      real_t tmp_113 = 0.58541019662496829*tmp_93;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = 0.58541019662496829*tmp_103;
      real_t tmp_116 = 0.13819660112501059*tmp_93;
      real_t tmp_117 = tmp_115 + tmp_116;
      real_t tmp_118 = 0.13819660112501059*tmp_103;
      real_t tmp_119 = 0.13819660112501059*tmp_93;
      real_t tmp_120 = tmp_118 + tmp_119;
      real_t tmp_121 = 0.13819660112501059*tmp_103;
      real_t tmp_122 = 0.13819660112501059*tmp_93;
      real_t tmp_123 = tmp_121 + tmp_122;
      real_t tmp_124 = 0.13819660112501059*tmp_103;
      real_t tmp_125 = 0.58541019662496829*tmp_80;
      real_t tmp_126 = tmp_124 + tmp_125;
      real_t tmp_127 = 0.13819660112501059*tmp_103;
      real_t tmp_128 = 0.13819660112501059*tmp_80;
      real_t tmp_129 = tmp_127 + tmp_128;
      real_t tmp_130 = 0.58541019662496829*tmp_103;
      real_t tmp_131 = 0.13819660112501059*tmp_80;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = 0.13819660112501059*tmp_103;
      real_t tmp_134 = 0.13819660112501059*tmp_80;
      real_t tmp_135 = tmp_133 + tmp_134;
      real_t tmp_136 = 0.13819660112501059*tmp_93;
      real_t tmp_137 = 0.13819660112501059*tmp_80;
      real_t tmp_138 = tmp_136 + tmp_137;
      real_t tmp_139 = 0.13819660112501059*tmp_93;
      real_t tmp_140 = 0.58541019662496829*tmp_80;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = 0.58541019662496829*tmp_93;
      real_t tmp_143 = 0.13819660112501059*tmp_80;
      real_t tmp_144 = tmp_142 + tmp_143;
      real_t tmp_145 = 0.13819660112501059*tmp_93;
      real_t tmp_146 = 0.13819660112501059*tmp_80;
      real_t tmp_147 = tmp_145 + tmp_146;
      real_t tmp_148 = -tmp_10;
      real_t tmp_149 = 4.0 - tmp_9;
      real_t tmp_150 = tmp_148 + tmp_149 - 4.6832815729997463;
      real_t tmp_151 = tmp_24*tmp_8;
      real_t tmp_152 = -tmp_113 - tmp_125 + tmp_150*tmp_151;
      real_t tmp_153 = -tmp_51;
      real_t tmp_154 = 4.0 - tmp_50;
      real_t tmp_155 = tmp_153 + tmp_154 - 1.1055728090000847;
      real_t tmp_156 = -tmp_116 - tmp_128 + tmp_151*tmp_155;
      real_t tmp_157 = -tmp_60;
      real_t tmp_158 = 4.0 - tmp_59;
      real_t tmp_159 = tmp_157 + tmp_158 - 1.1055728090000847;
      real_t tmp_160 = -tmp_119 - tmp_131 + tmp_151*tmp_159;
      real_t tmp_161 = -tmp_69;
      real_t tmp_162 = 4.0 - tmp_68;
      real_t tmp_163 = tmp_161 + tmp_162 - 1.1055728090000847;
      real_t tmp_164 = -tmp_122 - tmp_134 + tmp_151*tmp_163;
      real_t tmp_165 = -tmp_11;
      real_t tmp_166 = tmp_149 + tmp_165 - 1.1055728090000847;
      real_t tmp_167 = tmp_24*tmp_26;
      real_t tmp_168 = -tmp_112 - tmp_137 + tmp_166*tmp_167;
      real_t tmp_169 = -tmp_52;
      real_t tmp_170 = tmp_154 + tmp_169 - 4.6832815729997463;
      real_t tmp_171 = -tmp_115 - tmp_140 + tmp_167*tmp_170;
      real_t tmp_172 = -tmp_61;
      real_t tmp_173 = tmp_158 + tmp_172 - 1.1055728090000847;
      real_t tmp_174 = -tmp_118 - tmp_143 + tmp_167*tmp_173;
      real_t tmp_175 = -tmp_70;
      real_t tmp_176 = tmp_162 + tmp_175 - 1.1055728090000847;
      real_t tmp_177 = -tmp_121 - tmp_146 + tmp_167*tmp_176;
      real_t tmp_178 = tmp_148 + tmp_165 + 2.8944271909999153;
      real_t tmp_179 = tmp_24*tmp_27;
      real_t tmp_180 = -tmp_124 - tmp_136 + tmp_178*tmp_179;
      real_t tmp_181 = tmp_153 + tmp_169 + 2.8944271909999153;
      real_t tmp_182 = -tmp_127 - tmp_139 + tmp_179*tmp_181;
      real_t tmp_183 = tmp_157 + tmp_172 - 0.68328157299974634;
      real_t tmp_184 = -tmp_130 - tmp_142 + tmp_179*tmp_183;
      real_t tmp_185 = tmp_161 + tmp_175 + 2.8944271909999153;
      real_t tmp_186 = -tmp_133 - tmp_145 + tmp_179*tmp_185;
      real_t tmp_187 = tmp_28*tmp_47;
      real_t tmp_188 = tmp_31*tmp_79;
      real_t tmp_189 = tmp_188*tmp_45;
      real_t tmp_190 = tmp_189*tmp_78;
      real_t tmp_191 = tmp_54*tmp_56;
      real_t tmp_192 = tmp_189*tmp_84;
      real_t tmp_193 = tmp_63*tmp_65;
      real_t tmp_194 = tmp_189*tmp_87;
      real_t tmp_195 = tmp_72*tmp_74;
      real_t tmp_196 = tmp_189*tmp_90;
      real_t tmp_197 = tmp_45*tmp_47;
      real_t tmp_198 = 1.0 / (tmp_22*tmp_22);
      real_t tmp_199 = 16.0*tmp_198;
      real_t tmp_200 = tmp_197*tmp_199;
      real_t tmp_201 = tmp_27*tmp_31;
      real_t tmp_202 = tmp_199*tmp_45;
      real_t tmp_203 = tmp_201*tmp_202;
      real_t tmp_204 = 1.0*tmp_198;
      real_t tmp_205 = tmp_204*tmp_31;
      real_t tmp_206 = tmp_205*tmp_26;
      real_t tmp_207 = tmp_197*tmp_92;
      real_t tmp_208 = tmp_207*tmp_78;
      real_t tmp_209 = tmp_206*tmp_45;
      real_t tmp_210 = tmp_56*tmp_84;
      real_t tmp_211 = tmp_210*tmp_96;
      real_t tmp_212 = tmp_65*tmp_87;
      real_t tmp_213 = tmp_212*tmp_98;
      real_t tmp_214 = tmp_74*tmp_90;
      real_t tmp_215 = tmp_100*tmp_214;
      real_t tmp_216 = tmp_205*tmp_8;
      real_t tmp_217 = tmp_102*tmp_197*tmp_78;
      real_t tmp_218 = tmp_216*tmp_45;
      real_t tmp_219 = tmp_106*tmp_210;
      real_t tmp_220 = tmp_108*tmp_212;
      real_t tmp_221 = tmp_110*tmp_214;
      real_t tmp_222 = tmp_190*tmp_47;
      real_t tmp_223 = tmp_192*tmp_56;
      real_t tmp_224 = tmp_194*tmp_65;
      real_t tmp_225 = tmp_196*tmp_74;
      real_t tmp_226 = tmp_30*tmp_79;
      real_t tmp_227 = tmp_226*tmp_45;
      real_t tmp_228 = tmp_227*tmp_96;
      real_t tmp_229 = tmp_227*tmp_98;
      real_t tmp_230 = tmp_100*tmp_227;
      real_t tmp_231 = tmp_204*tmp_30;
      real_t tmp_232 = tmp_231*tmp_27;
      real_t tmp_233 = tmp_232*tmp_45;
      real_t tmp_234 = tmp_26*tmp_30;
      real_t tmp_235 = tmp_202*tmp_234;
      real_t tmp_236 = tmp_231*tmp_8;
      real_t tmp_237 = tmp_102*tmp_207;
      real_t tmp_238 = tmp_236*tmp_45;
      real_t tmp_239 = tmp_106*tmp_56*tmp_96;
      real_t tmp_240 = tmp_108*tmp_65*tmp_98;
      real_t tmp_241 = tmp_100*tmp_110*tmp_74;
      real_t tmp_242 = tmp_114*tmp_197;
      real_t tmp_243 = tmp_226*tmp_92;
      real_t tmp_244 = tmp_228*tmp_56;
      real_t tmp_245 = tmp_229*tmp_65;
      real_t tmp_246 = tmp_230*tmp_74;
      real_t tmp_247 = tmp_197*tmp_243;
      real_t tmp_248 = tmp_29*tmp_79;
      real_t tmp_249 = tmp_248*tmp_45;
      real_t tmp_250 = tmp_106*tmp_249;
      real_t tmp_251 = tmp_108*tmp_249;
      real_t tmp_252 = tmp_110*tmp_249;
      real_t tmp_253 = tmp_204*tmp_29;
      real_t tmp_254 = tmp_253*tmp_27;
      real_t tmp_255 = tmp_254*tmp_45;
      real_t tmp_256 = tmp_253*tmp_26;
      real_t tmp_257 = tmp_256*tmp_45;
      real_t tmp_258 = tmp_29*tmp_8;
      real_t tmp_259 = tmp_202*tmp_258;
      real_t tmp_260 = tmp_102*tmp_248;
      real_t tmp_261 = tmp_250*tmp_56;
      real_t tmp_262 = tmp_251*tmp_65;
      real_t tmp_263 = tmp_252*tmp_74;
      real_t tmp_264 = tmp_197*tmp_260;
      real_t tmp_265 = 0.13819660112501059*tmp_248;
      real_t tmp_266 = 0.58541019662496829*tmp_226;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_267*tmp_48;
      real_t tmp_269 = 0.58541019662496829*tmp_248;
      real_t tmp_270 = 0.13819660112501059*tmp_226;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = tmp_271*tmp_57;
      real_t tmp_273 = 0.13819660112501059*tmp_248;
      real_t tmp_274 = 0.13819660112501059*tmp_226;
      real_t tmp_275 = tmp_273 + tmp_274;
      real_t tmp_276 = tmp_275*tmp_66;
      real_t tmp_277 = 0.13819660112501059*tmp_248;
      real_t tmp_278 = 0.13819660112501059*tmp_226;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_279*tmp_75;
      real_t tmp_281 = tmp_267*tmp_47;
      real_t tmp_282 = tmp_271*tmp_56;
      real_t tmp_283 = tmp_275*tmp_65;
      real_t tmp_284 = tmp_279*tmp_74;
      real_t tmp_285 = 0.13819660112501059*tmp_248;
      real_t tmp_286 = 0.58541019662496829*tmp_188;
      real_t tmp_287 = tmp_285 + tmp_286;
      real_t tmp_288 = tmp_287*tmp_48;
      real_t tmp_289 = 0.13819660112501059*tmp_248;
      real_t tmp_290 = 0.13819660112501059*tmp_188;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_291*tmp_57;
      real_t tmp_293 = 0.58541019662496829*tmp_248;
      real_t tmp_294 = 0.13819660112501059*tmp_188;
      real_t tmp_295 = tmp_293 + tmp_294;
      real_t tmp_296 = tmp_295*tmp_66;
      real_t tmp_297 = 0.13819660112501059*tmp_248;
      real_t tmp_298 = 0.13819660112501059*tmp_188;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = tmp_299*tmp_75;
      real_t tmp_301 = tmp_287*tmp_47;
      real_t tmp_302 = tmp_291*tmp_56;
      real_t tmp_303 = tmp_295*tmp_65;
      real_t tmp_304 = tmp_299*tmp_74;
      real_t tmp_305 = 0.13819660112501059*tmp_226;
      real_t tmp_306 = 0.13819660112501059*tmp_188;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_307*tmp_48;
      real_t tmp_309 = 0.13819660112501059*tmp_226;
      real_t tmp_310 = 0.58541019662496829*tmp_188;
      real_t tmp_311 = tmp_309 + tmp_310;
      real_t tmp_312 = tmp_311*tmp_57;
      real_t tmp_313 = 0.58541019662496829*tmp_226;
      real_t tmp_314 = 0.13819660112501059*tmp_188;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_315*tmp_66;
      real_t tmp_317 = 0.13819660112501059*tmp_226;
      real_t tmp_318 = 0.13819660112501059*tmp_188;
      real_t tmp_319 = tmp_317 + tmp_318;
      real_t tmp_320 = tmp_319*tmp_75;
      real_t tmp_321 = tmp_307*tmp_47;
      real_t tmp_322 = tmp_311*tmp_56;
      real_t tmp_323 = tmp_315*tmp_65;
      real_t tmp_324 = tmp_319*tmp_74;
      real_t tmp_325 = tmp_24*tmp_29;
      real_t tmp_326 = tmp_150*tmp_325 - tmp_266 - tmp_286;
      real_t tmp_327 = tmp_326*tmp_48;
      real_t tmp_328 = tmp_155*tmp_325 - tmp_270 - tmp_290;
      real_t tmp_329 = tmp_328*tmp_57;
      real_t tmp_330 = tmp_159*tmp_325 - tmp_274 - tmp_294;
      real_t tmp_331 = tmp_330*tmp_66;
      real_t tmp_332 = tmp_163*tmp_325 - tmp_278 - tmp_298;
      real_t tmp_333 = tmp_332*tmp_75;
      real_t tmp_334 = tmp_326*tmp_47;
      real_t tmp_335 = tmp_328*tmp_56;
      real_t tmp_336 = tmp_330*tmp_65;
      real_t tmp_337 = tmp_332*tmp_74;
      real_t tmp_338 = tmp_24*tmp_30;
      real_t tmp_339 = tmp_166*tmp_338 - tmp_265 - tmp_306;
      real_t tmp_340 = tmp_339*tmp_48;
      real_t tmp_341 = tmp_170*tmp_338 - tmp_269 - tmp_310;
      real_t tmp_342 = tmp_341*tmp_57;
      real_t tmp_343 = tmp_173*tmp_338 - tmp_273 - tmp_314;
      real_t tmp_344 = tmp_343*tmp_66;
      real_t tmp_345 = tmp_176*tmp_338 - tmp_277 - tmp_318;
      real_t tmp_346 = tmp_345*tmp_75;
      real_t tmp_347 = tmp_339*tmp_47;
      real_t tmp_348 = tmp_341*tmp_56;
      real_t tmp_349 = tmp_343*tmp_65;
      real_t tmp_350 = tmp_345*tmp_74;
      real_t tmp_351 = tmp_24*tmp_31;
      real_t tmp_352 = tmp_178*tmp_351 - tmp_285 - tmp_305;
      real_t tmp_353 = tmp_352*tmp_48;
      real_t tmp_354 = tmp_181*tmp_351 - tmp_289 - tmp_309;
      real_t tmp_355 = tmp_354*tmp_57;
      real_t tmp_356 = tmp_183*tmp_351 - tmp_293 - tmp_313;
      real_t tmp_357 = tmp_356*tmp_66;
      real_t tmp_358 = tmp_185*tmp_351 - tmp_297 - tmp_317;
      real_t tmp_359 = tmp_358*tmp_75;
      real_t tmp_360 = tmp_352*tmp_47;
      real_t tmp_361 = tmp_354*tmp_56;
      real_t tmp_362 = tmp_356*tmp_65;
      real_t tmp_363 = tmp_358*tmp_74;
      real_t a_0_0 = tmp_28*tmp_49 + tmp_54*tmp_58 + tmp_63*tmp_67 + tmp_72*tmp_76;
      real_t a_0_1 = tmp_77*tmp_82 + tmp_83*tmp_85 + tmp_86*tmp_88 + tmp_89*tmp_91;
      real_t a_0_2 = tmp_101*tmp_89 + tmp_77*tmp_95 + tmp_83*tmp_97 + tmp_86*tmp_99;
      real_t a_0_3 = tmp_105*tmp_77 + tmp_107*tmp_83 + tmp_109*tmp_86 + tmp_111*tmp_89;
      real_t a_0_4 = tmp_114*tmp_49 + tmp_117*tmp_58 + tmp_120*tmp_67 + tmp_123*tmp_76;
      real_t a_0_5 = tmp_126*tmp_49 + tmp_129*tmp_58 + tmp_132*tmp_67 + tmp_135*tmp_76;
      real_t a_0_6 = tmp_138*tmp_49 + tmp_141*tmp_58 + tmp_144*tmp_67 + tmp_147*tmp_76;
      real_t a_0_7 = tmp_152*tmp_49 + tmp_156*tmp_58 + tmp_160*tmp_67 + tmp_164*tmp_76;
      real_t a_0_8 = tmp_168*tmp_49 + tmp_171*tmp_58 + tmp_174*tmp_67 + tmp_177*tmp_76;
      real_t a_0_9 = tmp_180*tmp_49 + tmp_182*tmp_58 + tmp_184*tmp_67 + tmp_186*tmp_76;
      real_t a_1_0 = tmp_187*tmp_190 + tmp_191*tmp_192 + tmp_193*tmp_194 + tmp_195*tmp_196;
      real_t a_1_1 = 0.012499999999999983*tmp_200*tmp_201 + 0.012499999999999983*tmp_203*tmp_56 + 0.11249999999999989*tmp_203*tmp_65 + 0.012499999999999983*tmp_203*tmp_74;
      real_t a_1_2 = tmp_206*tmp_208 + tmp_209*tmp_211 + tmp_209*tmp_213 + tmp_209*tmp_215;
      real_t a_1_3 = tmp_216*tmp_217 + tmp_218*tmp_219 + tmp_218*tmp_220 + tmp_218*tmp_221;
      real_t a_1_4 = tmp_114*tmp_222 + tmp_117*tmp_223 + tmp_120*tmp_224 + tmp_123*tmp_225;
      real_t a_1_5 = tmp_126*tmp_222 + tmp_129*tmp_223 + tmp_132*tmp_224 + tmp_135*tmp_225;
      real_t a_1_6 = tmp_138*tmp_222 + tmp_141*tmp_223 + tmp_144*tmp_224 + tmp_147*tmp_225;
      real_t a_1_7 = tmp_152*tmp_222 + tmp_156*tmp_223 + tmp_160*tmp_224 + tmp_164*tmp_225;
      real_t a_1_8 = tmp_168*tmp_222 + tmp_171*tmp_223 + tmp_174*tmp_224 + tmp_177*tmp_225;
      real_t a_1_9 = tmp_180*tmp_222 + tmp_182*tmp_223 + tmp_184*tmp_224 + tmp_186*tmp_225;
      real_t a_2_0 = tmp_187*tmp_227*tmp_92 + tmp_191*tmp_228 + tmp_193*tmp_229 + tmp_195*tmp_230;
      real_t a_2_1 = tmp_208*tmp_232 + tmp_211*tmp_233 + tmp_213*tmp_233 + tmp_215*tmp_233;
      real_t a_2_2 = 0.012499999999999983*tmp_200*tmp_234 + 0.11249999999999989*tmp_235*tmp_56 + 0.012499999999999983*tmp_235*tmp_65 + 0.012499999999999983*tmp_235*tmp_74;
      real_t a_2_3 = tmp_236*tmp_237 + tmp_238*tmp_239 + tmp_238*tmp_240 + tmp_238*tmp_241;
      real_t a_2_4 = tmp_117*tmp_244 + tmp_120*tmp_245 + tmp_123*tmp_246 + tmp_242*tmp_243;
      real_t a_2_5 = tmp_126*tmp_247 + tmp_129*tmp_244 + tmp_132*tmp_245 + tmp_135*tmp_246;
      real_t a_2_6 = tmp_138*tmp_247 + tmp_141*tmp_244 + tmp_144*tmp_245 + tmp_147*tmp_246;
      real_t a_2_7 = tmp_152*tmp_247 + tmp_156*tmp_244 + tmp_160*tmp_245 + tmp_164*tmp_246;
      real_t a_2_8 = tmp_168*tmp_247 + tmp_171*tmp_244 + tmp_174*tmp_245 + tmp_177*tmp_246;
      real_t a_2_9 = tmp_180*tmp_247 + tmp_182*tmp_244 + tmp_184*tmp_245 + tmp_186*tmp_246;
      real_t a_3_0 = tmp_102*tmp_187*tmp_249 + tmp_191*tmp_250 + tmp_193*tmp_251 + tmp_195*tmp_252;
      real_t a_3_1 = tmp_217*tmp_254 + tmp_219*tmp_255 + tmp_220*tmp_255 + tmp_221*tmp_255;
      real_t a_3_2 = tmp_237*tmp_256 + tmp_239*tmp_257 + tmp_240*tmp_257 + tmp_241*tmp_257;
      real_t a_3_3 = 0.11249999999999989*tmp_200*tmp_258 + 0.012499999999999983*tmp_259*tmp_56 + 0.012499999999999983*tmp_259*tmp_65 + 0.012499999999999983*tmp_259*tmp_74;
      real_t a_3_4 = tmp_117*tmp_261 + tmp_120*tmp_262 + tmp_123*tmp_263 + tmp_242*tmp_260;
      real_t a_3_5 = tmp_126*tmp_264 + tmp_129*tmp_261 + tmp_132*tmp_262 + tmp_135*tmp_263;
      real_t a_3_6 = tmp_138*tmp_264 + tmp_141*tmp_261 + tmp_144*tmp_262 + tmp_147*tmp_263;
      real_t a_3_7 = tmp_152*tmp_264 + tmp_156*tmp_261 + tmp_160*tmp_262 + tmp_164*tmp_263;
      real_t a_3_8 = tmp_168*tmp_264 + tmp_171*tmp_261 + tmp_174*tmp_262 + tmp_177*tmp_263;
      real_t a_3_9 = tmp_180*tmp_264 + tmp_182*tmp_261 + tmp_184*tmp_262 + tmp_186*tmp_263;
      real_t a_4_0 = tmp_268*tmp_28 + tmp_272*tmp_54 + tmp_276*tmp_63 + tmp_280*tmp_72;
      real_t a_4_1 = tmp_281*tmp_82 + tmp_282*tmp_85 + tmp_283*tmp_88 + tmp_284*tmp_91;
      real_t a_4_2 = tmp_101*tmp_284 + tmp_281*tmp_95 + tmp_282*tmp_97 + tmp_283*tmp_99;
      real_t a_4_3 = tmp_105*tmp_281 + tmp_107*tmp_282 + tmp_109*tmp_283 + tmp_111*tmp_284;
      real_t a_4_4 = tmp_114*tmp_268 + tmp_117*tmp_272 + tmp_120*tmp_276 + tmp_123*tmp_280;
      real_t a_4_5 = tmp_126*tmp_268 + tmp_129*tmp_272 + tmp_132*tmp_276 + tmp_135*tmp_280;
      real_t a_4_6 = tmp_138*tmp_268 + tmp_141*tmp_272 + tmp_144*tmp_276 + tmp_147*tmp_280;
      real_t a_4_7 = tmp_152*tmp_268 + tmp_156*tmp_272 + tmp_160*tmp_276 + tmp_164*tmp_280;
      real_t a_4_8 = tmp_168*tmp_268 + tmp_171*tmp_272 + tmp_174*tmp_276 + tmp_177*tmp_280;
      real_t a_4_9 = tmp_180*tmp_268 + tmp_182*tmp_272 + tmp_184*tmp_276 + tmp_186*tmp_280;
      real_t a_5_0 = tmp_28*tmp_288 + tmp_292*tmp_54 + tmp_296*tmp_63 + tmp_300*tmp_72;
      real_t a_5_1 = tmp_301*tmp_82 + tmp_302*tmp_85 + tmp_303*tmp_88 + tmp_304*tmp_91;
      real_t a_5_2 = tmp_101*tmp_304 + tmp_301*tmp_95 + tmp_302*tmp_97 + tmp_303*tmp_99;
      real_t a_5_3 = tmp_105*tmp_301 + tmp_107*tmp_302 + tmp_109*tmp_303 + tmp_111*tmp_304;
      real_t a_5_4 = tmp_114*tmp_288 + tmp_117*tmp_292 + tmp_120*tmp_296 + tmp_123*tmp_300;
      real_t a_5_5 = tmp_126*tmp_288 + tmp_129*tmp_292 + tmp_132*tmp_296 + tmp_135*tmp_300;
      real_t a_5_6 = tmp_138*tmp_288 + tmp_141*tmp_292 + tmp_144*tmp_296 + tmp_147*tmp_300;
      real_t a_5_7 = tmp_152*tmp_288 + tmp_156*tmp_292 + tmp_160*tmp_296 + tmp_164*tmp_300;
      real_t a_5_8 = tmp_168*tmp_288 + tmp_171*tmp_292 + tmp_174*tmp_296 + tmp_177*tmp_300;
      real_t a_5_9 = tmp_180*tmp_288 + tmp_182*tmp_292 + tmp_184*tmp_296 + tmp_186*tmp_300;
      real_t a_6_0 = tmp_28*tmp_308 + tmp_312*tmp_54 + tmp_316*tmp_63 + tmp_320*tmp_72;
      real_t a_6_1 = tmp_321*tmp_82 + tmp_322*tmp_85 + tmp_323*tmp_88 + tmp_324*tmp_91;
      real_t a_6_2 = tmp_101*tmp_324 + tmp_321*tmp_95 + tmp_322*tmp_97 + tmp_323*tmp_99;
      real_t a_6_3 = tmp_105*tmp_321 + tmp_107*tmp_322 + tmp_109*tmp_323 + tmp_111*tmp_324;
      real_t a_6_4 = tmp_114*tmp_308 + tmp_117*tmp_312 + tmp_120*tmp_316 + tmp_123*tmp_320;
      real_t a_6_5 = tmp_126*tmp_308 + tmp_129*tmp_312 + tmp_132*tmp_316 + tmp_135*tmp_320;
      real_t a_6_6 = tmp_138*tmp_308 + tmp_141*tmp_312 + tmp_144*tmp_316 + tmp_147*tmp_320;
      real_t a_6_7 = tmp_152*tmp_308 + tmp_156*tmp_312 + tmp_160*tmp_316 + tmp_164*tmp_320;
      real_t a_6_8 = tmp_168*tmp_308 + tmp_171*tmp_312 + tmp_174*tmp_316 + tmp_177*tmp_320;
      real_t a_6_9 = tmp_180*tmp_308 + tmp_182*tmp_312 + tmp_184*tmp_316 + tmp_186*tmp_320;
      real_t a_7_0 = tmp_28*tmp_327 + tmp_329*tmp_54 + tmp_331*tmp_63 + tmp_333*tmp_72;
      real_t a_7_1 = tmp_334*tmp_82 + tmp_335*tmp_85 + tmp_336*tmp_88 + tmp_337*tmp_91;
      real_t a_7_2 = tmp_101*tmp_337 + tmp_334*tmp_95 + tmp_335*tmp_97 + tmp_336*tmp_99;
      real_t a_7_3 = tmp_105*tmp_334 + tmp_107*tmp_335 + tmp_109*tmp_336 + tmp_111*tmp_337;
      real_t a_7_4 = tmp_114*tmp_327 + tmp_117*tmp_329 + tmp_120*tmp_331 + tmp_123*tmp_333;
      real_t a_7_5 = tmp_126*tmp_327 + tmp_129*tmp_329 + tmp_132*tmp_331 + tmp_135*tmp_333;
      real_t a_7_6 = tmp_138*tmp_327 + tmp_141*tmp_329 + tmp_144*tmp_331 + tmp_147*tmp_333;
      real_t a_7_7 = tmp_152*tmp_327 + tmp_156*tmp_329 + tmp_160*tmp_331 + tmp_164*tmp_333;
      real_t a_7_8 = tmp_168*tmp_327 + tmp_171*tmp_329 + tmp_174*tmp_331 + tmp_177*tmp_333;
      real_t a_7_9 = tmp_180*tmp_327 + tmp_182*tmp_329 + tmp_184*tmp_331 + tmp_186*tmp_333;
      real_t a_8_0 = tmp_28*tmp_340 + tmp_342*tmp_54 + tmp_344*tmp_63 + tmp_346*tmp_72;
      real_t a_8_1 = tmp_347*tmp_82 + tmp_348*tmp_85 + tmp_349*tmp_88 + tmp_350*tmp_91;
      real_t a_8_2 = tmp_101*tmp_350 + tmp_347*tmp_95 + tmp_348*tmp_97 + tmp_349*tmp_99;
      real_t a_8_3 = tmp_105*tmp_347 + tmp_107*tmp_348 + tmp_109*tmp_349 + tmp_111*tmp_350;
      real_t a_8_4 = tmp_114*tmp_340 + tmp_117*tmp_342 + tmp_120*tmp_344 + tmp_123*tmp_346;
      real_t a_8_5 = tmp_126*tmp_340 + tmp_129*tmp_342 + tmp_132*tmp_344 + tmp_135*tmp_346;
      real_t a_8_6 = tmp_138*tmp_340 + tmp_141*tmp_342 + tmp_144*tmp_344 + tmp_147*tmp_346;
      real_t a_8_7 = tmp_152*tmp_340 + tmp_156*tmp_342 + tmp_160*tmp_344 + tmp_164*tmp_346;
      real_t a_8_8 = tmp_168*tmp_340 + tmp_171*tmp_342 + tmp_174*tmp_344 + tmp_177*tmp_346;
      real_t a_8_9 = tmp_180*tmp_340 + tmp_182*tmp_342 + tmp_184*tmp_344 + tmp_186*tmp_346;
      real_t a_9_0 = tmp_28*tmp_353 + tmp_355*tmp_54 + tmp_357*tmp_63 + tmp_359*tmp_72;
      real_t a_9_1 = tmp_360*tmp_82 + tmp_361*tmp_85 + tmp_362*tmp_88 + tmp_363*tmp_91;
      real_t a_9_2 = tmp_101*tmp_363 + tmp_360*tmp_95 + tmp_361*tmp_97 + tmp_362*tmp_99;
      real_t a_9_3 = tmp_105*tmp_360 + tmp_107*tmp_361 + tmp_109*tmp_362 + tmp_111*tmp_363;
      real_t a_9_4 = tmp_114*tmp_353 + tmp_117*tmp_355 + tmp_120*tmp_357 + tmp_123*tmp_359;
      real_t a_9_5 = tmp_126*tmp_353 + tmp_129*tmp_355 + tmp_132*tmp_357 + tmp_135*tmp_359;
      real_t a_9_6 = tmp_138*tmp_353 + tmp_141*tmp_355 + tmp_144*tmp_357 + tmp_147*tmp_359;
      real_t a_9_7 = tmp_152*tmp_353 + tmp_156*tmp_355 + tmp_160*tmp_357 + tmp_164*tmp_359;
      real_t a_9_8 = tmp_168*tmp_353 + tmp_171*tmp_355 + tmp_174*tmp_357 + tmp_177*tmp_359;
      real_t a_9_9 = tmp_180*tmp_353 + tmp_182*tmp_355 + tmp_184*tmp_357 + tmp_186*tmp_359;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_2_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = 0.55278640450004235;
      real_t tmp_10 = 0.55278640450004235;
      real_t tmp_11 = 2.3416407864998732;
      real_t tmp_12 = -p_affine_0_2;
      real_t tmp_13 = p_affine_3_2 + tmp_12;
      real_t tmp_14 = p_affine_1_2 + tmp_12;
      real_t tmp_15 = p_affine_3_1 + tmp_2;
      real_t tmp_16 = tmp_15*tmp_5;
      real_t tmp_17 = p_affine_2_2 + tmp_12;
      real_t tmp_18 = p_affine_3_0 + tmp_0;
      real_t tmp_19 = tmp_18*tmp_6;
      real_t tmp_20 = tmp_1*tmp_15;
      real_t tmp_21 = tmp_18*tmp_3;
      real_t tmp_22 = 1.0 / (tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_21 + tmp_17*tmp_19 - tmp_17*tmp_20);
      real_t tmp_23 = 0.5*tmp_22;
      real_t tmp_24 = tmp_23*(tmp_10 + tmp_11 + tmp_9 - 3.0);
      real_t tmp_25 = tmp_19 - tmp_20;
      real_t tmp_26 = tmp_16 - tmp_21;
      real_t tmp_27 = p_affine_0_0*p_affine_1_1;
      real_t tmp_28 = p_affine_0_0*p_affine_1_2;
      real_t tmp_29 = p_affine_2_1*p_affine_3_2;
      real_t tmp_30 = p_affine_0_1*p_affine_1_0;
      real_t tmp_31 = p_affine_0_1*p_affine_1_2;
      real_t tmp_32 = p_affine_2_2*p_affine_3_0;
      real_t tmp_33 = p_affine_0_2*p_affine_1_0;
      real_t tmp_34 = p_affine_0_2*p_affine_1_1;
      real_t tmp_35 = p_affine_2_0*p_affine_3_1;
      real_t tmp_36 = p_affine_2_2*p_affine_3_1;
      real_t tmp_37 = p_affine_2_0*p_affine_3_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_0;
      real_t tmp_39 = std::abs(p_affine_0_0*tmp_29 - p_affine_0_0*tmp_36 + p_affine_0_1*tmp_32 - p_affine_0_1*tmp_37 + p_affine_0_2*tmp_35 - p_affine_0_2*tmp_38 - p_affine_1_0*tmp_29 + p_affine_1_0*tmp_36 - p_affine_1_1*tmp_32 + p_affine_1_1*tmp_37 - p_affine_1_2*tmp_35 + p_affine_1_2*tmp_38 + p_affine_2_0*tmp_31 - p_affine_2_0*tmp_34 - p_affine_2_1*tmp_28 + p_affine_2_1*tmp_33 + p_affine_2_2*tmp_27 - p_affine_2_2*tmp_30 - p_affine_3_0*tmp_31 + p_affine_3_0*tmp_34 + p_affine_3_1*tmp_28 - p_affine_3_1*tmp_33 - p_affine_3_2*tmp_27 + p_affine_3_2*tmp_30);
      real_t tmp_40 = 4*tmp_39;
      real_t tmp_41 = -tmp_1*tmp_17 + tmp_14*tmp_5;
      real_t tmp_42 = tmp_1*tmp_13 - tmp_14*tmp_18;
      real_t tmp_43 = -tmp_13*tmp_5 + tmp_17*tmp_18;
      real_t tmp_44 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_24*tmp_41 + tmp_24*tmp_42 + tmp_24*tmp_43);
      real_t tmp_45 = tmp_40*tmp_44;
      real_t tmp_46 = 0.55278640450004235;
      real_t tmp_47 = 2.3416407864998732;
      real_t tmp_48 = 0.55278640450004235;
      real_t tmp_49 = tmp_23*(tmp_46 + tmp_47 + tmp_48 - 3.0);
      real_t tmp_50 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_41*tmp_49 + tmp_42*tmp_49 + tmp_43*tmp_49);
      real_t tmp_51 = tmp_40*tmp_50;
      real_t tmp_52 = 2.3416407864998732;
      real_t tmp_53 = 0.55278640450004235;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_23*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_41*tmp_55 + tmp_42*tmp_55 + tmp_43*tmp_55);
      real_t tmp_57 = tmp_40*tmp_56;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = 0.55278640450004235;
      real_t tmp_61 = tmp_23*(tmp_58 + tmp_59 + tmp_60 - 3.0);
      real_t tmp_62 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_41*tmp_61 + tmp_42*tmp_61 + tmp_43*tmp_61);
      real_t tmp_63 = tmp_40*tmp_62;
      real_t tmp_64 = 2.0*tmp_22;
      real_t tmp_65 = tmp_26*tmp_64;
      real_t tmp_66 = tmp_39*tmp_65;
      real_t tmp_67 = tmp_25*tmp_64;
      real_t tmp_68 = tmp_39*tmp_67;
      real_t tmp_69 = tmp_64*tmp_8;
      real_t tmp_70 = tmp_39*tmp_69;
      real_t tmp_71 = 0.13819660112501059*tmp_69;
      real_t tmp_72 = 0.58541019662496829*tmp_67;
      real_t tmp_73 = 0.58541019662496829*tmp_69;
      real_t tmp_74 = 0.13819660112501059*tmp_67;
      real_t tmp_75 = 0.13819660112501059*tmp_69;
      real_t tmp_76 = 0.13819660112501059*tmp_67;
      real_t tmp_77 = 0.13819660112501059*tmp_69;
      real_t tmp_78 = 0.13819660112501059*tmp_67;
      real_t tmp_79 = 0.13819660112501059*tmp_69;
      real_t tmp_80 = 0.58541019662496829*tmp_65;
      real_t tmp_81 = 0.13819660112501059*tmp_69;
      real_t tmp_82 = 0.13819660112501059*tmp_65;
      real_t tmp_83 = 0.58541019662496829*tmp_69;
      real_t tmp_84 = 0.13819660112501059*tmp_65;
      real_t tmp_85 = 0.13819660112501059*tmp_69;
      real_t tmp_86 = 0.13819660112501059*tmp_65;
      real_t tmp_87 = 0.13819660112501059*tmp_67;
      real_t tmp_88 = 0.13819660112501059*tmp_65;
      real_t tmp_89 = 0.13819660112501059*tmp_67;
      real_t tmp_90 = 0.58541019662496829*tmp_65;
      real_t tmp_91 = 0.58541019662496829*tmp_67;
      real_t tmp_92 = 0.13819660112501059*tmp_65;
      real_t tmp_93 = 0.13819660112501059*tmp_67;
      real_t tmp_94 = 0.13819660112501059*tmp_65;
      real_t tmp_95 = -tmp_10;
      real_t tmp_96 = 4.0 - tmp_9;
      real_t tmp_97 = tmp_23*tmp_8;
      real_t tmp_98 = -tmp_47;
      real_t tmp_99 = 4.0 - tmp_46;
      real_t tmp_100 = -tmp_53;
      real_t tmp_101 = 4.0 - tmp_52;
      real_t tmp_102 = -tmp_59;
      real_t tmp_103 = 4.0 - tmp_58;
      real_t tmp_104 = -tmp_11;
      real_t tmp_105 = tmp_23*tmp_25;
      real_t tmp_106 = -tmp_48;
      real_t tmp_107 = -tmp_54;
      real_t tmp_108 = -tmp_60;
      real_t tmp_109 = tmp_23*tmp_26;
      real_t a_0_0 = tmp_45*(tmp_24*tmp_25 + tmp_24*tmp_26 + tmp_24*tmp_8) + tmp_51*(tmp_25*tmp_49 + tmp_26*tmp_49 + tmp_49*tmp_8) + tmp_57*(tmp_25*tmp_55 + tmp_26*tmp_55 + tmp_55*tmp_8) + tmp_63*(tmp_25*tmp_61 + tmp_26*tmp_61 + tmp_61*tmp_8);
      real_t a_0_1 = tmp_44*tmp_66*(tmp_9 - 1.0) + tmp_50*tmp_66*(tmp_46 - 1.0) + tmp_56*tmp_66*(tmp_52 - 1.0) + tmp_62*tmp_66*(tmp_58 - 1.0);
      real_t a_0_2 = tmp_44*tmp_68*(tmp_10 - 1.0) + tmp_50*tmp_68*(tmp_47 - 1.0) + tmp_56*tmp_68*(tmp_53 - 1.0) + tmp_62*tmp_68*(tmp_59 - 1.0);
      real_t a_0_3 = tmp_44*tmp_70*(tmp_11 - 1.0) + tmp_50*tmp_70*(tmp_48 - 1.0) + tmp_56*tmp_70*(tmp_54 - 1.0) + tmp_62*tmp_70*(tmp_60 - 1.0);
      real_t a_0_4 = tmp_45*(tmp_71 + tmp_72) + tmp_51*(tmp_73 + tmp_74) + tmp_57*(tmp_75 + tmp_76) + tmp_63*(tmp_77 + tmp_78);
      real_t a_0_5 = tmp_45*(tmp_79 + tmp_80) + tmp_51*(tmp_81 + tmp_82) + tmp_57*(tmp_83 + tmp_84) + tmp_63*(tmp_85 + tmp_86);
      real_t a_0_6 = tmp_45*(tmp_87 + tmp_88) + tmp_51*(tmp_89 + tmp_90) + tmp_57*(tmp_91 + tmp_92) + tmp_63*(tmp_93 + tmp_94);
      real_t a_0_7 = tmp_45*(-tmp_72 - tmp_80 + tmp_97*(tmp_95 + tmp_96 - 4.6832815729997463)) + tmp_51*(-tmp_74 - tmp_82 + tmp_97*(tmp_98 + tmp_99 - 1.1055728090000847)) + tmp_57*(-tmp_76 - tmp_84 + tmp_97*(tmp_100 + tmp_101 - 1.1055728090000847)) + tmp_63*(-tmp_78 - tmp_86 + tmp_97*(tmp_102 + tmp_103 - 1.1055728090000847));
      real_t a_0_8 = tmp_45*(tmp_105*(tmp_104 + tmp_96 - 1.1055728090000847) - tmp_71 - tmp_88) + tmp_51*(tmp_105*(tmp_106 + tmp_99 - 4.6832815729997463) - tmp_73 - tmp_90) + tmp_57*(tmp_105*(tmp_101 + tmp_107 - 1.1055728090000847) - tmp_75 - tmp_92) + tmp_63*(tmp_105*(tmp_103 + tmp_108 - 1.1055728090000847) - tmp_77 - tmp_94);
      real_t a_0_9 = tmp_45*(tmp_109*(tmp_104 + tmp_95 + 2.8944271909999153) - tmp_79 - tmp_87) + tmp_51*(tmp_109*(tmp_106 + tmp_98 + 2.8944271909999153) - tmp_81 - tmp_89) + tmp_57*(tmp_109*(tmp_100 + tmp_107 - 0.68328157299974634) - tmp_83 - tmp_91) + tmp_63*(tmp_109*(tmp_102 + tmp_108 + 2.8944271909999153) - tmp_85 - tmp_93);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_2_1_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

   void p2_epsilonvar_2_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_31 = tmp_14*tmp_5 - tmp_3*tmp_9;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_11*tmp_3 - tmp_14*tmp_7;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = -tmp_11*tmp_5 + tmp_7*tmp_9;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_10 - tmp_17;
      real_t tmp_38 = 1.0*tmp_24;
      real_t tmp_39 = tmp_15 - tmp_16;
      real_t tmp_40 = tmp_12 - tmp_18;
      real_t tmp_41 = tmp_37*tmp_38 + tmp_38*tmp_39 + tmp_38*tmp_40;
      real_t tmp_42 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_43 = p_affine_0_0*p_affine_1_1;
      real_t tmp_44 = p_affine_0_0*p_affine_1_2;
      real_t tmp_45 = p_affine_2_1*p_affine_3_2;
      real_t tmp_46 = p_affine_0_1*p_affine_1_0;
      real_t tmp_47 = p_affine_0_1*p_affine_1_2;
      real_t tmp_48 = p_affine_2_2*p_affine_3_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_0;
      real_t tmp_50 = p_affine_0_2*p_affine_1_1;
      real_t tmp_51 = p_affine_2_0*p_affine_3_1;
      real_t tmp_52 = p_affine_2_2*p_affine_3_1;
      real_t tmp_53 = p_affine_2_0*p_affine_3_2;
      real_t tmp_54 = p_affine_2_1*p_affine_3_0;
      real_t tmp_55 = std::abs(p_affine_0_0*tmp_45 - p_affine_0_0*tmp_52 + p_affine_0_1*tmp_48 - p_affine_0_1*tmp_53 + p_affine_0_2*tmp_51 - p_affine_0_2*tmp_54 - p_affine_1_0*tmp_45 + p_affine_1_0*tmp_52 - p_affine_1_1*tmp_48 + p_affine_1_1*tmp_53 - p_affine_1_2*tmp_51 + p_affine_1_2*tmp_54 + p_affine_2_0*tmp_47 - p_affine_2_0*tmp_50 - p_affine_2_1*tmp_44 + p_affine_2_1*tmp_49 + p_affine_2_2*tmp_43 - p_affine_2_2*tmp_46 - p_affine_3_0*tmp_47 + p_affine_3_0*tmp_50 + p_affine_3_1*tmp_44 - p_affine_3_1*tmp_49 - p_affine_3_2*tmp_43 + p_affine_3_2*tmp_46);
      real_t tmp_56 = 0.041666666666666657*tmp_55;
      real_t tmp_57 = 0.55278640450004235;
      real_t tmp_58 = 2.3416407864998732;
      real_t tmp_59 = 0.55278640450004235;
      real_t tmp_60 = tmp_20*(tmp_57 + tmp_58 + tmp_59 - 3.0);
      real_t tmp_61 = tmp_6*tmp_60;
      real_t tmp_62 = tmp_26*tmp_60;
      real_t tmp_63 = tmp_28*tmp_60;
      real_t tmp_64 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_65 = tmp_31*tmp_60;
      real_t tmp_66 = tmp_33*tmp_60;
      real_t tmp_67 = tmp_35*tmp_60;
      real_t tmp_68 = 1.0*tmp_60;
      real_t tmp_69 = tmp_37*tmp_68 + tmp_39*tmp_68 + tmp_40*tmp_68;
      real_t tmp_70 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_71 = 0.041666666666666657*tmp_55;
      real_t tmp_72 = 2.3416407864998732;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_20*(tmp_72 + tmp_73 + tmp_74 - 3.0);
      real_t tmp_76 = tmp_6*tmp_75;
      real_t tmp_77 = tmp_26*tmp_75;
      real_t tmp_78 = tmp_28*tmp_75;
      real_t tmp_79 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_80 = tmp_31*tmp_75;
      real_t tmp_81 = tmp_33*tmp_75;
      real_t tmp_82 = tmp_35*tmp_75;
      real_t tmp_83 = 1.0*tmp_75;
      real_t tmp_84 = tmp_37*tmp_83 + tmp_39*tmp_83 + tmp_40*tmp_83;
      real_t tmp_85 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_86 = 0.041666666666666657*tmp_55;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = tmp_20*(tmp_87 + tmp_88 + tmp_89 - 3.0);
      real_t tmp_91 = tmp_6*tmp_90;
      real_t tmp_92 = tmp_26*tmp_90;
      real_t tmp_93 = tmp_28*tmp_90;
      real_t tmp_94 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_95 = tmp_31*tmp_90;
      real_t tmp_96 = tmp_33*tmp_90;
      real_t tmp_97 = tmp_35*tmp_90;
      real_t tmp_98 = 1.0*tmp_90;
      real_t tmp_99 = tmp_37*tmp_98 + tmp_39*tmp_98 + tmp_40*tmp_98;
      real_t tmp_100 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_101 = 0.041666666666666657*tmp_55;
      real_t tmp_102 = tmp_20*tmp_40;
      real_t tmp_103 = 2.0*tmp_102;
      real_t tmp_104 = tmp_21 - 1.0;
      real_t tmp_105 = Scalar_Variable_Coefficient_3D_0_0*tmp_104;
      real_t tmp_106 = tmp_103*tmp_105;
      real_t tmp_107 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_108 = tmp_20*tmp_28;
      real_t tmp_109 = 2.0*tmp_105;
      real_t tmp_110 = tmp_108*tmp_109;
      real_t tmp_111 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_112 = tmp_20*tmp_35;
      real_t tmp_113 = tmp_109*tmp_112;
      real_t tmp_114 = tmp_57 - 1.0;
      real_t tmp_115 = Scalar_Variable_Coefficient_3D_1_0*tmp_114;
      real_t tmp_116 = tmp_103*tmp_115;
      real_t tmp_117 = 0.5*tmp_61 + 0.5*tmp_62 + 0.5*tmp_63;
      real_t tmp_118 = 2.0*tmp_115;
      real_t tmp_119 = tmp_108*tmp_118;
      real_t tmp_120 = 0.5*tmp_65 + 0.5*tmp_66 + 0.5*tmp_67;
      real_t tmp_121 = tmp_112*tmp_118;
      real_t tmp_122 = tmp_72 - 1.0;
      real_t tmp_123 = Scalar_Variable_Coefficient_3D_2_0*tmp_122;
      real_t tmp_124 = tmp_103*tmp_123;
      real_t tmp_125 = 0.5*tmp_76 + 0.5*tmp_77 + 0.5*tmp_78;
      real_t tmp_126 = 2.0*tmp_123;
      real_t tmp_127 = tmp_108*tmp_126;
      real_t tmp_128 = 0.5*tmp_80 + 0.5*tmp_81 + 0.5*tmp_82;
      real_t tmp_129 = tmp_112*tmp_126;
      real_t tmp_130 = tmp_87 - 1.0;
      real_t tmp_131 = Scalar_Variable_Coefficient_3D_3_0*tmp_130;
      real_t tmp_132 = tmp_103*tmp_131;
      real_t tmp_133 = 0.5*tmp_91 + 0.5*tmp_92 + 0.5*tmp_93;
      real_t tmp_134 = 2.0*tmp_131;
      real_t tmp_135 = tmp_108*tmp_134;
      real_t tmp_136 = 0.5*tmp_95 + 0.5*tmp_96 + 0.5*tmp_97;
      real_t tmp_137 = tmp_112*tmp_134;
      real_t tmp_138 = tmp_101*(tmp_132*tmp_99 + tmp_133*tmp_135 + tmp_136*tmp_137) + tmp_56*(tmp_106*tmp_41 + tmp_107*tmp_110 + tmp_111*tmp_113) + tmp_71*(tmp_116*tmp_69 + tmp_117*tmp_119 + tmp_120*tmp_121) + tmp_86*(tmp_124*tmp_84 + tmp_125*tmp_127 + tmp_128*tmp_129);
      real_t tmp_139 = tmp_20*tmp_39;
      real_t tmp_140 = tmp_22 - 1.0;
      real_t tmp_141 = Scalar_Variable_Coefficient_3D_0_0*tmp_140;
      real_t tmp_142 = 2.0*tmp_141;
      real_t tmp_143 = tmp_139*tmp_142;
      real_t tmp_144 = tmp_20*tmp_26;
      real_t tmp_145 = 2.0*tmp_144;
      real_t tmp_146 = tmp_141*tmp_145;
      real_t tmp_147 = tmp_20*tmp_33;
      real_t tmp_148 = tmp_142*tmp_147;
      real_t tmp_149 = tmp_58 - 1.0;
      real_t tmp_150 = Scalar_Variable_Coefficient_3D_1_0*tmp_149;
      real_t tmp_151 = 2.0*tmp_150;
      real_t tmp_152 = tmp_139*tmp_151;
      real_t tmp_153 = tmp_145*tmp_150;
      real_t tmp_154 = tmp_147*tmp_151;
      real_t tmp_155 = tmp_73 - 1.0;
      real_t tmp_156 = Scalar_Variable_Coefficient_3D_2_0*tmp_155;
      real_t tmp_157 = 2.0*tmp_156;
      real_t tmp_158 = tmp_139*tmp_157;
      real_t tmp_159 = tmp_145*tmp_156;
      real_t tmp_160 = tmp_147*tmp_157;
      real_t tmp_161 = tmp_88 - 1.0;
      real_t tmp_162 = Scalar_Variable_Coefficient_3D_3_0*tmp_161;
      real_t tmp_163 = 2.0*tmp_162;
      real_t tmp_164 = tmp_139*tmp_163;
      real_t tmp_165 = tmp_145*tmp_162;
      real_t tmp_166 = tmp_147*tmp_163;
      real_t tmp_167 = tmp_101*(tmp_133*tmp_165 + tmp_136*tmp_166 + tmp_164*tmp_99) + tmp_56*(tmp_107*tmp_146 + tmp_111*tmp_148 + tmp_143*tmp_41) + tmp_71*(tmp_117*tmp_153 + tmp_120*tmp_154 + tmp_152*tmp_69) + tmp_86*(tmp_125*tmp_159 + tmp_128*tmp_160 + tmp_158*tmp_84);
      real_t tmp_168 = tmp_20*tmp_37;
      real_t tmp_169 = 2.0*tmp_168;
      real_t tmp_170 = tmp_23 - 1.0;
      real_t tmp_171 = Scalar_Variable_Coefficient_3D_0_0*tmp_170;
      real_t tmp_172 = tmp_169*tmp_171;
      real_t tmp_173 = tmp_20*tmp_6;
      real_t tmp_174 = 2.0*tmp_171;
      real_t tmp_175 = tmp_173*tmp_174;
      real_t tmp_176 = tmp_20*tmp_31;
      real_t tmp_177 = tmp_174*tmp_176;
      real_t tmp_178 = tmp_59 - 1.0;
      real_t tmp_179 = Scalar_Variable_Coefficient_3D_1_0*tmp_178;
      real_t tmp_180 = tmp_169*tmp_179;
      real_t tmp_181 = 2.0*tmp_179;
      real_t tmp_182 = tmp_173*tmp_181;
      real_t tmp_183 = tmp_176*tmp_181;
      real_t tmp_184 = tmp_74 - 1.0;
      real_t tmp_185 = Scalar_Variable_Coefficient_3D_2_0*tmp_184;
      real_t tmp_186 = tmp_169*tmp_185;
      real_t tmp_187 = 2.0*tmp_185;
      real_t tmp_188 = tmp_173*tmp_187;
      real_t tmp_189 = tmp_176*tmp_187;
      real_t tmp_190 = tmp_89 - 1.0;
      real_t tmp_191 = Scalar_Variable_Coefficient_3D_3_0*tmp_190;
      real_t tmp_192 = tmp_169*tmp_191;
      real_t tmp_193 = 2.0*tmp_191;
      real_t tmp_194 = tmp_173*tmp_193;
      real_t tmp_195 = tmp_176*tmp_193;
      real_t tmp_196 = tmp_101*(tmp_133*tmp_194 + tmp_136*tmp_195 + tmp_192*tmp_99) + tmp_56*(tmp_107*tmp_175 + tmp_111*tmp_177 + tmp_172*tmp_41) + tmp_71*(tmp_117*tmp_182 + tmp_120*tmp_183 + tmp_180*tmp_69) + tmp_86*(tmp_125*tmp_188 + tmp_128*tmp_189 + tmp_186*tmp_84);
      real_t tmp_197 = tmp_168*tmp_22;
      real_t tmp_198 = tmp_139*tmp_23;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_41*tmp_42;
      real_t tmp_201 = 0.13819660112501059*tmp_20;
      real_t tmp_202 = tmp_201*tmp_6;
      real_t tmp_203 = 2.0*tmp_202;
      real_t tmp_204 = 0.58541019662496829*tmp_20;
      real_t tmp_205 = tmp_204*tmp_26;
      real_t tmp_206 = 2.0*tmp_205;
      real_t tmp_207 = tmp_203 + tmp_206;
      real_t tmp_208 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_209 = tmp_107*tmp_208;
      real_t tmp_210 = tmp_201*tmp_31;
      real_t tmp_211 = 2.0*tmp_210;
      real_t tmp_212 = tmp_204*tmp_33;
      real_t tmp_213 = 2.0*tmp_212;
      real_t tmp_214 = tmp_211 + tmp_213;
      real_t tmp_215 = tmp_111*tmp_208;
      real_t tmp_216 = tmp_168*tmp_58;
      real_t tmp_217 = tmp_139*tmp_59;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_69*tmp_70;
      real_t tmp_220 = 0.58541019662496829*tmp_20;
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = 2.0*tmp_221;
      real_t tmp_223 = 0.13819660112501059*tmp_20;
      real_t tmp_224 = tmp_223*tmp_26;
      real_t tmp_225 = 2.0*tmp_224;
      real_t tmp_226 = tmp_222 + tmp_225;
      real_t tmp_227 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_228 = tmp_117*tmp_227;
      real_t tmp_229 = tmp_220*tmp_31;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = tmp_223*tmp_33;
      real_t tmp_232 = 2.0*tmp_231;
      real_t tmp_233 = tmp_230 + tmp_232;
      real_t tmp_234 = tmp_120*tmp_227;
      real_t tmp_235 = tmp_168*tmp_73;
      real_t tmp_236 = tmp_139*tmp_74;
      real_t tmp_237 = tmp_235 + tmp_236;
      real_t tmp_238 = tmp_84*tmp_85;
      real_t tmp_239 = 0.13819660112501059*tmp_20;
      real_t tmp_240 = tmp_239*tmp_6;
      real_t tmp_241 = 2.0*tmp_240;
      real_t tmp_242 = 0.13819660112501059*tmp_20;
      real_t tmp_243 = tmp_242*tmp_26;
      real_t tmp_244 = 2.0*tmp_243;
      real_t tmp_245 = tmp_241 + tmp_244;
      real_t tmp_246 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_247 = tmp_125*tmp_246;
      real_t tmp_248 = tmp_239*tmp_31;
      real_t tmp_249 = 2.0*tmp_248;
      real_t tmp_250 = tmp_242*tmp_33;
      real_t tmp_251 = 2.0*tmp_250;
      real_t tmp_252 = tmp_249 + tmp_251;
      real_t tmp_253 = tmp_128*tmp_246;
      real_t tmp_254 = tmp_168*tmp_88;
      real_t tmp_255 = tmp_139*tmp_89;
      real_t tmp_256 = tmp_254 + tmp_255;
      real_t tmp_257 = tmp_100*tmp_99;
      real_t tmp_258 = 0.13819660112501059*tmp_20;
      real_t tmp_259 = tmp_258*tmp_6;
      real_t tmp_260 = 2.0*tmp_259;
      real_t tmp_261 = 0.13819660112501059*tmp_20;
      real_t tmp_262 = tmp_26*tmp_261;
      real_t tmp_263 = 2.0*tmp_262;
      real_t tmp_264 = tmp_260 + tmp_263;
      real_t tmp_265 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_266 = tmp_133*tmp_265;
      real_t tmp_267 = tmp_258*tmp_31;
      real_t tmp_268 = 2.0*tmp_267;
      real_t tmp_269 = tmp_261*tmp_33;
      real_t tmp_270 = 2.0*tmp_269;
      real_t tmp_271 = tmp_268 + tmp_270;
      real_t tmp_272 = tmp_136*tmp_265;
      real_t tmp_273 = tmp_101*(tmp_256*tmp_257 + tmp_264*tmp_266 + tmp_271*tmp_272) + tmp_56*(tmp_199*tmp_200 + tmp_207*tmp_209 + tmp_214*tmp_215) + tmp_71*(tmp_218*tmp_219 + tmp_226*tmp_228 + tmp_233*tmp_234) + tmp_86*(tmp_237*tmp_238 + tmp_245*tmp_247 + tmp_252*tmp_253);
      real_t tmp_274 = tmp_168*tmp_21;
      real_t tmp_275 = tmp_102*tmp_23;
      real_t tmp_276 = tmp_274 + tmp_275;
      real_t tmp_277 = 0.13819660112501059*tmp_20;
      real_t tmp_278 = tmp_277*tmp_6;
      real_t tmp_279 = 2.0*tmp_278;
      real_t tmp_280 = tmp_204*tmp_28;
      real_t tmp_281 = 2.0*tmp_280;
      real_t tmp_282 = tmp_279 + tmp_281;
      real_t tmp_283 = tmp_277*tmp_31;
      real_t tmp_284 = 2.0*tmp_283;
      real_t tmp_285 = tmp_204*tmp_35;
      real_t tmp_286 = 2.0*tmp_285;
      real_t tmp_287 = tmp_284 + tmp_286;
      real_t tmp_288 = tmp_168*tmp_57;
      real_t tmp_289 = tmp_102*tmp_59;
      real_t tmp_290 = tmp_288 + tmp_289;
      real_t tmp_291 = 0.13819660112501059*tmp_20;
      real_t tmp_292 = tmp_291*tmp_6;
      real_t tmp_293 = 2.0*tmp_292;
      real_t tmp_294 = tmp_223*tmp_28;
      real_t tmp_295 = 2.0*tmp_294;
      real_t tmp_296 = tmp_293 + tmp_295;
      real_t tmp_297 = tmp_291*tmp_31;
      real_t tmp_298 = 2.0*tmp_297;
      real_t tmp_299 = tmp_223*tmp_35;
      real_t tmp_300 = 2.0*tmp_299;
      real_t tmp_301 = tmp_298 + tmp_300;
      real_t tmp_302 = tmp_168*tmp_72;
      real_t tmp_303 = tmp_102*tmp_74;
      real_t tmp_304 = tmp_302 + tmp_303;
      real_t tmp_305 = 0.58541019662496829*tmp_20;
      real_t tmp_306 = tmp_305*tmp_6;
      real_t tmp_307 = 2.0*tmp_306;
      real_t tmp_308 = tmp_242*tmp_28;
      real_t tmp_309 = 2.0*tmp_308;
      real_t tmp_310 = tmp_307 + tmp_309;
      real_t tmp_311 = tmp_305*tmp_31;
      real_t tmp_312 = 2.0*tmp_311;
      real_t tmp_313 = tmp_242*tmp_35;
      real_t tmp_314 = 2.0*tmp_313;
      real_t tmp_315 = tmp_312 + tmp_314;
      real_t tmp_316 = tmp_168*tmp_87;
      real_t tmp_317 = tmp_102*tmp_89;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = 0.13819660112501059*tmp_20;
      real_t tmp_320 = tmp_319*tmp_6;
      real_t tmp_321 = 2.0*tmp_320;
      real_t tmp_322 = tmp_261*tmp_28;
      real_t tmp_323 = 2.0*tmp_322;
      real_t tmp_324 = tmp_321 + tmp_323;
      real_t tmp_325 = tmp_31*tmp_319;
      real_t tmp_326 = 2.0*tmp_325;
      real_t tmp_327 = tmp_261*tmp_35;
      real_t tmp_328 = 2.0*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_101*(tmp_257*tmp_318 + tmp_266*tmp_324 + tmp_272*tmp_329) + tmp_56*(tmp_200*tmp_276 + tmp_209*tmp_282 + tmp_215*tmp_287) + tmp_71*(tmp_219*tmp_290 + tmp_228*tmp_296 + tmp_234*tmp_301) + tmp_86*(tmp_238*tmp_304 + tmp_247*tmp_310 + tmp_253*tmp_315);
      real_t tmp_331 = tmp_139*tmp_21;
      real_t tmp_332 = tmp_102*tmp_22;
      real_t tmp_333 = tmp_331 + tmp_332;
      real_t tmp_334 = tmp_26*tmp_277;
      real_t tmp_335 = 2.0*tmp_334;
      real_t tmp_336 = tmp_201*tmp_28;
      real_t tmp_337 = 2.0*tmp_336;
      real_t tmp_338 = tmp_335 + tmp_337;
      real_t tmp_339 = tmp_277*tmp_33;
      real_t tmp_340 = 2.0*tmp_339;
      real_t tmp_341 = tmp_201*tmp_35;
      real_t tmp_342 = 2.0*tmp_341;
      real_t tmp_343 = tmp_340 + tmp_342;
      real_t tmp_344 = tmp_139*tmp_57;
      real_t tmp_345 = tmp_102*tmp_58;
      real_t tmp_346 = tmp_344 + tmp_345;
      real_t tmp_347 = tmp_26*tmp_291;
      real_t tmp_348 = 2.0*tmp_347;
      real_t tmp_349 = tmp_220*tmp_28;
      real_t tmp_350 = 2.0*tmp_349;
      real_t tmp_351 = tmp_348 + tmp_350;
      real_t tmp_352 = tmp_291*tmp_33;
      real_t tmp_353 = 2.0*tmp_352;
      real_t tmp_354 = tmp_220*tmp_35;
      real_t tmp_355 = 2.0*tmp_354;
      real_t tmp_356 = tmp_353 + tmp_355;
      real_t tmp_357 = tmp_139*tmp_72;
      real_t tmp_358 = tmp_102*tmp_73;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_26*tmp_305;
      real_t tmp_361 = 2.0*tmp_360;
      real_t tmp_362 = tmp_239*tmp_28;
      real_t tmp_363 = 2.0*tmp_362;
      real_t tmp_364 = tmp_361 + tmp_363;
      real_t tmp_365 = tmp_305*tmp_33;
      real_t tmp_366 = 2.0*tmp_365;
      real_t tmp_367 = tmp_239*tmp_35;
      real_t tmp_368 = 2.0*tmp_367;
      real_t tmp_369 = tmp_366 + tmp_368;
      real_t tmp_370 = tmp_139*tmp_87;
      real_t tmp_371 = tmp_102*tmp_88;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_26*tmp_319;
      real_t tmp_374 = 2.0*tmp_373;
      real_t tmp_375 = tmp_258*tmp_28;
      real_t tmp_376 = 2.0*tmp_375;
      real_t tmp_377 = tmp_374 + tmp_376;
      real_t tmp_378 = tmp_319*tmp_33;
      real_t tmp_379 = 2.0*tmp_378;
      real_t tmp_380 = tmp_258*tmp_35;
      real_t tmp_381 = 2.0*tmp_380;
      real_t tmp_382 = tmp_379 + tmp_381;
      real_t tmp_383 = tmp_101*(tmp_257*tmp_372 + tmp_266*tmp_377 + tmp_272*tmp_382) + tmp_56*(tmp_200*tmp_333 + tmp_209*tmp_338 + tmp_215*tmp_343) + tmp_71*(tmp_219*tmp_346 + tmp_228*tmp_351 + tmp_234*tmp_356) + tmp_86*(tmp_238*tmp_359 + tmp_247*tmp_364 + tmp_253*tmp_369);
      real_t tmp_384 = -tmp_22;
      real_t tmp_385 = 4.0 - tmp_21;
      real_t tmp_386 = tmp_384 + tmp_385 - 4.6832815729997463;
      real_t tmp_387 = 1.0*tmp_168;
      real_t tmp_388 = -tmp_198 - tmp_275 + tmp_386*tmp_387;
      real_t tmp_389 = 0.5*tmp_20;
      real_t tmp_390 = tmp_386*tmp_389;
      real_t tmp_391 = -tmp_206 - tmp_281 + tmp_390*tmp_6;
      real_t tmp_392 = -tmp_213 - tmp_286 + tmp_31*tmp_390;
      real_t tmp_393 = -tmp_58;
      real_t tmp_394 = 4.0 - tmp_57;
      real_t tmp_395 = tmp_393 + tmp_394 - 1.1055728090000847;
      real_t tmp_396 = -tmp_217 - tmp_289 + tmp_387*tmp_395;
      real_t tmp_397 = tmp_389*tmp_395;
      real_t tmp_398 = -tmp_225 - tmp_295 + tmp_397*tmp_6;
      real_t tmp_399 = -tmp_232 - tmp_300 + tmp_31*tmp_397;
      real_t tmp_400 = -tmp_73;
      real_t tmp_401 = 4.0 - tmp_72;
      real_t tmp_402 = tmp_400 + tmp_401 - 1.1055728090000847;
      real_t tmp_403 = -tmp_236 - tmp_303 + tmp_387*tmp_402;
      real_t tmp_404 = tmp_389*tmp_402;
      real_t tmp_405 = -tmp_244 - tmp_309 + tmp_404*tmp_6;
      real_t tmp_406 = -tmp_251 + tmp_31*tmp_404 - tmp_314;
      real_t tmp_407 = -tmp_88;
      real_t tmp_408 = 4.0 - tmp_87;
      real_t tmp_409 = tmp_407 + tmp_408 - 1.1055728090000847;
      real_t tmp_410 = -tmp_255 - tmp_317 + tmp_387*tmp_409;
      real_t tmp_411 = tmp_389*tmp_409;
      real_t tmp_412 = -tmp_263 - tmp_323 + tmp_411*tmp_6;
      real_t tmp_413 = -tmp_270 + tmp_31*tmp_411 - tmp_328;
      real_t tmp_414 = tmp_101*(tmp_257*tmp_410 + tmp_266*tmp_412 + tmp_272*tmp_413) + tmp_56*(tmp_200*tmp_388 + tmp_209*tmp_391 + tmp_215*tmp_392) + tmp_71*(tmp_219*tmp_396 + tmp_228*tmp_398 + tmp_234*tmp_399) + tmp_86*(tmp_238*tmp_403 + tmp_247*tmp_405 + tmp_253*tmp_406);
      real_t tmp_415 = -tmp_23;
      real_t tmp_416 = tmp_385 + tmp_415 - 1.1055728090000847;
      real_t tmp_417 = 1.0*tmp_139;
      real_t tmp_418 = -tmp_197 - tmp_332 + tmp_416*tmp_417;
      real_t tmp_419 = tmp_389*tmp_416;
      real_t tmp_420 = -tmp_203 + tmp_26*tmp_419 - tmp_337;
      real_t tmp_421 = -tmp_211 + tmp_33*tmp_419 - tmp_342;
      real_t tmp_422 = -tmp_59;
      real_t tmp_423 = tmp_394 + tmp_422 - 4.6832815729997463;
      real_t tmp_424 = -tmp_216 - tmp_345 + tmp_417*tmp_423;
      real_t tmp_425 = tmp_389*tmp_423;
      real_t tmp_426 = -tmp_222 + tmp_26*tmp_425 - tmp_350;
      real_t tmp_427 = -tmp_230 + tmp_33*tmp_425 - tmp_355;
      real_t tmp_428 = -tmp_74;
      real_t tmp_429 = tmp_401 + tmp_428 - 1.1055728090000847;
      real_t tmp_430 = -tmp_235 - tmp_358 + tmp_417*tmp_429;
      real_t tmp_431 = tmp_389*tmp_429;
      real_t tmp_432 = -tmp_241 + tmp_26*tmp_431 - tmp_363;
      real_t tmp_433 = -tmp_249 + tmp_33*tmp_431 - tmp_368;
      real_t tmp_434 = -tmp_89;
      real_t tmp_435 = tmp_408 + tmp_434 - 1.1055728090000847;
      real_t tmp_436 = -tmp_254 - tmp_371 + tmp_417*tmp_435;
      real_t tmp_437 = tmp_389*tmp_435;
      real_t tmp_438 = tmp_26*tmp_437 - tmp_260 - tmp_376;
      real_t tmp_439 = -tmp_268 + tmp_33*tmp_437 - tmp_381;
      real_t tmp_440 = tmp_101*(tmp_257*tmp_436 + tmp_266*tmp_438 + tmp_272*tmp_439) + tmp_56*(tmp_200*tmp_418 + tmp_209*tmp_420 + tmp_215*tmp_421) + tmp_71*(tmp_219*tmp_424 + tmp_228*tmp_426 + tmp_234*tmp_427) + tmp_86*(tmp_238*tmp_430 + tmp_247*tmp_432 + tmp_253*tmp_433);
      real_t tmp_441 = tmp_384 + tmp_415 + 2.8944271909999153;
      real_t tmp_442 = 1.0*tmp_102;
      real_t tmp_443 = -tmp_274 - tmp_331 + tmp_441*tmp_442;
      real_t tmp_444 = tmp_389*tmp_441;
      real_t tmp_445 = -tmp_279 + tmp_28*tmp_444 - tmp_335;
      real_t tmp_446 = -tmp_284 - tmp_340 + tmp_35*tmp_444;
      real_t tmp_447 = tmp_393 + tmp_422 + 2.8944271909999153;
      real_t tmp_448 = -tmp_288 - tmp_344 + tmp_442*tmp_447;
      real_t tmp_449 = tmp_389*tmp_447;
      real_t tmp_450 = tmp_28*tmp_449 - tmp_293 - tmp_348;
      real_t tmp_451 = -tmp_298 + tmp_35*tmp_449 - tmp_353;
      real_t tmp_452 = tmp_400 + tmp_428 - 0.68328157299974634;
      real_t tmp_453 = -tmp_302 - tmp_357 + tmp_442*tmp_452;
      real_t tmp_454 = tmp_389*tmp_452;
      real_t tmp_455 = tmp_28*tmp_454 - tmp_307 - tmp_361;
      real_t tmp_456 = -tmp_312 + tmp_35*tmp_454 - tmp_366;
      real_t tmp_457 = tmp_407 + tmp_434 + 2.8944271909999153;
      real_t tmp_458 = -tmp_316 - tmp_370 + tmp_442*tmp_457;
      real_t tmp_459 = tmp_389*tmp_457;
      real_t tmp_460 = tmp_28*tmp_459 - tmp_321 - tmp_374;
      real_t tmp_461 = -tmp_326 + tmp_35*tmp_459 - tmp_379;
      real_t tmp_462 = tmp_101*(tmp_257*tmp_458 + tmp_266*tmp_460 + tmp_272*tmp_461) + tmp_56*(tmp_200*tmp_443 + tmp_209*tmp_445 + tmp_215*tmp_446) + tmp_71*(tmp_219*tmp_448 + tmp_228*tmp_450 + tmp_234*tmp_451) + tmp_86*(tmp_238*tmp_453 + tmp_247*tmp_455 + tmp_253*tmp_456);
      real_t tmp_463 = (tmp_40*tmp_40);
      real_t tmp_464 = 32.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_465 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_466 = 0.012499999999999983*tmp_465;
      real_t tmp_467 = (tmp_28*tmp_28);
      real_t tmp_468 = 16.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_469 = tmp_466*tmp_468;
      real_t tmp_470 = (tmp_35*tmp_35);
      real_t tmp_471 = 32.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_472 = 0.012499999999999983*tmp_465;
      real_t tmp_473 = 16.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_474 = tmp_472*tmp_473;
      real_t tmp_475 = 32.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_476 = 0.11249999999999989*tmp_465;
      real_t tmp_477 = 16.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_478 = tmp_476*tmp_477;
      real_t tmp_479 = 32.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_480 = 0.012499999999999983*tmp_465;
      real_t tmp_481 = 16.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_482 = tmp_480*tmp_481;
      real_t tmp_483 = tmp_140*tmp_465;
      real_t tmp_484 = tmp_39*tmp_40;
      real_t tmp_485 = tmp_26*tmp_28;
      real_t tmp_486 = tmp_104*tmp_30;
      real_t tmp_487 = tmp_483*tmp_486;
      real_t tmp_488 = tmp_33*tmp_35;
      real_t tmp_489 = tmp_149*tmp_465;
      real_t tmp_490 = tmp_114*tmp_64;
      real_t tmp_491 = tmp_489*tmp_490;
      real_t tmp_492 = tmp_155*tmp_465;
      real_t tmp_493 = tmp_122*tmp_79;
      real_t tmp_494 = tmp_492*tmp_493;
      real_t tmp_495 = tmp_161*tmp_465;
      real_t tmp_496 = tmp_130*tmp_94;
      real_t tmp_497 = tmp_495*tmp_496;
      real_t tmp_498 = tmp_101*(tmp_134*tmp_484*tmp_495 + tmp_485*tmp_497 + tmp_488*tmp_497) + tmp_56*(tmp_109*tmp_483*tmp_484 + tmp_485*tmp_487 + tmp_487*tmp_488) + tmp_71*(tmp_118*tmp_484*tmp_489 + tmp_485*tmp_491 + tmp_488*tmp_491) + tmp_86*(tmp_126*tmp_484*tmp_492 + tmp_485*tmp_494 + tmp_488*tmp_494);
      real_t tmp_499 = tmp_170*tmp_465;
      real_t tmp_500 = tmp_37*tmp_40;
      real_t tmp_501 = tmp_486*tmp_499;
      real_t tmp_502 = tmp_28*tmp_6;
      real_t tmp_503 = tmp_31*tmp_35;
      real_t tmp_504 = tmp_178*tmp_465;
      real_t tmp_505 = tmp_490*tmp_504;
      real_t tmp_506 = tmp_184*tmp_465;
      real_t tmp_507 = tmp_493*tmp_506;
      real_t tmp_508 = tmp_190*tmp_465;
      real_t tmp_509 = tmp_496*tmp_508;
      real_t tmp_510 = tmp_101*(tmp_134*tmp_500*tmp_508 + tmp_502*tmp_509 + tmp_503*tmp_509) + tmp_56*(tmp_109*tmp_499*tmp_500 + tmp_501*tmp_502 + tmp_501*tmp_503) + tmp_71*(tmp_118*tmp_500*tmp_504 + tmp_502*tmp_505 + tmp_503*tmp_505) + tmp_86*(tmp_126*tmp_500*tmp_506 + tmp_502*tmp_507 + tmp_503*tmp_507);
      real_t tmp_511 = tmp_101*(tmp_132*tmp_256 + tmp_135*tmp_264 + tmp_137*tmp_271) + tmp_56*(tmp_106*tmp_199 + tmp_110*tmp_207 + tmp_113*tmp_214) + tmp_71*(tmp_116*tmp_218 + tmp_119*tmp_226 + tmp_121*tmp_233) + tmp_86*(tmp_124*tmp_237 + tmp_127*tmp_245 + tmp_129*tmp_252);
      real_t tmp_512 = tmp_101*(tmp_132*tmp_318 + tmp_135*tmp_324 + tmp_137*tmp_329) + tmp_56*(tmp_106*tmp_276 + tmp_110*tmp_282 + tmp_113*tmp_287) + tmp_71*(tmp_116*tmp_290 + tmp_119*tmp_296 + tmp_121*tmp_301) + tmp_86*(tmp_124*tmp_304 + tmp_127*tmp_310 + tmp_129*tmp_315);
      real_t tmp_513 = tmp_101*(tmp_132*tmp_372 + tmp_135*tmp_377 + tmp_137*tmp_382) + tmp_56*(tmp_106*tmp_333 + tmp_110*tmp_338 + tmp_113*tmp_343) + tmp_71*(tmp_116*tmp_346 + tmp_119*tmp_351 + tmp_121*tmp_356) + tmp_86*(tmp_124*tmp_359 + tmp_127*tmp_364 + tmp_129*tmp_369);
      real_t tmp_514 = tmp_101*(tmp_132*tmp_410 + tmp_135*tmp_412 + tmp_137*tmp_413) + tmp_56*(tmp_106*tmp_388 + tmp_110*tmp_391 + tmp_113*tmp_392) + tmp_71*(tmp_116*tmp_396 + tmp_119*tmp_398 + tmp_121*tmp_399) + tmp_86*(tmp_124*tmp_403 + tmp_127*tmp_405 + tmp_129*tmp_406);
      real_t tmp_515 = tmp_101*(tmp_132*tmp_436 + tmp_135*tmp_438 + tmp_137*tmp_439) + tmp_56*(tmp_106*tmp_418 + tmp_110*tmp_420 + tmp_113*tmp_421) + tmp_71*(tmp_116*tmp_424 + tmp_119*tmp_426 + tmp_121*tmp_427) + tmp_86*(tmp_124*tmp_430 + tmp_127*tmp_432 + tmp_129*tmp_433);
      real_t tmp_516 = tmp_101*(tmp_132*tmp_458 + tmp_135*tmp_460 + tmp_137*tmp_461) + tmp_56*(tmp_106*tmp_443 + tmp_110*tmp_445 + tmp_113*tmp_446) + tmp_71*(tmp_116*tmp_448 + tmp_119*tmp_450 + tmp_121*tmp_451) + tmp_86*(tmp_124*tmp_453 + tmp_127*tmp_455 + tmp_129*tmp_456);
      real_t tmp_517 = (tmp_39*tmp_39);
      real_t tmp_518 = 0.012499999999999983*tmp_465;
      real_t tmp_519 = (tmp_26*tmp_26);
      real_t tmp_520 = tmp_468*tmp_518;
      real_t tmp_521 = (tmp_33*tmp_33);
      real_t tmp_522 = 0.11249999999999989*tmp_465;
      real_t tmp_523 = tmp_473*tmp_522;
      real_t tmp_524 = 0.012499999999999983*tmp_465;
      real_t tmp_525 = tmp_477*tmp_524;
      real_t tmp_526 = 0.012499999999999983*tmp_465;
      real_t tmp_527 = tmp_481*tmp_526;
      real_t tmp_528 = tmp_37*tmp_39;
      real_t tmp_529 = tmp_26*tmp_6;
      real_t tmp_530 = tmp_170*tmp_30*tmp_483;
      real_t tmp_531 = tmp_31*tmp_33;
      real_t tmp_532 = tmp_178*tmp_489*tmp_64;
      real_t tmp_533 = tmp_184*tmp_492*tmp_79;
      real_t tmp_534 = tmp_190*tmp_495*tmp_94;
      real_t tmp_535 = tmp_101*(tmp_163*tmp_508*tmp_528 + tmp_529*tmp_534 + tmp_531*tmp_534) + tmp_56*(tmp_142*tmp_499*tmp_528 + tmp_529*tmp_530 + tmp_530*tmp_531) + tmp_71*(tmp_151*tmp_504*tmp_528 + tmp_529*tmp_532 + tmp_531*tmp_532) + tmp_86*(tmp_157*tmp_506*tmp_528 + tmp_529*tmp_533 + tmp_531*tmp_533);
      real_t tmp_536 = tmp_101*(tmp_164*tmp_256 + tmp_165*tmp_264 + tmp_166*tmp_271) + tmp_56*(tmp_143*tmp_199 + tmp_146*tmp_207 + tmp_148*tmp_214) + tmp_71*(tmp_152*tmp_218 + tmp_153*tmp_226 + tmp_154*tmp_233) + tmp_86*(tmp_158*tmp_237 + tmp_159*tmp_245 + tmp_160*tmp_252);
      real_t tmp_537 = tmp_101*(tmp_164*tmp_318 + tmp_165*tmp_324 + tmp_166*tmp_329) + tmp_56*(tmp_143*tmp_276 + tmp_146*tmp_282 + tmp_148*tmp_287) + tmp_71*(tmp_152*tmp_290 + tmp_153*tmp_296 + tmp_154*tmp_301) + tmp_86*(tmp_158*tmp_304 + tmp_159*tmp_310 + tmp_160*tmp_315);
      real_t tmp_538 = tmp_101*(tmp_164*tmp_372 + tmp_165*tmp_377 + tmp_166*tmp_382) + tmp_56*(tmp_143*tmp_333 + tmp_146*tmp_338 + tmp_148*tmp_343) + tmp_71*(tmp_152*tmp_346 + tmp_153*tmp_351 + tmp_154*tmp_356) + tmp_86*(tmp_158*tmp_359 + tmp_159*tmp_364 + tmp_160*tmp_369);
      real_t tmp_539 = tmp_101*(tmp_164*tmp_410 + tmp_165*tmp_412 + tmp_166*tmp_413) + tmp_56*(tmp_143*tmp_388 + tmp_146*tmp_391 + tmp_148*tmp_392) + tmp_71*(tmp_152*tmp_396 + tmp_153*tmp_398 + tmp_154*tmp_399) + tmp_86*(tmp_158*tmp_403 + tmp_159*tmp_405 + tmp_160*tmp_406);
      real_t tmp_540 = tmp_101*(tmp_164*tmp_436 + tmp_165*tmp_438 + tmp_166*tmp_439) + tmp_56*(tmp_143*tmp_418 + tmp_146*tmp_420 + tmp_148*tmp_421) + tmp_71*(tmp_152*tmp_424 + tmp_153*tmp_426 + tmp_154*tmp_427) + tmp_86*(tmp_158*tmp_430 + tmp_159*tmp_432 + tmp_160*tmp_433);
      real_t tmp_541 = tmp_101*(tmp_164*tmp_458 + tmp_165*tmp_460 + tmp_166*tmp_461) + tmp_56*(tmp_143*tmp_443 + tmp_146*tmp_445 + tmp_148*tmp_446) + tmp_71*(tmp_152*tmp_448 + tmp_153*tmp_450 + tmp_154*tmp_451) + tmp_86*(tmp_158*tmp_453 + tmp_159*tmp_455 + tmp_160*tmp_456);
      real_t tmp_542 = (tmp_37*tmp_37);
      real_t tmp_543 = 0.11249999999999989*tmp_465;
      real_t tmp_544 = (tmp_6*tmp_6);
      real_t tmp_545 = tmp_468*tmp_543;
      real_t tmp_546 = (tmp_31*tmp_31);
      real_t tmp_547 = 0.012499999999999983*tmp_465;
      real_t tmp_548 = tmp_473*tmp_547;
      real_t tmp_549 = 0.012499999999999983*tmp_465;
      real_t tmp_550 = tmp_477*tmp_549;
      real_t tmp_551 = 0.012499999999999983*tmp_465;
      real_t tmp_552 = tmp_481*tmp_551;
      real_t tmp_553 = tmp_101*(tmp_192*tmp_256 + tmp_194*tmp_264 + tmp_195*tmp_271) + tmp_56*(tmp_172*tmp_199 + tmp_175*tmp_207 + tmp_177*tmp_214) + tmp_71*(tmp_180*tmp_218 + tmp_182*tmp_226 + tmp_183*tmp_233) + tmp_86*(tmp_186*tmp_237 + tmp_188*tmp_245 + tmp_189*tmp_252);
      real_t tmp_554 = tmp_101*(tmp_192*tmp_318 + tmp_194*tmp_324 + tmp_195*tmp_329) + tmp_56*(tmp_172*tmp_276 + tmp_175*tmp_282 + tmp_177*tmp_287) + tmp_71*(tmp_180*tmp_290 + tmp_182*tmp_296 + tmp_183*tmp_301) + tmp_86*(tmp_186*tmp_304 + tmp_188*tmp_310 + tmp_189*tmp_315);
      real_t tmp_555 = tmp_101*(tmp_192*tmp_372 + tmp_194*tmp_377 + tmp_195*tmp_382) + tmp_56*(tmp_172*tmp_333 + tmp_175*tmp_338 + tmp_177*tmp_343) + tmp_71*(tmp_180*tmp_346 + tmp_182*tmp_351 + tmp_183*tmp_356) + tmp_86*(tmp_186*tmp_359 + tmp_188*tmp_364 + tmp_189*tmp_369);
      real_t tmp_556 = tmp_101*(tmp_192*tmp_410 + tmp_194*tmp_412 + tmp_195*tmp_413) + tmp_56*(tmp_172*tmp_388 + tmp_175*tmp_391 + tmp_177*tmp_392) + tmp_71*(tmp_180*tmp_396 + tmp_182*tmp_398 + tmp_183*tmp_399) + tmp_86*(tmp_186*tmp_403 + tmp_188*tmp_405 + tmp_189*tmp_406);
      real_t tmp_557 = tmp_101*(tmp_192*tmp_436 + tmp_194*tmp_438 + tmp_195*tmp_439) + tmp_56*(tmp_172*tmp_418 + tmp_175*tmp_420 + tmp_177*tmp_421) + tmp_71*(tmp_180*tmp_424 + tmp_182*tmp_426 + tmp_183*tmp_427) + tmp_86*(tmp_186*tmp_430 + tmp_188*tmp_432 + tmp_189*tmp_433);
      real_t tmp_558 = tmp_101*(tmp_192*tmp_458 + tmp_194*tmp_460 + tmp_195*tmp_461) + tmp_56*(tmp_172*tmp_443 + tmp_175*tmp_445 + tmp_177*tmp_446) + tmp_71*(tmp_180*tmp_448 + tmp_182*tmp_450 + tmp_183*tmp_451) + tmp_86*(tmp_186*tmp_453 + tmp_188*tmp_455 + tmp_189*tmp_456);
      real_t tmp_559 = tmp_201*tmp_37;
      real_t tmp_560 = tmp_204*tmp_39;
      real_t tmp_561 = tmp_220*tmp_37;
      real_t tmp_562 = tmp_223*tmp_39;
      real_t tmp_563 = tmp_239*tmp_37;
      real_t tmp_564 = tmp_242*tmp_39;
      real_t tmp_565 = tmp_258*tmp_37;
      real_t tmp_566 = tmp_261*tmp_39;
      real_t tmp_567 = tmp_199*tmp_42;
      real_t tmp_568 = tmp_207*tmp_208;
      real_t tmp_569 = tmp_208*tmp_214;
      real_t tmp_570 = tmp_218*tmp_70;
      real_t tmp_571 = tmp_226*tmp_227;
      real_t tmp_572 = tmp_227*tmp_233;
      real_t tmp_573 = tmp_237*tmp_85;
      real_t tmp_574 = tmp_245*tmp_246;
      real_t tmp_575 = tmp_246*tmp_252;
      real_t tmp_576 = tmp_100*tmp_256;
      real_t tmp_577 = tmp_264*tmp_265;
      real_t tmp_578 = tmp_265*tmp_271;
      real_t tmp_579 = tmp_101*(tmp_318*tmp_576 + tmp_324*tmp_577 + tmp_329*tmp_578) + tmp_56*(tmp_276*tmp_567 + tmp_282*tmp_568 + tmp_287*tmp_569) + tmp_71*(tmp_290*tmp_570 + tmp_296*tmp_571 + tmp_301*tmp_572) + tmp_86*(tmp_304*tmp_573 + tmp_310*tmp_574 + tmp_315*tmp_575);
      real_t tmp_580 = tmp_101*(tmp_372*tmp_576 + tmp_377*tmp_577 + tmp_382*tmp_578) + tmp_56*(tmp_333*tmp_567 + tmp_338*tmp_568 + tmp_343*tmp_569) + tmp_71*(tmp_346*tmp_570 + tmp_351*tmp_571 + tmp_356*tmp_572) + tmp_86*(tmp_359*tmp_573 + tmp_364*tmp_574 + tmp_369*tmp_575);
      real_t tmp_581 = tmp_101*(tmp_410*tmp_576 + tmp_412*tmp_577 + tmp_413*tmp_578) + tmp_56*(tmp_388*tmp_567 + tmp_391*tmp_568 + tmp_392*tmp_569) + tmp_71*(tmp_396*tmp_570 + tmp_398*tmp_571 + tmp_399*tmp_572) + tmp_86*(tmp_403*tmp_573 + tmp_405*tmp_574 + tmp_406*tmp_575);
      real_t tmp_582 = tmp_101*(tmp_436*tmp_576 + tmp_438*tmp_577 + tmp_439*tmp_578) + tmp_56*(tmp_418*tmp_567 + tmp_420*tmp_568 + tmp_421*tmp_569) + tmp_71*(tmp_424*tmp_570 + tmp_426*tmp_571 + tmp_427*tmp_572) + tmp_86*(tmp_430*tmp_573 + tmp_432*tmp_574 + tmp_433*tmp_575);
      real_t tmp_583 = tmp_101*(tmp_458*tmp_576 + tmp_460*tmp_577 + tmp_461*tmp_578) + tmp_56*(tmp_443*tmp_567 + tmp_445*tmp_568 + tmp_446*tmp_569) + tmp_71*(tmp_448*tmp_570 + tmp_450*tmp_571 + tmp_451*tmp_572) + tmp_86*(tmp_453*tmp_573 + tmp_455*tmp_574 + tmp_456*tmp_575);
      real_t tmp_584 = tmp_277*tmp_37;
      real_t tmp_585 = tmp_204*tmp_40;
      real_t tmp_586 = tmp_291*tmp_37;
      real_t tmp_587 = tmp_223*tmp_40;
      real_t tmp_588 = tmp_305*tmp_37;
      real_t tmp_589 = tmp_242*tmp_40;
      real_t tmp_590 = tmp_319*tmp_37;
      real_t tmp_591 = tmp_261*tmp_40;
      real_t tmp_592 = tmp_276*tmp_42;
      real_t tmp_593 = tmp_208*tmp_282;
      real_t tmp_594 = tmp_208*tmp_287;
      real_t tmp_595 = tmp_290*tmp_70;
      real_t tmp_596 = tmp_227*tmp_296;
      real_t tmp_597 = tmp_227*tmp_301;
      real_t tmp_598 = tmp_304*tmp_85;
      real_t tmp_599 = tmp_246*tmp_310;
      real_t tmp_600 = tmp_246*tmp_315;
      real_t tmp_601 = tmp_100*tmp_318;
      real_t tmp_602 = tmp_265*tmp_324;
      real_t tmp_603 = tmp_265*tmp_329;
      real_t tmp_604 = tmp_101*(tmp_372*tmp_601 + tmp_377*tmp_602 + tmp_382*tmp_603) + tmp_56*(tmp_333*tmp_592 + tmp_338*tmp_593 + tmp_343*tmp_594) + tmp_71*(tmp_346*tmp_595 + tmp_351*tmp_596 + tmp_356*tmp_597) + tmp_86*(tmp_359*tmp_598 + tmp_364*tmp_599 + tmp_369*tmp_600);
      real_t tmp_605 = tmp_101*(tmp_410*tmp_601 + tmp_412*tmp_602 + tmp_413*tmp_603) + tmp_56*(tmp_388*tmp_592 + tmp_391*tmp_593 + tmp_392*tmp_594) + tmp_71*(tmp_396*tmp_595 + tmp_398*tmp_596 + tmp_399*tmp_597) + tmp_86*(tmp_403*tmp_598 + tmp_405*tmp_599 + tmp_406*tmp_600);
      real_t tmp_606 = tmp_101*(tmp_436*tmp_601 + tmp_438*tmp_602 + tmp_439*tmp_603) + tmp_56*(tmp_418*tmp_592 + tmp_420*tmp_593 + tmp_421*tmp_594) + tmp_71*(tmp_424*tmp_595 + tmp_426*tmp_596 + tmp_427*tmp_597) + tmp_86*(tmp_430*tmp_598 + tmp_432*tmp_599 + tmp_433*tmp_600);
      real_t tmp_607 = tmp_101*(tmp_458*tmp_601 + tmp_460*tmp_602 + tmp_461*tmp_603) + tmp_56*(tmp_443*tmp_592 + tmp_445*tmp_593 + tmp_446*tmp_594) + tmp_71*(tmp_448*tmp_595 + tmp_450*tmp_596 + tmp_451*tmp_597) + tmp_86*(tmp_453*tmp_598 + tmp_455*tmp_599 + tmp_456*tmp_600);
      real_t tmp_608 = tmp_277*tmp_39;
      real_t tmp_609 = tmp_201*tmp_40;
      real_t tmp_610 = tmp_291*tmp_39;
      real_t tmp_611 = tmp_220*tmp_40;
      real_t tmp_612 = tmp_305*tmp_39;
      real_t tmp_613 = tmp_239*tmp_40;
      real_t tmp_614 = tmp_319*tmp_39;
      real_t tmp_615 = tmp_258*tmp_40;
      real_t tmp_616 = tmp_333*tmp_42;
      real_t tmp_617 = tmp_208*tmp_338;
      real_t tmp_618 = tmp_208*tmp_343;
      real_t tmp_619 = tmp_346*tmp_70;
      real_t tmp_620 = tmp_227*tmp_351;
      real_t tmp_621 = tmp_227*tmp_356;
      real_t tmp_622 = tmp_359*tmp_85;
      real_t tmp_623 = tmp_246*tmp_364;
      real_t tmp_624 = tmp_246*tmp_369;
      real_t tmp_625 = tmp_100*tmp_372;
      real_t tmp_626 = tmp_265*tmp_377;
      real_t tmp_627 = tmp_265*tmp_382;
      real_t tmp_628 = tmp_101*(tmp_410*tmp_625 + tmp_412*tmp_626 + tmp_413*tmp_627) + tmp_56*(tmp_388*tmp_616 + tmp_391*tmp_617 + tmp_392*tmp_618) + tmp_71*(tmp_396*tmp_619 + tmp_398*tmp_620 + tmp_399*tmp_621) + tmp_86*(tmp_403*tmp_622 + tmp_405*tmp_623 + tmp_406*tmp_624);
      real_t tmp_629 = tmp_101*(tmp_436*tmp_625 + tmp_438*tmp_626 + tmp_439*tmp_627) + tmp_56*(tmp_418*tmp_616 + tmp_420*tmp_617 + tmp_421*tmp_618) + tmp_71*(tmp_424*tmp_619 + tmp_426*tmp_620 + tmp_427*tmp_621) + tmp_86*(tmp_430*tmp_622 + tmp_432*tmp_623 + tmp_433*tmp_624);
      real_t tmp_630 = tmp_101*(tmp_458*tmp_625 + tmp_460*tmp_626 + tmp_461*tmp_627) + tmp_56*(tmp_443*tmp_616 + tmp_445*tmp_617 + tmp_446*tmp_618) + tmp_71*(tmp_448*tmp_619 + tmp_450*tmp_620 + tmp_451*tmp_621) + tmp_86*(tmp_453*tmp_622 + tmp_455*tmp_623 + tmp_456*tmp_624);
      real_t tmp_631 = 0.25*tmp_386;
      real_t tmp_632 = 0.25*tmp_395;
      real_t tmp_633 = 0.25*tmp_402;
      real_t tmp_634 = 0.25*tmp_409;
      real_t tmp_635 = tmp_388*tmp_42;
      real_t tmp_636 = tmp_208*tmp_391;
      real_t tmp_637 = tmp_208*tmp_392;
      real_t tmp_638 = tmp_396*tmp_70;
      real_t tmp_639 = tmp_227*tmp_398;
      real_t tmp_640 = tmp_227*tmp_399;
      real_t tmp_641 = tmp_403*tmp_85;
      real_t tmp_642 = tmp_246*tmp_405;
      real_t tmp_643 = tmp_246*tmp_406;
      real_t tmp_644 = tmp_100*tmp_410;
      real_t tmp_645 = tmp_265*tmp_412;
      real_t tmp_646 = tmp_265*tmp_413;
      real_t tmp_647 = tmp_101*(tmp_436*tmp_644 + tmp_438*tmp_645 + tmp_439*tmp_646) + tmp_56*(tmp_418*tmp_635 + tmp_420*tmp_636 + tmp_421*tmp_637) + tmp_71*(tmp_424*tmp_638 + tmp_426*tmp_639 + tmp_427*tmp_640) + tmp_86*(tmp_430*tmp_641 + tmp_432*tmp_642 + tmp_433*tmp_643);
      real_t tmp_648 = tmp_101*(tmp_458*tmp_644 + tmp_460*tmp_645 + tmp_461*tmp_646) + tmp_56*(tmp_443*tmp_635 + tmp_445*tmp_636 + tmp_446*tmp_637) + tmp_71*(tmp_448*tmp_638 + tmp_450*tmp_639 + tmp_451*tmp_640) + tmp_86*(tmp_453*tmp_641 + tmp_455*tmp_642 + tmp_456*tmp_643);
      real_t tmp_649 = 0.25*tmp_416;
      real_t tmp_650 = 0.25*tmp_423;
      real_t tmp_651 = 0.25*tmp_429;
      real_t tmp_652 = 0.25*tmp_435;
      real_t tmp_653 = tmp_101*(tmp_100*tmp_436*tmp_458 + tmp_265*tmp_438*tmp_460 + tmp_265*tmp_439*tmp_461) + tmp_56*(tmp_208*tmp_420*tmp_445 + tmp_208*tmp_421*tmp_446 + tmp_418*tmp_42*tmp_443) + tmp_71*(tmp_227*tmp_426*tmp_450 + tmp_227*tmp_427*tmp_451 + tmp_424*tmp_448*tmp_70) + tmp_86*(tmp_246*tmp_432*tmp_455 + tmp_246*tmp_433*tmp_456 + tmp_430*tmp_453*tmp_85);
      real_t tmp_654 = 0.25*tmp_441;
      real_t tmp_655 = 0.25*tmp_447;
      real_t tmp_656 = 0.25*tmp_452;
      real_t tmp_657 = 0.25*tmp_457;
      real_t a_0_0 = tmp_101*(tmp_100*(tmp_99*tmp_99) + tmp_94*((tmp_91 + tmp_92 + tmp_93)*(tmp_91 + tmp_92 + tmp_93)) + tmp_94*((tmp_95 + tmp_96 + tmp_97)*(tmp_95 + tmp_96 + tmp_97))) + tmp_56*(tmp_30*((tmp_25 + tmp_27 + tmp_29)*(tmp_25 + tmp_27 + tmp_29)) + tmp_30*((tmp_32 + tmp_34 + tmp_36)*(tmp_32 + tmp_34 + tmp_36)) + (tmp_41*tmp_41)*tmp_42) + tmp_71*(tmp_64*((tmp_61 + tmp_62 + tmp_63)*(tmp_61 + tmp_62 + tmp_63)) + tmp_64*((tmp_65 + tmp_66 + tmp_67)*(tmp_65 + tmp_66 + tmp_67)) + (tmp_69*tmp_69)*tmp_70) + tmp_86*(tmp_79*((tmp_76 + tmp_77 + tmp_78)*(tmp_76 + tmp_77 + tmp_78)) + tmp_79*((tmp_80 + tmp_81 + tmp_82)*(tmp_80 + tmp_81 + tmp_82)) + (tmp_84*tmp_84)*tmp_85);
      real_t a_0_1 = tmp_138;
      real_t a_0_2 = tmp_167;
      real_t a_0_3 = tmp_196;
      real_t a_0_4 = tmp_273;
      real_t a_0_5 = tmp_330;
      real_t a_0_6 = tmp_383;
      real_t a_0_7 = tmp_414;
      real_t a_0_8 = tmp_440;
      real_t a_0_9 = tmp_462;
      real_t a_1_0 = tmp_138;
      real_t a_1_1 = tmp_101*(tmp_463*tmp_479*tmp_480 + tmp_467*tmp_482 + tmp_470*tmp_482) + tmp_56*(tmp_463*tmp_464*tmp_466 + tmp_467*tmp_469 + tmp_469*tmp_470) + tmp_71*(tmp_463*tmp_471*tmp_472 + tmp_467*tmp_474 + tmp_470*tmp_474) + tmp_86*(tmp_463*tmp_475*tmp_476 + tmp_467*tmp_478 + tmp_470*tmp_478);
      real_t a_1_2 = tmp_498;
      real_t a_1_3 = tmp_510;
      real_t a_1_4 = tmp_511;
      real_t a_1_5 = tmp_512;
      real_t a_1_6 = tmp_513;
      real_t a_1_7 = tmp_514;
      real_t a_1_8 = tmp_515;
      real_t a_1_9 = tmp_516;
      real_t a_2_0 = tmp_167;
      real_t a_2_1 = tmp_498;
      real_t a_2_2 = tmp_101*(tmp_479*tmp_517*tmp_526 + tmp_519*tmp_527 + tmp_521*tmp_527) + tmp_56*(tmp_464*tmp_517*tmp_518 + tmp_519*tmp_520 + tmp_520*tmp_521) + tmp_71*(tmp_471*tmp_517*tmp_522 + tmp_519*tmp_523 + tmp_521*tmp_523) + tmp_86*(tmp_475*tmp_517*tmp_524 + tmp_519*tmp_525 + tmp_521*tmp_525);
      real_t a_2_3 = tmp_535;
      real_t a_2_4 = tmp_536;
      real_t a_2_5 = tmp_537;
      real_t a_2_6 = tmp_538;
      real_t a_2_7 = tmp_539;
      real_t a_2_8 = tmp_540;
      real_t a_2_9 = tmp_541;
      real_t a_3_0 = tmp_196;
      real_t a_3_1 = tmp_510;
      real_t a_3_2 = tmp_535;
      real_t a_3_3 = tmp_101*(tmp_479*tmp_542*tmp_551 + tmp_544*tmp_552 + tmp_546*tmp_552) + tmp_56*(tmp_464*tmp_542*tmp_543 + tmp_544*tmp_545 + tmp_545*tmp_546) + tmp_71*(tmp_471*tmp_542*tmp_547 + tmp_544*tmp_548 + tmp_546*tmp_548) + tmp_86*(tmp_475*tmp_542*tmp_549 + tmp_544*tmp_550 + tmp_546*tmp_550);
      real_t a_3_4 = tmp_553;
      real_t a_3_5 = tmp_554;
      real_t a_3_6 = tmp_555;
      real_t a_3_7 = tmp_556;
      real_t a_3_8 = tmp_557;
      real_t a_3_9 = tmp_558;
      real_t a_4_0 = tmp_273;
      real_t a_4_1 = tmp_511;
      real_t a_4_2 = tmp_536;
      real_t a_4_3 = tmp_553;
      real_t a_4_4 = tmp_101*(tmp_479*((tmp_565 + tmp_566)*(tmp_565 + tmp_566)) + tmp_481*((tmp_259 + tmp_262)*(tmp_259 + tmp_262)) + tmp_481*((tmp_267 + tmp_269)*(tmp_267 + tmp_269))) + tmp_56*(tmp_464*((tmp_559 + tmp_560)*(tmp_559 + tmp_560)) + tmp_468*((tmp_202 + tmp_205)*(tmp_202 + tmp_205)) + tmp_468*((tmp_210 + tmp_212)*(tmp_210 + tmp_212))) + tmp_71*(tmp_471*((tmp_561 + tmp_562)*(tmp_561 + tmp_562)) + tmp_473*((tmp_221 + tmp_224)*(tmp_221 + tmp_224)) + tmp_473*((tmp_229 + tmp_231)*(tmp_229 + tmp_231))) + tmp_86*(tmp_475*((tmp_563 + tmp_564)*(tmp_563 + tmp_564)) + tmp_477*((tmp_240 + tmp_243)*(tmp_240 + tmp_243)) + tmp_477*((tmp_248 + tmp_250)*(tmp_248 + tmp_250)));
      real_t a_4_5 = tmp_579;
      real_t a_4_6 = tmp_580;
      real_t a_4_7 = tmp_581;
      real_t a_4_8 = tmp_582;
      real_t a_4_9 = tmp_583;
      real_t a_5_0 = tmp_330;
      real_t a_5_1 = tmp_512;
      real_t a_5_2 = tmp_537;
      real_t a_5_3 = tmp_554;
      real_t a_5_4 = tmp_579;
      real_t a_5_5 = tmp_101*(tmp_479*((tmp_590 + tmp_591)*(tmp_590 + tmp_591)) + tmp_481*((tmp_320 + tmp_322)*(tmp_320 + tmp_322)) + tmp_481*((tmp_325 + tmp_327)*(tmp_325 + tmp_327))) + tmp_56*(tmp_464*((tmp_584 + tmp_585)*(tmp_584 + tmp_585)) + tmp_468*((tmp_278 + tmp_280)*(tmp_278 + tmp_280)) + tmp_468*((tmp_283 + tmp_285)*(tmp_283 + tmp_285))) + tmp_71*(tmp_471*((tmp_586 + tmp_587)*(tmp_586 + tmp_587)) + tmp_473*((tmp_292 + tmp_294)*(tmp_292 + tmp_294)) + tmp_473*((tmp_297 + tmp_299)*(tmp_297 + tmp_299))) + tmp_86*(tmp_475*((tmp_588 + tmp_589)*(tmp_588 + tmp_589)) + tmp_477*((tmp_306 + tmp_308)*(tmp_306 + tmp_308)) + tmp_477*((tmp_311 + tmp_313)*(tmp_311 + tmp_313)));
      real_t a_5_6 = tmp_604;
      real_t a_5_7 = tmp_605;
      real_t a_5_8 = tmp_606;
      real_t a_5_9 = tmp_607;
      real_t a_6_0 = tmp_383;
      real_t a_6_1 = tmp_513;
      real_t a_6_2 = tmp_538;
      real_t a_6_3 = tmp_555;
      real_t a_6_4 = tmp_580;
      real_t a_6_5 = tmp_604;
      real_t a_6_6 = tmp_101*(tmp_479*((tmp_614 + tmp_615)*(tmp_614 + tmp_615)) + tmp_481*((tmp_373 + tmp_375)*(tmp_373 + tmp_375)) + tmp_481*((tmp_378 + tmp_380)*(tmp_378 + tmp_380))) + tmp_56*(tmp_464*((tmp_608 + tmp_609)*(tmp_608 + tmp_609)) + tmp_468*((tmp_334 + tmp_336)*(tmp_334 + tmp_336)) + tmp_468*((tmp_339 + tmp_341)*(tmp_339 + tmp_341))) + tmp_71*(tmp_471*((tmp_610 + tmp_611)*(tmp_610 + tmp_611)) + tmp_473*((tmp_347 + tmp_349)*(tmp_347 + tmp_349)) + tmp_473*((tmp_352 + tmp_354)*(tmp_352 + tmp_354))) + tmp_86*(tmp_475*((tmp_612 + tmp_613)*(tmp_612 + tmp_613)) + tmp_477*((tmp_360 + tmp_362)*(tmp_360 + tmp_362)) + tmp_477*((tmp_365 + tmp_367)*(tmp_365 + tmp_367)));
      real_t a_6_7 = tmp_628;
      real_t a_6_8 = tmp_629;
      real_t a_6_9 = tmp_630;
      real_t a_7_0 = tmp_414;
      real_t a_7_1 = tmp_514;
      real_t a_7_2 = tmp_539;
      real_t a_7_3 = tmp_556;
      real_t a_7_4 = tmp_581;
      real_t a_7_5 = tmp_605;
      real_t a_7_6 = tmp_628;
      real_t a_7_7 = tmp_101*(tmp_479*((tmp_168*tmp_634 - tmp_566 - tmp_591)*(tmp_168*tmp_634 - tmp_566 - tmp_591)) + tmp_481*((tmp_173*tmp_634 - tmp_262 - tmp_322)*(tmp_173*tmp_634 - tmp_262 - tmp_322)) + tmp_481*((tmp_176*tmp_634 - tmp_269 - tmp_327)*(tmp_176*tmp_634 - tmp_269 - tmp_327))) + tmp_56*(tmp_464*((tmp_168*tmp_631 - tmp_560 - tmp_585)*(tmp_168*tmp_631 - tmp_560 - tmp_585)) + tmp_468*((tmp_173*tmp_631 - tmp_205 - tmp_280)*(tmp_173*tmp_631 - tmp_205 - tmp_280)) + tmp_468*((tmp_176*tmp_631 - tmp_212 - tmp_285)*(tmp_176*tmp_631 - tmp_212 - tmp_285))) + tmp_71*(tmp_471*((tmp_168*tmp_632 - tmp_562 - tmp_587)*(tmp_168*tmp_632 - tmp_562 - tmp_587)) + tmp_473*((tmp_173*tmp_632 - tmp_224 - tmp_294)*(tmp_173*tmp_632 - tmp_224 - tmp_294)) + tmp_473*((tmp_176*tmp_632 - tmp_231 - tmp_299)*(tmp_176*tmp_632 - tmp_231 - tmp_299))) + tmp_86*(tmp_475*((tmp_168*tmp_633 - tmp_564 - tmp_589)*(tmp_168*tmp_633 - tmp_564 - tmp_589)) + tmp_477*((tmp_173*tmp_633 - tmp_243 - tmp_308)*(tmp_173*tmp_633 - tmp_243 - tmp_308)) + tmp_477*((tmp_176*tmp_633 - tmp_250 - tmp_313)*(tmp_176*tmp_633 - tmp_250 - tmp_313)));
      real_t a_7_8 = tmp_647;
      real_t a_7_9 = tmp_648;
      real_t a_8_0 = tmp_440;
      real_t a_8_1 = tmp_515;
      real_t a_8_2 = tmp_540;
      real_t a_8_3 = tmp_557;
      real_t a_8_4 = tmp_582;
      real_t a_8_5 = tmp_606;
      real_t a_8_6 = tmp_629;
      real_t a_8_7 = tmp_647;
      real_t a_8_8 = tmp_101*(tmp_479*((tmp_139*tmp_652 - tmp_565 - tmp_615)*(tmp_139*tmp_652 - tmp_565 - tmp_615)) + tmp_481*((tmp_144*tmp_652 - tmp_259 - tmp_375)*(tmp_144*tmp_652 - tmp_259 - tmp_375)) + tmp_481*((tmp_147*tmp_652 - tmp_267 - tmp_380)*(tmp_147*tmp_652 - tmp_267 - tmp_380))) + tmp_56*(tmp_464*((tmp_139*tmp_649 - tmp_559 - tmp_609)*(tmp_139*tmp_649 - tmp_559 - tmp_609)) + tmp_468*((tmp_144*tmp_649 - tmp_202 - tmp_336)*(tmp_144*tmp_649 - tmp_202 - tmp_336)) + tmp_468*((tmp_147*tmp_649 - tmp_210 - tmp_341)*(tmp_147*tmp_649 - tmp_210 - tmp_341))) + tmp_71*(tmp_471*((tmp_139*tmp_650 - tmp_561 - tmp_611)*(tmp_139*tmp_650 - tmp_561 - tmp_611)) + tmp_473*((tmp_144*tmp_650 - tmp_221 - tmp_349)*(tmp_144*tmp_650 - tmp_221 - tmp_349)) + tmp_473*((tmp_147*tmp_650 - tmp_229 - tmp_354)*(tmp_147*tmp_650 - tmp_229 - tmp_354))) + tmp_86*(tmp_475*((tmp_139*tmp_651 - tmp_563 - tmp_613)*(tmp_139*tmp_651 - tmp_563 - tmp_613)) + tmp_477*((tmp_144*tmp_651 - tmp_240 - tmp_362)*(tmp_144*tmp_651 - tmp_240 - tmp_362)) + tmp_477*((tmp_147*tmp_651 - tmp_248 - tmp_367)*(tmp_147*tmp_651 - tmp_248 - tmp_367)));
      real_t a_8_9 = tmp_653;
      real_t a_9_0 = tmp_462;
      real_t a_9_1 = tmp_516;
      real_t a_9_2 = tmp_541;
      real_t a_9_3 = tmp_558;
      real_t a_9_4 = tmp_583;
      real_t a_9_5 = tmp_607;
      real_t a_9_6 = tmp_630;
      real_t a_9_7 = tmp_648;
      real_t a_9_8 = tmp_653;
      real_t a_9_9 = tmp_101*(tmp_479*((tmp_102*tmp_657 - tmp_590 - tmp_614)*(tmp_102*tmp_657 - tmp_590 - tmp_614)) + tmp_481*((tmp_108*tmp_657 - tmp_320 - tmp_373)*(tmp_108*tmp_657 - tmp_320 - tmp_373)) + tmp_481*((tmp_112*tmp_657 - tmp_325 - tmp_378)*(tmp_112*tmp_657 - tmp_325 - tmp_378))) + tmp_56*(tmp_464*((tmp_102*tmp_654 - tmp_584 - tmp_608)*(tmp_102*tmp_654 - tmp_584 - tmp_608)) + tmp_468*((tmp_108*tmp_654 - tmp_278 - tmp_334)*(tmp_108*tmp_654 - tmp_278 - tmp_334)) + tmp_468*((tmp_112*tmp_654 - tmp_283 - tmp_339)*(tmp_112*tmp_654 - tmp_283 - tmp_339))) + tmp_71*(tmp_471*((tmp_102*tmp_655 - tmp_586 - tmp_610)*(tmp_102*tmp_655 - tmp_586 - tmp_610)) + tmp_473*((tmp_108*tmp_655 - tmp_292 - tmp_347)*(tmp_108*tmp_655 - tmp_292 - tmp_347)) + tmp_473*((tmp_112*tmp_655 - tmp_297 - tmp_352)*(tmp_112*tmp_655 - tmp_297 - tmp_352))) + tmp_86*(tmp_475*((tmp_102*tmp_656 - tmp_588 - tmp_612)*(tmp_102*tmp_656 - tmp_588 - tmp_612)) + tmp_477*((tmp_108*tmp_656 - tmp_306 - tmp_360)*(tmp_108*tmp_656 - tmp_306 - tmp_360)) + tmp_477*((tmp_112*tmp_656 - tmp_311 - tmp_365)*(tmp_112*tmp_656 - tmp_311 - tmp_365)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_2_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Scalar_Variable_Coefficient_3D( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = 1.0*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_30 = tmp_14*tmp_5 - tmp_3*tmp_9;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_11*tmp_3 - tmp_14*tmp_7;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = -tmp_11*tmp_5 + tmp_7*tmp_9;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = tmp_10 - tmp_17;
      real_t tmp_37 = 1.0*tmp_23;
      real_t tmp_38 = tmp_15 - tmp_16;
      real_t tmp_39 = tmp_12 - tmp_18;
      real_t tmp_40 = tmp_36*tmp_37 + tmp_37*tmp_38 + tmp_37*tmp_39;
      real_t tmp_41 = 2*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_42 = p_affine_0_0*p_affine_1_1;
      real_t tmp_43 = p_affine_0_0*p_affine_1_2;
      real_t tmp_44 = p_affine_2_1*p_affine_3_2;
      real_t tmp_45 = p_affine_0_1*p_affine_1_0;
      real_t tmp_46 = p_affine_0_1*p_affine_1_2;
      real_t tmp_47 = p_affine_2_2*p_affine_3_0;
      real_t tmp_48 = p_affine_0_2*p_affine_1_0;
      real_t tmp_49 = p_affine_0_2*p_affine_1_1;
      real_t tmp_50 = p_affine_2_0*p_affine_3_1;
      real_t tmp_51 = p_affine_2_2*p_affine_3_1;
      real_t tmp_52 = p_affine_2_0*p_affine_3_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_0;
      real_t tmp_54 = std::abs(p_affine_0_0*tmp_44 - p_affine_0_0*tmp_51 + p_affine_0_1*tmp_47 - p_affine_0_1*tmp_52 + p_affine_0_2*tmp_50 - p_affine_0_2*tmp_53 - p_affine_1_0*tmp_44 + p_affine_1_0*tmp_51 - p_affine_1_1*tmp_47 + p_affine_1_1*tmp_52 - p_affine_1_2*tmp_50 + p_affine_1_2*tmp_53 + p_affine_2_0*tmp_46 - p_affine_2_0*tmp_49 - p_affine_2_1*tmp_43 + p_affine_2_1*tmp_48 + p_affine_2_2*tmp_42 - p_affine_2_2*tmp_45 - p_affine_3_0*tmp_46 + p_affine_3_0*tmp_49 + p_affine_3_1*tmp_43 - p_affine_3_1*tmp_48 - p_affine_3_2*tmp_42 + p_affine_3_2*tmp_45);
      real_t tmp_55 = 0.041666666666666657*tmp_54;
      real_t tmp_56 = 0.55278640450004235;
      real_t tmp_57 = 2.3416407864998732;
      real_t tmp_58 = 0.55278640450004235;
      real_t tmp_59 = tmp_19*(tmp_56 + tmp_57 + tmp_58 - 3.0);
      real_t tmp_60 = tmp_59*tmp_6;
      real_t tmp_61 = tmp_25*tmp_59;
      real_t tmp_62 = tmp_27*tmp_59;
      real_t tmp_63 = 1.0*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_64 = tmp_30*tmp_59;
      real_t tmp_65 = tmp_32*tmp_59;
      real_t tmp_66 = tmp_34*tmp_59;
      real_t tmp_67 = 1.0*tmp_59;
      real_t tmp_68 = tmp_36*tmp_67 + tmp_38*tmp_67 + tmp_39*tmp_67;
      real_t tmp_69 = 2*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_70 = 0.041666666666666657*tmp_54;
      real_t tmp_71 = 2.3416407864998732;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 0.55278640450004235;
      real_t tmp_74 = tmp_19*(tmp_71 + tmp_72 + tmp_73 - 3.0);
      real_t tmp_75 = tmp_6*tmp_74;
      real_t tmp_76 = tmp_25*tmp_74;
      real_t tmp_77 = tmp_27*tmp_74;
      real_t tmp_78 = 1.0*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_79 = tmp_30*tmp_74;
      real_t tmp_80 = tmp_32*tmp_74;
      real_t tmp_81 = tmp_34*tmp_74;
      real_t tmp_82 = 1.0*tmp_74;
      real_t tmp_83 = tmp_36*tmp_82 + tmp_38*tmp_82 + tmp_39*tmp_82;
      real_t tmp_84 = 2*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_85 = 0.041666666666666657*tmp_54;
      real_t tmp_86 = 0.55278640450004235;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = tmp_19*(tmp_86 + tmp_87 + tmp_88 - 3.0);
      real_t tmp_90 = tmp_6*tmp_89;
      real_t tmp_91 = tmp_25*tmp_89;
      real_t tmp_92 = tmp_27*tmp_89;
      real_t tmp_93 = 1.0*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_94 = tmp_30*tmp_89;
      real_t tmp_95 = tmp_32*tmp_89;
      real_t tmp_96 = tmp_34*tmp_89;
      real_t tmp_97 = 1.0*tmp_89;
      real_t tmp_98 = tmp_36*tmp_97 + tmp_38*tmp_97 + tmp_39*tmp_97;
      real_t tmp_99 = 2*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_100 = 0.041666666666666657*tmp_54;
      real_t tmp_101 = tmp_20 - 1.0;
      real_t tmp_102 = 2.0*tmp_19;
      real_t tmp_103 = tmp_102*tmp_39;
      real_t tmp_104 = Scalar_Variable_Coefficient_3D_0_0*tmp_40;
      real_t tmp_105 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_106 = Scalar_Variable_Coefficient_3D_0_0*tmp_101;
      real_t tmp_107 = tmp_102*tmp_27;
      real_t tmp_108 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_109 = tmp_102*tmp_34;
      real_t tmp_110 = Scalar_Variable_Coefficient_3D_1_0*(tmp_56 - 1.0);
      real_t tmp_111 = 0.5*tmp_60 + 0.5*tmp_61 + 0.5*tmp_62;
      real_t tmp_112 = 0.5*tmp_64 + 0.5*tmp_65 + 0.5*tmp_66;
      real_t tmp_113 = Scalar_Variable_Coefficient_3D_2_0*(tmp_71 - 1.0);
      real_t tmp_114 = 0.5*tmp_75 + 0.5*tmp_76 + 0.5*tmp_77;
      real_t tmp_115 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_116 = Scalar_Variable_Coefficient_3D_3_0*(tmp_86 - 1.0);
      real_t tmp_117 = 0.5*tmp_90 + 0.5*tmp_91 + 0.5*tmp_92;
      real_t tmp_118 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_119 = tmp_21 - 1.0;
      real_t tmp_120 = tmp_19*tmp_38;
      real_t tmp_121 = 2.0*tmp_120;
      real_t tmp_122 = tmp_102*tmp_25;
      real_t tmp_123 = Scalar_Variable_Coefficient_3D_0_0*tmp_119;
      real_t tmp_124 = tmp_102*tmp_32;
      real_t tmp_125 = Scalar_Variable_Coefficient_3D_1_0*(tmp_57 - 1.0);
      real_t tmp_126 = Scalar_Variable_Coefficient_3D_2_0*(tmp_72 - 1.0);
      real_t tmp_127 = Scalar_Variable_Coefficient_3D_3_0*(tmp_87 - 1.0);
      real_t tmp_128 = tmp_22 - 1.0;
      real_t tmp_129 = tmp_19*tmp_36;
      real_t tmp_130 = 2.0*tmp_129;
      real_t tmp_131 = Scalar_Variable_Coefficient_3D_0_0*tmp_128;
      real_t tmp_132 = tmp_102*tmp_6;
      real_t tmp_133 = tmp_102*tmp_30;
      real_t tmp_134 = Scalar_Variable_Coefficient_3D_1_0*(tmp_58 - 1.0);
      real_t tmp_135 = Scalar_Variable_Coefficient_3D_2_0*(tmp_73 - 1.0);
      real_t tmp_136 = Scalar_Variable_Coefficient_3D_3_0*(tmp_88 - 1.0);
      real_t tmp_137 = tmp_129*tmp_21;
      real_t tmp_138 = tmp_120*tmp_22;
      real_t tmp_139 = tmp_40*tmp_41;
      real_t tmp_140 = 0.13819660112501059*tmp_102;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = 0.58541019662496829*tmp_102;
      real_t tmp_143 = tmp_142*tmp_25;
      real_t tmp_144 = 4*Scalar_Variable_Coefficient_3D_0_0;
      real_t tmp_145 = tmp_105*tmp_144;
      real_t tmp_146 = tmp_140*tmp_30;
      real_t tmp_147 = tmp_142*tmp_32;
      real_t tmp_148 = tmp_108*tmp_144;
      real_t tmp_149 = tmp_129*tmp_57;
      real_t tmp_150 = tmp_120*tmp_58;
      real_t tmp_151 = tmp_68*tmp_69;
      real_t tmp_152 = 0.58541019662496829*tmp_102;
      real_t tmp_153 = tmp_152*tmp_6;
      real_t tmp_154 = 0.13819660112501059*tmp_102;
      real_t tmp_155 = tmp_154*tmp_25;
      real_t tmp_156 = 4*Scalar_Variable_Coefficient_3D_1_0;
      real_t tmp_157 = tmp_111*tmp_156;
      real_t tmp_158 = tmp_152*tmp_30;
      real_t tmp_159 = tmp_154*tmp_32;
      real_t tmp_160 = tmp_112*tmp_156;
      real_t tmp_161 = tmp_129*tmp_72;
      real_t tmp_162 = tmp_120*tmp_73;
      real_t tmp_163 = tmp_83*tmp_84;
      real_t tmp_164 = 0.13819660112501059*tmp_102;
      real_t tmp_165 = tmp_164*tmp_6;
      real_t tmp_166 = 0.13819660112501059*tmp_102;
      real_t tmp_167 = tmp_166*tmp_25;
      real_t tmp_168 = 4*Scalar_Variable_Coefficient_3D_2_0;
      real_t tmp_169 = tmp_114*tmp_168;
      real_t tmp_170 = tmp_164*tmp_30;
      real_t tmp_171 = tmp_166*tmp_32;
      real_t tmp_172 = tmp_115*tmp_168;
      real_t tmp_173 = tmp_129*tmp_87;
      real_t tmp_174 = tmp_120*tmp_88;
      real_t tmp_175 = tmp_98*tmp_99;
      real_t tmp_176 = 0.13819660112501059*tmp_102;
      real_t tmp_177 = tmp_176*tmp_6;
      real_t tmp_178 = 0.13819660112501059*tmp_102;
      real_t tmp_179 = tmp_178*tmp_25;
      real_t tmp_180 = 4*Scalar_Variable_Coefficient_3D_3_0;
      real_t tmp_181 = tmp_117*tmp_180;
      real_t tmp_182 = tmp_176*tmp_30;
      real_t tmp_183 = tmp_178*tmp_32;
      real_t tmp_184 = tmp_118*tmp_180;
      real_t tmp_185 = tmp_129*tmp_20;
      real_t tmp_186 = tmp_19*tmp_39;
      real_t tmp_187 = tmp_186*tmp_22;
      real_t tmp_188 = 0.13819660112501059*tmp_102;
      real_t tmp_189 = tmp_188*tmp_6;
      real_t tmp_190 = tmp_142*tmp_27;
      real_t tmp_191 = tmp_188*tmp_30;
      real_t tmp_192 = tmp_142*tmp_34;
      real_t tmp_193 = tmp_129*tmp_56;
      real_t tmp_194 = tmp_186*tmp_58;
      real_t tmp_195 = 0.13819660112501059*tmp_102;
      real_t tmp_196 = tmp_195*tmp_6;
      real_t tmp_197 = tmp_154*tmp_27;
      real_t tmp_198 = tmp_195*tmp_30;
      real_t tmp_199 = tmp_154*tmp_34;
      real_t tmp_200 = tmp_129*tmp_71;
      real_t tmp_201 = tmp_186*tmp_73;
      real_t tmp_202 = 0.58541019662496829*tmp_102;
      real_t tmp_203 = tmp_202*tmp_6;
      real_t tmp_204 = tmp_166*tmp_27;
      real_t tmp_205 = tmp_202*tmp_30;
      real_t tmp_206 = tmp_166*tmp_34;
      real_t tmp_207 = tmp_129*tmp_86;
      real_t tmp_208 = tmp_186*tmp_88;
      real_t tmp_209 = 0.13819660112501059*tmp_102;
      real_t tmp_210 = tmp_209*tmp_6;
      real_t tmp_211 = tmp_178*tmp_27;
      real_t tmp_212 = tmp_209*tmp_30;
      real_t tmp_213 = tmp_178*tmp_34;
      real_t tmp_214 = tmp_120*tmp_20;
      real_t tmp_215 = tmp_186*tmp_21;
      real_t tmp_216 = tmp_188*tmp_25;
      real_t tmp_217 = tmp_140*tmp_27;
      real_t tmp_218 = tmp_188*tmp_32;
      real_t tmp_219 = tmp_140*tmp_34;
      real_t tmp_220 = tmp_120*tmp_56;
      real_t tmp_221 = tmp_186*tmp_57;
      real_t tmp_222 = tmp_195*tmp_25;
      real_t tmp_223 = tmp_152*tmp_27;
      real_t tmp_224 = tmp_195*tmp_32;
      real_t tmp_225 = tmp_152*tmp_34;
      real_t tmp_226 = tmp_120*tmp_71;
      real_t tmp_227 = tmp_186*tmp_72;
      real_t tmp_228 = tmp_202*tmp_25;
      real_t tmp_229 = tmp_164*tmp_27;
      real_t tmp_230 = tmp_202*tmp_32;
      real_t tmp_231 = tmp_164*tmp_34;
      real_t tmp_232 = tmp_120*tmp_86;
      real_t tmp_233 = tmp_186*tmp_87;
      real_t tmp_234 = tmp_209*tmp_25;
      real_t tmp_235 = tmp_176*tmp_27;
      real_t tmp_236 = tmp_209*tmp_32;
      real_t tmp_237 = tmp_176*tmp_34;
      real_t tmp_238 = -tmp_21;
      real_t tmp_239 = 4.0 - tmp_20;
      real_t tmp_240 = tmp_238 + tmp_239 - 4.6832815729997463;
      real_t tmp_241 = 1.0*tmp_129;
      real_t tmp_242 = 0.5*tmp_19;
      real_t tmp_243 = tmp_240*tmp_242;
      real_t tmp_244 = -tmp_57;
      real_t tmp_245 = 4.0 - tmp_56;
      real_t tmp_246 = tmp_244 + tmp_245 - 1.1055728090000847;
      real_t tmp_247 = tmp_242*tmp_246;
      real_t tmp_248 = -tmp_72;
      real_t tmp_249 = 4.0 - tmp_71;
      real_t tmp_250 = tmp_248 + tmp_249 - 1.1055728090000847;
      real_t tmp_251 = tmp_242*tmp_250;
      real_t tmp_252 = -tmp_87;
      real_t tmp_253 = 4.0 - tmp_86;
      real_t tmp_254 = tmp_252 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_242*tmp_254;
      real_t tmp_256 = -tmp_22;
      real_t tmp_257 = tmp_239 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = 1.0*tmp_120;
      real_t tmp_259 = tmp_242*tmp_257;
      real_t tmp_260 = -tmp_58;
      real_t tmp_261 = tmp_245 + tmp_260 - 4.6832815729997463;
      real_t tmp_262 = tmp_242*tmp_261;
      real_t tmp_263 = -tmp_73;
      real_t tmp_264 = tmp_249 + tmp_263 - 1.1055728090000847;
      real_t tmp_265 = tmp_242*tmp_264;
      real_t tmp_266 = -tmp_88;
      real_t tmp_267 = tmp_253 + tmp_266 - 1.1055728090000847;
      real_t tmp_268 = tmp_242*tmp_267;
      real_t tmp_269 = tmp_238 + tmp_256 + 2.8944271909999153;
      real_t tmp_270 = 1.0*tmp_186;
      real_t tmp_271 = tmp_242*tmp_269;
      real_t tmp_272 = tmp_244 + tmp_260 + 2.8944271909999153;
      real_t tmp_273 = tmp_242*tmp_272;
      real_t tmp_274 = tmp_248 + tmp_263 - 0.68328157299974634;
      real_t tmp_275 = tmp_242*tmp_274;
      real_t tmp_276 = tmp_252 + tmp_266 + 2.8944271909999153;
      real_t tmp_277 = tmp_242*tmp_276;
      real_t a_0_0 = tmp_100*(tmp_93*((tmp_90 + tmp_91 + tmp_92)*(tmp_90 + tmp_91 + tmp_92)) + tmp_93*((tmp_94 + tmp_95 + tmp_96)*(tmp_94 + tmp_95 + tmp_96)) + (tmp_98*tmp_98)*tmp_99) + tmp_55*(tmp_29*((tmp_24 + tmp_26 + tmp_28)*(tmp_24 + tmp_26 + tmp_28)) + tmp_29*((tmp_31 + tmp_33 + tmp_35)*(tmp_31 + tmp_33 + tmp_35)) + (tmp_40*tmp_40)*tmp_41) + tmp_70*(tmp_63*((tmp_60 + tmp_61 + tmp_62)*(tmp_60 + tmp_61 + tmp_62)) + tmp_63*((tmp_64 + tmp_65 + tmp_66)*(tmp_64 + tmp_65 + tmp_66)) + (tmp_68*tmp_68)*tmp_69) + tmp_85*(tmp_78*((tmp_75 + tmp_76 + tmp_77)*(tmp_75 + tmp_76 + tmp_77)) + tmp_78*((tmp_79 + tmp_80 + tmp_81)*(tmp_79 + tmp_80 + tmp_81)) + (tmp_83*tmp_83)*tmp_84);
      real_t a_0_1 = tmp_100*(tmp_103*tmp_116*tmp_98 + tmp_107*tmp_116*tmp_117 + tmp_109*tmp_116*tmp_118) + tmp_55*(tmp_101*tmp_103*tmp_104 + tmp_105*tmp_106*tmp_107 + tmp_106*tmp_108*tmp_109) + tmp_70*(tmp_103*tmp_110*tmp_68 + tmp_107*tmp_110*tmp_111 + tmp_109*tmp_110*tmp_112) + tmp_85*(tmp_103*tmp_113*tmp_83 + tmp_107*tmp_113*tmp_114 + tmp_109*tmp_113*tmp_115);
      real_t a_0_2 = tmp_100*(tmp_117*tmp_122*tmp_127 + tmp_118*tmp_124*tmp_127 + tmp_121*tmp_127*tmp_98) + tmp_55*(tmp_104*tmp_119*tmp_121 + tmp_105*tmp_122*tmp_123 + tmp_108*tmp_123*tmp_124) + tmp_70*(tmp_111*tmp_122*tmp_125 + tmp_112*tmp_124*tmp_125 + tmp_121*tmp_125*tmp_68) + tmp_85*(tmp_114*tmp_122*tmp_126 + tmp_115*tmp_124*tmp_126 + tmp_121*tmp_126*tmp_83);
      real_t a_0_3 = tmp_100*(tmp_117*tmp_132*tmp_136 + tmp_118*tmp_133*tmp_136 + tmp_130*tmp_136*tmp_98) + tmp_55*(tmp_104*tmp_128*tmp_130 + tmp_105*tmp_131*tmp_132 + tmp_108*tmp_131*tmp_133) + tmp_70*(tmp_111*tmp_132*tmp_134 + tmp_112*tmp_133*tmp_134 + tmp_130*tmp_134*tmp_68) + tmp_85*(tmp_114*tmp_132*tmp_135 + tmp_115*tmp_133*tmp_135 + tmp_130*tmp_135*tmp_83);
      real_t a_0_4 = tmp_100*(tmp_175*(tmp_173 + tmp_174) + tmp_181*(tmp_177 + tmp_179) + tmp_184*(tmp_182 + tmp_183)) + tmp_55*(tmp_139*(tmp_137 + tmp_138) + tmp_145*(tmp_141 + tmp_143) + tmp_148*(tmp_146 + tmp_147)) + tmp_70*(tmp_151*(tmp_149 + tmp_150) + tmp_157*(tmp_153 + tmp_155) + tmp_160*(tmp_158 + tmp_159)) + tmp_85*(tmp_163*(tmp_161 + tmp_162) + tmp_169*(tmp_165 + tmp_167) + tmp_172*(tmp_170 + tmp_171));
      real_t a_0_5 = tmp_100*(tmp_175*(tmp_207 + tmp_208) + tmp_181*(tmp_210 + tmp_211) + tmp_184*(tmp_212 + tmp_213)) + tmp_55*(tmp_139*(tmp_185 + tmp_187) + tmp_145*(tmp_189 + tmp_190) + tmp_148*(tmp_191 + tmp_192)) + tmp_70*(tmp_151*(tmp_193 + tmp_194) + tmp_157*(tmp_196 + tmp_197) + tmp_160*(tmp_198 + tmp_199)) + tmp_85*(tmp_163*(tmp_200 + tmp_201) + tmp_169*(tmp_203 + tmp_204) + tmp_172*(tmp_205 + tmp_206));
      real_t a_0_6 = tmp_100*(tmp_175*(tmp_232 + tmp_233) + tmp_181*(tmp_234 + tmp_235) + tmp_184*(tmp_236 + tmp_237)) + tmp_55*(tmp_139*(tmp_214 + tmp_215) + tmp_145*(tmp_216 + tmp_217) + tmp_148*(tmp_218 + tmp_219)) + tmp_70*(tmp_151*(tmp_220 + tmp_221) + tmp_157*(tmp_222 + tmp_223) + tmp_160*(tmp_224 + tmp_225)) + tmp_85*(tmp_163*(tmp_226 + tmp_227) + tmp_169*(tmp_228 + tmp_229) + tmp_172*(tmp_230 + tmp_231));
      real_t a_0_7 = tmp_100*(tmp_175*(-tmp_174 - tmp_208 + tmp_241*tmp_254) + tmp_181*(-tmp_179 - tmp_211 + tmp_255*tmp_6) + tmp_184*(-tmp_183 - tmp_213 + tmp_255*tmp_30)) + tmp_55*(tmp_139*(-tmp_138 - tmp_187 + tmp_240*tmp_241) + tmp_145*(-tmp_143 - tmp_190 + tmp_243*tmp_6) + tmp_148*(-tmp_147 - tmp_192 + tmp_243*tmp_30)) + tmp_70*(tmp_151*(-tmp_150 - tmp_194 + tmp_241*tmp_246) + tmp_157*(-tmp_155 - tmp_197 + tmp_247*tmp_6) + tmp_160*(-tmp_159 - tmp_199 + tmp_247*tmp_30)) + tmp_85*(tmp_163*(-tmp_162 - tmp_201 + tmp_241*tmp_250) + tmp_169*(-tmp_167 - tmp_204 + tmp_251*tmp_6) + tmp_172*(-tmp_171 - tmp_206 + tmp_251*tmp_30));
      real_t a_0_8 = tmp_100*(tmp_175*(-tmp_173 - tmp_233 + tmp_258*tmp_267) + tmp_181*(-tmp_177 - tmp_235 + tmp_25*tmp_268) + tmp_184*(-tmp_182 - tmp_237 + tmp_268*tmp_32)) + tmp_55*(tmp_139*(-tmp_137 - tmp_215 + tmp_257*tmp_258) + tmp_145*(-tmp_141 - tmp_217 + tmp_25*tmp_259) + tmp_148*(-tmp_146 - tmp_219 + tmp_259*tmp_32)) + tmp_70*(tmp_151*(-tmp_149 - tmp_221 + tmp_258*tmp_261) + tmp_157*(-tmp_153 - tmp_223 + tmp_25*tmp_262) + tmp_160*(-tmp_158 - tmp_225 + tmp_262*tmp_32)) + tmp_85*(tmp_163*(-tmp_161 - tmp_227 + tmp_258*tmp_264) + tmp_169*(-tmp_165 - tmp_229 + tmp_25*tmp_265) + tmp_172*(-tmp_170 - tmp_231 + tmp_265*tmp_32));
      real_t a_0_9 = tmp_100*(tmp_175*(-tmp_207 - tmp_232 + tmp_270*tmp_276) + tmp_181*(-tmp_210 - tmp_234 + tmp_27*tmp_277) + tmp_184*(-tmp_212 - tmp_236 + tmp_277*tmp_34)) + tmp_55*(tmp_139*(-tmp_185 - tmp_214 + tmp_269*tmp_270) + tmp_145*(-tmp_189 - tmp_216 + tmp_27*tmp_271) + tmp_148*(-tmp_191 - tmp_218 + tmp_271*tmp_34)) + tmp_70*(tmp_151*(-tmp_193 - tmp_220 + tmp_270*tmp_272) + tmp_157*(-tmp_196 - tmp_222 + tmp_27*tmp_273) + tmp_160*(-tmp_198 - tmp_224 + tmp_273*tmp_34)) + tmp_85*(tmp_163*(-tmp_200 - tmp_226 + tmp_270*tmp_274) + tmp_169*(-tmp_203 - tmp_228 + tmp_27*tmp_275) + tmp_172*(-tmp_205 - tmp_230 + tmp_275*tmp_34));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_2_2_affine_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

} // namespace forms
} // namespace hyteg
