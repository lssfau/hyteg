/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_full_stokescc_affine_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_full_stokescc_0_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = tmp_3*tmp_8;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_14*tmp_8;
      real_t tmp_16 = tmp_13 + tmp_15;
      real_t tmp_17 = 0.5*tmp_13 + 0.5*tmp_15;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = 1.0*tmp_11 + 1.0*tmp_9;
      real_t tmp_20 = 2.0*tmp_11 + 2.0*tmp_9;
      real_t tmp_21 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_22 = 0.16666666666666666*tmp_21;
      real_t tmp_23 = 2.6666666666666665;
      real_t tmp_24 = 0.66666666666666663;
      real_t tmp_25 = tmp_5*(tmp_23 + tmp_24 - 3);
      real_t tmp_26 = tmp_1*tmp_25;
      real_t tmp_27 = tmp_10*tmp_25;
      real_t tmp_28 = tmp_26 + tmp_27;
      real_t tmp_29 = tmp_25*tmp_3;
      real_t tmp_30 = tmp_14*tmp_25;
      real_t tmp_31 = tmp_29 + tmp_30;
      real_t tmp_32 = 0.5*tmp_29 + 0.5*tmp_30;
      real_t tmp_33 = 2*tmp_32;
      real_t tmp_34 = 1.0*tmp_26 + 1.0*tmp_27;
      real_t tmp_35 = 2.0*tmp_26 + 2.0*tmp_27;
      real_t tmp_36 = 0.16666666666666666*tmp_21;
      real_t tmp_37 = 0.66666666666666663;
      real_t tmp_38 = 0.66666666666666663;
      real_t tmp_39 = tmp_5*(tmp_37 + tmp_38 - 3);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_40 + tmp_41;
      real_t tmp_43 = tmp_3*tmp_39;
      real_t tmp_44 = tmp_14*tmp_39;
      real_t tmp_45 = tmp_43 + tmp_44;
      real_t tmp_46 = 0.5*tmp_43 + 0.5*tmp_44;
      real_t tmp_47 = 2*tmp_46;
      real_t tmp_48 = 1.0*tmp_40 + 1.0*tmp_41;
      real_t tmp_49 = 2.0*tmp_40 + 2.0*tmp_41;
      real_t tmp_50 = 0.16666666666666666*tmp_21;
      real_t tmp_51 = (2.0/3.0)*tmp_12;
      real_t tmp_52 = tmp_6 - 1;
      real_t tmp_53 = tmp_1*tmp_5;
      real_t tmp_54 = tmp_52*tmp_53;
      real_t tmp_55 = -tmp_51*tmp_54;
      real_t tmp_56 = 2.0*tmp_5;
      real_t tmp_57 = tmp_14*tmp_56;
      real_t tmp_58 = tmp_52*tmp_57;
      real_t tmp_59 = 2.0*tmp_19;
      real_t tmp_60 = (2.0/3.0)*tmp_28;
      real_t tmp_61 = tmp_23 - 1;
      real_t tmp_62 = tmp_53*tmp_61;
      real_t tmp_63 = -tmp_60*tmp_62;
      real_t tmp_64 = tmp_57*tmp_61;
      real_t tmp_65 = 2.0*tmp_34;
      real_t tmp_66 = (2.0/3.0)*tmp_42;
      real_t tmp_67 = tmp_37 - 1;
      real_t tmp_68 = tmp_53*tmp_67;
      real_t tmp_69 = -tmp_66*tmp_68;
      real_t tmp_70 = tmp_57*tmp_67;
      real_t tmp_71 = 2.0*tmp_48;
      real_t tmp_72 = tmp_7 - 1;
      real_t tmp_73 = tmp_10*tmp_5;
      real_t tmp_74 = tmp_72*tmp_73;
      real_t tmp_75 = -tmp_51*tmp_74;
      real_t tmp_76 = tmp_3*tmp_56;
      real_t tmp_77 = tmp_72*tmp_76;
      real_t tmp_78 = tmp_24 - 1;
      real_t tmp_79 = tmp_73*tmp_78;
      real_t tmp_80 = -tmp_60*tmp_79;
      real_t tmp_81 = tmp_76*tmp_78;
      real_t tmp_82 = tmp_38 - 1;
      real_t tmp_83 = tmp_73*tmp_82;
      real_t tmp_84 = -tmp_66*tmp_83;
      real_t tmp_85 = tmp_76*tmp_82;
      real_t tmp_86 = tmp_6*tmp_73;
      real_t tmp_87 = tmp_53*tmp_7;
      real_t tmp_88 = tmp_86 + tmp_87;
      real_t tmp_89 = -tmp_51*tmp_88;
      real_t tmp_90 = 8.0*tmp_5;
      real_t tmp_91 = tmp_10*tmp_90;
      real_t tmp_92 = 0.16666666666666666*tmp_91;
      real_t tmp_93 = tmp_1*tmp_90;
      real_t tmp_94 = 0.66666666666666663*tmp_93;
      real_t tmp_95 = tmp_92 + tmp_94;
      real_t tmp_96 = 4.0*tmp_5;
      real_t tmp_97 = tmp_3*tmp_96;
      real_t tmp_98 = 0.16666666666666666*tmp_97;
      real_t tmp_99 = tmp_14*tmp_96;
      real_t tmp_100 = 0.66666666666666663*tmp_99;
      real_t tmp_101 = tmp_100 + tmp_98;
      real_t tmp_102 = tmp_23*tmp_73;
      real_t tmp_103 = tmp_24*tmp_53;
      real_t tmp_104 = tmp_102 + tmp_103;
      real_t tmp_105 = -tmp_104*tmp_60;
      real_t tmp_106 = 0.66666666666666663*tmp_91;
      real_t tmp_107 = 0.16666666666666666*tmp_93;
      real_t tmp_108 = tmp_106 + tmp_107;
      real_t tmp_109 = 0.66666666666666663*tmp_97;
      real_t tmp_110 = 0.16666666666666666*tmp_99;
      real_t tmp_111 = tmp_109 + tmp_110;
      real_t tmp_112 = tmp_37*tmp_73;
      real_t tmp_113 = tmp_38*tmp_53;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = -tmp_114*tmp_66;
      real_t tmp_116 = 0.16666666666666666*tmp_91;
      real_t tmp_117 = 0.16666666666666666*tmp_93;
      real_t tmp_118 = tmp_116 + tmp_117;
      real_t tmp_119 = 0.16666666666666666*tmp_97;
      real_t tmp_120 = 0.16666666666666666*tmp_99;
      real_t tmp_121 = tmp_119 + tmp_120;
      real_t tmp_122 = tmp_5*(-tmp_6 - 1.333333333333333);
      real_t tmp_123 = tmp_10*tmp_122;
      real_t tmp_124 = tmp_123 - tmp_87;
      real_t tmp_125 = -tmp_124*tmp_51;
      real_t tmp_126 = tmp_122*tmp_3;
      real_t tmp_127 = -tmp_100 + tmp_126;
      real_t tmp_128 = 2.0*tmp_123 - tmp_94;
      real_t tmp_129 = tmp_5*(2.666666666666667 - tmp_23);
      real_t tmp_130 = tmp_10*tmp_129;
      real_t tmp_131 = -tmp_103 + tmp_130;
      real_t tmp_132 = -tmp_131*tmp_60;
      real_t tmp_133 = tmp_129*tmp_3;
      real_t tmp_134 = -tmp_110 + tmp_133;
      real_t tmp_135 = -tmp_107 + 2.0*tmp_130;
      real_t tmp_136 = tmp_5*(2.666666666666667 - tmp_37);
      real_t tmp_137 = tmp_10*tmp_136;
      real_t tmp_138 = -tmp_113 + tmp_137;
      real_t tmp_139 = -tmp_138*tmp_66;
      real_t tmp_140 = tmp_136*tmp_3;
      real_t tmp_141 = -tmp_120 + tmp_140;
      real_t tmp_142 = -tmp_117 + 2.0*tmp_137;
      real_t tmp_143 = tmp_5*(2.666666666666667 - tmp_7);
      real_t tmp_144 = tmp_1*tmp_143;
      real_t tmp_145 = tmp_144 - tmp_86;
      real_t tmp_146 = -tmp_145*tmp_51;
      real_t tmp_147 = tmp_14*tmp_143;
      real_t tmp_148 = tmp_147 - tmp_98;
      real_t tmp_149 = 2.0*tmp_144 - tmp_92;
      real_t tmp_150 = tmp_5*(-tmp_24 - 1.333333333333333);
      real_t tmp_151 = tmp_1*tmp_150;
      real_t tmp_152 = -tmp_102 + tmp_151;
      real_t tmp_153 = -tmp_152*tmp_60;
      real_t tmp_154 = tmp_14*tmp_150;
      real_t tmp_155 = -tmp_109 + tmp_154;
      real_t tmp_156 = -tmp_106 + 2.0*tmp_151;
      real_t tmp_157 = tmp_5*(2.666666666666667 - tmp_38);
      real_t tmp_158 = tmp_1*tmp_157;
      real_t tmp_159 = -tmp_112 + tmp_158;
      real_t tmp_160 = -tmp_159*tmp_66;
      real_t tmp_161 = tmp_14*tmp_157;
      real_t tmp_162 = -tmp_119 + tmp_161;
      real_t tmp_163 = -tmp_116 + 2.0*tmp_158;
      real_t tmp_164 = 1.0*tmp_5;
      real_t tmp_165 = tmp_14*tmp_164;
      real_t tmp_166 = tmp_165*tmp_52;
      real_t tmp_167 = 1.0*tmp_54;
      real_t tmp_168 = tmp_165*tmp_61;
      real_t tmp_169 = 1.0*tmp_62;
      real_t tmp_170 = tmp_165*tmp_67;
      real_t tmp_171 = 1.0*tmp_68;
      real_t tmp_172 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_173 = tmp_172*(tmp_52*tmp_52);
      real_t tmp_174 = 1.0*(tmp_14*tmp_14);
      real_t tmp_175 = 1.3333333333333335*(tmp_1*tmp_1);
      real_t tmp_176 = tmp_172*(tmp_61*tmp_61);
      real_t tmp_177 = tmp_172*(tmp_67*tmp_67);
      real_t tmp_178 = tmp_172*tmp_52*tmp_72;
      real_t tmp_179 = 1.0*tmp_14*tmp_3;
      real_t tmp_180 = 1.3333333333333335*tmp_1*tmp_10;
      real_t tmp_181 = tmp_172*tmp_179;
      real_t tmp_182 = tmp_61*tmp_78;
      real_t tmp_183 = tmp_172*tmp_180;
      real_t tmp_184 = tmp_67*tmp_82;
      real_t tmp_185 = tmp_22*(tmp_178*tmp_179 + tmp_178*tmp_180) + tmp_36*(tmp_181*tmp_182 + tmp_182*tmp_183) + tmp_50*(tmp_181*tmp_184 + tmp_183*tmp_184);
      real_t tmp_186 = (2.0/3.0)*tmp_88;
      real_t tmp_187 = -tmp_186*tmp_54;
      real_t tmp_188 = (2.0/3.0)*tmp_104;
      real_t tmp_189 = -tmp_188*tmp_62;
      real_t tmp_190 = (2.0/3.0)*tmp_114;
      real_t tmp_191 = -tmp_190*tmp_68;
      real_t tmp_192 = (2.0/3.0)*tmp_124;
      real_t tmp_193 = -tmp_192*tmp_54;
      real_t tmp_194 = (2.0/3.0)*tmp_131;
      real_t tmp_195 = -tmp_194*tmp_62;
      real_t tmp_196 = (2.0/3.0)*tmp_138;
      real_t tmp_197 = -tmp_196*tmp_68;
      real_t tmp_198 = (2.0/3.0)*tmp_145;
      real_t tmp_199 = -tmp_198*tmp_54;
      real_t tmp_200 = (2.0/3.0)*tmp_152;
      real_t tmp_201 = -tmp_200*tmp_62;
      real_t tmp_202 = (2.0/3.0)*tmp_159;
      real_t tmp_203 = -tmp_202*tmp_68;
      real_t tmp_204 = tmp_164*tmp_3;
      real_t tmp_205 = tmp_204*tmp_72;
      real_t tmp_206 = 1.0*tmp_74;
      real_t tmp_207 = tmp_204*tmp_78;
      real_t tmp_208 = 1.0*tmp_79;
      real_t tmp_209 = tmp_204*tmp_82;
      real_t tmp_210 = 1.0*tmp_83;
      real_t tmp_211 = tmp_172*(tmp_72*tmp_72);
      real_t tmp_212 = 1.0*(tmp_3*tmp_3);
      real_t tmp_213 = 1.3333333333333335*(tmp_10*tmp_10);
      real_t tmp_214 = tmp_172*(tmp_78*tmp_78);
      real_t tmp_215 = tmp_172*(tmp_82*tmp_82);
      real_t tmp_216 = -tmp_186*tmp_74;
      real_t tmp_217 = -tmp_188*tmp_79;
      real_t tmp_218 = -tmp_190*tmp_83;
      real_t tmp_219 = -tmp_192*tmp_74;
      real_t tmp_220 = -tmp_194*tmp_79;
      real_t tmp_221 = -tmp_196*tmp_83;
      real_t tmp_222 = -tmp_198*tmp_74;
      real_t tmp_223 = -tmp_200*tmp_79;
      real_t tmp_224 = -tmp_202*tmp_83;
      real_t tmp_225 = 0.16666666666666666*tmp_76;
      real_t tmp_226 = 0.66666666666666663*tmp_57;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = 2*tmp_227;
      real_t tmp_229 = tmp_10*tmp_96;
      real_t tmp_230 = 0.16666666666666666*tmp_229;
      real_t tmp_231 = tmp_1*tmp_96;
      real_t tmp_232 = 0.66666666666666663*tmp_231;
      real_t tmp_233 = tmp_230 + tmp_232;
      real_t tmp_234 = 0.66666666666666663*tmp_76;
      real_t tmp_235 = 0.16666666666666666*tmp_57;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = 2*tmp_236;
      real_t tmp_238 = 0.66666666666666663*tmp_229;
      real_t tmp_239 = 0.16666666666666666*tmp_231;
      real_t tmp_240 = tmp_238 + tmp_239;
      real_t tmp_241 = 0.16666666666666666*tmp_76;
      real_t tmp_242 = 0.16666666666666666*tmp_57;
      real_t tmp_243 = tmp_241 + tmp_242;
      real_t tmp_244 = 2*tmp_243;
      real_t tmp_245 = 0.16666666666666666*tmp_229;
      real_t tmp_246 = 0.16666666666666666*tmp_231;
      real_t tmp_247 = tmp_245 + tmp_246;
      real_t tmp_248 = 2.0*tmp_233;
      real_t tmp_249 = 2.0*tmp_240;
      real_t tmp_250 = 2.0*tmp_247;
      real_t tmp_251 = -tmp_124*tmp_186;
      real_t tmp_252 = -tmp_131*tmp_188;
      real_t tmp_253 = -tmp_138*tmp_190;
      real_t tmp_254 = -tmp_145*tmp_186;
      real_t tmp_255 = -tmp_152*tmp_188;
      real_t tmp_256 = -tmp_159*tmp_190;
      real_t tmp_257 = 0.5*tmp_126 - tmp_226;
      real_t tmp_258 = 2*tmp_257;
      real_t tmp_259 = 1.0*tmp_123 - tmp_232;
      real_t tmp_260 = 0.5*tmp_133 - tmp_235;
      real_t tmp_261 = 2*tmp_260;
      real_t tmp_262 = 1.0*tmp_130 - tmp_239;
      real_t tmp_263 = 0.5*tmp_140 - tmp_242;
      real_t tmp_264 = 2*tmp_263;
      real_t tmp_265 = 1.0*tmp_137 - tmp_246;
      real_t tmp_266 = 2.0*tmp_259;
      real_t tmp_267 = 2.0*tmp_262;
      real_t tmp_268 = 2.0*tmp_265;
      real_t tmp_269 = -tmp_145*tmp_192;
      real_t tmp_270 = -tmp_152*tmp_194;
      real_t tmp_271 = -tmp_159*tmp_196;
      real_t tmp_272 = 0.5*tmp_147 - tmp_225;
      real_t tmp_273 = 2*tmp_272;
      real_t tmp_274 = 1.0*tmp_144 - tmp_230;
      real_t tmp_275 = 0.5*tmp_154 - tmp_234;
      real_t tmp_276 = 2*tmp_275;
      real_t tmp_277 = 1.0*tmp_151 - tmp_238;
      real_t tmp_278 = 0.5*tmp_161 - tmp_241;
      real_t tmp_279 = 2*tmp_278;
      real_t tmp_280 = 1.0*tmp_158 - tmp_245;
      real_t tmp_281 = 2.0*tmp_274;
      real_t tmp_282 = 2.0*tmp_277;
      real_t tmp_283 = 2.0*tmp_280;
      real_t a_0_0 = tmp_22*(-2.0/3.0*(tmp_12*tmp_12) + tmp_16*tmp_18 + tmp_19*tmp_20) + tmp_36*(-2.0/3.0*(tmp_28*tmp_28) + tmp_31*tmp_33 + tmp_34*tmp_35) + tmp_50*(-2.0/3.0*(tmp_42*tmp_42) + tmp_45*tmp_47 + tmp_48*tmp_49);
      real_t a_0_1 = tmp_22*(tmp_17*tmp_58 + tmp_54*tmp_59 + tmp_55) + tmp_36*(tmp_32*tmp_64 + tmp_62*tmp_65 + tmp_63) + tmp_50*(tmp_46*tmp_70 + tmp_68*tmp_71 + tmp_69);
      real_t a_0_2 = tmp_22*(tmp_17*tmp_77 + tmp_59*tmp_74 + tmp_75) + tmp_36*(tmp_32*tmp_81 + tmp_65*tmp_79 + tmp_80) + tmp_50*(tmp_46*tmp_85 + tmp_71*tmp_83 + tmp_84);
      real_t a_0_3 = tmp_22*(tmp_101*tmp_18 + tmp_19*tmp_95 + tmp_89) + tmp_36*(tmp_105 + tmp_108*tmp_34 + tmp_111*tmp_33) + tmp_50*(tmp_115 + tmp_118*tmp_48 + tmp_121*tmp_47);
      real_t a_0_4 = tmp_22*(tmp_125 + tmp_127*tmp_18 + tmp_128*tmp_19) + tmp_36*(tmp_132 + tmp_134*tmp_33 + tmp_135*tmp_34) + tmp_50*(tmp_139 + tmp_141*tmp_47 + tmp_142*tmp_48);
      real_t a_0_5 = tmp_22*(tmp_146 + tmp_148*tmp_18 + tmp_149*tmp_19) + tmp_36*(tmp_153 + tmp_155*tmp_33 + tmp_156*tmp_34) + tmp_50*(tmp_160 + tmp_162*tmp_47 + tmp_163*tmp_48);
      real_t a_1_0 = tmp_22*(tmp_16*tmp_166 + tmp_167*tmp_20 + tmp_55) + tmp_36*(tmp_168*tmp_31 + tmp_169*tmp_35 + tmp_63) + tmp_50*(tmp_170*tmp_45 + tmp_171*tmp_49 + tmp_69);
      real_t a_1_1 = tmp_22*(tmp_173*tmp_174 + tmp_173*tmp_175) + tmp_36*(tmp_174*tmp_176 + tmp_175*tmp_176) + tmp_50*(tmp_174*tmp_177 + tmp_175*tmp_177);
      real_t a_1_2 = tmp_185;
      real_t a_1_3 = tmp_22*(tmp_101*tmp_166 + tmp_167*tmp_95 + tmp_187) + tmp_36*(tmp_108*tmp_169 + tmp_111*tmp_168 + tmp_189) + tmp_50*(tmp_118*tmp_171 + tmp_121*tmp_170 + tmp_191);
      real_t a_1_4 = tmp_22*(tmp_127*tmp_166 + tmp_128*tmp_167 + tmp_193) + tmp_36*(tmp_134*tmp_168 + tmp_135*tmp_169 + tmp_195) + tmp_50*(tmp_141*tmp_170 + tmp_142*tmp_171 + tmp_197);
      real_t a_1_5 = tmp_22*(tmp_148*tmp_166 + tmp_149*tmp_167 + tmp_199) + tmp_36*(tmp_155*tmp_168 + tmp_156*tmp_169 + tmp_201) + tmp_50*(tmp_162*tmp_170 + tmp_163*tmp_171 + tmp_203);
      real_t a_2_0 = tmp_22*(tmp_16*tmp_205 + tmp_20*tmp_206 + tmp_75) + tmp_36*(tmp_207*tmp_31 + tmp_208*tmp_35 + tmp_80) + tmp_50*(tmp_209*tmp_45 + tmp_210*tmp_49 + tmp_84);
      real_t a_2_1 = tmp_185;
      real_t a_2_2 = tmp_22*(tmp_211*tmp_212 + tmp_211*tmp_213) + tmp_36*(tmp_212*tmp_214 + tmp_213*tmp_214) + tmp_50*(tmp_212*tmp_215 + tmp_213*tmp_215);
      real_t a_2_3 = tmp_22*(tmp_101*tmp_205 + tmp_206*tmp_95 + tmp_216) + tmp_36*(tmp_108*tmp_208 + tmp_111*tmp_207 + tmp_217) + tmp_50*(tmp_118*tmp_210 + tmp_121*tmp_209 + tmp_218);
      real_t a_2_4 = tmp_22*(tmp_127*tmp_205 + tmp_128*tmp_206 + tmp_219) + tmp_36*(tmp_134*tmp_207 + tmp_135*tmp_208 + tmp_220) + tmp_50*(tmp_141*tmp_209 + tmp_142*tmp_210 + tmp_221);
      real_t a_2_5 = tmp_22*(tmp_148*tmp_205 + tmp_149*tmp_206 + tmp_222) + tmp_36*(tmp_155*tmp_207 + tmp_156*tmp_208 + tmp_223) + tmp_50*(tmp_162*tmp_209 + tmp_163*tmp_210 + tmp_224);
      real_t a_3_0 = tmp_22*(tmp_16*tmp_228 + tmp_20*tmp_233 + tmp_89) + tmp_36*(tmp_105 + tmp_237*tmp_31 + tmp_240*tmp_35) + tmp_50*(tmp_115 + tmp_244*tmp_45 + tmp_247*tmp_49);
      real_t a_3_1 = tmp_22*(tmp_187 + tmp_227*tmp_58 + tmp_248*tmp_54) + tmp_36*(tmp_189 + tmp_236*tmp_64 + tmp_249*tmp_62) + tmp_50*(tmp_191 + tmp_243*tmp_70 + tmp_250*tmp_68);
      real_t a_3_2 = tmp_22*(tmp_216 + tmp_227*tmp_77 + tmp_248*tmp_74) + tmp_36*(tmp_217 + tmp_236*tmp_81 + tmp_249*tmp_79) + tmp_50*(tmp_218 + tmp_243*tmp_85 + tmp_250*tmp_83);
      real_t a_3_3 = tmp_22*(tmp_101*tmp_228 + tmp_233*tmp_95 - 2.0/3.0*(tmp_88*tmp_88)) + tmp_36*(-2.0/3.0*(tmp_104*tmp_104) + tmp_108*tmp_240 + tmp_111*tmp_237) + tmp_50*(-2.0/3.0*(tmp_114*tmp_114) + tmp_118*tmp_247 + tmp_121*tmp_244);
      real_t a_3_4 = tmp_22*(tmp_127*tmp_228 + tmp_128*tmp_233 + tmp_251) + tmp_36*(tmp_134*tmp_237 + tmp_135*tmp_240 + tmp_252) + tmp_50*(tmp_141*tmp_244 + tmp_142*tmp_247 + tmp_253);
      real_t a_3_5 = tmp_22*(tmp_148*tmp_228 + tmp_149*tmp_233 + tmp_254) + tmp_36*(tmp_155*tmp_237 + tmp_156*tmp_240 + tmp_255) + tmp_50*(tmp_162*tmp_244 + tmp_163*tmp_247 + tmp_256);
      real_t a_4_0 = tmp_22*(tmp_125 + tmp_16*tmp_258 + tmp_20*tmp_259) + tmp_36*(tmp_132 + tmp_261*tmp_31 + tmp_262*tmp_35) + tmp_50*(tmp_139 + tmp_264*tmp_45 + tmp_265*tmp_49);
      real_t a_4_1 = tmp_22*(tmp_193 + tmp_257*tmp_58 + tmp_266*tmp_54) + tmp_36*(tmp_195 + tmp_260*tmp_64 + tmp_267*tmp_62) + tmp_50*(tmp_197 + tmp_263*tmp_70 + tmp_268*tmp_68);
      real_t a_4_2 = tmp_22*(tmp_219 + tmp_257*tmp_77 + tmp_266*tmp_74) + tmp_36*(tmp_220 + tmp_260*tmp_81 + tmp_267*tmp_79) + tmp_50*(tmp_221 + tmp_263*tmp_85 + tmp_268*tmp_83);
      real_t a_4_3 = tmp_22*(tmp_101*tmp_258 + tmp_251 + tmp_259*tmp_95) + tmp_36*(tmp_108*tmp_262 + tmp_111*tmp_261 + tmp_252) + tmp_50*(tmp_118*tmp_265 + tmp_121*tmp_264 + tmp_253);
      real_t a_4_4 = tmp_22*(-2.0/3.0*(tmp_124*tmp_124) + tmp_127*tmp_258 + tmp_128*tmp_259) + tmp_36*(-2.0/3.0*(tmp_131*tmp_131) + tmp_134*tmp_261 + tmp_135*tmp_262) + tmp_50*(-2.0/3.0*(tmp_138*tmp_138) + tmp_141*tmp_264 + tmp_142*tmp_265);
      real_t a_4_5 = tmp_22*(tmp_148*tmp_258 + tmp_149*tmp_259 + tmp_269) + tmp_36*(tmp_155*tmp_261 + tmp_156*tmp_262 + tmp_270) + tmp_50*(tmp_162*tmp_264 + tmp_163*tmp_265 + tmp_271);
      real_t a_5_0 = tmp_22*(tmp_146 + tmp_16*tmp_273 + tmp_20*tmp_274) + tmp_36*(tmp_153 + tmp_276*tmp_31 + tmp_277*tmp_35) + tmp_50*(tmp_160 + tmp_279*tmp_45 + tmp_280*tmp_49);
      real_t a_5_1 = tmp_22*(tmp_199 + tmp_272*tmp_58 + tmp_281*tmp_54) + tmp_36*(tmp_201 + tmp_275*tmp_64 + tmp_282*tmp_62) + tmp_50*(tmp_203 + tmp_278*tmp_70 + tmp_283*tmp_68);
      real_t a_5_2 = tmp_22*(tmp_222 + tmp_272*tmp_77 + tmp_281*tmp_74) + tmp_36*(tmp_223 + tmp_275*tmp_81 + tmp_282*tmp_79) + tmp_50*(tmp_224 + tmp_278*tmp_85 + tmp_283*tmp_83);
      real_t a_5_3 = tmp_22*(tmp_101*tmp_273 + tmp_254 + tmp_274*tmp_95) + tmp_36*(tmp_108*tmp_277 + tmp_111*tmp_276 + tmp_255) + tmp_50*(tmp_118*tmp_280 + tmp_121*tmp_279 + tmp_256);
      real_t a_5_4 = tmp_22*(tmp_127*tmp_273 + tmp_128*tmp_274 + tmp_269) + tmp_36*(tmp_134*tmp_276 + tmp_135*tmp_277 + tmp_270) + tmp_50*(tmp_141*tmp_279 + tmp_142*tmp_280 + tmp_271);
      real_t a_5_5 = tmp_22*(-2.0/3.0*(tmp_145*tmp_145) + tmp_148*tmp_273 + tmp_149*tmp_274) + tmp_36*(-2.0/3.0*(tmp_152*tmp_152) + tmp_155*tmp_276 + tmp_156*tmp_277) + tmp_50*(-2.0/3.0*(tmp_159*tmp_159) + tmp_162*tmp_279 + tmp_163*tmp_280);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_0_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = tmp_10 + tmp_8;
      real_t tmp_12 = tmp_3*tmp_7;
      real_t tmp_13 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_14 = tmp_13*tmp_7;
      real_t tmp_15 = 0.5*tmp_12 + 0.5*tmp_14;
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 1.0*tmp_10 + 1.0*tmp_8;
      real_t tmp_18 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_19 = 0.16666666666666666*tmp_18;
      real_t tmp_20 = 2.6666666666666665;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_4*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22;
      real_t tmp_24 = tmp_22*tmp_9;
      real_t tmp_25 = tmp_23 + tmp_24;
      real_t tmp_26 = tmp_22*tmp_3;
      real_t tmp_27 = tmp_13*tmp_22;
      real_t tmp_28 = 0.5*tmp_26 + 0.5*tmp_27;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_23 + 1.0*tmp_24;
      real_t tmp_31 = 0.16666666666666666*tmp_18;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = 0.66666666666666663;
      real_t tmp_34 = tmp_4*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_34*tmp_9;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_3*tmp_34;
      real_t tmp_39 = tmp_13*tmp_34;
      real_t tmp_40 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 1.0*tmp_35 + 1.0*tmp_36;
      real_t tmp_43 = 0.16666666666666666*tmp_18;
      real_t tmp_44 = (2.0/3.0)*tmp_11;
      real_t tmp_45 = tmp_5 - 1;
      real_t tmp_46 = tmp_1*tmp_4;
      real_t tmp_47 = tmp_45*tmp_46;
      real_t tmp_48 = 2.0*tmp_4;
      real_t tmp_49 = tmp_13*tmp_48;
      real_t tmp_50 = 2.0*tmp_17;
      real_t tmp_51 = (2.0/3.0)*tmp_25;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_46*tmp_52;
      real_t tmp_54 = 2.0*tmp_30;
      real_t tmp_55 = (2.0/3.0)*tmp_37;
      real_t tmp_56 = tmp_32 - 1;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = 2.0*tmp_42;
      real_t tmp_59 = tmp_6 - 1;
      real_t tmp_60 = tmp_4*tmp_9;
      real_t tmp_61 = tmp_59*tmp_60;
      real_t tmp_62 = tmp_3*tmp_48;
      real_t tmp_63 = tmp_21 - 1;
      real_t tmp_64 = tmp_60*tmp_63;
      real_t tmp_65 = tmp_33 - 1;
      real_t tmp_66 = tmp_60*tmp_65;
      real_t tmp_67 = tmp_5*tmp_60;
      real_t tmp_68 = tmp_46*tmp_6;
      real_t tmp_69 = 8.0*tmp_4;
      real_t tmp_70 = tmp_69*tmp_9;
      real_t tmp_71 = 0.16666666666666666*tmp_70;
      real_t tmp_72 = tmp_1*tmp_69;
      real_t tmp_73 = 0.66666666666666663*tmp_72;
      real_t tmp_74 = 4.0*tmp_4;
      real_t tmp_75 = tmp_3*tmp_74;
      real_t tmp_76 = 0.16666666666666666*tmp_75;
      real_t tmp_77 = tmp_13*tmp_74;
      real_t tmp_78 = 0.66666666666666663*tmp_77;
      real_t tmp_79 = tmp_20*tmp_60;
      real_t tmp_80 = tmp_21*tmp_46;
      real_t tmp_81 = 0.66666666666666663*tmp_70;
      real_t tmp_82 = 0.16666666666666666*tmp_72;
      real_t tmp_83 = 0.66666666666666663*tmp_75;
      real_t tmp_84 = 0.16666666666666666*tmp_77;
      real_t tmp_85 = tmp_32*tmp_60;
      real_t tmp_86 = tmp_33*tmp_46;
      real_t tmp_87 = 0.16666666666666666*tmp_70;
      real_t tmp_88 = 0.16666666666666666*tmp_72;
      real_t tmp_89 = 0.16666666666666666*tmp_75;
      real_t tmp_90 = 0.16666666666666666*tmp_77;
      real_t tmp_91 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_92 = tmp_9*tmp_91;
      real_t tmp_93 = tmp_4*(2.666666666666667 - tmp_20);
      real_t tmp_94 = tmp_9*tmp_93;
      real_t tmp_95 = tmp_4*(2.666666666666667 - tmp_32);
      real_t tmp_96 = tmp_9*tmp_95;
      real_t tmp_97 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_98 = tmp_1*tmp_97;
      real_t tmp_99 = tmp_4*(-tmp_21 - 1.333333333333333);
      real_t tmp_100 = tmp_1*tmp_99;
      real_t tmp_101 = tmp_4*(2.666666666666667 - tmp_33);
      real_t tmp_102 = tmp_1*tmp_101;
      real_t a_0_0 = tmp_19*(-2.0/3.0*(tmp_11*tmp_11) + tmp_16*(tmp_12 + tmp_14) + tmp_17*(2.0*tmp_10 + 2.0*tmp_8)) + tmp_31*(-2.0/3.0*(tmp_25*tmp_25) + tmp_29*(tmp_26 + tmp_27) + tmp_30*(2.0*tmp_23 + 2.0*tmp_24)) + tmp_43*(-2.0/3.0*(tmp_37*tmp_37) + tmp_41*(tmp_38 + tmp_39) + tmp_42*(2.0*tmp_35 + 2.0*tmp_36));
      real_t a_0_1 = tmp_19*(tmp_15*tmp_45*tmp_49 - tmp_44*tmp_47 + tmp_47*tmp_50) + tmp_31*(tmp_28*tmp_49*tmp_52 - tmp_51*tmp_53 + tmp_53*tmp_54) + tmp_43*(tmp_40*tmp_49*tmp_56 - tmp_55*tmp_57 + tmp_57*tmp_58);
      real_t a_0_2 = tmp_19*(tmp_15*tmp_59*tmp_62 - tmp_44*tmp_61 + tmp_50*tmp_61) + tmp_31*(tmp_28*tmp_62*tmp_63 - tmp_51*tmp_64 + tmp_54*tmp_64) + tmp_43*(tmp_40*tmp_62*tmp_65 - tmp_55*tmp_66 + tmp_58*tmp_66);
      real_t a_0_3 = tmp_19*(tmp_16*(tmp_76 + tmp_78) + tmp_17*(tmp_71 + tmp_73) - tmp_44*(tmp_67 + tmp_68)) + tmp_31*(tmp_29*(tmp_83 + tmp_84) + tmp_30*(tmp_81 + tmp_82) - tmp_51*(tmp_79 + tmp_80)) + tmp_43*(tmp_41*(tmp_89 + tmp_90) + tmp_42*(tmp_87 + tmp_88) - tmp_55*(tmp_85 + tmp_86));
      real_t a_0_4 = tmp_19*(tmp_16*(tmp_3*tmp_91 - tmp_78) + tmp_17*(-tmp_73 + 2.0*tmp_92) - tmp_44*(-tmp_68 + tmp_92)) + tmp_31*(tmp_29*(tmp_3*tmp_93 - tmp_84) + tmp_30*(-tmp_82 + 2.0*tmp_94) - tmp_51*(-tmp_80 + tmp_94)) + tmp_43*(tmp_41*(tmp_3*tmp_95 - tmp_90) + tmp_42*(-tmp_88 + 2.0*tmp_96) - tmp_55*(-tmp_86 + tmp_96));
      real_t a_0_5 = tmp_19*(tmp_16*(tmp_13*tmp_97 - tmp_76) + tmp_17*(-tmp_71 + 2.0*tmp_98) - tmp_44*(-tmp_67 + tmp_98)) + tmp_31*(tmp_29*(tmp_13*tmp_99 - tmp_83) + tmp_30*(2.0*tmp_100 - tmp_81) - tmp_51*(tmp_100 - tmp_79)) + tmp_43*(tmp_41*(tmp_101*tmp_13 - tmp_89) + tmp_42*(2.0*tmp_102 - tmp_87) - tmp_55*(tmp_102 - tmp_85));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_0_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_15 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_12 - tmp_17;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = 0.041666666666666657*tmp_63;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = 2.3416407864998732;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.041666666666666657*tmp_63;
      real_t tmp_88 = 2.3416407864998732;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.041666666666666657*tmp_63;
      real_t tmp_111 = 0.55278640450004235;
      real_t tmp_112 = 0.55278640450004235;
      real_t tmp_113 = 0.55278640450004235;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.041666666666666657*tmp_63;
      real_t tmp_134 = (2.0/3.0)*tmp_30;
      real_t tmp_135 = tmp_21 - 1.0;
      real_t tmp_136 = tmp_20*tmp_28;
      real_t tmp_137 = tmp_135*tmp_136;
      real_t tmp_138 = -tmp_134*tmp_137;
      real_t tmp_139 = 2.0*tmp_20;
      real_t tmp_140 = tmp_135*tmp_139;
      real_t tmp_141 = tmp_140*tmp_35;
      real_t tmp_142 = tmp_140*tmp_44;
      real_t tmp_143 = 2.0*tmp_49;
      real_t tmp_144 = (2.0/3.0)*tmp_72;
      real_t tmp_145 = tmp_65 - 1.0;
      real_t tmp_146 = tmp_136*tmp_145;
      real_t tmp_147 = -tmp_144*tmp_146;
      real_t tmp_148 = tmp_139*tmp_145;
      real_t tmp_149 = tmp_148*tmp_35;
      real_t tmp_150 = tmp_148*tmp_44;
      real_t tmp_151 = 2.0*tmp_85;
      real_t tmp_152 = (2.0/3.0)*tmp_95;
      real_t tmp_153 = tmp_88 - 1.0;
      real_t tmp_154 = tmp_136*tmp_153;
      real_t tmp_155 = -tmp_152*tmp_154;
      real_t tmp_156 = tmp_139*tmp_153;
      real_t tmp_157 = tmp_156*tmp_35;
      real_t tmp_158 = tmp_156*tmp_44;
      real_t tmp_159 = 2.0*tmp_108;
      real_t tmp_160 = (2.0/3.0)*tmp_118;
      real_t tmp_161 = tmp_111 - 1.0;
      real_t tmp_162 = tmp_136*tmp_161;
      real_t tmp_163 = -tmp_160*tmp_162;
      real_t tmp_164 = tmp_139*tmp_161;
      real_t tmp_165 = tmp_164*tmp_35;
      real_t tmp_166 = tmp_164*tmp_44;
      real_t tmp_167 = 2.0*tmp_131;
      real_t tmp_168 = tmp_22 - 1.0;
      real_t tmp_169 = tmp_20*tmp_26;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = -tmp_134*tmp_170;
      real_t tmp_172 = tmp_139*tmp_168;
      real_t tmp_173 = tmp_172*tmp_33;
      real_t tmp_174 = tmp_172*tmp_42;
      real_t tmp_175 = tmp_66 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = -tmp_144*tmp_176;
      real_t tmp_178 = tmp_139*tmp_175;
      real_t tmp_179 = tmp_178*tmp_33;
      real_t tmp_180 = tmp_178*tmp_42;
      real_t tmp_181 = tmp_89 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = -tmp_152*tmp_182;
      real_t tmp_184 = tmp_139*tmp_181;
      real_t tmp_185 = tmp_184*tmp_33;
      real_t tmp_186 = tmp_184*tmp_42;
      real_t tmp_187 = tmp_112 - 1.0;
      real_t tmp_188 = tmp_169*tmp_187;
      real_t tmp_189 = -tmp_160*tmp_188;
      real_t tmp_190 = tmp_139*tmp_187;
      real_t tmp_191 = tmp_190*tmp_33;
      real_t tmp_192 = tmp_190*tmp_42;
      real_t tmp_193 = tmp_23 - 1.0;
      real_t tmp_194 = tmp_20*tmp_8;
      real_t tmp_195 = tmp_193*tmp_194;
      real_t tmp_196 = -tmp_134*tmp_195;
      real_t tmp_197 = tmp_139*tmp_193;
      real_t tmp_198 = tmp_197*tmp_31;
      real_t tmp_199 = tmp_197*tmp_40;
      real_t tmp_200 = tmp_67 - 1.0;
      real_t tmp_201 = tmp_194*tmp_200;
      real_t tmp_202 = -tmp_144*tmp_201;
      real_t tmp_203 = tmp_139*tmp_200;
      real_t tmp_204 = tmp_203*tmp_31;
      real_t tmp_205 = tmp_203*tmp_40;
      real_t tmp_206 = tmp_90 - 1.0;
      real_t tmp_207 = tmp_194*tmp_206;
      real_t tmp_208 = -tmp_152*tmp_207;
      real_t tmp_209 = tmp_139*tmp_206;
      real_t tmp_210 = tmp_209*tmp_31;
      real_t tmp_211 = tmp_209*tmp_40;
      real_t tmp_212 = tmp_113 - 1.0;
      real_t tmp_213 = tmp_194*tmp_212;
      real_t tmp_214 = -tmp_160*tmp_213;
      real_t tmp_215 = tmp_139*tmp_212;
      real_t tmp_216 = tmp_215*tmp_31;
      real_t tmp_217 = tmp_215*tmp_40;
      real_t tmp_218 = tmp_194*tmp_22;
      real_t tmp_219 = tmp_169*tmp_23;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = -tmp_134*tmp_220;
      real_t tmp_222 = 1.1055728090000847;
      real_t tmp_223 = tmp_194*tmp_222;
      real_t tmp_224 = 4.6832815729997463;
      real_t tmp_225 = tmp_169*tmp_224;
      real_t tmp_226 = tmp_223 + tmp_225;
      real_t tmp_227 = tmp_20*tmp_22;
      real_t tmp_228 = tmp_227*tmp_31;
      real_t tmp_229 = tmp_20*tmp_23;
      real_t tmp_230 = tmp_229*tmp_33;
      real_t tmp_231 = tmp_228 + tmp_230;
      real_t tmp_232 = tmp_227*tmp_40;
      real_t tmp_233 = tmp_229*tmp_42;
      real_t tmp_234 = tmp_232 + tmp_233;
      real_t tmp_235 = tmp_194*tmp_66;
      real_t tmp_236 = tmp_169*tmp_67;
      real_t tmp_237 = tmp_235 + tmp_236;
      real_t tmp_238 = -tmp_144*tmp_237;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_194*tmp_239;
      real_t tmp_241 = 1.1055728090000847;
      real_t tmp_242 = tmp_169*tmp_241;
      real_t tmp_243 = tmp_240 + tmp_242;
      real_t tmp_244 = tmp_20*tmp_66;
      real_t tmp_245 = tmp_244*tmp_31;
      real_t tmp_246 = tmp_20*tmp_67;
      real_t tmp_247 = tmp_246*tmp_33;
      real_t tmp_248 = tmp_245 + tmp_247;
      real_t tmp_249 = tmp_244*tmp_40;
      real_t tmp_250 = tmp_246*tmp_42;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_194*tmp_89;
      real_t tmp_253 = tmp_169*tmp_90;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = -tmp_152*tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_194*tmp_256;
      real_t tmp_258 = 1.1055728090000847;
      real_t tmp_259 = tmp_169*tmp_258;
      real_t tmp_260 = tmp_257 + tmp_259;
      real_t tmp_261 = tmp_20*tmp_89;
      real_t tmp_262 = tmp_261*tmp_31;
      real_t tmp_263 = tmp_20*tmp_90;
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_262 + tmp_264;
      real_t tmp_266 = tmp_261*tmp_40;
      real_t tmp_267 = tmp_263*tmp_42;
      real_t tmp_268 = tmp_266 + tmp_267;
      real_t tmp_269 = tmp_112*tmp_194;
      real_t tmp_270 = tmp_113*tmp_169;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = -tmp_160*tmp_271;
      real_t tmp_273 = 1.1055728090000847;
      real_t tmp_274 = tmp_194*tmp_273;
      real_t tmp_275 = 1.1055728090000847;
      real_t tmp_276 = tmp_169*tmp_275;
      real_t tmp_277 = tmp_274 + tmp_276;
      real_t tmp_278 = tmp_112*tmp_20;
      real_t tmp_279 = tmp_278*tmp_31;
      real_t tmp_280 = tmp_113*tmp_20;
      real_t tmp_281 = tmp_280*tmp_33;
      real_t tmp_282 = tmp_279 + tmp_281;
      real_t tmp_283 = tmp_278*tmp_40;
      real_t tmp_284 = tmp_280*tmp_42;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_194*tmp_21;
      real_t tmp_287 = tmp_136*tmp_23;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = -tmp_134*tmp_288;
      real_t tmp_290 = 1.1055728090000847;
      real_t tmp_291 = tmp_194*tmp_290;
      real_t tmp_292 = tmp_136*tmp_224;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_20*tmp_21;
      real_t tmp_295 = tmp_294*tmp_31;
      real_t tmp_296 = tmp_229*tmp_35;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_294*tmp_40;
      real_t tmp_299 = tmp_229*tmp_44;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_194*tmp_65;
      real_t tmp_302 = tmp_136*tmp_67;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = -tmp_144*tmp_303;
      real_t tmp_305 = 1.1055728090000847;
      real_t tmp_306 = tmp_194*tmp_305;
      real_t tmp_307 = tmp_136*tmp_241;
      real_t tmp_308 = tmp_306 + tmp_307;
      real_t tmp_309 = tmp_20*tmp_65;
      real_t tmp_310 = tmp_309*tmp_31;
      real_t tmp_311 = tmp_246*tmp_35;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_309*tmp_40;
      real_t tmp_314 = tmp_246*tmp_44;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_194*tmp_88;
      real_t tmp_317 = tmp_136*tmp_90;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = -tmp_152*tmp_318;
      real_t tmp_320 = 4.6832815729997463;
      real_t tmp_321 = tmp_194*tmp_320;
      real_t tmp_322 = tmp_136*tmp_258;
      real_t tmp_323 = tmp_321 + tmp_322;
      real_t tmp_324 = tmp_20*tmp_88;
      real_t tmp_325 = tmp_31*tmp_324;
      real_t tmp_326 = tmp_263*tmp_35;
      real_t tmp_327 = tmp_325 + tmp_326;
      real_t tmp_328 = tmp_324*tmp_40;
      real_t tmp_329 = tmp_263*tmp_44;
      real_t tmp_330 = tmp_328 + tmp_329;
      real_t tmp_331 = tmp_111*tmp_194;
      real_t tmp_332 = tmp_113*tmp_136;
      real_t tmp_333 = tmp_331 + tmp_332;
      real_t tmp_334 = -tmp_160*tmp_333;
      real_t tmp_335 = 1.1055728090000847;
      real_t tmp_336 = tmp_194*tmp_335;
      real_t tmp_337 = tmp_136*tmp_275;
      real_t tmp_338 = tmp_336 + tmp_337;
      real_t tmp_339 = tmp_111*tmp_20;
      real_t tmp_340 = tmp_31*tmp_339;
      real_t tmp_341 = tmp_280*tmp_35;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = tmp_339*tmp_40;
      real_t tmp_344 = tmp_280*tmp_44;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_169*tmp_21;
      real_t tmp_347 = tmp_136*tmp_22;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_134*tmp_348;
      real_t tmp_350 = tmp_169*tmp_290;
      real_t tmp_351 = tmp_136*tmp_222;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = tmp_294*tmp_33;
      real_t tmp_354 = tmp_227*tmp_35;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_294*tmp_42;
      real_t tmp_357 = tmp_227*tmp_44;
      real_t tmp_358 = tmp_356 + tmp_357;
      real_t tmp_359 = tmp_169*tmp_65;
      real_t tmp_360 = tmp_136*tmp_66;
      real_t tmp_361 = tmp_359 + tmp_360;
      real_t tmp_362 = -tmp_144*tmp_361;
      real_t tmp_363 = tmp_169*tmp_305;
      real_t tmp_364 = tmp_136*tmp_239;
      real_t tmp_365 = tmp_363 + tmp_364;
      real_t tmp_366 = tmp_309*tmp_33;
      real_t tmp_367 = tmp_244*tmp_35;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_309*tmp_42;
      real_t tmp_370 = tmp_244*tmp_44;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_169*tmp_88;
      real_t tmp_373 = tmp_136*tmp_89;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = -tmp_152*tmp_374;
      real_t tmp_376 = tmp_169*tmp_320;
      real_t tmp_377 = tmp_136*tmp_256;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_324*tmp_33;
      real_t tmp_380 = tmp_261*tmp_35;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_324*tmp_42;
      real_t tmp_383 = tmp_261*tmp_44;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_111*tmp_169;
      real_t tmp_386 = tmp_112*tmp_136;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = -tmp_160*tmp_387;
      real_t tmp_389 = tmp_169*tmp_335;
      real_t tmp_390 = tmp_136*tmp_273;
      real_t tmp_391 = tmp_389 + tmp_390;
      real_t tmp_392 = tmp_33*tmp_339;
      real_t tmp_393 = tmp_278*tmp_35;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = tmp_339*tmp_42;
      real_t tmp_396 = tmp_278*tmp_44;
      real_t tmp_397 = tmp_395 + tmp_396;
      real_t tmp_398 = -tmp_22;
      real_t tmp_399 = 4.0 - tmp_21;
      real_t tmp_400 = tmp_20*(-tmp_224 + tmp_398 + tmp_399);
      real_t tmp_401 = tmp_400*tmp_8;
      real_t tmp_402 = -tmp_219 - tmp_287;
      real_t tmp_403 = tmp_401 + tmp_402;
      real_t tmp_404 = -tmp_134*tmp_403;
      real_t tmp_405 = tmp_31*tmp_400;
      real_t tmp_406 = -tmp_230 - tmp_296 + tmp_405;
      real_t tmp_407 = tmp_40*tmp_400;
      real_t tmp_408 = -tmp_233 - tmp_299 + tmp_407;
      real_t tmp_409 = -tmp_225 - tmp_292 + 2.0*tmp_401;
      real_t tmp_410 = -tmp_66;
      real_t tmp_411 = 4.0 - tmp_65;
      real_t tmp_412 = tmp_20*(-tmp_241 + tmp_410 + tmp_411);
      real_t tmp_413 = tmp_412*tmp_8;
      real_t tmp_414 = -tmp_236 - tmp_302;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = -tmp_144*tmp_415;
      real_t tmp_417 = tmp_31*tmp_412;
      real_t tmp_418 = -tmp_247 - tmp_311 + tmp_417;
      real_t tmp_419 = tmp_40*tmp_412;
      real_t tmp_420 = -tmp_250 - tmp_314 + tmp_419;
      real_t tmp_421 = -tmp_242 - tmp_307 + 2.0*tmp_413;
      real_t tmp_422 = -tmp_89;
      real_t tmp_423 = 4.0 - tmp_88;
      real_t tmp_424 = tmp_20*(-tmp_258 + tmp_422 + tmp_423);
      real_t tmp_425 = tmp_424*tmp_8;
      real_t tmp_426 = -tmp_253 - tmp_317;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = -tmp_152*tmp_427;
      real_t tmp_429 = tmp_31*tmp_424;
      real_t tmp_430 = -tmp_264 - tmp_326 + tmp_429;
      real_t tmp_431 = tmp_40*tmp_424;
      real_t tmp_432 = -tmp_267 - tmp_329 + tmp_431;
      real_t tmp_433 = -tmp_259 - tmp_322 + 2.0*tmp_425;
      real_t tmp_434 = -tmp_112;
      real_t tmp_435 = 4.0 - tmp_111;
      real_t tmp_436 = tmp_20*(-tmp_275 + tmp_434 + tmp_435);
      real_t tmp_437 = tmp_436*tmp_8;
      real_t tmp_438 = -tmp_270 - tmp_332;
      real_t tmp_439 = tmp_437 + tmp_438;
      real_t tmp_440 = -tmp_160*tmp_439;
      real_t tmp_441 = tmp_31*tmp_436;
      real_t tmp_442 = -tmp_281 - tmp_341 + tmp_441;
      real_t tmp_443 = tmp_40*tmp_436;
      real_t tmp_444 = -tmp_284 - tmp_344 + tmp_443;
      real_t tmp_445 = -tmp_276 - tmp_337 + 2.0*tmp_437;
      real_t tmp_446 = -tmp_23;
      real_t tmp_447 = tmp_20*(-tmp_222 + tmp_399 + tmp_446);
      real_t tmp_448 = tmp_26*tmp_447;
      real_t tmp_449 = -tmp_218 - tmp_347;
      real_t tmp_450 = tmp_448 + tmp_449;
      real_t tmp_451 = -tmp_134*tmp_450;
      real_t tmp_452 = tmp_33*tmp_447;
      real_t tmp_453 = -tmp_228 - tmp_354 + tmp_452;
      real_t tmp_454 = tmp_42*tmp_447;
      real_t tmp_455 = -tmp_232 - tmp_357 + tmp_454;
      real_t tmp_456 = -tmp_223 - tmp_351 + 2.0*tmp_448;
      real_t tmp_457 = -tmp_67;
      real_t tmp_458 = tmp_20*(-tmp_239 + tmp_411 + tmp_457);
      real_t tmp_459 = tmp_26*tmp_458;
      real_t tmp_460 = -tmp_235 - tmp_360;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = -tmp_144*tmp_461;
      real_t tmp_463 = tmp_33*tmp_458;
      real_t tmp_464 = -tmp_245 - tmp_367 + tmp_463;
      real_t tmp_465 = tmp_42*tmp_458;
      real_t tmp_466 = -tmp_249 - tmp_370 + tmp_465;
      real_t tmp_467 = -tmp_240 - tmp_364 + 2.0*tmp_459;
      real_t tmp_468 = -tmp_90;
      real_t tmp_469 = tmp_20*(-tmp_256 + tmp_423 + tmp_468);
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = -tmp_252 - tmp_373;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = -tmp_152*tmp_472;
      real_t tmp_474 = tmp_33*tmp_469;
      real_t tmp_475 = -tmp_262 - tmp_380 + tmp_474;
      real_t tmp_476 = tmp_42*tmp_469;
      real_t tmp_477 = -tmp_266 - tmp_383 + tmp_476;
      real_t tmp_478 = -tmp_257 - tmp_377 + 2.0*tmp_470;
      real_t tmp_479 = -tmp_113;
      real_t tmp_480 = tmp_20*(-tmp_273 + tmp_435 + tmp_479);
      real_t tmp_481 = tmp_26*tmp_480;
      real_t tmp_482 = -tmp_269 - tmp_386;
      real_t tmp_483 = tmp_481 + tmp_482;
      real_t tmp_484 = -tmp_160*tmp_483;
      real_t tmp_485 = tmp_33*tmp_480;
      real_t tmp_486 = -tmp_279 - tmp_393 + tmp_485;
      real_t tmp_487 = tmp_42*tmp_480;
      real_t tmp_488 = -tmp_283 - tmp_396 + tmp_487;
      real_t tmp_489 = -tmp_274 - tmp_390 + 2.0*tmp_481;
      real_t tmp_490 = tmp_20*(-tmp_290 + tmp_398 + tmp_446 + 4.0);
      real_t tmp_491 = tmp_28*tmp_490;
      real_t tmp_492 = -tmp_286 - tmp_346;
      real_t tmp_493 = tmp_491 + tmp_492;
      real_t tmp_494 = -tmp_134*tmp_493;
      real_t tmp_495 = tmp_35*tmp_490;
      real_t tmp_496 = -tmp_295 - tmp_353 + tmp_495;
      real_t tmp_497 = tmp_44*tmp_490;
      real_t tmp_498 = -tmp_298 - tmp_356 + tmp_497;
      real_t tmp_499 = -tmp_291 - tmp_350 + 2.0*tmp_491;
      real_t tmp_500 = tmp_20*(-tmp_305 + tmp_410 + tmp_457 + 4.0);
      real_t tmp_501 = tmp_28*tmp_500;
      real_t tmp_502 = -tmp_301 - tmp_359;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_144*tmp_503;
      real_t tmp_505 = tmp_35*tmp_500;
      real_t tmp_506 = -tmp_310 - tmp_366 + tmp_505;
      real_t tmp_507 = tmp_44*tmp_500;
      real_t tmp_508 = -tmp_313 - tmp_369 + tmp_507;
      real_t tmp_509 = -tmp_306 - tmp_363 + 2.0*tmp_501;
      real_t tmp_510 = tmp_20*(-tmp_320 + tmp_422 + tmp_468 + 4.0);
      real_t tmp_511 = tmp_28*tmp_510;
      real_t tmp_512 = -tmp_316 - tmp_372;
      real_t tmp_513 = tmp_511 + tmp_512;
      real_t tmp_514 = -tmp_152*tmp_513;
      real_t tmp_515 = tmp_35*tmp_510;
      real_t tmp_516 = -tmp_325 - tmp_379 + tmp_515;
      real_t tmp_517 = tmp_44*tmp_510;
      real_t tmp_518 = -tmp_328 - tmp_382 + tmp_517;
      real_t tmp_519 = -tmp_321 - tmp_376 + 2.0*tmp_511;
      real_t tmp_520 = tmp_20*(-tmp_335 + tmp_434 + tmp_479 + 4.0);
      real_t tmp_521 = tmp_28*tmp_520;
      real_t tmp_522 = -tmp_331 - tmp_385;
      real_t tmp_523 = tmp_521 + tmp_522;
      real_t tmp_524 = -tmp_160*tmp_523;
      real_t tmp_525 = tmp_35*tmp_520;
      real_t tmp_526 = -tmp_340 - tmp_392 + tmp_525;
      real_t tmp_527 = tmp_44*tmp_520;
      real_t tmp_528 = -tmp_343 - tmp_395 + tmp_527;
      real_t tmp_529 = -tmp_336 - tmp_389 + 2.0*tmp_521;
      real_t tmp_530 = 1.0*tmp_20;
      real_t tmp_531 = tmp_135*tmp_530;
      real_t tmp_532 = tmp_35*tmp_531;
      real_t tmp_533 = tmp_44*tmp_531;
      real_t tmp_534 = 1.0*tmp_137;
      real_t tmp_535 = tmp_145*tmp_530;
      real_t tmp_536 = tmp_35*tmp_535;
      real_t tmp_537 = tmp_44*tmp_535;
      real_t tmp_538 = 1.0*tmp_146;
      real_t tmp_539 = tmp_153*tmp_530;
      real_t tmp_540 = tmp_35*tmp_539;
      real_t tmp_541 = tmp_44*tmp_539;
      real_t tmp_542 = 1.0*tmp_154;
      real_t tmp_543 = tmp_161*tmp_530;
      real_t tmp_544 = tmp_35*tmp_543;
      real_t tmp_545 = tmp_44*tmp_543;
      real_t tmp_546 = 1.0*tmp_162;
      real_t tmp_547 = (tmp_35*tmp_35);
      real_t tmp_548 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_549 = 0.012499999999999983*tmp_548;
      real_t tmp_550 = 16.0*tmp_549;
      real_t tmp_551 = (tmp_44*tmp_44);
      real_t tmp_552 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_553 = 0.012499999999999983*tmp_548;
      real_t tmp_554 = 16.0*tmp_553;
      real_t tmp_555 = 0.11249999999999989*tmp_548;
      real_t tmp_556 = 16.0*tmp_555;
      real_t tmp_557 = 0.012499999999999983*tmp_548;
      real_t tmp_558 = 16.0*tmp_557;
      real_t tmp_559 = tmp_135*tmp_168;
      real_t tmp_560 = 1.0*tmp_548;
      real_t tmp_561 = tmp_35*tmp_560;
      real_t tmp_562 = tmp_33*tmp_561;
      real_t tmp_563 = tmp_44*tmp_560;
      real_t tmp_564 = tmp_42*tmp_563;
      real_t tmp_565 = 1.3333333333333335*tmp_28*tmp_548;
      real_t tmp_566 = tmp_26*tmp_565;
      real_t tmp_567 = tmp_145*tmp_175;
      real_t tmp_568 = tmp_153*tmp_181;
      real_t tmp_569 = tmp_161*tmp_187;
      real_t tmp_570 = tmp_110*(tmp_562*tmp_568 + tmp_564*tmp_568 + tmp_566*tmp_568) + tmp_133*(tmp_562*tmp_569 + tmp_564*tmp_569 + tmp_566*tmp_569) + tmp_64*(tmp_559*tmp_562 + tmp_559*tmp_564 + tmp_559*tmp_566) + tmp_87*(tmp_562*tmp_567 + tmp_564*tmp_567 + tmp_566*tmp_567);
      real_t tmp_571 = tmp_135*tmp_193;
      real_t tmp_572 = tmp_31*tmp_561;
      real_t tmp_573 = tmp_40*tmp_563;
      real_t tmp_574 = tmp_565*tmp_8;
      real_t tmp_575 = tmp_145*tmp_200;
      real_t tmp_576 = tmp_153*tmp_206;
      real_t tmp_577 = tmp_161*tmp_212;
      real_t tmp_578 = tmp_110*(tmp_572*tmp_576 + tmp_573*tmp_576 + tmp_574*tmp_576) + tmp_133*(tmp_572*tmp_577 + tmp_573*tmp_577 + tmp_574*tmp_577) + tmp_64*(tmp_571*tmp_572 + tmp_571*tmp_573 + tmp_571*tmp_574) + tmp_87*(tmp_572*tmp_575 + tmp_573*tmp_575 + tmp_574*tmp_575);
      real_t tmp_579 = (2.0/3.0)*tmp_220;
      real_t tmp_580 = (2.0/3.0)*tmp_237;
      real_t tmp_581 = (2.0/3.0)*tmp_254;
      real_t tmp_582 = (2.0/3.0)*tmp_271;
      real_t tmp_583 = (2.0/3.0)*tmp_288;
      real_t tmp_584 = (2.0/3.0)*tmp_303;
      real_t tmp_585 = (2.0/3.0)*tmp_318;
      real_t tmp_586 = (2.0/3.0)*tmp_333;
      real_t tmp_587 = (2.0/3.0)*tmp_348;
      real_t tmp_588 = (2.0/3.0)*tmp_361;
      real_t tmp_589 = (2.0/3.0)*tmp_374;
      real_t tmp_590 = (2.0/3.0)*tmp_387;
      real_t tmp_591 = (2.0/3.0)*tmp_403;
      real_t tmp_592 = -tmp_137*tmp_591;
      real_t tmp_593 = (2.0/3.0)*tmp_415;
      real_t tmp_594 = -tmp_146*tmp_593;
      real_t tmp_595 = (2.0/3.0)*tmp_427;
      real_t tmp_596 = -tmp_154*tmp_595;
      real_t tmp_597 = (2.0/3.0)*tmp_439;
      real_t tmp_598 = -tmp_162*tmp_597;
      real_t tmp_599 = (2.0/3.0)*tmp_450;
      real_t tmp_600 = -tmp_137*tmp_599;
      real_t tmp_601 = (2.0/3.0)*tmp_461;
      real_t tmp_602 = -tmp_146*tmp_601;
      real_t tmp_603 = (2.0/3.0)*tmp_472;
      real_t tmp_604 = -tmp_154*tmp_603;
      real_t tmp_605 = (2.0/3.0)*tmp_483;
      real_t tmp_606 = -tmp_162*tmp_605;
      real_t tmp_607 = (2.0/3.0)*tmp_493;
      real_t tmp_608 = -tmp_137*tmp_607;
      real_t tmp_609 = (2.0/3.0)*tmp_503;
      real_t tmp_610 = -tmp_146*tmp_609;
      real_t tmp_611 = (2.0/3.0)*tmp_513;
      real_t tmp_612 = -tmp_154*tmp_611;
      real_t tmp_613 = (2.0/3.0)*tmp_523;
      real_t tmp_614 = -tmp_162*tmp_613;
      real_t tmp_615 = tmp_168*tmp_530;
      real_t tmp_616 = tmp_33*tmp_615;
      real_t tmp_617 = tmp_42*tmp_615;
      real_t tmp_618 = 1.0*tmp_170;
      real_t tmp_619 = tmp_175*tmp_530;
      real_t tmp_620 = tmp_33*tmp_619;
      real_t tmp_621 = tmp_42*tmp_619;
      real_t tmp_622 = 1.0*tmp_176;
      real_t tmp_623 = tmp_181*tmp_530;
      real_t tmp_624 = tmp_33*tmp_623;
      real_t tmp_625 = tmp_42*tmp_623;
      real_t tmp_626 = 1.0*tmp_182;
      real_t tmp_627 = tmp_187*tmp_530;
      real_t tmp_628 = tmp_33*tmp_627;
      real_t tmp_629 = tmp_42*tmp_627;
      real_t tmp_630 = 1.0*tmp_188;
      real_t tmp_631 = (tmp_33*tmp_33);
      real_t tmp_632 = 0.012499999999999983*tmp_548;
      real_t tmp_633 = 16.0*tmp_632;
      real_t tmp_634 = (tmp_42*tmp_42);
      real_t tmp_635 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_636 = 0.11249999999999989*tmp_548;
      real_t tmp_637 = 16.0*tmp_636;
      real_t tmp_638 = 0.012499999999999983*tmp_548;
      real_t tmp_639 = 16.0*tmp_638;
      real_t tmp_640 = 0.012499999999999983*tmp_548;
      real_t tmp_641 = 16.0*tmp_640;
      real_t tmp_642 = tmp_168*tmp_193;
      real_t tmp_643 = tmp_560*tmp_642;
      real_t tmp_644 = tmp_31*tmp_33;
      real_t tmp_645 = tmp_40*tmp_42;
      real_t tmp_646 = 1.3333333333333335*tmp_26*tmp_548*tmp_8;
      real_t tmp_647 = tmp_175*tmp_200;
      real_t tmp_648 = tmp_560*tmp_644;
      real_t tmp_649 = tmp_560*tmp_645;
      real_t tmp_650 = tmp_181*tmp_206;
      real_t tmp_651 = tmp_187*tmp_212;
      real_t tmp_652 = tmp_110*(tmp_646*tmp_650 + tmp_648*tmp_650 + tmp_649*tmp_650) + tmp_133*(tmp_646*tmp_651 + tmp_648*tmp_651 + tmp_649*tmp_651) + tmp_64*(tmp_642*tmp_646 + tmp_643*tmp_644 + tmp_643*tmp_645) + tmp_87*(tmp_646*tmp_647 + tmp_647*tmp_648 + tmp_647*tmp_649);
      real_t tmp_653 = -tmp_170*tmp_591;
      real_t tmp_654 = -tmp_176*tmp_593;
      real_t tmp_655 = -tmp_182*tmp_595;
      real_t tmp_656 = -tmp_188*tmp_597;
      real_t tmp_657 = -tmp_170*tmp_599;
      real_t tmp_658 = -tmp_176*tmp_601;
      real_t tmp_659 = -tmp_182*tmp_603;
      real_t tmp_660 = -tmp_188*tmp_605;
      real_t tmp_661 = -tmp_170*tmp_607;
      real_t tmp_662 = -tmp_176*tmp_609;
      real_t tmp_663 = -tmp_182*tmp_611;
      real_t tmp_664 = -tmp_188*tmp_613;
      real_t tmp_665 = tmp_193*tmp_530;
      real_t tmp_666 = tmp_31*tmp_665;
      real_t tmp_667 = tmp_40*tmp_665;
      real_t tmp_668 = 1.0*tmp_195;
      real_t tmp_669 = tmp_200*tmp_530;
      real_t tmp_670 = tmp_31*tmp_669;
      real_t tmp_671 = tmp_40*tmp_669;
      real_t tmp_672 = 1.0*tmp_201;
      real_t tmp_673 = tmp_206*tmp_530;
      real_t tmp_674 = tmp_31*tmp_673;
      real_t tmp_675 = tmp_40*tmp_673;
      real_t tmp_676 = 1.0*tmp_207;
      real_t tmp_677 = tmp_212*tmp_530;
      real_t tmp_678 = tmp_31*tmp_677;
      real_t tmp_679 = tmp_40*tmp_677;
      real_t tmp_680 = 1.0*tmp_213;
      real_t tmp_681 = (tmp_31*tmp_31);
      real_t tmp_682 = 0.11249999999999989*tmp_548;
      real_t tmp_683 = 16.0*tmp_682;
      real_t tmp_684 = (tmp_40*tmp_40);
      real_t tmp_685 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_686 = 0.012499999999999983*tmp_548;
      real_t tmp_687 = 16.0*tmp_686;
      real_t tmp_688 = 0.012499999999999983*tmp_548;
      real_t tmp_689 = 16.0*tmp_688;
      real_t tmp_690 = 0.012499999999999983*tmp_548;
      real_t tmp_691 = 16.0*tmp_690;
      real_t tmp_692 = -tmp_195*tmp_591;
      real_t tmp_693 = -tmp_201*tmp_593;
      real_t tmp_694 = -tmp_207*tmp_595;
      real_t tmp_695 = -tmp_213*tmp_597;
      real_t tmp_696 = -tmp_195*tmp_599;
      real_t tmp_697 = -tmp_201*tmp_601;
      real_t tmp_698 = -tmp_207*tmp_603;
      real_t tmp_699 = -tmp_213*tmp_605;
      real_t tmp_700 = -tmp_195*tmp_607;
      real_t tmp_701 = -tmp_201*tmp_609;
      real_t tmp_702 = -tmp_207*tmp_611;
      real_t tmp_703 = -tmp_213*tmp_613;
      real_t tmp_704 = 0.13819660112501059*tmp_139;
      real_t tmp_705 = tmp_31*tmp_704;
      real_t tmp_706 = 0.58541019662496829*tmp_139;
      real_t tmp_707 = tmp_33*tmp_706;
      real_t tmp_708 = tmp_705 + tmp_707;
      real_t tmp_709 = 2*tmp_708;
      real_t tmp_710 = tmp_40*tmp_704;
      real_t tmp_711 = tmp_42*tmp_706;
      real_t tmp_712 = tmp_710 + tmp_711;
      real_t tmp_713 = 2*tmp_712;
      real_t tmp_714 = 0.58541019662496829*tmp_139;
      real_t tmp_715 = tmp_31*tmp_714;
      real_t tmp_716 = 0.13819660112501059*tmp_139;
      real_t tmp_717 = tmp_33*tmp_716;
      real_t tmp_718 = tmp_715 + tmp_717;
      real_t tmp_719 = 2*tmp_718;
      real_t tmp_720 = tmp_40*tmp_714;
      real_t tmp_721 = tmp_42*tmp_716;
      real_t tmp_722 = tmp_720 + tmp_721;
      real_t tmp_723 = 2*tmp_722;
      real_t tmp_724 = 0.13819660112501059*tmp_139;
      real_t tmp_725 = tmp_31*tmp_724;
      real_t tmp_726 = 0.13819660112501059*tmp_139;
      real_t tmp_727 = tmp_33*tmp_726;
      real_t tmp_728 = tmp_725 + tmp_727;
      real_t tmp_729 = 2*tmp_728;
      real_t tmp_730 = tmp_40*tmp_724;
      real_t tmp_731 = tmp_42*tmp_726;
      real_t tmp_732 = tmp_730 + tmp_731;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = 0.13819660112501059*tmp_139;
      real_t tmp_735 = tmp_31*tmp_734;
      real_t tmp_736 = 0.13819660112501059*tmp_139;
      real_t tmp_737 = tmp_33*tmp_736;
      real_t tmp_738 = tmp_735 + tmp_737;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = tmp_40*tmp_734;
      real_t tmp_741 = tmp_42*tmp_736;
      real_t tmp_742 = tmp_740 + tmp_741;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = 1.3333333333333335*tmp_220;
      real_t tmp_745 = 1.3333333333333335*tmp_237;
      real_t tmp_746 = 1.3333333333333335*tmp_254;
      real_t tmp_747 = 1.3333333333333335*tmp_271;
      real_t tmp_748 = 0.13819660112501059*tmp_194;
      real_t tmp_749 = 0.58541019662496829*tmp_169;
      real_t tmp_750 = 0.58541019662496829*tmp_194;
      real_t tmp_751 = 0.13819660112501059*tmp_169;
      real_t tmp_752 = 0.13819660112501059*tmp_194;
      real_t tmp_753 = 0.13819660112501059*tmp_169;
      real_t tmp_754 = 0.13819660112501059*tmp_194;
      real_t tmp_755 = 0.13819660112501059*tmp_169;
      real_t tmp_756 = -tmp_288*tmp_579;
      real_t tmp_757 = -tmp_303*tmp_580;
      real_t tmp_758 = -tmp_318*tmp_581;
      real_t tmp_759 = -tmp_333*tmp_582;
      real_t tmp_760 = -tmp_348*tmp_579;
      real_t tmp_761 = -tmp_361*tmp_580;
      real_t tmp_762 = -tmp_374*tmp_581;
      real_t tmp_763 = -tmp_387*tmp_582;
      real_t tmp_764 = -tmp_403*tmp_579;
      real_t tmp_765 = -tmp_415*tmp_580;
      real_t tmp_766 = -tmp_427*tmp_581;
      real_t tmp_767 = -tmp_439*tmp_582;
      real_t tmp_768 = -tmp_450*tmp_579;
      real_t tmp_769 = -tmp_461*tmp_580;
      real_t tmp_770 = -tmp_472*tmp_581;
      real_t tmp_771 = -tmp_483*tmp_582;
      real_t tmp_772 = -tmp_493*tmp_579;
      real_t tmp_773 = -tmp_503*tmp_580;
      real_t tmp_774 = -tmp_513*tmp_581;
      real_t tmp_775 = -tmp_523*tmp_582;
      real_t tmp_776 = 0.13819660112501059*tmp_139;
      real_t tmp_777 = tmp_31*tmp_776;
      real_t tmp_778 = tmp_35*tmp_706;
      real_t tmp_779 = tmp_777 + tmp_778;
      real_t tmp_780 = 2*tmp_779;
      real_t tmp_781 = tmp_40*tmp_776;
      real_t tmp_782 = tmp_44*tmp_706;
      real_t tmp_783 = tmp_781 + tmp_782;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 0.13819660112501059*tmp_139;
      real_t tmp_786 = tmp_31*tmp_785;
      real_t tmp_787 = tmp_35*tmp_716;
      real_t tmp_788 = tmp_786 + tmp_787;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = tmp_40*tmp_785;
      real_t tmp_791 = tmp_44*tmp_716;
      real_t tmp_792 = tmp_790 + tmp_791;
      real_t tmp_793 = 2*tmp_792;
      real_t tmp_794 = 0.58541019662496829*tmp_139;
      real_t tmp_795 = tmp_31*tmp_794;
      real_t tmp_796 = tmp_35*tmp_726;
      real_t tmp_797 = tmp_795 + tmp_796;
      real_t tmp_798 = 2*tmp_797;
      real_t tmp_799 = tmp_40*tmp_794;
      real_t tmp_800 = tmp_44*tmp_726;
      real_t tmp_801 = tmp_799 + tmp_800;
      real_t tmp_802 = 2*tmp_801;
      real_t tmp_803 = 0.13819660112501059*tmp_139;
      real_t tmp_804 = tmp_31*tmp_803;
      real_t tmp_805 = tmp_35*tmp_736;
      real_t tmp_806 = tmp_804 + tmp_805;
      real_t tmp_807 = 2*tmp_806;
      real_t tmp_808 = tmp_40*tmp_803;
      real_t tmp_809 = tmp_44*tmp_736;
      real_t tmp_810 = tmp_808 + tmp_809;
      real_t tmp_811 = 2*tmp_810;
      real_t tmp_812 = 1.3333333333333335*tmp_288;
      real_t tmp_813 = 1.3333333333333335*tmp_303;
      real_t tmp_814 = 1.3333333333333335*tmp_318;
      real_t tmp_815 = 1.3333333333333335*tmp_333;
      real_t tmp_816 = 0.13819660112501059*tmp_194;
      real_t tmp_817 = 0.58541019662496829*tmp_136;
      real_t tmp_818 = 0.13819660112501059*tmp_194;
      real_t tmp_819 = 0.13819660112501059*tmp_136;
      real_t tmp_820 = 0.58541019662496829*tmp_194;
      real_t tmp_821 = 0.13819660112501059*tmp_136;
      real_t tmp_822 = 0.13819660112501059*tmp_194;
      real_t tmp_823 = 0.13819660112501059*tmp_136;
      real_t tmp_824 = -tmp_348*tmp_583;
      real_t tmp_825 = -tmp_361*tmp_584;
      real_t tmp_826 = -tmp_374*tmp_585;
      real_t tmp_827 = -tmp_387*tmp_586;
      real_t tmp_828 = -tmp_403*tmp_583;
      real_t tmp_829 = -tmp_415*tmp_584;
      real_t tmp_830 = -tmp_427*tmp_585;
      real_t tmp_831 = -tmp_439*tmp_586;
      real_t tmp_832 = -tmp_450*tmp_583;
      real_t tmp_833 = -tmp_461*tmp_584;
      real_t tmp_834 = -tmp_472*tmp_585;
      real_t tmp_835 = -tmp_483*tmp_586;
      real_t tmp_836 = -tmp_493*tmp_583;
      real_t tmp_837 = -tmp_503*tmp_584;
      real_t tmp_838 = -tmp_513*tmp_585;
      real_t tmp_839 = -tmp_523*tmp_586;
      real_t tmp_840 = tmp_33*tmp_776;
      real_t tmp_841 = tmp_35*tmp_704;
      real_t tmp_842 = tmp_840 + tmp_841;
      real_t tmp_843 = 2*tmp_842;
      real_t tmp_844 = tmp_42*tmp_776;
      real_t tmp_845 = tmp_44*tmp_704;
      real_t tmp_846 = tmp_844 + tmp_845;
      real_t tmp_847 = 2*tmp_846;
      real_t tmp_848 = tmp_33*tmp_785;
      real_t tmp_849 = tmp_35*tmp_714;
      real_t tmp_850 = tmp_848 + tmp_849;
      real_t tmp_851 = 2*tmp_850;
      real_t tmp_852 = tmp_42*tmp_785;
      real_t tmp_853 = tmp_44*tmp_714;
      real_t tmp_854 = tmp_852 + tmp_853;
      real_t tmp_855 = 2*tmp_854;
      real_t tmp_856 = tmp_33*tmp_794;
      real_t tmp_857 = tmp_35*tmp_724;
      real_t tmp_858 = tmp_856 + tmp_857;
      real_t tmp_859 = 2*tmp_858;
      real_t tmp_860 = tmp_42*tmp_794;
      real_t tmp_861 = tmp_44*tmp_724;
      real_t tmp_862 = tmp_860 + tmp_861;
      real_t tmp_863 = 2*tmp_862;
      real_t tmp_864 = tmp_33*tmp_803;
      real_t tmp_865 = tmp_35*tmp_734;
      real_t tmp_866 = tmp_864 + tmp_865;
      real_t tmp_867 = 2*tmp_866;
      real_t tmp_868 = tmp_42*tmp_803;
      real_t tmp_869 = tmp_44*tmp_734;
      real_t tmp_870 = tmp_868 + tmp_869;
      real_t tmp_871 = 2*tmp_870;
      real_t tmp_872 = 1.3333333333333335*tmp_348;
      real_t tmp_873 = 1.3333333333333335*tmp_361;
      real_t tmp_874 = 1.3333333333333335*tmp_374;
      real_t tmp_875 = 1.3333333333333335*tmp_387;
      real_t tmp_876 = 0.13819660112501059*tmp_169;
      real_t tmp_877 = 0.13819660112501059*tmp_136;
      real_t tmp_878 = 0.13819660112501059*tmp_169;
      real_t tmp_879 = 0.58541019662496829*tmp_136;
      real_t tmp_880 = 0.58541019662496829*tmp_169;
      real_t tmp_881 = 0.13819660112501059*tmp_136;
      real_t tmp_882 = 0.13819660112501059*tmp_169;
      real_t tmp_883 = 0.13819660112501059*tmp_136;
      real_t tmp_884 = -tmp_403*tmp_587;
      real_t tmp_885 = -tmp_415*tmp_588;
      real_t tmp_886 = -tmp_427*tmp_589;
      real_t tmp_887 = -tmp_439*tmp_590;
      real_t tmp_888 = -tmp_450*tmp_587;
      real_t tmp_889 = -tmp_461*tmp_588;
      real_t tmp_890 = -tmp_472*tmp_589;
      real_t tmp_891 = -tmp_483*tmp_590;
      real_t tmp_892 = -tmp_493*tmp_587;
      real_t tmp_893 = -tmp_503*tmp_588;
      real_t tmp_894 = -tmp_513*tmp_589;
      real_t tmp_895 = -tmp_523*tmp_590;
      real_t tmp_896 = 0.5*tmp_405 - tmp_707 - tmp_778;
      real_t tmp_897 = 2*tmp_896;
      real_t tmp_898 = 0.5*tmp_407 - tmp_711 - tmp_782;
      real_t tmp_899 = 2*tmp_898;
      real_t tmp_900 = 1.0*tmp_401 + tmp_402;
      real_t tmp_901 = 0.5*tmp_417 - tmp_717 - tmp_787;
      real_t tmp_902 = 2*tmp_901;
      real_t tmp_903 = 0.5*tmp_419 - tmp_721 - tmp_791;
      real_t tmp_904 = 2*tmp_903;
      real_t tmp_905 = 1.0*tmp_413 + tmp_414;
      real_t tmp_906 = 0.5*tmp_429 - tmp_727 - tmp_796;
      real_t tmp_907 = 2*tmp_906;
      real_t tmp_908 = 0.5*tmp_431 - tmp_731 - tmp_800;
      real_t tmp_909 = 2*tmp_908;
      real_t tmp_910 = 1.0*tmp_425 + tmp_426;
      real_t tmp_911 = 0.5*tmp_441 - tmp_737 - tmp_805;
      real_t tmp_912 = 2*tmp_911;
      real_t tmp_913 = 0.5*tmp_443 - tmp_741 - tmp_809;
      real_t tmp_914 = 2*tmp_913;
      real_t tmp_915 = 1.0*tmp_437 + tmp_438;
      real_t tmp_916 = 2.0*tmp_900;
      real_t tmp_917 = 2.0*tmp_905;
      real_t tmp_918 = 2.0*tmp_910;
      real_t tmp_919 = 2.0*tmp_915;
      real_t tmp_920 = -tmp_450*tmp_591;
      real_t tmp_921 = -tmp_461*tmp_593;
      real_t tmp_922 = -tmp_472*tmp_595;
      real_t tmp_923 = -tmp_483*tmp_597;
      real_t tmp_924 = -tmp_493*tmp_591;
      real_t tmp_925 = -tmp_503*tmp_593;
      real_t tmp_926 = -tmp_513*tmp_595;
      real_t tmp_927 = -tmp_523*tmp_597;
      real_t tmp_928 = 0.5*tmp_452 - tmp_705 - tmp_841;
      real_t tmp_929 = 2*tmp_928;
      real_t tmp_930 = 0.5*tmp_454 - tmp_710 - tmp_845;
      real_t tmp_931 = 2*tmp_930;
      real_t tmp_932 = 1.0*tmp_448 + tmp_449;
      real_t tmp_933 = 0.5*tmp_463 - tmp_715 - tmp_849;
      real_t tmp_934 = 2*tmp_933;
      real_t tmp_935 = 0.5*tmp_465 - tmp_720 - tmp_853;
      real_t tmp_936 = 2*tmp_935;
      real_t tmp_937 = 1.0*tmp_459 + tmp_460;
      real_t tmp_938 = 0.5*tmp_474 - tmp_725 - tmp_857;
      real_t tmp_939 = 2*tmp_938;
      real_t tmp_940 = 0.5*tmp_476 - tmp_730 - tmp_861;
      real_t tmp_941 = 2*tmp_940;
      real_t tmp_942 = 1.0*tmp_470 + tmp_471;
      real_t tmp_943 = 0.5*tmp_485 - tmp_735 - tmp_865;
      real_t tmp_944 = 2*tmp_943;
      real_t tmp_945 = 0.5*tmp_487 - tmp_740 - tmp_869;
      real_t tmp_946 = 2*tmp_945;
      real_t tmp_947 = 1.0*tmp_481 + tmp_482;
      real_t tmp_948 = 2.0*tmp_932;
      real_t tmp_949 = 2.0*tmp_937;
      real_t tmp_950 = 2.0*tmp_942;
      real_t tmp_951 = 2.0*tmp_947;
      real_t tmp_952 = -tmp_493*tmp_599;
      real_t tmp_953 = -tmp_503*tmp_601;
      real_t tmp_954 = -tmp_513*tmp_603;
      real_t tmp_955 = -tmp_523*tmp_605;
      real_t tmp_956 = 0.5*tmp_495 - tmp_777 - tmp_840;
      real_t tmp_957 = 2*tmp_956;
      real_t tmp_958 = 0.5*tmp_497 - tmp_781 - tmp_844;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 1.0*tmp_491 + tmp_492;
      real_t tmp_961 = 0.5*tmp_505 - tmp_786 - tmp_848;
      real_t tmp_962 = 2*tmp_961;
      real_t tmp_963 = 0.5*tmp_507 - tmp_790 - tmp_852;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = 1.0*tmp_501 + tmp_502;
      real_t tmp_966 = 0.5*tmp_515 - tmp_795 - tmp_856;
      real_t tmp_967 = 2*tmp_966;
      real_t tmp_968 = 0.5*tmp_517 - tmp_799 - tmp_860;
      real_t tmp_969 = 2*tmp_968;
      real_t tmp_970 = 1.0*tmp_511 + tmp_512;
      real_t tmp_971 = 0.5*tmp_525 - tmp_804 - tmp_864;
      real_t tmp_972 = 2*tmp_971;
      real_t tmp_973 = 0.5*tmp_527 - tmp_808 - tmp_868;
      real_t tmp_974 = 2*tmp_973;
      real_t tmp_975 = 1.0*tmp_521 + tmp_522;
      real_t tmp_976 = 2.0*tmp_960;
      real_t tmp_977 = 2.0*tmp_965;
      real_t tmp_978 = 2.0*tmp_970;
      real_t tmp_979 = 2.0*tmp_975;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_157 + tmp_106*tmp_158 + tmp_154*tmp_159 + tmp_155) + tmp_133*(tmp_123*tmp_165 + tmp_129*tmp_166 + tmp_162*tmp_167 + tmp_163) + tmp_64*(tmp_137*tmp_143 + tmp_138 + tmp_141*tmp_38 + tmp_142*tmp_47) + tmp_87*(tmp_146*tmp_151 + tmp_147 + tmp_149*tmp_77 + tmp_150*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_185 + tmp_106*tmp_186 + tmp_159*tmp_182 + tmp_183) + tmp_133*(tmp_123*tmp_191 + tmp_129*tmp_192 + tmp_167*tmp_188 + tmp_189) + tmp_64*(tmp_143*tmp_170 + tmp_171 + tmp_173*tmp_38 + tmp_174*tmp_47) + tmp_87*(tmp_151*tmp_176 + tmp_177 + tmp_179*tmp_77 + tmp_180*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_210 + tmp_106*tmp_211 + tmp_159*tmp_207 + tmp_208) + tmp_133*(tmp_123*tmp_216 + tmp_129*tmp_217 + tmp_167*tmp_213 + tmp_214) + tmp_64*(tmp_143*tmp_195 + tmp_196 + tmp_198*tmp_38 + tmp_199*tmp_47) + tmp_87*(tmp_151*tmp_201 + tmp_202 + tmp_204*tmp_77 + tmp_205*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_265 + tmp_107*tmp_268 + tmp_108*tmp_260 + tmp_255) + tmp_133*(tmp_124*tmp_282 + tmp_130*tmp_285 + tmp_131*tmp_277 + tmp_272) + tmp_64*(tmp_221 + tmp_226*tmp_49 + tmp_231*tmp_39 + tmp_234*tmp_48) + tmp_87*(tmp_238 + tmp_243*tmp_85 + tmp_248*tmp_78 + tmp_251*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_327 + tmp_107*tmp_330 + tmp_108*tmp_323 + tmp_319) + tmp_133*(tmp_124*tmp_342 + tmp_130*tmp_345 + tmp_131*tmp_338 + tmp_334) + tmp_64*(tmp_289 + tmp_293*tmp_49 + tmp_297*tmp_39 + tmp_300*tmp_48) + tmp_87*(tmp_304 + tmp_308*tmp_85 + tmp_312*tmp_78 + tmp_315*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_381 + tmp_107*tmp_384 + tmp_108*tmp_378 + tmp_375) + tmp_133*(tmp_124*tmp_394 + tmp_130*tmp_397 + tmp_131*tmp_391 + tmp_388) + tmp_64*(tmp_349 + tmp_352*tmp_49 + tmp_355*tmp_39 + tmp_358*tmp_48) + tmp_87*(tmp_362 + tmp_365*tmp_85 + tmp_368*tmp_78 + tmp_371*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_430 + tmp_107*tmp_432 + tmp_108*tmp_433 + tmp_428) + tmp_133*(tmp_124*tmp_442 + tmp_130*tmp_444 + tmp_131*tmp_445 + tmp_440) + tmp_64*(tmp_39*tmp_406 + tmp_404 + tmp_408*tmp_48 + tmp_409*tmp_49) + tmp_87*(tmp_416 + tmp_418*tmp_78 + tmp_420*tmp_84 + tmp_421*tmp_85);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_475 + tmp_107*tmp_477 + tmp_108*tmp_478 + tmp_473) + tmp_133*(tmp_124*tmp_486 + tmp_130*tmp_488 + tmp_131*tmp_489 + tmp_484) + tmp_64*(tmp_39*tmp_453 + tmp_451 + tmp_455*tmp_48 + tmp_456*tmp_49) + tmp_87*(tmp_462 + tmp_464*tmp_78 + tmp_466*tmp_84 + tmp_467*tmp_85);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_516 + tmp_107*tmp_518 + tmp_108*tmp_519 + tmp_514) + tmp_133*(tmp_124*tmp_526 + tmp_130*tmp_528 + tmp_131*tmp_529 + tmp_524) + tmp_64*(tmp_39*tmp_496 + tmp_48*tmp_498 + tmp_49*tmp_499 + tmp_494) + tmp_87*(tmp_504 + tmp_506*tmp_78 + tmp_508*tmp_84 + tmp_509*tmp_85);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_541 + tmp_109*tmp_542 + tmp_155 + tmp_540*tmp_99) + tmp_133*(tmp_122*tmp_544 + tmp_128*tmp_545 + tmp_132*tmp_546 + tmp_163) + tmp_64*(tmp_138 + tmp_37*tmp_532 + tmp_46*tmp_533 + tmp_50*tmp_534) + tmp_87*(tmp_147 + tmp_536*tmp_76 + tmp_537*tmp_82 + tmp_538*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_547*tmp_556 + tmp_551*tmp_556 + tmp_552*tmp_555) + tmp_133*(tmp_547*tmp_558 + tmp_551*tmp_558 + tmp_552*tmp_557) + tmp_64*(tmp_547*tmp_550 + tmp_549*tmp_552 + tmp_550*tmp_551) + tmp_87*(tmp_547*tmp_554 + tmp_551*tmp_554 + tmp_552*tmp_553);
      real_t a_1_2 = tmp_570;
      real_t a_1_3 = tmp_578;
      real_t a_1_4 = tmp_110*(-tmp_154*tmp_581 + tmp_260*tmp_542 + tmp_265*tmp_540 + tmp_268*tmp_541) + tmp_133*(-tmp_162*tmp_582 + tmp_277*tmp_546 + tmp_282*tmp_544 + tmp_285*tmp_545) + tmp_64*(-tmp_137*tmp_579 + tmp_226*tmp_534 + tmp_231*tmp_532 + tmp_234*tmp_533) + tmp_87*(-tmp_146*tmp_580 + tmp_243*tmp_538 + tmp_248*tmp_536 + tmp_251*tmp_537);
      real_t a_1_5 = tmp_110*(-tmp_154*tmp_585 + tmp_323*tmp_542 + tmp_327*tmp_540 + tmp_330*tmp_541) + tmp_133*(-tmp_162*tmp_586 + tmp_338*tmp_546 + tmp_342*tmp_544 + tmp_345*tmp_545) + tmp_64*(-tmp_137*tmp_583 + tmp_293*tmp_534 + tmp_297*tmp_532 + tmp_300*tmp_533) + tmp_87*(-tmp_146*tmp_584 + tmp_308*tmp_538 + tmp_312*tmp_536 + tmp_315*tmp_537);
      real_t a_1_6 = tmp_110*(-tmp_154*tmp_589 + tmp_378*tmp_542 + tmp_381*tmp_540 + tmp_384*tmp_541) + tmp_133*(-tmp_162*tmp_590 + tmp_391*tmp_546 + tmp_394*tmp_544 + tmp_397*tmp_545) + tmp_64*(-tmp_137*tmp_587 + tmp_352*tmp_534 + tmp_355*tmp_532 + tmp_358*tmp_533) + tmp_87*(-tmp_146*tmp_588 + tmp_365*tmp_538 + tmp_368*tmp_536 + tmp_371*tmp_537);
      real_t a_1_7 = tmp_110*(tmp_430*tmp_540 + tmp_432*tmp_541 + tmp_433*tmp_542 + tmp_596) + tmp_133*(tmp_442*tmp_544 + tmp_444*tmp_545 + tmp_445*tmp_546 + tmp_598) + tmp_64*(tmp_406*tmp_532 + tmp_408*tmp_533 + tmp_409*tmp_534 + tmp_592) + tmp_87*(tmp_418*tmp_536 + tmp_420*tmp_537 + tmp_421*tmp_538 + tmp_594);
      real_t a_1_8 = tmp_110*(tmp_475*tmp_540 + tmp_477*tmp_541 + tmp_478*tmp_542 + tmp_604) + tmp_133*(tmp_486*tmp_544 + tmp_488*tmp_545 + tmp_489*tmp_546 + tmp_606) + tmp_64*(tmp_453*tmp_532 + tmp_455*tmp_533 + tmp_456*tmp_534 + tmp_600) + tmp_87*(tmp_464*tmp_536 + tmp_466*tmp_537 + tmp_467*tmp_538 + tmp_602);
      real_t a_1_9 = tmp_110*(tmp_516*tmp_540 + tmp_518*tmp_541 + tmp_519*tmp_542 + tmp_612) + tmp_133*(tmp_526*tmp_544 + tmp_528*tmp_545 + tmp_529*tmp_546 + tmp_614) + tmp_64*(tmp_496*tmp_532 + tmp_498*tmp_533 + tmp_499*tmp_534 + tmp_608) + tmp_87*(tmp_506*tmp_536 + tmp_508*tmp_537 + tmp_509*tmp_538 + tmp_610);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_625 + tmp_109*tmp_626 + tmp_183 + tmp_624*tmp_99) + tmp_133*(tmp_122*tmp_628 + tmp_128*tmp_629 + tmp_132*tmp_630 + tmp_189) + tmp_64*(tmp_171 + tmp_37*tmp_616 + tmp_46*tmp_617 + tmp_50*tmp_618) + tmp_87*(tmp_177 + tmp_620*tmp_76 + tmp_621*tmp_82 + tmp_622*tmp_86);
      real_t a_2_1 = tmp_570;
      real_t a_2_2 = tmp_110*(tmp_631*tmp_639 + tmp_634*tmp_639 + tmp_635*tmp_638) + tmp_133*(tmp_631*tmp_641 + tmp_634*tmp_641 + tmp_635*tmp_640) + tmp_64*(tmp_631*tmp_633 + tmp_632*tmp_635 + tmp_633*tmp_634) + tmp_87*(tmp_631*tmp_637 + tmp_634*tmp_637 + tmp_635*tmp_636);
      real_t a_2_3 = tmp_652;
      real_t a_2_4 = tmp_110*(-tmp_182*tmp_581 + tmp_260*tmp_626 + tmp_265*tmp_624 + tmp_268*tmp_625) + tmp_133*(-tmp_188*tmp_582 + tmp_277*tmp_630 + tmp_282*tmp_628 + tmp_285*tmp_629) + tmp_64*(-tmp_170*tmp_579 + tmp_226*tmp_618 + tmp_231*tmp_616 + tmp_234*tmp_617) + tmp_87*(-tmp_176*tmp_580 + tmp_243*tmp_622 + tmp_248*tmp_620 + tmp_251*tmp_621);
      real_t a_2_5 = tmp_110*(-tmp_182*tmp_585 + tmp_323*tmp_626 + tmp_327*tmp_624 + tmp_330*tmp_625) + tmp_133*(-tmp_188*tmp_586 + tmp_338*tmp_630 + tmp_342*tmp_628 + tmp_345*tmp_629) + tmp_64*(-tmp_170*tmp_583 + tmp_293*tmp_618 + tmp_297*tmp_616 + tmp_300*tmp_617) + tmp_87*(-tmp_176*tmp_584 + tmp_308*tmp_622 + tmp_312*tmp_620 + tmp_315*tmp_621);
      real_t a_2_6 = tmp_110*(-tmp_182*tmp_589 + tmp_378*tmp_626 + tmp_381*tmp_624 + tmp_384*tmp_625) + tmp_133*(-tmp_188*tmp_590 + tmp_391*tmp_630 + tmp_394*tmp_628 + tmp_397*tmp_629) + tmp_64*(-tmp_170*tmp_587 + tmp_352*tmp_618 + tmp_355*tmp_616 + tmp_358*tmp_617) + tmp_87*(-tmp_176*tmp_588 + tmp_365*tmp_622 + tmp_368*tmp_620 + tmp_371*tmp_621);
      real_t a_2_7 = tmp_110*(tmp_430*tmp_624 + tmp_432*tmp_625 + tmp_433*tmp_626 + tmp_655) + tmp_133*(tmp_442*tmp_628 + tmp_444*tmp_629 + tmp_445*tmp_630 + tmp_656) + tmp_64*(tmp_406*tmp_616 + tmp_408*tmp_617 + tmp_409*tmp_618 + tmp_653) + tmp_87*(tmp_418*tmp_620 + tmp_420*tmp_621 + tmp_421*tmp_622 + tmp_654);
      real_t a_2_8 = tmp_110*(tmp_475*tmp_624 + tmp_477*tmp_625 + tmp_478*tmp_626 + tmp_659) + tmp_133*(tmp_486*tmp_628 + tmp_488*tmp_629 + tmp_489*tmp_630 + tmp_660) + tmp_64*(tmp_453*tmp_616 + tmp_455*tmp_617 + tmp_456*tmp_618 + tmp_657) + tmp_87*(tmp_464*tmp_620 + tmp_466*tmp_621 + tmp_467*tmp_622 + tmp_658);
      real_t a_2_9 = tmp_110*(tmp_516*tmp_624 + tmp_518*tmp_625 + tmp_519*tmp_626 + tmp_663) + tmp_133*(tmp_526*tmp_628 + tmp_528*tmp_629 + tmp_529*tmp_630 + tmp_664) + tmp_64*(tmp_496*tmp_616 + tmp_498*tmp_617 + tmp_499*tmp_618 + tmp_661) + tmp_87*(tmp_506*tmp_620 + tmp_508*tmp_621 + tmp_509*tmp_622 + tmp_662);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_675 + tmp_109*tmp_676 + tmp_208 + tmp_674*tmp_99) + tmp_133*(tmp_122*tmp_678 + tmp_128*tmp_679 + tmp_132*tmp_680 + tmp_214) + tmp_64*(tmp_196 + tmp_37*tmp_666 + tmp_46*tmp_667 + tmp_50*tmp_668) + tmp_87*(tmp_202 + tmp_670*tmp_76 + tmp_671*tmp_82 + tmp_672*tmp_86);
      real_t a_3_1 = tmp_578;
      real_t a_3_2 = tmp_652;
      real_t a_3_3 = tmp_110*(tmp_681*tmp_689 + tmp_684*tmp_689 + tmp_685*tmp_688) + tmp_133*(tmp_681*tmp_691 + tmp_684*tmp_691 + tmp_685*tmp_690) + tmp_64*(tmp_681*tmp_683 + tmp_682*tmp_685 + tmp_683*tmp_684) + tmp_87*(tmp_681*tmp_687 + tmp_684*tmp_687 + tmp_685*tmp_686);
      real_t a_3_4 = tmp_110*(-tmp_207*tmp_581 + tmp_260*tmp_676 + tmp_265*tmp_674 + tmp_268*tmp_675) + tmp_133*(-tmp_213*tmp_582 + tmp_277*tmp_680 + tmp_282*tmp_678 + tmp_285*tmp_679) + tmp_64*(-tmp_195*tmp_579 + tmp_226*tmp_668 + tmp_231*tmp_666 + tmp_234*tmp_667) + tmp_87*(-tmp_201*tmp_580 + tmp_243*tmp_672 + tmp_248*tmp_670 + tmp_251*tmp_671);
      real_t a_3_5 = tmp_110*(-tmp_207*tmp_585 + tmp_323*tmp_676 + tmp_327*tmp_674 + tmp_330*tmp_675) + tmp_133*(-tmp_213*tmp_586 + tmp_338*tmp_680 + tmp_342*tmp_678 + tmp_345*tmp_679) + tmp_64*(-tmp_195*tmp_583 + tmp_293*tmp_668 + tmp_297*tmp_666 + tmp_300*tmp_667) + tmp_87*(-tmp_201*tmp_584 + tmp_308*tmp_672 + tmp_312*tmp_670 + tmp_315*tmp_671);
      real_t a_3_6 = tmp_110*(-tmp_207*tmp_589 + tmp_378*tmp_676 + tmp_381*tmp_674 + tmp_384*tmp_675) + tmp_133*(-tmp_213*tmp_590 + tmp_391*tmp_680 + tmp_394*tmp_678 + tmp_397*tmp_679) + tmp_64*(-tmp_195*tmp_587 + tmp_352*tmp_668 + tmp_355*tmp_666 + tmp_358*tmp_667) + tmp_87*(-tmp_201*tmp_588 + tmp_365*tmp_672 + tmp_368*tmp_670 + tmp_371*tmp_671);
      real_t a_3_7 = tmp_110*(tmp_430*tmp_674 + tmp_432*tmp_675 + tmp_433*tmp_676 + tmp_694) + tmp_133*(tmp_442*tmp_678 + tmp_444*tmp_679 + tmp_445*tmp_680 + tmp_695) + tmp_64*(tmp_406*tmp_666 + tmp_408*tmp_667 + tmp_409*tmp_668 + tmp_692) + tmp_87*(tmp_418*tmp_670 + tmp_420*tmp_671 + tmp_421*tmp_672 + tmp_693);
      real_t a_3_8 = tmp_110*(tmp_475*tmp_674 + tmp_477*tmp_675 + tmp_478*tmp_676 + tmp_698) + tmp_133*(tmp_486*tmp_678 + tmp_488*tmp_679 + tmp_489*tmp_680 + tmp_699) + tmp_64*(tmp_453*tmp_666 + tmp_455*tmp_667 + tmp_456*tmp_668 + tmp_696) + tmp_87*(tmp_464*tmp_670 + tmp_466*tmp_671 + tmp_467*tmp_672 + tmp_697);
      real_t a_3_9 = tmp_110*(tmp_516*tmp_674 + tmp_518*tmp_675 + tmp_519*tmp_676 + tmp_702) + tmp_133*(tmp_526*tmp_678 + tmp_528*tmp_679 + tmp_529*tmp_680 + tmp_703) + tmp_64*(tmp_496*tmp_666 + tmp_498*tmp_667 + tmp_499*tmp_668 + tmp_700) + tmp_87*(tmp_506*tmp_670 + tmp_508*tmp_671 + tmp_509*tmp_672 + tmp_701);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_733 + tmp_109*tmp_254 + tmp_255 + tmp_729*tmp_99) + tmp_133*(tmp_122*tmp_739 + tmp_128*tmp_743 + tmp_132*tmp_271 + tmp_272) + tmp_64*(tmp_220*tmp_50 + tmp_221 + tmp_37*tmp_709 + tmp_46*tmp_713) + tmp_87*(tmp_237*tmp_86 + tmp_238 + tmp_719*tmp_76 + tmp_723*tmp_82);
      real_t a_4_1 = tmp_110*(tmp_154*tmp_746 + tmp_157*tmp_728 + tmp_158*tmp_732) + tmp_133*(tmp_162*tmp_747 + tmp_165*tmp_738 + tmp_166*tmp_742) + tmp_64*(tmp_137*tmp_744 + tmp_141*tmp_708 + tmp_142*tmp_712) + tmp_87*(tmp_146*tmp_745 + tmp_149*tmp_718 + tmp_150*tmp_722);
      real_t a_4_2 = tmp_110*(tmp_182*tmp_746 + tmp_185*tmp_728 + tmp_186*tmp_732) + tmp_133*(tmp_188*tmp_747 + tmp_191*tmp_738 + tmp_192*tmp_742) + tmp_64*(tmp_170*tmp_744 + tmp_173*tmp_708 + tmp_174*tmp_712) + tmp_87*(tmp_176*tmp_745 + tmp_179*tmp_718 + tmp_180*tmp_722);
      real_t a_4_3 = tmp_110*(tmp_207*tmp_746 + tmp_210*tmp_728 + tmp_211*tmp_732) + tmp_133*(tmp_213*tmp_747 + tmp_216*tmp_738 + tmp_217*tmp_742) + tmp_64*(tmp_195*tmp_744 + tmp_198*tmp_708 + tmp_199*tmp_712) + tmp_87*(tmp_201*tmp_745 + tmp_204*tmp_718 + tmp_205*tmp_722);
      real_t a_4_4 = tmp_110*(tmp_254*tmp_260 + tmp_265*tmp_729 + tmp_268*tmp_733 - 10.666666666666666*((tmp_752 + tmp_753)*(tmp_752 + tmp_753))) + tmp_133*(tmp_271*tmp_277 + tmp_282*tmp_739 + tmp_285*tmp_743 - 10.666666666666666*((tmp_754 + tmp_755)*(tmp_754 + tmp_755))) + tmp_64*(tmp_220*tmp_226 + tmp_231*tmp_709 + tmp_234*tmp_713 - 10.666666666666666*((tmp_748 + tmp_749)*(tmp_748 + tmp_749))) + tmp_87*(tmp_237*tmp_243 + tmp_248*tmp_719 + tmp_251*tmp_723 - 10.666666666666666*((tmp_750 + tmp_751)*(tmp_750 + tmp_751)));
      real_t a_4_5 = tmp_110*(tmp_254*tmp_323 + tmp_327*tmp_729 + tmp_330*tmp_733 + tmp_758) + tmp_133*(tmp_271*tmp_338 + tmp_342*tmp_739 + tmp_345*tmp_743 + tmp_759) + tmp_64*(tmp_220*tmp_293 + tmp_297*tmp_709 + tmp_300*tmp_713 + tmp_756) + tmp_87*(tmp_237*tmp_308 + tmp_312*tmp_719 + tmp_315*tmp_723 + tmp_757);
      real_t a_4_6 = tmp_110*(tmp_254*tmp_378 + tmp_381*tmp_729 + tmp_384*tmp_733 + tmp_762) + tmp_133*(tmp_271*tmp_391 + tmp_394*tmp_739 + tmp_397*tmp_743 + tmp_763) + tmp_64*(tmp_220*tmp_352 + tmp_355*tmp_709 + tmp_358*tmp_713 + tmp_760) + tmp_87*(tmp_237*tmp_365 + tmp_368*tmp_719 + tmp_371*tmp_723 + tmp_761);
      real_t a_4_7 = tmp_110*(tmp_254*tmp_433 + tmp_430*tmp_729 + tmp_432*tmp_733 + tmp_766) + tmp_133*(tmp_271*tmp_445 + tmp_442*tmp_739 + tmp_444*tmp_743 + tmp_767) + tmp_64*(tmp_220*tmp_409 + tmp_406*tmp_709 + tmp_408*tmp_713 + tmp_764) + tmp_87*(tmp_237*tmp_421 + tmp_418*tmp_719 + tmp_420*tmp_723 + tmp_765);
      real_t a_4_8 = tmp_110*(tmp_254*tmp_478 + tmp_475*tmp_729 + tmp_477*tmp_733 + tmp_770) + tmp_133*(tmp_271*tmp_489 + tmp_486*tmp_739 + tmp_488*tmp_743 + tmp_771) + tmp_64*(tmp_220*tmp_456 + tmp_453*tmp_709 + tmp_455*tmp_713 + tmp_768) + tmp_87*(tmp_237*tmp_467 + tmp_464*tmp_719 + tmp_466*tmp_723 + tmp_769);
      real_t a_4_9 = tmp_110*(tmp_254*tmp_519 + tmp_516*tmp_729 + tmp_518*tmp_733 + tmp_774) + tmp_133*(tmp_271*tmp_529 + tmp_526*tmp_739 + tmp_528*tmp_743 + tmp_775) + tmp_64*(tmp_220*tmp_499 + tmp_496*tmp_709 + tmp_498*tmp_713 + tmp_772) + tmp_87*(tmp_237*tmp_509 + tmp_506*tmp_719 + tmp_508*tmp_723 + tmp_773);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_802 + tmp_109*tmp_318 + tmp_319 + tmp_798*tmp_99) + tmp_133*(tmp_122*tmp_807 + tmp_128*tmp_811 + tmp_132*tmp_333 + tmp_334) + tmp_64*(tmp_288*tmp_50 + tmp_289 + tmp_37*tmp_780 + tmp_46*tmp_784) + tmp_87*(tmp_303*tmp_86 + tmp_304 + tmp_76*tmp_789 + tmp_793*tmp_82);
      real_t a_5_1 = tmp_110*(tmp_154*tmp_814 + tmp_157*tmp_797 + tmp_158*tmp_801) + tmp_133*(tmp_162*tmp_815 + tmp_165*tmp_806 + tmp_166*tmp_810) + tmp_64*(tmp_137*tmp_812 + tmp_141*tmp_779 + tmp_142*tmp_783) + tmp_87*(tmp_146*tmp_813 + tmp_149*tmp_788 + tmp_150*tmp_792);
      real_t a_5_2 = tmp_110*(tmp_182*tmp_814 + tmp_185*tmp_797 + tmp_186*tmp_801) + tmp_133*(tmp_188*tmp_815 + tmp_191*tmp_806 + tmp_192*tmp_810) + tmp_64*(tmp_170*tmp_812 + tmp_173*tmp_779 + tmp_174*tmp_783) + tmp_87*(tmp_176*tmp_813 + tmp_179*tmp_788 + tmp_180*tmp_792);
      real_t a_5_3 = tmp_110*(tmp_207*tmp_814 + tmp_210*tmp_797 + tmp_211*tmp_801) + tmp_133*(tmp_213*tmp_815 + tmp_216*tmp_806 + tmp_217*tmp_810) + tmp_64*(tmp_195*tmp_812 + tmp_198*tmp_779 + tmp_199*tmp_783) + tmp_87*(tmp_201*tmp_813 + tmp_204*tmp_788 + tmp_205*tmp_792);
      real_t a_5_4 = tmp_110*(tmp_260*tmp_318 + tmp_265*tmp_798 + tmp_268*tmp_802 + tmp_758) + tmp_133*(tmp_277*tmp_333 + tmp_282*tmp_807 + tmp_285*tmp_811 + tmp_759) + tmp_64*(tmp_226*tmp_288 + tmp_231*tmp_780 + tmp_234*tmp_784 + tmp_756) + tmp_87*(tmp_243*tmp_303 + tmp_248*tmp_789 + tmp_251*tmp_793 + tmp_757);
      real_t a_5_5 = tmp_110*(tmp_318*tmp_323 + tmp_327*tmp_798 + tmp_330*tmp_802 - 10.666666666666666*((tmp_820 + tmp_821)*(tmp_820 + tmp_821))) + tmp_133*(tmp_333*tmp_338 + tmp_342*tmp_807 + tmp_345*tmp_811 - 10.666666666666666*((tmp_822 + tmp_823)*(tmp_822 + tmp_823))) + tmp_64*(tmp_288*tmp_293 + tmp_297*tmp_780 + tmp_300*tmp_784 - 10.666666666666666*((tmp_816 + tmp_817)*(tmp_816 + tmp_817))) + tmp_87*(tmp_303*tmp_308 + tmp_312*tmp_789 + tmp_315*tmp_793 - 10.666666666666666*((tmp_818 + tmp_819)*(tmp_818 + tmp_819)));
      real_t a_5_6 = tmp_110*(tmp_318*tmp_378 + tmp_381*tmp_798 + tmp_384*tmp_802 + tmp_826) + tmp_133*(tmp_333*tmp_391 + tmp_394*tmp_807 + tmp_397*tmp_811 + tmp_827) + tmp_64*(tmp_288*tmp_352 + tmp_355*tmp_780 + tmp_358*tmp_784 + tmp_824) + tmp_87*(tmp_303*tmp_365 + tmp_368*tmp_789 + tmp_371*tmp_793 + tmp_825);
      real_t a_5_7 = tmp_110*(tmp_318*tmp_433 + tmp_430*tmp_798 + tmp_432*tmp_802 + tmp_830) + tmp_133*(tmp_333*tmp_445 + tmp_442*tmp_807 + tmp_444*tmp_811 + tmp_831) + tmp_64*(tmp_288*tmp_409 + tmp_406*tmp_780 + tmp_408*tmp_784 + tmp_828) + tmp_87*(tmp_303*tmp_421 + tmp_418*tmp_789 + tmp_420*tmp_793 + tmp_829);
      real_t a_5_8 = tmp_110*(tmp_318*tmp_478 + tmp_475*tmp_798 + tmp_477*tmp_802 + tmp_834) + tmp_133*(tmp_333*tmp_489 + tmp_486*tmp_807 + tmp_488*tmp_811 + tmp_835) + tmp_64*(tmp_288*tmp_456 + tmp_453*tmp_780 + tmp_455*tmp_784 + tmp_832) + tmp_87*(tmp_303*tmp_467 + tmp_464*tmp_789 + tmp_466*tmp_793 + tmp_833);
      real_t a_5_9 = tmp_110*(tmp_318*tmp_519 + tmp_516*tmp_798 + tmp_518*tmp_802 + tmp_838) + tmp_133*(tmp_333*tmp_529 + tmp_526*tmp_807 + tmp_528*tmp_811 + tmp_839) + tmp_64*(tmp_288*tmp_499 + tmp_496*tmp_780 + tmp_498*tmp_784 + tmp_836) + tmp_87*(tmp_303*tmp_509 + tmp_506*tmp_789 + tmp_508*tmp_793 + tmp_837);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_863 + tmp_109*tmp_374 + tmp_375 + tmp_859*tmp_99) + tmp_133*(tmp_122*tmp_867 + tmp_128*tmp_871 + tmp_132*tmp_387 + tmp_388) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_843 + tmp_46*tmp_847) + tmp_87*(tmp_361*tmp_86 + tmp_362 + tmp_76*tmp_851 + tmp_82*tmp_855);
      real_t a_6_1 = tmp_110*(tmp_154*tmp_874 + tmp_157*tmp_858 + tmp_158*tmp_862) + tmp_133*(tmp_162*tmp_875 + tmp_165*tmp_866 + tmp_166*tmp_870) + tmp_64*(tmp_137*tmp_872 + tmp_141*tmp_842 + tmp_142*tmp_846) + tmp_87*(tmp_146*tmp_873 + tmp_149*tmp_850 + tmp_150*tmp_854);
      real_t a_6_2 = tmp_110*(tmp_182*tmp_874 + tmp_185*tmp_858 + tmp_186*tmp_862) + tmp_133*(tmp_188*tmp_875 + tmp_191*tmp_866 + tmp_192*tmp_870) + tmp_64*(tmp_170*tmp_872 + tmp_173*tmp_842 + tmp_174*tmp_846) + tmp_87*(tmp_176*tmp_873 + tmp_179*tmp_850 + tmp_180*tmp_854);
      real_t a_6_3 = tmp_110*(tmp_207*tmp_874 + tmp_210*tmp_858 + tmp_211*tmp_862) + tmp_133*(tmp_213*tmp_875 + tmp_216*tmp_866 + tmp_217*tmp_870) + tmp_64*(tmp_195*tmp_872 + tmp_198*tmp_842 + tmp_199*tmp_846) + tmp_87*(tmp_201*tmp_873 + tmp_204*tmp_850 + tmp_205*tmp_854);
      real_t a_6_4 = tmp_110*(tmp_260*tmp_374 + tmp_265*tmp_859 + tmp_268*tmp_863 + tmp_762) + tmp_133*(tmp_277*tmp_387 + tmp_282*tmp_867 + tmp_285*tmp_871 + tmp_763) + tmp_64*(tmp_226*tmp_348 + tmp_231*tmp_843 + tmp_234*tmp_847 + tmp_760) + tmp_87*(tmp_243*tmp_361 + tmp_248*tmp_851 + tmp_251*tmp_855 + tmp_761);
      real_t a_6_5 = tmp_110*(tmp_323*tmp_374 + tmp_327*tmp_859 + tmp_330*tmp_863 + tmp_826) + tmp_133*(tmp_338*tmp_387 + tmp_342*tmp_867 + tmp_345*tmp_871 + tmp_827) + tmp_64*(tmp_293*tmp_348 + tmp_297*tmp_843 + tmp_300*tmp_847 + tmp_824) + tmp_87*(tmp_308*tmp_361 + tmp_312*tmp_851 + tmp_315*tmp_855 + tmp_825);
      real_t a_6_6 = tmp_110*(tmp_374*tmp_378 + tmp_381*tmp_859 + tmp_384*tmp_863 - 10.666666666666666*((tmp_880 + tmp_881)*(tmp_880 + tmp_881))) + tmp_133*(tmp_387*tmp_391 + tmp_394*tmp_867 + tmp_397*tmp_871 - 10.666666666666666*((tmp_882 + tmp_883)*(tmp_882 + tmp_883))) + tmp_64*(tmp_348*tmp_352 + tmp_355*tmp_843 + tmp_358*tmp_847 - 10.666666666666666*((tmp_876 + tmp_877)*(tmp_876 + tmp_877))) + tmp_87*(tmp_361*tmp_365 + tmp_368*tmp_851 + tmp_371*tmp_855 - 10.666666666666666*((tmp_878 + tmp_879)*(tmp_878 + tmp_879)));
      real_t a_6_7 = tmp_110*(tmp_374*tmp_433 + tmp_430*tmp_859 + tmp_432*tmp_863 + tmp_886) + tmp_133*(tmp_387*tmp_445 + tmp_442*tmp_867 + tmp_444*tmp_871 + tmp_887) + tmp_64*(tmp_348*tmp_409 + tmp_406*tmp_843 + tmp_408*tmp_847 + tmp_884) + tmp_87*(tmp_361*tmp_421 + tmp_418*tmp_851 + tmp_420*tmp_855 + tmp_885);
      real_t a_6_8 = tmp_110*(tmp_374*tmp_478 + tmp_475*tmp_859 + tmp_477*tmp_863 + tmp_890) + tmp_133*(tmp_387*tmp_489 + tmp_486*tmp_867 + tmp_488*tmp_871 + tmp_891) + tmp_64*(tmp_348*tmp_456 + tmp_453*tmp_843 + tmp_455*tmp_847 + tmp_888) + tmp_87*(tmp_361*tmp_467 + tmp_464*tmp_851 + tmp_466*tmp_855 + tmp_889);
      real_t a_6_9 = tmp_110*(tmp_374*tmp_519 + tmp_516*tmp_859 + tmp_518*tmp_863 + tmp_894) + tmp_133*(tmp_387*tmp_529 + tmp_526*tmp_867 + tmp_528*tmp_871 + tmp_895) + tmp_64*(tmp_348*tmp_499 + tmp_496*tmp_843 + tmp_498*tmp_847 + tmp_892) + tmp_87*(tmp_361*tmp_509 + tmp_506*tmp_851 + tmp_508*tmp_855 + tmp_893);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_909 + tmp_109*tmp_910 + tmp_428 + tmp_907*tmp_99) + tmp_133*(tmp_122*tmp_912 + tmp_128*tmp_914 + tmp_132*tmp_915 + tmp_440) + tmp_64*(tmp_37*tmp_897 + tmp_404 + tmp_46*tmp_899 + tmp_50*tmp_900) + tmp_87*(tmp_416 + tmp_76*tmp_902 + tmp_82*tmp_904 + tmp_86*tmp_905);
      real_t a_7_1 = tmp_110*(tmp_154*tmp_918 + tmp_157*tmp_906 + tmp_158*tmp_908 + tmp_596) + tmp_133*(tmp_162*tmp_919 + tmp_165*tmp_911 + tmp_166*tmp_913 + tmp_598) + tmp_64*(tmp_137*tmp_916 + tmp_141*tmp_896 + tmp_142*tmp_898 + tmp_592) + tmp_87*(tmp_146*tmp_917 + tmp_149*tmp_901 + tmp_150*tmp_903 + tmp_594);
      real_t a_7_2 = tmp_110*(tmp_182*tmp_918 + tmp_185*tmp_906 + tmp_186*tmp_908 + tmp_655) + tmp_133*(tmp_188*tmp_919 + tmp_191*tmp_911 + tmp_192*tmp_913 + tmp_656) + tmp_64*(tmp_170*tmp_916 + tmp_173*tmp_896 + tmp_174*tmp_898 + tmp_653) + tmp_87*(tmp_176*tmp_917 + tmp_179*tmp_901 + tmp_180*tmp_903 + tmp_654);
      real_t a_7_3 = tmp_110*(tmp_207*tmp_918 + tmp_210*tmp_906 + tmp_211*tmp_908 + tmp_694) + tmp_133*(tmp_213*tmp_919 + tmp_216*tmp_911 + tmp_217*tmp_913 + tmp_695) + tmp_64*(tmp_195*tmp_916 + tmp_198*tmp_896 + tmp_199*tmp_898 + tmp_692) + tmp_87*(tmp_201*tmp_917 + tmp_204*tmp_901 + tmp_205*tmp_903 + tmp_693);
      real_t a_7_4 = tmp_110*(tmp_260*tmp_910 + tmp_265*tmp_907 + tmp_268*tmp_909 + tmp_766) + tmp_133*(tmp_277*tmp_915 + tmp_282*tmp_912 + tmp_285*tmp_914 + tmp_767) + tmp_64*(tmp_226*tmp_900 + tmp_231*tmp_897 + tmp_234*tmp_899 + tmp_764) + tmp_87*(tmp_243*tmp_905 + tmp_248*tmp_902 + tmp_251*tmp_904 + tmp_765);
      real_t a_7_5 = tmp_110*(tmp_323*tmp_910 + tmp_327*tmp_907 + tmp_330*tmp_909 + tmp_830) + tmp_133*(tmp_338*tmp_915 + tmp_342*tmp_912 + tmp_345*tmp_914 + tmp_831) + tmp_64*(tmp_293*tmp_900 + tmp_297*tmp_897 + tmp_300*tmp_899 + tmp_828) + tmp_87*(tmp_308*tmp_905 + tmp_312*tmp_902 + tmp_315*tmp_904 + tmp_829);
      real_t a_7_6 = tmp_110*(tmp_378*tmp_910 + tmp_381*tmp_907 + tmp_384*tmp_909 + tmp_886) + tmp_133*(tmp_391*tmp_915 + tmp_394*tmp_912 + tmp_397*tmp_914 + tmp_887) + tmp_64*(tmp_352*tmp_900 + tmp_355*tmp_897 + tmp_358*tmp_899 + tmp_884) + tmp_87*(tmp_365*tmp_905 + tmp_368*tmp_902 + tmp_371*tmp_904 + tmp_885);
      real_t a_7_7 = tmp_110*(tmp_430*tmp_907 + tmp_432*tmp_909 + tmp_433*tmp_910 - 10.666666666666666*((0.25*tmp_425 - tmp_753 - tmp_821)*(0.25*tmp_425 - tmp_753 - tmp_821))) + tmp_133*(tmp_442*tmp_912 + tmp_444*tmp_914 + tmp_445*tmp_915 - 10.666666666666666*((0.25*tmp_437 - tmp_755 - tmp_823)*(0.25*tmp_437 - tmp_755 - tmp_823))) + tmp_64*(tmp_406*tmp_897 + tmp_408*tmp_899 + tmp_409*tmp_900 - 10.666666666666666*((0.25*tmp_401 - tmp_749 - tmp_817)*(0.25*tmp_401 - tmp_749 - tmp_817))) + tmp_87*(tmp_418*tmp_902 + tmp_420*tmp_904 + tmp_421*tmp_905 - 10.666666666666666*((0.25*tmp_413 - tmp_751 - tmp_819)*(0.25*tmp_413 - tmp_751 - tmp_819)));
      real_t a_7_8 = tmp_110*(tmp_475*tmp_907 + tmp_477*tmp_909 + tmp_478*tmp_910 + tmp_922) + tmp_133*(tmp_486*tmp_912 + tmp_488*tmp_914 + tmp_489*tmp_915 + tmp_923) + tmp_64*(tmp_453*tmp_897 + tmp_455*tmp_899 + tmp_456*tmp_900 + tmp_920) + tmp_87*(tmp_464*tmp_902 + tmp_466*tmp_904 + tmp_467*tmp_905 + tmp_921);
      real_t a_7_9 = tmp_110*(tmp_516*tmp_907 + tmp_518*tmp_909 + tmp_519*tmp_910 + tmp_926) + tmp_133*(tmp_526*tmp_912 + tmp_528*tmp_914 + tmp_529*tmp_915 + tmp_927) + tmp_64*(tmp_496*tmp_897 + tmp_498*tmp_899 + tmp_499*tmp_900 + tmp_924) + tmp_87*(tmp_506*tmp_902 + tmp_508*tmp_904 + tmp_509*tmp_905 + tmp_925);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_941 + tmp_109*tmp_942 + tmp_473 + tmp_939*tmp_99) + tmp_133*(tmp_122*tmp_944 + tmp_128*tmp_946 + tmp_132*tmp_947 + tmp_484) + tmp_64*(tmp_37*tmp_929 + tmp_451 + tmp_46*tmp_931 + tmp_50*tmp_932) + tmp_87*(tmp_462 + tmp_76*tmp_934 + tmp_82*tmp_936 + tmp_86*tmp_937);
      real_t a_8_1 = tmp_110*(tmp_154*tmp_950 + tmp_157*tmp_938 + tmp_158*tmp_940 + tmp_604) + tmp_133*(tmp_162*tmp_951 + tmp_165*tmp_943 + tmp_166*tmp_945 + tmp_606) + tmp_64*(tmp_137*tmp_948 + tmp_141*tmp_928 + tmp_142*tmp_930 + tmp_600) + tmp_87*(tmp_146*tmp_949 + tmp_149*tmp_933 + tmp_150*tmp_935 + tmp_602);
      real_t a_8_2 = tmp_110*(tmp_182*tmp_950 + tmp_185*tmp_938 + tmp_186*tmp_940 + tmp_659) + tmp_133*(tmp_188*tmp_951 + tmp_191*tmp_943 + tmp_192*tmp_945 + tmp_660) + tmp_64*(tmp_170*tmp_948 + tmp_173*tmp_928 + tmp_174*tmp_930 + tmp_657) + tmp_87*(tmp_176*tmp_949 + tmp_179*tmp_933 + tmp_180*tmp_935 + tmp_658);
      real_t a_8_3 = tmp_110*(tmp_207*tmp_950 + tmp_210*tmp_938 + tmp_211*tmp_940 + tmp_698) + tmp_133*(tmp_213*tmp_951 + tmp_216*tmp_943 + tmp_217*tmp_945 + tmp_699) + tmp_64*(tmp_195*tmp_948 + tmp_198*tmp_928 + tmp_199*tmp_930 + tmp_696) + tmp_87*(tmp_201*tmp_949 + tmp_204*tmp_933 + tmp_205*tmp_935 + tmp_697);
      real_t a_8_4 = tmp_110*(tmp_260*tmp_942 + tmp_265*tmp_939 + tmp_268*tmp_941 + tmp_770) + tmp_133*(tmp_277*tmp_947 + tmp_282*tmp_944 + tmp_285*tmp_946 + tmp_771) + tmp_64*(tmp_226*tmp_932 + tmp_231*tmp_929 + tmp_234*tmp_931 + tmp_768) + tmp_87*(tmp_243*tmp_937 + tmp_248*tmp_934 + tmp_251*tmp_936 + tmp_769);
      real_t a_8_5 = tmp_110*(tmp_323*tmp_942 + tmp_327*tmp_939 + tmp_330*tmp_941 + tmp_834) + tmp_133*(tmp_338*tmp_947 + tmp_342*tmp_944 + tmp_345*tmp_946 + tmp_835) + tmp_64*(tmp_293*tmp_932 + tmp_297*tmp_929 + tmp_300*tmp_931 + tmp_832) + tmp_87*(tmp_308*tmp_937 + tmp_312*tmp_934 + tmp_315*tmp_936 + tmp_833);
      real_t a_8_6 = tmp_110*(tmp_378*tmp_942 + tmp_381*tmp_939 + tmp_384*tmp_941 + tmp_890) + tmp_133*(tmp_391*tmp_947 + tmp_394*tmp_944 + tmp_397*tmp_946 + tmp_891) + tmp_64*(tmp_352*tmp_932 + tmp_355*tmp_929 + tmp_358*tmp_931 + tmp_888) + tmp_87*(tmp_365*tmp_937 + tmp_368*tmp_934 + tmp_371*tmp_936 + tmp_889);
      real_t a_8_7 = tmp_110*(tmp_430*tmp_939 + tmp_432*tmp_941 + tmp_433*tmp_942 + tmp_922) + tmp_133*(tmp_442*tmp_944 + tmp_444*tmp_946 + tmp_445*tmp_947 + tmp_923) + tmp_64*(tmp_406*tmp_929 + tmp_408*tmp_931 + tmp_409*tmp_932 + tmp_920) + tmp_87*(tmp_418*tmp_934 + tmp_420*tmp_936 + tmp_421*tmp_937 + tmp_921);
      real_t a_8_8 = tmp_110*(tmp_475*tmp_939 + tmp_477*tmp_941 + tmp_478*tmp_942 - 10.666666666666666*((0.25*tmp_470 - tmp_752 - tmp_881)*(0.25*tmp_470 - tmp_752 - tmp_881))) + tmp_133*(tmp_486*tmp_944 + tmp_488*tmp_946 + tmp_489*tmp_947 - 10.666666666666666*((0.25*tmp_481 - tmp_754 - tmp_883)*(0.25*tmp_481 - tmp_754 - tmp_883))) + tmp_64*(tmp_453*tmp_929 + tmp_455*tmp_931 + tmp_456*tmp_932 - 10.666666666666666*((0.25*tmp_448 - tmp_748 - tmp_877)*(0.25*tmp_448 - tmp_748 - tmp_877))) + tmp_87*(tmp_464*tmp_934 + tmp_466*tmp_936 + tmp_467*tmp_937 - 10.666666666666666*((0.25*tmp_459 - tmp_750 - tmp_879)*(0.25*tmp_459 - tmp_750 - tmp_879)));
      real_t a_8_9 = tmp_110*(tmp_516*tmp_939 + tmp_518*tmp_941 + tmp_519*tmp_942 + tmp_954) + tmp_133*(tmp_526*tmp_944 + tmp_528*tmp_946 + tmp_529*tmp_947 + tmp_955) + tmp_64*(tmp_496*tmp_929 + tmp_498*tmp_931 + tmp_499*tmp_932 + tmp_952) + tmp_87*(tmp_506*tmp_934 + tmp_508*tmp_936 + tmp_509*tmp_937 + tmp_953);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_969 + tmp_109*tmp_970 + tmp_514 + tmp_967*tmp_99) + tmp_133*(tmp_122*tmp_972 + tmp_128*tmp_974 + tmp_132*tmp_975 + tmp_524) + tmp_64*(tmp_37*tmp_957 + tmp_46*tmp_959 + tmp_494 + tmp_50*tmp_960) + tmp_87*(tmp_504 + tmp_76*tmp_962 + tmp_82*tmp_964 + tmp_86*tmp_965);
      real_t a_9_1 = tmp_110*(tmp_154*tmp_978 + tmp_157*tmp_966 + tmp_158*tmp_968 + tmp_612) + tmp_133*(tmp_162*tmp_979 + tmp_165*tmp_971 + tmp_166*tmp_973 + tmp_614) + tmp_64*(tmp_137*tmp_976 + tmp_141*tmp_956 + tmp_142*tmp_958 + tmp_608) + tmp_87*(tmp_146*tmp_977 + tmp_149*tmp_961 + tmp_150*tmp_963 + tmp_610);
      real_t a_9_2 = tmp_110*(tmp_182*tmp_978 + tmp_185*tmp_966 + tmp_186*tmp_968 + tmp_663) + tmp_133*(tmp_188*tmp_979 + tmp_191*tmp_971 + tmp_192*tmp_973 + tmp_664) + tmp_64*(tmp_170*tmp_976 + tmp_173*tmp_956 + tmp_174*tmp_958 + tmp_661) + tmp_87*(tmp_176*tmp_977 + tmp_179*tmp_961 + tmp_180*tmp_963 + tmp_662);
      real_t a_9_3 = tmp_110*(tmp_207*tmp_978 + tmp_210*tmp_966 + tmp_211*tmp_968 + tmp_702) + tmp_133*(tmp_213*tmp_979 + tmp_216*tmp_971 + tmp_217*tmp_973 + tmp_703) + tmp_64*(tmp_195*tmp_976 + tmp_198*tmp_956 + tmp_199*tmp_958 + tmp_700) + tmp_87*(tmp_201*tmp_977 + tmp_204*tmp_961 + tmp_205*tmp_963 + tmp_701);
      real_t a_9_4 = tmp_110*(tmp_260*tmp_970 + tmp_265*tmp_967 + tmp_268*tmp_969 + tmp_774) + tmp_133*(tmp_277*tmp_975 + tmp_282*tmp_972 + tmp_285*tmp_974 + tmp_775) + tmp_64*(tmp_226*tmp_960 + tmp_231*tmp_957 + tmp_234*tmp_959 + tmp_772) + tmp_87*(tmp_243*tmp_965 + tmp_248*tmp_962 + tmp_251*tmp_964 + tmp_773);
      real_t a_9_5 = tmp_110*(tmp_323*tmp_970 + tmp_327*tmp_967 + tmp_330*tmp_969 + tmp_838) + tmp_133*(tmp_338*tmp_975 + tmp_342*tmp_972 + tmp_345*tmp_974 + tmp_839) + tmp_64*(tmp_293*tmp_960 + tmp_297*tmp_957 + tmp_300*tmp_959 + tmp_836) + tmp_87*(tmp_308*tmp_965 + tmp_312*tmp_962 + tmp_315*tmp_964 + tmp_837);
      real_t a_9_6 = tmp_110*(tmp_378*tmp_970 + tmp_381*tmp_967 + tmp_384*tmp_969 + tmp_894) + tmp_133*(tmp_391*tmp_975 + tmp_394*tmp_972 + tmp_397*tmp_974 + tmp_895) + tmp_64*(tmp_352*tmp_960 + tmp_355*tmp_957 + tmp_358*tmp_959 + tmp_892) + tmp_87*(tmp_365*tmp_965 + tmp_368*tmp_962 + tmp_371*tmp_964 + tmp_893);
      real_t a_9_7 = tmp_110*(tmp_430*tmp_967 + tmp_432*tmp_969 + tmp_433*tmp_970 + tmp_926) + tmp_133*(tmp_442*tmp_972 + tmp_444*tmp_974 + tmp_445*tmp_975 + tmp_927) + tmp_64*(tmp_406*tmp_957 + tmp_408*tmp_959 + tmp_409*tmp_960 + tmp_924) + tmp_87*(tmp_418*tmp_962 + tmp_420*tmp_964 + tmp_421*tmp_965 + tmp_925);
      real_t a_9_8 = tmp_110*(tmp_475*tmp_967 + tmp_477*tmp_969 + tmp_478*tmp_970 + tmp_954) + tmp_133*(tmp_486*tmp_972 + tmp_488*tmp_974 + tmp_489*tmp_975 + tmp_955) + tmp_64*(tmp_453*tmp_957 + tmp_455*tmp_959 + tmp_456*tmp_960 + tmp_952) + tmp_87*(tmp_464*tmp_962 + tmp_466*tmp_964 + tmp_467*tmp_965 + tmp_953);
      real_t a_9_9 = tmp_110*(tmp_516*tmp_967 + tmp_518*tmp_969 + tmp_519*tmp_970 - 10.666666666666666*((0.25*tmp_511 - tmp_820 - tmp_880)*(0.25*tmp_511 - tmp_820 - tmp_880))) + tmp_133*(tmp_526*tmp_972 + tmp_528*tmp_974 + tmp_529*tmp_975 - 10.666666666666666*((0.25*tmp_521 - tmp_822 - tmp_882)*(0.25*tmp_521 - tmp_822 - tmp_882))) + tmp_64*(tmp_496*tmp_957 + tmp_498*tmp_959 + tmp_499*tmp_960 - 10.666666666666666*((0.25*tmp_491 - tmp_816 - tmp_876)*(0.25*tmp_491 - tmp_816 - tmp_876))) + tmp_87*(tmp_506*tmp_962 + tmp_508*tmp_964 + tmp_509*tmp_965 - 10.666666666666666*((0.25*tmp_501 - tmp_818 - tmp_878)*(0.25*tmp_501 - tmp_818 - tmp_878)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_1 + tmp_0;
      real_t tmp_6 = p_affine_1_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_0;
      real_t tmp_10 = p_affine_1_0 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_2_0 + tmp_9;
      real_t tmp_14 = p_affine_3_1 + tmp_0;
      real_t tmp_15 = tmp_14*tmp_6;
      real_t tmp_16 = p_affine_3_0 + tmp_9;
      real_t tmp_17 = tmp_14*tmp_3;
      real_t tmp_18 = tmp_1*tmp_11;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_17 + tmp_13*tmp_15 - tmp_13*tmp_18 + tmp_16*tmp_4 - tmp_16*tmp_7);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_15 - tmp_18;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_12 - tmp_17;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_13 + tmp_10*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_1*tmp_16 - tmp_10*tmp_14;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_13*tmp_14 - tmp_16*tmp_5;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_10*tmp_3 + tmp_13*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = tmp_10*tmp_11 - tmp_16*tmp_6;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = -tmp_11*tmp_13 + tmp_16*tmp_3;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = 0.041666666666666657*tmp_59;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.041666666666666657*tmp_59;
      real_t tmp_81 = 2.3416407864998732;
      real_t tmp_82 = 0.55278640450004235;
      real_t tmp_83 = 0.55278640450004235;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.041666666666666657*tmp_59;
      real_t tmp_101 = 0.55278640450004235;
      real_t tmp_102 = 0.55278640450004235;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.041666666666666657*tmp_59;
      real_t tmp_121 = (2.0/3.0)*tmp_29;
      real_t tmp_122 = tmp_20 - 1.0;
      real_t tmp_123 = tmp_19*tmp_27;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = 2.0*tmp_19;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = 2.0*tmp_46;
      real_t tmp_128 = (2.0/3.0)*tmp_68;
      real_t tmp_129 = tmp_61 - 1.0;
      real_t tmp_130 = tmp_123*tmp_129;
      real_t tmp_131 = tmp_125*tmp_129;
      real_t tmp_132 = 2.0*tmp_79;
      real_t tmp_133 = (2.0/3.0)*tmp_88;
      real_t tmp_134 = tmp_81 - 1.0;
      real_t tmp_135 = tmp_123*tmp_134;
      real_t tmp_136 = tmp_125*tmp_134;
      real_t tmp_137 = 2.0*tmp_99;
      real_t tmp_138 = (2.0/3.0)*tmp_108;
      real_t tmp_139 = tmp_101 - 1.0;
      real_t tmp_140 = tmp_123*tmp_139;
      real_t tmp_141 = tmp_125*tmp_139;
      real_t tmp_142 = 2.0*tmp_119;
      real_t tmp_143 = tmp_21 - 1.0;
      real_t tmp_144 = tmp_19*tmp_25;
      real_t tmp_145 = tmp_143*tmp_144;
      real_t tmp_146 = tmp_125*tmp_143;
      real_t tmp_147 = tmp_62 - 1.0;
      real_t tmp_148 = tmp_144*tmp_147;
      real_t tmp_149 = tmp_125*tmp_147;
      real_t tmp_150 = tmp_82 - 1.0;
      real_t tmp_151 = tmp_144*tmp_150;
      real_t tmp_152 = tmp_125*tmp_150;
      real_t tmp_153 = tmp_102 - 1.0;
      real_t tmp_154 = tmp_144*tmp_153;
      real_t tmp_155 = tmp_125*tmp_153;
      real_t tmp_156 = tmp_22 - 1.0;
      real_t tmp_157 = tmp_19*tmp_8;
      real_t tmp_158 = tmp_156*tmp_157;
      real_t tmp_159 = tmp_125*tmp_156;
      real_t tmp_160 = tmp_63 - 1.0;
      real_t tmp_161 = tmp_157*tmp_160;
      real_t tmp_162 = tmp_125*tmp_160;
      real_t tmp_163 = tmp_83 - 1.0;
      real_t tmp_164 = tmp_157*tmp_163;
      real_t tmp_165 = tmp_125*tmp_163;
      real_t tmp_166 = tmp_103 - 1.0;
      real_t tmp_167 = tmp_157*tmp_166;
      real_t tmp_168 = tmp_125*tmp_166;
      real_t tmp_169 = tmp_157*tmp_21;
      real_t tmp_170 = tmp_144*tmp_22;
      real_t tmp_171 = 1.1055728090000847;
      real_t tmp_172 = tmp_157*tmp_171;
      real_t tmp_173 = 4.6832815729997463;
      real_t tmp_174 = tmp_144*tmp_173;
      real_t tmp_175 = tmp_19*tmp_21;
      real_t tmp_176 = tmp_175*tmp_30;
      real_t tmp_177 = tmp_19*tmp_22;
      real_t tmp_178 = tmp_177*tmp_32;
      real_t tmp_179 = tmp_175*tmp_38;
      real_t tmp_180 = tmp_177*tmp_40;
      real_t tmp_181 = tmp_157*tmp_62;
      real_t tmp_182 = tmp_144*tmp_63;
      real_t tmp_183 = 4.6832815729997463;
      real_t tmp_184 = tmp_157*tmp_183;
      real_t tmp_185 = 1.1055728090000847;
      real_t tmp_186 = tmp_144*tmp_185;
      real_t tmp_187 = tmp_19*tmp_62;
      real_t tmp_188 = tmp_187*tmp_30;
      real_t tmp_189 = tmp_19*tmp_63;
      real_t tmp_190 = tmp_189*tmp_32;
      real_t tmp_191 = tmp_187*tmp_38;
      real_t tmp_192 = tmp_189*tmp_40;
      real_t tmp_193 = tmp_157*tmp_82;
      real_t tmp_194 = tmp_144*tmp_83;
      real_t tmp_195 = 1.1055728090000847;
      real_t tmp_196 = tmp_157*tmp_195;
      real_t tmp_197 = 1.1055728090000847;
      real_t tmp_198 = tmp_144*tmp_197;
      real_t tmp_199 = tmp_19*tmp_82;
      real_t tmp_200 = tmp_199*tmp_30;
      real_t tmp_201 = tmp_19*tmp_83;
      real_t tmp_202 = tmp_201*tmp_32;
      real_t tmp_203 = tmp_199*tmp_38;
      real_t tmp_204 = tmp_201*tmp_40;
      real_t tmp_205 = tmp_102*tmp_157;
      real_t tmp_206 = tmp_103*tmp_144;
      real_t tmp_207 = 1.1055728090000847;
      real_t tmp_208 = tmp_157*tmp_207;
      real_t tmp_209 = 1.1055728090000847;
      real_t tmp_210 = tmp_144*tmp_209;
      real_t tmp_211 = tmp_102*tmp_19;
      real_t tmp_212 = tmp_211*tmp_30;
      real_t tmp_213 = tmp_103*tmp_19;
      real_t tmp_214 = tmp_213*tmp_32;
      real_t tmp_215 = tmp_211*tmp_38;
      real_t tmp_216 = tmp_213*tmp_40;
      real_t tmp_217 = tmp_157*tmp_20;
      real_t tmp_218 = tmp_177*tmp_27;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_157*tmp_219;
      real_t tmp_221 = tmp_123*tmp_173;
      real_t tmp_222 = tmp_19*tmp_20;
      real_t tmp_223 = tmp_222*tmp_30;
      real_t tmp_224 = tmp_177*tmp_34;
      real_t tmp_225 = tmp_222*tmp_38;
      real_t tmp_226 = tmp_177*tmp_42;
      real_t tmp_227 = tmp_157*tmp_61;
      real_t tmp_228 = tmp_189*tmp_27;
      real_t tmp_229 = 1.1055728090000847;
      real_t tmp_230 = tmp_157*tmp_229;
      real_t tmp_231 = tmp_123*tmp_185;
      real_t tmp_232 = tmp_19*tmp_61;
      real_t tmp_233 = tmp_232*tmp_30;
      real_t tmp_234 = tmp_189*tmp_34;
      real_t tmp_235 = tmp_232*tmp_38;
      real_t tmp_236 = tmp_189*tmp_42;
      real_t tmp_237 = tmp_157*tmp_81;
      real_t tmp_238 = tmp_201*tmp_27;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_157*tmp_239;
      real_t tmp_241 = tmp_123*tmp_197;
      real_t tmp_242 = tmp_19*tmp_81;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_201*tmp_34;
      real_t tmp_245 = tmp_242*tmp_38;
      real_t tmp_246 = tmp_201*tmp_42;
      real_t tmp_247 = tmp_101*tmp_157;
      real_t tmp_248 = tmp_213*tmp_27;
      real_t tmp_249 = 1.1055728090000847;
      real_t tmp_250 = tmp_157*tmp_249;
      real_t tmp_251 = tmp_123*tmp_209;
      real_t tmp_252 = tmp_101*tmp_19;
      real_t tmp_253 = tmp_252*tmp_30;
      real_t tmp_254 = tmp_213*tmp_34;
      real_t tmp_255 = tmp_252*tmp_38;
      real_t tmp_256 = tmp_213*tmp_42;
      real_t tmp_257 = tmp_144*tmp_20;
      real_t tmp_258 = tmp_175*tmp_27;
      real_t tmp_259 = tmp_144*tmp_219;
      real_t tmp_260 = tmp_123*tmp_171;
      real_t tmp_261 = tmp_222*tmp_32;
      real_t tmp_262 = tmp_175*tmp_34;
      real_t tmp_263 = tmp_222*tmp_40;
      real_t tmp_264 = tmp_175*tmp_42;
      real_t tmp_265 = tmp_144*tmp_61;
      real_t tmp_266 = tmp_187*tmp_27;
      real_t tmp_267 = tmp_144*tmp_229;
      real_t tmp_268 = tmp_123*tmp_183;
      real_t tmp_269 = tmp_232*tmp_32;
      real_t tmp_270 = tmp_187*tmp_34;
      real_t tmp_271 = tmp_232*tmp_40;
      real_t tmp_272 = tmp_187*tmp_42;
      real_t tmp_273 = tmp_144*tmp_81;
      real_t tmp_274 = tmp_199*tmp_27;
      real_t tmp_275 = tmp_144*tmp_239;
      real_t tmp_276 = tmp_123*tmp_195;
      real_t tmp_277 = tmp_242*tmp_32;
      real_t tmp_278 = tmp_199*tmp_34;
      real_t tmp_279 = tmp_242*tmp_40;
      real_t tmp_280 = tmp_199*tmp_42;
      real_t tmp_281 = tmp_101*tmp_144;
      real_t tmp_282 = tmp_211*tmp_27;
      real_t tmp_283 = tmp_144*tmp_249;
      real_t tmp_284 = tmp_123*tmp_207;
      real_t tmp_285 = tmp_252*tmp_32;
      real_t tmp_286 = tmp_211*tmp_34;
      real_t tmp_287 = tmp_252*tmp_40;
      real_t tmp_288 = tmp_211*tmp_42;
      real_t tmp_289 = -tmp_21;
      real_t tmp_290 = 4.0 - tmp_20;
      real_t tmp_291 = tmp_19*(-tmp_173 + tmp_289 + tmp_290);
      real_t tmp_292 = tmp_291*tmp_8;
      real_t tmp_293 = -tmp_62;
      real_t tmp_294 = 4.0 - tmp_61;
      real_t tmp_295 = tmp_19*(-tmp_185 + tmp_293 + tmp_294);
      real_t tmp_296 = tmp_295*tmp_8;
      real_t tmp_297 = -tmp_82;
      real_t tmp_298 = 4.0 - tmp_81;
      real_t tmp_299 = tmp_19*(-tmp_197 + tmp_297 + tmp_298);
      real_t tmp_300 = tmp_299*tmp_8;
      real_t tmp_301 = -tmp_102;
      real_t tmp_302 = 4.0 - tmp_101;
      real_t tmp_303 = tmp_19*(-tmp_209 + tmp_301 + tmp_302);
      real_t tmp_304 = tmp_303*tmp_8;
      real_t tmp_305 = -tmp_22;
      real_t tmp_306 = tmp_19*(-tmp_171 + tmp_290 + tmp_305);
      real_t tmp_307 = tmp_25*tmp_306;
      real_t tmp_308 = -tmp_63;
      real_t tmp_309 = tmp_19*(-tmp_183 + tmp_294 + tmp_308);
      real_t tmp_310 = tmp_25*tmp_309;
      real_t tmp_311 = -tmp_83;
      real_t tmp_312 = tmp_19*(-tmp_195 + tmp_298 + tmp_311);
      real_t tmp_313 = tmp_25*tmp_312;
      real_t tmp_314 = -tmp_103;
      real_t tmp_315 = tmp_19*(-tmp_207 + tmp_302 + tmp_314);
      real_t tmp_316 = tmp_25*tmp_315;
      real_t tmp_317 = tmp_19*(-tmp_219 + tmp_289 + tmp_305 + 4.0);
      real_t tmp_318 = tmp_27*tmp_317;
      real_t tmp_319 = tmp_19*(-tmp_229 + tmp_293 + tmp_308 + 4.0);
      real_t tmp_320 = tmp_27*tmp_319;
      real_t tmp_321 = tmp_19*(-tmp_239 + tmp_297 + tmp_311 + 4.0);
      real_t tmp_322 = tmp_27*tmp_321;
      real_t tmp_323 = tmp_19*(-tmp_249 + tmp_301 + tmp_314 + 4.0);
      real_t tmp_324 = tmp_27*tmp_323;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_133*tmp_135 + tmp_135*tmp_137 + tmp_136*tmp_34*tmp_92 + tmp_136*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_141*tmp_34 + tmp_117*tmp_141*tmp_42 - tmp_138*tmp_140 + tmp_140*tmp_142) + tmp_60*(-tmp_121*tmp_124 + tmp_124*tmp_127 + tmp_126*tmp_34*tmp_36 + tmp_126*tmp_42*tmp_44) + tmp_80*(-tmp_128*tmp_130 + tmp_130*tmp_132 + tmp_131*tmp_34*tmp_72 + tmp_131*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_133*tmp_151 + tmp_137*tmp_151 + tmp_152*tmp_32*tmp_92 + tmp_152*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_155*tmp_32 + tmp_117*tmp_155*tmp_40 - tmp_138*tmp_154 + tmp_142*tmp_154) + tmp_60*(-tmp_121*tmp_145 + tmp_127*tmp_145 + tmp_146*tmp_32*tmp_36 + tmp_146*tmp_40*tmp_44) + tmp_80*(-tmp_128*tmp_148 + tmp_132*tmp_148 + tmp_149*tmp_32*tmp_72 + tmp_149*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_133*tmp_164 + tmp_137*tmp_164 + tmp_165*tmp_30*tmp_92 + tmp_165*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_168*tmp_30 + tmp_117*tmp_168*tmp_38 - tmp_138*tmp_167 + tmp_142*tmp_167) + tmp_60*(-tmp_121*tmp_158 + tmp_127*tmp_158 + tmp_159*tmp_30*tmp_36 + tmp_159*tmp_38*tmp_44) + tmp_80*(-tmp_128*tmp_161 + tmp_132*tmp_161 + tmp_162*tmp_30*tmp_72 + tmp_162*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_133*(tmp_193 + tmp_194) + tmp_93*(tmp_200 + tmp_202) + tmp_98*(tmp_203 + tmp_204) + tmp_99*(tmp_196 + tmp_198)) + tmp_120*(tmp_113*(tmp_212 + tmp_214) + tmp_118*(tmp_215 + tmp_216) + tmp_119*(tmp_208 + tmp_210) - tmp_138*(tmp_205 + tmp_206)) + tmp_60*(-tmp_121*(tmp_169 + tmp_170) + tmp_37*(tmp_176 + tmp_178) + tmp_45*(tmp_179 + tmp_180) + tmp_46*(tmp_172 + tmp_174)) + tmp_80*(-tmp_128*(tmp_181 + tmp_182) + tmp_73*(tmp_188 + tmp_190) + tmp_78*(tmp_191 + tmp_192) + tmp_79*(tmp_184 + tmp_186));
      real_t a_0_5 = tmp_100*(-tmp_133*(tmp_237 + tmp_238) + tmp_93*(tmp_243 + tmp_244) + tmp_98*(tmp_245 + tmp_246) + tmp_99*(tmp_240 + tmp_241)) + tmp_120*(tmp_113*(tmp_253 + tmp_254) + tmp_118*(tmp_255 + tmp_256) + tmp_119*(tmp_250 + tmp_251) - tmp_138*(tmp_247 + tmp_248)) + tmp_60*(-tmp_121*(tmp_217 + tmp_218) + tmp_37*(tmp_223 + tmp_224) + tmp_45*(tmp_225 + tmp_226) + tmp_46*(tmp_220 + tmp_221)) + tmp_80*(-tmp_128*(tmp_227 + tmp_228) + tmp_73*(tmp_233 + tmp_234) + tmp_78*(tmp_235 + tmp_236) + tmp_79*(tmp_230 + tmp_231));
      real_t a_0_6 = tmp_100*(-tmp_133*(tmp_273 + tmp_274) + tmp_93*(tmp_277 + tmp_278) + tmp_98*(tmp_279 + tmp_280) + tmp_99*(tmp_275 + tmp_276)) + tmp_120*(tmp_113*(tmp_285 + tmp_286) + tmp_118*(tmp_287 + tmp_288) + tmp_119*(tmp_283 + tmp_284) - tmp_138*(tmp_281 + tmp_282)) + tmp_60*(-tmp_121*(tmp_257 + tmp_258) + tmp_37*(tmp_261 + tmp_262) + tmp_45*(tmp_263 + tmp_264) + tmp_46*(tmp_259 + tmp_260)) + tmp_80*(-tmp_128*(tmp_265 + tmp_266) + tmp_73*(tmp_269 + tmp_270) + tmp_78*(tmp_271 + tmp_272) + tmp_79*(tmp_267 + tmp_268));
      real_t a_0_7 = tmp_100*(-tmp_133*(-tmp_194 - tmp_238 + tmp_300) + tmp_93*(-tmp_202 - tmp_244 + tmp_299*tmp_30) + tmp_98*(-tmp_204 - tmp_246 + tmp_299*tmp_38) + tmp_99*(-tmp_198 - tmp_241 + 2.0*tmp_300)) + tmp_120*(tmp_113*(-tmp_214 - tmp_254 + tmp_30*tmp_303) + tmp_118*(-tmp_216 - tmp_256 + tmp_303*tmp_38) + tmp_119*(-tmp_210 - tmp_251 + 2.0*tmp_304) - tmp_138*(-tmp_206 - tmp_248 + tmp_304)) + tmp_60*(-tmp_121*(-tmp_170 - tmp_218 + tmp_292) + tmp_37*(-tmp_178 - tmp_224 + tmp_291*tmp_30) + tmp_45*(-tmp_180 - tmp_226 + tmp_291*tmp_38) + tmp_46*(-tmp_174 - tmp_221 + 2.0*tmp_292)) + tmp_80*(-tmp_128*(-tmp_182 - tmp_228 + tmp_296) + tmp_73*(-tmp_190 - tmp_234 + tmp_295*tmp_30) + tmp_78*(-tmp_192 - tmp_236 + tmp_295*tmp_38) + tmp_79*(-tmp_186 - tmp_231 + 2.0*tmp_296));
      real_t a_0_8 = tmp_100*(-tmp_133*(-tmp_193 - tmp_274 + tmp_313) + tmp_93*(-tmp_200 - tmp_278 + tmp_312*tmp_32) + tmp_98*(-tmp_203 - tmp_280 + tmp_312*tmp_40) + tmp_99*(-tmp_196 - tmp_276 + 2.0*tmp_313)) + tmp_120*(tmp_113*(-tmp_212 - tmp_286 + tmp_315*tmp_32) + tmp_118*(-tmp_215 - tmp_288 + tmp_315*tmp_40) + tmp_119*(-tmp_208 - tmp_284 + 2.0*tmp_316) - tmp_138*(-tmp_205 - tmp_282 + tmp_316)) + tmp_60*(-tmp_121*(-tmp_169 - tmp_258 + tmp_307) + tmp_37*(-tmp_176 - tmp_262 + tmp_306*tmp_32) + tmp_45*(-tmp_179 - tmp_264 + tmp_306*tmp_40) + tmp_46*(-tmp_172 - tmp_260 + 2.0*tmp_307)) + tmp_80*(-tmp_128*(-tmp_181 - tmp_266 + tmp_310) + tmp_73*(-tmp_188 - tmp_270 + tmp_309*tmp_32) + tmp_78*(-tmp_191 - tmp_272 + tmp_309*tmp_40) + tmp_79*(-tmp_184 - tmp_268 + 2.0*tmp_310));
      real_t a_0_9 = tmp_100*(-tmp_133*(-tmp_237 - tmp_273 + tmp_322) + tmp_93*(-tmp_243 - tmp_277 + tmp_321*tmp_34) + tmp_98*(-tmp_245 - tmp_279 + tmp_321*tmp_42) + tmp_99*(-tmp_240 - tmp_275 + 2.0*tmp_322)) + tmp_120*(tmp_113*(-tmp_253 - tmp_285 + tmp_323*tmp_34) + tmp_118*(-tmp_255 - tmp_287 + tmp_323*tmp_42) + tmp_119*(-tmp_250 - tmp_283 + 2.0*tmp_324) - tmp_138*(-tmp_247 - tmp_281 + tmp_324)) + tmp_60*(-tmp_121*(-tmp_217 - tmp_257 + tmp_318) + tmp_37*(-tmp_223 - tmp_261 + tmp_317*tmp_34) + tmp_45*(-tmp_225 - tmp_263 + tmp_317*tmp_42) + tmp_46*(-tmp_220 - tmp_259 + 2.0*tmp_318)) + tmp_80*(-tmp_128*(-tmp_227 - tmp_265 + tmp_320) + tmp_73*(-tmp_233 - tmp_269 + tmp_319*tmp_34) + tmp_78*(-tmp_235 - tmp_271 + tmp_319*tmp_42) + tmp_79*(-tmp_230 - tmp_267 + 2.0*tmp_320));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_0_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.66666666666666663;
      real_t tmp_8 = 2.6666666666666665;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = tmp_1*tmp_9;
      real_t tmp_11 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_12 = tmp_11*tmp_9;
      real_t tmp_13 = tmp_10 + tmp_12;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_14*tmp_9 + tmp_3*tmp_9;
      real_t tmp_16 = (2.0/3.0)*tmp_15;
      real_t tmp_17 = 0.5*tmp_10 + 0.5*tmp_12;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_20 = 0.16666666666666666*tmp_19;
      real_t tmp_21 = 2.6666666666666665;
      real_t tmp_22 = 0.66666666666666663;
      real_t tmp_23 = tmp_6*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = tmp_1*tmp_23;
      real_t tmp_25 = tmp_11*tmp_23;
      real_t tmp_26 = tmp_24 + tmp_25;
      real_t tmp_27 = tmp_14*tmp_23 + tmp_23*tmp_3;
      real_t tmp_28 = (2.0/3.0)*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_25;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = 0.16666666666666666*tmp_19;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = 0.66666666666666663;
      real_t tmp_34 = tmp_6*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_11*tmp_34;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_14*tmp_34 + tmp_3*tmp_34;
      real_t tmp_39 = (2.0/3.0)*tmp_38;
      real_t tmp_40 = 0.5*tmp_35 + 0.5*tmp_36;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 0.16666666666666666*tmp_19;
      real_t tmp_43 = tmp_7 - 1;
      real_t tmp_44 = tmp_11*tmp_6;
      real_t tmp_45 = tmp_43*tmp_44;
      real_t tmp_46 = tmp_3*tmp_6;
      real_t tmp_47 = 2.0*tmp_46;
      real_t tmp_48 = tmp_43*tmp_47;
      real_t tmp_49 = tmp_21 - 1;
      real_t tmp_50 = tmp_44*tmp_49;
      real_t tmp_51 = tmp_47*tmp_49;
      real_t tmp_52 = tmp_32 - 1;
      real_t tmp_53 = tmp_44*tmp_52;
      real_t tmp_54 = tmp_47*tmp_52;
      real_t tmp_55 = tmp_8 - 1;
      real_t tmp_56 = tmp_1*tmp_6;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = tmp_14*tmp_6;
      real_t tmp_59 = 2.0*tmp_58;
      real_t tmp_60 = tmp_55*tmp_59;
      real_t tmp_61 = tmp_22 - 1;
      real_t tmp_62 = tmp_56*tmp_61;
      real_t tmp_63 = tmp_59*tmp_61;
      real_t tmp_64 = tmp_33 - 1;
      real_t tmp_65 = tmp_56*tmp_64;
      real_t tmp_66 = tmp_59*tmp_64;
      real_t tmp_67 = tmp_56*tmp_7;
      real_t tmp_68 = tmp_44*tmp_8;
      real_t tmp_69 = tmp_67 + tmp_68;
      real_t tmp_70 = 4.0*tmp_6;
      real_t tmp_71 = tmp_14*tmp_70;
      real_t tmp_72 = 0.16666666666666666*tmp_71;
      real_t tmp_73 = tmp_3*tmp_70;
      real_t tmp_74 = 0.66666666666666663*tmp_73;
      real_t tmp_75 = tmp_72 + tmp_74;
      real_t tmp_76 = tmp_21*tmp_56;
      real_t tmp_77 = tmp_22*tmp_44;
      real_t tmp_78 = tmp_76 + tmp_77;
      real_t tmp_79 = 0.66666666666666663*tmp_71;
      real_t tmp_80 = 0.16666666666666666*tmp_73;
      real_t tmp_81 = tmp_79 + tmp_80;
      real_t tmp_82 = tmp_32*tmp_56;
      real_t tmp_83 = tmp_33*tmp_44;
      real_t tmp_84 = tmp_82 + tmp_83;
      real_t tmp_85 = 0.16666666666666666*tmp_71;
      real_t tmp_86 = 0.16666666666666666*tmp_73;
      real_t tmp_87 = tmp_85 + tmp_86;
      real_t tmp_88 = tmp_6*(-tmp_7 - 1.333333333333333);
      real_t tmp_89 = tmp_1*tmp_88;
      real_t tmp_90 = -tmp_68 + tmp_89;
      real_t tmp_91 = tmp_14*tmp_88;
      real_t tmp_92 = -tmp_74 + tmp_91;
      real_t tmp_93 = tmp_6*(2.666666666666667 - tmp_21);
      real_t tmp_94 = tmp_1*tmp_93;
      real_t tmp_95 = -tmp_77 + tmp_94;
      real_t tmp_96 = tmp_14*tmp_93;
      real_t tmp_97 = -tmp_80 + tmp_96;
      real_t tmp_98 = tmp_6*(2.666666666666667 - tmp_32);
      real_t tmp_99 = tmp_1*tmp_98;
      real_t tmp_100 = -tmp_83 + tmp_99;
      real_t tmp_101 = tmp_14*tmp_98;
      real_t tmp_102 = tmp_101 - tmp_86;
      real_t tmp_103 = tmp_6*(2.666666666666667 - tmp_8);
      real_t tmp_104 = tmp_103*tmp_11;
      real_t tmp_105 = tmp_104 - tmp_67;
      real_t tmp_106 = tmp_103*tmp_3;
      real_t tmp_107 = tmp_106 - tmp_72;
      real_t tmp_108 = tmp_6*(-tmp_22 - 1.333333333333333);
      real_t tmp_109 = tmp_108*tmp_11;
      real_t tmp_110 = tmp_109 - tmp_76;
      real_t tmp_111 = tmp_108*tmp_3;
      real_t tmp_112 = tmp_111 - tmp_79;
      real_t tmp_113 = tmp_6*(2.666666666666667 - tmp_33);
      real_t tmp_114 = tmp_11*tmp_113;
      real_t tmp_115 = tmp_114 - tmp_82;
      real_t tmp_116 = tmp_113*tmp_3;
      real_t tmp_117 = tmp_116 - tmp_85;
      real_t tmp_118 = 1.0*tmp_45;
      real_t tmp_119 = (2.0/3.0)*tmp_46;
      real_t tmp_120 = tmp_119*tmp_43;
      real_t tmp_121 = 1.0*tmp_50;
      real_t tmp_122 = tmp_119*tmp_49;
      real_t tmp_123 = 1.0*tmp_53;
      real_t tmp_124 = tmp_119*tmp_52;
      real_t tmp_125 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_126 = 0.33333333333333337*tmp_125;
      real_t tmp_127 = tmp_126*tmp_20;
      real_t tmp_128 = tmp_11*tmp_3;
      real_t tmp_129 = tmp_126*tmp_128;
      real_t tmp_130 = tmp_43*tmp_55;
      real_t tmp_131 = (2.0/3.0)*tmp_125;
      real_t tmp_132 = tmp_131*tmp_4;
      real_t tmp_133 = 1.0*tmp_125;
      real_t tmp_134 = tmp_11*tmp_14;
      real_t tmp_135 = tmp_130*tmp_134;
      real_t tmp_136 = tmp_49*tmp_61;
      real_t tmp_137 = tmp_133*tmp_134;
      real_t tmp_138 = tmp_52*tmp_64;
      real_t tmp_139 = 1.0*tmp_57;
      real_t tmp_140 = (2.0/3.0)*tmp_58;
      real_t tmp_141 = tmp_140*tmp_55;
      real_t tmp_142 = 1.0*tmp_62;
      real_t tmp_143 = tmp_140*tmp_61;
      real_t tmp_144 = 1.0*tmp_65;
      real_t tmp_145 = tmp_140*tmp_64;
      real_t tmp_146 = tmp_133*tmp_4;
      real_t tmp_147 = tmp_131*tmp_134;
      real_t tmp_148 = tmp_1*tmp_14;
      real_t tmp_149 = tmp_126*tmp_148;
      real_t tmp_150 = 2.0*tmp_56;
      real_t tmp_151 = 0.16666666666666666*tmp_150;
      real_t tmp_152 = 2.0*tmp_44;
      real_t tmp_153 = 0.66666666666666663*tmp_152;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = 2*tmp_154;
      real_t tmp_156 = tmp_58*tmp_7;
      real_t tmp_157 = tmp_46*tmp_8;
      real_t tmp_158 = (2.0/3.0)*tmp_156 + (2.0/3.0)*tmp_157;
      real_t tmp_159 = 0.66666666666666663*tmp_150;
      real_t tmp_160 = 0.16666666666666666*tmp_152;
      real_t tmp_161 = tmp_159 + tmp_160;
      real_t tmp_162 = 2*tmp_161;
      real_t tmp_163 = tmp_21*tmp_58;
      real_t tmp_164 = tmp_22*tmp_46;
      real_t tmp_165 = (2.0/3.0)*tmp_163 + (2.0/3.0)*tmp_164;
      real_t tmp_166 = 0.16666666666666666*tmp_150;
      real_t tmp_167 = 0.16666666666666666*tmp_152;
      real_t tmp_168 = tmp_166 + tmp_167;
      real_t tmp_169 = 2*tmp_168;
      real_t tmp_170 = tmp_32*tmp_58;
      real_t tmp_171 = tmp_33*tmp_46;
      real_t tmp_172 = (2.0/3.0)*tmp_170 + (2.0/3.0)*tmp_171;
      real_t tmp_173 = -2.0/3.0*tmp_157 + (2.0/3.0)*tmp_91;
      real_t tmp_174 = -tmp_153 + 0.5*tmp_89;
      real_t tmp_175 = 2*tmp_174;
      real_t tmp_176 = -2.0/3.0*tmp_164 + (2.0/3.0)*tmp_96;
      real_t tmp_177 = -tmp_160 + 0.5*tmp_94;
      real_t tmp_178 = 2*tmp_177;
      real_t tmp_179 = (2.0/3.0)*tmp_101 - 2.0/3.0*tmp_171;
      real_t tmp_180 = -tmp_167 + 0.5*tmp_99;
      real_t tmp_181 = 2*tmp_180;
      real_t tmp_182 = (2.0/3.0)*tmp_106 - 2.0/3.0*tmp_156;
      real_t tmp_183 = 0.5*tmp_104 - tmp_151;
      real_t tmp_184 = 2*tmp_183;
      real_t tmp_185 = (2.0/3.0)*tmp_111 - 2.0/3.0*tmp_163;
      real_t tmp_186 = 0.5*tmp_109 - tmp_159;
      real_t tmp_187 = 2*tmp_186;
      real_t tmp_188 = (2.0/3.0)*tmp_116 - 2.0/3.0*tmp_170;
      real_t tmp_189 = 0.5*tmp_114 - tmp_166;
      real_t tmp_190 = 2*tmp_189;
      real_t a_0_0 = tmp_20*(-tmp_13*tmp_16 + tmp_15*tmp_18) + tmp_31*(-tmp_26*tmp_28 + tmp_27*tmp_30) + tmp_42*(-tmp_37*tmp_39 + tmp_38*tmp_41);
      real_t a_0_1 = tmp_20*(-tmp_16*tmp_45 + tmp_17*tmp_48) + tmp_31*(-tmp_28*tmp_50 + tmp_29*tmp_51) + tmp_42*(-tmp_39*tmp_53 + tmp_40*tmp_54);
      real_t a_0_2 = tmp_20*(-tmp_16*tmp_57 + tmp_17*tmp_60) + tmp_31*(-tmp_28*tmp_62 + tmp_29*tmp_63) + tmp_42*(-tmp_39*tmp_65 + tmp_40*tmp_66);
      real_t a_0_3 = tmp_20*(-tmp_16*tmp_69 + tmp_18*tmp_75) + tmp_31*(-tmp_28*tmp_78 + tmp_30*tmp_81) + tmp_42*(-tmp_39*tmp_84 + tmp_41*tmp_87);
      real_t a_0_4 = tmp_20*(-tmp_16*tmp_90 + tmp_18*tmp_92) + tmp_31*(-tmp_28*tmp_95 + tmp_30*tmp_97) + tmp_42*(-tmp_100*tmp_39 + tmp_102*tmp_41);
      real_t a_0_5 = tmp_20*(-tmp_105*tmp_16 + tmp_107*tmp_18) + tmp_31*(-tmp_110*tmp_28 + tmp_112*tmp_30) + tmp_42*(-tmp_115*tmp_39 + tmp_117*tmp_41);
      real_t a_1_0 = tmp_20*(tmp_118*tmp_15 - tmp_120*tmp_13) + tmp_31*(tmp_121*tmp_27 - tmp_122*tmp_26) + tmp_42*(tmp_123*tmp_38 - tmp_124*tmp_37);
      real_t a_1_1 = tmp_127*tmp_128*(tmp_43*tmp_43) + tmp_129*tmp_31*(tmp_49*tmp_49) + tmp_129*tmp_42*(tmp_52*tmp_52);
      real_t a_1_2 = tmp_20*(-tmp_130*tmp_132 + tmp_133*tmp_135) + tmp_31*(-tmp_132*tmp_136 + tmp_136*tmp_137) + tmp_42*(-tmp_132*tmp_138 + tmp_137*tmp_138);
      real_t a_1_3 = tmp_20*(tmp_118*tmp_75 - tmp_120*tmp_69) + tmp_31*(tmp_121*tmp_81 - tmp_122*tmp_78) + tmp_42*(tmp_123*tmp_87 - tmp_124*tmp_84);
      real_t a_1_4 = tmp_20*(tmp_118*tmp_92 - tmp_120*tmp_90) + tmp_31*(tmp_121*tmp_97 - tmp_122*tmp_95) + tmp_42*(-tmp_100*tmp_124 + tmp_102*tmp_123);
      real_t a_1_5 = tmp_20*(-tmp_105*tmp_120 + tmp_107*tmp_118) + tmp_31*(-tmp_110*tmp_122 + tmp_112*tmp_121) + tmp_42*(-tmp_115*tmp_124 + tmp_117*tmp_123);
      real_t a_2_0 = tmp_20*(-tmp_13*tmp_141 + tmp_139*tmp_15) + tmp_31*(tmp_142*tmp_27 - tmp_143*tmp_26) + tmp_42*(tmp_144*tmp_38 - tmp_145*tmp_37);
      real_t a_2_1 = tmp_20*(tmp_130*tmp_146 - tmp_131*tmp_135) + tmp_31*(tmp_136*tmp_146 - tmp_136*tmp_147) + tmp_42*(tmp_138*tmp_146 - tmp_138*tmp_147);
      real_t a_2_2 = tmp_127*tmp_148*(tmp_55*tmp_55) + tmp_149*tmp_31*(tmp_61*tmp_61) + tmp_149*tmp_42*(tmp_64*tmp_64);
      real_t a_2_3 = tmp_20*(tmp_139*tmp_75 - tmp_141*tmp_69) + tmp_31*(tmp_142*tmp_81 - tmp_143*tmp_78) + tmp_42*(tmp_144*tmp_87 - tmp_145*tmp_84);
      real_t a_2_4 = tmp_20*(tmp_139*tmp_92 - tmp_141*tmp_90) + tmp_31*(tmp_142*tmp_97 - tmp_143*tmp_95) + tmp_42*(-tmp_100*tmp_145 + tmp_102*tmp_144);
      real_t a_2_5 = tmp_20*(-tmp_105*tmp_141 + tmp_107*tmp_139) + tmp_31*(-tmp_110*tmp_143 + tmp_112*tmp_142) + tmp_42*(-tmp_115*tmp_145 + tmp_117*tmp_144);
      real_t a_3_0 = tmp_20*(-tmp_13*tmp_158 + tmp_15*tmp_155) + tmp_31*(tmp_162*tmp_27 - tmp_165*tmp_26) + tmp_42*(tmp_169*tmp_38 - tmp_172*tmp_37);
      real_t a_3_1 = tmp_20*(tmp_154*tmp_48 - tmp_158*tmp_45) + tmp_31*(tmp_161*tmp_51 - tmp_165*tmp_50) + tmp_42*(tmp_168*tmp_54 - tmp_172*tmp_53);
      real_t a_3_2 = tmp_20*(tmp_154*tmp_60 - tmp_158*tmp_57) + tmp_31*(tmp_161*tmp_63 - tmp_165*tmp_62) + tmp_42*(tmp_168*tmp_66 - tmp_172*tmp_65);
      real_t a_3_3 = tmp_20*(tmp_155*tmp_75 - tmp_158*tmp_69) + tmp_31*(tmp_162*tmp_81 - tmp_165*tmp_78) + tmp_42*(tmp_169*tmp_87 - tmp_172*tmp_84);
      real_t a_3_4 = tmp_20*(tmp_155*tmp_92 - tmp_158*tmp_90) + tmp_31*(tmp_162*tmp_97 - tmp_165*tmp_95) + tmp_42*(-tmp_100*tmp_172 + tmp_102*tmp_169);
      real_t a_3_5 = tmp_20*(-tmp_105*tmp_158 + tmp_107*tmp_155) + tmp_31*(-tmp_110*tmp_165 + tmp_112*tmp_162) + tmp_42*(-tmp_115*tmp_172 + tmp_117*tmp_169);
      real_t a_4_0 = tmp_20*(-tmp_13*tmp_173 + tmp_15*tmp_175) + tmp_31*(-tmp_176*tmp_26 + tmp_178*tmp_27) + tmp_42*(-tmp_179*tmp_37 + tmp_181*tmp_38);
      real_t a_4_1 = tmp_20*(-tmp_173*tmp_45 + tmp_174*tmp_48) + tmp_31*(-tmp_176*tmp_50 + tmp_177*tmp_51) + tmp_42*(-tmp_179*tmp_53 + tmp_180*tmp_54);
      real_t a_4_2 = tmp_20*(-tmp_173*tmp_57 + tmp_174*tmp_60) + tmp_31*(-tmp_176*tmp_62 + tmp_177*tmp_63) + tmp_42*(-tmp_179*tmp_65 + tmp_180*tmp_66);
      real_t a_4_3 = tmp_20*(-tmp_173*tmp_69 + tmp_175*tmp_75) + tmp_31*(-tmp_176*tmp_78 + tmp_178*tmp_81) + tmp_42*(-tmp_179*tmp_84 + tmp_181*tmp_87);
      real_t a_4_4 = tmp_20*(-tmp_173*tmp_90 + tmp_175*tmp_92) + tmp_31*(-tmp_176*tmp_95 + tmp_178*tmp_97) + tmp_42*(-tmp_100*tmp_179 + tmp_102*tmp_181);
      real_t a_4_5 = tmp_20*(-tmp_105*tmp_173 + tmp_107*tmp_175) + tmp_31*(-tmp_110*tmp_176 + tmp_112*tmp_178) + tmp_42*(-tmp_115*tmp_179 + tmp_117*tmp_181);
      real_t a_5_0 = tmp_20*(-tmp_13*tmp_182 + tmp_15*tmp_184) + tmp_31*(-tmp_185*tmp_26 + tmp_187*tmp_27) + tmp_42*(-tmp_188*tmp_37 + tmp_190*tmp_38);
      real_t a_5_1 = tmp_20*(-tmp_182*tmp_45 + tmp_183*tmp_48) + tmp_31*(-tmp_185*tmp_50 + tmp_186*tmp_51) + tmp_42*(-tmp_188*tmp_53 + tmp_189*tmp_54);
      real_t a_5_2 = tmp_20*(-tmp_182*tmp_57 + tmp_183*tmp_60) + tmp_31*(-tmp_185*tmp_62 + tmp_186*tmp_63) + tmp_42*(-tmp_188*tmp_65 + tmp_189*tmp_66);
      real_t a_5_3 = tmp_20*(-tmp_182*tmp_69 + tmp_184*tmp_75) + tmp_31*(-tmp_185*tmp_78 + tmp_187*tmp_81) + tmp_42*(-tmp_188*tmp_84 + tmp_190*tmp_87);
      real_t a_5_4 = tmp_20*(-tmp_182*tmp_90 + tmp_184*tmp_92) + tmp_31*(-tmp_185*tmp_95 + tmp_187*tmp_97) + tmp_42*(-tmp_100*tmp_188 + tmp_102*tmp_190);
      real_t a_5_5 = tmp_20*(-tmp_105*tmp_182 + tmp_107*tmp_184) + tmp_31*(-tmp_110*tmp_185 + tmp_112*tmp_187) + tmp_42*(-tmp_115*tmp_188 + tmp_117*tmp_190);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_0_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_11*tmp_7 + tmp_3*tmp_7;
      real_t tmp_13 = (2.0/3.0)*tmp_12;
      real_t tmp_14 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_15 = 2*tmp_14;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 0.16666666666666666*tmp_16;
      real_t tmp_18 = 2.6666666666666665;
      real_t tmp_19 = 0.66666666666666663;
      real_t tmp_20 = tmp_4*(tmp_18 + tmp_19 - 3);
      real_t tmp_21 = tmp_1*tmp_20;
      real_t tmp_22 = tmp_20*tmp_9;
      real_t tmp_23 = tmp_11*tmp_20 + tmp_20*tmp_3;
      real_t tmp_24 = (2.0/3.0)*tmp_23;
      real_t tmp_25 = 0.5*tmp_21 + 0.5*tmp_22;
      real_t tmp_26 = 2*tmp_25;
      real_t tmp_27 = 0.16666666666666666*tmp_16;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_4*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_30*tmp_9;
      real_t tmp_33 = tmp_11*tmp_30 + tmp_3*tmp_30;
      real_t tmp_34 = (2.0/3.0)*tmp_33;
      real_t tmp_35 = 0.5*tmp_31 + 0.5*tmp_32;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 0.16666666666666666*tmp_16;
      real_t tmp_38 = tmp_5 - 1;
      real_t tmp_39 = tmp_4*tmp_9;
      real_t tmp_40 = 2.0*tmp_4;
      real_t tmp_41 = tmp_3*tmp_40;
      real_t tmp_42 = tmp_18 - 1;
      real_t tmp_43 = tmp_28 - 1;
      real_t tmp_44 = tmp_6 - 1;
      real_t tmp_45 = tmp_1*tmp_4;
      real_t tmp_46 = tmp_11*tmp_40;
      real_t tmp_47 = tmp_19 - 1;
      real_t tmp_48 = tmp_29 - 1;
      real_t tmp_49 = tmp_45*tmp_5;
      real_t tmp_50 = tmp_39*tmp_6;
      real_t tmp_51 = 4.0*tmp_4;
      real_t tmp_52 = tmp_11*tmp_51;
      real_t tmp_53 = 0.16666666666666666*tmp_52;
      real_t tmp_54 = tmp_3*tmp_51;
      real_t tmp_55 = 0.66666666666666663*tmp_54;
      real_t tmp_56 = tmp_18*tmp_45;
      real_t tmp_57 = tmp_19*tmp_39;
      real_t tmp_58 = 0.66666666666666663*tmp_52;
      real_t tmp_59 = 0.16666666666666666*tmp_54;
      real_t tmp_60 = tmp_28*tmp_45;
      real_t tmp_61 = tmp_29*tmp_39;
      real_t tmp_62 = 0.16666666666666666*tmp_52;
      real_t tmp_63 = 0.16666666666666666*tmp_54;
      real_t tmp_64 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_65 = tmp_4*(2.666666666666667 - tmp_18);
      real_t tmp_66 = tmp_4*(2.666666666666667 - tmp_28);
      real_t tmp_67 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_68 = tmp_4*(-tmp_19 - 1.333333333333333);
      real_t tmp_69 = tmp_4*(2.666666666666667 - tmp_29);
      real_t a_0_0 = tmp_17*(tmp_12*tmp_15 - tmp_13*(tmp_10 + tmp_8)) + tmp_27*(tmp_23*tmp_26 - tmp_24*(tmp_21 + tmp_22)) + tmp_37*(tmp_33*tmp_36 - tmp_34*(tmp_31 + tmp_32));
      real_t a_0_1 = tmp_17*(-tmp_13*tmp_38*tmp_39 + tmp_14*tmp_38*tmp_41) + tmp_27*(-tmp_24*tmp_39*tmp_42 + tmp_25*tmp_41*tmp_42) + tmp_37*(-tmp_34*tmp_39*tmp_43 + tmp_35*tmp_41*tmp_43);
      real_t a_0_2 = tmp_17*(-tmp_13*tmp_44*tmp_45 + tmp_14*tmp_44*tmp_46) + tmp_27*(-tmp_24*tmp_45*tmp_47 + tmp_25*tmp_46*tmp_47) + tmp_37*(-tmp_34*tmp_45*tmp_48 + tmp_35*tmp_46*tmp_48);
      real_t a_0_3 = tmp_17*(-tmp_13*(tmp_49 + tmp_50) + tmp_15*(tmp_53 + tmp_55)) + tmp_27*(-tmp_24*(tmp_56 + tmp_57) + tmp_26*(tmp_58 + tmp_59)) + tmp_37*(-tmp_34*(tmp_60 + tmp_61) + tmp_36*(tmp_62 + tmp_63));
      real_t a_0_4 = tmp_17*(-tmp_13*(tmp_1*tmp_64 - tmp_50) + tmp_15*(tmp_11*tmp_64 - tmp_55)) + tmp_27*(-tmp_24*(tmp_1*tmp_65 - tmp_57) + tmp_26*(tmp_11*tmp_65 - tmp_59)) + tmp_37*(-tmp_34*(tmp_1*tmp_66 - tmp_61) + tmp_36*(tmp_11*tmp_66 - tmp_63));
      real_t a_0_5 = tmp_17*(-tmp_13*(-tmp_49 + tmp_67*tmp_9) + tmp_15*(tmp_3*tmp_67 - tmp_53)) + tmp_27*(-tmp_24*(-tmp_56 + tmp_68*tmp_9) + tmp_26*(tmp_3*tmp_68 - tmp_58)) + tmp_37*(-tmp_34*(-tmp_60 + tmp_69*tmp_9) + tmp_36*(tmp_3*tmp_69 - tmp_62));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_0_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_3;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_11*tmp_5;
      real_t tmp_17 = tmp_14*tmp_9;
      real_t tmp_18 = tmp_3*tmp_8;
      real_t tmp_19 = tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_16*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_9;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_9 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_15 - tmp_18;
      real_t tmp_32 = tmp_12 - tmp_17;
      real_t tmp_33 = tmp_10 - tmp_16;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = 1.0*tmp_93;
      real_t tmp_279 = tmp_33*tmp_91;
      real_t tmp_280 = (2.0/3.0)*tmp_20;
      real_t tmp_281 = tmp_280*tmp_30;
      real_t tmp_282 = 1.0*tmp_98;
      real_t tmp_283 = tmp_280*tmp_33;
      real_t tmp_284 = tmp_283*tmp_97;
      real_t tmp_285 = 1.0*tmp_101;
      real_t tmp_286 = tmp_100*tmp_283;
      real_t tmp_287 = 1.0*tmp_104;
      real_t tmp_288 = tmp_103*tmp_283;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = (2.0/3.0)*tmp_289;
      real_t tmp_295 = tmp_26*tmp_294;
      real_t tmp_296 = tmp_106*tmp_279;
      real_t tmp_297 = 1.0*tmp_289;
      real_t tmp_298 = tmp_106*tmp_32;
      real_t tmp_299 = tmp_28*tmp_91;
      real_t tmp_300 = tmp_298*tmp_299;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_295*tmp_33;
      real_t tmp_303 = tmp_28*tmp_297;
      real_t tmp_304 = tmp_303*tmp_32;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_294*tmp_6;
      real_t tmp_308 = tmp_120*tmp_307;
      real_t tmp_309 = tmp_120*tmp_31;
      real_t tmp_310 = tmp_297*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_307*tmp_33;
      real_t tmp_313 = tmp_303*tmp_31;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_279*tmp_280;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = 1.0*tmp_112;
      real_t tmp_319 = tmp_280*tmp_32;
      real_t tmp_320 = tmp_111*tmp_319;
      real_t tmp_321 = 1.0*tmp_115;
      real_t tmp_322 = tmp_114*tmp_319;
      real_t tmp_323 = 1.0*tmp_118;
      real_t tmp_324 = tmp_117*tmp_319;
      real_t tmp_325 = tmp_26*tmp_297;
      real_t tmp_326 = tmp_325*tmp_33;
      real_t tmp_327 = tmp_28*tmp_294;
      real_t tmp_328 = tmp_32*tmp_327;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_307*tmp_32;
      real_t tmp_333 = tmp_31*tmp_325;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_280*tmp_298;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = 1.0*tmp_126;
      real_t tmp_339 = tmp_280*tmp_31;
      real_t tmp_340 = tmp_125*tmp_339;
      real_t tmp_341 = 1.0*tmp_129;
      real_t tmp_342 = tmp_128*tmp_339;
      real_t tmp_343 = 1.0*tmp_132;
      real_t tmp_344 = tmp_131*tmp_339;
      real_t tmp_345 = tmp_297*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_33*tmp_345;
      real_t tmp_348 = tmp_31*tmp_327;
      real_t tmp_349 = tmp_32*tmp_345;
      real_t tmp_350 = tmp_295*tmp_31;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_280*tmp_309;
      real_t tmp_354 = tmp_6*tmp_94;
      real_t tmp_355 = 0.13819660112501059*tmp_354;
      real_t tmp_356 = tmp_26*tmp_94;
      real_t tmp_357 = 0.58541019662496829*tmp_356;
      real_t tmp_358 = tmp_355 + tmp_357;
      real_t tmp_359 = 2*tmp_358;
      real_t tmp_360 = (2.0/3.0)*tmp_141;
      real_t tmp_361 = 0.58541019662496829*tmp_354;
      real_t tmp_362 = 0.13819660112501059*tmp_356;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = 2*tmp_363;
      real_t tmp_365 = (2.0/3.0)*tmp_149;
      real_t tmp_366 = 0.13819660112501059*tmp_354;
      real_t tmp_367 = 0.13819660112501059*tmp_356;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = 2*tmp_368;
      real_t tmp_370 = (2.0/3.0)*tmp_157;
      real_t tmp_371 = 0.13819660112501059*tmp_354;
      real_t tmp_372 = 0.13819660112501059*tmp_356;
      real_t tmp_373 = tmp_371 + tmp_372;
      real_t tmp_374 = 2*tmp_373;
      real_t tmp_375 = (2.0/3.0)*tmp_165;
      real_t tmp_376 = 0.13819660112501059*tmp_354;
      real_t tmp_377 = tmp_28*tmp_94;
      real_t tmp_378 = 0.58541019662496829*tmp_377;
      real_t tmp_379 = tmp_376 + tmp_378;
      real_t tmp_380 = 2*tmp_379;
      real_t tmp_381 = (2.0/3.0)*tmp_172;
      real_t tmp_382 = 0.13819660112501059*tmp_354;
      real_t tmp_383 = 0.13819660112501059*tmp_377;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = 2*tmp_384;
      real_t tmp_386 = (2.0/3.0)*tmp_179;
      real_t tmp_387 = 0.58541019662496829*tmp_354;
      real_t tmp_388 = 0.13819660112501059*tmp_377;
      real_t tmp_389 = tmp_387 + tmp_388;
      real_t tmp_390 = 2*tmp_389;
      real_t tmp_391 = (2.0/3.0)*tmp_186;
      real_t tmp_392 = 0.13819660112501059*tmp_354;
      real_t tmp_393 = 0.13819660112501059*tmp_377;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = 2*tmp_394;
      real_t tmp_396 = (2.0/3.0)*tmp_193;
      real_t tmp_397 = 0.13819660112501059*tmp_356;
      real_t tmp_398 = 0.13819660112501059*tmp_377;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = 2*tmp_399;
      real_t tmp_401 = (2.0/3.0)*tmp_199;
      real_t tmp_402 = 0.13819660112501059*tmp_356;
      real_t tmp_403 = 0.58541019662496829*tmp_377;
      real_t tmp_404 = tmp_402 + tmp_403;
      real_t tmp_405 = 2*tmp_404;
      real_t tmp_406 = (2.0/3.0)*tmp_205;
      real_t tmp_407 = 0.58541019662496829*tmp_356;
      real_t tmp_408 = 0.13819660112501059*tmp_377;
      real_t tmp_409 = tmp_407 + tmp_408;
      real_t tmp_410 = 2*tmp_409;
      real_t tmp_411 = (2.0/3.0)*tmp_211;
      real_t tmp_412 = 0.13819660112501059*tmp_356;
      real_t tmp_413 = 0.13819660112501059*tmp_377;
      real_t tmp_414 = tmp_412 + tmp_413;
      real_t tmp_415 = 2*tmp_414;
      real_t tmp_416 = (2.0/3.0)*tmp_217;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_357 - tmp_378;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_362 - tmp_383;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_367 - tmp_388;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_372 - tmp_393;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_355 - tmp_398;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_361 - tmp_403;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_366 - tmp_408;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_371 - tmp_413;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_376 - tmp_397;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_382 - tmp_402;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_387 - tmp_407;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_392 - tmp_412;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(tmp_278*tmp_34 - tmp_279*tmp_281) + tmp_64*(tmp_282*tmp_60 - tmp_284*tmp_59) + tmp_77*(tmp_285*tmp_73 - tmp_286*tmp_72) + tmp_90*(tmp_287*tmp_86 - tmp_288*tmp_85);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(-tmp_295*tmp_296 + tmp_297*tmp_300) + tmp_64*(-tmp_301*tmp_302 + tmp_301*tmp_304) + tmp_77*(-tmp_302*tmp_305 + tmp_304*tmp_305) + tmp_90*(-tmp_302*tmp_306 + tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_279*tmp_308 + tmp_299*tmp_310) + tmp_64*(-tmp_311*tmp_312 + tmp_311*tmp_313) + tmp_77*(-tmp_312*tmp_314 + tmp_313*tmp_314) + tmp_90*(-tmp_312*tmp_315 + tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_278) + tmp_64*(-tmp_146*tmp_284 + tmp_149*tmp_282) + tmp_77*(-tmp_154*tmp_286 + tmp_157*tmp_285) + tmp_90*(-tmp_162*tmp_288 + tmp_165*tmp_287);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_278) + tmp_64*(-tmp_176*tmp_284 + tmp_179*tmp_282) + tmp_77*(-tmp_183*tmp_286 + tmp_186*tmp_285) + tmp_90*(-tmp_190*tmp_288 + tmp_193*tmp_287);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_278) + tmp_64*(-tmp_202*tmp_284 + tmp_205*tmp_282) + tmp_77*(-tmp_208*tmp_286 + tmp_211*tmp_285) + tmp_90*(-tmp_214*tmp_288 + tmp_217*tmp_287);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_278) + tmp_64*(-tmp_228*tmp_284 + tmp_229*tmp_282) + tmp_77*(-tmp_234*tmp_286 + tmp_235*tmp_285) + tmp_90*(-tmp_240*tmp_288 + tmp_241*tmp_287);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_278) + tmp_64*(-tmp_250*tmp_284 + tmp_251*tmp_282) + tmp_77*(-tmp_255*tmp_286 + tmp_256*tmp_285) + tmp_90*(-tmp_260*tmp_288 + tmp_261*tmp_287);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_278) + tmp_64*(-tmp_268*tmp_284 + tmp_269*tmp_282) + tmp_77*(-tmp_272*tmp_286 + tmp_273*tmp_285) + tmp_90*(-tmp_276*tmp_288 + tmp_277*tmp_287);
      real_t a_2_0 = tmp_51*(-tmp_281*tmp_298 + tmp_317*tmp_34) + tmp_64*(tmp_318*tmp_60 - tmp_320*tmp_59) + tmp_77*(tmp_321*tmp_73 - tmp_322*tmp_72) + tmp_90*(tmp_323*tmp_86 - tmp_324*tmp_85);
      real_t a_2_1 = tmp_51*(-tmp_294*tmp_300 + tmp_296*tmp_325) + tmp_64*(tmp_301*tmp_326 - tmp_301*tmp_328) + tmp_77*(tmp_305*tmp_326 - tmp_305*tmp_328) + tmp_90*(tmp_306*tmp_326 - tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_310 - tmp_298*tmp_308) + tmp_64*(-tmp_331*tmp_332 + tmp_331*tmp_333) + tmp_77*(-tmp_332*tmp_334 + tmp_333*tmp_334) + tmp_90*(-tmp_332*tmp_335 + tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_320 + tmp_149*tmp_318) + tmp_77*(-tmp_154*tmp_322 + tmp_157*tmp_321) + tmp_90*(-tmp_162*tmp_324 + tmp_165*tmp_323);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_320 + tmp_179*tmp_318) + tmp_77*(-tmp_183*tmp_322 + tmp_186*tmp_321) + tmp_90*(-tmp_190*tmp_324 + tmp_193*tmp_323);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_320 + tmp_205*tmp_318) + tmp_77*(-tmp_208*tmp_322 + tmp_211*tmp_321) + tmp_90*(-tmp_214*tmp_324 + tmp_217*tmp_323);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_320 + tmp_229*tmp_318) + tmp_77*(-tmp_234*tmp_322 + tmp_235*tmp_321) + tmp_90*(-tmp_240*tmp_324 + tmp_241*tmp_323);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_320 + tmp_251*tmp_318) + tmp_77*(-tmp_255*tmp_322 + tmp_256*tmp_321) + tmp_90*(-tmp_260*tmp_324 + tmp_261*tmp_323);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_320 + tmp_269*tmp_318) + tmp_77*(-tmp_272*tmp_322 + tmp_273*tmp_321) + tmp_90*(-tmp_276*tmp_324 + tmp_277*tmp_323);
      real_t a_3_0 = tmp_51*(-tmp_281*tmp_309 + tmp_337*tmp_34) + tmp_64*(tmp_338*tmp_60 - tmp_340*tmp_59) + tmp_77*(tmp_341*tmp_73 - tmp_342*tmp_72) + tmp_90*(tmp_343*tmp_86 - tmp_344*tmp_85);
      real_t a_3_1 = tmp_51*(tmp_279*tmp_346 - tmp_294*tmp_299*tmp_309) + tmp_64*(tmp_311*tmp_347 - tmp_311*tmp_348) + tmp_77*(tmp_314*tmp_347 - tmp_314*tmp_348) + tmp_90*(tmp_315*tmp_347 - tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_295*tmp_309 + tmp_298*tmp_346) + tmp_64*(tmp_331*tmp_349 - tmp_331*tmp_350) + tmp_77*(tmp_334*tmp_349 - tmp_334*tmp_350) + tmp_90*(tmp_335*tmp_349 - tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_340 + tmp_149*tmp_338) + tmp_77*(-tmp_154*tmp_342 + tmp_157*tmp_341) + tmp_90*(-tmp_162*tmp_344 + tmp_165*tmp_343);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_340 + tmp_179*tmp_338) + tmp_77*(-tmp_183*tmp_342 + tmp_186*tmp_341) + tmp_90*(-tmp_190*tmp_344 + tmp_193*tmp_343);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_340 + tmp_205*tmp_338) + tmp_77*(-tmp_208*tmp_342 + tmp_211*tmp_341) + tmp_90*(-tmp_214*tmp_344 + tmp_217*tmp_343);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_340 + tmp_229*tmp_338) + tmp_77*(-tmp_234*tmp_342 + tmp_235*tmp_341) + tmp_90*(-tmp_240*tmp_344 + tmp_241*tmp_343);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_340 + tmp_251*tmp_338) + tmp_77*(-tmp_255*tmp_342 + tmp_256*tmp_341) + tmp_90*(-tmp_260*tmp_344 + tmp_261*tmp_343);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_340 + tmp_269*tmp_338) + tmp_77*(-tmp_272*tmp_342 + tmp_273*tmp_341) + tmp_90*(-tmp_276*tmp_344 + tmp_277*tmp_343);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_360 + tmp_34*tmp_359) + tmp_64*(tmp_364*tmp_60 - tmp_365*tmp_59) + tmp_77*(tmp_369*tmp_73 - tmp_370*tmp_72) + tmp_90*(tmp_374*tmp_86 - tmp_375*tmp_85);
      real_t a_4_1 = tmp_51*(tmp_358*tmp_96 - tmp_360*tmp_93) + tmp_64*(tmp_363*tmp_99 - tmp_365*tmp_98) + tmp_77*(-tmp_101*tmp_370 + tmp_102*tmp_368) + tmp_90*(-tmp_104*tmp_375 + tmp_105*tmp_373);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_360 + tmp_110*tmp_358) + tmp_64*(-tmp_112*tmp_365 + tmp_113*tmp_363) + tmp_77*(-tmp_115*tmp_370 + tmp_116*tmp_368) + tmp_90*(-tmp_118*tmp_375 + tmp_119*tmp_373);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_360 + tmp_124*tmp_358) + tmp_64*(-tmp_126*tmp_365 + tmp_127*tmp_363) + tmp_77*(-tmp_129*tmp_370 + tmp_130*tmp_368) + tmp_90*(-tmp_132*tmp_375 + tmp_133*tmp_373);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_360 + tmp_141*tmp_359) + tmp_64*(-tmp_146*tmp_365 + tmp_149*tmp_364) + tmp_77*(-tmp_154*tmp_370 + tmp_157*tmp_369) + tmp_90*(-tmp_162*tmp_375 + tmp_165*tmp_374);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_360 + tmp_172*tmp_359) + tmp_64*(-tmp_176*tmp_365 + tmp_179*tmp_364) + tmp_77*(-tmp_183*tmp_370 + tmp_186*tmp_369) + tmp_90*(-tmp_190*tmp_375 + tmp_193*tmp_374);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_360 + tmp_199*tmp_359) + tmp_64*(-tmp_202*tmp_365 + tmp_205*tmp_364) + tmp_77*(-tmp_208*tmp_370 + tmp_211*tmp_369) + tmp_90*(-tmp_214*tmp_375 + tmp_217*tmp_374);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_360 + tmp_223*tmp_359) + tmp_64*(-tmp_228*tmp_365 + tmp_229*tmp_364) + tmp_77*(-tmp_234*tmp_370 + tmp_235*tmp_369) + tmp_90*(-tmp_240*tmp_375 + tmp_241*tmp_374);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_360 + tmp_246*tmp_359) + tmp_64*(-tmp_250*tmp_365 + tmp_251*tmp_364) + tmp_77*(-tmp_255*tmp_370 + tmp_256*tmp_369) + tmp_90*(-tmp_260*tmp_375 + tmp_261*tmp_374);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_360 + tmp_265*tmp_359) + tmp_64*(-tmp_268*tmp_365 + tmp_269*tmp_364) + tmp_77*(-tmp_272*tmp_370 + tmp_273*tmp_369) + tmp_90*(-tmp_276*tmp_375 + tmp_277*tmp_374);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_381 + tmp_34*tmp_380) + tmp_64*(tmp_385*tmp_60 - tmp_386*tmp_59) + tmp_77*(tmp_390*tmp_73 - tmp_391*tmp_72) + tmp_90*(tmp_395*tmp_86 - tmp_396*tmp_85);
      real_t a_5_1 = tmp_51*(tmp_379*tmp_96 - tmp_381*tmp_93) + tmp_64*(tmp_384*tmp_99 - tmp_386*tmp_98) + tmp_77*(-tmp_101*tmp_391 + tmp_102*tmp_389) + tmp_90*(-tmp_104*tmp_396 + tmp_105*tmp_394);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_381 + tmp_110*tmp_379) + tmp_64*(-tmp_112*tmp_386 + tmp_113*tmp_384) + tmp_77*(-tmp_115*tmp_391 + tmp_116*tmp_389) + tmp_90*(-tmp_118*tmp_396 + tmp_119*tmp_394);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_381 + tmp_124*tmp_379) + tmp_64*(-tmp_126*tmp_386 + tmp_127*tmp_384) + tmp_77*(-tmp_129*tmp_391 + tmp_130*tmp_389) + tmp_90*(-tmp_132*tmp_396 + tmp_133*tmp_394);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_381 + tmp_141*tmp_380) + tmp_64*(-tmp_146*tmp_386 + tmp_149*tmp_385) + tmp_77*(-tmp_154*tmp_391 + tmp_157*tmp_390) + tmp_90*(-tmp_162*tmp_396 + tmp_165*tmp_395);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_381 + tmp_172*tmp_380) + tmp_64*(-tmp_176*tmp_386 + tmp_179*tmp_385) + tmp_77*(-tmp_183*tmp_391 + tmp_186*tmp_390) + tmp_90*(-tmp_190*tmp_396 + tmp_193*tmp_395);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_381 + tmp_199*tmp_380) + tmp_64*(-tmp_202*tmp_386 + tmp_205*tmp_385) + tmp_77*(-tmp_208*tmp_391 + tmp_211*tmp_390) + tmp_90*(-tmp_214*tmp_396 + tmp_217*tmp_395);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_381 + tmp_223*tmp_380) + tmp_64*(-tmp_228*tmp_386 + tmp_229*tmp_385) + tmp_77*(-tmp_234*tmp_391 + tmp_235*tmp_390) + tmp_90*(-tmp_240*tmp_396 + tmp_241*tmp_395);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_381 + tmp_246*tmp_380) + tmp_64*(-tmp_250*tmp_386 + tmp_251*tmp_385) + tmp_77*(-tmp_255*tmp_391 + tmp_256*tmp_390) + tmp_90*(-tmp_260*tmp_396 + tmp_261*tmp_395);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_381 + tmp_265*tmp_380) + tmp_64*(-tmp_268*tmp_386 + tmp_269*tmp_385) + tmp_77*(-tmp_272*tmp_391 + tmp_273*tmp_390) + tmp_90*(-tmp_276*tmp_396 + tmp_277*tmp_395);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_401 + tmp_34*tmp_400) + tmp_64*(tmp_405*tmp_60 - tmp_406*tmp_59) + tmp_77*(tmp_410*tmp_73 - tmp_411*tmp_72) + tmp_90*(tmp_415*tmp_86 - tmp_416*tmp_85);
      real_t a_6_1 = tmp_51*(tmp_399*tmp_96 - tmp_401*tmp_93) + tmp_64*(tmp_404*tmp_99 - tmp_406*tmp_98) + tmp_77*(-tmp_101*tmp_411 + tmp_102*tmp_409) + tmp_90*(-tmp_104*tmp_416 + tmp_105*tmp_414);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_401 + tmp_110*tmp_399) + tmp_64*(-tmp_112*tmp_406 + tmp_113*tmp_404) + tmp_77*(-tmp_115*tmp_411 + tmp_116*tmp_409) + tmp_90*(-tmp_118*tmp_416 + tmp_119*tmp_414);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_401 + tmp_124*tmp_399) + tmp_64*(-tmp_126*tmp_406 + tmp_127*tmp_404) + tmp_77*(-tmp_129*tmp_411 + tmp_130*tmp_409) + tmp_90*(-tmp_132*tmp_416 + tmp_133*tmp_414);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_401 + tmp_141*tmp_400) + tmp_64*(-tmp_146*tmp_406 + tmp_149*tmp_405) + tmp_77*(-tmp_154*tmp_411 + tmp_157*tmp_410) + tmp_90*(-tmp_162*tmp_416 + tmp_165*tmp_415);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_401 + tmp_172*tmp_400) + tmp_64*(-tmp_176*tmp_406 + tmp_179*tmp_405) + tmp_77*(-tmp_183*tmp_411 + tmp_186*tmp_410) + tmp_90*(-tmp_190*tmp_416 + tmp_193*tmp_415);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_401 + tmp_199*tmp_400) + tmp_64*(-tmp_202*tmp_406 + tmp_205*tmp_405) + tmp_77*(-tmp_208*tmp_411 + tmp_211*tmp_410) + tmp_90*(-tmp_214*tmp_416 + tmp_217*tmp_415);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_401 + tmp_223*tmp_400) + tmp_64*(-tmp_228*tmp_406 + tmp_229*tmp_405) + tmp_77*(-tmp_234*tmp_411 + tmp_235*tmp_410) + tmp_90*(-tmp_240*tmp_416 + tmp_241*tmp_415);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_401 + tmp_246*tmp_400) + tmp_64*(-tmp_250*tmp_406 + tmp_251*tmp_405) + tmp_77*(-tmp_255*tmp_411 + tmp_256*tmp_410) + tmp_90*(-tmp_260*tmp_416 + tmp_261*tmp_415);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_401 + tmp_265*tmp_400) + tmp_64*(-tmp_268*tmp_406 + tmp_269*tmp_405) + tmp_77*(-tmp_272*tmp_411 + tmp_273*tmp_410) + tmp_90*(-tmp_276*tmp_416 + tmp_277*tmp_415);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_3;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_11*tmp_5;
      real_t tmp_17 = tmp_14*tmp_9;
      real_t tmp_18 = tmp_3*tmp_8;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_12 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_16*tmp_4);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_9;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_9 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_18;
      real_t tmp_30 = tmp_12 - tmp_17;
      real_t tmp_31 = tmp_10 - tmp_16;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_0_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_0_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_0_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = -tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_15 - tmp_18;
      real_t tmp_32 = tmp_12 - tmp_17;
      real_t tmp_33 = -tmp_16 + tmp_9;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = 1.0*tmp_93;
      real_t tmp_279 = tmp_33*tmp_91;
      real_t tmp_280 = (2.0/3.0)*tmp_20;
      real_t tmp_281 = tmp_280*tmp_30;
      real_t tmp_282 = 1.0*tmp_98;
      real_t tmp_283 = tmp_280*tmp_33;
      real_t tmp_284 = tmp_283*tmp_97;
      real_t tmp_285 = 1.0*tmp_101;
      real_t tmp_286 = tmp_100*tmp_283;
      real_t tmp_287 = 1.0*tmp_104;
      real_t tmp_288 = tmp_103*tmp_283;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = (2.0/3.0)*tmp_289;
      real_t tmp_295 = tmp_26*tmp_294;
      real_t tmp_296 = tmp_106*tmp_279;
      real_t tmp_297 = 1.0*tmp_289;
      real_t tmp_298 = tmp_106*tmp_32;
      real_t tmp_299 = tmp_28*tmp_91;
      real_t tmp_300 = tmp_298*tmp_299;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_295*tmp_33;
      real_t tmp_303 = tmp_28*tmp_297;
      real_t tmp_304 = tmp_303*tmp_32;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_294*tmp_6;
      real_t tmp_308 = tmp_120*tmp_307;
      real_t tmp_309 = tmp_120*tmp_31;
      real_t tmp_310 = tmp_297*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_307*tmp_33;
      real_t tmp_313 = tmp_303*tmp_31;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_279*tmp_280;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = 1.0*tmp_112;
      real_t tmp_319 = tmp_280*tmp_32;
      real_t tmp_320 = tmp_111*tmp_319;
      real_t tmp_321 = 1.0*tmp_115;
      real_t tmp_322 = tmp_114*tmp_319;
      real_t tmp_323 = 1.0*tmp_118;
      real_t tmp_324 = tmp_117*tmp_319;
      real_t tmp_325 = tmp_26*tmp_297;
      real_t tmp_326 = tmp_325*tmp_33;
      real_t tmp_327 = tmp_28*tmp_294;
      real_t tmp_328 = tmp_32*tmp_327;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_307*tmp_32;
      real_t tmp_333 = tmp_31*tmp_325;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_280*tmp_298;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = 1.0*tmp_126;
      real_t tmp_339 = tmp_280*tmp_31;
      real_t tmp_340 = tmp_125*tmp_339;
      real_t tmp_341 = 1.0*tmp_129;
      real_t tmp_342 = tmp_128*tmp_339;
      real_t tmp_343 = 1.0*tmp_132;
      real_t tmp_344 = tmp_131*tmp_339;
      real_t tmp_345 = tmp_297*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_33*tmp_345;
      real_t tmp_348 = tmp_31*tmp_327;
      real_t tmp_349 = tmp_32*tmp_345;
      real_t tmp_350 = tmp_295*tmp_31;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_280*tmp_309;
      real_t tmp_354 = tmp_6*tmp_94;
      real_t tmp_355 = 0.13819660112501059*tmp_354;
      real_t tmp_356 = tmp_26*tmp_94;
      real_t tmp_357 = 0.58541019662496829*tmp_356;
      real_t tmp_358 = tmp_355 + tmp_357;
      real_t tmp_359 = 2*tmp_358;
      real_t tmp_360 = (2.0/3.0)*tmp_141;
      real_t tmp_361 = 0.58541019662496829*tmp_354;
      real_t tmp_362 = 0.13819660112501059*tmp_356;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = 2*tmp_363;
      real_t tmp_365 = (2.0/3.0)*tmp_149;
      real_t tmp_366 = 0.13819660112501059*tmp_354;
      real_t tmp_367 = 0.13819660112501059*tmp_356;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = 2*tmp_368;
      real_t tmp_370 = (2.0/3.0)*tmp_157;
      real_t tmp_371 = 0.13819660112501059*tmp_354;
      real_t tmp_372 = 0.13819660112501059*tmp_356;
      real_t tmp_373 = tmp_371 + tmp_372;
      real_t tmp_374 = 2*tmp_373;
      real_t tmp_375 = (2.0/3.0)*tmp_165;
      real_t tmp_376 = 0.13819660112501059*tmp_354;
      real_t tmp_377 = tmp_28*tmp_94;
      real_t tmp_378 = 0.58541019662496829*tmp_377;
      real_t tmp_379 = tmp_376 + tmp_378;
      real_t tmp_380 = 2*tmp_379;
      real_t tmp_381 = (2.0/3.0)*tmp_172;
      real_t tmp_382 = 0.13819660112501059*tmp_354;
      real_t tmp_383 = 0.13819660112501059*tmp_377;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = 2*tmp_384;
      real_t tmp_386 = (2.0/3.0)*tmp_179;
      real_t tmp_387 = 0.58541019662496829*tmp_354;
      real_t tmp_388 = 0.13819660112501059*tmp_377;
      real_t tmp_389 = tmp_387 + tmp_388;
      real_t tmp_390 = 2*tmp_389;
      real_t tmp_391 = (2.0/3.0)*tmp_186;
      real_t tmp_392 = 0.13819660112501059*tmp_354;
      real_t tmp_393 = 0.13819660112501059*tmp_377;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = 2*tmp_394;
      real_t tmp_396 = (2.0/3.0)*tmp_193;
      real_t tmp_397 = 0.13819660112501059*tmp_356;
      real_t tmp_398 = 0.13819660112501059*tmp_377;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = 2*tmp_399;
      real_t tmp_401 = (2.0/3.0)*tmp_199;
      real_t tmp_402 = 0.13819660112501059*tmp_356;
      real_t tmp_403 = 0.58541019662496829*tmp_377;
      real_t tmp_404 = tmp_402 + tmp_403;
      real_t tmp_405 = 2*tmp_404;
      real_t tmp_406 = (2.0/3.0)*tmp_205;
      real_t tmp_407 = 0.58541019662496829*tmp_356;
      real_t tmp_408 = 0.13819660112501059*tmp_377;
      real_t tmp_409 = tmp_407 + tmp_408;
      real_t tmp_410 = 2*tmp_409;
      real_t tmp_411 = (2.0/3.0)*tmp_211;
      real_t tmp_412 = 0.13819660112501059*tmp_356;
      real_t tmp_413 = 0.13819660112501059*tmp_377;
      real_t tmp_414 = tmp_412 + tmp_413;
      real_t tmp_415 = 2*tmp_414;
      real_t tmp_416 = (2.0/3.0)*tmp_217;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_357 - tmp_378;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_362 - tmp_383;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_367 - tmp_388;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_372 - tmp_393;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_355 - tmp_398;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_361 - tmp_403;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_366 - tmp_408;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_371 - tmp_413;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_376 - tmp_397;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_382 - tmp_402;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_387 - tmp_407;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_392 - tmp_412;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(tmp_278*tmp_34 - tmp_279*tmp_281) + tmp_64*(tmp_282*tmp_60 - tmp_284*tmp_59) + tmp_77*(tmp_285*tmp_73 - tmp_286*tmp_72) + tmp_90*(tmp_287*tmp_86 - tmp_288*tmp_85);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(-tmp_295*tmp_296 + tmp_297*tmp_300) + tmp_64*(-tmp_301*tmp_302 + tmp_301*tmp_304) + tmp_77*(-tmp_302*tmp_305 + tmp_304*tmp_305) + tmp_90*(-tmp_302*tmp_306 + tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_279*tmp_308 + tmp_299*tmp_310) + tmp_64*(-tmp_311*tmp_312 + tmp_311*tmp_313) + tmp_77*(-tmp_312*tmp_314 + tmp_313*tmp_314) + tmp_90*(-tmp_312*tmp_315 + tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_278) + tmp_64*(-tmp_146*tmp_284 + tmp_149*tmp_282) + tmp_77*(-tmp_154*tmp_286 + tmp_157*tmp_285) + tmp_90*(-tmp_162*tmp_288 + tmp_165*tmp_287);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_278) + tmp_64*(-tmp_176*tmp_284 + tmp_179*tmp_282) + tmp_77*(-tmp_183*tmp_286 + tmp_186*tmp_285) + tmp_90*(-tmp_190*tmp_288 + tmp_193*tmp_287);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_278) + tmp_64*(-tmp_202*tmp_284 + tmp_205*tmp_282) + tmp_77*(-tmp_208*tmp_286 + tmp_211*tmp_285) + tmp_90*(-tmp_214*tmp_288 + tmp_217*tmp_287);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_278) + tmp_64*(-tmp_228*tmp_284 + tmp_229*tmp_282) + tmp_77*(-tmp_234*tmp_286 + tmp_235*tmp_285) + tmp_90*(-tmp_240*tmp_288 + tmp_241*tmp_287);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_278) + tmp_64*(-tmp_250*tmp_284 + tmp_251*tmp_282) + tmp_77*(-tmp_255*tmp_286 + tmp_256*tmp_285) + tmp_90*(-tmp_260*tmp_288 + tmp_261*tmp_287);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_278) + tmp_64*(-tmp_268*tmp_284 + tmp_269*tmp_282) + tmp_77*(-tmp_272*tmp_286 + tmp_273*tmp_285) + tmp_90*(-tmp_276*tmp_288 + tmp_277*tmp_287);
      real_t a_2_0 = tmp_51*(-tmp_281*tmp_298 + tmp_317*tmp_34) + tmp_64*(tmp_318*tmp_60 - tmp_320*tmp_59) + tmp_77*(tmp_321*tmp_73 - tmp_322*tmp_72) + tmp_90*(tmp_323*tmp_86 - tmp_324*tmp_85);
      real_t a_2_1 = tmp_51*(-tmp_294*tmp_300 + tmp_296*tmp_325) + tmp_64*(tmp_301*tmp_326 - tmp_301*tmp_328) + tmp_77*(tmp_305*tmp_326 - tmp_305*tmp_328) + tmp_90*(tmp_306*tmp_326 - tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_310 - tmp_298*tmp_308) + tmp_64*(-tmp_331*tmp_332 + tmp_331*tmp_333) + tmp_77*(-tmp_332*tmp_334 + tmp_333*tmp_334) + tmp_90*(-tmp_332*tmp_335 + tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_320 + tmp_149*tmp_318) + tmp_77*(-tmp_154*tmp_322 + tmp_157*tmp_321) + tmp_90*(-tmp_162*tmp_324 + tmp_165*tmp_323);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_320 + tmp_179*tmp_318) + tmp_77*(-tmp_183*tmp_322 + tmp_186*tmp_321) + tmp_90*(-tmp_190*tmp_324 + tmp_193*tmp_323);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_320 + tmp_205*tmp_318) + tmp_77*(-tmp_208*tmp_322 + tmp_211*tmp_321) + tmp_90*(-tmp_214*tmp_324 + tmp_217*tmp_323);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_320 + tmp_229*tmp_318) + tmp_77*(-tmp_234*tmp_322 + tmp_235*tmp_321) + tmp_90*(-tmp_240*tmp_324 + tmp_241*tmp_323);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_320 + tmp_251*tmp_318) + tmp_77*(-tmp_255*tmp_322 + tmp_256*tmp_321) + tmp_90*(-tmp_260*tmp_324 + tmp_261*tmp_323);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_320 + tmp_269*tmp_318) + tmp_77*(-tmp_272*tmp_322 + tmp_273*tmp_321) + tmp_90*(-tmp_276*tmp_324 + tmp_277*tmp_323);
      real_t a_3_0 = tmp_51*(-tmp_281*tmp_309 + tmp_337*tmp_34) + tmp_64*(tmp_338*tmp_60 - tmp_340*tmp_59) + tmp_77*(tmp_341*tmp_73 - tmp_342*tmp_72) + tmp_90*(tmp_343*tmp_86 - tmp_344*tmp_85);
      real_t a_3_1 = tmp_51*(tmp_279*tmp_346 - tmp_294*tmp_299*tmp_309) + tmp_64*(tmp_311*tmp_347 - tmp_311*tmp_348) + tmp_77*(tmp_314*tmp_347 - tmp_314*tmp_348) + tmp_90*(tmp_315*tmp_347 - tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_295*tmp_309 + tmp_298*tmp_346) + tmp_64*(tmp_331*tmp_349 - tmp_331*tmp_350) + tmp_77*(tmp_334*tmp_349 - tmp_334*tmp_350) + tmp_90*(tmp_335*tmp_349 - tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_340 + tmp_149*tmp_338) + tmp_77*(-tmp_154*tmp_342 + tmp_157*tmp_341) + tmp_90*(-tmp_162*tmp_344 + tmp_165*tmp_343);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_340 + tmp_179*tmp_338) + tmp_77*(-tmp_183*tmp_342 + tmp_186*tmp_341) + tmp_90*(-tmp_190*tmp_344 + tmp_193*tmp_343);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_340 + tmp_205*tmp_338) + tmp_77*(-tmp_208*tmp_342 + tmp_211*tmp_341) + tmp_90*(-tmp_214*tmp_344 + tmp_217*tmp_343);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_340 + tmp_229*tmp_338) + tmp_77*(-tmp_234*tmp_342 + tmp_235*tmp_341) + tmp_90*(-tmp_240*tmp_344 + tmp_241*tmp_343);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_340 + tmp_251*tmp_338) + tmp_77*(-tmp_255*tmp_342 + tmp_256*tmp_341) + tmp_90*(-tmp_260*tmp_344 + tmp_261*tmp_343);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_340 + tmp_269*tmp_338) + tmp_77*(-tmp_272*tmp_342 + tmp_273*tmp_341) + tmp_90*(-tmp_276*tmp_344 + tmp_277*tmp_343);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_360 + tmp_34*tmp_359) + tmp_64*(tmp_364*tmp_60 - tmp_365*tmp_59) + tmp_77*(tmp_369*tmp_73 - tmp_370*tmp_72) + tmp_90*(tmp_374*tmp_86 - tmp_375*tmp_85);
      real_t a_4_1 = tmp_51*(tmp_358*tmp_96 - tmp_360*tmp_93) + tmp_64*(tmp_363*tmp_99 - tmp_365*tmp_98) + tmp_77*(-tmp_101*tmp_370 + tmp_102*tmp_368) + tmp_90*(-tmp_104*tmp_375 + tmp_105*tmp_373);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_360 + tmp_110*tmp_358) + tmp_64*(-tmp_112*tmp_365 + tmp_113*tmp_363) + tmp_77*(-tmp_115*tmp_370 + tmp_116*tmp_368) + tmp_90*(-tmp_118*tmp_375 + tmp_119*tmp_373);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_360 + tmp_124*tmp_358) + tmp_64*(-tmp_126*tmp_365 + tmp_127*tmp_363) + tmp_77*(-tmp_129*tmp_370 + tmp_130*tmp_368) + tmp_90*(-tmp_132*tmp_375 + tmp_133*tmp_373);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_360 + tmp_141*tmp_359) + tmp_64*(-tmp_146*tmp_365 + tmp_149*tmp_364) + tmp_77*(-tmp_154*tmp_370 + tmp_157*tmp_369) + tmp_90*(-tmp_162*tmp_375 + tmp_165*tmp_374);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_360 + tmp_172*tmp_359) + tmp_64*(-tmp_176*tmp_365 + tmp_179*tmp_364) + tmp_77*(-tmp_183*tmp_370 + tmp_186*tmp_369) + tmp_90*(-tmp_190*tmp_375 + tmp_193*tmp_374);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_360 + tmp_199*tmp_359) + tmp_64*(-tmp_202*tmp_365 + tmp_205*tmp_364) + tmp_77*(-tmp_208*tmp_370 + tmp_211*tmp_369) + tmp_90*(-tmp_214*tmp_375 + tmp_217*tmp_374);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_360 + tmp_223*tmp_359) + tmp_64*(-tmp_228*tmp_365 + tmp_229*tmp_364) + tmp_77*(-tmp_234*tmp_370 + tmp_235*tmp_369) + tmp_90*(-tmp_240*tmp_375 + tmp_241*tmp_374);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_360 + tmp_246*tmp_359) + tmp_64*(-tmp_250*tmp_365 + tmp_251*tmp_364) + tmp_77*(-tmp_255*tmp_370 + tmp_256*tmp_369) + tmp_90*(-tmp_260*tmp_375 + tmp_261*tmp_374);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_360 + tmp_265*tmp_359) + tmp_64*(-tmp_268*tmp_365 + tmp_269*tmp_364) + tmp_77*(-tmp_272*tmp_370 + tmp_273*tmp_369) + tmp_90*(-tmp_276*tmp_375 + tmp_277*tmp_374);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_381 + tmp_34*tmp_380) + tmp_64*(tmp_385*tmp_60 - tmp_386*tmp_59) + tmp_77*(tmp_390*tmp_73 - tmp_391*tmp_72) + tmp_90*(tmp_395*tmp_86 - tmp_396*tmp_85);
      real_t a_5_1 = tmp_51*(tmp_379*tmp_96 - tmp_381*tmp_93) + tmp_64*(tmp_384*tmp_99 - tmp_386*tmp_98) + tmp_77*(-tmp_101*tmp_391 + tmp_102*tmp_389) + tmp_90*(-tmp_104*tmp_396 + tmp_105*tmp_394);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_381 + tmp_110*tmp_379) + tmp_64*(-tmp_112*tmp_386 + tmp_113*tmp_384) + tmp_77*(-tmp_115*tmp_391 + tmp_116*tmp_389) + tmp_90*(-tmp_118*tmp_396 + tmp_119*tmp_394);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_381 + tmp_124*tmp_379) + tmp_64*(-tmp_126*tmp_386 + tmp_127*tmp_384) + tmp_77*(-tmp_129*tmp_391 + tmp_130*tmp_389) + tmp_90*(-tmp_132*tmp_396 + tmp_133*tmp_394);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_381 + tmp_141*tmp_380) + tmp_64*(-tmp_146*tmp_386 + tmp_149*tmp_385) + tmp_77*(-tmp_154*tmp_391 + tmp_157*tmp_390) + tmp_90*(-tmp_162*tmp_396 + tmp_165*tmp_395);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_381 + tmp_172*tmp_380) + tmp_64*(-tmp_176*tmp_386 + tmp_179*tmp_385) + tmp_77*(-tmp_183*tmp_391 + tmp_186*tmp_390) + tmp_90*(-tmp_190*tmp_396 + tmp_193*tmp_395);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_381 + tmp_199*tmp_380) + tmp_64*(-tmp_202*tmp_386 + tmp_205*tmp_385) + tmp_77*(-tmp_208*tmp_391 + tmp_211*tmp_390) + tmp_90*(-tmp_214*tmp_396 + tmp_217*tmp_395);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_381 + tmp_223*tmp_380) + tmp_64*(-tmp_228*tmp_386 + tmp_229*tmp_385) + tmp_77*(-tmp_234*tmp_391 + tmp_235*tmp_390) + tmp_90*(-tmp_240*tmp_396 + tmp_241*tmp_395);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_381 + tmp_246*tmp_380) + tmp_64*(-tmp_250*tmp_386 + tmp_251*tmp_385) + tmp_77*(-tmp_255*tmp_391 + tmp_256*tmp_390) + tmp_90*(-tmp_260*tmp_396 + tmp_261*tmp_395);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_381 + tmp_265*tmp_380) + tmp_64*(-tmp_268*tmp_386 + tmp_269*tmp_385) + tmp_77*(-tmp_272*tmp_391 + tmp_273*tmp_390) + tmp_90*(-tmp_276*tmp_396 + tmp_277*tmp_395);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_401 + tmp_34*tmp_400) + tmp_64*(tmp_405*tmp_60 - tmp_406*tmp_59) + tmp_77*(tmp_410*tmp_73 - tmp_411*tmp_72) + tmp_90*(tmp_415*tmp_86 - tmp_416*tmp_85);
      real_t a_6_1 = tmp_51*(tmp_399*tmp_96 - tmp_401*tmp_93) + tmp_64*(tmp_404*tmp_99 - tmp_406*tmp_98) + tmp_77*(-tmp_101*tmp_411 + tmp_102*tmp_409) + tmp_90*(-tmp_104*tmp_416 + tmp_105*tmp_414);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_401 + tmp_110*tmp_399) + tmp_64*(-tmp_112*tmp_406 + tmp_113*tmp_404) + tmp_77*(-tmp_115*tmp_411 + tmp_116*tmp_409) + tmp_90*(-tmp_118*tmp_416 + tmp_119*tmp_414);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_401 + tmp_124*tmp_399) + tmp_64*(-tmp_126*tmp_406 + tmp_127*tmp_404) + tmp_77*(-tmp_129*tmp_411 + tmp_130*tmp_409) + tmp_90*(-tmp_132*tmp_416 + tmp_133*tmp_414);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_401 + tmp_141*tmp_400) + tmp_64*(-tmp_146*tmp_406 + tmp_149*tmp_405) + tmp_77*(-tmp_154*tmp_411 + tmp_157*tmp_410) + tmp_90*(-tmp_162*tmp_416 + tmp_165*tmp_415);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_401 + tmp_172*tmp_400) + tmp_64*(-tmp_176*tmp_406 + tmp_179*tmp_405) + tmp_77*(-tmp_183*tmp_411 + tmp_186*tmp_410) + tmp_90*(-tmp_190*tmp_416 + tmp_193*tmp_415);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_401 + tmp_199*tmp_400) + tmp_64*(-tmp_202*tmp_406 + tmp_205*tmp_405) + tmp_77*(-tmp_208*tmp_411 + tmp_211*tmp_410) + tmp_90*(-tmp_214*tmp_416 + tmp_217*tmp_415);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_401 + tmp_223*tmp_400) + tmp_64*(-tmp_228*tmp_406 + tmp_229*tmp_405) + tmp_77*(-tmp_234*tmp_411 + tmp_235*tmp_410) + tmp_90*(-tmp_240*tmp_416 + tmp_241*tmp_415);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_401 + tmp_246*tmp_400) + tmp_64*(-tmp_250*tmp_406 + tmp_251*tmp_405) + tmp_77*(-tmp_255*tmp_411 + tmp_256*tmp_410) + tmp_90*(-tmp_260*tmp_416 + tmp_261*tmp_415);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_401 + tmp_265*tmp_400) + tmp_64*(-tmp_268*tmp_406 + tmp_269*tmp_405) + tmp_77*(-tmp_272*tmp_411 + tmp_273*tmp_410) + tmp_90*(-tmp_276*tmp_416 + tmp_277*tmp_415);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_0_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_3*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_10*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_5;
      real_t tmp_16 = tmp_10*tmp_14;
      real_t tmp_17 = tmp_5*tmp_8;
      real_t tmp_18 = tmp_11*tmp_3;
      real_t tmp_19 = 1.0 / (-tmp_1*tmp_16 + tmp_1*tmp_9 + tmp_12*tmp_4 + tmp_13*tmp_15 - tmp_13*tmp_18 - tmp_17*tmp_4);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_15 - tmp_18;
      real_t tmp_30 = tmp_12 - tmp_17;
      real_t tmp_31 = -tmp_16 + tmp_9;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = tmp_4 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2);
      real_t tmp_6 = 1.0 / (tmp_5);
      real_t tmp_7 = 0.66666666666666663;
      real_t tmp_8 = 2.6666666666666665;
      real_t tmp_9 = tmp_6*(tmp_7 + tmp_8 - 3);
      real_t tmp_10 = tmp_1*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = tmp_11*tmp_9;
      real_t tmp_13 = tmp_10 + tmp_12;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_14*tmp_9 + tmp_3*tmp_9;
      real_t tmp_16 = (2.0/3.0)*tmp_15;
      real_t tmp_17 = 0.5*tmp_10 + 0.5*tmp_12;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_20 = 0.16666666666666666*tmp_19;
      real_t tmp_21 = 2.6666666666666665;
      real_t tmp_22 = 0.66666666666666663;
      real_t tmp_23 = tmp_6*(tmp_21 + tmp_22 - 3);
      real_t tmp_24 = tmp_1*tmp_23;
      real_t tmp_25 = tmp_11*tmp_23;
      real_t tmp_26 = tmp_24 + tmp_25;
      real_t tmp_27 = tmp_14*tmp_23 + tmp_23*tmp_3;
      real_t tmp_28 = (2.0/3.0)*tmp_27;
      real_t tmp_29 = 0.5*tmp_24 + 0.5*tmp_25;
      real_t tmp_30 = 2*tmp_29;
      real_t tmp_31 = 0.16666666666666666*tmp_19;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = 0.66666666666666663;
      real_t tmp_34 = tmp_6*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_11*tmp_34;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_14*tmp_34 + tmp_3*tmp_34;
      real_t tmp_39 = (2.0/3.0)*tmp_38;
      real_t tmp_40 = 0.5*tmp_35 + 0.5*tmp_36;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 0.16666666666666666*tmp_19;
      real_t tmp_43 = tmp_7 - 1;
      real_t tmp_44 = tmp_1*tmp_6;
      real_t tmp_45 = tmp_43*tmp_44;
      real_t tmp_46 = tmp_14*tmp_6;
      real_t tmp_47 = 2.0*tmp_46;
      real_t tmp_48 = tmp_43*tmp_47;
      real_t tmp_49 = tmp_21 - 1;
      real_t tmp_50 = tmp_44*tmp_49;
      real_t tmp_51 = tmp_47*tmp_49;
      real_t tmp_52 = tmp_32 - 1;
      real_t tmp_53 = tmp_44*tmp_52;
      real_t tmp_54 = tmp_47*tmp_52;
      real_t tmp_55 = tmp_8 - 1;
      real_t tmp_56 = tmp_11*tmp_6;
      real_t tmp_57 = tmp_55*tmp_56;
      real_t tmp_58 = tmp_3*tmp_6;
      real_t tmp_59 = 2.0*tmp_58;
      real_t tmp_60 = tmp_55*tmp_59;
      real_t tmp_61 = tmp_22 - 1;
      real_t tmp_62 = tmp_56*tmp_61;
      real_t tmp_63 = tmp_59*tmp_61;
      real_t tmp_64 = tmp_33 - 1;
      real_t tmp_65 = tmp_56*tmp_64;
      real_t tmp_66 = tmp_59*tmp_64;
      real_t tmp_67 = tmp_56*tmp_7;
      real_t tmp_68 = tmp_44*tmp_8;
      real_t tmp_69 = tmp_67 + tmp_68;
      real_t tmp_70 = 4.0*tmp_6;
      real_t tmp_71 = tmp_3*tmp_70;
      real_t tmp_72 = 0.16666666666666666*tmp_71;
      real_t tmp_73 = tmp_14*tmp_70;
      real_t tmp_74 = 0.66666666666666663*tmp_73;
      real_t tmp_75 = tmp_72 + tmp_74;
      real_t tmp_76 = tmp_21*tmp_56;
      real_t tmp_77 = tmp_22*tmp_44;
      real_t tmp_78 = tmp_76 + tmp_77;
      real_t tmp_79 = 0.66666666666666663*tmp_71;
      real_t tmp_80 = 0.16666666666666666*tmp_73;
      real_t tmp_81 = tmp_79 + tmp_80;
      real_t tmp_82 = tmp_32*tmp_56;
      real_t tmp_83 = tmp_33*tmp_44;
      real_t tmp_84 = tmp_82 + tmp_83;
      real_t tmp_85 = 0.16666666666666666*tmp_71;
      real_t tmp_86 = 0.16666666666666666*tmp_73;
      real_t tmp_87 = tmp_85 + tmp_86;
      real_t tmp_88 = tmp_6*(-tmp_7 - 1.333333333333333);
      real_t tmp_89 = tmp_11*tmp_88;
      real_t tmp_90 = -tmp_68 + tmp_89;
      real_t tmp_91 = tmp_3*tmp_88;
      real_t tmp_92 = -tmp_74 + tmp_91;
      real_t tmp_93 = tmp_6*(2.666666666666667 - tmp_21);
      real_t tmp_94 = tmp_11*tmp_93;
      real_t tmp_95 = -tmp_77 + tmp_94;
      real_t tmp_96 = tmp_3*tmp_93;
      real_t tmp_97 = -tmp_80 + tmp_96;
      real_t tmp_98 = tmp_6*(2.666666666666667 - tmp_32);
      real_t tmp_99 = tmp_11*tmp_98;
      real_t tmp_100 = -tmp_83 + tmp_99;
      real_t tmp_101 = tmp_3*tmp_98;
      real_t tmp_102 = tmp_101 - tmp_86;
      real_t tmp_103 = tmp_6*(2.666666666666667 - tmp_8);
      real_t tmp_104 = tmp_1*tmp_103;
      real_t tmp_105 = tmp_104 - tmp_67;
      real_t tmp_106 = tmp_103*tmp_14;
      real_t tmp_107 = tmp_106 - tmp_72;
      real_t tmp_108 = tmp_6*(-tmp_22 - 1.333333333333333);
      real_t tmp_109 = tmp_1*tmp_108;
      real_t tmp_110 = tmp_109 - tmp_76;
      real_t tmp_111 = tmp_108*tmp_14;
      real_t tmp_112 = tmp_111 - tmp_79;
      real_t tmp_113 = tmp_6*(2.666666666666667 - tmp_33);
      real_t tmp_114 = tmp_1*tmp_113;
      real_t tmp_115 = tmp_114 - tmp_82;
      real_t tmp_116 = tmp_113*tmp_14;
      real_t tmp_117 = tmp_116 - tmp_85;
      real_t tmp_118 = (2.0/3.0)*tmp_46;
      real_t tmp_119 = tmp_118*tmp_43;
      real_t tmp_120 = 1.0*tmp_45;
      real_t tmp_121 = tmp_118*tmp_49;
      real_t tmp_122 = 1.0*tmp_50;
      real_t tmp_123 = tmp_118*tmp_52;
      real_t tmp_124 = 1.0*tmp_53;
      real_t tmp_125 = 1.0 / (tmp_5*tmp_5);
      real_t tmp_126 = 0.33333333333333337*tmp_125;
      real_t tmp_127 = tmp_126*tmp_20;
      real_t tmp_128 = tmp_1*tmp_14;
      real_t tmp_129 = tmp_126*tmp_128;
      real_t tmp_130 = tmp_43*tmp_55;
      real_t tmp_131 = tmp_130*tmp_4;
      real_t tmp_132 = 1.0*tmp_125;
      real_t tmp_133 = (2.0/3.0)*tmp_125;
      real_t tmp_134 = tmp_11*tmp_14;
      real_t tmp_135 = tmp_133*tmp_134;
      real_t tmp_136 = tmp_49*tmp_61;
      real_t tmp_137 = tmp_132*tmp_4;
      real_t tmp_138 = tmp_52*tmp_64;
      real_t tmp_139 = (2.0/3.0)*tmp_58;
      real_t tmp_140 = tmp_139*tmp_55;
      real_t tmp_141 = 1.0*tmp_57;
      real_t tmp_142 = tmp_139*tmp_61;
      real_t tmp_143 = 1.0*tmp_62;
      real_t tmp_144 = tmp_139*tmp_64;
      real_t tmp_145 = 1.0*tmp_65;
      real_t tmp_146 = tmp_132*tmp_134;
      real_t tmp_147 = tmp_133*tmp_4;
      real_t tmp_148 = tmp_11*tmp_3;
      real_t tmp_149 = tmp_126*tmp_148;
      real_t tmp_150 = tmp_58*tmp_7;
      real_t tmp_151 = tmp_46*tmp_8;
      real_t tmp_152 = (2.0/3.0)*tmp_150 + (2.0/3.0)*tmp_151;
      real_t tmp_153 = 2.0*tmp_56;
      real_t tmp_154 = 0.16666666666666666*tmp_153;
      real_t tmp_155 = 2.0*tmp_44;
      real_t tmp_156 = 0.66666666666666663*tmp_155;
      real_t tmp_157 = tmp_154 + tmp_156;
      real_t tmp_158 = 2*tmp_157;
      real_t tmp_159 = tmp_21*tmp_58;
      real_t tmp_160 = tmp_22*tmp_46;
      real_t tmp_161 = (2.0/3.0)*tmp_159 + (2.0/3.0)*tmp_160;
      real_t tmp_162 = 0.66666666666666663*tmp_153;
      real_t tmp_163 = 0.16666666666666666*tmp_155;
      real_t tmp_164 = tmp_162 + tmp_163;
      real_t tmp_165 = 2*tmp_164;
      real_t tmp_166 = tmp_32*tmp_58;
      real_t tmp_167 = tmp_33*tmp_46;
      real_t tmp_168 = (2.0/3.0)*tmp_166 + (2.0/3.0)*tmp_167;
      real_t tmp_169 = 0.16666666666666666*tmp_153;
      real_t tmp_170 = 0.16666666666666666*tmp_155;
      real_t tmp_171 = tmp_169 + tmp_170;
      real_t tmp_172 = 2*tmp_171;
      real_t tmp_173 = -2.0/3.0*tmp_151 + (2.0/3.0)*tmp_91;
      real_t tmp_174 = -tmp_156 + 0.5*tmp_89;
      real_t tmp_175 = 2*tmp_174;
      real_t tmp_176 = -2.0/3.0*tmp_160 + (2.0/3.0)*tmp_96;
      real_t tmp_177 = -tmp_163 + 0.5*tmp_94;
      real_t tmp_178 = 2*tmp_177;
      real_t tmp_179 = (2.0/3.0)*tmp_101 - 2.0/3.0*tmp_167;
      real_t tmp_180 = -tmp_170 + 0.5*tmp_99;
      real_t tmp_181 = 2*tmp_180;
      real_t tmp_182 = (2.0/3.0)*tmp_106 - 2.0/3.0*tmp_150;
      real_t tmp_183 = 0.5*tmp_104 - tmp_154;
      real_t tmp_184 = 2*tmp_183;
      real_t tmp_185 = (2.0/3.0)*tmp_111 - 2.0/3.0*tmp_159;
      real_t tmp_186 = 0.5*tmp_109 - tmp_162;
      real_t tmp_187 = 2*tmp_186;
      real_t tmp_188 = (2.0/3.0)*tmp_116 - 2.0/3.0*tmp_166;
      real_t tmp_189 = 0.5*tmp_114 - tmp_169;
      real_t tmp_190 = 2*tmp_189;
      real_t a_0_0 = tmp_20*(-tmp_13*tmp_16 + tmp_15*tmp_18) + tmp_31*(-tmp_26*tmp_28 + tmp_27*tmp_30) + tmp_42*(-tmp_37*tmp_39 + tmp_38*tmp_41);
      real_t a_0_1 = tmp_20*(-tmp_16*tmp_45 + tmp_17*tmp_48) + tmp_31*(-tmp_28*tmp_50 + tmp_29*tmp_51) + tmp_42*(-tmp_39*tmp_53 + tmp_40*tmp_54);
      real_t a_0_2 = tmp_20*(-tmp_16*tmp_57 + tmp_17*tmp_60) + tmp_31*(-tmp_28*tmp_62 + tmp_29*tmp_63) + tmp_42*(-tmp_39*tmp_65 + tmp_40*tmp_66);
      real_t a_0_3 = tmp_20*(-tmp_16*tmp_69 + tmp_18*tmp_75) + tmp_31*(-tmp_28*tmp_78 + tmp_30*tmp_81) + tmp_42*(-tmp_39*tmp_84 + tmp_41*tmp_87);
      real_t a_0_4 = tmp_20*(-tmp_16*tmp_90 + tmp_18*tmp_92) + tmp_31*(-tmp_28*tmp_95 + tmp_30*tmp_97) + tmp_42*(-tmp_100*tmp_39 + tmp_102*tmp_41);
      real_t a_0_5 = tmp_20*(-tmp_105*tmp_16 + tmp_107*tmp_18) + tmp_31*(-tmp_110*tmp_28 + tmp_112*tmp_30) + tmp_42*(-tmp_115*tmp_39 + tmp_117*tmp_41);
      real_t a_1_0 = tmp_20*(-tmp_119*tmp_13 + tmp_120*tmp_15) + tmp_31*(-tmp_121*tmp_26 + tmp_122*tmp_27) + tmp_42*(-tmp_123*tmp_37 + tmp_124*tmp_38);
      real_t a_1_1 = tmp_127*tmp_128*(tmp_43*tmp_43) + tmp_129*tmp_31*(tmp_49*tmp_49) + tmp_129*tmp_42*(tmp_52*tmp_52);
      real_t a_1_2 = tmp_20*(-tmp_130*tmp_135 + tmp_131*tmp_132) + tmp_31*(-tmp_135*tmp_136 + tmp_136*tmp_137) + tmp_42*(-tmp_135*tmp_138 + tmp_137*tmp_138);
      real_t a_1_3 = tmp_20*(-tmp_119*tmp_69 + tmp_120*tmp_75) + tmp_31*(-tmp_121*tmp_78 + tmp_122*tmp_81) + tmp_42*(-tmp_123*tmp_84 + tmp_124*tmp_87);
      real_t a_1_4 = tmp_20*(-tmp_119*tmp_90 + tmp_120*tmp_92) + tmp_31*(-tmp_121*tmp_95 + tmp_122*tmp_97) + tmp_42*(-tmp_100*tmp_123 + tmp_102*tmp_124);
      real_t a_1_5 = tmp_20*(-tmp_105*tmp_119 + tmp_107*tmp_120) + tmp_31*(-tmp_110*tmp_121 + tmp_112*tmp_122) + tmp_42*(-tmp_115*tmp_123 + tmp_117*tmp_124);
      real_t a_2_0 = tmp_20*(-tmp_13*tmp_140 + tmp_141*tmp_15) + tmp_31*(-tmp_142*tmp_26 + tmp_143*tmp_27) + tmp_42*(-tmp_144*tmp_37 + tmp_145*tmp_38);
      real_t a_2_1 = tmp_20*(tmp_130*tmp_146 - tmp_131*tmp_133) + tmp_31*(tmp_136*tmp_146 - tmp_136*tmp_147) + tmp_42*(tmp_138*tmp_146 - tmp_138*tmp_147);
      real_t a_2_2 = tmp_127*tmp_148*(tmp_55*tmp_55) + tmp_149*tmp_31*(tmp_61*tmp_61) + tmp_149*tmp_42*(tmp_64*tmp_64);
      real_t a_2_3 = tmp_20*(-tmp_140*tmp_69 + tmp_141*tmp_75) + tmp_31*(-tmp_142*tmp_78 + tmp_143*tmp_81) + tmp_42*(-tmp_144*tmp_84 + tmp_145*tmp_87);
      real_t a_2_4 = tmp_20*(-tmp_140*tmp_90 + tmp_141*tmp_92) + tmp_31*(-tmp_142*tmp_95 + tmp_143*tmp_97) + tmp_42*(-tmp_100*tmp_144 + tmp_102*tmp_145);
      real_t a_2_5 = tmp_20*(-tmp_105*tmp_140 + tmp_107*tmp_141) + tmp_31*(-tmp_110*tmp_142 + tmp_112*tmp_143) + tmp_42*(-tmp_115*tmp_144 + tmp_117*tmp_145);
      real_t a_3_0 = tmp_20*(-tmp_13*tmp_152 + tmp_15*tmp_158) + tmp_31*(-tmp_161*tmp_26 + tmp_165*tmp_27) + tmp_42*(-tmp_168*tmp_37 + tmp_172*tmp_38);
      real_t a_3_1 = tmp_20*(-tmp_152*tmp_45 + tmp_157*tmp_48) + tmp_31*(-tmp_161*tmp_50 + tmp_164*tmp_51) + tmp_42*(-tmp_168*tmp_53 + tmp_171*tmp_54);
      real_t a_3_2 = tmp_20*(-tmp_152*tmp_57 + tmp_157*tmp_60) + tmp_31*(-tmp_161*tmp_62 + tmp_164*tmp_63) + tmp_42*(-tmp_168*tmp_65 + tmp_171*tmp_66);
      real_t a_3_3 = tmp_20*(-tmp_152*tmp_69 + tmp_158*tmp_75) + tmp_31*(-tmp_161*tmp_78 + tmp_165*tmp_81) + tmp_42*(-tmp_168*tmp_84 + tmp_172*tmp_87);
      real_t a_3_4 = tmp_20*(-tmp_152*tmp_90 + tmp_158*tmp_92) + tmp_31*(-tmp_161*tmp_95 + tmp_165*tmp_97) + tmp_42*(-tmp_100*tmp_168 + tmp_102*tmp_172);
      real_t a_3_5 = tmp_20*(-tmp_105*tmp_152 + tmp_107*tmp_158) + tmp_31*(-tmp_110*tmp_161 + tmp_112*tmp_165) + tmp_42*(-tmp_115*tmp_168 + tmp_117*tmp_172);
      real_t a_4_0 = tmp_20*(-tmp_13*tmp_173 + tmp_15*tmp_175) + tmp_31*(-tmp_176*tmp_26 + tmp_178*tmp_27) + tmp_42*(-tmp_179*tmp_37 + tmp_181*tmp_38);
      real_t a_4_1 = tmp_20*(-tmp_173*tmp_45 + tmp_174*tmp_48) + tmp_31*(-tmp_176*tmp_50 + tmp_177*tmp_51) + tmp_42*(-tmp_179*tmp_53 + tmp_180*tmp_54);
      real_t a_4_2 = tmp_20*(-tmp_173*tmp_57 + tmp_174*tmp_60) + tmp_31*(-tmp_176*tmp_62 + tmp_177*tmp_63) + tmp_42*(-tmp_179*tmp_65 + tmp_180*tmp_66);
      real_t a_4_3 = tmp_20*(-tmp_173*tmp_69 + tmp_175*tmp_75) + tmp_31*(-tmp_176*tmp_78 + tmp_178*tmp_81) + tmp_42*(-tmp_179*tmp_84 + tmp_181*tmp_87);
      real_t a_4_4 = tmp_20*(-tmp_173*tmp_90 + tmp_175*tmp_92) + tmp_31*(-tmp_176*tmp_95 + tmp_178*tmp_97) + tmp_42*(-tmp_100*tmp_179 + tmp_102*tmp_181);
      real_t a_4_5 = tmp_20*(-tmp_105*tmp_173 + tmp_107*tmp_175) + tmp_31*(-tmp_110*tmp_176 + tmp_112*tmp_178) + tmp_42*(-tmp_115*tmp_179 + tmp_117*tmp_181);
      real_t a_5_0 = tmp_20*(-tmp_13*tmp_182 + tmp_15*tmp_184) + tmp_31*(-tmp_185*tmp_26 + tmp_187*tmp_27) + tmp_42*(-tmp_188*tmp_37 + tmp_190*tmp_38);
      real_t a_5_1 = tmp_20*(-tmp_182*tmp_45 + tmp_183*tmp_48) + tmp_31*(-tmp_185*tmp_50 + tmp_186*tmp_51) + tmp_42*(-tmp_188*tmp_53 + tmp_189*tmp_54);
      real_t a_5_2 = tmp_20*(-tmp_182*tmp_57 + tmp_183*tmp_60) + tmp_31*(-tmp_185*tmp_62 + tmp_186*tmp_63) + tmp_42*(-tmp_188*tmp_65 + tmp_189*tmp_66);
      real_t a_5_3 = tmp_20*(-tmp_182*tmp_69 + tmp_184*tmp_75) + tmp_31*(-tmp_185*tmp_78 + tmp_187*tmp_81) + tmp_42*(-tmp_188*tmp_84 + tmp_190*tmp_87);
      real_t a_5_4 = tmp_20*(-tmp_182*tmp_90 + tmp_184*tmp_92) + tmp_31*(-tmp_185*tmp_95 + tmp_187*tmp_97) + tmp_42*(-tmp_100*tmp_188 + tmp_102*tmp_190);
      real_t a_5_5 = tmp_20*(-tmp_105*tmp_182 + tmp_107*tmp_184) + tmp_31*(-tmp_110*tmp_185 + tmp_112*tmp_187) + tmp_42*(-tmp_115*tmp_188 + tmp_117*tmp_190);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_1_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_2_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_0;
      real_t tmp_3 = p_affine_1_0 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_0)*(p_affine_2_0 + tmp_2));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_12 = tmp_11*tmp_7 + tmp_3*tmp_7;
      real_t tmp_13 = (2.0/3.0)*tmp_12;
      real_t tmp_14 = 0.5*tmp_10 + 0.5*tmp_8;
      real_t tmp_15 = 2*tmp_14;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 0.16666666666666666*tmp_16;
      real_t tmp_18 = 2.6666666666666665;
      real_t tmp_19 = 0.66666666666666663;
      real_t tmp_20 = tmp_4*(tmp_18 + tmp_19 - 3);
      real_t tmp_21 = tmp_1*tmp_20;
      real_t tmp_22 = tmp_20*tmp_9;
      real_t tmp_23 = tmp_11*tmp_20 + tmp_20*tmp_3;
      real_t tmp_24 = (2.0/3.0)*tmp_23;
      real_t tmp_25 = 0.5*tmp_21 + 0.5*tmp_22;
      real_t tmp_26 = 2*tmp_25;
      real_t tmp_27 = 0.16666666666666666*tmp_16;
      real_t tmp_28 = 0.66666666666666663;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_4*(tmp_28 + tmp_29 - 3);
      real_t tmp_31 = tmp_1*tmp_30;
      real_t tmp_32 = tmp_30*tmp_9;
      real_t tmp_33 = tmp_11*tmp_30 + tmp_3*tmp_30;
      real_t tmp_34 = (2.0/3.0)*tmp_33;
      real_t tmp_35 = 0.5*tmp_31 + 0.5*tmp_32;
      real_t tmp_36 = 2*tmp_35;
      real_t tmp_37 = 0.16666666666666666*tmp_16;
      real_t tmp_38 = tmp_5 - 1;
      real_t tmp_39 = tmp_1*tmp_4;
      real_t tmp_40 = 2.0*tmp_4;
      real_t tmp_41 = tmp_11*tmp_40;
      real_t tmp_42 = tmp_18 - 1;
      real_t tmp_43 = tmp_28 - 1;
      real_t tmp_44 = tmp_6 - 1;
      real_t tmp_45 = tmp_4*tmp_9;
      real_t tmp_46 = tmp_3*tmp_40;
      real_t tmp_47 = tmp_19 - 1;
      real_t tmp_48 = tmp_29 - 1;
      real_t tmp_49 = tmp_45*tmp_5;
      real_t tmp_50 = tmp_39*tmp_6;
      real_t tmp_51 = 4.0*tmp_4;
      real_t tmp_52 = tmp_3*tmp_51;
      real_t tmp_53 = 0.16666666666666666*tmp_52;
      real_t tmp_54 = tmp_11*tmp_51;
      real_t tmp_55 = 0.66666666666666663*tmp_54;
      real_t tmp_56 = tmp_18*tmp_45;
      real_t tmp_57 = tmp_19*tmp_39;
      real_t tmp_58 = 0.66666666666666663*tmp_52;
      real_t tmp_59 = 0.16666666666666666*tmp_54;
      real_t tmp_60 = tmp_28*tmp_45;
      real_t tmp_61 = tmp_29*tmp_39;
      real_t tmp_62 = 0.16666666666666666*tmp_52;
      real_t tmp_63 = 0.16666666666666666*tmp_54;
      real_t tmp_64 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_65 = tmp_4*(2.666666666666667 - tmp_18);
      real_t tmp_66 = tmp_4*(2.666666666666667 - tmp_28);
      real_t tmp_67 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_68 = tmp_4*(-tmp_19 - 1.333333333333333);
      real_t tmp_69 = tmp_4*(2.666666666666667 - tmp_29);
      real_t a_0_0 = tmp_17*(tmp_12*tmp_15 - tmp_13*(tmp_10 + tmp_8)) + tmp_27*(tmp_23*tmp_26 - tmp_24*(tmp_21 + tmp_22)) + tmp_37*(tmp_33*tmp_36 - tmp_34*(tmp_31 + tmp_32));
      real_t a_0_1 = tmp_17*(-tmp_13*tmp_38*tmp_39 + tmp_14*tmp_38*tmp_41) + tmp_27*(-tmp_24*tmp_39*tmp_42 + tmp_25*tmp_41*tmp_42) + tmp_37*(-tmp_34*tmp_39*tmp_43 + tmp_35*tmp_41*tmp_43);
      real_t a_0_2 = tmp_17*(-tmp_13*tmp_44*tmp_45 + tmp_14*tmp_44*tmp_46) + tmp_27*(-tmp_24*tmp_45*tmp_47 + tmp_25*tmp_46*tmp_47) + tmp_37*(-tmp_34*tmp_45*tmp_48 + tmp_35*tmp_46*tmp_48);
      real_t a_0_3 = tmp_17*(-tmp_13*(tmp_49 + tmp_50) + tmp_15*(tmp_53 + tmp_55)) + tmp_27*(-tmp_24*(tmp_56 + tmp_57) + tmp_26*(tmp_58 + tmp_59)) + tmp_37*(-tmp_34*(tmp_60 + tmp_61) + tmp_36*(tmp_62 + tmp_63));
      real_t a_0_4 = tmp_17*(-tmp_13*(-tmp_50 + tmp_64*tmp_9) + tmp_15*(tmp_3*tmp_64 - tmp_55)) + tmp_27*(-tmp_24*(-tmp_57 + tmp_65*tmp_9) + tmp_26*(tmp_3*tmp_65 - tmp_59)) + tmp_37*(-tmp_34*(-tmp_61 + tmp_66*tmp_9) + tmp_36*(tmp_3*tmp_66 - tmp_63));
      real_t a_0_5 = tmp_17*(-tmp_13*(tmp_1*tmp_67 - tmp_49) + tmp_15*(tmp_11*tmp_67 - tmp_53)) + tmp_27*(-tmp_24*(tmp_1*tmp_68 - tmp_56) + tmp_26*(tmp_11*tmp_68 - tmp_58)) + tmp_37*(-tmp_34*(tmp_1*tmp_69 - tmp_60) + tmp_36*(tmp_11*tmp_69 - tmp_62));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_1_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = p_affine_2_0 + tmp_7;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_3_0 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = tmp_3*tmp_8;
      real_t tmp_17 = tmp_12*tmp_9;
      real_t tmp_18 = tmp_14*tmp_5;
      real_t tmp_19 = tmp_1*tmp_15 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_11*tmp_13 - tmp_11*tmp_16 - tmp_18*tmp_4;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_9 + tmp_11*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_11*tmp_3 + tmp_4*tmp_9;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_13 - tmp_16;
      real_t tmp_32 = tmp_10 - tmp_18;
      real_t tmp_33 = tmp_15 - tmp_17;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = tmp_33*tmp_91;
      real_t tmp_279 = (2.0/3.0)*tmp_20;
      real_t tmp_280 = tmp_279*tmp_30;
      real_t tmp_281 = 1.0*tmp_93;
      real_t tmp_282 = tmp_279*tmp_33;
      real_t tmp_283 = tmp_282*tmp_97;
      real_t tmp_284 = 1.0*tmp_98;
      real_t tmp_285 = tmp_100*tmp_282;
      real_t tmp_286 = 1.0*tmp_101;
      real_t tmp_287 = tmp_103*tmp_282;
      real_t tmp_288 = 1.0*tmp_104;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = 1.0*tmp_289;
      real_t tmp_295 = tmp_106*tmp_32;
      real_t tmp_296 = tmp_28*tmp_91;
      real_t tmp_297 = tmp_295*tmp_296;
      real_t tmp_298 = (2.0/3.0)*tmp_289;
      real_t tmp_299 = tmp_26*tmp_298;
      real_t tmp_300 = tmp_106*tmp_278;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_28*tmp_294;
      real_t tmp_303 = tmp_302*tmp_32;
      real_t tmp_304 = tmp_299*tmp_33;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_120*tmp_31;
      real_t tmp_308 = tmp_294*tmp_307;
      real_t tmp_309 = tmp_298*tmp_6;
      real_t tmp_310 = tmp_120*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_302*tmp_31;
      real_t tmp_313 = tmp_309*tmp_33;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_278*tmp_279;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = tmp_279*tmp_32;
      real_t tmp_319 = tmp_111*tmp_318;
      real_t tmp_320 = 1.0*tmp_112;
      real_t tmp_321 = tmp_114*tmp_318;
      real_t tmp_322 = 1.0*tmp_115;
      real_t tmp_323 = tmp_117*tmp_318;
      real_t tmp_324 = 1.0*tmp_118;
      real_t tmp_325 = tmp_26*tmp_294;
      real_t tmp_326 = tmp_28*tmp_298;
      real_t tmp_327 = tmp_32*tmp_326;
      real_t tmp_328 = tmp_325*tmp_33;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_31*tmp_325;
      real_t tmp_333 = tmp_309*tmp_32;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_279*tmp_295;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = tmp_279*tmp_31;
      real_t tmp_339 = tmp_125*tmp_338;
      real_t tmp_340 = 1.0*tmp_126;
      real_t tmp_341 = tmp_128*tmp_338;
      real_t tmp_342 = 1.0*tmp_129;
      real_t tmp_343 = tmp_131*tmp_338;
      real_t tmp_344 = 1.0*tmp_132;
      real_t tmp_345 = tmp_294*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_31*tmp_326;
      real_t tmp_348 = tmp_33*tmp_345;
      real_t tmp_349 = tmp_299*tmp_31;
      real_t tmp_350 = tmp_32*tmp_345;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_279*tmp_307;
      real_t tmp_354 = (2.0/3.0)*tmp_141;
      real_t tmp_355 = tmp_6*tmp_94;
      real_t tmp_356 = 0.13819660112501059*tmp_355;
      real_t tmp_357 = tmp_26*tmp_94;
      real_t tmp_358 = 0.58541019662496829*tmp_357;
      real_t tmp_359 = tmp_356 + tmp_358;
      real_t tmp_360 = 2*tmp_359;
      real_t tmp_361 = (2.0/3.0)*tmp_149;
      real_t tmp_362 = 0.58541019662496829*tmp_355;
      real_t tmp_363 = 0.13819660112501059*tmp_357;
      real_t tmp_364 = tmp_362 + tmp_363;
      real_t tmp_365 = 2*tmp_364;
      real_t tmp_366 = (2.0/3.0)*tmp_157;
      real_t tmp_367 = 0.13819660112501059*tmp_355;
      real_t tmp_368 = 0.13819660112501059*tmp_357;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = 2*tmp_369;
      real_t tmp_371 = (2.0/3.0)*tmp_165;
      real_t tmp_372 = 0.13819660112501059*tmp_355;
      real_t tmp_373 = 0.13819660112501059*tmp_357;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = 2*tmp_374;
      real_t tmp_376 = (2.0/3.0)*tmp_172;
      real_t tmp_377 = 0.13819660112501059*tmp_355;
      real_t tmp_378 = tmp_28*tmp_94;
      real_t tmp_379 = 0.58541019662496829*tmp_378;
      real_t tmp_380 = tmp_377 + tmp_379;
      real_t tmp_381 = 2*tmp_380;
      real_t tmp_382 = (2.0/3.0)*tmp_179;
      real_t tmp_383 = 0.13819660112501059*tmp_355;
      real_t tmp_384 = 0.13819660112501059*tmp_378;
      real_t tmp_385 = tmp_383 + tmp_384;
      real_t tmp_386 = 2*tmp_385;
      real_t tmp_387 = (2.0/3.0)*tmp_186;
      real_t tmp_388 = 0.58541019662496829*tmp_355;
      real_t tmp_389 = 0.13819660112501059*tmp_378;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = 2*tmp_390;
      real_t tmp_392 = (2.0/3.0)*tmp_193;
      real_t tmp_393 = 0.13819660112501059*tmp_355;
      real_t tmp_394 = 0.13819660112501059*tmp_378;
      real_t tmp_395 = tmp_393 + tmp_394;
      real_t tmp_396 = 2*tmp_395;
      real_t tmp_397 = (2.0/3.0)*tmp_199;
      real_t tmp_398 = 0.13819660112501059*tmp_357;
      real_t tmp_399 = 0.13819660112501059*tmp_378;
      real_t tmp_400 = tmp_398 + tmp_399;
      real_t tmp_401 = 2*tmp_400;
      real_t tmp_402 = (2.0/3.0)*tmp_205;
      real_t tmp_403 = 0.13819660112501059*tmp_357;
      real_t tmp_404 = 0.58541019662496829*tmp_378;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = 2*tmp_405;
      real_t tmp_407 = (2.0/3.0)*tmp_211;
      real_t tmp_408 = 0.58541019662496829*tmp_357;
      real_t tmp_409 = 0.13819660112501059*tmp_378;
      real_t tmp_410 = tmp_408 + tmp_409;
      real_t tmp_411 = 2*tmp_410;
      real_t tmp_412 = (2.0/3.0)*tmp_217;
      real_t tmp_413 = 0.13819660112501059*tmp_357;
      real_t tmp_414 = 0.13819660112501059*tmp_378;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = 2*tmp_415;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_358 - tmp_379;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_363 - tmp_384;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_368 - tmp_389;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_373 - tmp_394;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_356 - tmp_399;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_362 - tmp_404;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_367 - tmp_409;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_372 - tmp_414;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_377 - tmp_398;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_383 - tmp_403;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_388 - tmp_408;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_393 - tmp_413;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(-tmp_278*tmp_280 + tmp_281*tmp_34) + tmp_64*(-tmp_283*tmp_59 + tmp_284*tmp_60) + tmp_77*(-tmp_285*tmp_72 + tmp_286*tmp_73) + tmp_90*(-tmp_287*tmp_85 + tmp_288*tmp_86);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(tmp_294*tmp_297 - tmp_299*tmp_300) + tmp_64*(tmp_301*tmp_303 - tmp_301*tmp_304) + tmp_77*(tmp_303*tmp_305 - tmp_304*tmp_305) + tmp_90*(tmp_303*tmp_306 - tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_278*tmp_310 + tmp_296*tmp_308) + tmp_64*(tmp_311*tmp_312 - tmp_311*tmp_313) + tmp_77*(tmp_312*tmp_314 - tmp_313*tmp_314) + tmp_90*(tmp_312*tmp_315 - tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_281) + tmp_64*(-tmp_146*tmp_283 + tmp_149*tmp_284) + tmp_77*(-tmp_154*tmp_285 + tmp_157*tmp_286) + tmp_90*(-tmp_162*tmp_287 + tmp_165*tmp_288);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_281) + tmp_64*(-tmp_176*tmp_283 + tmp_179*tmp_284) + tmp_77*(-tmp_183*tmp_285 + tmp_186*tmp_286) + tmp_90*(-tmp_190*tmp_287 + tmp_193*tmp_288);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_281) + tmp_64*(-tmp_202*tmp_283 + tmp_205*tmp_284) + tmp_77*(-tmp_208*tmp_285 + tmp_211*tmp_286) + tmp_90*(-tmp_214*tmp_287 + tmp_217*tmp_288);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_281) + tmp_64*(-tmp_228*tmp_283 + tmp_229*tmp_284) + tmp_77*(-tmp_234*tmp_285 + tmp_235*tmp_286) + tmp_90*(-tmp_240*tmp_287 + tmp_241*tmp_288);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_281) + tmp_64*(-tmp_250*tmp_283 + tmp_251*tmp_284) + tmp_77*(-tmp_255*tmp_285 + tmp_256*tmp_286) + tmp_90*(-tmp_260*tmp_287 + tmp_261*tmp_288);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_281) + tmp_64*(-tmp_268*tmp_283 + tmp_269*tmp_284) + tmp_77*(-tmp_272*tmp_285 + tmp_273*tmp_286) + tmp_90*(-tmp_276*tmp_287 + tmp_277*tmp_288);
      real_t a_2_0 = tmp_51*(-tmp_280*tmp_295 + tmp_317*tmp_34) + tmp_64*(-tmp_319*tmp_59 + tmp_320*tmp_60) + tmp_77*(-tmp_321*tmp_72 + tmp_322*tmp_73) + tmp_90*(-tmp_323*tmp_85 + tmp_324*tmp_86);
      real_t a_2_1 = tmp_51*(-tmp_297*tmp_298 + tmp_300*tmp_325) + tmp_64*(-tmp_301*tmp_327 + tmp_301*tmp_328) + tmp_77*(-tmp_305*tmp_327 + tmp_305*tmp_328) + tmp_90*(-tmp_306*tmp_327 + tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_308 - tmp_295*tmp_310) + tmp_64*(tmp_331*tmp_332 - tmp_331*tmp_333) + tmp_77*(tmp_332*tmp_334 - tmp_333*tmp_334) + tmp_90*(tmp_332*tmp_335 - tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_319 + tmp_149*tmp_320) + tmp_77*(-tmp_154*tmp_321 + tmp_157*tmp_322) + tmp_90*(-tmp_162*tmp_323 + tmp_165*tmp_324);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_319 + tmp_179*tmp_320) + tmp_77*(-tmp_183*tmp_321 + tmp_186*tmp_322) + tmp_90*(-tmp_190*tmp_323 + tmp_193*tmp_324);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_319 + tmp_205*tmp_320) + tmp_77*(-tmp_208*tmp_321 + tmp_211*tmp_322) + tmp_90*(-tmp_214*tmp_323 + tmp_217*tmp_324);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_319 + tmp_229*tmp_320) + tmp_77*(-tmp_234*tmp_321 + tmp_235*tmp_322) + tmp_90*(-tmp_240*tmp_323 + tmp_241*tmp_324);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_319 + tmp_251*tmp_320) + tmp_77*(-tmp_255*tmp_321 + tmp_256*tmp_322) + tmp_90*(-tmp_260*tmp_323 + tmp_261*tmp_324);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_319 + tmp_269*tmp_320) + tmp_77*(-tmp_272*tmp_321 + tmp_273*tmp_322) + tmp_90*(-tmp_276*tmp_323 + tmp_277*tmp_324);
      real_t a_3_0 = tmp_51*(-tmp_280*tmp_307 + tmp_337*tmp_34) + tmp_64*(-tmp_339*tmp_59 + tmp_340*tmp_60) + tmp_77*(-tmp_341*tmp_72 + tmp_342*tmp_73) + tmp_90*(-tmp_343*tmp_85 + tmp_344*tmp_86);
      real_t a_3_1 = tmp_51*(tmp_278*tmp_346 - tmp_296*tmp_298*tmp_307) + tmp_64*(-tmp_311*tmp_347 + tmp_311*tmp_348) + tmp_77*(-tmp_314*tmp_347 + tmp_314*tmp_348) + tmp_90*(-tmp_315*tmp_347 + tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_299*tmp_307 + tmp_295*tmp_346) + tmp_64*(-tmp_331*tmp_349 + tmp_331*tmp_350) + tmp_77*(-tmp_334*tmp_349 + tmp_334*tmp_350) + tmp_90*(-tmp_335*tmp_349 + tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_339 + tmp_149*tmp_340) + tmp_77*(-tmp_154*tmp_341 + tmp_157*tmp_342) + tmp_90*(-tmp_162*tmp_343 + tmp_165*tmp_344);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_339 + tmp_179*tmp_340) + tmp_77*(-tmp_183*tmp_341 + tmp_186*tmp_342) + tmp_90*(-tmp_190*tmp_343 + tmp_193*tmp_344);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_339 + tmp_205*tmp_340) + tmp_77*(-tmp_208*tmp_341 + tmp_211*tmp_342) + tmp_90*(-tmp_214*tmp_343 + tmp_217*tmp_344);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_339 + tmp_229*tmp_340) + tmp_77*(-tmp_234*tmp_341 + tmp_235*tmp_342) + tmp_90*(-tmp_240*tmp_343 + tmp_241*tmp_344);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_339 + tmp_251*tmp_340) + tmp_77*(-tmp_255*tmp_341 + tmp_256*tmp_342) + tmp_90*(-tmp_260*tmp_343 + tmp_261*tmp_344);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_339 + tmp_269*tmp_340) + tmp_77*(-tmp_272*tmp_341 + tmp_273*tmp_342) + tmp_90*(-tmp_276*tmp_343 + tmp_277*tmp_344);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_354 + tmp_34*tmp_360) + tmp_64*(-tmp_361*tmp_59 + tmp_365*tmp_60) + tmp_77*(-tmp_366*tmp_72 + tmp_370*tmp_73) + tmp_90*(-tmp_371*tmp_85 + tmp_375*tmp_86);
      real_t a_4_1 = tmp_51*(-tmp_354*tmp_93 + tmp_359*tmp_96) + tmp_64*(-tmp_361*tmp_98 + tmp_364*tmp_99) + tmp_77*(-tmp_101*tmp_366 + tmp_102*tmp_369) + tmp_90*(-tmp_104*tmp_371 + tmp_105*tmp_374);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_354 + tmp_110*tmp_359) + tmp_64*(-tmp_112*tmp_361 + tmp_113*tmp_364) + tmp_77*(-tmp_115*tmp_366 + tmp_116*tmp_369) + tmp_90*(-tmp_118*tmp_371 + tmp_119*tmp_374);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_354 + tmp_124*tmp_359) + tmp_64*(-tmp_126*tmp_361 + tmp_127*tmp_364) + tmp_77*(-tmp_129*tmp_366 + tmp_130*tmp_369) + tmp_90*(-tmp_132*tmp_371 + tmp_133*tmp_374);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_354 + tmp_141*tmp_360) + tmp_64*(-tmp_146*tmp_361 + tmp_149*tmp_365) + tmp_77*(-tmp_154*tmp_366 + tmp_157*tmp_370) + tmp_90*(-tmp_162*tmp_371 + tmp_165*tmp_375);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_354 + tmp_172*tmp_360) + tmp_64*(-tmp_176*tmp_361 + tmp_179*tmp_365) + tmp_77*(-tmp_183*tmp_366 + tmp_186*tmp_370) + tmp_90*(-tmp_190*tmp_371 + tmp_193*tmp_375);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_354 + tmp_199*tmp_360) + tmp_64*(-tmp_202*tmp_361 + tmp_205*tmp_365) + tmp_77*(-tmp_208*tmp_366 + tmp_211*tmp_370) + tmp_90*(-tmp_214*tmp_371 + tmp_217*tmp_375);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_354 + tmp_223*tmp_360) + tmp_64*(-tmp_228*tmp_361 + tmp_229*tmp_365) + tmp_77*(-tmp_234*tmp_366 + tmp_235*tmp_370) + tmp_90*(-tmp_240*tmp_371 + tmp_241*tmp_375);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_354 + tmp_246*tmp_360) + tmp_64*(-tmp_250*tmp_361 + tmp_251*tmp_365) + tmp_77*(-tmp_255*tmp_366 + tmp_256*tmp_370) + tmp_90*(-tmp_260*tmp_371 + tmp_261*tmp_375);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_354 + tmp_265*tmp_360) + tmp_64*(-tmp_268*tmp_361 + tmp_269*tmp_365) + tmp_77*(-tmp_272*tmp_366 + tmp_273*tmp_370) + tmp_90*(-tmp_276*tmp_371 + tmp_277*tmp_375);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_376 + tmp_34*tmp_381) + tmp_64*(-tmp_382*tmp_59 + tmp_386*tmp_60) + tmp_77*(-tmp_387*tmp_72 + tmp_391*tmp_73) + tmp_90*(-tmp_392*tmp_85 + tmp_396*tmp_86);
      real_t a_5_1 = tmp_51*(-tmp_376*tmp_93 + tmp_380*tmp_96) + tmp_64*(-tmp_382*tmp_98 + tmp_385*tmp_99) + tmp_77*(-tmp_101*tmp_387 + tmp_102*tmp_390) + tmp_90*(-tmp_104*tmp_392 + tmp_105*tmp_395);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_376 + tmp_110*tmp_380) + tmp_64*(-tmp_112*tmp_382 + tmp_113*tmp_385) + tmp_77*(-tmp_115*tmp_387 + tmp_116*tmp_390) + tmp_90*(-tmp_118*tmp_392 + tmp_119*tmp_395);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_376 + tmp_124*tmp_380) + tmp_64*(-tmp_126*tmp_382 + tmp_127*tmp_385) + tmp_77*(-tmp_129*tmp_387 + tmp_130*tmp_390) + tmp_90*(-tmp_132*tmp_392 + tmp_133*tmp_395);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_376 + tmp_141*tmp_381) + tmp_64*(-tmp_146*tmp_382 + tmp_149*tmp_386) + tmp_77*(-tmp_154*tmp_387 + tmp_157*tmp_391) + tmp_90*(-tmp_162*tmp_392 + tmp_165*tmp_396);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_376 + tmp_172*tmp_381) + tmp_64*(-tmp_176*tmp_382 + tmp_179*tmp_386) + tmp_77*(-tmp_183*tmp_387 + tmp_186*tmp_391) + tmp_90*(-tmp_190*tmp_392 + tmp_193*tmp_396);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_376 + tmp_199*tmp_381) + tmp_64*(-tmp_202*tmp_382 + tmp_205*tmp_386) + tmp_77*(-tmp_208*tmp_387 + tmp_211*tmp_391) + tmp_90*(-tmp_214*tmp_392 + tmp_217*tmp_396);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_376 + tmp_223*tmp_381) + tmp_64*(-tmp_228*tmp_382 + tmp_229*tmp_386) + tmp_77*(-tmp_234*tmp_387 + tmp_235*tmp_391) + tmp_90*(-tmp_240*tmp_392 + tmp_241*tmp_396);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_376 + tmp_246*tmp_381) + tmp_64*(-tmp_250*tmp_382 + tmp_251*tmp_386) + tmp_77*(-tmp_255*tmp_387 + tmp_256*tmp_391) + tmp_90*(-tmp_260*tmp_392 + tmp_261*tmp_396);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_376 + tmp_265*tmp_381) + tmp_64*(-tmp_268*tmp_382 + tmp_269*tmp_386) + tmp_77*(-tmp_272*tmp_387 + tmp_273*tmp_391) + tmp_90*(-tmp_276*tmp_392 + tmp_277*tmp_396);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_397 + tmp_34*tmp_401) + tmp_64*(-tmp_402*tmp_59 + tmp_406*tmp_60) + tmp_77*(-tmp_407*tmp_72 + tmp_411*tmp_73) + tmp_90*(-tmp_412*tmp_85 + tmp_416*tmp_86);
      real_t a_6_1 = tmp_51*(-tmp_397*tmp_93 + tmp_400*tmp_96) + tmp_64*(-tmp_402*tmp_98 + tmp_405*tmp_99) + tmp_77*(-tmp_101*tmp_407 + tmp_102*tmp_410) + tmp_90*(-tmp_104*tmp_412 + tmp_105*tmp_415);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_397 + tmp_110*tmp_400) + tmp_64*(-tmp_112*tmp_402 + tmp_113*tmp_405) + tmp_77*(-tmp_115*tmp_407 + tmp_116*tmp_410) + tmp_90*(-tmp_118*tmp_412 + tmp_119*tmp_415);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_397 + tmp_124*tmp_400) + tmp_64*(-tmp_126*tmp_402 + tmp_127*tmp_405) + tmp_77*(-tmp_129*tmp_407 + tmp_130*tmp_410) + tmp_90*(-tmp_132*tmp_412 + tmp_133*tmp_415);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_397 + tmp_141*tmp_401) + tmp_64*(-tmp_146*tmp_402 + tmp_149*tmp_406) + tmp_77*(-tmp_154*tmp_407 + tmp_157*tmp_411) + tmp_90*(-tmp_162*tmp_412 + tmp_165*tmp_416);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_397 + tmp_172*tmp_401) + tmp_64*(-tmp_176*tmp_402 + tmp_179*tmp_406) + tmp_77*(-tmp_183*tmp_407 + tmp_186*tmp_411) + tmp_90*(-tmp_190*tmp_412 + tmp_193*tmp_416);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_397 + tmp_199*tmp_401) + tmp_64*(-tmp_202*tmp_402 + tmp_205*tmp_406) + tmp_77*(-tmp_208*tmp_407 + tmp_211*tmp_411) + tmp_90*(-tmp_214*tmp_412 + tmp_217*tmp_416);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_397 + tmp_223*tmp_401) + tmp_64*(-tmp_228*tmp_402 + tmp_229*tmp_406) + tmp_77*(-tmp_234*tmp_407 + tmp_235*tmp_411) + tmp_90*(-tmp_240*tmp_412 + tmp_241*tmp_416);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_397 + tmp_246*tmp_401) + tmp_64*(-tmp_250*tmp_402 + tmp_251*tmp_406) + tmp_77*(-tmp_255*tmp_407 + tmp_256*tmp_411) + tmp_90*(-tmp_260*tmp_412 + tmp_261*tmp_416);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_397 + tmp_265*tmp_401) + tmp_64*(-tmp_268*tmp_402 + tmp_269*tmp_406) + tmp_77*(-tmp_272*tmp_407 + tmp_273*tmp_411) + tmp_90*(-tmp_276*tmp_412 + tmp_277*tmp_416);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_0;
      real_t tmp_8 = p_affine_1_0 + tmp_7;
      real_t tmp_9 = p_affine_3_2 + tmp_2;
      real_t tmp_10 = tmp_8*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_0;
      real_t tmp_12 = p_affine_2_0 + tmp_7;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_3_0 + tmp_7;
      real_t tmp_15 = tmp_14*tmp_3;
      real_t tmp_16 = tmp_3*tmp_8;
      real_t tmp_17 = tmp_12*tmp_9;
      real_t tmp_18 = tmp_14*tmp_5;
      real_t tmp_19 = 1.0 / (tmp_1*tmp_15 - tmp_1*tmp_17 + tmp_10*tmp_4 + tmp_11*tmp_13 - tmp_11*tmp_16 - tmp_18*tmp_4);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_9 + tmp_11*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_11*tmp_3 + tmp_4*tmp_9;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_13 - tmp_16;
      real_t tmp_30 = tmp_10 - tmp_18;
      real_t tmp_31 = tmp_15 - tmp_17;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0);
      real_t tmp_5 = 1.0 / (tmp_4);
      real_t tmp_6 = 0.66666666666666663;
      real_t tmp_7 = 2.6666666666666665;
      real_t tmp_8 = tmp_5*(tmp_6 + tmp_7 - 3);
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_11 = tmp_10*tmp_8;
      real_t tmp_12 = tmp_11 + tmp_9;
      real_t tmp_13 = tmp_3*tmp_8;
      real_t tmp_14 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_15 = tmp_14*tmp_8;
      real_t tmp_16 = tmp_13 + tmp_15;
      real_t tmp_17 = 0.5*tmp_13 + 0.5*tmp_15;
      real_t tmp_18 = 2*tmp_17;
      real_t tmp_19 = 1.0*tmp_11 + 1.0*tmp_9;
      real_t tmp_20 = 2.0*tmp_11 + 2.0*tmp_9;
      real_t tmp_21 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_22 = 0.16666666666666666*tmp_21;
      real_t tmp_23 = 2.6666666666666665;
      real_t tmp_24 = 0.66666666666666663;
      real_t tmp_25 = tmp_5*(tmp_23 + tmp_24 - 3);
      real_t tmp_26 = tmp_1*tmp_25;
      real_t tmp_27 = tmp_10*tmp_25;
      real_t tmp_28 = tmp_26 + tmp_27;
      real_t tmp_29 = tmp_25*tmp_3;
      real_t tmp_30 = tmp_14*tmp_25;
      real_t tmp_31 = tmp_29 + tmp_30;
      real_t tmp_32 = 0.5*tmp_29 + 0.5*tmp_30;
      real_t tmp_33 = 2*tmp_32;
      real_t tmp_34 = 1.0*tmp_26 + 1.0*tmp_27;
      real_t tmp_35 = 2.0*tmp_26 + 2.0*tmp_27;
      real_t tmp_36 = 0.16666666666666666*tmp_21;
      real_t tmp_37 = 0.66666666666666663;
      real_t tmp_38 = 0.66666666666666663;
      real_t tmp_39 = tmp_5*(tmp_37 + tmp_38 - 3);
      real_t tmp_40 = tmp_1*tmp_39;
      real_t tmp_41 = tmp_10*tmp_39;
      real_t tmp_42 = tmp_40 + tmp_41;
      real_t tmp_43 = tmp_3*tmp_39;
      real_t tmp_44 = tmp_14*tmp_39;
      real_t tmp_45 = tmp_43 + tmp_44;
      real_t tmp_46 = 0.5*tmp_43 + 0.5*tmp_44;
      real_t tmp_47 = 2*tmp_46;
      real_t tmp_48 = 1.0*tmp_40 + 1.0*tmp_41;
      real_t tmp_49 = 2.0*tmp_40 + 2.0*tmp_41;
      real_t tmp_50 = 0.16666666666666666*tmp_21;
      real_t tmp_51 = (2.0/3.0)*tmp_12;
      real_t tmp_52 = tmp_6 - 1;
      real_t tmp_53 = tmp_10*tmp_5;
      real_t tmp_54 = tmp_52*tmp_53;
      real_t tmp_55 = -tmp_51*tmp_54;
      real_t tmp_56 = 2.0*tmp_19;
      real_t tmp_57 = 2.0*tmp_5;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_52*tmp_58;
      real_t tmp_60 = (2.0/3.0)*tmp_28;
      real_t tmp_61 = tmp_23 - 1;
      real_t tmp_62 = tmp_53*tmp_61;
      real_t tmp_63 = -tmp_60*tmp_62;
      real_t tmp_64 = 2.0*tmp_34;
      real_t tmp_65 = tmp_58*tmp_61;
      real_t tmp_66 = (2.0/3.0)*tmp_42;
      real_t tmp_67 = tmp_37 - 1;
      real_t tmp_68 = tmp_53*tmp_67;
      real_t tmp_69 = -tmp_66*tmp_68;
      real_t tmp_70 = 2.0*tmp_48;
      real_t tmp_71 = tmp_58*tmp_67;
      real_t tmp_72 = tmp_7 - 1;
      real_t tmp_73 = tmp_1*tmp_5;
      real_t tmp_74 = tmp_72*tmp_73;
      real_t tmp_75 = -tmp_51*tmp_74;
      real_t tmp_76 = tmp_14*tmp_57;
      real_t tmp_77 = tmp_72*tmp_76;
      real_t tmp_78 = tmp_24 - 1;
      real_t tmp_79 = tmp_73*tmp_78;
      real_t tmp_80 = -tmp_60*tmp_79;
      real_t tmp_81 = tmp_76*tmp_78;
      real_t tmp_82 = tmp_38 - 1;
      real_t tmp_83 = tmp_73*tmp_82;
      real_t tmp_84 = -tmp_66*tmp_83;
      real_t tmp_85 = tmp_76*tmp_82;
      real_t tmp_86 = tmp_6*tmp_73;
      real_t tmp_87 = tmp_53*tmp_7;
      real_t tmp_88 = tmp_86 + tmp_87;
      real_t tmp_89 = -tmp_51*tmp_88;
      real_t tmp_90 = 8.0*tmp_5;
      real_t tmp_91 = tmp_1*tmp_90;
      real_t tmp_92 = 0.16666666666666666*tmp_91;
      real_t tmp_93 = tmp_10*tmp_90;
      real_t tmp_94 = 0.66666666666666663*tmp_93;
      real_t tmp_95 = tmp_92 + tmp_94;
      real_t tmp_96 = 4.0*tmp_5;
      real_t tmp_97 = tmp_14*tmp_96;
      real_t tmp_98 = 0.16666666666666666*tmp_97;
      real_t tmp_99 = tmp_3*tmp_96;
      real_t tmp_100 = 0.66666666666666663*tmp_99;
      real_t tmp_101 = tmp_100 + tmp_98;
      real_t tmp_102 = tmp_23*tmp_73;
      real_t tmp_103 = tmp_24*tmp_53;
      real_t tmp_104 = tmp_102 + tmp_103;
      real_t tmp_105 = -tmp_104*tmp_60;
      real_t tmp_106 = 0.66666666666666663*tmp_91;
      real_t tmp_107 = 0.16666666666666666*tmp_93;
      real_t tmp_108 = tmp_106 + tmp_107;
      real_t tmp_109 = 0.66666666666666663*tmp_97;
      real_t tmp_110 = 0.16666666666666666*tmp_99;
      real_t tmp_111 = tmp_109 + tmp_110;
      real_t tmp_112 = tmp_37*tmp_73;
      real_t tmp_113 = tmp_38*tmp_53;
      real_t tmp_114 = tmp_112 + tmp_113;
      real_t tmp_115 = -tmp_114*tmp_66;
      real_t tmp_116 = 0.16666666666666666*tmp_91;
      real_t tmp_117 = 0.16666666666666666*tmp_93;
      real_t tmp_118 = tmp_116 + tmp_117;
      real_t tmp_119 = 0.16666666666666666*tmp_97;
      real_t tmp_120 = 0.16666666666666666*tmp_99;
      real_t tmp_121 = tmp_119 + tmp_120;
      real_t tmp_122 = tmp_5*(-tmp_6 - 1.333333333333333);
      real_t tmp_123 = tmp_1*tmp_122;
      real_t tmp_124 = tmp_123 - tmp_87;
      real_t tmp_125 = -tmp_124*tmp_51;
      real_t tmp_126 = 2.0*tmp_123 - tmp_94;
      real_t tmp_127 = tmp_122*tmp_14;
      real_t tmp_128 = -tmp_100 + tmp_127;
      real_t tmp_129 = tmp_5*(2.666666666666667 - tmp_23);
      real_t tmp_130 = tmp_1*tmp_129;
      real_t tmp_131 = -tmp_103 + tmp_130;
      real_t tmp_132 = -tmp_131*tmp_60;
      real_t tmp_133 = -tmp_107 + 2.0*tmp_130;
      real_t tmp_134 = tmp_129*tmp_14;
      real_t tmp_135 = -tmp_110 + tmp_134;
      real_t tmp_136 = tmp_5*(2.666666666666667 - tmp_37);
      real_t tmp_137 = tmp_1*tmp_136;
      real_t tmp_138 = -tmp_113 + tmp_137;
      real_t tmp_139 = -tmp_138*tmp_66;
      real_t tmp_140 = -tmp_117 + 2.0*tmp_137;
      real_t tmp_141 = tmp_136*tmp_14;
      real_t tmp_142 = -tmp_120 + tmp_141;
      real_t tmp_143 = tmp_5*(2.666666666666667 - tmp_7);
      real_t tmp_144 = tmp_10*tmp_143;
      real_t tmp_145 = tmp_144 - tmp_86;
      real_t tmp_146 = -tmp_145*tmp_51;
      real_t tmp_147 = 2.0*tmp_144 - tmp_92;
      real_t tmp_148 = tmp_143*tmp_3;
      real_t tmp_149 = tmp_148 - tmp_98;
      real_t tmp_150 = tmp_5*(-tmp_24 - 1.333333333333333);
      real_t tmp_151 = tmp_10*tmp_150;
      real_t tmp_152 = -tmp_102 + tmp_151;
      real_t tmp_153 = -tmp_152*tmp_60;
      real_t tmp_154 = -tmp_106 + 2.0*tmp_151;
      real_t tmp_155 = tmp_150*tmp_3;
      real_t tmp_156 = -tmp_109 + tmp_155;
      real_t tmp_157 = tmp_5*(2.666666666666667 - tmp_38);
      real_t tmp_158 = tmp_10*tmp_157;
      real_t tmp_159 = -tmp_112 + tmp_158;
      real_t tmp_160 = -tmp_159*tmp_66;
      real_t tmp_161 = -tmp_116 + 2.0*tmp_158;
      real_t tmp_162 = tmp_157*tmp_3;
      real_t tmp_163 = -tmp_119 + tmp_162;
      real_t tmp_164 = 1.0*tmp_5;
      real_t tmp_165 = tmp_164*tmp_3;
      real_t tmp_166 = tmp_165*tmp_52;
      real_t tmp_167 = 1.0*tmp_54;
      real_t tmp_168 = tmp_165*tmp_61;
      real_t tmp_169 = 1.0*tmp_62;
      real_t tmp_170 = tmp_165*tmp_67;
      real_t tmp_171 = 1.0*tmp_68;
      real_t tmp_172 = 1.0 / (tmp_4*tmp_4);
      real_t tmp_173 = tmp_172*(tmp_52*tmp_52);
      real_t tmp_174 = 1.3333333333333335*(tmp_10*tmp_10);
      real_t tmp_175 = 1.0*(tmp_3*tmp_3);
      real_t tmp_176 = tmp_172*(tmp_61*tmp_61);
      real_t tmp_177 = tmp_172*(tmp_67*tmp_67);
      real_t tmp_178 = tmp_172*tmp_52*tmp_72;
      real_t tmp_179 = 1.3333333333333335*tmp_1*tmp_10;
      real_t tmp_180 = 1.0*tmp_14*tmp_3;
      real_t tmp_181 = tmp_61*tmp_78;
      real_t tmp_182 = tmp_172*tmp_179;
      real_t tmp_183 = tmp_172*tmp_180;
      real_t tmp_184 = tmp_67*tmp_82;
      real_t tmp_185 = tmp_22*(tmp_178*tmp_179 + tmp_178*tmp_180) + tmp_36*(tmp_181*tmp_182 + tmp_181*tmp_183) + tmp_50*(tmp_182*tmp_184 + tmp_183*tmp_184);
      real_t tmp_186 = (2.0/3.0)*tmp_88;
      real_t tmp_187 = -tmp_186*tmp_54;
      real_t tmp_188 = (2.0/3.0)*tmp_104;
      real_t tmp_189 = -tmp_188*tmp_62;
      real_t tmp_190 = (2.0/3.0)*tmp_114;
      real_t tmp_191 = -tmp_190*tmp_68;
      real_t tmp_192 = (2.0/3.0)*tmp_124;
      real_t tmp_193 = -tmp_192*tmp_54;
      real_t tmp_194 = (2.0/3.0)*tmp_131;
      real_t tmp_195 = -tmp_194*tmp_62;
      real_t tmp_196 = (2.0/3.0)*tmp_138;
      real_t tmp_197 = -tmp_196*tmp_68;
      real_t tmp_198 = (2.0/3.0)*tmp_145;
      real_t tmp_199 = -tmp_198*tmp_54;
      real_t tmp_200 = (2.0/3.0)*tmp_152;
      real_t tmp_201 = -tmp_200*tmp_62;
      real_t tmp_202 = (2.0/3.0)*tmp_159;
      real_t tmp_203 = -tmp_202*tmp_68;
      real_t tmp_204 = tmp_14*tmp_164;
      real_t tmp_205 = tmp_204*tmp_72;
      real_t tmp_206 = 1.0*tmp_74;
      real_t tmp_207 = tmp_204*tmp_78;
      real_t tmp_208 = 1.0*tmp_79;
      real_t tmp_209 = tmp_204*tmp_82;
      real_t tmp_210 = 1.0*tmp_83;
      real_t tmp_211 = tmp_172*(tmp_72*tmp_72);
      real_t tmp_212 = 1.3333333333333335*(tmp_1*tmp_1);
      real_t tmp_213 = 1.0*(tmp_14*tmp_14);
      real_t tmp_214 = tmp_172*(tmp_78*tmp_78);
      real_t tmp_215 = tmp_172*(tmp_82*tmp_82);
      real_t tmp_216 = -tmp_186*tmp_74;
      real_t tmp_217 = -tmp_188*tmp_79;
      real_t tmp_218 = -tmp_190*tmp_83;
      real_t tmp_219 = -tmp_192*tmp_74;
      real_t tmp_220 = -tmp_194*tmp_79;
      real_t tmp_221 = -tmp_196*tmp_83;
      real_t tmp_222 = -tmp_198*tmp_74;
      real_t tmp_223 = -tmp_200*tmp_79;
      real_t tmp_224 = -tmp_202*tmp_83;
      real_t tmp_225 = 0.16666666666666666*tmp_76;
      real_t tmp_226 = 0.66666666666666663*tmp_58;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = 2*tmp_227;
      real_t tmp_229 = tmp_1*tmp_96;
      real_t tmp_230 = 0.16666666666666666*tmp_229;
      real_t tmp_231 = tmp_10*tmp_96;
      real_t tmp_232 = 0.66666666666666663*tmp_231;
      real_t tmp_233 = tmp_230 + tmp_232;
      real_t tmp_234 = 0.66666666666666663*tmp_76;
      real_t tmp_235 = 0.16666666666666666*tmp_58;
      real_t tmp_236 = tmp_234 + tmp_235;
      real_t tmp_237 = 2*tmp_236;
      real_t tmp_238 = 0.66666666666666663*tmp_229;
      real_t tmp_239 = 0.16666666666666666*tmp_231;
      real_t tmp_240 = tmp_238 + tmp_239;
      real_t tmp_241 = 0.16666666666666666*tmp_76;
      real_t tmp_242 = 0.16666666666666666*tmp_58;
      real_t tmp_243 = tmp_241 + tmp_242;
      real_t tmp_244 = 2*tmp_243;
      real_t tmp_245 = 0.16666666666666666*tmp_229;
      real_t tmp_246 = 0.16666666666666666*tmp_231;
      real_t tmp_247 = tmp_245 + tmp_246;
      real_t tmp_248 = 2.0*tmp_233;
      real_t tmp_249 = 2.0*tmp_240;
      real_t tmp_250 = 2.0*tmp_247;
      real_t tmp_251 = -tmp_124*tmp_186;
      real_t tmp_252 = -tmp_131*tmp_188;
      real_t tmp_253 = -tmp_138*tmp_190;
      real_t tmp_254 = -tmp_145*tmp_186;
      real_t tmp_255 = -tmp_152*tmp_188;
      real_t tmp_256 = -tmp_159*tmp_190;
      real_t tmp_257 = 0.5*tmp_127 - tmp_226;
      real_t tmp_258 = 2*tmp_257;
      real_t tmp_259 = 1.0*tmp_123 - tmp_232;
      real_t tmp_260 = 0.5*tmp_134 - tmp_235;
      real_t tmp_261 = 2*tmp_260;
      real_t tmp_262 = 1.0*tmp_130 - tmp_239;
      real_t tmp_263 = 0.5*tmp_141 - tmp_242;
      real_t tmp_264 = 2*tmp_263;
      real_t tmp_265 = 1.0*tmp_137 - tmp_246;
      real_t tmp_266 = 2.0*tmp_259;
      real_t tmp_267 = 2.0*tmp_262;
      real_t tmp_268 = 2.0*tmp_265;
      real_t tmp_269 = -tmp_145*tmp_192;
      real_t tmp_270 = -tmp_152*tmp_194;
      real_t tmp_271 = -tmp_159*tmp_196;
      real_t tmp_272 = 0.5*tmp_148 - tmp_225;
      real_t tmp_273 = 2*tmp_272;
      real_t tmp_274 = 1.0*tmp_144 - tmp_230;
      real_t tmp_275 = 0.5*tmp_155 - tmp_234;
      real_t tmp_276 = 2*tmp_275;
      real_t tmp_277 = 1.0*tmp_151 - tmp_238;
      real_t tmp_278 = 0.5*tmp_162 - tmp_241;
      real_t tmp_279 = 2*tmp_278;
      real_t tmp_280 = 1.0*tmp_158 - tmp_245;
      real_t tmp_281 = 2.0*tmp_274;
      real_t tmp_282 = 2.0*tmp_277;
      real_t tmp_283 = 2.0*tmp_280;
      real_t a_0_0 = tmp_22*(-2.0/3.0*(tmp_12*tmp_12) + tmp_16*tmp_18 + tmp_19*tmp_20) + tmp_36*(-2.0/3.0*(tmp_28*tmp_28) + tmp_31*tmp_33 + tmp_34*tmp_35) + tmp_50*(-2.0/3.0*(tmp_42*tmp_42) + tmp_45*tmp_47 + tmp_48*tmp_49);
      real_t a_0_1 = tmp_22*(tmp_17*tmp_59 + tmp_54*tmp_56 + tmp_55) + tmp_36*(tmp_32*tmp_65 + tmp_62*tmp_64 + tmp_63) + tmp_50*(tmp_46*tmp_71 + tmp_68*tmp_70 + tmp_69);
      real_t a_0_2 = tmp_22*(tmp_17*tmp_77 + tmp_56*tmp_74 + tmp_75) + tmp_36*(tmp_32*tmp_81 + tmp_64*tmp_79 + tmp_80) + tmp_50*(tmp_46*tmp_85 + tmp_70*tmp_83 + tmp_84);
      real_t a_0_3 = tmp_22*(tmp_101*tmp_18 + tmp_19*tmp_95 + tmp_89) + tmp_36*(tmp_105 + tmp_108*tmp_34 + tmp_111*tmp_33) + tmp_50*(tmp_115 + tmp_118*tmp_48 + tmp_121*tmp_47);
      real_t a_0_4 = tmp_22*(tmp_125 + tmp_126*tmp_19 + tmp_128*tmp_18) + tmp_36*(tmp_132 + tmp_133*tmp_34 + tmp_135*tmp_33) + tmp_50*(tmp_139 + tmp_140*tmp_48 + tmp_142*tmp_47);
      real_t a_0_5 = tmp_22*(tmp_146 + tmp_147*tmp_19 + tmp_149*tmp_18) + tmp_36*(tmp_153 + tmp_154*tmp_34 + tmp_156*tmp_33) + tmp_50*(tmp_160 + tmp_161*tmp_48 + tmp_163*tmp_47);
      real_t a_1_0 = tmp_22*(tmp_16*tmp_166 + tmp_167*tmp_20 + tmp_55) + tmp_36*(tmp_168*tmp_31 + tmp_169*tmp_35 + tmp_63) + tmp_50*(tmp_170*tmp_45 + tmp_171*tmp_49 + tmp_69);
      real_t a_1_1 = tmp_22*(tmp_173*tmp_174 + tmp_173*tmp_175) + tmp_36*(tmp_174*tmp_176 + tmp_175*tmp_176) + tmp_50*(tmp_174*tmp_177 + tmp_175*tmp_177);
      real_t a_1_2 = tmp_185;
      real_t a_1_3 = tmp_22*(tmp_101*tmp_166 + tmp_167*tmp_95 + tmp_187) + tmp_36*(tmp_108*tmp_169 + tmp_111*tmp_168 + tmp_189) + tmp_50*(tmp_118*tmp_171 + tmp_121*tmp_170 + tmp_191);
      real_t a_1_4 = tmp_22*(tmp_126*tmp_167 + tmp_128*tmp_166 + tmp_193) + tmp_36*(tmp_133*tmp_169 + tmp_135*tmp_168 + tmp_195) + tmp_50*(tmp_140*tmp_171 + tmp_142*tmp_170 + tmp_197);
      real_t a_1_5 = tmp_22*(tmp_147*tmp_167 + tmp_149*tmp_166 + tmp_199) + tmp_36*(tmp_154*tmp_169 + tmp_156*tmp_168 + tmp_201) + tmp_50*(tmp_161*tmp_171 + tmp_163*tmp_170 + tmp_203);
      real_t a_2_0 = tmp_22*(tmp_16*tmp_205 + tmp_20*tmp_206 + tmp_75) + tmp_36*(tmp_207*tmp_31 + tmp_208*tmp_35 + tmp_80) + tmp_50*(tmp_209*tmp_45 + tmp_210*tmp_49 + tmp_84);
      real_t a_2_1 = tmp_185;
      real_t a_2_2 = tmp_22*(tmp_211*tmp_212 + tmp_211*tmp_213) + tmp_36*(tmp_212*tmp_214 + tmp_213*tmp_214) + tmp_50*(tmp_212*tmp_215 + tmp_213*tmp_215);
      real_t a_2_3 = tmp_22*(tmp_101*tmp_205 + tmp_206*tmp_95 + tmp_216) + tmp_36*(tmp_108*tmp_208 + tmp_111*tmp_207 + tmp_217) + tmp_50*(tmp_118*tmp_210 + tmp_121*tmp_209 + tmp_218);
      real_t a_2_4 = tmp_22*(tmp_126*tmp_206 + tmp_128*tmp_205 + tmp_219) + tmp_36*(tmp_133*tmp_208 + tmp_135*tmp_207 + tmp_220) + tmp_50*(tmp_140*tmp_210 + tmp_142*tmp_209 + tmp_221);
      real_t a_2_5 = tmp_22*(tmp_147*tmp_206 + tmp_149*tmp_205 + tmp_222) + tmp_36*(tmp_154*tmp_208 + tmp_156*tmp_207 + tmp_223) + tmp_50*(tmp_161*tmp_210 + tmp_163*tmp_209 + tmp_224);
      real_t a_3_0 = tmp_22*(tmp_16*tmp_228 + tmp_20*tmp_233 + tmp_89) + tmp_36*(tmp_105 + tmp_237*tmp_31 + tmp_240*tmp_35) + tmp_50*(tmp_115 + tmp_244*tmp_45 + tmp_247*tmp_49);
      real_t a_3_1 = tmp_22*(tmp_187 + tmp_227*tmp_59 + tmp_248*tmp_54) + tmp_36*(tmp_189 + tmp_236*tmp_65 + tmp_249*tmp_62) + tmp_50*(tmp_191 + tmp_243*tmp_71 + tmp_250*tmp_68);
      real_t a_3_2 = tmp_22*(tmp_216 + tmp_227*tmp_77 + tmp_248*tmp_74) + tmp_36*(tmp_217 + tmp_236*tmp_81 + tmp_249*tmp_79) + tmp_50*(tmp_218 + tmp_243*tmp_85 + tmp_250*tmp_83);
      real_t a_3_3 = tmp_22*(tmp_101*tmp_228 + tmp_233*tmp_95 - 2.0/3.0*(tmp_88*tmp_88)) + tmp_36*(-2.0/3.0*(tmp_104*tmp_104) + tmp_108*tmp_240 + tmp_111*tmp_237) + tmp_50*(-2.0/3.0*(tmp_114*tmp_114) + tmp_118*tmp_247 + tmp_121*tmp_244);
      real_t a_3_4 = tmp_22*(tmp_126*tmp_233 + tmp_128*tmp_228 + tmp_251) + tmp_36*(tmp_133*tmp_240 + tmp_135*tmp_237 + tmp_252) + tmp_50*(tmp_140*tmp_247 + tmp_142*tmp_244 + tmp_253);
      real_t a_3_5 = tmp_22*(tmp_147*tmp_233 + tmp_149*tmp_228 + tmp_254) + tmp_36*(tmp_154*tmp_240 + tmp_156*tmp_237 + tmp_255) + tmp_50*(tmp_161*tmp_247 + tmp_163*tmp_244 + tmp_256);
      real_t a_4_0 = tmp_22*(tmp_125 + tmp_16*tmp_258 + tmp_20*tmp_259) + tmp_36*(tmp_132 + tmp_261*tmp_31 + tmp_262*tmp_35) + tmp_50*(tmp_139 + tmp_264*tmp_45 + tmp_265*tmp_49);
      real_t a_4_1 = tmp_22*(tmp_193 + tmp_257*tmp_59 + tmp_266*tmp_54) + tmp_36*(tmp_195 + tmp_260*tmp_65 + tmp_267*tmp_62) + tmp_50*(tmp_197 + tmp_263*tmp_71 + tmp_268*tmp_68);
      real_t a_4_2 = tmp_22*(tmp_219 + tmp_257*tmp_77 + tmp_266*tmp_74) + tmp_36*(tmp_220 + tmp_260*tmp_81 + tmp_267*tmp_79) + tmp_50*(tmp_221 + tmp_263*tmp_85 + tmp_268*tmp_83);
      real_t a_4_3 = tmp_22*(tmp_101*tmp_258 + tmp_251 + tmp_259*tmp_95) + tmp_36*(tmp_108*tmp_262 + tmp_111*tmp_261 + tmp_252) + tmp_50*(tmp_118*tmp_265 + tmp_121*tmp_264 + tmp_253);
      real_t a_4_4 = tmp_22*(-2.0/3.0*(tmp_124*tmp_124) + tmp_126*tmp_259 + tmp_128*tmp_258) + tmp_36*(-2.0/3.0*(tmp_131*tmp_131) + tmp_133*tmp_262 + tmp_135*tmp_261) + tmp_50*(-2.0/3.0*(tmp_138*tmp_138) + tmp_140*tmp_265 + tmp_142*tmp_264);
      real_t a_4_5 = tmp_22*(tmp_147*tmp_259 + tmp_149*tmp_258 + tmp_269) + tmp_36*(tmp_154*tmp_262 + tmp_156*tmp_261 + tmp_270) + tmp_50*(tmp_161*tmp_265 + tmp_163*tmp_264 + tmp_271);
      real_t a_5_0 = tmp_22*(tmp_146 + tmp_16*tmp_273 + tmp_20*tmp_274) + tmp_36*(tmp_153 + tmp_276*tmp_31 + tmp_277*tmp_35) + tmp_50*(tmp_160 + tmp_279*tmp_45 + tmp_280*tmp_49);
      real_t a_5_1 = tmp_22*(tmp_199 + tmp_272*tmp_59 + tmp_281*tmp_54) + tmp_36*(tmp_201 + tmp_275*tmp_65 + tmp_282*tmp_62) + tmp_50*(tmp_203 + tmp_278*tmp_71 + tmp_283*tmp_68);
      real_t a_5_2 = tmp_22*(tmp_222 + tmp_272*tmp_77 + tmp_281*tmp_74) + tmp_36*(tmp_223 + tmp_275*tmp_81 + tmp_282*tmp_79) + tmp_50*(tmp_224 + tmp_278*tmp_85 + tmp_283*tmp_83);
      real_t a_5_3 = tmp_22*(tmp_101*tmp_273 + tmp_254 + tmp_274*tmp_95) + tmp_36*(tmp_108*tmp_277 + tmp_111*tmp_276 + tmp_255) + tmp_50*(tmp_118*tmp_280 + tmp_121*tmp_279 + tmp_256);
      real_t a_5_4 = tmp_22*(tmp_126*tmp_274 + tmp_128*tmp_273 + tmp_269) + tmp_36*(tmp_133*tmp_277 + tmp_135*tmp_276 + tmp_270) + tmp_50*(tmp_140*tmp_280 + tmp_142*tmp_279 + tmp_271);
      real_t a_5_5 = tmp_22*(-2.0/3.0*(tmp_145*tmp_145) + tmp_147*tmp_274 + tmp_149*tmp_273) + tmp_36*(-2.0/3.0*(tmp_152*tmp_152) + tmp_154*tmp_277 + tmp_156*tmp_276) + tmp_50*(-2.0/3.0*(tmp_159*tmp_159) + tmp_161*tmp_280 + tmp_163*tmp_279);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_full_stokescc_1_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = 1.0 / (tmp_1*tmp_3 - (p_affine_1_1 + tmp_2)*(p_affine_2_0 + tmp_0));
      real_t tmp_5 = 0.66666666666666663;
      real_t tmp_6 = 2.6666666666666665;
      real_t tmp_7 = tmp_4*(tmp_5 + tmp_6 - 3);
      real_t tmp_8 = tmp_1*tmp_7;
      real_t tmp_9 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_10 = tmp_7*tmp_9;
      real_t tmp_11 = tmp_10 + tmp_8;
      real_t tmp_12 = tmp_3*tmp_7;
      real_t tmp_13 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_14 = tmp_13*tmp_7;
      real_t tmp_15 = 0.5*tmp_12 + 0.5*tmp_14;
      real_t tmp_16 = 2*tmp_15;
      real_t tmp_17 = 1.0*tmp_10 + 1.0*tmp_8;
      real_t tmp_18 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_19 = 0.16666666666666666*tmp_18;
      real_t tmp_20 = 2.6666666666666665;
      real_t tmp_21 = 0.66666666666666663;
      real_t tmp_22 = tmp_4*(tmp_20 + tmp_21 - 3);
      real_t tmp_23 = tmp_1*tmp_22;
      real_t tmp_24 = tmp_22*tmp_9;
      real_t tmp_25 = tmp_23 + tmp_24;
      real_t tmp_26 = tmp_22*tmp_3;
      real_t tmp_27 = tmp_13*tmp_22;
      real_t tmp_28 = 0.5*tmp_26 + 0.5*tmp_27;
      real_t tmp_29 = 2*tmp_28;
      real_t tmp_30 = 1.0*tmp_23 + 1.0*tmp_24;
      real_t tmp_31 = 0.16666666666666666*tmp_18;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = 0.66666666666666663;
      real_t tmp_34 = tmp_4*(tmp_32 + tmp_33 - 3);
      real_t tmp_35 = tmp_1*tmp_34;
      real_t tmp_36 = tmp_34*tmp_9;
      real_t tmp_37 = tmp_35 + tmp_36;
      real_t tmp_38 = tmp_3*tmp_34;
      real_t tmp_39 = tmp_13*tmp_34;
      real_t tmp_40 = 0.5*tmp_38 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = 1.0*tmp_35 + 1.0*tmp_36;
      real_t tmp_43 = 0.16666666666666666*tmp_18;
      real_t tmp_44 = (2.0/3.0)*tmp_11;
      real_t tmp_45 = tmp_5 - 1;
      real_t tmp_46 = tmp_4*tmp_9;
      real_t tmp_47 = tmp_45*tmp_46;
      real_t tmp_48 = 2.0*tmp_17;
      real_t tmp_49 = 2.0*tmp_4;
      real_t tmp_50 = tmp_3*tmp_49;
      real_t tmp_51 = (2.0/3.0)*tmp_25;
      real_t tmp_52 = tmp_20 - 1;
      real_t tmp_53 = tmp_46*tmp_52;
      real_t tmp_54 = 2.0*tmp_30;
      real_t tmp_55 = (2.0/3.0)*tmp_37;
      real_t tmp_56 = tmp_32 - 1;
      real_t tmp_57 = tmp_46*tmp_56;
      real_t tmp_58 = 2.0*tmp_42;
      real_t tmp_59 = tmp_6 - 1;
      real_t tmp_60 = tmp_1*tmp_4;
      real_t tmp_61 = tmp_59*tmp_60;
      real_t tmp_62 = tmp_13*tmp_49;
      real_t tmp_63 = tmp_21 - 1;
      real_t tmp_64 = tmp_60*tmp_63;
      real_t tmp_65 = tmp_33 - 1;
      real_t tmp_66 = tmp_60*tmp_65;
      real_t tmp_67 = tmp_5*tmp_60;
      real_t tmp_68 = tmp_46*tmp_6;
      real_t tmp_69 = 8.0*tmp_4;
      real_t tmp_70 = tmp_1*tmp_69;
      real_t tmp_71 = 0.16666666666666666*tmp_70;
      real_t tmp_72 = tmp_69*tmp_9;
      real_t tmp_73 = 0.66666666666666663*tmp_72;
      real_t tmp_74 = 4.0*tmp_4;
      real_t tmp_75 = tmp_13*tmp_74;
      real_t tmp_76 = 0.16666666666666666*tmp_75;
      real_t tmp_77 = tmp_3*tmp_74;
      real_t tmp_78 = 0.66666666666666663*tmp_77;
      real_t tmp_79 = tmp_20*tmp_60;
      real_t tmp_80 = tmp_21*tmp_46;
      real_t tmp_81 = 0.66666666666666663*tmp_70;
      real_t tmp_82 = 0.16666666666666666*tmp_72;
      real_t tmp_83 = 0.66666666666666663*tmp_75;
      real_t tmp_84 = 0.16666666666666666*tmp_77;
      real_t tmp_85 = tmp_32*tmp_60;
      real_t tmp_86 = tmp_33*tmp_46;
      real_t tmp_87 = 0.16666666666666666*tmp_70;
      real_t tmp_88 = 0.16666666666666666*tmp_72;
      real_t tmp_89 = 0.16666666666666666*tmp_75;
      real_t tmp_90 = 0.16666666666666666*tmp_77;
      real_t tmp_91 = tmp_4*(-tmp_5 - 1.333333333333333);
      real_t tmp_92 = tmp_1*tmp_91;
      real_t tmp_93 = tmp_4*(2.666666666666667 - tmp_20);
      real_t tmp_94 = tmp_1*tmp_93;
      real_t tmp_95 = tmp_4*(2.666666666666667 - tmp_32);
      real_t tmp_96 = tmp_1*tmp_95;
      real_t tmp_97 = tmp_4*(2.666666666666667 - tmp_6);
      real_t tmp_98 = tmp_9*tmp_97;
      real_t tmp_99 = tmp_4*(-tmp_21 - 1.333333333333333);
      real_t tmp_100 = tmp_9*tmp_99;
      real_t tmp_101 = tmp_4*(2.666666666666667 - tmp_33);
      real_t tmp_102 = tmp_101*tmp_9;
      real_t a_0_0 = tmp_19*(-2.0/3.0*(tmp_11*tmp_11) + tmp_16*(tmp_12 + tmp_14) + tmp_17*(2.0*tmp_10 + 2.0*tmp_8)) + tmp_31*(-2.0/3.0*(tmp_25*tmp_25) + tmp_29*(tmp_26 + tmp_27) + tmp_30*(2.0*tmp_23 + 2.0*tmp_24)) + tmp_43*(-2.0/3.0*(tmp_37*tmp_37) + tmp_41*(tmp_38 + tmp_39) + tmp_42*(2.0*tmp_35 + 2.0*tmp_36));
      real_t a_0_1 = tmp_19*(tmp_15*tmp_45*tmp_50 - tmp_44*tmp_47 + tmp_47*tmp_48) + tmp_31*(tmp_28*tmp_50*tmp_52 - tmp_51*tmp_53 + tmp_53*tmp_54) + tmp_43*(tmp_40*tmp_50*tmp_56 - tmp_55*tmp_57 + tmp_57*tmp_58);
      real_t a_0_2 = tmp_19*(tmp_15*tmp_59*tmp_62 - tmp_44*tmp_61 + tmp_48*tmp_61) + tmp_31*(tmp_28*tmp_62*tmp_63 - tmp_51*tmp_64 + tmp_54*tmp_64) + tmp_43*(tmp_40*tmp_62*tmp_65 - tmp_55*tmp_66 + tmp_58*tmp_66);
      real_t a_0_3 = tmp_19*(tmp_16*(tmp_76 + tmp_78) + tmp_17*(tmp_71 + tmp_73) - tmp_44*(tmp_67 + tmp_68)) + tmp_31*(tmp_29*(tmp_83 + tmp_84) + tmp_30*(tmp_81 + tmp_82) - tmp_51*(tmp_79 + tmp_80)) + tmp_43*(tmp_41*(tmp_89 + tmp_90) + tmp_42*(tmp_87 + tmp_88) - tmp_55*(tmp_85 + tmp_86));
      real_t a_0_4 = tmp_19*(tmp_16*(tmp_13*tmp_91 - tmp_78) + tmp_17*(-tmp_73 + 2.0*tmp_92) - tmp_44*(-tmp_68 + tmp_92)) + tmp_31*(tmp_29*(tmp_13*tmp_93 - tmp_84) + tmp_30*(-tmp_82 + 2.0*tmp_94) - tmp_51*(-tmp_80 + tmp_94)) + tmp_43*(tmp_41*(tmp_13*tmp_95 - tmp_90) + tmp_42*(-tmp_88 + 2.0*tmp_96) - tmp_55*(-tmp_86 + tmp_96));
      real_t a_0_5 = tmp_19*(tmp_16*(tmp_3*tmp_97 - tmp_76) + tmp_17*(-tmp_71 + 2.0*tmp_98) - tmp_44*(-tmp_67 + tmp_98)) + tmp_31*(tmp_29*(tmp_3*tmp_99 - tmp_83) + tmp_30*(2.0*tmp_100 - tmp_81) - tmp_51*(tmp_100 - tmp_79)) + tmp_43*(tmp_41*(tmp_101*tmp_3 - tmp_89) + tmp_42*(2.0*tmp_102 - tmp_87) - tmp_55*(tmp_102 - tmp_85));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_full_stokescc_1_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_12 - tmp_18;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_16 - tmp_17;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = 0.041666666666666657*tmp_63;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = 2.3416407864998732;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.041666666666666657*tmp_63;
      real_t tmp_88 = 2.3416407864998732;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.041666666666666657*tmp_63;
      real_t tmp_111 = 0.55278640450004235;
      real_t tmp_112 = 0.55278640450004235;
      real_t tmp_113 = 0.55278640450004235;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.041666666666666657*tmp_63;
      real_t tmp_134 = (2.0/3.0)*tmp_30;
      real_t tmp_135 = tmp_21 - 1.0;
      real_t tmp_136 = tmp_20*tmp_28;
      real_t tmp_137 = tmp_135*tmp_136;
      real_t tmp_138 = -tmp_134*tmp_137;
      real_t tmp_139 = 2.0*tmp_20;
      real_t tmp_140 = tmp_135*tmp_139;
      real_t tmp_141 = tmp_140*tmp_35;
      real_t tmp_142 = 2.0*tmp_49;
      real_t tmp_143 = tmp_140*tmp_44;
      real_t tmp_144 = (2.0/3.0)*tmp_72;
      real_t tmp_145 = tmp_65 - 1.0;
      real_t tmp_146 = tmp_136*tmp_145;
      real_t tmp_147 = -tmp_144*tmp_146;
      real_t tmp_148 = tmp_139*tmp_145;
      real_t tmp_149 = tmp_148*tmp_35;
      real_t tmp_150 = 2.0*tmp_85;
      real_t tmp_151 = tmp_148*tmp_44;
      real_t tmp_152 = (2.0/3.0)*tmp_95;
      real_t tmp_153 = tmp_88 - 1.0;
      real_t tmp_154 = tmp_136*tmp_153;
      real_t tmp_155 = -tmp_152*tmp_154;
      real_t tmp_156 = tmp_139*tmp_153;
      real_t tmp_157 = tmp_156*tmp_35;
      real_t tmp_158 = 2.0*tmp_108;
      real_t tmp_159 = tmp_156*tmp_44;
      real_t tmp_160 = (2.0/3.0)*tmp_118;
      real_t tmp_161 = tmp_111 - 1.0;
      real_t tmp_162 = tmp_136*tmp_161;
      real_t tmp_163 = -tmp_160*tmp_162;
      real_t tmp_164 = tmp_139*tmp_161;
      real_t tmp_165 = tmp_164*tmp_35;
      real_t tmp_166 = 2.0*tmp_131;
      real_t tmp_167 = tmp_164*tmp_44;
      real_t tmp_168 = tmp_22 - 1.0;
      real_t tmp_169 = tmp_20*tmp_26;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = -tmp_134*tmp_170;
      real_t tmp_172 = tmp_139*tmp_168;
      real_t tmp_173 = tmp_172*tmp_33;
      real_t tmp_174 = tmp_172*tmp_42;
      real_t tmp_175 = tmp_66 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = -tmp_144*tmp_176;
      real_t tmp_178 = tmp_139*tmp_175;
      real_t tmp_179 = tmp_178*tmp_33;
      real_t tmp_180 = tmp_178*tmp_42;
      real_t tmp_181 = tmp_89 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = -tmp_152*tmp_182;
      real_t tmp_184 = tmp_139*tmp_181;
      real_t tmp_185 = tmp_184*tmp_33;
      real_t tmp_186 = tmp_184*tmp_42;
      real_t tmp_187 = tmp_112 - 1.0;
      real_t tmp_188 = tmp_169*tmp_187;
      real_t tmp_189 = -tmp_160*tmp_188;
      real_t tmp_190 = tmp_139*tmp_187;
      real_t tmp_191 = tmp_190*tmp_33;
      real_t tmp_192 = tmp_190*tmp_42;
      real_t tmp_193 = tmp_23 - 1.0;
      real_t tmp_194 = tmp_20*tmp_8;
      real_t tmp_195 = tmp_193*tmp_194;
      real_t tmp_196 = -tmp_134*tmp_195;
      real_t tmp_197 = tmp_139*tmp_193;
      real_t tmp_198 = tmp_197*tmp_31;
      real_t tmp_199 = tmp_197*tmp_40;
      real_t tmp_200 = tmp_67 - 1.0;
      real_t tmp_201 = tmp_194*tmp_200;
      real_t tmp_202 = -tmp_144*tmp_201;
      real_t tmp_203 = tmp_139*tmp_200;
      real_t tmp_204 = tmp_203*tmp_31;
      real_t tmp_205 = tmp_203*tmp_40;
      real_t tmp_206 = tmp_90 - 1.0;
      real_t tmp_207 = tmp_194*tmp_206;
      real_t tmp_208 = -tmp_152*tmp_207;
      real_t tmp_209 = tmp_139*tmp_206;
      real_t tmp_210 = tmp_209*tmp_31;
      real_t tmp_211 = tmp_209*tmp_40;
      real_t tmp_212 = tmp_113 - 1.0;
      real_t tmp_213 = tmp_194*tmp_212;
      real_t tmp_214 = -tmp_160*tmp_213;
      real_t tmp_215 = tmp_139*tmp_212;
      real_t tmp_216 = tmp_215*tmp_31;
      real_t tmp_217 = tmp_215*tmp_40;
      real_t tmp_218 = tmp_194*tmp_22;
      real_t tmp_219 = tmp_169*tmp_23;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = -tmp_134*tmp_220;
      real_t tmp_222 = 1.1055728090000847;
      real_t tmp_223 = tmp_194*tmp_222;
      real_t tmp_224 = 4.6832815729997463;
      real_t tmp_225 = tmp_169*tmp_224;
      real_t tmp_226 = tmp_223 + tmp_225;
      real_t tmp_227 = tmp_20*tmp_22;
      real_t tmp_228 = tmp_227*tmp_31;
      real_t tmp_229 = tmp_20*tmp_23;
      real_t tmp_230 = tmp_229*tmp_33;
      real_t tmp_231 = tmp_228 + tmp_230;
      real_t tmp_232 = tmp_227*tmp_40;
      real_t tmp_233 = tmp_229*tmp_42;
      real_t tmp_234 = tmp_232 + tmp_233;
      real_t tmp_235 = tmp_194*tmp_66;
      real_t tmp_236 = tmp_169*tmp_67;
      real_t tmp_237 = tmp_235 + tmp_236;
      real_t tmp_238 = -tmp_144*tmp_237;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_194*tmp_239;
      real_t tmp_241 = 1.1055728090000847;
      real_t tmp_242 = tmp_169*tmp_241;
      real_t tmp_243 = tmp_240 + tmp_242;
      real_t tmp_244 = tmp_20*tmp_66;
      real_t tmp_245 = tmp_244*tmp_31;
      real_t tmp_246 = tmp_20*tmp_67;
      real_t tmp_247 = tmp_246*tmp_33;
      real_t tmp_248 = tmp_245 + tmp_247;
      real_t tmp_249 = tmp_244*tmp_40;
      real_t tmp_250 = tmp_246*tmp_42;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_194*tmp_89;
      real_t tmp_253 = tmp_169*tmp_90;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = -tmp_152*tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_194*tmp_256;
      real_t tmp_258 = 1.1055728090000847;
      real_t tmp_259 = tmp_169*tmp_258;
      real_t tmp_260 = tmp_257 + tmp_259;
      real_t tmp_261 = tmp_20*tmp_89;
      real_t tmp_262 = tmp_261*tmp_31;
      real_t tmp_263 = tmp_20*tmp_90;
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_262 + tmp_264;
      real_t tmp_266 = tmp_261*tmp_40;
      real_t tmp_267 = tmp_263*tmp_42;
      real_t tmp_268 = tmp_266 + tmp_267;
      real_t tmp_269 = tmp_112*tmp_194;
      real_t tmp_270 = tmp_113*tmp_169;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = -tmp_160*tmp_271;
      real_t tmp_273 = 1.1055728090000847;
      real_t tmp_274 = tmp_194*tmp_273;
      real_t tmp_275 = 1.1055728090000847;
      real_t tmp_276 = tmp_169*tmp_275;
      real_t tmp_277 = tmp_274 + tmp_276;
      real_t tmp_278 = tmp_112*tmp_20;
      real_t tmp_279 = tmp_278*tmp_31;
      real_t tmp_280 = tmp_113*tmp_20;
      real_t tmp_281 = tmp_280*tmp_33;
      real_t tmp_282 = tmp_279 + tmp_281;
      real_t tmp_283 = tmp_278*tmp_40;
      real_t tmp_284 = tmp_280*tmp_42;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_194*tmp_21;
      real_t tmp_287 = tmp_136*tmp_23;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = -tmp_134*tmp_288;
      real_t tmp_290 = 1.1055728090000847;
      real_t tmp_291 = tmp_194*tmp_290;
      real_t tmp_292 = tmp_136*tmp_224;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_20*tmp_21;
      real_t tmp_295 = tmp_294*tmp_31;
      real_t tmp_296 = tmp_229*tmp_35;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_294*tmp_40;
      real_t tmp_299 = tmp_229*tmp_44;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_194*tmp_65;
      real_t tmp_302 = tmp_136*tmp_67;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = -tmp_144*tmp_303;
      real_t tmp_305 = 1.1055728090000847;
      real_t tmp_306 = tmp_194*tmp_305;
      real_t tmp_307 = tmp_136*tmp_241;
      real_t tmp_308 = tmp_306 + tmp_307;
      real_t tmp_309 = tmp_20*tmp_65;
      real_t tmp_310 = tmp_309*tmp_31;
      real_t tmp_311 = tmp_246*tmp_35;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_309*tmp_40;
      real_t tmp_314 = tmp_246*tmp_44;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_194*tmp_88;
      real_t tmp_317 = tmp_136*tmp_90;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = -tmp_152*tmp_318;
      real_t tmp_320 = 4.6832815729997463;
      real_t tmp_321 = tmp_194*tmp_320;
      real_t tmp_322 = tmp_136*tmp_258;
      real_t tmp_323 = tmp_321 + tmp_322;
      real_t tmp_324 = tmp_20*tmp_88;
      real_t tmp_325 = tmp_31*tmp_324;
      real_t tmp_326 = tmp_263*tmp_35;
      real_t tmp_327 = tmp_325 + tmp_326;
      real_t tmp_328 = tmp_324*tmp_40;
      real_t tmp_329 = tmp_263*tmp_44;
      real_t tmp_330 = tmp_328 + tmp_329;
      real_t tmp_331 = tmp_111*tmp_194;
      real_t tmp_332 = tmp_113*tmp_136;
      real_t tmp_333 = tmp_331 + tmp_332;
      real_t tmp_334 = -tmp_160*tmp_333;
      real_t tmp_335 = 1.1055728090000847;
      real_t tmp_336 = tmp_194*tmp_335;
      real_t tmp_337 = tmp_136*tmp_275;
      real_t tmp_338 = tmp_336 + tmp_337;
      real_t tmp_339 = tmp_111*tmp_20;
      real_t tmp_340 = tmp_31*tmp_339;
      real_t tmp_341 = tmp_280*tmp_35;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = tmp_339*tmp_40;
      real_t tmp_344 = tmp_280*tmp_44;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_169*tmp_21;
      real_t tmp_347 = tmp_136*tmp_22;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_134*tmp_348;
      real_t tmp_350 = tmp_169*tmp_290;
      real_t tmp_351 = tmp_136*tmp_222;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = tmp_294*tmp_33;
      real_t tmp_354 = tmp_227*tmp_35;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_294*tmp_42;
      real_t tmp_357 = tmp_227*tmp_44;
      real_t tmp_358 = tmp_356 + tmp_357;
      real_t tmp_359 = tmp_169*tmp_65;
      real_t tmp_360 = tmp_136*tmp_66;
      real_t tmp_361 = tmp_359 + tmp_360;
      real_t tmp_362 = -tmp_144*tmp_361;
      real_t tmp_363 = tmp_169*tmp_305;
      real_t tmp_364 = tmp_136*tmp_239;
      real_t tmp_365 = tmp_363 + tmp_364;
      real_t tmp_366 = tmp_309*tmp_33;
      real_t tmp_367 = tmp_244*tmp_35;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_309*tmp_42;
      real_t tmp_370 = tmp_244*tmp_44;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_169*tmp_88;
      real_t tmp_373 = tmp_136*tmp_89;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = -tmp_152*tmp_374;
      real_t tmp_376 = tmp_169*tmp_320;
      real_t tmp_377 = tmp_136*tmp_256;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_324*tmp_33;
      real_t tmp_380 = tmp_261*tmp_35;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_324*tmp_42;
      real_t tmp_383 = tmp_261*tmp_44;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_111*tmp_169;
      real_t tmp_386 = tmp_112*tmp_136;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = -tmp_160*tmp_387;
      real_t tmp_389 = tmp_169*tmp_335;
      real_t tmp_390 = tmp_136*tmp_273;
      real_t tmp_391 = tmp_389 + tmp_390;
      real_t tmp_392 = tmp_33*tmp_339;
      real_t tmp_393 = tmp_278*tmp_35;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = tmp_339*tmp_42;
      real_t tmp_396 = tmp_278*tmp_44;
      real_t tmp_397 = tmp_395 + tmp_396;
      real_t tmp_398 = -tmp_22;
      real_t tmp_399 = 4.0 - tmp_21;
      real_t tmp_400 = tmp_20*(-tmp_224 + tmp_398 + tmp_399);
      real_t tmp_401 = tmp_400*tmp_8;
      real_t tmp_402 = -tmp_219 - tmp_287;
      real_t tmp_403 = tmp_401 + tmp_402;
      real_t tmp_404 = -tmp_134*tmp_403;
      real_t tmp_405 = tmp_31*tmp_400;
      real_t tmp_406 = -tmp_230 - tmp_296 + tmp_405;
      real_t tmp_407 = -tmp_225 - tmp_292 + 2.0*tmp_401;
      real_t tmp_408 = tmp_40*tmp_400;
      real_t tmp_409 = -tmp_233 - tmp_299 + tmp_408;
      real_t tmp_410 = -tmp_66;
      real_t tmp_411 = 4.0 - tmp_65;
      real_t tmp_412 = tmp_20*(-tmp_241 + tmp_410 + tmp_411);
      real_t tmp_413 = tmp_412*tmp_8;
      real_t tmp_414 = -tmp_236 - tmp_302;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = -tmp_144*tmp_415;
      real_t tmp_417 = tmp_31*tmp_412;
      real_t tmp_418 = -tmp_247 - tmp_311 + tmp_417;
      real_t tmp_419 = -tmp_242 - tmp_307 + 2.0*tmp_413;
      real_t tmp_420 = tmp_40*tmp_412;
      real_t tmp_421 = -tmp_250 - tmp_314 + tmp_420;
      real_t tmp_422 = -tmp_89;
      real_t tmp_423 = 4.0 - tmp_88;
      real_t tmp_424 = tmp_20*(-tmp_258 + tmp_422 + tmp_423);
      real_t tmp_425 = tmp_424*tmp_8;
      real_t tmp_426 = -tmp_253 - tmp_317;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = -tmp_152*tmp_427;
      real_t tmp_429 = tmp_31*tmp_424;
      real_t tmp_430 = -tmp_264 - tmp_326 + tmp_429;
      real_t tmp_431 = -tmp_259 - tmp_322 + 2.0*tmp_425;
      real_t tmp_432 = tmp_40*tmp_424;
      real_t tmp_433 = -tmp_267 - tmp_329 + tmp_432;
      real_t tmp_434 = -tmp_112;
      real_t tmp_435 = 4.0 - tmp_111;
      real_t tmp_436 = tmp_20*(-tmp_275 + tmp_434 + tmp_435);
      real_t tmp_437 = tmp_436*tmp_8;
      real_t tmp_438 = -tmp_270 - tmp_332;
      real_t tmp_439 = tmp_437 + tmp_438;
      real_t tmp_440 = -tmp_160*tmp_439;
      real_t tmp_441 = tmp_31*tmp_436;
      real_t tmp_442 = -tmp_281 - tmp_341 + tmp_441;
      real_t tmp_443 = -tmp_276 - tmp_337 + 2.0*tmp_437;
      real_t tmp_444 = tmp_40*tmp_436;
      real_t tmp_445 = -tmp_284 - tmp_344 + tmp_444;
      real_t tmp_446 = -tmp_23;
      real_t tmp_447 = tmp_20*(-tmp_222 + tmp_399 + tmp_446);
      real_t tmp_448 = tmp_26*tmp_447;
      real_t tmp_449 = -tmp_218 - tmp_347;
      real_t tmp_450 = tmp_448 + tmp_449;
      real_t tmp_451 = -tmp_134*tmp_450;
      real_t tmp_452 = tmp_33*tmp_447;
      real_t tmp_453 = -tmp_228 - tmp_354 + tmp_452;
      real_t tmp_454 = -tmp_223 - tmp_351 + 2.0*tmp_448;
      real_t tmp_455 = tmp_42*tmp_447;
      real_t tmp_456 = -tmp_232 - tmp_357 + tmp_455;
      real_t tmp_457 = -tmp_67;
      real_t tmp_458 = tmp_20*(-tmp_239 + tmp_411 + tmp_457);
      real_t tmp_459 = tmp_26*tmp_458;
      real_t tmp_460 = -tmp_235 - tmp_360;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = -tmp_144*tmp_461;
      real_t tmp_463 = tmp_33*tmp_458;
      real_t tmp_464 = -tmp_245 - tmp_367 + tmp_463;
      real_t tmp_465 = -tmp_240 - tmp_364 + 2.0*tmp_459;
      real_t tmp_466 = tmp_42*tmp_458;
      real_t tmp_467 = -tmp_249 - tmp_370 + tmp_466;
      real_t tmp_468 = -tmp_90;
      real_t tmp_469 = tmp_20*(-tmp_256 + tmp_423 + tmp_468);
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = -tmp_252 - tmp_373;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = -tmp_152*tmp_472;
      real_t tmp_474 = tmp_33*tmp_469;
      real_t tmp_475 = -tmp_262 - tmp_380 + tmp_474;
      real_t tmp_476 = -tmp_257 - tmp_377 + 2.0*tmp_470;
      real_t tmp_477 = tmp_42*tmp_469;
      real_t tmp_478 = -tmp_266 - tmp_383 + tmp_477;
      real_t tmp_479 = -tmp_113;
      real_t tmp_480 = tmp_20*(-tmp_273 + tmp_435 + tmp_479);
      real_t tmp_481 = tmp_26*tmp_480;
      real_t tmp_482 = -tmp_269 - tmp_386;
      real_t tmp_483 = tmp_481 + tmp_482;
      real_t tmp_484 = -tmp_160*tmp_483;
      real_t tmp_485 = tmp_33*tmp_480;
      real_t tmp_486 = -tmp_279 - tmp_393 + tmp_485;
      real_t tmp_487 = -tmp_274 - tmp_390 + 2.0*tmp_481;
      real_t tmp_488 = tmp_42*tmp_480;
      real_t tmp_489 = -tmp_283 - tmp_396 + tmp_488;
      real_t tmp_490 = tmp_20*(-tmp_290 + tmp_398 + tmp_446 + 4.0);
      real_t tmp_491 = tmp_28*tmp_490;
      real_t tmp_492 = -tmp_286 - tmp_346;
      real_t tmp_493 = tmp_491 + tmp_492;
      real_t tmp_494 = -tmp_134*tmp_493;
      real_t tmp_495 = tmp_35*tmp_490;
      real_t tmp_496 = -tmp_295 - tmp_353 + tmp_495;
      real_t tmp_497 = -tmp_291 - tmp_350 + 2.0*tmp_491;
      real_t tmp_498 = tmp_44*tmp_490;
      real_t tmp_499 = -tmp_298 - tmp_356 + tmp_498;
      real_t tmp_500 = tmp_20*(-tmp_305 + tmp_410 + tmp_457 + 4.0);
      real_t tmp_501 = tmp_28*tmp_500;
      real_t tmp_502 = -tmp_301 - tmp_359;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_144*tmp_503;
      real_t tmp_505 = tmp_35*tmp_500;
      real_t tmp_506 = -tmp_310 - tmp_366 + tmp_505;
      real_t tmp_507 = -tmp_306 - tmp_363 + 2.0*tmp_501;
      real_t tmp_508 = tmp_44*tmp_500;
      real_t tmp_509 = -tmp_313 - tmp_369 + tmp_508;
      real_t tmp_510 = tmp_20*(-tmp_320 + tmp_422 + tmp_468 + 4.0);
      real_t tmp_511 = tmp_28*tmp_510;
      real_t tmp_512 = -tmp_316 - tmp_372;
      real_t tmp_513 = tmp_511 + tmp_512;
      real_t tmp_514 = -tmp_152*tmp_513;
      real_t tmp_515 = tmp_35*tmp_510;
      real_t tmp_516 = -tmp_325 - tmp_379 + tmp_515;
      real_t tmp_517 = -tmp_321 - tmp_376 + 2.0*tmp_511;
      real_t tmp_518 = tmp_44*tmp_510;
      real_t tmp_519 = -tmp_328 - tmp_382 + tmp_518;
      real_t tmp_520 = tmp_20*(-tmp_335 + tmp_434 + tmp_479 + 4.0);
      real_t tmp_521 = tmp_28*tmp_520;
      real_t tmp_522 = -tmp_331 - tmp_385;
      real_t tmp_523 = tmp_521 + tmp_522;
      real_t tmp_524 = -tmp_160*tmp_523;
      real_t tmp_525 = tmp_35*tmp_520;
      real_t tmp_526 = -tmp_340 - tmp_392 + tmp_525;
      real_t tmp_527 = -tmp_336 - tmp_389 + 2.0*tmp_521;
      real_t tmp_528 = tmp_44*tmp_520;
      real_t tmp_529 = -tmp_343 - tmp_395 + tmp_528;
      real_t tmp_530 = 1.0*tmp_20;
      real_t tmp_531 = tmp_135*tmp_530;
      real_t tmp_532 = tmp_35*tmp_531;
      real_t tmp_533 = tmp_44*tmp_531;
      real_t tmp_534 = 1.0*tmp_137;
      real_t tmp_535 = tmp_145*tmp_530;
      real_t tmp_536 = tmp_35*tmp_535;
      real_t tmp_537 = tmp_44*tmp_535;
      real_t tmp_538 = 1.0*tmp_146;
      real_t tmp_539 = tmp_153*tmp_530;
      real_t tmp_540 = tmp_35*tmp_539;
      real_t tmp_541 = tmp_44*tmp_539;
      real_t tmp_542 = 1.0*tmp_154;
      real_t tmp_543 = tmp_161*tmp_530;
      real_t tmp_544 = tmp_35*tmp_543;
      real_t tmp_545 = tmp_44*tmp_543;
      real_t tmp_546 = 1.0*tmp_162;
      real_t tmp_547 = (tmp_35*tmp_35);
      real_t tmp_548 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_549 = 0.012499999999999983*tmp_548;
      real_t tmp_550 = 16.0*tmp_549;
      real_t tmp_551 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_552 = (tmp_44*tmp_44);
      real_t tmp_553 = 0.012499999999999983*tmp_548;
      real_t tmp_554 = 16.0*tmp_553;
      real_t tmp_555 = 0.11249999999999989*tmp_548;
      real_t tmp_556 = 16.0*tmp_555;
      real_t tmp_557 = 0.012499999999999983*tmp_548;
      real_t tmp_558 = 16.0*tmp_557;
      real_t tmp_559 = tmp_135*tmp_168;
      real_t tmp_560 = 1.0*tmp_548;
      real_t tmp_561 = tmp_35*tmp_560;
      real_t tmp_562 = tmp_33*tmp_561;
      real_t tmp_563 = 1.3333333333333335*tmp_28*tmp_548;
      real_t tmp_564 = tmp_26*tmp_563;
      real_t tmp_565 = tmp_44*tmp_560;
      real_t tmp_566 = tmp_42*tmp_565;
      real_t tmp_567 = tmp_145*tmp_175;
      real_t tmp_568 = tmp_153*tmp_181;
      real_t tmp_569 = tmp_161*tmp_187;
      real_t tmp_570 = tmp_110*(tmp_562*tmp_568 + tmp_564*tmp_568 + tmp_566*tmp_568) + tmp_133*(tmp_562*tmp_569 + tmp_564*tmp_569 + tmp_566*tmp_569) + tmp_64*(tmp_559*tmp_562 + tmp_559*tmp_564 + tmp_559*tmp_566) + tmp_87*(tmp_562*tmp_567 + tmp_564*tmp_567 + tmp_566*tmp_567);
      real_t tmp_571 = tmp_135*tmp_193;
      real_t tmp_572 = tmp_31*tmp_561;
      real_t tmp_573 = tmp_563*tmp_8;
      real_t tmp_574 = tmp_40*tmp_565;
      real_t tmp_575 = tmp_145*tmp_200;
      real_t tmp_576 = tmp_153*tmp_206;
      real_t tmp_577 = tmp_161*tmp_212;
      real_t tmp_578 = tmp_110*(tmp_572*tmp_576 + tmp_573*tmp_576 + tmp_574*tmp_576) + tmp_133*(tmp_572*tmp_577 + tmp_573*tmp_577 + tmp_574*tmp_577) + tmp_64*(tmp_571*tmp_572 + tmp_571*tmp_573 + tmp_571*tmp_574) + tmp_87*(tmp_572*tmp_575 + tmp_573*tmp_575 + tmp_574*tmp_575);
      real_t tmp_579 = (2.0/3.0)*tmp_220;
      real_t tmp_580 = (2.0/3.0)*tmp_237;
      real_t tmp_581 = (2.0/3.0)*tmp_254;
      real_t tmp_582 = (2.0/3.0)*tmp_271;
      real_t tmp_583 = (2.0/3.0)*tmp_288;
      real_t tmp_584 = (2.0/3.0)*tmp_303;
      real_t tmp_585 = (2.0/3.0)*tmp_318;
      real_t tmp_586 = (2.0/3.0)*tmp_333;
      real_t tmp_587 = (2.0/3.0)*tmp_348;
      real_t tmp_588 = (2.0/3.0)*tmp_361;
      real_t tmp_589 = (2.0/3.0)*tmp_374;
      real_t tmp_590 = (2.0/3.0)*tmp_387;
      real_t tmp_591 = (2.0/3.0)*tmp_403;
      real_t tmp_592 = -tmp_137*tmp_591;
      real_t tmp_593 = (2.0/3.0)*tmp_415;
      real_t tmp_594 = -tmp_146*tmp_593;
      real_t tmp_595 = (2.0/3.0)*tmp_427;
      real_t tmp_596 = -tmp_154*tmp_595;
      real_t tmp_597 = (2.0/3.0)*tmp_439;
      real_t tmp_598 = -tmp_162*tmp_597;
      real_t tmp_599 = (2.0/3.0)*tmp_450;
      real_t tmp_600 = -tmp_137*tmp_599;
      real_t tmp_601 = (2.0/3.0)*tmp_461;
      real_t tmp_602 = -tmp_146*tmp_601;
      real_t tmp_603 = (2.0/3.0)*tmp_472;
      real_t tmp_604 = -tmp_154*tmp_603;
      real_t tmp_605 = (2.0/3.0)*tmp_483;
      real_t tmp_606 = -tmp_162*tmp_605;
      real_t tmp_607 = (2.0/3.0)*tmp_493;
      real_t tmp_608 = -tmp_137*tmp_607;
      real_t tmp_609 = (2.0/3.0)*tmp_503;
      real_t tmp_610 = -tmp_146*tmp_609;
      real_t tmp_611 = (2.0/3.0)*tmp_513;
      real_t tmp_612 = -tmp_154*tmp_611;
      real_t tmp_613 = (2.0/3.0)*tmp_523;
      real_t tmp_614 = -tmp_162*tmp_613;
      real_t tmp_615 = tmp_168*tmp_530;
      real_t tmp_616 = tmp_33*tmp_615;
      real_t tmp_617 = tmp_42*tmp_615;
      real_t tmp_618 = 1.0*tmp_170;
      real_t tmp_619 = tmp_175*tmp_530;
      real_t tmp_620 = tmp_33*tmp_619;
      real_t tmp_621 = tmp_42*tmp_619;
      real_t tmp_622 = 1.0*tmp_176;
      real_t tmp_623 = tmp_181*tmp_530;
      real_t tmp_624 = tmp_33*tmp_623;
      real_t tmp_625 = tmp_42*tmp_623;
      real_t tmp_626 = 1.0*tmp_182;
      real_t tmp_627 = tmp_187*tmp_530;
      real_t tmp_628 = tmp_33*tmp_627;
      real_t tmp_629 = tmp_42*tmp_627;
      real_t tmp_630 = 1.0*tmp_188;
      real_t tmp_631 = (tmp_33*tmp_33);
      real_t tmp_632 = 0.012499999999999983*tmp_548;
      real_t tmp_633 = 16.0*tmp_632;
      real_t tmp_634 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_635 = (tmp_42*tmp_42);
      real_t tmp_636 = 0.11249999999999989*tmp_548;
      real_t tmp_637 = 16.0*tmp_636;
      real_t tmp_638 = 0.012499999999999983*tmp_548;
      real_t tmp_639 = 16.0*tmp_638;
      real_t tmp_640 = 0.012499999999999983*tmp_548;
      real_t tmp_641 = 16.0*tmp_640;
      real_t tmp_642 = tmp_168*tmp_193;
      real_t tmp_643 = tmp_560*tmp_642;
      real_t tmp_644 = tmp_31*tmp_33;
      real_t tmp_645 = 1.3333333333333335*tmp_26*tmp_548*tmp_8;
      real_t tmp_646 = tmp_40*tmp_42;
      real_t tmp_647 = tmp_175*tmp_200;
      real_t tmp_648 = tmp_560*tmp_644;
      real_t tmp_649 = tmp_560*tmp_646;
      real_t tmp_650 = tmp_181*tmp_206;
      real_t tmp_651 = tmp_187*tmp_212;
      real_t tmp_652 = tmp_110*(tmp_645*tmp_650 + tmp_648*tmp_650 + tmp_649*tmp_650) + tmp_133*(tmp_645*tmp_651 + tmp_648*tmp_651 + tmp_649*tmp_651) + tmp_64*(tmp_642*tmp_645 + tmp_643*tmp_644 + tmp_643*tmp_646) + tmp_87*(tmp_645*tmp_647 + tmp_647*tmp_648 + tmp_647*tmp_649);
      real_t tmp_653 = -tmp_170*tmp_591;
      real_t tmp_654 = -tmp_176*tmp_593;
      real_t tmp_655 = -tmp_182*tmp_595;
      real_t tmp_656 = -tmp_188*tmp_597;
      real_t tmp_657 = -tmp_170*tmp_599;
      real_t tmp_658 = -tmp_176*tmp_601;
      real_t tmp_659 = -tmp_182*tmp_603;
      real_t tmp_660 = -tmp_188*tmp_605;
      real_t tmp_661 = -tmp_170*tmp_607;
      real_t tmp_662 = -tmp_176*tmp_609;
      real_t tmp_663 = -tmp_182*tmp_611;
      real_t tmp_664 = -tmp_188*tmp_613;
      real_t tmp_665 = tmp_193*tmp_530;
      real_t tmp_666 = tmp_31*tmp_665;
      real_t tmp_667 = tmp_40*tmp_665;
      real_t tmp_668 = 1.0*tmp_195;
      real_t tmp_669 = tmp_200*tmp_530;
      real_t tmp_670 = tmp_31*tmp_669;
      real_t tmp_671 = tmp_40*tmp_669;
      real_t tmp_672 = 1.0*tmp_201;
      real_t tmp_673 = tmp_206*tmp_530;
      real_t tmp_674 = tmp_31*tmp_673;
      real_t tmp_675 = tmp_40*tmp_673;
      real_t tmp_676 = 1.0*tmp_207;
      real_t tmp_677 = tmp_212*tmp_530;
      real_t tmp_678 = tmp_31*tmp_677;
      real_t tmp_679 = tmp_40*tmp_677;
      real_t tmp_680 = 1.0*tmp_213;
      real_t tmp_681 = (tmp_31*tmp_31);
      real_t tmp_682 = 0.11249999999999989*tmp_548;
      real_t tmp_683 = 16.0*tmp_682;
      real_t tmp_684 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_685 = (tmp_40*tmp_40);
      real_t tmp_686 = 0.012499999999999983*tmp_548;
      real_t tmp_687 = 16.0*tmp_686;
      real_t tmp_688 = 0.012499999999999983*tmp_548;
      real_t tmp_689 = 16.0*tmp_688;
      real_t tmp_690 = 0.012499999999999983*tmp_548;
      real_t tmp_691 = 16.0*tmp_690;
      real_t tmp_692 = -tmp_195*tmp_591;
      real_t tmp_693 = -tmp_201*tmp_593;
      real_t tmp_694 = -tmp_207*tmp_595;
      real_t tmp_695 = -tmp_213*tmp_597;
      real_t tmp_696 = -tmp_195*tmp_599;
      real_t tmp_697 = -tmp_201*tmp_601;
      real_t tmp_698 = -tmp_207*tmp_603;
      real_t tmp_699 = -tmp_213*tmp_605;
      real_t tmp_700 = -tmp_195*tmp_607;
      real_t tmp_701 = -tmp_201*tmp_609;
      real_t tmp_702 = -tmp_207*tmp_611;
      real_t tmp_703 = -tmp_213*tmp_613;
      real_t tmp_704 = 0.13819660112501059*tmp_139;
      real_t tmp_705 = tmp_31*tmp_704;
      real_t tmp_706 = 0.58541019662496829*tmp_139;
      real_t tmp_707 = tmp_33*tmp_706;
      real_t tmp_708 = tmp_705 + tmp_707;
      real_t tmp_709 = 2*tmp_708;
      real_t tmp_710 = tmp_40*tmp_704;
      real_t tmp_711 = tmp_42*tmp_706;
      real_t tmp_712 = tmp_710 + tmp_711;
      real_t tmp_713 = 2*tmp_712;
      real_t tmp_714 = 0.58541019662496829*tmp_139;
      real_t tmp_715 = tmp_31*tmp_714;
      real_t tmp_716 = 0.13819660112501059*tmp_139;
      real_t tmp_717 = tmp_33*tmp_716;
      real_t tmp_718 = tmp_715 + tmp_717;
      real_t tmp_719 = 2*tmp_718;
      real_t tmp_720 = tmp_40*tmp_714;
      real_t tmp_721 = tmp_42*tmp_716;
      real_t tmp_722 = tmp_720 + tmp_721;
      real_t tmp_723 = 2*tmp_722;
      real_t tmp_724 = 0.13819660112501059*tmp_139;
      real_t tmp_725 = tmp_31*tmp_724;
      real_t tmp_726 = 0.13819660112501059*tmp_139;
      real_t tmp_727 = tmp_33*tmp_726;
      real_t tmp_728 = tmp_725 + tmp_727;
      real_t tmp_729 = 2*tmp_728;
      real_t tmp_730 = tmp_40*tmp_724;
      real_t tmp_731 = tmp_42*tmp_726;
      real_t tmp_732 = tmp_730 + tmp_731;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = 0.13819660112501059*tmp_139;
      real_t tmp_735 = tmp_31*tmp_734;
      real_t tmp_736 = 0.13819660112501059*tmp_139;
      real_t tmp_737 = tmp_33*tmp_736;
      real_t tmp_738 = tmp_735 + tmp_737;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = tmp_40*tmp_734;
      real_t tmp_741 = tmp_42*tmp_736;
      real_t tmp_742 = tmp_740 + tmp_741;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = 1.3333333333333335*tmp_220;
      real_t tmp_745 = 1.3333333333333335*tmp_237;
      real_t tmp_746 = 1.3333333333333335*tmp_254;
      real_t tmp_747 = 1.3333333333333335*tmp_271;
      real_t tmp_748 = 0.13819660112501059*tmp_194;
      real_t tmp_749 = 0.58541019662496829*tmp_169;
      real_t tmp_750 = 0.58541019662496829*tmp_194;
      real_t tmp_751 = 0.13819660112501059*tmp_169;
      real_t tmp_752 = 0.13819660112501059*tmp_194;
      real_t tmp_753 = 0.13819660112501059*tmp_169;
      real_t tmp_754 = 0.13819660112501059*tmp_194;
      real_t tmp_755 = 0.13819660112501059*tmp_169;
      real_t tmp_756 = -tmp_288*tmp_579;
      real_t tmp_757 = -tmp_303*tmp_580;
      real_t tmp_758 = -tmp_318*tmp_581;
      real_t tmp_759 = -tmp_333*tmp_582;
      real_t tmp_760 = -tmp_348*tmp_579;
      real_t tmp_761 = -tmp_361*tmp_580;
      real_t tmp_762 = -tmp_374*tmp_581;
      real_t tmp_763 = -tmp_387*tmp_582;
      real_t tmp_764 = -tmp_403*tmp_579;
      real_t tmp_765 = -tmp_415*tmp_580;
      real_t tmp_766 = -tmp_427*tmp_581;
      real_t tmp_767 = -tmp_439*tmp_582;
      real_t tmp_768 = -tmp_450*tmp_579;
      real_t tmp_769 = -tmp_461*tmp_580;
      real_t tmp_770 = -tmp_472*tmp_581;
      real_t tmp_771 = -tmp_483*tmp_582;
      real_t tmp_772 = -tmp_493*tmp_579;
      real_t tmp_773 = -tmp_503*tmp_580;
      real_t tmp_774 = -tmp_513*tmp_581;
      real_t tmp_775 = -tmp_523*tmp_582;
      real_t tmp_776 = 0.13819660112501059*tmp_139;
      real_t tmp_777 = tmp_31*tmp_776;
      real_t tmp_778 = tmp_35*tmp_706;
      real_t tmp_779 = tmp_777 + tmp_778;
      real_t tmp_780 = 2*tmp_779;
      real_t tmp_781 = tmp_40*tmp_776;
      real_t tmp_782 = tmp_44*tmp_706;
      real_t tmp_783 = tmp_781 + tmp_782;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 0.13819660112501059*tmp_139;
      real_t tmp_786 = tmp_31*tmp_785;
      real_t tmp_787 = tmp_35*tmp_716;
      real_t tmp_788 = tmp_786 + tmp_787;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = tmp_40*tmp_785;
      real_t tmp_791 = tmp_44*tmp_716;
      real_t tmp_792 = tmp_790 + tmp_791;
      real_t tmp_793 = 2*tmp_792;
      real_t tmp_794 = 0.58541019662496829*tmp_139;
      real_t tmp_795 = tmp_31*tmp_794;
      real_t tmp_796 = tmp_35*tmp_726;
      real_t tmp_797 = tmp_795 + tmp_796;
      real_t tmp_798 = 2*tmp_797;
      real_t tmp_799 = tmp_40*tmp_794;
      real_t tmp_800 = tmp_44*tmp_726;
      real_t tmp_801 = tmp_799 + tmp_800;
      real_t tmp_802 = 2*tmp_801;
      real_t tmp_803 = 0.13819660112501059*tmp_139;
      real_t tmp_804 = tmp_31*tmp_803;
      real_t tmp_805 = tmp_35*tmp_736;
      real_t tmp_806 = tmp_804 + tmp_805;
      real_t tmp_807 = 2*tmp_806;
      real_t tmp_808 = tmp_40*tmp_803;
      real_t tmp_809 = tmp_44*tmp_736;
      real_t tmp_810 = tmp_808 + tmp_809;
      real_t tmp_811 = 2*tmp_810;
      real_t tmp_812 = 1.3333333333333335*tmp_288;
      real_t tmp_813 = 1.3333333333333335*tmp_303;
      real_t tmp_814 = 1.3333333333333335*tmp_318;
      real_t tmp_815 = 1.3333333333333335*tmp_333;
      real_t tmp_816 = 0.13819660112501059*tmp_194;
      real_t tmp_817 = 0.58541019662496829*tmp_136;
      real_t tmp_818 = 0.13819660112501059*tmp_194;
      real_t tmp_819 = 0.13819660112501059*tmp_136;
      real_t tmp_820 = 0.58541019662496829*tmp_194;
      real_t tmp_821 = 0.13819660112501059*tmp_136;
      real_t tmp_822 = 0.13819660112501059*tmp_194;
      real_t tmp_823 = 0.13819660112501059*tmp_136;
      real_t tmp_824 = -tmp_348*tmp_583;
      real_t tmp_825 = -tmp_361*tmp_584;
      real_t tmp_826 = -tmp_374*tmp_585;
      real_t tmp_827 = -tmp_387*tmp_586;
      real_t tmp_828 = -tmp_403*tmp_583;
      real_t tmp_829 = -tmp_415*tmp_584;
      real_t tmp_830 = -tmp_427*tmp_585;
      real_t tmp_831 = -tmp_439*tmp_586;
      real_t tmp_832 = -tmp_450*tmp_583;
      real_t tmp_833 = -tmp_461*tmp_584;
      real_t tmp_834 = -tmp_472*tmp_585;
      real_t tmp_835 = -tmp_483*tmp_586;
      real_t tmp_836 = -tmp_493*tmp_583;
      real_t tmp_837 = -tmp_503*tmp_584;
      real_t tmp_838 = -tmp_513*tmp_585;
      real_t tmp_839 = -tmp_523*tmp_586;
      real_t tmp_840 = tmp_33*tmp_776;
      real_t tmp_841 = tmp_35*tmp_704;
      real_t tmp_842 = tmp_840 + tmp_841;
      real_t tmp_843 = 2*tmp_842;
      real_t tmp_844 = tmp_42*tmp_776;
      real_t tmp_845 = tmp_44*tmp_704;
      real_t tmp_846 = tmp_844 + tmp_845;
      real_t tmp_847 = 2*tmp_846;
      real_t tmp_848 = tmp_33*tmp_785;
      real_t tmp_849 = tmp_35*tmp_714;
      real_t tmp_850 = tmp_848 + tmp_849;
      real_t tmp_851 = 2*tmp_850;
      real_t tmp_852 = tmp_42*tmp_785;
      real_t tmp_853 = tmp_44*tmp_714;
      real_t tmp_854 = tmp_852 + tmp_853;
      real_t tmp_855 = 2*tmp_854;
      real_t tmp_856 = tmp_33*tmp_794;
      real_t tmp_857 = tmp_35*tmp_724;
      real_t tmp_858 = tmp_856 + tmp_857;
      real_t tmp_859 = 2*tmp_858;
      real_t tmp_860 = tmp_42*tmp_794;
      real_t tmp_861 = tmp_44*tmp_724;
      real_t tmp_862 = tmp_860 + tmp_861;
      real_t tmp_863 = 2*tmp_862;
      real_t tmp_864 = tmp_33*tmp_803;
      real_t tmp_865 = tmp_35*tmp_734;
      real_t tmp_866 = tmp_864 + tmp_865;
      real_t tmp_867 = 2*tmp_866;
      real_t tmp_868 = tmp_42*tmp_803;
      real_t tmp_869 = tmp_44*tmp_734;
      real_t tmp_870 = tmp_868 + tmp_869;
      real_t tmp_871 = 2*tmp_870;
      real_t tmp_872 = 1.3333333333333335*tmp_348;
      real_t tmp_873 = 1.3333333333333335*tmp_361;
      real_t tmp_874 = 1.3333333333333335*tmp_374;
      real_t tmp_875 = 1.3333333333333335*tmp_387;
      real_t tmp_876 = 0.13819660112501059*tmp_169;
      real_t tmp_877 = 0.13819660112501059*tmp_136;
      real_t tmp_878 = 0.13819660112501059*tmp_169;
      real_t tmp_879 = 0.58541019662496829*tmp_136;
      real_t tmp_880 = 0.58541019662496829*tmp_169;
      real_t tmp_881 = 0.13819660112501059*tmp_136;
      real_t tmp_882 = 0.13819660112501059*tmp_169;
      real_t tmp_883 = 0.13819660112501059*tmp_136;
      real_t tmp_884 = -tmp_403*tmp_587;
      real_t tmp_885 = -tmp_415*tmp_588;
      real_t tmp_886 = -tmp_427*tmp_589;
      real_t tmp_887 = -tmp_439*tmp_590;
      real_t tmp_888 = -tmp_450*tmp_587;
      real_t tmp_889 = -tmp_461*tmp_588;
      real_t tmp_890 = -tmp_472*tmp_589;
      real_t tmp_891 = -tmp_483*tmp_590;
      real_t tmp_892 = -tmp_493*tmp_587;
      real_t tmp_893 = -tmp_503*tmp_588;
      real_t tmp_894 = -tmp_513*tmp_589;
      real_t tmp_895 = -tmp_523*tmp_590;
      real_t tmp_896 = 0.5*tmp_405 - tmp_707 - tmp_778;
      real_t tmp_897 = 2*tmp_896;
      real_t tmp_898 = 0.5*tmp_408 - tmp_711 - tmp_782;
      real_t tmp_899 = 2*tmp_898;
      real_t tmp_900 = 1.0*tmp_401 + tmp_402;
      real_t tmp_901 = 0.5*tmp_417 - tmp_717 - tmp_787;
      real_t tmp_902 = 2*tmp_901;
      real_t tmp_903 = 0.5*tmp_420 - tmp_721 - tmp_791;
      real_t tmp_904 = 2*tmp_903;
      real_t tmp_905 = 1.0*tmp_413 + tmp_414;
      real_t tmp_906 = 0.5*tmp_429 - tmp_727 - tmp_796;
      real_t tmp_907 = 2*tmp_906;
      real_t tmp_908 = 0.5*tmp_432 - tmp_731 - tmp_800;
      real_t tmp_909 = 2*tmp_908;
      real_t tmp_910 = 1.0*tmp_425 + tmp_426;
      real_t tmp_911 = 0.5*tmp_441 - tmp_737 - tmp_805;
      real_t tmp_912 = 2*tmp_911;
      real_t tmp_913 = 0.5*tmp_444 - tmp_741 - tmp_809;
      real_t tmp_914 = 2*tmp_913;
      real_t tmp_915 = 1.0*tmp_437 + tmp_438;
      real_t tmp_916 = 2.0*tmp_900;
      real_t tmp_917 = 2.0*tmp_905;
      real_t tmp_918 = 2.0*tmp_910;
      real_t tmp_919 = 2.0*tmp_915;
      real_t tmp_920 = -tmp_450*tmp_591;
      real_t tmp_921 = -tmp_461*tmp_593;
      real_t tmp_922 = -tmp_472*tmp_595;
      real_t tmp_923 = -tmp_483*tmp_597;
      real_t tmp_924 = -tmp_493*tmp_591;
      real_t tmp_925 = -tmp_503*tmp_593;
      real_t tmp_926 = -tmp_513*tmp_595;
      real_t tmp_927 = -tmp_523*tmp_597;
      real_t tmp_928 = 0.5*tmp_452 - tmp_705 - tmp_841;
      real_t tmp_929 = 2*tmp_928;
      real_t tmp_930 = 0.5*tmp_455 - tmp_710 - tmp_845;
      real_t tmp_931 = 2*tmp_930;
      real_t tmp_932 = 1.0*tmp_448 + tmp_449;
      real_t tmp_933 = 0.5*tmp_463 - tmp_715 - tmp_849;
      real_t tmp_934 = 2*tmp_933;
      real_t tmp_935 = 0.5*tmp_466 - tmp_720 - tmp_853;
      real_t tmp_936 = 2*tmp_935;
      real_t tmp_937 = 1.0*tmp_459 + tmp_460;
      real_t tmp_938 = 0.5*tmp_474 - tmp_725 - tmp_857;
      real_t tmp_939 = 2*tmp_938;
      real_t tmp_940 = 0.5*tmp_477 - tmp_730 - tmp_861;
      real_t tmp_941 = 2*tmp_940;
      real_t tmp_942 = 1.0*tmp_470 + tmp_471;
      real_t tmp_943 = 0.5*tmp_485 - tmp_735 - tmp_865;
      real_t tmp_944 = 2*tmp_943;
      real_t tmp_945 = 0.5*tmp_488 - tmp_740 - tmp_869;
      real_t tmp_946 = 2*tmp_945;
      real_t tmp_947 = 1.0*tmp_481 + tmp_482;
      real_t tmp_948 = 2.0*tmp_932;
      real_t tmp_949 = 2.0*tmp_937;
      real_t tmp_950 = 2.0*tmp_942;
      real_t tmp_951 = 2.0*tmp_947;
      real_t tmp_952 = -tmp_493*tmp_599;
      real_t tmp_953 = -tmp_503*tmp_601;
      real_t tmp_954 = -tmp_513*tmp_603;
      real_t tmp_955 = -tmp_523*tmp_605;
      real_t tmp_956 = 0.5*tmp_495 - tmp_777 - tmp_840;
      real_t tmp_957 = 2*tmp_956;
      real_t tmp_958 = 0.5*tmp_498 - tmp_781 - tmp_844;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 1.0*tmp_491 + tmp_492;
      real_t tmp_961 = 0.5*tmp_505 - tmp_786 - tmp_848;
      real_t tmp_962 = 2*tmp_961;
      real_t tmp_963 = 0.5*tmp_508 - tmp_790 - tmp_852;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = 1.0*tmp_501 + tmp_502;
      real_t tmp_966 = 0.5*tmp_515 - tmp_795 - tmp_856;
      real_t tmp_967 = 2*tmp_966;
      real_t tmp_968 = 0.5*tmp_518 - tmp_799 - tmp_860;
      real_t tmp_969 = 2*tmp_968;
      real_t tmp_970 = 1.0*tmp_511 + tmp_512;
      real_t tmp_971 = 0.5*tmp_525 - tmp_804 - tmp_864;
      real_t tmp_972 = 2*tmp_971;
      real_t tmp_973 = 0.5*tmp_528 - tmp_808 - tmp_868;
      real_t tmp_974 = 2*tmp_973;
      real_t tmp_975 = 1.0*tmp_521 + tmp_522;
      real_t tmp_976 = 2.0*tmp_960;
      real_t tmp_977 = 2.0*tmp_965;
      real_t tmp_978 = 2.0*tmp_970;
      real_t tmp_979 = 2.0*tmp_975;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_157 + tmp_106*tmp_159 + tmp_154*tmp_158 + tmp_155) + tmp_133*(tmp_123*tmp_165 + tmp_129*tmp_167 + tmp_162*tmp_166 + tmp_163) + tmp_64*(tmp_137*tmp_142 + tmp_138 + tmp_141*tmp_38 + tmp_143*tmp_47) + tmp_87*(tmp_146*tmp_150 + tmp_147 + tmp_149*tmp_77 + tmp_151*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_185 + tmp_106*tmp_186 + tmp_158*tmp_182 + tmp_183) + tmp_133*(tmp_123*tmp_191 + tmp_129*tmp_192 + tmp_166*tmp_188 + tmp_189) + tmp_64*(tmp_142*tmp_170 + tmp_171 + tmp_173*tmp_38 + tmp_174*tmp_47) + tmp_87*(tmp_150*tmp_176 + tmp_177 + tmp_179*tmp_77 + tmp_180*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_210 + tmp_106*tmp_211 + tmp_158*tmp_207 + tmp_208) + tmp_133*(tmp_123*tmp_216 + tmp_129*tmp_217 + tmp_166*tmp_213 + tmp_214) + tmp_64*(tmp_142*tmp_195 + tmp_196 + tmp_198*tmp_38 + tmp_199*tmp_47) + tmp_87*(tmp_150*tmp_201 + tmp_202 + tmp_204*tmp_77 + tmp_205*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_265 + tmp_107*tmp_268 + tmp_108*tmp_260 + tmp_255) + tmp_133*(tmp_124*tmp_282 + tmp_130*tmp_285 + tmp_131*tmp_277 + tmp_272) + tmp_64*(tmp_221 + tmp_226*tmp_49 + tmp_231*tmp_39 + tmp_234*tmp_48) + tmp_87*(tmp_238 + tmp_243*tmp_85 + tmp_248*tmp_78 + tmp_251*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_327 + tmp_107*tmp_330 + tmp_108*tmp_323 + tmp_319) + tmp_133*(tmp_124*tmp_342 + tmp_130*tmp_345 + tmp_131*tmp_338 + tmp_334) + tmp_64*(tmp_289 + tmp_293*tmp_49 + tmp_297*tmp_39 + tmp_300*tmp_48) + tmp_87*(tmp_304 + tmp_308*tmp_85 + tmp_312*tmp_78 + tmp_315*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_381 + tmp_107*tmp_384 + tmp_108*tmp_378 + tmp_375) + tmp_133*(tmp_124*tmp_394 + tmp_130*tmp_397 + tmp_131*tmp_391 + tmp_388) + tmp_64*(tmp_349 + tmp_352*tmp_49 + tmp_355*tmp_39 + tmp_358*tmp_48) + tmp_87*(tmp_362 + tmp_365*tmp_85 + tmp_368*tmp_78 + tmp_371*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_430 + tmp_107*tmp_433 + tmp_108*tmp_431 + tmp_428) + tmp_133*(tmp_124*tmp_442 + tmp_130*tmp_445 + tmp_131*tmp_443 + tmp_440) + tmp_64*(tmp_39*tmp_406 + tmp_404 + tmp_407*tmp_49 + tmp_409*tmp_48) + tmp_87*(tmp_416 + tmp_418*tmp_78 + tmp_419*tmp_85 + tmp_421*tmp_84);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_475 + tmp_107*tmp_478 + tmp_108*tmp_476 + tmp_473) + tmp_133*(tmp_124*tmp_486 + tmp_130*tmp_489 + tmp_131*tmp_487 + tmp_484) + tmp_64*(tmp_39*tmp_453 + tmp_451 + tmp_454*tmp_49 + tmp_456*tmp_48) + tmp_87*(tmp_462 + tmp_464*tmp_78 + tmp_465*tmp_85 + tmp_467*tmp_84);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_516 + tmp_107*tmp_519 + tmp_108*tmp_517 + tmp_514) + tmp_133*(tmp_124*tmp_526 + tmp_130*tmp_529 + tmp_131*tmp_527 + tmp_524) + tmp_64*(tmp_39*tmp_496 + tmp_48*tmp_499 + tmp_49*tmp_497 + tmp_494) + tmp_87*(tmp_504 + tmp_506*tmp_78 + tmp_507*tmp_85 + tmp_509*tmp_84);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_541 + tmp_109*tmp_542 + tmp_155 + tmp_540*tmp_99) + tmp_133*(tmp_122*tmp_544 + tmp_128*tmp_545 + tmp_132*tmp_546 + tmp_163) + tmp_64*(tmp_138 + tmp_37*tmp_532 + tmp_46*tmp_533 + tmp_50*tmp_534) + tmp_87*(tmp_147 + tmp_536*tmp_76 + tmp_537*tmp_82 + tmp_538*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_547*tmp_556 + tmp_551*tmp_555 + tmp_552*tmp_556) + tmp_133*(tmp_547*tmp_558 + tmp_551*tmp_557 + tmp_552*tmp_558) + tmp_64*(tmp_547*tmp_550 + tmp_549*tmp_551 + tmp_550*tmp_552) + tmp_87*(tmp_547*tmp_554 + tmp_551*tmp_553 + tmp_552*tmp_554);
      real_t a_1_2 = tmp_570;
      real_t a_1_3 = tmp_578;
      real_t a_1_4 = tmp_110*(-tmp_154*tmp_581 + tmp_260*tmp_542 + tmp_265*tmp_540 + tmp_268*tmp_541) + tmp_133*(-tmp_162*tmp_582 + tmp_277*tmp_546 + tmp_282*tmp_544 + tmp_285*tmp_545) + tmp_64*(-tmp_137*tmp_579 + tmp_226*tmp_534 + tmp_231*tmp_532 + tmp_234*tmp_533) + tmp_87*(-tmp_146*tmp_580 + tmp_243*tmp_538 + tmp_248*tmp_536 + tmp_251*tmp_537);
      real_t a_1_5 = tmp_110*(-tmp_154*tmp_585 + tmp_323*tmp_542 + tmp_327*tmp_540 + tmp_330*tmp_541) + tmp_133*(-tmp_162*tmp_586 + tmp_338*tmp_546 + tmp_342*tmp_544 + tmp_345*tmp_545) + tmp_64*(-tmp_137*tmp_583 + tmp_293*tmp_534 + tmp_297*tmp_532 + tmp_300*tmp_533) + tmp_87*(-tmp_146*tmp_584 + tmp_308*tmp_538 + tmp_312*tmp_536 + tmp_315*tmp_537);
      real_t a_1_6 = tmp_110*(-tmp_154*tmp_589 + tmp_378*tmp_542 + tmp_381*tmp_540 + tmp_384*tmp_541) + tmp_133*(-tmp_162*tmp_590 + tmp_391*tmp_546 + tmp_394*tmp_544 + tmp_397*tmp_545) + tmp_64*(-tmp_137*tmp_587 + tmp_352*tmp_534 + tmp_355*tmp_532 + tmp_358*tmp_533) + tmp_87*(-tmp_146*tmp_588 + tmp_365*tmp_538 + tmp_368*tmp_536 + tmp_371*tmp_537);
      real_t a_1_7 = tmp_110*(tmp_430*tmp_540 + tmp_431*tmp_542 + tmp_433*tmp_541 + tmp_596) + tmp_133*(tmp_442*tmp_544 + tmp_443*tmp_546 + tmp_445*tmp_545 + tmp_598) + tmp_64*(tmp_406*tmp_532 + tmp_407*tmp_534 + tmp_409*tmp_533 + tmp_592) + tmp_87*(tmp_418*tmp_536 + tmp_419*tmp_538 + tmp_421*tmp_537 + tmp_594);
      real_t a_1_8 = tmp_110*(tmp_475*tmp_540 + tmp_476*tmp_542 + tmp_478*tmp_541 + tmp_604) + tmp_133*(tmp_486*tmp_544 + tmp_487*tmp_546 + tmp_489*tmp_545 + tmp_606) + tmp_64*(tmp_453*tmp_532 + tmp_454*tmp_534 + tmp_456*tmp_533 + tmp_600) + tmp_87*(tmp_464*tmp_536 + tmp_465*tmp_538 + tmp_467*tmp_537 + tmp_602);
      real_t a_1_9 = tmp_110*(tmp_516*tmp_540 + tmp_517*tmp_542 + tmp_519*tmp_541 + tmp_612) + tmp_133*(tmp_526*tmp_544 + tmp_527*tmp_546 + tmp_529*tmp_545 + tmp_614) + tmp_64*(tmp_496*tmp_532 + tmp_497*tmp_534 + tmp_499*tmp_533 + tmp_608) + tmp_87*(tmp_506*tmp_536 + tmp_507*tmp_538 + tmp_509*tmp_537 + tmp_610);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_625 + tmp_109*tmp_626 + tmp_183 + tmp_624*tmp_99) + tmp_133*(tmp_122*tmp_628 + tmp_128*tmp_629 + tmp_132*tmp_630 + tmp_189) + tmp_64*(tmp_171 + tmp_37*tmp_616 + tmp_46*tmp_617 + tmp_50*tmp_618) + tmp_87*(tmp_177 + tmp_620*tmp_76 + tmp_621*tmp_82 + tmp_622*tmp_86);
      real_t a_2_1 = tmp_570;
      real_t a_2_2 = tmp_110*(tmp_631*tmp_639 + tmp_634*tmp_638 + tmp_635*tmp_639) + tmp_133*(tmp_631*tmp_641 + tmp_634*tmp_640 + tmp_635*tmp_641) + tmp_64*(tmp_631*tmp_633 + tmp_632*tmp_634 + tmp_633*tmp_635) + tmp_87*(tmp_631*tmp_637 + tmp_634*tmp_636 + tmp_635*tmp_637);
      real_t a_2_3 = tmp_652;
      real_t a_2_4 = tmp_110*(-tmp_182*tmp_581 + tmp_260*tmp_626 + tmp_265*tmp_624 + tmp_268*tmp_625) + tmp_133*(-tmp_188*tmp_582 + tmp_277*tmp_630 + tmp_282*tmp_628 + tmp_285*tmp_629) + tmp_64*(-tmp_170*tmp_579 + tmp_226*tmp_618 + tmp_231*tmp_616 + tmp_234*tmp_617) + tmp_87*(-tmp_176*tmp_580 + tmp_243*tmp_622 + tmp_248*tmp_620 + tmp_251*tmp_621);
      real_t a_2_5 = tmp_110*(-tmp_182*tmp_585 + tmp_323*tmp_626 + tmp_327*tmp_624 + tmp_330*tmp_625) + tmp_133*(-tmp_188*tmp_586 + tmp_338*tmp_630 + tmp_342*tmp_628 + tmp_345*tmp_629) + tmp_64*(-tmp_170*tmp_583 + tmp_293*tmp_618 + tmp_297*tmp_616 + tmp_300*tmp_617) + tmp_87*(-tmp_176*tmp_584 + tmp_308*tmp_622 + tmp_312*tmp_620 + tmp_315*tmp_621);
      real_t a_2_6 = tmp_110*(-tmp_182*tmp_589 + tmp_378*tmp_626 + tmp_381*tmp_624 + tmp_384*tmp_625) + tmp_133*(-tmp_188*tmp_590 + tmp_391*tmp_630 + tmp_394*tmp_628 + tmp_397*tmp_629) + tmp_64*(-tmp_170*tmp_587 + tmp_352*tmp_618 + tmp_355*tmp_616 + tmp_358*tmp_617) + tmp_87*(-tmp_176*tmp_588 + tmp_365*tmp_622 + tmp_368*tmp_620 + tmp_371*tmp_621);
      real_t a_2_7 = tmp_110*(tmp_430*tmp_624 + tmp_431*tmp_626 + tmp_433*tmp_625 + tmp_655) + tmp_133*(tmp_442*tmp_628 + tmp_443*tmp_630 + tmp_445*tmp_629 + tmp_656) + tmp_64*(tmp_406*tmp_616 + tmp_407*tmp_618 + tmp_409*tmp_617 + tmp_653) + tmp_87*(tmp_418*tmp_620 + tmp_419*tmp_622 + tmp_421*tmp_621 + tmp_654);
      real_t a_2_8 = tmp_110*(tmp_475*tmp_624 + tmp_476*tmp_626 + tmp_478*tmp_625 + tmp_659) + tmp_133*(tmp_486*tmp_628 + tmp_487*tmp_630 + tmp_489*tmp_629 + tmp_660) + tmp_64*(tmp_453*tmp_616 + tmp_454*tmp_618 + tmp_456*tmp_617 + tmp_657) + tmp_87*(tmp_464*tmp_620 + tmp_465*tmp_622 + tmp_467*tmp_621 + tmp_658);
      real_t a_2_9 = tmp_110*(tmp_516*tmp_624 + tmp_517*tmp_626 + tmp_519*tmp_625 + tmp_663) + tmp_133*(tmp_526*tmp_628 + tmp_527*tmp_630 + tmp_529*tmp_629 + tmp_664) + tmp_64*(tmp_496*tmp_616 + tmp_497*tmp_618 + tmp_499*tmp_617 + tmp_661) + tmp_87*(tmp_506*tmp_620 + tmp_507*tmp_622 + tmp_509*tmp_621 + tmp_662);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_675 + tmp_109*tmp_676 + tmp_208 + tmp_674*tmp_99) + tmp_133*(tmp_122*tmp_678 + tmp_128*tmp_679 + tmp_132*tmp_680 + tmp_214) + tmp_64*(tmp_196 + tmp_37*tmp_666 + tmp_46*tmp_667 + tmp_50*tmp_668) + tmp_87*(tmp_202 + tmp_670*tmp_76 + tmp_671*tmp_82 + tmp_672*tmp_86);
      real_t a_3_1 = tmp_578;
      real_t a_3_2 = tmp_652;
      real_t a_3_3 = tmp_110*(tmp_681*tmp_689 + tmp_684*tmp_688 + tmp_685*tmp_689) + tmp_133*(tmp_681*tmp_691 + tmp_684*tmp_690 + tmp_685*tmp_691) + tmp_64*(tmp_681*tmp_683 + tmp_682*tmp_684 + tmp_683*tmp_685) + tmp_87*(tmp_681*tmp_687 + tmp_684*tmp_686 + tmp_685*tmp_687);
      real_t a_3_4 = tmp_110*(-tmp_207*tmp_581 + tmp_260*tmp_676 + tmp_265*tmp_674 + tmp_268*tmp_675) + tmp_133*(-tmp_213*tmp_582 + tmp_277*tmp_680 + tmp_282*tmp_678 + tmp_285*tmp_679) + tmp_64*(-tmp_195*tmp_579 + tmp_226*tmp_668 + tmp_231*tmp_666 + tmp_234*tmp_667) + tmp_87*(-tmp_201*tmp_580 + tmp_243*tmp_672 + tmp_248*tmp_670 + tmp_251*tmp_671);
      real_t a_3_5 = tmp_110*(-tmp_207*tmp_585 + tmp_323*tmp_676 + tmp_327*tmp_674 + tmp_330*tmp_675) + tmp_133*(-tmp_213*tmp_586 + tmp_338*tmp_680 + tmp_342*tmp_678 + tmp_345*tmp_679) + tmp_64*(-tmp_195*tmp_583 + tmp_293*tmp_668 + tmp_297*tmp_666 + tmp_300*tmp_667) + tmp_87*(-tmp_201*tmp_584 + tmp_308*tmp_672 + tmp_312*tmp_670 + tmp_315*tmp_671);
      real_t a_3_6 = tmp_110*(-tmp_207*tmp_589 + tmp_378*tmp_676 + tmp_381*tmp_674 + tmp_384*tmp_675) + tmp_133*(-tmp_213*tmp_590 + tmp_391*tmp_680 + tmp_394*tmp_678 + tmp_397*tmp_679) + tmp_64*(-tmp_195*tmp_587 + tmp_352*tmp_668 + tmp_355*tmp_666 + tmp_358*tmp_667) + tmp_87*(-tmp_201*tmp_588 + tmp_365*tmp_672 + tmp_368*tmp_670 + tmp_371*tmp_671);
      real_t a_3_7 = tmp_110*(tmp_430*tmp_674 + tmp_431*tmp_676 + tmp_433*tmp_675 + tmp_694) + tmp_133*(tmp_442*tmp_678 + tmp_443*tmp_680 + tmp_445*tmp_679 + tmp_695) + tmp_64*(tmp_406*tmp_666 + tmp_407*tmp_668 + tmp_409*tmp_667 + tmp_692) + tmp_87*(tmp_418*tmp_670 + tmp_419*tmp_672 + tmp_421*tmp_671 + tmp_693);
      real_t a_3_8 = tmp_110*(tmp_475*tmp_674 + tmp_476*tmp_676 + tmp_478*tmp_675 + tmp_698) + tmp_133*(tmp_486*tmp_678 + tmp_487*tmp_680 + tmp_489*tmp_679 + tmp_699) + tmp_64*(tmp_453*tmp_666 + tmp_454*tmp_668 + tmp_456*tmp_667 + tmp_696) + tmp_87*(tmp_464*tmp_670 + tmp_465*tmp_672 + tmp_467*tmp_671 + tmp_697);
      real_t a_3_9 = tmp_110*(tmp_516*tmp_674 + tmp_517*tmp_676 + tmp_519*tmp_675 + tmp_702) + tmp_133*(tmp_526*tmp_678 + tmp_527*tmp_680 + tmp_529*tmp_679 + tmp_703) + tmp_64*(tmp_496*tmp_666 + tmp_497*tmp_668 + tmp_499*tmp_667 + tmp_700) + tmp_87*(tmp_506*tmp_670 + tmp_507*tmp_672 + tmp_509*tmp_671 + tmp_701);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_733 + tmp_109*tmp_254 + tmp_255 + tmp_729*tmp_99) + tmp_133*(tmp_122*tmp_739 + tmp_128*tmp_743 + tmp_132*tmp_271 + tmp_272) + tmp_64*(tmp_220*tmp_50 + tmp_221 + tmp_37*tmp_709 + tmp_46*tmp_713) + tmp_87*(tmp_237*tmp_86 + tmp_238 + tmp_719*tmp_76 + tmp_723*tmp_82);
      real_t a_4_1 = tmp_110*(tmp_154*tmp_746 + tmp_157*tmp_728 + tmp_159*tmp_732) + tmp_133*(tmp_162*tmp_747 + tmp_165*tmp_738 + tmp_167*tmp_742) + tmp_64*(tmp_137*tmp_744 + tmp_141*tmp_708 + tmp_143*tmp_712) + tmp_87*(tmp_146*tmp_745 + tmp_149*tmp_718 + tmp_151*tmp_722);
      real_t a_4_2 = tmp_110*(tmp_182*tmp_746 + tmp_185*tmp_728 + tmp_186*tmp_732) + tmp_133*(tmp_188*tmp_747 + tmp_191*tmp_738 + tmp_192*tmp_742) + tmp_64*(tmp_170*tmp_744 + tmp_173*tmp_708 + tmp_174*tmp_712) + tmp_87*(tmp_176*tmp_745 + tmp_179*tmp_718 + tmp_180*tmp_722);
      real_t a_4_3 = tmp_110*(tmp_207*tmp_746 + tmp_210*tmp_728 + tmp_211*tmp_732) + tmp_133*(tmp_213*tmp_747 + tmp_216*tmp_738 + tmp_217*tmp_742) + tmp_64*(tmp_195*tmp_744 + tmp_198*tmp_708 + tmp_199*tmp_712) + tmp_87*(tmp_201*tmp_745 + tmp_204*tmp_718 + tmp_205*tmp_722);
      real_t a_4_4 = tmp_110*(tmp_254*tmp_260 + tmp_265*tmp_729 + tmp_268*tmp_733 - 10.666666666666666*((tmp_752 + tmp_753)*(tmp_752 + tmp_753))) + tmp_133*(tmp_271*tmp_277 + tmp_282*tmp_739 + tmp_285*tmp_743 - 10.666666666666666*((tmp_754 + tmp_755)*(tmp_754 + tmp_755))) + tmp_64*(tmp_220*tmp_226 + tmp_231*tmp_709 + tmp_234*tmp_713 - 10.666666666666666*((tmp_748 + tmp_749)*(tmp_748 + tmp_749))) + tmp_87*(tmp_237*tmp_243 + tmp_248*tmp_719 + tmp_251*tmp_723 - 10.666666666666666*((tmp_750 + tmp_751)*(tmp_750 + tmp_751)));
      real_t a_4_5 = tmp_110*(tmp_254*tmp_323 + tmp_327*tmp_729 + tmp_330*tmp_733 + tmp_758) + tmp_133*(tmp_271*tmp_338 + tmp_342*tmp_739 + tmp_345*tmp_743 + tmp_759) + tmp_64*(tmp_220*tmp_293 + tmp_297*tmp_709 + tmp_300*tmp_713 + tmp_756) + tmp_87*(tmp_237*tmp_308 + tmp_312*tmp_719 + tmp_315*tmp_723 + tmp_757);
      real_t a_4_6 = tmp_110*(tmp_254*tmp_378 + tmp_381*tmp_729 + tmp_384*tmp_733 + tmp_762) + tmp_133*(tmp_271*tmp_391 + tmp_394*tmp_739 + tmp_397*tmp_743 + tmp_763) + tmp_64*(tmp_220*tmp_352 + tmp_355*tmp_709 + tmp_358*tmp_713 + tmp_760) + tmp_87*(tmp_237*tmp_365 + tmp_368*tmp_719 + tmp_371*tmp_723 + tmp_761);
      real_t a_4_7 = tmp_110*(tmp_254*tmp_431 + tmp_430*tmp_729 + tmp_433*tmp_733 + tmp_766) + tmp_133*(tmp_271*tmp_443 + tmp_442*tmp_739 + tmp_445*tmp_743 + tmp_767) + tmp_64*(tmp_220*tmp_407 + tmp_406*tmp_709 + tmp_409*tmp_713 + tmp_764) + tmp_87*(tmp_237*tmp_419 + tmp_418*tmp_719 + tmp_421*tmp_723 + tmp_765);
      real_t a_4_8 = tmp_110*(tmp_254*tmp_476 + tmp_475*tmp_729 + tmp_478*tmp_733 + tmp_770) + tmp_133*(tmp_271*tmp_487 + tmp_486*tmp_739 + tmp_489*tmp_743 + tmp_771) + tmp_64*(tmp_220*tmp_454 + tmp_453*tmp_709 + tmp_456*tmp_713 + tmp_768) + tmp_87*(tmp_237*tmp_465 + tmp_464*tmp_719 + tmp_467*tmp_723 + tmp_769);
      real_t a_4_9 = tmp_110*(tmp_254*tmp_517 + tmp_516*tmp_729 + tmp_519*tmp_733 + tmp_774) + tmp_133*(tmp_271*tmp_527 + tmp_526*tmp_739 + tmp_529*tmp_743 + tmp_775) + tmp_64*(tmp_220*tmp_497 + tmp_496*tmp_709 + tmp_499*tmp_713 + tmp_772) + tmp_87*(tmp_237*tmp_507 + tmp_506*tmp_719 + tmp_509*tmp_723 + tmp_773);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_802 + tmp_109*tmp_318 + tmp_319 + tmp_798*tmp_99) + tmp_133*(tmp_122*tmp_807 + tmp_128*tmp_811 + tmp_132*tmp_333 + tmp_334) + tmp_64*(tmp_288*tmp_50 + tmp_289 + tmp_37*tmp_780 + tmp_46*tmp_784) + tmp_87*(tmp_303*tmp_86 + tmp_304 + tmp_76*tmp_789 + tmp_793*tmp_82);
      real_t a_5_1 = tmp_110*(tmp_154*tmp_814 + tmp_157*tmp_797 + tmp_159*tmp_801) + tmp_133*(tmp_162*tmp_815 + tmp_165*tmp_806 + tmp_167*tmp_810) + tmp_64*(tmp_137*tmp_812 + tmp_141*tmp_779 + tmp_143*tmp_783) + tmp_87*(tmp_146*tmp_813 + tmp_149*tmp_788 + tmp_151*tmp_792);
      real_t a_5_2 = tmp_110*(tmp_182*tmp_814 + tmp_185*tmp_797 + tmp_186*tmp_801) + tmp_133*(tmp_188*tmp_815 + tmp_191*tmp_806 + tmp_192*tmp_810) + tmp_64*(tmp_170*tmp_812 + tmp_173*tmp_779 + tmp_174*tmp_783) + tmp_87*(tmp_176*tmp_813 + tmp_179*tmp_788 + tmp_180*tmp_792);
      real_t a_5_3 = tmp_110*(tmp_207*tmp_814 + tmp_210*tmp_797 + tmp_211*tmp_801) + tmp_133*(tmp_213*tmp_815 + tmp_216*tmp_806 + tmp_217*tmp_810) + tmp_64*(tmp_195*tmp_812 + tmp_198*tmp_779 + tmp_199*tmp_783) + tmp_87*(tmp_201*tmp_813 + tmp_204*tmp_788 + tmp_205*tmp_792);
      real_t a_5_4 = tmp_110*(tmp_260*tmp_318 + tmp_265*tmp_798 + tmp_268*tmp_802 + tmp_758) + tmp_133*(tmp_277*tmp_333 + tmp_282*tmp_807 + tmp_285*tmp_811 + tmp_759) + tmp_64*(tmp_226*tmp_288 + tmp_231*tmp_780 + tmp_234*tmp_784 + tmp_756) + tmp_87*(tmp_243*tmp_303 + tmp_248*tmp_789 + tmp_251*tmp_793 + tmp_757);
      real_t a_5_5 = tmp_110*(tmp_318*tmp_323 + tmp_327*tmp_798 + tmp_330*tmp_802 - 10.666666666666666*((tmp_820 + tmp_821)*(tmp_820 + tmp_821))) + tmp_133*(tmp_333*tmp_338 + tmp_342*tmp_807 + tmp_345*tmp_811 - 10.666666666666666*((tmp_822 + tmp_823)*(tmp_822 + tmp_823))) + tmp_64*(tmp_288*tmp_293 + tmp_297*tmp_780 + tmp_300*tmp_784 - 10.666666666666666*((tmp_816 + tmp_817)*(tmp_816 + tmp_817))) + tmp_87*(tmp_303*tmp_308 + tmp_312*tmp_789 + tmp_315*tmp_793 - 10.666666666666666*((tmp_818 + tmp_819)*(tmp_818 + tmp_819)));
      real_t a_5_6 = tmp_110*(tmp_318*tmp_378 + tmp_381*tmp_798 + tmp_384*tmp_802 + tmp_826) + tmp_133*(tmp_333*tmp_391 + tmp_394*tmp_807 + tmp_397*tmp_811 + tmp_827) + tmp_64*(tmp_288*tmp_352 + tmp_355*tmp_780 + tmp_358*tmp_784 + tmp_824) + tmp_87*(tmp_303*tmp_365 + tmp_368*tmp_789 + tmp_371*tmp_793 + tmp_825);
      real_t a_5_7 = tmp_110*(tmp_318*tmp_431 + tmp_430*tmp_798 + tmp_433*tmp_802 + tmp_830) + tmp_133*(tmp_333*tmp_443 + tmp_442*tmp_807 + tmp_445*tmp_811 + tmp_831) + tmp_64*(tmp_288*tmp_407 + tmp_406*tmp_780 + tmp_409*tmp_784 + tmp_828) + tmp_87*(tmp_303*tmp_419 + tmp_418*tmp_789 + tmp_421*tmp_793 + tmp_829);
      real_t a_5_8 = tmp_110*(tmp_318*tmp_476 + tmp_475*tmp_798 + tmp_478*tmp_802 + tmp_834) + tmp_133*(tmp_333*tmp_487 + tmp_486*tmp_807 + tmp_489*tmp_811 + tmp_835) + tmp_64*(tmp_288*tmp_454 + tmp_453*tmp_780 + tmp_456*tmp_784 + tmp_832) + tmp_87*(tmp_303*tmp_465 + tmp_464*tmp_789 + tmp_467*tmp_793 + tmp_833);
      real_t a_5_9 = tmp_110*(tmp_318*tmp_517 + tmp_516*tmp_798 + tmp_519*tmp_802 + tmp_838) + tmp_133*(tmp_333*tmp_527 + tmp_526*tmp_807 + tmp_529*tmp_811 + tmp_839) + tmp_64*(tmp_288*tmp_497 + tmp_496*tmp_780 + tmp_499*tmp_784 + tmp_836) + tmp_87*(tmp_303*tmp_507 + tmp_506*tmp_789 + tmp_509*tmp_793 + tmp_837);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_863 + tmp_109*tmp_374 + tmp_375 + tmp_859*tmp_99) + tmp_133*(tmp_122*tmp_867 + tmp_128*tmp_871 + tmp_132*tmp_387 + tmp_388) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_843 + tmp_46*tmp_847) + tmp_87*(tmp_361*tmp_86 + tmp_362 + tmp_76*tmp_851 + tmp_82*tmp_855);
      real_t a_6_1 = tmp_110*(tmp_154*tmp_874 + tmp_157*tmp_858 + tmp_159*tmp_862) + tmp_133*(tmp_162*tmp_875 + tmp_165*tmp_866 + tmp_167*tmp_870) + tmp_64*(tmp_137*tmp_872 + tmp_141*tmp_842 + tmp_143*tmp_846) + tmp_87*(tmp_146*tmp_873 + tmp_149*tmp_850 + tmp_151*tmp_854);
      real_t a_6_2 = tmp_110*(tmp_182*tmp_874 + tmp_185*tmp_858 + tmp_186*tmp_862) + tmp_133*(tmp_188*tmp_875 + tmp_191*tmp_866 + tmp_192*tmp_870) + tmp_64*(tmp_170*tmp_872 + tmp_173*tmp_842 + tmp_174*tmp_846) + tmp_87*(tmp_176*tmp_873 + tmp_179*tmp_850 + tmp_180*tmp_854);
      real_t a_6_3 = tmp_110*(tmp_207*tmp_874 + tmp_210*tmp_858 + tmp_211*tmp_862) + tmp_133*(tmp_213*tmp_875 + tmp_216*tmp_866 + tmp_217*tmp_870) + tmp_64*(tmp_195*tmp_872 + tmp_198*tmp_842 + tmp_199*tmp_846) + tmp_87*(tmp_201*tmp_873 + tmp_204*tmp_850 + tmp_205*tmp_854);
      real_t a_6_4 = tmp_110*(tmp_260*tmp_374 + tmp_265*tmp_859 + tmp_268*tmp_863 + tmp_762) + tmp_133*(tmp_277*tmp_387 + tmp_282*tmp_867 + tmp_285*tmp_871 + tmp_763) + tmp_64*(tmp_226*tmp_348 + tmp_231*tmp_843 + tmp_234*tmp_847 + tmp_760) + tmp_87*(tmp_243*tmp_361 + tmp_248*tmp_851 + tmp_251*tmp_855 + tmp_761);
      real_t a_6_5 = tmp_110*(tmp_323*tmp_374 + tmp_327*tmp_859 + tmp_330*tmp_863 + tmp_826) + tmp_133*(tmp_338*tmp_387 + tmp_342*tmp_867 + tmp_345*tmp_871 + tmp_827) + tmp_64*(tmp_293*tmp_348 + tmp_297*tmp_843 + tmp_300*tmp_847 + tmp_824) + tmp_87*(tmp_308*tmp_361 + tmp_312*tmp_851 + tmp_315*tmp_855 + tmp_825);
      real_t a_6_6 = tmp_110*(tmp_374*tmp_378 + tmp_381*tmp_859 + tmp_384*tmp_863 - 10.666666666666666*((tmp_880 + tmp_881)*(tmp_880 + tmp_881))) + tmp_133*(tmp_387*tmp_391 + tmp_394*tmp_867 + tmp_397*tmp_871 - 10.666666666666666*((tmp_882 + tmp_883)*(tmp_882 + tmp_883))) + tmp_64*(tmp_348*tmp_352 + tmp_355*tmp_843 + tmp_358*tmp_847 - 10.666666666666666*((tmp_876 + tmp_877)*(tmp_876 + tmp_877))) + tmp_87*(tmp_361*tmp_365 + tmp_368*tmp_851 + tmp_371*tmp_855 - 10.666666666666666*((tmp_878 + tmp_879)*(tmp_878 + tmp_879)));
      real_t a_6_7 = tmp_110*(tmp_374*tmp_431 + tmp_430*tmp_859 + tmp_433*tmp_863 + tmp_886) + tmp_133*(tmp_387*tmp_443 + tmp_442*tmp_867 + tmp_445*tmp_871 + tmp_887) + tmp_64*(tmp_348*tmp_407 + tmp_406*tmp_843 + tmp_409*tmp_847 + tmp_884) + tmp_87*(tmp_361*tmp_419 + tmp_418*tmp_851 + tmp_421*tmp_855 + tmp_885);
      real_t a_6_8 = tmp_110*(tmp_374*tmp_476 + tmp_475*tmp_859 + tmp_478*tmp_863 + tmp_890) + tmp_133*(tmp_387*tmp_487 + tmp_486*tmp_867 + tmp_489*tmp_871 + tmp_891) + tmp_64*(tmp_348*tmp_454 + tmp_453*tmp_843 + tmp_456*tmp_847 + tmp_888) + tmp_87*(tmp_361*tmp_465 + tmp_464*tmp_851 + tmp_467*tmp_855 + tmp_889);
      real_t a_6_9 = tmp_110*(tmp_374*tmp_517 + tmp_516*tmp_859 + tmp_519*tmp_863 + tmp_894) + tmp_133*(tmp_387*tmp_527 + tmp_526*tmp_867 + tmp_529*tmp_871 + tmp_895) + tmp_64*(tmp_348*tmp_497 + tmp_496*tmp_843 + tmp_499*tmp_847 + tmp_892) + tmp_87*(tmp_361*tmp_507 + tmp_506*tmp_851 + tmp_509*tmp_855 + tmp_893);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_909 + tmp_109*tmp_910 + tmp_428 + tmp_907*tmp_99) + tmp_133*(tmp_122*tmp_912 + tmp_128*tmp_914 + tmp_132*tmp_915 + tmp_440) + tmp_64*(tmp_37*tmp_897 + tmp_404 + tmp_46*tmp_899 + tmp_50*tmp_900) + tmp_87*(tmp_416 + tmp_76*tmp_902 + tmp_82*tmp_904 + tmp_86*tmp_905);
      real_t a_7_1 = tmp_110*(tmp_154*tmp_918 + tmp_157*tmp_906 + tmp_159*tmp_908 + tmp_596) + tmp_133*(tmp_162*tmp_919 + tmp_165*tmp_911 + tmp_167*tmp_913 + tmp_598) + tmp_64*(tmp_137*tmp_916 + tmp_141*tmp_896 + tmp_143*tmp_898 + tmp_592) + tmp_87*(tmp_146*tmp_917 + tmp_149*tmp_901 + tmp_151*tmp_903 + tmp_594);
      real_t a_7_2 = tmp_110*(tmp_182*tmp_918 + tmp_185*tmp_906 + tmp_186*tmp_908 + tmp_655) + tmp_133*(tmp_188*tmp_919 + tmp_191*tmp_911 + tmp_192*tmp_913 + tmp_656) + tmp_64*(tmp_170*tmp_916 + tmp_173*tmp_896 + tmp_174*tmp_898 + tmp_653) + tmp_87*(tmp_176*tmp_917 + tmp_179*tmp_901 + tmp_180*tmp_903 + tmp_654);
      real_t a_7_3 = tmp_110*(tmp_207*tmp_918 + tmp_210*tmp_906 + tmp_211*tmp_908 + tmp_694) + tmp_133*(tmp_213*tmp_919 + tmp_216*tmp_911 + tmp_217*tmp_913 + tmp_695) + tmp_64*(tmp_195*tmp_916 + tmp_198*tmp_896 + tmp_199*tmp_898 + tmp_692) + tmp_87*(tmp_201*tmp_917 + tmp_204*tmp_901 + tmp_205*tmp_903 + tmp_693);
      real_t a_7_4 = tmp_110*(tmp_260*tmp_910 + tmp_265*tmp_907 + tmp_268*tmp_909 + tmp_766) + tmp_133*(tmp_277*tmp_915 + tmp_282*tmp_912 + tmp_285*tmp_914 + tmp_767) + tmp_64*(tmp_226*tmp_900 + tmp_231*tmp_897 + tmp_234*tmp_899 + tmp_764) + tmp_87*(tmp_243*tmp_905 + tmp_248*tmp_902 + tmp_251*tmp_904 + tmp_765);
      real_t a_7_5 = tmp_110*(tmp_323*tmp_910 + tmp_327*tmp_907 + tmp_330*tmp_909 + tmp_830) + tmp_133*(tmp_338*tmp_915 + tmp_342*tmp_912 + tmp_345*tmp_914 + tmp_831) + tmp_64*(tmp_293*tmp_900 + tmp_297*tmp_897 + tmp_300*tmp_899 + tmp_828) + tmp_87*(tmp_308*tmp_905 + tmp_312*tmp_902 + tmp_315*tmp_904 + tmp_829);
      real_t a_7_6 = tmp_110*(tmp_378*tmp_910 + tmp_381*tmp_907 + tmp_384*tmp_909 + tmp_886) + tmp_133*(tmp_391*tmp_915 + tmp_394*tmp_912 + tmp_397*tmp_914 + tmp_887) + tmp_64*(tmp_352*tmp_900 + tmp_355*tmp_897 + tmp_358*tmp_899 + tmp_884) + tmp_87*(tmp_365*tmp_905 + tmp_368*tmp_902 + tmp_371*tmp_904 + tmp_885);
      real_t a_7_7 = tmp_110*(tmp_430*tmp_907 + tmp_431*tmp_910 + tmp_433*tmp_909 - 10.666666666666666*((0.25*tmp_425 - tmp_753 - tmp_821)*(0.25*tmp_425 - tmp_753 - tmp_821))) + tmp_133*(tmp_442*tmp_912 + tmp_443*tmp_915 + tmp_445*tmp_914 - 10.666666666666666*((0.25*tmp_437 - tmp_755 - tmp_823)*(0.25*tmp_437 - tmp_755 - tmp_823))) + tmp_64*(tmp_406*tmp_897 + tmp_407*tmp_900 + tmp_409*tmp_899 - 10.666666666666666*((0.25*tmp_401 - tmp_749 - tmp_817)*(0.25*tmp_401 - tmp_749 - tmp_817))) + tmp_87*(tmp_418*tmp_902 + tmp_419*tmp_905 + tmp_421*tmp_904 - 10.666666666666666*((0.25*tmp_413 - tmp_751 - tmp_819)*(0.25*tmp_413 - tmp_751 - tmp_819)));
      real_t a_7_8 = tmp_110*(tmp_475*tmp_907 + tmp_476*tmp_910 + tmp_478*tmp_909 + tmp_922) + tmp_133*(tmp_486*tmp_912 + tmp_487*tmp_915 + tmp_489*tmp_914 + tmp_923) + tmp_64*(tmp_453*tmp_897 + tmp_454*tmp_900 + tmp_456*tmp_899 + tmp_920) + tmp_87*(tmp_464*tmp_902 + tmp_465*tmp_905 + tmp_467*tmp_904 + tmp_921);
      real_t a_7_9 = tmp_110*(tmp_516*tmp_907 + tmp_517*tmp_910 + tmp_519*tmp_909 + tmp_926) + tmp_133*(tmp_526*tmp_912 + tmp_527*tmp_915 + tmp_529*tmp_914 + tmp_927) + tmp_64*(tmp_496*tmp_897 + tmp_497*tmp_900 + tmp_499*tmp_899 + tmp_924) + tmp_87*(tmp_506*tmp_902 + tmp_507*tmp_905 + tmp_509*tmp_904 + tmp_925);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_941 + tmp_109*tmp_942 + tmp_473 + tmp_939*tmp_99) + tmp_133*(tmp_122*tmp_944 + tmp_128*tmp_946 + tmp_132*tmp_947 + tmp_484) + tmp_64*(tmp_37*tmp_929 + tmp_451 + tmp_46*tmp_931 + tmp_50*tmp_932) + tmp_87*(tmp_462 + tmp_76*tmp_934 + tmp_82*tmp_936 + tmp_86*tmp_937);
      real_t a_8_1 = tmp_110*(tmp_154*tmp_950 + tmp_157*tmp_938 + tmp_159*tmp_940 + tmp_604) + tmp_133*(tmp_162*tmp_951 + tmp_165*tmp_943 + tmp_167*tmp_945 + tmp_606) + tmp_64*(tmp_137*tmp_948 + tmp_141*tmp_928 + tmp_143*tmp_930 + tmp_600) + tmp_87*(tmp_146*tmp_949 + tmp_149*tmp_933 + tmp_151*tmp_935 + tmp_602);
      real_t a_8_2 = tmp_110*(tmp_182*tmp_950 + tmp_185*tmp_938 + tmp_186*tmp_940 + tmp_659) + tmp_133*(tmp_188*tmp_951 + tmp_191*tmp_943 + tmp_192*tmp_945 + tmp_660) + tmp_64*(tmp_170*tmp_948 + tmp_173*tmp_928 + tmp_174*tmp_930 + tmp_657) + tmp_87*(tmp_176*tmp_949 + tmp_179*tmp_933 + tmp_180*tmp_935 + tmp_658);
      real_t a_8_3 = tmp_110*(tmp_207*tmp_950 + tmp_210*tmp_938 + tmp_211*tmp_940 + tmp_698) + tmp_133*(tmp_213*tmp_951 + tmp_216*tmp_943 + tmp_217*tmp_945 + tmp_699) + tmp_64*(tmp_195*tmp_948 + tmp_198*tmp_928 + tmp_199*tmp_930 + tmp_696) + tmp_87*(tmp_201*tmp_949 + tmp_204*tmp_933 + tmp_205*tmp_935 + tmp_697);
      real_t a_8_4 = tmp_110*(tmp_260*tmp_942 + tmp_265*tmp_939 + tmp_268*tmp_941 + tmp_770) + tmp_133*(tmp_277*tmp_947 + tmp_282*tmp_944 + tmp_285*tmp_946 + tmp_771) + tmp_64*(tmp_226*tmp_932 + tmp_231*tmp_929 + tmp_234*tmp_931 + tmp_768) + tmp_87*(tmp_243*tmp_937 + tmp_248*tmp_934 + tmp_251*tmp_936 + tmp_769);
      real_t a_8_5 = tmp_110*(tmp_323*tmp_942 + tmp_327*tmp_939 + tmp_330*tmp_941 + tmp_834) + tmp_133*(tmp_338*tmp_947 + tmp_342*tmp_944 + tmp_345*tmp_946 + tmp_835) + tmp_64*(tmp_293*tmp_932 + tmp_297*tmp_929 + tmp_300*tmp_931 + tmp_832) + tmp_87*(tmp_308*tmp_937 + tmp_312*tmp_934 + tmp_315*tmp_936 + tmp_833);
      real_t a_8_6 = tmp_110*(tmp_378*tmp_942 + tmp_381*tmp_939 + tmp_384*tmp_941 + tmp_890) + tmp_133*(tmp_391*tmp_947 + tmp_394*tmp_944 + tmp_397*tmp_946 + tmp_891) + tmp_64*(tmp_352*tmp_932 + tmp_355*tmp_929 + tmp_358*tmp_931 + tmp_888) + tmp_87*(tmp_365*tmp_937 + tmp_368*tmp_934 + tmp_371*tmp_936 + tmp_889);
      real_t a_8_7 = tmp_110*(tmp_430*tmp_939 + tmp_431*tmp_942 + tmp_433*tmp_941 + tmp_922) + tmp_133*(tmp_442*tmp_944 + tmp_443*tmp_947 + tmp_445*tmp_946 + tmp_923) + tmp_64*(tmp_406*tmp_929 + tmp_407*tmp_932 + tmp_409*tmp_931 + tmp_920) + tmp_87*(tmp_418*tmp_934 + tmp_419*tmp_937 + tmp_421*tmp_936 + tmp_921);
      real_t a_8_8 = tmp_110*(tmp_475*tmp_939 + tmp_476*tmp_942 + tmp_478*tmp_941 - 10.666666666666666*((0.25*tmp_470 - tmp_752 - tmp_881)*(0.25*tmp_470 - tmp_752 - tmp_881))) + tmp_133*(tmp_486*tmp_944 + tmp_487*tmp_947 + tmp_489*tmp_946 - 10.666666666666666*((0.25*tmp_481 - tmp_754 - tmp_883)*(0.25*tmp_481 - tmp_754 - tmp_883))) + tmp_64*(tmp_453*tmp_929 + tmp_454*tmp_932 + tmp_456*tmp_931 - 10.666666666666666*((0.25*tmp_448 - tmp_748 - tmp_877)*(0.25*tmp_448 - tmp_748 - tmp_877))) + tmp_87*(tmp_464*tmp_934 + tmp_465*tmp_937 + tmp_467*tmp_936 - 10.666666666666666*((0.25*tmp_459 - tmp_750 - tmp_879)*(0.25*tmp_459 - tmp_750 - tmp_879)));
      real_t a_8_9 = tmp_110*(tmp_516*tmp_939 + tmp_517*tmp_942 + tmp_519*tmp_941 + tmp_954) + tmp_133*(tmp_526*tmp_944 + tmp_527*tmp_947 + tmp_529*tmp_946 + tmp_955) + tmp_64*(tmp_496*tmp_929 + tmp_497*tmp_932 + tmp_499*tmp_931 + tmp_952) + tmp_87*(tmp_506*tmp_934 + tmp_507*tmp_937 + tmp_509*tmp_936 + tmp_953);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_969 + tmp_109*tmp_970 + tmp_514 + tmp_967*tmp_99) + tmp_133*(tmp_122*tmp_972 + tmp_128*tmp_974 + tmp_132*tmp_975 + tmp_524) + tmp_64*(tmp_37*tmp_957 + tmp_46*tmp_959 + tmp_494 + tmp_50*tmp_960) + tmp_87*(tmp_504 + tmp_76*tmp_962 + tmp_82*tmp_964 + tmp_86*tmp_965);
      real_t a_9_1 = tmp_110*(tmp_154*tmp_978 + tmp_157*tmp_966 + tmp_159*tmp_968 + tmp_612) + tmp_133*(tmp_162*tmp_979 + tmp_165*tmp_971 + tmp_167*tmp_973 + tmp_614) + tmp_64*(tmp_137*tmp_976 + tmp_141*tmp_956 + tmp_143*tmp_958 + tmp_608) + tmp_87*(tmp_146*tmp_977 + tmp_149*tmp_961 + tmp_151*tmp_963 + tmp_610);
      real_t a_9_2 = tmp_110*(tmp_182*tmp_978 + tmp_185*tmp_966 + tmp_186*tmp_968 + tmp_663) + tmp_133*(tmp_188*tmp_979 + tmp_191*tmp_971 + tmp_192*tmp_973 + tmp_664) + tmp_64*(tmp_170*tmp_976 + tmp_173*tmp_956 + tmp_174*tmp_958 + tmp_661) + tmp_87*(tmp_176*tmp_977 + tmp_179*tmp_961 + tmp_180*tmp_963 + tmp_662);
      real_t a_9_3 = tmp_110*(tmp_207*tmp_978 + tmp_210*tmp_966 + tmp_211*tmp_968 + tmp_702) + tmp_133*(tmp_213*tmp_979 + tmp_216*tmp_971 + tmp_217*tmp_973 + tmp_703) + tmp_64*(tmp_195*tmp_976 + tmp_198*tmp_956 + tmp_199*tmp_958 + tmp_700) + tmp_87*(tmp_201*tmp_977 + tmp_204*tmp_961 + tmp_205*tmp_963 + tmp_701);
      real_t a_9_4 = tmp_110*(tmp_260*tmp_970 + tmp_265*tmp_967 + tmp_268*tmp_969 + tmp_774) + tmp_133*(tmp_277*tmp_975 + tmp_282*tmp_972 + tmp_285*tmp_974 + tmp_775) + tmp_64*(tmp_226*tmp_960 + tmp_231*tmp_957 + tmp_234*tmp_959 + tmp_772) + tmp_87*(tmp_243*tmp_965 + tmp_248*tmp_962 + tmp_251*tmp_964 + tmp_773);
      real_t a_9_5 = tmp_110*(tmp_323*tmp_970 + tmp_327*tmp_967 + tmp_330*tmp_969 + tmp_838) + tmp_133*(tmp_338*tmp_975 + tmp_342*tmp_972 + tmp_345*tmp_974 + tmp_839) + tmp_64*(tmp_293*tmp_960 + tmp_297*tmp_957 + tmp_300*tmp_959 + tmp_836) + tmp_87*(tmp_308*tmp_965 + tmp_312*tmp_962 + tmp_315*tmp_964 + tmp_837);
      real_t a_9_6 = tmp_110*(tmp_378*tmp_970 + tmp_381*tmp_967 + tmp_384*tmp_969 + tmp_894) + tmp_133*(tmp_391*tmp_975 + tmp_394*tmp_972 + tmp_397*tmp_974 + tmp_895) + tmp_64*(tmp_352*tmp_960 + tmp_355*tmp_957 + tmp_358*tmp_959 + tmp_892) + tmp_87*(tmp_365*tmp_965 + tmp_368*tmp_962 + tmp_371*tmp_964 + tmp_893);
      real_t a_9_7 = tmp_110*(tmp_430*tmp_967 + tmp_431*tmp_970 + tmp_433*tmp_969 + tmp_926) + tmp_133*(tmp_442*tmp_972 + tmp_443*tmp_975 + tmp_445*tmp_974 + tmp_927) + tmp_64*(tmp_406*tmp_957 + tmp_407*tmp_960 + tmp_409*tmp_959 + tmp_924) + tmp_87*(tmp_418*tmp_962 + tmp_419*tmp_965 + tmp_421*tmp_964 + tmp_925);
      real_t a_9_8 = tmp_110*(tmp_475*tmp_967 + tmp_476*tmp_970 + tmp_478*tmp_969 + tmp_954) + tmp_133*(tmp_486*tmp_972 + tmp_487*tmp_975 + tmp_489*tmp_974 + tmp_955) + tmp_64*(tmp_453*tmp_957 + tmp_454*tmp_960 + tmp_456*tmp_959 + tmp_952) + tmp_87*(tmp_464*tmp_962 + tmp_465*tmp_965 + tmp_467*tmp_964 + tmp_953);
      real_t a_9_9 = tmp_110*(tmp_516*tmp_967 + tmp_517*tmp_970 + tmp_519*tmp_969 - 10.666666666666666*((0.25*tmp_511 - tmp_820 - tmp_880)*(0.25*tmp_511 - tmp_820 - tmp_880))) + tmp_133*(tmp_526*tmp_972 + tmp_527*tmp_975 + tmp_529*tmp_974 - 10.666666666666666*((0.25*tmp_521 - tmp_822 - tmp_882)*(0.25*tmp_521 - tmp_822 - tmp_882))) + tmp_64*(tmp_496*tmp_957 + tmp_497*tmp_960 + tmp_499*tmp_959 - 10.666666666666666*((0.25*tmp_491 - tmp_816 - tmp_876)*(0.25*tmp_491 - tmp_816 - tmp_876))) + tmp_87*(tmp_506*tmp_962 + tmp_507*tmp_965 + tmp_509*tmp_964 - 10.666666666666666*((0.25*tmp_501 - tmp_818 - tmp_878)*(0.25*tmp_501 - tmp_818 - tmp_878)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_1_0 + tmp_0;
      real_t tmp_6 = p_affine_2_2 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_1;
      real_t tmp_10 = p_affine_2_1 + tmp_9;
      real_t tmp_11 = p_affine_3_2 + tmp_2;
      real_t tmp_12 = tmp_11*tmp_5;
      real_t tmp_13 = p_affine_3_1 + tmp_9;
      real_t tmp_14 = p_affine_1_1 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_18 + tmp_13*tmp_4 - tmp_13*tmp_7 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_12 - tmp_18;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_16 - tmp_17;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_10*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = -tmp_13*tmp_5 + tmp_14*tmp_15;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = tmp_1*tmp_13 - tmp_10*tmp_15;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_10*tmp_3 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = -tmp_11*tmp_14 + tmp_13*tmp_3;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = tmp_10*tmp_11 - tmp_13*tmp_6;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = 0.041666666666666657*tmp_59;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.041666666666666657*tmp_59;
      real_t tmp_81 = 2.3416407864998732;
      real_t tmp_82 = 0.55278640450004235;
      real_t tmp_83 = 0.55278640450004235;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.041666666666666657*tmp_59;
      real_t tmp_101 = 0.55278640450004235;
      real_t tmp_102 = 0.55278640450004235;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.041666666666666657*tmp_59;
      real_t tmp_121 = (2.0/3.0)*tmp_29;
      real_t tmp_122 = tmp_20 - 1.0;
      real_t tmp_123 = tmp_19*tmp_27;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = 2.0*tmp_19;
      real_t tmp_126 = tmp_122*tmp_125;
      real_t tmp_127 = 2.0*tmp_46;
      real_t tmp_128 = (2.0/3.0)*tmp_68;
      real_t tmp_129 = tmp_61 - 1.0;
      real_t tmp_130 = tmp_123*tmp_129;
      real_t tmp_131 = tmp_125*tmp_129;
      real_t tmp_132 = 2.0*tmp_79;
      real_t tmp_133 = (2.0/3.0)*tmp_88;
      real_t tmp_134 = tmp_81 - 1.0;
      real_t tmp_135 = tmp_123*tmp_134;
      real_t tmp_136 = tmp_125*tmp_134;
      real_t tmp_137 = 2.0*tmp_99;
      real_t tmp_138 = (2.0/3.0)*tmp_108;
      real_t tmp_139 = tmp_101 - 1.0;
      real_t tmp_140 = tmp_123*tmp_139;
      real_t tmp_141 = tmp_125*tmp_139;
      real_t tmp_142 = 2.0*tmp_119;
      real_t tmp_143 = tmp_21 - 1.0;
      real_t tmp_144 = tmp_19*tmp_25;
      real_t tmp_145 = tmp_143*tmp_144;
      real_t tmp_146 = tmp_125*tmp_143;
      real_t tmp_147 = tmp_62 - 1.0;
      real_t tmp_148 = tmp_144*tmp_147;
      real_t tmp_149 = tmp_125*tmp_147;
      real_t tmp_150 = tmp_82 - 1.0;
      real_t tmp_151 = tmp_144*tmp_150;
      real_t tmp_152 = tmp_125*tmp_150;
      real_t tmp_153 = tmp_102 - 1.0;
      real_t tmp_154 = tmp_144*tmp_153;
      real_t tmp_155 = tmp_125*tmp_153;
      real_t tmp_156 = tmp_22 - 1.0;
      real_t tmp_157 = tmp_19*tmp_8;
      real_t tmp_158 = tmp_156*tmp_157;
      real_t tmp_159 = tmp_125*tmp_156;
      real_t tmp_160 = tmp_63 - 1.0;
      real_t tmp_161 = tmp_157*tmp_160;
      real_t tmp_162 = tmp_125*tmp_160;
      real_t tmp_163 = tmp_83 - 1.0;
      real_t tmp_164 = tmp_157*tmp_163;
      real_t tmp_165 = tmp_125*tmp_163;
      real_t tmp_166 = tmp_103 - 1.0;
      real_t tmp_167 = tmp_157*tmp_166;
      real_t tmp_168 = tmp_125*tmp_166;
      real_t tmp_169 = tmp_157*tmp_21;
      real_t tmp_170 = tmp_144*tmp_22;
      real_t tmp_171 = 1.1055728090000847;
      real_t tmp_172 = tmp_157*tmp_171;
      real_t tmp_173 = 4.6832815729997463;
      real_t tmp_174 = tmp_144*tmp_173;
      real_t tmp_175 = tmp_19*tmp_21;
      real_t tmp_176 = tmp_175*tmp_30;
      real_t tmp_177 = tmp_19*tmp_22;
      real_t tmp_178 = tmp_177*tmp_32;
      real_t tmp_179 = tmp_175*tmp_38;
      real_t tmp_180 = tmp_177*tmp_40;
      real_t tmp_181 = tmp_157*tmp_62;
      real_t tmp_182 = tmp_144*tmp_63;
      real_t tmp_183 = 4.6832815729997463;
      real_t tmp_184 = tmp_157*tmp_183;
      real_t tmp_185 = 1.1055728090000847;
      real_t tmp_186 = tmp_144*tmp_185;
      real_t tmp_187 = tmp_19*tmp_62;
      real_t tmp_188 = tmp_187*tmp_30;
      real_t tmp_189 = tmp_19*tmp_63;
      real_t tmp_190 = tmp_189*tmp_32;
      real_t tmp_191 = tmp_187*tmp_38;
      real_t tmp_192 = tmp_189*tmp_40;
      real_t tmp_193 = tmp_157*tmp_82;
      real_t tmp_194 = tmp_144*tmp_83;
      real_t tmp_195 = 1.1055728090000847;
      real_t tmp_196 = tmp_157*tmp_195;
      real_t tmp_197 = 1.1055728090000847;
      real_t tmp_198 = tmp_144*tmp_197;
      real_t tmp_199 = tmp_19*tmp_82;
      real_t tmp_200 = tmp_199*tmp_30;
      real_t tmp_201 = tmp_19*tmp_83;
      real_t tmp_202 = tmp_201*tmp_32;
      real_t tmp_203 = tmp_199*tmp_38;
      real_t tmp_204 = tmp_201*tmp_40;
      real_t tmp_205 = tmp_102*tmp_157;
      real_t tmp_206 = tmp_103*tmp_144;
      real_t tmp_207 = 1.1055728090000847;
      real_t tmp_208 = tmp_157*tmp_207;
      real_t tmp_209 = 1.1055728090000847;
      real_t tmp_210 = tmp_144*tmp_209;
      real_t tmp_211 = tmp_102*tmp_19;
      real_t tmp_212 = tmp_211*tmp_30;
      real_t tmp_213 = tmp_103*tmp_19;
      real_t tmp_214 = tmp_213*tmp_32;
      real_t tmp_215 = tmp_211*tmp_38;
      real_t tmp_216 = tmp_213*tmp_40;
      real_t tmp_217 = tmp_157*tmp_20;
      real_t tmp_218 = tmp_177*tmp_27;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_157*tmp_219;
      real_t tmp_221 = tmp_123*tmp_173;
      real_t tmp_222 = tmp_19*tmp_20;
      real_t tmp_223 = tmp_222*tmp_30;
      real_t tmp_224 = tmp_177*tmp_34;
      real_t tmp_225 = tmp_222*tmp_38;
      real_t tmp_226 = tmp_177*tmp_42;
      real_t tmp_227 = tmp_157*tmp_61;
      real_t tmp_228 = tmp_189*tmp_27;
      real_t tmp_229 = 1.1055728090000847;
      real_t tmp_230 = tmp_157*tmp_229;
      real_t tmp_231 = tmp_123*tmp_185;
      real_t tmp_232 = tmp_19*tmp_61;
      real_t tmp_233 = tmp_232*tmp_30;
      real_t tmp_234 = tmp_189*tmp_34;
      real_t tmp_235 = tmp_232*tmp_38;
      real_t tmp_236 = tmp_189*tmp_42;
      real_t tmp_237 = tmp_157*tmp_81;
      real_t tmp_238 = tmp_201*tmp_27;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_157*tmp_239;
      real_t tmp_241 = tmp_123*tmp_197;
      real_t tmp_242 = tmp_19*tmp_81;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_201*tmp_34;
      real_t tmp_245 = tmp_242*tmp_38;
      real_t tmp_246 = tmp_201*tmp_42;
      real_t tmp_247 = tmp_101*tmp_157;
      real_t tmp_248 = tmp_213*tmp_27;
      real_t tmp_249 = 1.1055728090000847;
      real_t tmp_250 = tmp_157*tmp_249;
      real_t tmp_251 = tmp_123*tmp_209;
      real_t tmp_252 = tmp_101*tmp_19;
      real_t tmp_253 = tmp_252*tmp_30;
      real_t tmp_254 = tmp_213*tmp_34;
      real_t tmp_255 = tmp_252*tmp_38;
      real_t tmp_256 = tmp_213*tmp_42;
      real_t tmp_257 = tmp_144*tmp_20;
      real_t tmp_258 = tmp_175*tmp_27;
      real_t tmp_259 = tmp_144*tmp_219;
      real_t tmp_260 = tmp_123*tmp_171;
      real_t tmp_261 = tmp_222*tmp_32;
      real_t tmp_262 = tmp_175*tmp_34;
      real_t tmp_263 = tmp_222*tmp_40;
      real_t tmp_264 = tmp_175*tmp_42;
      real_t tmp_265 = tmp_144*tmp_61;
      real_t tmp_266 = tmp_187*tmp_27;
      real_t tmp_267 = tmp_144*tmp_229;
      real_t tmp_268 = tmp_123*tmp_183;
      real_t tmp_269 = tmp_232*tmp_32;
      real_t tmp_270 = tmp_187*tmp_34;
      real_t tmp_271 = tmp_232*tmp_40;
      real_t tmp_272 = tmp_187*tmp_42;
      real_t tmp_273 = tmp_144*tmp_81;
      real_t tmp_274 = tmp_199*tmp_27;
      real_t tmp_275 = tmp_144*tmp_239;
      real_t tmp_276 = tmp_123*tmp_195;
      real_t tmp_277 = tmp_242*tmp_32;
      real_t tmp_278 = tmp_199*tmp_34;
      real_t tmp_279 = tmp_242*tmp_40;
      real_t tmp_280 = tmp_199*tmp_42;
      real_t tmp_281 = tmp_101*tmp_144;
      real_t tmp_282 = tmp_211*tmp_27;
      real_t tmp_283 = tmp_144*tmp_249;
      real_t tmp_284 = tmp_123*tmp_207;
      real_t tmp_285 = tmp_252*tmp_32;
      real_t tmp_286 = tmp_211*tmp_34;
      real_t tmp_287 = tmp_252*tmp_40;
      real_t tmp_288 = tmp_211*tmp_42;
      real_t tmp_289 = -tmp_21;
      real_t tmp_290 = 4.0 - tmp_20;
      real_t tmp_291 = tmp_19*(-tmp_173 + tmp_289 + tmp_290);
      real_t tmp_292 = tmp_291*tmp_8;
      real_t tmp_293 = -tmp_62;
      real_t tmp_294 = 4.0 - tmp_61;
      real_t tmp_295 = tmp_19*(-tmp_185 + tmp_293 + tmp_294);
      real_t tmp_296 = tmp_295*tmp_8;
      real_t tmp_297 = -tmp_82;
      real_t tmp_298 = 4.0 - tmp_81;
      real_t tmp_299 = tmp_19*(-tmp_197 + tmp_297 + tmp_298);
      real_t tmp_300 = tmp_299*tmp_8;
      real_t tmp_301 = -tmp_102;
      real_t tmp_302 = 4.0 - tmp_101;
      real_t tmp_303 = tmp_19*(-tmp_209 + tmp_301 + tmp_302);
      real_t tmp_304 = tmp_303*tmp_8;
      real_t tmp_305 = -tmp_22;
      real_t tmp_306 = tmp_19*(-tmp_171 + tmp_290 + tmp_305);
      real_t tmp_307 = tmp_25*tmp_306;
      real_t tmp_308 = -tmp_63;
      real_t tmp_309 = tmp_19*(-tmp_183 + tmp_294 + tmp_308);
      real_t tmp_310 = tmp_25*tmp_309;
      real_t tmp_311 = -tmp_83;
      real_t tmp_312 = tmp_19*(-tmp_195 + tmp_298 + tmp_311);
      real_t tmp_313 = tmp_25*tmp_312;
      real_t tmp_314 = -tmp_103;
      real_t tmp_315 = tmp_19*(-tmp_207 + tmp_302 + tmp_314);
      real_t tmp_316 = tmp_25*tmp_315;
      real_t tmp_317 = tmp_19*(-tmp_219 + tmp_289 + tmp_305 + 4.0);
      real_t tmp_318 = tmp_27*tmp_317;
      real_t tmp_319 = tmp_19*(-tmp_229 + tmp_293 + tmp_308 + 4.0);
      real_t tmp_320 = tmp_27*tmp_319;
      real_t tmp_321 = tmp_19*(-tmp_239 + tmp_297 + tmp_311 + 4.0);
      real_t tmp_322 = tmp_27*tmp_321;
      real_t tmp_323 = tmp_19*(-tmp_249 + tmp_301 + tmp_314 + 4.0);
      real_t tmp_324 = tmp_27*tmp_323;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_133*tmp_135 + tmp_135*tmp_137 + tmp_136*tmp_34*tmp_92 + tmp_136*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_141*tmp_34 + tmp_117*tmp_141*tmp_42 - tmp_138*tmp_140 + tmp_140*tmp_142) + tmp_60*(-tmp_121*tmp_124 + tmp_124*tmp_127 + tmp_126*tmp_34*tmp_36 + tmp_126*tmp_42*tmp_44) + tmp_80*(-tmp_128*tmp_130 + tmp_130*tmp_132 + tmp_131*tmp_34*tmp_72 + tmp_131*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_133*tmp_151 + tmp_137*tmp_151 + tmp_152*tmp_32*tmp_92 + tmp_152*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_155*tmp_32 + tmp_117*tmp_155*tmp_40 - tmp_138*tmp_154 + tmp_142*tmp_154) + tmp_60*(-tmp_121*tmp_145 + tmp_127*tmp_145 + tmp_146*tmp_32*tmp_36 + tmp_146*tmp_40*tmp_44) + tmp_80*(-tmp_128*tmp_148 + tmp_132*tmp_148 + tmp_149*tmp_32*tmp_72 + tmp_149*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_133*tmp_164 + tmp_137*tmp_164 + tmp_165*tmp_30*tmp_92 + tmp_165*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_168*tmp_30 + tmp_117*tmp_168*tmp_38 - tmp_138*tmp_167 + tmp_142*tmp_167) + tmp_60*(-tmp_121*tmp_158 + tmp_127*tmp_158 + tmp_159*tmp_30*tmp_36 + tmp_159*tmp_38*tmp_44) + tmp_80*(-tmp_128*tmp_161 + tmp_132*tmp_161 + tmp_162*tmp_30*tmp_72 + tmp_162*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_133*(tmp_193 + tmp_194) + tmp_93*(tmp_200 + tmp_202) + tmp_98*(tmp_203 + tmp_204) + tmp_99*(tmp_196 + tmp_198)) + tmp_120*(tmp_113*(tmp_212 + tmp_214) + tmp_118*(tmp_215 + tmp_216) + tmp_119*(tmp_208 + tmp_210) - tmp_138*(tmp_205 + tmp_206)) + tmp_60*(-tmp_121*(tmp_169 + tmp_170) + tmp_37*(tmp_176 + tmp_178) + tmp_45*(tmp_179 + tmp_180) + tmp_46*(tmp_172 + tmp_174)) + tmp_80*(-tmp_128*(tmp_181 + tmp_182) + tmp_73*(tmp_188 + tmp_190) + tmp_78*(tmp_191 + tmp_192) + tmp_79*(tmp_184 + tmp_186));
      real_t a_0_5 = tmp_100*(-tmp_133*(tmp_237 + tmp_238) + tmp_93*(tmp_243 + tmp_244) + tmp_98*(tmp_245 + tmp_246) + tmp_99*(tmp_240 + tmp_241)) + tmp_120*(tmp_113*(tmp_253 + tmp_254) + tmp_118*(tmp_255 + tmp_256) + tmp_119*(tmp_250 + tmp_251) - tmp_138*(tmp_247 + tmp_248)) + tmp_60*(-tmp_121*(tmp_217 + tmp_218) + tmp_37*(tmp_223 + tmp_224) + tmp_45*(tmp_225 + tmp_226) + tmp_46*(tmp_220 + tmp_221)) + tmp_80*(-tmp_128*(tmp_227 + tmp_228) + tmp_73*(tmp_233 + tmp_234) + tmp_78*(tmp_235 + tmp_236) + tmp_79*(tmp_230 + tmp_231));
      real_t a_0_6 = tmp_100*(-tmp_133*(tmp_273 + tmp_274) + tmp_93*(tmp_277 + tmp_278) + tmp_98*(tmp_279 + tmp_280) + tmp_99*(tmp_275 + tmp_276)) + tmp_120*(tmp_113*(tmp_285 + tmp_286) + tmp_118*(tmp_287 + tmp_288) + tmp_119*(tmp_283 + tmp_284) - tmp_138*(tmp_281 + tmp_282)) + tmp_60*(-tmp_121*(tmp_257 + tmp_258) + tmp_37*(tmp_261 + tmp_262) + tmp_45*(tmp_263 + tmp_264) + tmp_46*(tmp_259 + tmp_260)) + tmp_80*(-tmp_128*(tmp_265 + tmp_266) + tmp_73*(tmp_269 + tmp_270) + tmp_78*(tmp_271 + tmp_272) + tmp_79*(tmp_267 + tmp_268));
      real_t a_0_7 = tmp_100*(-tmp_133*(-tmp_194 - tmp_238 + tmp_300) + tmp_93*(-tmp_202 - tmp_244 + tmp_299*tmp_30) + tmp_98*(-tmp_204 - tmp_246 + tmp_299*tmp_38) + tmp_99*(-tmp_198 - tmp_241 + 2.0*tmp_300)) + tmp_120*(tmp_113*(-tmp_214 - tmp_254 + tmp_30*tmp_303) + tmp_118*(-tmp_216 - tmp_256 + tmp_303*tmp_38) + tmp_119*(-tmp_210 - tmp_251 + 2.0*tmp_304) - tmp_138*(-tmp_206 - tmp_248 + tmp_304)) + tmp_60*(-tmp_121*(-tmp_170 - tmp_218 + tmp_292) + tmp_37*(-tmp_178 - tmp_224 + tmp_291*tmp_30) + tmp_45*(-tmp_180 - tmp_226 + tmp_291*tmp_38) + tmp_46*(-tmp_174 - tmp_221 + 2.0*tmp_292)) + tmp_80*(-tmp_128*(-tmp_182 - tmp_228 + tmp_296) + tmp_73*(-tmp_190 - tmp_234 + tmp_295*tmp_30) + tmp_78*(-tmp_192 - tmp_236 + tmp_295*tmp_38) + tmp_79*(-tmp_186 - tmp_231 + 2.0*tmp_296));
      real_t a_0_8 = tmp_100*(-tmp_133*(-tmp_193 - tmp_274 + tmp_313) + tmp_93*(-tmp_200 - tmp_278 + tmp_312*tmp_32) + tmp_98*(-tmp_203 - tmp_280 + tmp_312*tmp_40) + tmp_99*(-tmp_196 - tmp_276 + 2.0*tmp_313)) + tmp_120*(tmp_113*(-tmp_212 - tmp_286 + tmp_315*tmp_32) + tmp_118*(-tmp_215 - tmp_288 + tmp_315*tmp_40) + tmp_119*(-tmp_208 - tmp_284 + 2.0*tmp_316) - tmp_138*(-tmp_205 - tmp_282 + tmp_316)) + tmp_60*(-tmp_121*(-tmp_169 - tmp_258 + tmp_307) + tmp_37*(-tmp_176 - tmp_262 + tmp_306*tmp_32) + tmp_45*(-tmp_179 - tmp_264 + tmp_306*tmp_40) + tmp_46*(-tmp_172 - tmp_260 + 2.0*tmp_307)) + tmp_80*(-tmp_128*(-tmp_181 - tmp_266 + tmp_310) + tmp_73*(-tmp_188 - tmp_270 + tmp_309*tmp_32) + tmp_78*(-tmp_191 - tmp_272 + tmp_309*tmp_40) + tmp_79*(-tmp_184 - tmp_268 + 2.0*tmp_310));
      real_t a_0_9 = tmp_100*(-tmp_133*(-tmp_237 - tmp_273 + tmp_322) + tmp_93*(-tmp_243 - tmp_277 + tmp_321*tmp_34) + tmp_98*(-tmp_245 - tmp_279 + tmp_321*tmp_42) + tmp_99*(-tmp_240 - tmp_275 + 2.0*tmp_322)) + tmp_120*(tmp_113*(-tmp_253 - tmp_285 + tmp_323*tmp_34) + tmp_118*(-tmp_255 - tmp_287 + tmp_323*tmp_42) + tmp_119*(-tmp_250 - tmp_283 + 2.0*tmp_324) - tmp_138*(-tmp_247 - tmp_281 + tmp_324)) + tmp_60*(-tmp_121*(-tmp_217 - tmp_257 + tmp_318) + tmp_37*(-tmp_223 - tmp_261 + tmp_317*tmp_34) + tmp_45*(-tmp_225 - tmp_263 + tmp_317*tmp_42) + tmp_46*(-tmp_220 - tmp_259 + 2.0*tmp_318)) + tmp_80*(-tmp_128*(-tmp_227 - tmp_265 + tmp_320) + tmp_73*(-tmp_233 - tmp_269 + tmp_319*tmp_34) + tmp_78*(-tmp_235 - tmp_271 + tmp_319*tmp_42) + tmp_79*(-tmp_230 - tmp_267 + 2.0*tmp_320));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_1_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_1_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_1_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_12 - tmp_16;
      real_t tmp_32 = -tmp_18 + tmp_9;
      real_t tmp_33 = tmp_15 - tmp_17;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = 1.0*tmp_93;
      real_t tmp_279 = tmp_33*tmp_91;
      real_t tmp_280 = (2.0/3.0)*tmp_20;
      real_t tmp_281 = tmp_280*tmp_30;
      real_t tmp_282 = 1.0*tmp_98;
      real_t tmp_283 = tmp_280*tmp_33;
      real_t tmp_284 = tmp_283*tmp_97;
      real_t tmp_285 = 1.0*tmp_101;
      real_t tmp_286 = tmp_100*tmp_283;
      real_t tmp_287 = 1.0*tmp_104;
      real_t tmp_288 = tmp_103*tmp_283;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = (2.0/3.0)*tmp_289;
      real_t tmp_295 = tmp_26*tmp_294;
      real_t tmp_296 = tmp_106*tmp_279;
      real_t tmp_297 = 1.0*tmp_289;
      real_t tmp_298 = tmp_106*tmp_32;
      real_t tmp_299 = tmp_28*tmp_91;
      real_t tmp_300 = tmp_298*tmp_299;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_295*tmp_33;
      real_t tmp_303 = tmp_28*tmp_297;
      real_t tmp_304 = tmp_303*tmp_32;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_294*tmp_6;
      real_t tmp_308 = tmp_120*tmp_307;
      real_t tmp_309 = tmp_120*tmp_31;
      real_t tmp_310 = tmp_297*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_307*tmp_33;
      real_t tmp_313 = tmp_303*tmp_31;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_279*tmp_280;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = 1.0*tmp_112;
      real_t tmp_319 = tmp_280*tmp_32;
      real_t tmp_320 = tmp_111*tmp_319;
      real_t tmp_321 = 1.0*tmp_115;
      real_t tmp_322 = tmp_114*tmp_319;
      real_t tmp_323 = 1.0*tmp_118;
      real_t tmp_324 = tmp_117*tmp_319;
      real_t tmp_325 = tmp_26*tmp_297;
      real_t tmp_326 = tmp_325*tmp_33;
      real_t tmp_327 = tmp_28*tmp_294;
      real_t tmp_328 = tmp_32*tmp_327;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_307*tmp_32;
      real_t tmp_333 = tmp_31*tmp_325;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_280*tmp_298;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = 1.0*tmp_126;
      real_t tmp_339 = tmp_280*tmp_31;
      real_t tmp_340 = tmp_125*tmp_339;
      real_t tmp_341 = 1.0*tmp_129;
      real_t tmp_342 = tmp_128*tmp_339;
      real_t tmp_343 = 1.0*tmp_132;
      real_t tmp_344 = tmp_131*tmp_339;
      real_t tmp_345 = tmp_297*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_33*tmp_345;
      real_t tmp_348 = tmp_31*tmp_327;
      real_t tmp_349 = tmp_32*tmp_345;
      real_t tmp_350 = tmp_295*tmp_31;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_280*tmp_309;
      real_t tmp_354 = tmp_6*tmp_94;
      real_t tmp_355 = 0.13819660112501059*tmp_354;
      real_t tmp_356 = tmp_26*tmp_94;
      real_t tmp_357 = 0.58541019662496829*tmp_356;
      real_t tmp_358 = tmp_355 + tmp_357;
      real_t tmp_359 = 2*tmp_358;
      real_t tmp_360 = (2.0/3.0)*tmp_141;
      real_t tmp_361 = 0.58541019662496829*tmp_354;
      real_t tmp_362 = 0.13819660112501059*tmp_356;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = 2*tmp_363;
      real_t tmp_365 = (2.0/3.0)*tmp_149;
      real_t tmp_366 = 0.13819660112501059*tmp_354;
      real_t tmp_367 = 0.13819660112501059*tmp_356;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = 2*tmp_368;
      real_t tmp_370 = (2.0/3.0)*tmp_157;
      real_t tmp_371 = 0.13819660112501059*tmp_354;
      real_t tmp_372 = 0.13819660112501059*tmp_356;
      real_t tmp_373 = tmp_371 + tmp_372;
      real_t tmp_374 = 2*tmp_373;
      real_t tmp_375 = (2.0/3.0)*tmp_165;
      real_t tmp_376 = 0.13819660112501059*tmp_354;
      real_t tmp_377 = tmp_28*tmp_94;
      real_t tmp_378 = 0.58541019662496829*tmp_377;
      real_t tmp_379 = tmp_376 + tmp_378;
      real_t tmp_380 = 2*tmp_379;
      real_t tmp_381 = (2.0/3.0)*tmp_172;
      real_t tmp_382 = 0.13819660112501059*tmp_354;
      real_t tmp_383 = 0.13819660112501059*tmp_377;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = 2*tmp_384;
      real_t tmp_386 = (2.0/3.0)*tmp_179;
      real_t tmp_387 = 0.58541019662496829*tmp_354;
      real_t tmp_388 = 0.13819660112501059*tmp_377;
      real_t tmp_389 = tmp_387 + tmp_388;
      real_t tmp_390 = 2*tmp_389;
      real_t tmp_391 = (2.0/3.0)*tmp_186;
      real_t tmp_392 = 0.13819660112501059*tmp_354;
      real_t tmp_393 = 0.13819660112501059*tmp_377;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = 2*tmp_394;
      real_t tmp_396 = (2.0/3.0)*tmp_193;
      real_t tmp_397 = 0.13819660112501059*tmp_356;
      real_t tmp_398 = 0.13819660112501059*tmp_377;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = 2*tmp_399;
      real_t tmp_401 = (2.0/3.0)*tmp_199;
      real_t tmp_402 = 0.13819660112501059*tmp_356;
      real_t tmp_403 = 0.58541019662496829*tmp_377;
      real_t tmp_404 = tmp_402 + tmp_403;
      real_t tmp_405 = 2*tmp_404;
      real_t tmp_406 = (2.0/3.0)*tmp_205;
      real_t tmp_407 = 0.58541019662496829*tmp_356;
      real_t tmp_408 = 0.13819660112501059*tmp_377;
      real_t tmp_409 = tmp_407 + tmp_408;
      real_t tmp_410 = 2*tmp_409;
      real_t tmp_411 = (2.0/3.0)*tmp_211;
      real_t tmp_412 = 0.13819660112501059*tmp_356;
      real_t tmp_413 = 0.13819660112501059*tmp_377;
      real_t tmp_414 = tmp_412 + tmp_413;
      real_t tmp_415 = 2*tmp_414;
      real_t tmp_416 = (2.0/3.0)*tmp_217;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_357 - tmp_378;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_362 - tmp_383;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_367 - tmp_388;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_372 - tmp_393;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_355 - tmp_398;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_361 - tmp_403;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_366 - tmp_408;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_371 - tmp_413;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_376 - tmp_397;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_382 - tmp_402;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_387 - tmp_407;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_392 - tmp_412;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(tmp_278*tmp_34 - tmp_279*tmp_281) + tmp_64*(tmp_282*tmp_60 - tmp_284*tmp_59) + tmp_77*(tmp_285*tmp_73 - tmp_286*tmp_72) + tmp_90*(tmp_287*tmp_86 - tmp_288*tmp_85);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(-tmp_295*tmp_296 + tmp_297*tmp_300) + tmp_64*(-tmp_301*tmp_302 + tmp_301*tmp_304) + tmp_77*(-tmp_302*tmp_305 + tmp_304*tmp_305) + tmp_90*(-tmp_302*tmp_306 + tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_279*tmp_308 + tmp_299*tmp_310) + tmp_64*(-tmp_311*tmp_312 + tmp_311*tmp_313) + tmp_77*(-tmp_312*tmp_314 + tmp_313*tmp_314) + tmp_90*(-tmp_312*tmp_315 + tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_278) + tmp_64*(-tmp_146*tmp_284 + tmp_149*tmp_282) + tmp_77*(-tmp_154*tmp_286 + tmp_157*tmp_285) + tmp_90*(-tmp_162*tmp_288 + tmp_165*tmp_287);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_278) + tmp_64*(-tmp_176*tmp_284 + tmp_179*tmp_282) + tmp_77*(-tmp_183*tmp_286 + tmp_186*tmp_285) + tmp_90*(-tmp_190*tmp_288 + tmp_193*tmp_287);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_278) + tmp_64*(-tmp_202*tmp_284 + tmp_205*tmp_282) + tmp_77*(-tmp_208*tmp_286 + tmp_211*tmp_285) + tmp_90*(-tmp_214*tmp_288 + tmp_217*tmp_287);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_278) + tmp_64*(-tmp_228*tmp_284 + tmp_229*tmp_282) + tmp_77*(-tmp_234*tmp_286 + tmp_235*tmp_285) + tmp_90*(-tmp_240*tmp_288 + tmp_241*tmp_287);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_278) + tmp_64*(-tmp_250*tmp_284 + tmp_251*tmp_282) + tmp_77*(-tmp_255*tmp_286 + tmp_256*tmp_285) + tmp_90*(-tmp_260*tmp_288 + tmp_261*tmp_287);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_278) + tmp_64*(-tmp_268*tmp_284 + tmp_269*tmp_282) + tmp_77*(-tmp_272*tmp_286 + tmp_273*tmp_285) + tmp_90*(-tmp_276*tmp_288 + tmp_277*tmp_287);
      real_t a_2_0 = tmp_51*(-tmp_281*tmp_298 + tmp_317*tmp_34) + tmp_64*(tmp_318*tmp_60 - tmp_320*tmp_59) + tmp_77*(tmp_321*tmp_73 - tmp_322*tmp_72) + tmp_90*(tmp_323*tmp_86 - tmp_324*tmp_85);
      real_t a_2_1 = tmp_51*(-tmp_294*tmp_300 + tmp_296*tmp_325) + tmp_64*(tmp_301*tmp_326 - tmp_301*tmp_328) + tmp_77*(tmp_305*tmp_326 - tmp_305*tmp_328) + tmp_90*(tmp_306*tmp_326 - tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_310 - tmp_298*tmp_308) + tmp_64*(-tmp_331*tmp_332 + tmp_331*tmp_333) + tmp_77*(-tmp_332*tmp_334 + tmp_333*tmp_334) + tmp_90*(-tmp_332*tmp_335 + tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_320 + tmp_149*tmp_318) + tmp_77*(-tmp_154*tmp_322 + tmp_157*tmp_321) + tmp_90*(-tmp_162*tmp_324 + tmp_165*tmp_323);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_320 + tmp_179*tmp_318) + tmp_77*(-tmp_183*tmp_322 + tmp_186*tmp_321) + tmp_90*(-tmp_190*tmp_324 + tmp_193*tmp_323);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_320 + tmp_205*tmp_318) + tmp_77*(-tmp_208*tmp_322 + tmp_211*tmp_321) + tmp_90*(-tmp_214*tmp_324 + tmp_217*tmp_323);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_320 + tmp_229*tmp_318) + tmp_77*(-tmp_234*tmp_322 + tmp_235*tmp_321) + tmp_90*(-tmp_240*tmp_324 + tmp_241*tmp_323);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_320 + tmp_251*tmp_318) + tmp_77*(-tmp_255*tmp_322 + tmp_256*tmp_321) + tmp_90*(-tmp_260*tmp_324 + tmp_261*tmp_323);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_320 + tmp_269*tmp_318) + tmp_77*(-tmp_272*tmp_322 + tmp_273*tmp_321) + tmp_90*(-tmp_276*tmp_324 + tmp_277*tmp_323);
      real_t a_3_0 = tmp_51*(-tmp_281*tmp_309 + tmp_337*tmp_34) + tmp_64*(tmp_338*tmp_60 - tmp_340*tmp_59) + tmp_77*(tmp_341*tmp_73 - tmp_342*tmp_72) + tmp_90*(tmp_343*tmp_86 - tmp_344*tmp_85);
      real_t a_3_1 = tmp_51*(tmp_279*tmp_346 - tmp_294*tmp_299*tmp_309) + tmp_64*(tmp_311*tmp_347 - tmp_311*tmp_348) + tmp_77*(tmp_314*tmp_347 - tmp_314*tmp_348) + tmp_90*(tmp_315*tmp_347 - tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_295*tmp_309 + tmp_298*tmp_346) + tmp_64*(tmp_331*tmp_349 - tmp_331*tmp_350) + tmp_77*(tmp_334*tmp_349 - tmp_334*tmp_350) + tmp_90*(tmp_335*tmp_349 - tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_340 + tmp_149*tmp_338) + tmp_77*(-tmp_154*tmp_342 + tmp_157*tmp_341) + tmp_90*(-tmp_162*tmp_344 + tmp_165*tmp_343);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_340 + tmp_179*tmp_338) + tmp_77*(-tmp_183*tmp_342 + tmp_186*tmp_341) + tmp_90*(-tmp_190*tmp_344 + tmp_193*tmp_343);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_340 + tmp_205*tmp_338) + tmp_77*(-tmp_208*tmp_342 + tmp_211*tmp_341) + tmp_90*(-tmp_214*tmp_344 + tmp_217*tmp_343);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_340 + tmp_229*tmp_338) + tmp_77*(-tmp_234*tmp_342 + tmp_235*tmp_341) + tmp_90*(-tmp_240*tmp_344 + tmp_241*tmp_343);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_340 + tmp_251*tmp_338) + tmp_77*(-tmp_255*tmp_342 + tmp_256*tmp_341) + tmp_90*(-tmp_260*tmp_344 + tmp_261*tmp_343);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_340 + tmp_269*tmp_338) + tmp_77*(-tmp_272*tmp_342 + tmp_273*tmp_341) + tmp_90*(-tmp_276*tmp_344 + tmp_277*tmp_343);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_360 + tmp_34*tmp_359) + tmp_64*(tmp_364*tmp_60 - tmp_365*tmp_59) + tmp_77*(tmp_369*tmp_73 - tmp_370*tmp_72) + tmp_90*(tmp_374*tmp_86 - tmp_375*tmp_85);
      real_t a_4_1 = tmp_51*(tmp_358*tmp_96 - tmp_360*tmp_93) + tmp_64*(tmp_363*tmp_99 - tmp_365*tmp_98) + tmp_77*(-tmp_101*tmp_370 + tmp_102*tmp_368) + tmp_90*(-tmp_104*tmp_375 + tmp_105*tmp_373);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_360 + tmp_110*tmp_358) + tmp_64*(-tmp_112*tmp_365 + tmp_113*tmp_363) + tmp_77*(-tmp_115*tmp_370 + tmp_116*tmp_368) + tmp_90*(-tmp_118*tmp_375 + tmp_119*tmp_373);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_360 + tmp_124*tmp_358) + tmp_64*(-tmp_126*tmp_365 + tmp_127*tmp_363) + tmp_77*(-tmp_129*tmp_370 + tmp_130*tmp_368) + tmp_90*(-tmp_132*tmp_375 + tmp_133*tmp_373);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_360 + tmp_141*tmp_359) + tmp_64*(-tmp_146*tmp_365 + tmp_149*tmp_364) + tmp_77*(-tmp_154*tmp_370 + tmp_157*tmp_369) + tmp_90*(-tmp_162*tmp_375 + tmp_165*tmp_374);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_360 + tmp_172*tmp_359) + tmp_64*(-tmp_176*tmp_365 + tmp_179*tmp_364) + tmp_77*(-tmp_183*tmp_370 + tmp_186*tmp_369) + tmp_90*(-tmp_190*tmp_375 + tmp_193*tmp_374);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_360 + tmp_199*tmp_359) + tmp_64*(-tmp_202*tmp_365 + tmp_205*tmp_364) + tmp_77*(-tmp_208*tmp_370 + tmp_211*tmp_369) + tmp_90*(-tmp_214*tmp_375 + tmp_217*tmp_374);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_360 + tmp_223*tmp_359) + tmp_64*(-tmp_228*tmp_365 + tmp_229*tmp_364) + tmp_77*(-tmp_234*tmp_370 + tmp_235*tmp_369) + tmp_90*(-tmp_240*tmp_375 + tmp_241*tmp_374);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_360 + tmp_246*tmp_359) + tmp_64*(-tmp_250*tmp_365 + tmp_251*tmp_364) + tmp_77*(-tmp_255*tmp_370 + tmp_256*tmp_369) + tmp_90*(-tmp_260*tmp_375 + tmp_261*tmp_374);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_360 + tmp_265*tmp_359) + tmp_64*(-tmp_268*tmp_365 + tmp_269*tmp_364) + tmp_77*(-tmp_272*tmp_370 + tmp_273*tmp_369) + tmp_90*(-tmp_276*tmp_375 + tmp_277*tmp_374);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_381 + tmp_34*tmp_380) + tmp_64*(tmp_385*tmp_60 - tmp_386*tmp_59) + tmp_77*(tmp_390*tmp_73 - tmp_391*tmp_72) + tmp_90*(tmp_395*tmp_86 - tmp_396*tmp_85);
      real_t a_5_1 = tmp_51*(tmp_379*tmp_96 - tmp_381*tmp_93) + tmp_64*(tmp_384*tmp_99 - tmp_386*tmp_98) + tmp_77*(-tmp_101*tmp_391 + tmp_102*tmp_389) + tmp_90*(-tmp_104*tmp_396 + tmp_105*tmp_394);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_381 + tmp_110*tmp_379) + tmp_64*(-tmp_112*tmp_386 + tmp_113*tmp_384) + tmp_77*(-tmp_115*tmp_391 + tmp_116*tmp_389) + tmp_90*(-tmp_118*tmp_396 + tmp_119*tmp_394);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_381 + tmp_124*tmp_379) + tmp_64*(-tmp_126*tmp_386 + tmp_127*tmp_384) + tmp_77*(-tmp_129*tmp_391 + tmp_130*tmp_389) + tmp_90*(-tmp_132*tmp_396 + tmp_133*tmp_394);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_381 + tmp_141*tmp_380) + tmp_64*(-tmp_146*tmp_386 + tmp_149*tmp_385) + tmp_77*(-tmp_154*tmp_391 + tmp_157*tmp_390) + tmp_90*(-tmp_162*tmp_396 + tmp_165*tmp_395);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_381 + tmp_172*tmp_380) + tmp_64*(-tmp_176*tmp_386 + tmp_179*tmp_385) + tmp_77*(-tmp_183*tmp_391 + tmp_186*tmp_390) + tmp_90*(-tmp_190*tmp_396 + tmp_193*tmp_395);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_381 + tmp_199*tmp_380) + tmp_64*(-tmp_202*tmp_386 + tmp_205*tmp_385) + tmp_77*(-tmp_208*tmp_391 + tmp_211*tmp_390) + tmp_90*(-tmp_214*tmp_396 + tmp_217*tmp_395);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_381 + tmp_223*tmp_380) + tmp_64*(-tmp_228*tmp_386 + tmp_229*tmp_385) + tmp_77*(-tmp_234*tmp_391 + tmp_235*tmp_390) + tmp_90*(-tmp_240*tmp_396 + tmp_241*tmp_395);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_381 + tmp_246*tmp_380) + tmp_64*(-tmp_250*tmp_386 + tmp_251*tmp_385) + tmp_77*(-tmp_255*tmp_391 + tmp_256*tmp_390) + tmp_90*(-tmp_260*tmp_396 + tmp_261*tmp_395);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_381 + tmp_265*tmp_380) + tmp_64*(-tmp_268*tmp_386 + tmp_269*tmp_385) + tmp_77*(-tmp_272*tmp_391 + tmp_273*tmp_390) + tmp_90*(-tmp_276*tmp_396 + tmp_277*tmp_395);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_401 + tmp_34*tmp_400) + tmp_64*(tmp_405*tmp_60 - tmp_406*tmp_59) + tmp_77*(tmp_410*tmp_73 - tmp_411*tmp_72) + tmp_90*(tmp_415*tmp_86 - tmp_416*tmp_85);
      real_t a_6_1 = tmp_51*(tmp_399*tmp_96 - tmp_401*tmp_93) + tmp_64*(tmp_404*tmp_99 - tmp_406*tmp_98) + tmp_77*(-tmp_101*tmp_411 + tmp_102*tmp_409) + tmp_90*(-tmp_104*tmp_416 + tmp_105*tmp_414);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_401 + tmp_110*tmp_399) + tmp_64*(-tmp_112*tmp_406 + tmp_113*tmp_404) + tmp_77*(-tmp_115*tmp_411 + tmp_116*tmp_409) + tmp_90*(-tmp_118*tmp_416 + tmp_119*tmp_414);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_401 + tmp_124*tmp_399) + tmp_64*(-tmp_126*tmp_406 + tmp_127*tmp_404) + tmp_77*(-tmp_129*tmp_411 + tmp_130*tmp_409) + tmp_90*(-tmp_132*tmp_416 + tmp_133*tmp_414);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_401 + tmp_141*tmp_400) + tmp_64*(-tmp_146*tmp_406 + tmp_149*tmp_405) + tmp_77*(-tmp_154*tmp_411 + tmp_157*tmp_410) + tmp_90*(-tmp_162*tmp_416 + tmp_165*tmp_415);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_401 + tmp_172*tmp_400) + tmp_64*(-tmp_176*tmp_406 + tmp_179*tmp_405) + tmp_77*(-tmp_183*tmp_411 + tmp_186*tmp_410) + tmp_90*(-tmp_190*tmp_416 + tmp_193*tmp_415);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_401 + tmp_199*tmp_400) + tmp_64*(-tmp_202*tmp_406 + tmp_205*tmp_405) + tmp_77*(-tmp_208*tmp_411 + tmp_211*tmp_410) + tmp_90*(-tmp_214*tmp_416 + tmp_217*tmp_415);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_401 + tmp_223*tmp_400) + tmp_64*(-tmp_228*tmp_406 + tmp_229*tmp_405) + tmp_77*(-tmp_234*tmp_411 + tmp_235*tmp_410) + tmp_90*(-tmp_240*tmp_416 + tmp_241*tmp_415);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_401 + tmp_246*tmp_400) + tmp_64*(-tmp_250*tmp_406 + tmp_251*tmp_405) + tmp_77*(-tmp_255*tmp_411 + tmp_256*tmp_410) + tmp_90*(-tmp_260*tmp_416 + tmp_261*tmp_415);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_401 + tmp_265*tmp_400) + tmp_64*(-tmp_268*tmp_406 + tmp_269*tmp_405) + tmp_77*(-tmp_272*tmp_411 + tmp_273*tmp_410) + tmp_90*(-tmp_276*tmp_416 + tmp_277*tmp_415);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_1_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = p_affine_2_0 + tmp_0;
      real_t tmp_5 = p_affine_1_1 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = -p_affine_0_2;
      real_t tmp_8 = p_affine_3_2 + tmp_7;
      real_t tmp_9 = tmp_1*tmp_8;
      real_t tmp_10 = p_affine_3_1 + tmp_2;
      real_t tmp_11 = p_affine_1_2 + tmp_7;
      real_t tmp_12 = tmp_11*tmp_4;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_2_2 + tmp_7;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_1*tmp_14;
      real_t tmp_17 = tmp_4*tmp_8;
      real_t tmp_18 = tmp_11*tmp_13;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_12 - tmp_10*tmp_16 + tmp_15*tmp_5 - tmp_17*tmp_5 - tmp_18*tmp_3 + tmp_3*tmp_9);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_10 + tmp_13*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_10*tmp_4 - tmp_13*tmp_3;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_12 - tmp_16;
      real_t tmp_30 = -tmp_18 + tmp_9;
      real_t tmp_31 = tmp_15 - tmp_17;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_0_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_0_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_0_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_0;
      real_t tmp_9 = p_affine_1_0 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_8;
      real_t tmp_12 = p_affine_3_1 + tmp_0;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_0 + tmp_8;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_12*tmp_9;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_14*tmp_4;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_13*tmp_5 + tmp_15*tmp_3 - tmp_16*tmp_3 - tmp_17*tmp_7 - tmp_18*tmp_5;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_1*tmp_7 + tmp_12*tmp_5;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_12*tmp_3 + tmp_4*tmp_7;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_10 - tmp_17;
      real_t tmp_32 = tmp_15 - tmp_16;
      real_t tmp_33 = tmp_13 - tmp_18;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = tmp_33*tmp_91;
      real_t tmp_279 = (2.0/3.0)*tmp_20;
      real_t tmp_280 = tmp_279*tmp_30;
      real_t tmp_281 = 1.0*tmp_93;
      real_t tmp_282 = tmp_279*tmp_33;
      real_t tmp_283 = tmp_282*tmp_97;
      real_t tmp_284 = 1.0*tmp_98;
      real_t tmp_285 = tmp_100*tmp_282;
      real_t tmp_286 = 1.0*tmp_101;
      real_t tmp_287 = tmp_103*tmp_282;
      real_t tmp_288 = 1.0*tmp_104;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = 1.0*tmp_289;
      real_t tmp_295 = tmp_106*tmp_32;
      real_t tmp_296 = tmp_28*tmp_91;
      real_t tmp_297 = tmp_295*tmp_296;
      real_t tmp_298 = (2.0/3.0)*tmp_289;
      real_t tmp_299 = tmp_26*tmp_298;
      real_t tmp_300 = tmp_106*tmp_278;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_28*tmp_294;
      real_t tmp_303 = tmp_302*tmp_32;
      real_t tmp_304 = tmp_299*tmp_33;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_120*tmp_31;
      real_t tmp_308 = tmp_294*tmp_307;
      real_t tmp_309 = tmp_298*tmp_6;
      real_t tmp_310 = tmp_120*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_302*tmp_31;
      real_t tmp_313 = tmp_309*tmp_33;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_278*tmp_279;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = tmp_279*tmp_32;
      real_t tmp_319 = tmp_111*tmp_318;
      real_t tmp_320 = 1.0*tmp_112;
      real_t tmp_321 = tmp_114*tmp_318;
      real_t tmp_322 = 1.0*tmp_115;
      real_t tmp_323 = tmp_117*tmp_318;
      real_t tmp_324 = 1.0*tmp_118;
      real_t tmp_325 = tmp_26*tmp_294;
      real_t tmp_326 = tmp_28*tmp_298;
      real_t tmp_327 = tmp_32*tmp_326;
      real_t tmp_328 = tmp_325*tmp_33;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_31*tmp_325;
      real_t tmp_333 = tmp_309*tmp_32;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_279*tmp_295;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = tmp_279*tmp_31;
      real_t tmp_339 = tmp_125*tmp_338;
      real_t tmp_340 = 1.0*tmp_126;
      real_t tmp_341 = tmp_128*tmp_338;
      real_t tmp_342 = 1.0*tmp_129;
      real_t tmp_343 = tmp_131*tmp_338;
      real_t tmp_344 = 1.0*tmp_132;
      real_t tmp_345 = tmp_294*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_31*tmp_326;
      real_t tmp_348 = tmp_33*tmp_345;
      real_t tmp_349 = tmp_299*tmp_31;
      real_t tmp_350 = tmp_32*tmp_345;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_279*tmp_307;
      real_t tmp_354 = (2.0/3.0)*tmp_141;
      real_t tmp_355 = tmp_6*tmp_94;
      real_t tmp_356 = 0.13819660112501059*tmp_355;
      real_t tmp_357 = tmp_26*tmp_94;
      real_t tmp_358 = 0.58541019662496829*tmp_357;
      real_t tmp_359 = tmp_356 + tmp_358;
      real_t tmp_360 = 2*tmp_359;
      real_t tmp_361 = (2.0/3.0)*tmp_149;
      real_t tmp_362 = 0.58541019662496829*tmp_355;
      real_t tmp_363 = 0.13819660112501059*tmp_357;
      real_t tmp_364 = tmp_362 + tmp_363;
      real_t tmp_365 = 2*tmp_364;
      real_t tmp_366 = (2.0/3.0)*tmp_157;
      real_t tmp_367 = 0.13819660112501059*tmp_355;
      real_t tmp_368 = 0.13819660112501059*tmp_357;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = 2*tmp_369;
      real_t tmp_371 = (2.0/3.0)*tmp_165;
      real_t tmp_372 = 0.13819660112501059*tmp_355;
      real_t tmp_373 = 0.13819660112501059*tmp_357;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = 2*tmp_374;
      real_t tmp_376 = (2.0/3.0)*tmp_172;
      real_t tmp_377 = 0.13819660112501059*tmp_355;
      real_t tmp_378 = tmp_28*tmp_94;
      real_t tmp_379 = 0.58541019662496829*tmp_378;
      real_t tmp_380 = tmp_377 + tmp_379;
      real_t tmp_381 = 2*tmp_380;
      real_t tmp_382 = (2.0/3.0)*tmp_179;
      real_t tmp_383 = 0.13819660112501059*tmp_355;
      real_t tmp_384 = 0.13819660112501059*tmp_378;
      real_t tmp_385 = tmp_383 + tmp_384;
      real_t tmp_386 = 2*tmp_385;
      real_t tmp_387 = (2.0/3.0)*tmp_186;
      real_t tmp_388 = 0.58541019662496829*tmp_355;
      real_t tmp_389 = 0.13819660112501059*tmp_378;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = 2*tmp_390;
      real_t tmp_392 = (2.0/3.0)*tmp_193;
      real_t tmp_393 = 0.13819660112501059*tmp_355;
      real_t tmp_394 = 0.13819660112501059*tmp_378;
      real_t tmp_395 = tmp_393 + tmp_394;
      real_t tmp_396 = 2*tmp_395;
      real_t tmp_397 = (2.0/3.0)*tmp_199;
      real_t tmp_398 = 0.13819660112501059*tmp_357;
      real_t tmp_399 = 0.13819660112501059*tmp_378;
      real_t tmp_400 = tmp_398 + tmp_399;
      real_t tmp_401 = 2*tmp_400;
      real_t tmp_402 = (2.0/3.0)*tmp_205;
      real_t tmp_403 = 0.13819660112501059*tmp_357;
      real_t tmp_404 = 0.58541019662496829*tmp_378;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = 2*tmp_405;
      real_t tmp_407 = (2.0/3.0)*tmp_211;
      real_t tmp_408 = 0.58541019662496829*tmp_357;
      real_t tmp_409 = 0.13819660112501059*tmp_378;
      real_t tmp_410 = tmp_408 + tmp_409;
      real_t tmp_411 = 2*tmp_410;
      real_t tmp_412 = (2.0/3.0)*tmp_217;
      real_t tmp_413 = 0.13819660112501059*tmp_357;
      real_t tmp_414 = 0.13819660112501059*tmp_378;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = 2*tmp_415;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_358 - tmp_379;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_363 - tmp_384;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_368 - tmp_389;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_373 - tmp_394;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_356 - tmp_399;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_362 - tmp_404;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_367 - tmp_409;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_372 - tmp_414;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_377 - tmp_398;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_383 - tmp_403;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_388 - tmp_408;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_393 - tmp_413;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(-tmp_278*tmp_280 + tmp_281*tmp_34) + tmp_64*(-tmp_283*tmp_59 + tmp_284*tmp_60) + tmp_77*(-tmp_285*tmp_72 + tmp_286*tmp_73) + tmp_90*(-tmp_287*tmp_85 + tmp_288*tmp_86);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(tmp_294*tmp_297 - tmp_299*tmp_300) + tmp_64*(tmp_301*tmp_303 - tmp_301*tmp_304) + tmp_77*(tmp_303*tmp_305 - tmp_304*tmp_305) + tmp_90*(tmp_303*tmp_306 - tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_278*tmp_310 + tmp_296*tmp_308) + tmp_64*(tmp_311*tmp_312 - tmp_311*tmp_313) + tmp_77*(tmp_312*tmp_314 - tmp_313*tmp_314) + tmp_90*(tmp_312*tmp_315 - tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_281) + tmp_64*(-tmp_146*tmp_283 + tmp_149*tmp_284) + tmp_77*(-tmp_154*tmp_285 + tmp_157*tmp_286) + tmp_90*(-tmp_162*tmp_287 + tmp_165*tmp_288);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_281) + tmp_64*(-tmp_176*tmp_283 + tmp_179*tmp_284) + tmp_77*(-tmp_183*tmp_285 + tmp_186*tmp_286) + tmp_90*(-tmp_190*tmp_287 + tmp_193*tmp_288);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_281) + tmp_64*(-tmp_202*tmp_283 + tmp_205*tmp_284) + tmp_77*(-tmp_208*tmp_285 + tmp_211*tmp_286) + tmp_90*(-tmp_214*tmp_287 + tmp_217*tmp_288);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_281) + tmp_64*(-tmp_228*tmp_283 + tmp_229*tmp_284) + tmp_77*(-tmp_234*tmp_285 + tmp_235*tmp_286) + tmp_90*(-tmp_240*tmp_287 + tmp_241*tmp_288);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_281) + tmp_64*(-tmp_250*tmp_283 + tmp_251*tmp_284) + tmp_77*(-tmp_255*tmp_285 + tmp_256*tmp_286) + tmp_90*(-tmp_260*tmp_287 + tmp_261*tmp_288);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_281) + tmp_64*(-tmp_268*tmp_283 + tmp_269*tmp_284) + tmp_77*(-tmp_272*tmp_285 + tmp_273*tmp_286) + tmp_90*(-tmp_276*tmp_287 + tmp_277*tmp_288);
      real_t a_2_0 = tmp_51*(-tmp_280*tmp_295 + tmp_317*tmp_34) + tmp_64*(-tmp_319*tmp_59 + tmp_320*tmp_60) + tmp_77*(-tmp_321*tmp_72 + tmp_322*tmp_73) + tmp_90*(-tmp_323*tmp_85 + tmp_324*tmp_86);
      real_t a_2_1 = tmp_51*(-tmp_297*tmp_298 + tmp_300*tmp_325) + tmp_64*(-tmp_301*tmp_327 + tmp_301*tmp_328) + tmp_77*(-tmp_305*tmp_327 + tmp_305*tmp_328) + tmp_90*(-tmp_306*tmp_327 + tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_308 - tmp_295*tmp_310) + tmp_64*(tmp_331*tmp_332 - tmp_331*tmp_333) + tmp_77*(tmp_332*tmp_334 - tmp_333*tmp_334) + tmp_90*(tmp_332*tmp_335 - tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_319 + tmp_149*tmp_320) + tmp_77*(-tmp_154*tmp_321 + tmp_157*tmp_322) + tmp_90*(-tmp_162*tmp_323 + tmp_165*tmp_324);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_319 + tmp_179*tmp_320) + tmp_77*(-tmp_183*tmp_321 + tmp_186*tmp_322) + tmp_90*(-tmp_190*tmp_323 + tmp_193*tmp_324);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_319 + tmp_205*tmp_320) + tmp_77*(-tmp_208*tmp_321 + tmp_211*tmp_322) + tmp_90*(-tmp_214*tmp_323 + tmp_217*tmp_324);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_319 + tmp_229*tmp_320) + tmp_77*(-tmp_234*tmp_321 + tmp_235*tmp_322) + tmp_90*(-tmp_240*tmp_323 + tmp_241*tmp_324);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_319 + tmp_251*tmp_320) + tmp_77*(-tmp_255*tmp_321 + tmp_256*tmp_322) + tmp_90*(-tmp_260*tmp_323 + tmp_261*tmp_324);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_319 + tmp_269*tmp_320) + tmp_77*(-tmp_272*tmp_321 + tmp_273*tmp_322) + tmp_90*(-tmp_276*tmp_323 + tmp_277*tmp_324);
      real_t a_3_0 = tmp_51*(-tmp_280*tmp_307 + tmp_337*tmp_34) + tmp_64*(-tmp_339*tmp_59 + tmp_340*tmp_60) + tmp_77*(-tmp_341*tmp_72 + tmp_342*tmp_73) + tmp_90*(-tmp_343*tmp_85 + tmp_344*tmp_86);
      real_t a_3_1 = tmp_51*(tmp_278*tmp_346 - tmp_296*tmp_298*tmp_307) + tmp_64*(-tmp_311*tmp_347 + tmp_311*tmp_348) + tmp_77*(-tmp_314*tmp_347 + tmp_314*tmp_348) + tmp_90*(-tmp_315*tmp_347 + tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_299*tmp_307 + tmp_295*tmp_346) + tmp_64*(-tmp_331*tmp_349 + tmp_331*tmp_350) + tmp_77*(-tmp_334*tmp_349 + tmp_334*tmp_350) + tmp_90*(-tmp_335*tmp_349 + tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_339 + tmp_149*tmp_340) + tmp_77*(-tmp_154*tmp_341 + tmp_157*tmp_342) + tmp_90*(-tmp_162*tmp_343 + tmp_165*tmp_344);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_339 + tmp_179*tmp_340) + tmp_77*(-tmp_183*tmp_341 + tmp_186*tmp_342) + tmp_90*(-tmp_190*tmp_343 + tmp_193*tmp_344);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_339 + tmp_205*tmp_340) + tmp_77*(-tmp_208*tmp_341 + tmp_211*tmp_342) + tmp_90*(-tmp_214*tmp_343 + tmp_217*tmp_344);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_339 + tmp_229*tmp_340) + tmp_77*(-tmp_234*tmp_341 + tmp_235*tmp_342) + tmp_90*(-tmp_240*tmp_343 + tmp_241*tmp_344);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_339 + tmp_251*tmp_340) + tmp_77*(-tmp_255*tmp_341 + tmp_256*tmp_342) + tmp_90*(-tmp_260*tmp_343 + tmp_261*tmp_344);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_339 + tmp_269*tmp_340) + tmp_77*(-tmp_272*tmp_341 + tmp_273*tmp_342) + tmp_90*(-tmp_276*tmp_343 + tmp_277*tmp_344);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_354 + tmp_34*tmp_360) + tmp_64*(-tmp_361*tmp_59 + tmp_365*tmp_60) + tmp_77*(-tmp_366*tmp_72 + tmp_370*tmp_73) + tmp_90*(-tmp_371*tmp_85 + tmp_375*tmp_86);
      real_t a_4_1 = tmp_51*(-tmp_354*tmp_93 + tmp_359*tmp_96) + tmp_64*(-tmp_361*tmp_98 + tmp_364*tmp_99) + tmp_77*(-tmp_101*tmp_366 + tmp_102*tmp_369) + tmp_90*(-tmp_104*tmp_371 + tmp_105*tmp_374);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_354 + tmp_110*tmp_359) + tmp_64*(-tmp_112*tmp_361 + tmp_113*tmp_364) + tmp_77*(-tmp_115*tmp_366 + tmp_116*tmp_369) + tmp_90*(-tmp_118*tmp_371 + tmp_119*tmp_374);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_354 + tmp_124*tmp_359) + tmp_64*(-tmp_126*tmp_361 + tmp_127*tmp_364) + tmp_77*(-tmp_129*tmp_366 + tmp_130*tmp_369) + tmp_90*(-tmp_132*tmp_371 + tmp_133*tmp_374);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_354 + tmp_141*tmp_360) + tmp_64*(-tmp_146*tmp_361 + tmp_149*tmp_365) + tmp_77*(-tmp_154*tmp_366 + tmp_157*tmp_370) + tmp_90*(-tmp_162*tmp_371 + tmp_165*tmp_375);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_354 + tmp_172*tmp_360) + tmp_64*(-tmp_176*tmp_361 + tmp_179*tmp_365) + tmp_77*(-tmp_183*tmp_366 + tmp_186*tmp_370) + tmp_90*(-tmp_190*tmp_371 + tmp_193*tmp_375);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_354 + tmp_199*tmp_360) + tmp_64*(-tmp_202*tmp_361 + tmp_205*tmp_365) + tmp_77*(-tmp_208*tmp_366 + tmp_211*tmp_370) + tmp_90*(-tmp_214*tmp_371 + tmp_217*tmp_375);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_354 + tmp_223*tmp_360) + tmp_64*(-tmp_228*tmp_361 + tmp_229*tmp_365) + tmp_77*(-tmp_234*tmp_366 + tmp_235*tmp_370) + tmp_90*(-tmp_240*tmp_371 + tmp_241*tmp_375);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_354 + tmp_246*tmp_360) + tmp_64*(-tmp_250*tmp_361 + tmp_251*tmp_365) + tmp_77*(-tmp_255*tmp_366 + tmp_256*tmp_370) + tmp_90*(-tmp_260*tmp_371 + tmp_261*tmp_375);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_354 + tmp_265*tmp_360) + tmp_64*(-tmp_268*tmp_361 + tmp_269*tmp_365) + tmp_77*(-tmp_272*tmp_366 + tmp_273*tmp_370) + tmp_90*(-tmp_276*tmp_371 + tmp_277*tmp_375);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_376 + tmp_34*tmp_381) + tmp_64*(-tmp_382*tmp_59 + tmp_386*tmp_60) + tmp_77*(-tmp_387*tmp_72 + tmp_391*tmp_73) + tmp_90*(-tmp_392*tmp_85 + tmp_396*tmp_86);
      real_t a_5_1 = tmp_51*(-tmp_376*tmp_93 + tmp_380*tmp_96) + tmp_64*(-tmp_382*tmp_98 + tmp_385*tmp_99) + tmp_77*(-tmp_101*tmp_387 + tmp_102*tmp_390) + tmp_90*(-tmp_104*tmp_392 + tmp_105*tmp_395);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_376 + tmp_110*tmp_380) + tmp_64*(-tmp_112*tmp_382 + tmp_113*tmp_385) + tmp_77*(-tmp_115*tmp_387 + tmp_116*tmp_390) + tmp_90*(-tmp_118*tmp_392 + tmp_119*tmp_395);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_376 + tmp_124*tmp_380) + tmp_64*(-tmp_126*tmp_382 + tmp_127*tmp_385) + tmp_77*(-tmp_129*tmp_387 + tmp_130*tmp_390) + tmp_90*(-tmp_132*tmp_392 + tmp_133*tmp_395);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_376 + tmp_141*tmp_381) + tmp_64*(-tmp_146*tmp_382 + tmp_149*tmp_386) + tmp_77*(-tmp_154*tmp_387 + tmp_157*tmp_391) + tmp_90*(-tmp_162*tmp_392 + tmp_165*tmp_396);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_376 + tmp_172*tmp_381) + tmp_64*(-tmp_176*tmp_382 + tmp_179*tmp_386) + tmp_77*(-tmp_183*tmp_387 + tmp_186*tmp_391) + tmp_90*(-tmp_190*tmp_392 + tmp_193*tmp_396);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_376 + tmp_199*tmp_381) + tmp_64*(-tmp_202*tmp_382 + tmp_205*tmp_386) + tmp_77*(-tmp_208*tmp_387 + tmp_211*tmp_391) + tmp_90*(-tmp_214*tmp_392 + tmp_217*tmp_396);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_376 + tmp_223*tmp_381) + tmp_64*(-tmp_228*tmp_382 + tmp_229*tmp_386) + tmp_77*(-tmp_234*tmp_387 + tmp_235*tmp_391) + tmp_90*(-tmp_240*tmp_392 + tmp_241*tmp_396);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_376 + tmp_246*tmp_381) + tmp_64*(-tmp_250*tmp_382 + tmp_251*tmp_386) + tmp_77*(-tmp_255*tmp_387 + tmp_256*tmp_391) + tmp_90*(-tmp_260*tmp_392 + tmp_261*tmp_396);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_376 + tmp_265*tmp_381) + tmp_64*(-tmp_268*tmp_382 + tmp_269*tmp_386) + tmp_77*(-tmp_272*tmp_387 + tmp_273*tmp_391) + tmp_90*(-tmp_276*tmp_392 + tmp_277*tmp_396);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_397 + tmp_34*tmp_401) + tmp_64*(-tmp_402*tmp_59 + tmp_406*tmp_60) + tmp_77*(-tmp_407*tmp_72 + tmp_411*tmp_73) + tmp_90*(-tmp_412*tmp_85 + tmp_416*tmp_86);
      real_t a_6_1 = tmp_51*(-tmp_397*tmp_93 + tmp_400*tmp_96) + tmp_64*(-tmp_402*tmp_98 + tmp_405*tmp_99) + tmp_77*(-tmp_101*tmp_407 + tmp_102*tmp_410) + tmp_90*(-tmp_104*tmp_412 + tmp_105*tmp_415);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_397 + tmp_110*tmp_400) + tmp_64*(-tmp_112*tmp_402 + tmp_113*tmp_405) + tmp_77*(-tmp_115*tmp_407 + tmp_116*tmp_410) + tmp_90*(-tmp_118*tmp_412 + tmp_119*tmp_415);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_397 + tmp_124*tmp_400) + tmp_64*(-tmp_126*tmp_402 + tmp_127*tmp_405) + tmp_77*(-tmp_129*tmp_407 + tmp_130*tmp_410) + tmp_90*(-tmp_132*tmp_412 + tmp_133*tmp_415);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_397 + tmp_141*tmp_401) + tmp_64*(-tmp_146*tmp_402 + tmp_149*tmp_406) + tmp_77*(-tmp_154*tmp_407 + tmp_157*tmp_411) + tmp_90*(-tmp_162*tmp_412 + tmp_165*tmp_416);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_397 + tmp_172*tmp_401) + tmp_64*(-tmp_176*tmp_402 + tmp_179*tmp_406) + tmp_77*(-tmp_183*tmp_407 + tmp_186*tmp_411) + tmp_90*(-tmp_190*tmp_412 + tmp_193*tmp_416);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_397 + tmp_199*tmp_401) + tmp_64*(-tmp_202*tmp_402 + tmp_205*tmp_406) + tmp_77*(-tmp_208*tmp_407 + tmp_211*tmp_411) + tmp_90*(-tmp_214*tmp_412 + tmp_217*tmp_416);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_397 + tmp_223*tmp_401) + tmp_64*(-tmp_228*tmp_402 + tmp_229*tmp_406) + tmp_77*(-tmp_234*tmp_407 + tmp_235*tmp_411) + tmp_90*(-tmp_240*tmp_412 + tmp_241*tmp_416);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_397 + tmp_246*tmp_401) + tmp_64*(-tmp_250*tmp_402 + tmp_251*tmp_406) + tmp_77*(-tmp_255*tmp_407 + tmp_256*tmp_411) + tmp_90*(-tmp_260*tmp_412 + tmp_261*tmp_416);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_397 + tmp_265*tmp_401) + tmp_64*(-tmp_268*tmp_402 + tmp_269*tmp_406) + tmp_77*(-tmp_272*tmp_407 + tmp_273*tmp_411) + tmp_90*(-tmp_276*tmp_412 + tmp_277*tmp_416);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_0_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_1;
      real_t tmp_1 = p_affine_1_1 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_2_2 + tmp_2;
      real_t tmp_4 = p_affine_2_1 + tmp_0;
      real_t tmp_5 = p_affine_1_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_0;
      real_t tmp_9 = p_affine_1_0 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_2_0 + tmp_8;
      real_t tmp_12 = p_affine_3_1 + tmp_0;
      real_t tmp_13 = tmp_11*tmp_12;
      real_t tmp_14 = p_affine_3_0 + tmp_8;
      real_t tmp_15 = tmp_1*tmp_14;
      real_t tmp_16 = tmp_12*tmp_9;
      real_t tmp_17 = tmp_1*tmp_11;
      real_t tmp_18 = tmp_14*tmp_4;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_13*tmp_5 + tmp_15*tmp_3 - tmp_16*tmp_3 - tmp_17*tmp_7 - tmp_18*tmp_5);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_1*tmp_7 + tmp_12*tmp_5;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_12*tmp_3 + tmp_4*tmp_7;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_10 - tmp_17;
      real_t tmp_30 = tmp_15 - tmp_16;
      real_t tmp_31 = tmp_13 - tmp_18;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_1_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_1_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_1_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_6;
      real_t tmp_26 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = tmp_10 - tmp_17;
      real_t tmp_32 = tmp_15 - tmp_16;
      real_t tmp_33 = tmp_12 - tmp_18;
      real_t tmp_34 = tmp_24*tmp_31 + tmp_24*tmp_32 + tmp_24*tmp_33;
      real_t tmp_35 = (2.0/3.0)*tmp_34;
      real_t tmp_36 = 0.5*tmp_25 + 0.5*tmp_27 + 0.5*tmp_29;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = p_affine_0_0*p_affine_1_1;
      real_t tmp_39 = p_affine_0_0*p_affine_1_2;
      real_t tmp_40 = p_affine_2_1*p_affine_3_2;
      real_t tmp_41 = p_affine_0_1*p_affine_1_0;
      real_t tmp_42 = p_affine_0_1*p_affine_1_2;
      real_t tmp_43 = p_affine_2_2*p_affine_3_0;
      real_t tmp_44 = p_affine_0_2*p_affine_1_0;
      real_t tmp_45 = p_affine_0_2*p_affine_1_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_1;
      real_t tmp_47 = p_affine_2_2*p_affine_3_1;
      real_t tmp_48 = p_affine_2_0*p_affine_3_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_0;
      real_t tmp_50 = std::abs(p_affine_0_0*tmp_40 - p_affine_0_0*tmp_47 + p_affine_0_1*tmp_43 - p_affine_0_1*tmp_48 + p_affine_0_2*tmp_46 - p_affine_0_2*tmp_49 - p_affine_1_0*tmp_40 + p_affine_1_0*tmp_47 - p_affine_1_1*tmp_43 + p_affine_1_1*tmp_48 - p_affine_1_2*tmp_46 + p_affine_1_2*tmp_49 + p_affine_2_0*tmp_42 - p_affine_2_0*tmp_45 - p_affine_2_1*tmp_39 + p_affine_2_1*tmp_44 + p_affine_2_2*tmp_38 - p_affine_2_2*tmp_41 - p_affine_3_0*tmp_42 + p_affine_3_0*tmp_45 + p_affine_3_1*tmp_39 - p_affine_3_1*tmp_44 - p_affine_3_2*tmp_38 + p_affine_3_2*tmp_41);
      real_t tmp_51 = 0.041666666666666657*tmp_50;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = 2.3416407864998732;
      real_t tmp_54 = 0.55278640450004235;
      real_t tmp_55 = tmp_20*(tmp_52 + tmp_53 + tmp_54 - 3.0);
      real_t tmp_56 = tmp_55*tmp_6;
      real_t tmp_57 = tmp_26*tmp_55;
      real_t tmp_58 = tmp_28*tmp_55;
      real_t tmp_59 = tmp_56 + tmp_57 + tmp_58;
      real_t tmp_60 = tmp_31*tmp_55 + tmp_32*tmp_55 + tmp_33*tmp_55;
      real_t tmp_61 = (2.0/3.0)*tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_57 + 0.5*tmp_58;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = 0.041666666666666657*tmp_50;
      real_t tmp_65 = 2.3416407864998732;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_6*tmp_68;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68 + tmp_32*tmp_68 + tmp_33*tmp_68;
      real_t tmp_74 = (2.0/3.0)*tmp_73;
      real_t tmp_75 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_76 = 2*tmp_75;
      real_t tmp_77 = 0.041666666666666657*tmp_50;
      real_t tmp_78 = 0.55278640450004235;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.55278640450004235;
      real_t tmp_81 = tmp_20*(tmp_78 + tmp_79 + tmp_80 - 3.0);
      real_t tmp_82 = tmp_6*tmp_81;
      real_t tmp_83 = tmp_26*tmp_81;
      real_t tmp_84 = tmp_28*tmp_81;
      real_t tmp_85 = tmp_82 + tmp_83 + tmp_84;
      real_t tmp_86 = tmp_31*tmp_81 + tmp_32*tmp_81 + tmp_33*tmp_81;
      real_t tmp_87 = (2.0/3.0)*tmp_86;
      real_t tmp_88 = 0.5*tmp_82 + 0.5*tmp_83 + 0.5*tmp_84;
      real_t tmp_89 = 2*tmp_88;
      real_t tmp_90 = 0.041666666666666657*tmp_50;
      real_t tmp_91 = tmp_21 - 1.0;
      real_t tmp_92 = tmp_20*tmp_28;
      real_t tmp_93 = tmp_91*tmp_92;
      real_t tmp_94 = 2.0*tmp_20;
      real_t tmp_95 = tmp_33*tmp_94;
      real_t tmp_96 = tmp_91*tmp_95;
      real_t tmp_97 = tmp_52 - 1.0;
      real_t tmp_98 = tmp_92*tmp_97;
      real_t tmp_99 = tmp_95*tmp_97;
      real_t tmp_100 = tmp_65 - 1.0;
      real_t tmp_101 = tmp_100*tmp_92;
      real_t tmp_102 = tmp_100*tmp_95;
      real_t tmp_103 = tmp_78 - 1.0;
      real_t tmp_104 = tmp_103*tmp_92;
      real_t tmp_105 = tmp_103*tmp_95;
      real_t tmp_106 = tmp_22 - 1.0;
      real_t tmp_107 = tmp_20*tmp_26;
      real_t tmp_108 = tmp_106*tmp_107;
      real_t tmp_109 = tmp_32*tmp_94;
      real_t tmp_110 = tmp_106*tmp_109;
      real_t tmp_111 = tmp_53 - 1.0;
      real_t tmp_112 = tmp_107*tmp_111;
      real_t tmp_113 = tmp_109*tmp_111;
      real_t tmp_114 = tmp_66 - 1.0;
      real_t tmp_115 = tmp_107*tmp_114;
      real_t tmp_116 = tmp_109*tmp_114;
      real_t tmp_117 = tmp_79 - 1.0;
      real_t tmp_118 = tmp_107*tmp_117;
      real_t tmp_119 = tmp_109*tmp_117;
      real_t tmp_120 = tmp_23 - 1.0;
      real_t tmp_121 = tmp_20*tmp_6;
      real_t tmp_122 = tmp_120*tmp_121;
      real_t tmp_123 = tmp_31*tmp_94;
      real_t tmp_124 = tmp_120*tmp_123;
      real_t tmp_125 = tmp_54 - 1.0;
      real_t tmp_126 = tmp_121*tmp_125;
      real_t tmp_127 = tmp_123*tmp_125;
      real_t tmp_128 = tmp_67 - 1.0;
      real_t tmp_129 = tmp_121*tmp_128;
      real_t tmp_130 = tmp_123*tmp_128;
      real_t tmp_131 = tmp_80 - 1.0;
      real_t tmp_132 = tmp_121*tmp_131;
      real_t tmp_133 = tmp_123*tmp_131;
      real_t tmp_134 = tmp_20*tmp_22;
      real_t tmp_135 = tmp_134*tmp_6;
      real_t tmp_136 = tmp_20*tmp_23;
      real_t tmp_137 = tmp_136*tmp_26;
      real_t tmp_138 = tmp_135 + tmp_137;
      real_t tmp_139 = tmp_134*tmp_31;
      real_t tmp_140 = tmp_136*tmp_32;
      real_t tmp_141 = tmp_139 + tmp_140;
      real_t tmp_142 = tmp_20*tmp_53;
      real_t tmp_143 = tmp_142*tmp_6;
      real_t tmp_144 = tmp_20*tmp_54;
      real_t tmp_145 = tmp_144*tmp_26;
      real_t tmp_146 = tmp_143 + tmp_145;
      real_t tmp_147 = tmp_142*tmp_31;
      real_t tmp_148 = tmp_144*tmp_32;
      real_t tmp_149 = tmp_147 + tmp_148;
      real_t tmp_150 = tmp_20*tmp_66;
      real_t tmp_151 = tmp_150*tmp_6;
      real_t tmp_152 = tmp_20*tmp_67;
      real_t tmp_153 = tmp_152*tmp_26;
      real_t tmp_154 = tmp_151 + tmp_153;
      real_t tmp_155 = tmp_150*tmp_31;
      real_t tmp_156 = tmp_152*tmp_32;
      real_t tmp_157 = tmp_155 + tmp_156;
      real_t tmp_158 = tmp_20*tmp_79;
      real_t tmp_159 = tmp_158*tmp_6;
      real_t tmp_160 = tmp_20*tmp_80;
      real_t tmp_161 = tmp_160*tmp_26;
      real_t tmp_162 = tmp_159 + tmp_161;
      real_t tmp_163 = tmp_158*tmp_31;
      real_t tmp_164 = tmp_160*tmp_32;
      real_t tmp_165 = tmp_163 + tmp_164;
      real_t tmp_166 = tmp_20*tmp_21;
      real_t tmp_167 = tmp_166*tmp_6;
      real_t tmp_168 = tmp_136*tmp_28;
      real_t tmp_169 = tmp_167 + tmp_168;
      real_t tmp_170 = tmp_166*tmp_31;
      real_t tmp_171 = tmp_136*tmp_33;
      real_t tmp_172 = tmp_170 + tmp_171;
      real_t tmp_173 = tmp_20*tmp_52;
      real_t tmp_174 = tmp_173*tmp_6;
      real_t tmp_175 = tmp_144*tmp_28;
      real_t tmp_176 = tmp_174 + tmp_175;
      real_t tmp_177 = tmp_173*tmp_31;
      real_t tmp_178 = tmp_144*tmp_33;
      real_t tmp_179 = tmp_177 + tmp_178;
      real_t tmp_180 = tmp_20*tmp_65;
      real_t tmp_181 = tmp_180*tmp_6;
      real_t tmp_182 = tmp_152*tmp_28;
      real_t tmp_183 = tmp_181 + tmp_182;
      real_t tmp_184 = tmp_180*tmp_31;
      real_t tmp_185 = tmp_152*tmp_33;
      real_t tmp_186 = tmp_184 + tmp_185;
      real_t tmp_187 = tmp_20*tmp_78;
      real_t tmp_188 = tmp_187*tmp_6;
      real_t tmp_189 = tmp_160*tmp_28;
      real_t tmp_190 = tmp_188 + tmp_189;
      real_t tmp_191 = tmp_187*tmp_31;
      real_t tmp_192 = tmp_160*tmp_33;
      real_t tmp_193 = tmp_191 + tmp_192;
      real_t tmp_194 = tmp_166*tmp_26;
      real_t tmp_195 = tmp_134*tmp_28;
      real_t tmp_196 = tmp_194 + tmp_195;
      real_t tmp_197 = tmp_166*tmp_32;
      real_t tmp_198 = tmp_134*tmp_33;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = tmp_173*tmp_26;
      real_t tmp_201 = tmp_142*tmp_28;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = tmp_173*tmp_32;
      real_t tmp_204 = tmp_142*tmp_33;
      real_t tmp_205 = tmp_203 + tmp_204;
      real_t tmp_206 = tmp_180*tmp_26;
      real_t tmp_207 = tmp_150*tmp_28;
      real_t tmp_208 = tmp_206 + tmp_207;
      real_t tmp_209 = tmp_180*tmp_32;
      real_t tmp_210 = tmp_150*tmp_33;
      real_t tmp_211 = tmp_209 + tmp_210;
      real_t tmp_212 = tmp_187*tmp_26;
      real_t tmp_213 = tmp_158*tmp_28;
      real_t tmp_214 = tmp_212 + tmp_213;
      real_t tmp_215 = tmp_187*tmp_32;
      real_t tmp_216 = tmp_158*tmp_33;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = -tmp_22;
      real_t tmp_219 = 4.0 - tmp_21;
      real_t tmp_220 = tmp_20*(tmp_218 + tmp_219 - 4.6832815729997463);
      real_t tmp_221 = tmp_220*tmp_6;
      real_t tmp_222 = -tmp_137 - tmp_168 + tmp_221;
      real_t tmp_223 = -tmp_140 - tmp_171 + tmp_220*tmp_31;
      real_t tmp_224 = -tmp_53;
      real_t tmp_225 = 4.0 - tmp_52;
      real_t tmp_226 = tmp_20*(tmp_224 + tmp_225 - 1.1055728090000847);
      real_t tmp_227 = tmp_226*tmp_6;
      real_t tmp_228 = -tmp_145 - tmp_175 + tmp_227;
      real_t tmp_229 = -tmp_148 - tmp_178 + tmp_226*tmp_31;
      real_t tmp_230 = -tmp_66;
      real_t tmp_231 = 4.0 - tmp_65;
      real_t tmp_232 = tmp_20*(tmp_230 + tmp_231 - 1.1055728090000847);
      real_t tmp_233 = tmp_232*tmp_6;
      real_t tmp_234 = -tmp_153 - tmp_182 + tmp_233;
      real_t tmp_235 = -tmp_156 - tmp_185 + tmp_232*tmp_31;
      real_t tmp_236 = -tmp_79;
      real_t tmp_237 = 4.0 - tmp_78;
      real_t tmp_238 = tmp_20*(tmp_236 + tmp_237 - 1.1055728090000847);
      real_t tmp_239 = tmp_238*tmp_6;
      real_t tmp_240 = -tmp_161 - tmp_189 + tmp_239;
      real_t tmp_241 = -tmp_164 - tmp_192 + tmp_238*tmp_31;
      real_t tmp_242 = -tmp_23;
      real_t tmp_243 = tmp_20*(tmp_219 + tmp_242 - 1.1055728090000847);
      real_t tmp_244 = tmp_243*tmp_26;
      real_t tmp_245 = -tmp_135 - tmp_195 + tmp_244;
      real_t tmp_246 = -tmp_139 - tmp_198 + tmp_243*tmp_32;
      real_t tmp_247 = -tmp_54;
      real_t tmp_248 = tmp_20*(tmp_225 + tmp_247 - 4.6832815729997463);
      real_t tmp_249 = tmp_248*tmp_26;
      real_t tmp_250 = -tmp_143 - tmp_201 + tmp_249;
      real_t tmp_251 = -tmp_147 - tmp_204 + tmp_248*tmp_32;
      real_t tmp_252 = -tmp_67;
      real_t tmp_253 = tmp_20*(tmp_231 + tmp_252 - 1.1055728090000847);
      real_t tmp_254 = tmp_253*tmp_26;
      real_t tmp_255 = -tmp_151 - tmp_207 + tmp_254;
      real_t tmp_256 = -tmp_155 - tmp_210 + tmp_253*tmp_32;
      real_t tmp_257 = -tmp_80;
      real_t tmp_258 = tmp_20*(tmp_237 + tmp_257 - 1.1055728090000847);
      real_t tmp_259 = tmp_258*tmp_26;
      real_t tmp_260 = -tmp_159 - tmp_213 + tmp_259;
      real_t tmp_261 = -tmp_163 - tmp_216 + tmp_258*tmp_32;
      real_t tmp_262 = tmp_20*(tmp_218 + tmp_242 + 2.8944271909999153);
      real_t tmp_263 = tmp_262*tmp_28;
      real_t tmp_264 = -tmp_167 - tmp_194 + tmp_263;
      real_t tmp_265 = -tmp_170 - tmp_197 + tmp_262*tmp_33;
      real_t tmp_266 = tmp_20*(tmp_224 + tmp_247 + 2.8944271909999153);
      real_t tmp_267 = tmp_266*tmp_28;
      real_t tmp_268 = -tmp_174 - tmp_200 + tmp_267;
      real_t tmp_269 = -tmp_177 - tmp_203 + tmp_266*tmp_33;
      real_t tmp_270 = tmp_20*(tmp_230 + tmp_252 - 0.68328157299974634);
      real_t tmp_271 = tmp_270*tmp_28;
      real_t tmp_272 = -tmp_181 - tmp_206 + tmp_271;
      real_t tmp_273 = -tmp_184 - tmp_209 + tmp_270*tmp_33;
      real_t tmp_274 = tmp_20*(tmp_236 + tmp_257 + 2.8944271909999153);
      real_t tmp_275 = tmp_274*tmp_28;
      real_t tmp_276 = -tmp_188 - tmp_212 + tmp_275;
      real_t tmp_277 = -tmp_191 - tmp_215 + tmp_274*tmp_33;
      real_t tmp_278 = tmp_33*tmp_91;
      real_t tmp_279 = (2.0/3.0)*tmp_20;
      real_t tmp_280 = tmp_279*tmp_30;
      real_t tmp_281 = 1.0*tmp_93;
      real_t tmp_282 = tmp_279*tmp_33;
      real_t tmp_283 = tmp_282*tmp_97;
      real_t tmp_284 = 1.0*tmp_98;
      real_t tmp_285 = tmp_100*tmp_282;
      real_t tmp_286 = 1.0*tmp_101;
      real_t tmp_287 = tmp_103*tmp_282;
      real_t tmp_288 = 1.0*tmp_104;
      real_t tmp_289 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_290 = 5.3333333333333339*tmp_289;
      real_t tmp_291 = tmp_290*tmp_51;
      real_t tmp_292 = tmp_28*tmp_33;
      real_t tmp_293 = tmp_290*tmp_292;
      real_t tmp_294 = 1.0*tmp_289;
      real_t tmp_295 = tmp_106*tmp_32;
      real_t tmp_296 = tmp_28*tmp_91;
      real_t tmp_297 = tmp_295*tmp_296;
      real_t tmp_298 = (2.0/3.0)*tmp_289;
      real_t tmp_299 = tmp_26*tmp_298;
      real_t tmp_300 = tmp_106*tmp_278;
      real_t tmp_301 = tmp_111*tmp_97;
      real_t tmp_302 = tmp_28*tmp_294;
      real_t tmp_303 = tmp_302*tmp_32;
      real_t tmp_304 = tmp_299*tmp_33;
      real_t tmp_305 = tmp_100*tmp_114;
      real_t tmp_306 = tmp_103*tmp_117;
      real_t tmp_307 = tmp_120*tmp_31;
      real_t tmp_308 = tmp_294*tmp_307;
      real_t tmp_309 = tmp_298*tmp_6;
      real_t tmp_310 = tmp_120*tmp_309;
      real_t tmp_311 = tmp_125*tmp_97;
      real_t tmp_312 = tmp_302*tmp_31;
      real_t tmp_313 = tmp_309*tmp_33;
      real_t tmp_314 = tmp_100*tmp_128;
      real_t tmp_315 = tmp_103*tmp_131;
      real_t tmp_316 = tmp_278*tmp_279;
      real_t tmp_317 = 1.0*tmp_108;
      real_t tmp_318 = tmp_279*tmp_32;
      real_t tmp_319 = tmp_111*tmp_318;
      real_t tmp_320 = 1.0*tmp_112;
      real_t tmp_321 = tmp_114*tmp_318;
      real_t tmp_322 = 1.0*tmp_115;
      real_t tmp_323 = tmp_117*tmp_318;
      real_t tmp_324 = 1.0*tmp_118;
      real_t tmp_325 = tmp_26*tmp_294;
      real_t tmp_326 = tmp_28*tmp_298;
      real_t tmp_327 = tmp_32*tmp_326;
      real_t tmp_328 = tmp_325*tmp_33;
      real_t tmp_329 = tmp_26*tmp_32;
      real_t tmp_330 = tmp_290*tmp_329;
      real_t tmp_331 = tmp_111*tmp_125;
      real_t tmp_332 = tmp_31*tmp_325;
      real_t tmp_333 = tmp_309*tmp_32;
      real_t tmp_334 = tmp_114*tmp_128;
      real_t tmp_335 = tmp_117*tmp_131;
      real_t tmp_336 = tmp_279*tmp_295;
      real_t tmp_337 = 1.0*tmp_122;
      real_t tmp_338 = tmp_279*tmp_31;
      real_t tmp_339 = tmp_125*tmp_338;
      real_t tmp_340 = 1.0*tmp_126;
      real_t tmp_341 = tmp_128*tmp_338;
      real_t tmp_342 = 1.0*tmp_129;
      real_t tmp_343 = tmp_131*tmp_338;
      real_t tmp_344 = 1.0*tmp_132;
      real_t tmp_345 = tmp_294*tmp_6;
      real_t tmp_346 = tmp_120*tmp_345;
      real_t tmp_347 = tmp_31*tmp_326;
      real_t tmp_348 = tmp_33*tmp_345;
      real_t tmp_349 = tmp_299*tmp_31;
      real_t tmp_350 = tmp_32*tmp_345;
      real_t tmp_351 = tmp_31*tmp_6;
      real_t tmp_352 = tmp_290*tmp_351;
      real_t tmp_353 = tmp_279*tmp_307;
      real_t tmp_354 = (2.0/3.0)*tmp_141;
      real_t tmp_355 = tmp_6*tmp_94;
      real_t tmp_356 = 0.13819660112501059*tmp_355;
      real_t tmp_357 = tmp_26*tmp_94;
      real_t tmp_358 = 0.58541019662496829*tmp_357;
      real_t tmp_359 = tmp_356 + tmp_358;
      real_t tmp_360 = 2*tmp_359;
      real_t tmp_361 = (2.0/3.0)*tmp_149;
      real_t tmp_362 = 0.58541019662496829*tmp_355;
      real_t tmp_363 = 0.13819660112501059*tmp_357;
      real_t tmp_364 = tmp_362 + tmp_363;
      real_t tmp_365 = 2*tmp_364;
      real_t tmp_366 = (2.0/3.0)*tmp_157;
      real_t tmp_367 = 0.13819660112501059*tmp_355;
      real_t tmp_368 = 0.13819660112501059*tmp_357;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = 2*tmp_369;
      real_t tmp_371 = (2.0/3.0)*tmp_165;
      real_t tmp_372 = 0.13819660112501059*tmp_355;
      real_t tmp_373 = 0.13819660112501059*tmp_357;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = 2*tmp_374;
      real_t tmp_376 = (2.0/3.0)*tmp_172;
      real_t tmp_377 = 0.13819660112501059*tmp_355;
      real_t tmp_378 = tmp_28*tmp_94;
      real_t tmp_379 = 0.58541019662496829*tmp_378;
      real_t tmp_380 = tmp_377 + tmp_379;
      real_t tmp_381 = 2*tmp_380;
      real_t tmp_382 = (2.0/3.0)*tmp_179;
      real_t tmp_383 = 0.13819660112501059*tmp_355;
      real_t tmp_384 = 0.13819660112501059*tmp_378;
      real_t tmp_385 = tmp_383 + tmp_384;
      real_t tmp_386 = 2*tmp_385;
      real_t tmp_387 = (2.0/3.0)*tmp_186;
      real_t tmp_388 = 0.58541019662496829*tmp_355;
      real_t tmp_389 = 0.13819660112501059*tmp_378;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = 2*tmp_390;
      real_t tmp_392 = (2.0/3.0)*tmp_193;
      real_t tmp_393 = 0.13819660112501059*tmp_355;
      real_t tmp_394 = 0.13819660112501059*tmp_378;
      real_t tmp_395 = tmp_393 + tmp_394;
      real_t tmp_396 = 2*tmp_395;
      real_t tmp_397 = (2.0/3.0)*tmp_199;
      real_t tmp_398 = 0.13819660112501059*tmp_357;
      real_t tmp_399 = 0.13819660112501059*tmp_378;
      real_t tmp_400 = tmp_398 + tmp_399;
      real_t tmp_401 = 2*tmp_400;
      real_t tmp_402 = (2.0/3.0)*tmp_205;
      real_t tmp_403 = 0.13819660112501059*tmp_357;
      real_t tmp_404 = 0.58541019662496829*tmp_378;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = 2*tmp_405;
      real_t tmp_407 = (2.0/3.0)*tmp_211;
      real_t tmp_408 = 0.58541019662496829*tmp_357;
      real_t tmp_409 = 0.13819660112501059*tmp_378;
      real_t tmp_410 = tmp_408 + tmp_409;
      real_t tmp_411 = 2*tmp_410;
      real_t tmp_412 = (2.0/3.0)*tmp_217;
      real_t tmp_413 = 0.13819660112501059*tmp_357;
      real_t tmp_414 = 0.13819660112501059*tmp_378;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = 2*tmp_415;
      real_t tmp_417 = (2.0/3.0)*tmp_223;
      real_t tmp_418 = 0.5*tmp_221 - tmp_358 - tmp_379;
      real_t tmp_419 = 2*tmp_418;
      real_t tmp_420 = (2.0/3.0)*tmp_229;
      real_t tmp_421 = 0.5*tmp_227 - tmp_363 - tmp_384;
      real_t tmp_422 = 2*tmp_421;
      real_t tmp_423 = (2.0/3.0)*tmp_235;
      real_t tmp_424 = 0.5*tmp_233 - tmp_368 - tmp_389;
      real_t tmp_425 = 2*tmp_424;
      real_t tmp_426 = (2.0/3.0)*tmp_241;
      real_t tmp_427 = 0.5*tmp_239 - tmp_373 - tmp_394;
      real_t tmp_428 = 2*tmp_427;
      real_t tmp_429 = (2.0/3.0)*tmp_246;
      real_t tmp_430 = 0.5*tmp_244 - tmp_356 - tmp_399;
      real_t tmp_431 = 2*tmp_430;
      real_t tmp_432 = (2.0/3.0)*tmp_251;
      real_t tmp_433 = 0.5*tmp_249 - tmp_362 - tmp_404;
      real_t tmp_434 = 2*tmp_433;
      real_t tmp_435 = (2.0/3.0)*tmp_256;
      real_t tmp_436 = 0.5*tmp_254 - tmp_367 - tmp_409;
      real_t tmp_437 = 2*tmp_436;
      real_t tmp_438 = (2.0/3.0)*tmp_261;
      real_t tmp_439 = 0.5*tmp_259 - tmp_372 - tmp_414;
      real_t tmp_440 = 2*tmp_439;
      real_t tmp_441 = (2.0/3.0)*tmp_265;
      real_t tmp_442 = 0.5*tmp_263 - tmp_377 - tmp_398;
      real_t tmp_443 = 2*tmp_442;
      real_t tmp_444 = (2.0/3.0)*tmp_269;
      real_t tmp_445 = 0.5*tmp_267 - tmp_383 - tmp_403;
      real_t tmp_446 = 2*tmp_445;
      real_t tmp_447 = (2.0/3.0)*tmp_273;
      real_t tmp_448 = 0.5*tmp_271 - tmp_388 - tmp_408;
      real_t tmp_449 = 2*tmp_448;
      real_t tmp_450 = (2.0/3.0)*tmp_277;
      real_t tmp_451 = 0.5*tmp_275 - tmp_393 - tmp_413;
      real_t tmp_452 = 2*tmp_451;
      real_t a_0_0 = tmp_51*(-tmp_30*tmp_35 + tmp_34*tmp_37) + tmp_64*(-tmp_59*tmp_61 + tmp_60*tmp_63) + tmp_77*(-tmp_72*tmp_74 + tmp_73*tmp_76) + tmp_90*(-tmp_85*tmp_87 + tmp_86*tmp_89);
      real_t a_0_1 = tmp_51*(-tmp_35*tmp_93 + tmp_36*tmp_96) + tmp_64*(-tmp_61*tmp_98 + tmp_62*tmp_99) + tmp_77*(-tmp_101*tmp_74 + tmp_102*tmp_75) + tmp_90*(-tmp_104*tmp_87 + tmp_105*tmp_88);
      real_t a_0_2 = tmp_51*(-tmp_108*tmp_35 + tmp_110*tmp_36) + tmp_64*(-tmp_112*tmp_61 + tmp_113*tmp_62) + tmp_77*(-tmp_115*tmp_74 + tmp_116*tmp_75) + tmp_90*(-tmp_118*tmp_87 + tmp_119*tmp_88);
      real_t a_0_3 = tmp_51*(-tmp_122*tmp_35 + tmp_124*tmp_36) + tmp_64*(-tmp_126*tmp_61 + tmp_127*tmp_62) + tmp_77*(-tmp_129*tmp_74 + tmp_130*tmp_75) + tmp_90*(-tmp_132*tmp_87 + tmp_133*tmp_88);
      real_t a_0_4 = tmp_51*(-tmp_138*tmp_35 + tmp_141*tmp_37) + tmp_64*(-tmp_146*tmp_61 + tmp_149*tmp_63) + tmp_77*(-tmp_154*tmp_74 + tmp_157*tmp_76) + tmp_90*(-tmp_162*tmp_87 + tmp_165*tmp_89);
      real_t a_0_5 = tmp_51*(-tmp_169*tmp_35 + tmp_172*tmp_37) + tmp_64*(-tmp_176*tmp_61 + tmp_179*tmp_63) + tmp_77*(-tmp_183*tmp_74 + tmp_186*tmp_76) + tmp_90*(-tmp_190*tmp_87 + tmp_193*tmp_89);
      real_t a_0_6 = tmp_51*(-tmp_196*tmp_35 + tmp_199*tmp_37) + tmp_64*(-tmp_202*tmp_61 + tmp_205*tmp_63) + tmp_77*(-tmp_208*tmp_74 + tmp_211*tmp_76) + tmp_90*(-tmp_214*tmp_87 + tmp_217*tmp_89);
      real_t a_0_7 = tmp_51*(-tmp_222*tmp_35 + tmp_223*tmp_37) + tmp_64*(-tmp_228*tmp_61 + tmp_229*tmp_63) + tmp_77*(-tmp_234*tmp_74 + tmp_235*tmp_76) + tmp_90*(-tmp_240*tmp_87 + tmp_241*tmp_89);
      real_t a_0_8 = tmp_51*(-tmp_245*tmp_35 + tmp_246*tmp_37) + tmp_64*(-tmp_250*tmp_61 + tmp_251*tmp_63) + tmp_77*(-tmp_255*tmp_74 + tmp_256*tmp_76) + tmp_90*(-tmp_260*tmp_87 + tmp_261*tmp_89);
      real_t a_0_9 = tmp_51*(-tmp_264*tmp_35 + tmp_265*tmp_37) + tmp_64*(-tmp_268*tmp_61 + tmp_269*tmp_63) + tmp_77*(-tmp_272*tmp_74 + tmp_273*tmp_76) + tmp_90*(-tmp_276*tmp_87 + tmp_277*tmp_89);
      real_t a_1_0 = tmp_51*(-tmp_278*tmp_280 + tmp_281*tmp_34) + tmp_64*(-tmp_283*tmp_59 + tmp_284*tmp_60) + tmp_77*(-tmp_285*tmp_72 + tmp_286*tmp_73) + tmp_90*(-tmp_287*tmp_85 + tmp_288*tmp_86);
      real_t a_1_1 = 0.012499999999999983*tmp_291*tmp_292 + 0.012499999999999983*tmp_293*tmp_64 + 0.11249999999999989*tmp_293*tmp_77 + 0.012499999999999983*tmp_293*tmp_90;
      real_t a_1_2 = tmp_51*(tmp_294*tmp_297 - tmp_299*tmp_300) + tmp_64*(tmp_301*tmp_303 - tmp_301*tmp_304) + tmp_77*(tmp_303*tmp_305 - tmp_304*tmp_305) + tmp_90*(tmp_303*tmp_306 - tmp_304*tmp_306);
      real_t a_1_3 = tmp_51*(-tmp_278*tmp_310 + tmp_296*tmp_308) + tmp_64*(tmp_311*tmp_312 - tmp_311*tmp_313) + tmp_77*(tmp_312*tmp_314 - tmp_313*tmp_314) + tmp_90*(tmp_312*tmp_315 - tmp_313*tmp_315);
      real_t a_1_4 = tmp_51*(-tmp_138*tmp_316 + tmp_141*tmp_281) + tmp_64*(-tmp_146*tmp_283 + tmp_149*tmp_284) + tmp_77*(-tmp_154*tmp_285 + tmp_157*tmp_286) + tmp_90*(-tmp_162*tmp_287 + tmp_165*tmp_288);
      real_t a_1_5 = tmp_51*(-tmp_169*tmp_316 + tmp_172*tmp_281) + tmp_64*(-tmp_176*tmp_283 + tmp_179*tmp_284) + tmp_77*(-tmp_183*tmp_285 + tmp_186*tmp_286) + tmp_90*(-tmp_190*tmp_287 + tmp_193*tmp_288);
      real_t a_1_6 = tmp_51*(-tmp_196*tmp_316 + tmp_199*tmp_281) + tmp_64*(-tmp_202*tmp_283 + tmp_205*tmp_284) + tmp_77*(-tmp_208*tmp_285 + tmp_211*tmp_286) + tmp_90*(-tmp_214*tmp_287 + tmp_217*tmp_288);
      real_t a_1_7 = tmp_51*(-tmp_222*tmp_316 + tmp_223*tmp_281) + tmp_64*(-tmp_228*tmp_283 + tmp_229*tmp_284) + tmp_77*(-tmp_234*tmp_285 + tmp_235*tmp_286) + tmp_90*(-tmp_240*tmp_287 + tmp_241*tmp_288);
      real_t a_1_8 = tmp_51*(-tmp_245*tmp_316 + tmp_246*tmp_281) + tmp_64*(-tmp_250*tmp_283 + tmp_251*tmp_284) + tmp_77*(-tmp_255*tmp_285 + tmp_256*tmp_286) + tmp_90*(-tmp_260*tmp_287 + tmp_261*tmp_288);
      real_t a_1_9 = tmp_51*(-tmp_264*tmp_316 + tmp_265*tmp_281) + tmp_64*(-tmp_268*tmp_283 + tmp_269*tmp_284) + tmp_77*(-tmp_272*tmp_285 + tmp_273*tmp_286) + tmp_90*(-tmp_276*tmp_287 + tmp_277*tmp_288);
      real_t a_2_0 = tmp_51*(-tmp_280*tmp_295 + tmp_317*tmp_34) + tmp_64*(-tmp_319*tmp_59 + tmp_320*tmp_60) + tmp_77*(-tmp_321*tmp_72 + tmp_322*tmp_73) + tmp_90*(-tmp_323*tmp_85 + tmp_324*tmp_86);
      real_t a_2_1 = tmp_51*(-tmp_297*tmp_298 + tmp_300*tmp_325) + tmp_64*(-tmp_301*tmp_327 + tmp_301*tmp_328) + tmp_77*(-tmp_305*tmp_327 + tmp_305*tmp_328) + tmp_90*(-tmp_306*tmp_327 + tmp_306*tmp_328);
      real_t a_2_2 = 0.012499999999999983*tmp_291*tmp_329 + 0.11249999999999989*tmp_330*tmp_64 + 0.012499999999999983*tmp_330*tmp_77 + 0.012499999999999983*tmp_330*tmp_90;
      real_t a_2_3 = tmp_51*(tmp_106*tmp_26*tmp_308 - tmp_295*tmp_310) + tmp_64*(tmp_331*tmp_332 - tmp_331*tmp_333) + tmp_77*(tmp_332*tmp_334 - tmp_333*tmp_334) + tmp_90*(tmp_332*tmp_335 - tmp_333*tmp_335);
      real_t a_2_4 = tmp_51*(-tmp_138*tmp_336 + tmp_141*tmp_317) + tmp_64*(-tmp_146*tmp_319 + tmp_149*tmp_320) + tmp_77*(-tmp_154*tmp_321 + tmp_157*tmp_322) + tmp_90*(-tmp_162*tmp_323 + tmp_165*tmp_324);
      real_t a_2_5 = tmp_51*(-tmp_169*tmp_336 + tmp_172*tmp_317) + tmp_64*(-tmp_176*tmp_319 + tmp_179*tmp_320) + tmp_77*(-tmp_183*tmp_321 + tmp_186*tmp_322) + tmp_90*(-tmp_190*tmp_323 + tmp_193*tmp_324);
      real_t a_2_6 = tmp_51*(-tmp_196*tmp_336 + tmp_199*tmp_317) + tmp_64*(-tmp_202*tmp_319 + tmp_205*tmp_320) + tmp_77*(-tmp_208*tmp_321 + tmp_211*tmp_322) + tmp_90*(-tmp_214*tmp_323 + tmp_217*tmp_324);
      real_t a_2_7 = tmp_51*(-tmp_222*tmp_336 + tmp_223*tmp_317) + tmp_64*(-tmp_228*tmp_319 + tmp_229*tmp_320) + tmp_77*(-tmp_234*tmp_321 + tmp_235*tmp_322) + tmp_90*(-tmp_240*tmp_323 + tmp_241*tmp_324);
      real_t a_2_8 = tmp_51*(-tmp_245*tmp_336 + tmp_246*tmp_317) + tmp_64*(-tmp_250*tmp_319 + tmp_251*tmp_320) + tmp_77*(-tmp_255*tmp_321 + tmp_256*tmp_322) + tmp_90*(-tmp_260*tmp_323 + tmp_261*tmp_324);
      real_t a_2_9 = tmp_51*(-tmp_264*tmp_336 + tmp_265*tmp_317) + tmp_64*(-tmp_268*tmp_319 + tmp_269*tmp_320) + tmp_77*(-tmp_272*tmp_321 + tmp_273*tmp_322) + tmp_90*(-tmp_276*tmp_323 + tmp_277*tmp_324);
      real_t a_3_0 = tmp_51*(-tmp_280*tmp_307 + tmp_337*tmp_34) + tmp_64*(-tmp_339*tmp_59 + tmp_340*tmp_60) + tmp_77*(-tmp_341*tmp_72 + tmp_342*tmp_73) + tmp_90*(-tmp_343*tmp_85 + tmp_344*tmp_86);
      real_t a_3_1 = tmp_51*(tmp_278*tmp_346 - tmp_296*tmp_298*tmp_307) + tmp_64*(-tmp_311*tmp_347 + tmp_311*tmp_348) + tmp_77*(-tmp_314*tmp_347 + tmp_314*tmp_348) + tmp_90*(-tmp_315*tmp_347 + tmp_315*tmp_348);
      real_t a_3_2 = tmp_51*(-tmp_106*tmp_299*tmp_307 + tmp_295*tmp_346) + tmp_64*(-tmp_331*tmp_349 + tmp_331*tmp_350) + tmp_77*(-tmp_334*tmp_349 + tmp_334*tmp_350) + tmp_90*(-tmp_335*tmp_349 + tmp_335*tmp_350);
      real_t a_3_3 = 0.11249999999999989*tmp_291*tmp_351 + 0.012499999999999983*tmp_352*tmp_64 + 0.012499999999999983*tmp_352*tmp_77 + 0.012499999999999983*tmp_352*tmp_90;
      real_t a_3_4 = tmp_51*(-tmp_138*tmp_353 + tmp_141*tmp_337) + tmp_64*(-tmp_146*tmp_339 + tmp_149*tmp_340) + tmp_77*(-tmp_154*tmp_341 + tmp_157*tmp_342) + tmp_90*(-tmp_162*tmp_343 + tmp_165*tmp_344);
      real_t a_3_5 = tmp_51*(-tmp_169*tmp_353 + tmp_172*tmp_337) + tmp_64*(-tmp_176*tmp_339 + tmp_179*tmp_340) + tmp_77*(-tmp_183*tmp_341 + tmp_186*tmp_342) + tmp_90*(-tmp_190*tmp_343 + tmp_193*tmp_344);
      real_t a_3_6 = tmp_51*(-tmp_196*tmp_353 + tmp_199*tmp_337) + tmp_64*(-tmp_202*tmp_339 + tmp_205*tmp_340) + tmp_77*(-tmp_208*tmp_341 + tmp_211*tmp_342) + tmp_90*(-tmp_214*tmp_343 + tmp_217*tmp_344);
      real_t a_3_7 = tmp_51*(-tmp_222*tmp_353 + tmp_223*tmp_337) + tmp_64*(-tmp_228*tmp_339 + tmp_229*tmp_340) + tmp_77*(-tmp_234*tmp_341 + tmp_235*tmp_342) + tmp_90*(-tmp_240*tmp_343 + tmp_241*tmp_344);
      real_t a_3_8 = tmp_51*(-tmp_245*tmp_353 + tmp_246*tmp_337) + tmp_64*(-tmp_250*tmp_339 + tmp_251*tmp_340) + tmp_77*(-tmp_255*tmp_341 + tmp_256*tmp_342) + tmp_90*(-tmp_260*tmp_343 + tmp_261*tmp_344);
      real_t a_3_9 = tmp_51*(-tmp_264*tmp_353 + tmp_265*tmp_337) + tmp_64*(-tmp_268*tmp_339 + tmp_269*tmp_340) + tmp_77*(-tmp_272*tmp_341 + tmp_273*tmp_342) + tmp_90*(-tmp_276*tmp_343 + tmp_277*tmp_344);
      real_t a_4_0 = tmp_51*(-tmp_30*tmp_354 + tmp_34*tmp_360) + tmp_64*(-tmp_361*tmp_59 + tmp_365*tmp_60) + tmp_77*(-tmp_366*tmp_72 + tmp_370*tmp_73) + tmp_90*(-tmp_371*tmp_85 + tmp_375*tmp_86);
      real_t a_4_1 = tmp_51*(-tmp_354*tmp_93 + tmp_359*tmp_96) + tmp_64*(-tmp_361*tmp_98 + tmp_364*tmp_99) + tmp_77*(-tmp_101*tmp_366 + tmp_102*tmp_369) + tmp_90*(-tmp_104*tmp_371 + tmp_105*tmp_374);
      real_t a_4_2 = tmp_51*(-tmp_108*tmp_354 + tmp_110*tmp_359) + tmp_64*(-tmp_112*tmp_361 + tmp_113*tmp_364) + tmp_77*(-tmp_115*tmp_366 + tmp_116*tmp_369) + tmp_90*(-tmp_118*tmp_371 + tmp_119*tmp_374);
      real_t a_4_3 = tmp_51*(-tmp_122*tmp_354 + tmp_124*tmp_359) + tmp_64*(-tmp_126*tmp_361 + tmp_127*tmp_364) + tmp_77*(-tmp_129*tmp_366 + tmp_130*tmp_369) + tmp_90*(-tmp_132*tmp_371 + tmp_133*tmp_374);
      real_t a_4_4 = tmp_51*(-tmp_138*tmp_354 + tmp_141*tmp_360) + tmp_64*(-tmp_146*tmp_361 + tmp_149*tmp_365) + tmp_77*(-tmp_154*tmp_366 + tmp_157*tmp_370) + tmp_90*(-tmp_162*tmp_371 + tmp_165*tmp_375);
      real_t a_4_5 = tmp_51*(-tmp_169*tmp_354 + tmp_172*tmp_360) + tmp_64*(-tmp_176*tmp_361 + tmp_179*tmp_365) + tmp_77*(-tmp_183*tmp_366 + tmp_186*tmp_370) + tmp_90*(-tmp_190*tmp_371 + tmp_193*tmp_375);
      real_t a_4_6 = tmp_51*(-tmp_196*tmp_354 + tmp_199*tmp_360) + tmp_64*(-tmp_202*tmp_361 + tmp_205*tmp_365) + tmp_77*(-tmp_208*tmp_366 + tmp_211*tmp_370) + tmp_90*(-tmp_214*tmp_371 + tmp_217*tmp_375);
      real_t a_4_7 = tmp_51*(-tmp_222*tmp_354 + tmp_223*tmp_360) + tmp_64*(-tmp_228*tmp_361 + tmp_229*tmp_365) + tmp_77*(-tmp_234*tmp_366 + tmp_235*tmp_370) + tmp_90*(-tmp_240*tmp_371 + tmp_241*tmp_375);
      real_t a_4_8 = tmp_51*(-tmp_245*tmp_354 + tmp_246*tmp_360) + tmp_64*(-tmp_250*tmp_361 + tmp_251*tmp_365) + tmp_77*(-tmp_255*tmp_366 + tmp_256*tmp_370) + tmp_90*(-tmp_260*tmp_371 + tmp_261*tmp_375);
      real_t a_4_9 = tmp_51*(-tmp_264*tmp_354 + tmp_265*tmp_360) + tmp_64*(-tmp_268*tmp_361 + tmp_269*tmp_365) + tmp_77*(-tmp_272*tmp_366 + tmp_273*tmp_370) + tmp_90*(-tmp_276*tmp_371 + tmp_277*tmp_375);
      real_t a_5_0 = tmp_51*(-tmp_30*tmp_376 + tmp_34*tmp_381) + tmp_64*(-tmp_382*tmp_59 + tmp_386*tmp_60) + tmp_77*(-tmp_387*tmp_72 + tmp_391*tmp_73) + tmp_90*(-tmp_392*tmp_85 + tmp_396*tmp_86);
      real_t a_5_1 = tmp_51*(-tmp_376*tmp_93 + tmp_380*tmp_96) + tmp_64*(-tmp_382*tmp_98 + tmp_385*tmp_99) + tmp_77*(-tmp_101*tmp_387 + tmp_102*tmp_390) + tmp_90*(-tmp_104*tmp_392 + tmp_105*tmp_395);
      real_t a_5_2 = tmp_51*(-tmp_108*tmp_376 + tmp_110*tmp_380) + tmp_64*(-tmp_112*tmp_382 + tmp_113*tmp_385) + tmp_77*(-tmp_115*tmp_387 + tmp_116*tmp_390) + tmp_90*(-tmp_118*tmp_392 + tmp_119*tmp_395);
      real_t a_5_3 = tmp_51*(-tmp_122*tmp_376 + tmp_124*tmp_380) + tmp_64*(-tmp_126*tmp_382 + tmp_127*tmp_385) + tmp_77*(-tmp_129*tmp_387 + tmp_130*tmp_390) + tmp_90*(-tmp_132*tmp_392 + tmp_133*tmp_395);
      real_t a_5_4 = tmp_51*(-tmp_138*tmp_376 + tmp_141*tmp_381) + tmp_64*(-tmp_146*tmp_382 + tmp_149*tmp_386) + tmp_77*(-tmp_154*tmp_387 + tmp_157*tmp_391) + tmp_90*(-tmp_162*tmp_392 + tmp_165*tmp_396);
      real_t a_5_5 = tmp_51*(-tmp_169*tmp_376 + tmp_172*tmp_381) + tmp_64*(-tmp_176*tmp_382 + tmp_179*tmp_386) + tmp_77*(-tmp_183*tmp_387 + tmp_186*tmp_391) + tmp_90*(-tmp_190*tmp_392 + tmp_193*tmp_396);
      real_t a_5_6 = tmp_51*(-tmp_196*tmp_376 + tmp_199*tmp_381) + tmp_64*(-tmp_202*tmp_382 + tmp_205*tmp_386) + tmp_77*(-tmp_208*tmp_387 + tmp_211*tmp_391) + tmp_90*(-tmp_214*tmp_392 + tmp_217*tmp_396);
      real_t a_5_7 = tmp_51*(-tmp_222*tmp_376 + tmp_223*tmp_381) + tmp_64*(-tmp_228*tmp_382 + tmp_229*tmp_386) + tmp_77*(-tmp_234*tmp_387 + tmp_235*tmp_391) + tmp_90*(-tmp_240*tmp_392 + tmp_241*tmp_396);
      real_t a_5_8 = tmp_51*(-tmp_245*tmp_376 + tmp_246*tmp_381) + tmp_64*(-tmp_250*tmp_382 + tmp_251*tmp_386) + tmp_77*(-tmp_255*tmp_387 + tmp_256*tmp_391) + tmp_90*(-tmp_260*tmp_392 + tmp_261*tmp_396);
      real_t a_5_9 = tmp_51*(-tmp_264*tmp_376 + tmp_265*tmp_381) + tmp_64*(-tmp_268*tmp_382 + tmp_269*tmp_386) + tmp_77*(-tmp_272*tmp_387 + tmp_273*tmp_391) + tmp_90*(-tmp_276*tmp_392 + tmp_277*tmp_396);
      real_t a_6_0 = tmp_51*(-tmp_30*tmp_397 + tmp_34*tmp_401) + tmp_64*(-tmp_402*tmp_59 + tmp_406*tmp_60) + tmp_77*(-tmp_407*tmp_72 + tmp_411*tmp_73) + tmp_90*(-tmp_412*tmp_85 + tmp_416*tmp_86);
      real_t a_6_1 = tmp_51*(-tmp_397*tmp_93 + tmp_400*tmp_96) + tmp_64*(-tmp_402*tmp_98 + tmp_405*tmp_99) + tmp_77*(-tmp_101*tmp_407 + tmp_102*tmp_410) + tmp_90*(-tmp_104*tmp_412 + tmp_105*tmp_415);
      real_t a_6_2 = tmp_51*(-tmp_108*tmp_397 + tmp_110*tmp_400) + tmp_64*(-tmp_112*tmp_402 + tmp_113*tmp_405) + tmp_77*(-tmp_115*tmp_407 + tmp_116*tmp_410) + tmp_90*(-tmp_118*tmp_412 + tmp_119*tmp_415);
      real_t a_6_3 = tmp_51*(-tmp_122*tmp_397 + tmp_124*tmp_400) + tmp_64*(-tmp_126*tmp_402 + tmp_127*tmp_405) + tmp_77*(-tmp_129*tmp_407 + tmp_130*tmp_410) + tmp_90*(-tmp_132*tmp_412 + tmp_133*tmp_415);
      real_t a_6_4 = tmp_51*(-tmp_138*tmp_397 + tmp_141*tmp_401) + tmp_64*(-tmp_146*tmp_402 + tmp_149*tmp_406) + tmp_77*(-tmp_154*tmp_407 + tmp_157*tmp_411) + tmp_90*(-tmp_162*tmp_412 + tmp_165*tmp_416);
      real_t a_6_5 = tmp_51*(-tmp_169*tmp_397 + tmp_172*tmp_401) + tmp_64*(-tmp_176*tmp_402 + tmp_179*tmp_406) + tmp_77*(-tmp_183*tmp_407 + tmp_186*tmp_411) + tmp_90*(-tmp_190*tmp_412 + tmp_193*tmp_416);
      real_t a_6_6 = tmp_51*(-tmp_196*tmp_397 + tmp_199*tmp_401) + tmp_64*(-tmp_202*tmp_402 + tmp_205*tmp_406) + tmp_77*(-tmp_208*tmp_407 + tmp_211*tmp_411) + tmp_90*(-tmp_214*tmp_412 + tmp_217*tmp_416);
      real_t a_6_7 = tmp_51*(-tmp_222*tmp_397 + tmp_223*tmp_401) + tmp_64*(-tmp_228*tmp_402 + tmp_229*tmp_406) + tmp_77*(-tmp_234*tmp_407 + tmp_235*tmp_411) + tmp_90*(-tmp_240*tmp_412 + tmp_241*tmp_416);
      real_t a_6_8 = tmp_51*(-tmp_245*tmp_397 + tmp_246*tmp_401) + tmp_64*(-tmp_250*tmp_402 + tmp_251*tmp_406) + tmp_77*(-tmp_255*tmp_407 + tmp_256*tmp_411) + tmp_90*(-tmp_260*tmp_412 + tmp_261*tmp_416);
      real_t a_6_9 = tmp_51*(-tmp_264*tmp_397 + tmp_265*tmp_401) + tmp_64*(-tmp_268*tmp_402 + tmp_269*tmp_406) + tmp_77*(-tmp_272*tmp_407 + tmp_273*tmp_411) + tmp_90*(-tmp_276*tmp_412 + tmp_277*tmp_416);
      real_t a_7_0 = tmp_51*(-tmp_30*tmp_417 + tmp_34*tmp_419) + tmp_64*(-tmp_420*tmp_59 + tmp_422*tmp_60) + tmp_77*(-tmp_423*tmp_72 + tmp_425*tmp_73) + tmp_90*(-tmp_426*tmp_85 + tmp_428*tmp_86);
      real_t a_7_1 = tmp_51*(-tmp_417*tmp_93 + tmp_418*tmp_96) + tmp_64*(-tmp_420*tmp_98 + tmp_421*tmp_99) + tmp_77*(-tmp_101*tmp_423 + tmp_102*tmp_424) + tmp_90*(-tmp_104*tmp_426 + tmp_105*tmp_427);
      real_t a_7_2 = tmp_51*(-tmp_108*tmp_417 + tmp_110*tmp_418) + tmp_64*(-tmp_112*tmp_420 + tmp_113*tmp_421) + tmp_77*(-tmp_115*tmp_423 + tmp_116*tmp_424) + tmp_90*(-tmp_118*tmp_426 + tmp_119*tmp_427);
      real_t a_7_3 = tmp_51*(-tmp_122*tmp_417 + tmp_124*tmp_418) + tmp_64*(-tmp_126*tmp_420 + tmp_127*tmp_421) + tmp_77*(-tmp_129*tmp_423 + tmp_130*tmp_424) + tmp_90*(-tmp_132*tmp_426 + tmp_133*tmp_427);
      real_t a_7_4 = tmp_51*(-tmp_138*tmp_417 + tmp_141*tmp_419) + tmp_64*(-tmp_146*tmp_420 + tmp_149*tmp_422) + tmp_77*(-tmp_154*tmp_423 + tmp_157*tmp_425) + tmp_90*(-tmp_162*tmp_426 + tmp_165*tmp_428);
      real_t a_7_5 = tmp_51*(-tmp_169*tmp_417 + tmp_172*tmp_419) + tmp_64*(-tmp_176*tmp_420 + tmp_179*tmp_422) + tmp_77*(-tmp_183*tmp_423 + tmp_186*tmp_425) + tmp_90*(-tmp_190*tmp_426 + tmp_193*tmp_428);
      real_t a_7_6 = tmp_51*(-tmp_196*tmp_417 + tmp_199*tmp_419) + tmp_64*(-tmp_202*tmp_420 + tmp_205*tmp_422) + tmp_77*(-tmp_208*tmp_423 + tmp_211*tmp_425) + tmp_90*(-tmp_214*tmp_426 + tmp_217*tmp_428);
      real_t a_7_7 = tmp_51*(-tmp_222*tmp_417 + tmp_223*tmp_419) + tmp_64*(-tmp_228*tmp_420 + tmp_229*tmp_422) + tmp_77*(-tmp_234*tmp_423 + tmp_235*tmp_425) + tmp_90*(-tmp_240*tmp_426 + tmp_241*tmp_428);
      real_t a_7_8 = tmp_51*(-tmp_245*tmp_417 + tmp_246*tmp_419) + tmp_64*(-tmp_250*tmp_420 + tmp_251*tmp_422) + tmp_77*(-tmp_255*tmp_423 + tmp_256*tmp_425) + tmp_90*(-tmp_260*tmp_426 + tmp_261*tmp_428);
      real_t a_7_9 = tmp_51*(-tmp_264*tmp_417 + tmp_265*tmp_419) + tmp_64*(-tmp_268*tmp_420 + tmp_269*tmp_422) + tmp_77*(-tmp_272*tmp_423 + tmp_273*tmp_425) + tmp_90*(-tmp_276*tmp_426 + tmp_277*tmp_428);
      real_t a_8_0 = tmp_51*(-tmp_30*tmp_429 + tmp_34*tmp_431) + tmp_64*(-tmp_432*tmp_59 + tmp_434*tmp_60) + tmp_77*(-tmp_435*tmp_72 + tmp_437*tmp_73) + tmp_90*(-tmp_438*tmp_85 + tmp_440*tmp_86);
      real_t a_8_1 = tmp_51*(-tmp_429*tmp_93 + tmp_430*tmp_96) + tmp_64*(-tmp_432*tmp_98 + tmp_433*tmp_99) + tmp_77*(-tmp_101*tmp_435 + tmp_102*tmp_436) + tmp_90*(-tmp_104*tmp_438 + tmp_105*tmp_439);
      real_t a_8_2 = tmp_51*(-tmp_108*tmp_429 + tmp_110*tmp_430) + tmp_64*(-tmp_112*tmp_432 + tmp_113*tmp_433) + tmp_77*(-tmp_115*tmp_435 + tmp_116*tmp_436) + tmp_90*(-tmp_118*tmp_438 + tmp_119*tmp_439);
      real_t a_8_3 = tmp_51*(-tmp_122*tmp_429 + tmp_124*tmp_430) + tmp_64*(-tmp_126*tmp_432 + tmp_127*tmp_433) + tmp_77*(-tmp_129*tmp_435 + tmp_130*tmp_436) + tmp_90*(-tmp_132*tmp_438 + tmp_133*tmp_439);
      real_t a_8_4 = tmp_51*(-tmp_138*tmp_429 + tmp_141*tmp_431) + tmp_64*(-tmp_146*tmp_432 + tmp_149*tmp_434) + tmp_77*(-tmp_154*tmp_435 + tmp_157*tmp_437) + tmp_90*(-tmp_162*tmp_438 + tmp_165*tmp_440);
      real_t a_8_5 = tmp_51*(-tmp_169*tmp_429 + tmp_172*tmp_431) + tmp_64*(-tmp_176*tmp_432 + tmp_179*tmp_434) + tmp_77*(-tmp_183*tmp_435 + tmp_186*tmp_437) + tmp_90*(-tmp_190*tmp_438 + tmp_193*tmp_440);
      real_t a_8_6 = tmp_51*(-tmp_196*tmp_429 + tmp_199*tmp_431) + tmp_64*(-tmp_202*tmp_432 + tmp_205*tmp_434) + tmp_77*(-tmp_208*tmp_435 + tmp_211*tmp_437) + tmp_90*(-tmp_214*tmp_438 + tmp_217*tmp_440);
      real_t a_8_7 = tmp_51*(-tmp_222*tmp_429 + tmp_223*tmp_431) + tmp_64*(-tmp_228*tmp_432 + tmp_229*tmp_434) + tmp_77*(-tmp_234*tmp_435 + tmp_235*tmp_437) + tmp_90*(-tmp_240*tmp_438 + tmp_241*tmp_440);
      real_t a_8_8 = tmp_51*(-tmp_245*tmp_429 + tmp_246*tmp_431) + tmp_64*(-tmp_250*tmp_432 + tmp_251*tmp_434) + tmp_77*(-tmp_255*tmp_435 + tmp_256*tmp_437) + tmp_90*(-tmp_260*tmp_438 + tmp_261*tmp_440);
      real_t a_8_9 = tmp_51*(-tmp_264*tmp_429 + tmp_265*tmp_431) + tmp_64*(-tmp_268*tmp_432 + tmp_269*tmp_434) + tmp_77*(-tmp_272*tmp_435 + tmp_273*tmp_437) + tmp_90*(-tmp_276*tmp_438 + tmp_277*tmp_440);
      real_t a_9_0 = tmp_51*(-tmp_30*tmp_441 + tmp_34*tmp_443) + tmp_64*(-tmp_444*tmp_59 + tmp_446*tmp_60) + tmp_77*(-tmp_447*tmp_72 + tmp_449*tmp_73) + tmp_90*(-tmp_450*tmp_85 + tmp_452*tmp_86);
      real_t a_9_1 = tmp_51*(-tmp_441*tmp_93 + tmp_442*tmp_96) + tmp_64*(-tmp_444*tmp_98 + tmp_445*tmp_99) + tmp_77*(-tmp_101*tmp_447 + tmp_102*tmp_448) + tmp_90*(-tmp_104*tmp_450 + tmp_105*tmp_451);
      real_t a_9_2 = tmp_51*(-tmp_108*tmp_441 + tmp_110*tmp_442) + tmp_64*(-tmp_112*tmp_444 + tmp_113*tmp_445) + tmp_77*(-tmp_115*tmp_447 + tmp_116*tmp_448) + tmp_90*(-tmp_118*tmp_450 + tmp_119*tmp_451);
      real_t a_9_3 = tmp_51*(-tmp_122*tmp_441 + tmp_124*tmp_442) + tmp_64*(-tmp_126*tmp_444 + tmp_127*tmp_445) + tmp_77*(-tmp_129*tmp_447 + tmp_130*tmp_448) + tmp_90*(-tmp_132*tmp_450 + tmp_133*tmp_451);
      real_t a_9_4 = tmp_51*(-tmp_138*tmp_441 + tmp_141*tmp_443) + tmp_64*(-tmp_146*tmp_444 + tmp_149*tmp_446) + tmp_77*(-tmp_154*tmp_447 + tmp_157*tmp_449) + tmp_90*(-tmp_162*tmp_450 + tmp_165*tmp_452);
      real_t a_9_5 = tmp_51*(-tmp_169*tmp_441 + tmp_172*tmp_443) + tmp_64*(-tmp_176*tmp_444 + tmp_179*tmp_446) + tmp_77*(-tmp_183*tmp_447 + tmp_186*tmp_449) + tmp_90*(-tmp_190*tmp_450 + tmp_193*tmp_452);
      real_t a_9_6 = tmp_51*(-tmp_196*tmp_441 + tmp_199*tmp_443) + tmp_64*(-tmp_202*tmp_444 + tmp_205*tmp_446) + tmp_77*(-tmp_208*tmp_447 + tmp_211*tmp_449) + tmp_90*(-tmp_214*tmp_450 + tmp_217*tmp_452);
      real_t a_9_7 = tmp_51*(-tmp_222*tmp_441 + tmp_223*tmp_443) + tmp_64*(-tmp_228*tmp_444 + tmp_229*tmp_446) + tmp_77*(-tmp_234*tmp_447 + tmp_235*tmp_449) + tmp_90*(-tmp_240*tmp_450 + tmp_241*tmp_452);
      real_t a_9_8 = tmp_51*(-tmp_245*tmp_441 + tmp_246*tmp_443) + tmp_64*(-tmp_250*tmp_444 + tmp_251*tmp_446) + tmp_77*(-tmp_255*tmp_447 + tmp_256*tmp_449) + tmp_90*(-tmp_260*tmp_450 + tmp_261*tmp_452);
      real_t a_9_9 = tmp_51*(-tmp_264*tmp_441 + tmp_265*tmp_443) + tmp_64*(-tmp_268*tmp_444 + tmp_269*tmp_446) + tmp_77*(-tmp_272*tmp_447 + tmp_273*tmp_449) + tmp_90*(-tmp_276*tmp_450 + tmp_277*tmp_452);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_1_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_2_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_2;
      real_t tmp_3 = p_affine_1_2 + tmp_2;
      real_t tmp_4 = p_affine_1_0 + tmp_0;
      real_t tmp_5 = p_affine_2_2 + tmp_2;
      real_t tmp_6 = tmp_1*tmp_3 - tmp_4*tmp_5;
      real_t tmp_7 = p_affine_3_2 + tmp_2;
      real_t tmp_8 = -p_affine_0_1;
      real_t tmp_9 = p_affine_2_1 + tmp_8;
      real_t tmp_10 = tmp_4*tmp_9;
      real_t tmp_11 = p_affine_3_1 + tmp_8;
      real_t tmp_12 = tmp_1*tmp_11;
      real_t tmp_13 = p_affine_3_0 + tmp_0;
      real_t tmp_14 = p_affine_1_1 + tmp_8;
      real_t tmp_15 = tmp_13*tmp_14;
      real_t tmp_16 = tmp_11*tmp_4;
      real_t tmp_17 = tmp_1*tmp_14;
      real_t tmp_18 = tmp_13*tmp_9;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_7 + tmp_12*tmp_3 + tmp_15*tmp_5 - tmp_16*tmp_5 - tmp_17*tmp_7 - tmp_18*tmp_3);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_6;
      real_t tmp_25 = -tmp_13*tmp_3 + tmp_4*tmp_7;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = -tmp_1*tmp_7 + tmp_13*tmp_5;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_10 - tmp_17;
      real_t tmp_30 = tmp_15 - tmp_16;
      real_t tmp_31 = tmp_12 - tmp_18;
      real_t tmp_32 = tmp_23*tmp_29 + tmp_23*tmp_30 + tmp_23*tmp_31;
      real_t tmp_33 = (2.0/3.0)*tmp_32;
      real_t tmp_34 = 0.5*tmp_24 + 0.5*tmp_26 + 0.5*tmp_28;
      real_t tmp_35 = 2*tmp_34;
      real_t tmp_36 = p_affine_0_0*p_affine_1_1;
      real_t tmp_37 = p_affine_0_0*p_affine_1_2;
      real_t tmp_38 = p_affine_2_1*p_affine_3_2;
      real_t tmp_39 = p_affine_0_1*p_affine_1_0;
      real_t tmp_40 = p_affine_0_1*p_affine_1_2;
      real_t tmp_41 = p_affine_2_2*p_affine_3_0;
      real_t tmp_42 = p_affine_0_2*p_affine_1_0;
      real_t tmp_43 = p_affine_0_2*p_affine_1_1;
      real_t tmp_44 = p_affine_2_0*p_affine_3_1;
      real_t tmp_45 = p_affine_2_2*p_affine_3_1;
      real_t tmp_46 = p_affine_2_0*p_affine_3_2;
      real_t tmp_47 = p_affine_2_1*p_affine_3_0;
      real_t tmp_48 = std::abs(p_affine_0_0*tmp_38 - p_affine_0_0*tmp_45 + p_affine_0_1*tmp_41 - p_affine_0_1*tmp_46 + p_affine_0_2*tmp_44 - p_affine_0_2*tmp_47 - p_affine_1_0*tmp_38 + p_affine_1_0*tmp_45 - p_affine_1_1*tmp_41 + p_affine_1_1*tmp_46 - p_affine_1_2*tmp_44 + p_affine_1_2*tmp_47 + p_affine_2_0*tmp_40 - p_affine_2_0*tmp_43 - p_affine_2_1*tmp_37 + p_affine_2_1*tmp_42 + p_affine_2_2*tmp_36 - p_affine_2_2*tmp_39 - p_affine_3_0*tmp_40 + p_affine_3_0*tmp_43 + p_affine_3_1*tmp_37 - p_affine_3_1*tmp_42 - p_affine_3_2*tmp_36 + p_affine_3_2*tmp_39);
      real_t tmp_49 = 0.041666666666666657*tmp_48;
      real_t tmp_50 = 0.55278640450004235;
      real_t tmp_51 = 2.3416407864998732;
      real_t tmp_52 = 0.55278640450004235;
      real_t tmp_53 = tmp_19*(tmp_50 + tmp_51 + tmp_52 - 3.0);
      real_t tmp_54 = tmp_53*tmp_6;
      real_t tmp_55 = tmp_25*tmp_53;
      real_t tmp_56 = tmp_27*tmp_53;
      real_t tmp_57 = tmp_29*tmp_53 + tmp_30*tmp_53 + tmp_31*tmp_53;
      real_t tmp_58 = (2.0/3.0)*tmp_57;
      real_t tmp_59 = 0.5*tmp_54 + 0.5*tmp_55 + 0.5*tmp_56;
      real_t tmp_60 = 2*tmp_59;
      real_t tmp_61 = 0.041666666666666657*tmp_48;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = 0.55278640450004235;
      real_t tmp_65 = tmp_19*(tmp_62 + tmp_63 + tmp_64 - 3.0);
      real_t tmp_66 = tmp_6*tmp_65;
      real_t tmp_67 = tmp_25*tmp_65;
      real_t tmp_68 = tmp_27*tmp_65;
      real_t tmp_69 = tmp_29*tmp_65 + tmp_30*tmp_65 + tmp_31*tmp_65;
      real_t tmp_70 = (2.0/3.0)*tmp_69;
      real_t tmp_71 = 0.5*tmp_66 + 0.5*tmp_67 + 0.5*tmp_68;
      real_t tmp_72 = 2*tmp_71;
      real_t tmp_73 = 0.041666666666666657*tmp_48;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = 0.55278640450004235;
      real_t tmp_76 = 0.55278640450004235;
      real_t tmp_77 = tmp_19*(tmp_74 + tmp_75 + tmp_76 - 3.0);
      real_t tmp_78 = tmp_6*tmp_77;
      real_t tmp_79 = tmp_25*tmp_77;
      real_t tmp_80 = tmp_27*tmp_77;
      real_t tmp_81 = tmp_29*tmp_77 + tmp_30*tmp_77 + tmp_31*tmp_77;
      real_t tmp_82 = (2.0/3.0)*tmp_81;
      real_t tmp_83 = 0.5*tmp_78 + 0.5*tmp_79 + 0.5*tmp_80;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 0.041666666666666657*tmp_48;
      real_t tmp_86 = tmp_19*(tmp_20 - 1.0);
      real_t tmp_87 = 2.0*tmp_31;
      real_t tmp_88 = tmp_19*(tmp_50 - 1.0);
      real_t tmp_89 = tmp_19*(tmp_62 - 1.0);
      real_t tmp_90 = tmp_19*(tmp_74 - 1.0);
      real_t tmp_91 = tmp_19*(tmp_21 - 1.0);
      real_t tmp_92 = 2.0*tmp_30;
      real_t tmp_93 = tmp_19*(tmp_51 - 1.0);
      real_t tmp_94 = tmp_19*(tmp_63 - 1.0);
      real_t tmp_95 = tmp_19*(tmp_75 - 1.0);
      real_t tmp_96 = tmp_19*(tmp_22 - 1.0);
      real_t tmp_97 = 2.0*tmp_29;
      real_t tmp_98 = tmp_19*(tmp_52 - 1.0);
      real_t tmp_99 = tmp_19*(tmp_64 - 1.0);
      real_t tmp_100 = tmp_19*(tmp_76 - 1.0);
      real_t tmp_101 = tmp_19*tmp_21;
      real_t tmp_102 = tmp_101*tmp_6;
      real_t tmp_103 = tmp_19*tmp_22;
      real_t tmp_104 = tmp_103*tmp_25;
      real_t tmp_105 = tmp_101*tmp_29;
      real_t tmp_106 = tmp_103*tmp_30;
      real_t tmp_107 = tmp_19*tmp_51;
      real_t tmp_108 = tmp_107*tmp_6;
      real_t tmp_109 = tmp_19*tmp_52;
      real_t tmp_110 = tmp_109*tmp_25;
      real_t tmp_111 = tmp_107*tmp_29;
      real_t tmp_112 = tmp_109*tmp_30;
      real_t tmp_113 = tmp_19*tmp_63;
      real_t tmp_114 = tmp_113*tmp_6;
      real_t tmp_115 = tmp_19*tmp_64;
      real_t tmp_116 = tmp_115*tmp_25;
      real_t tmp_117 = tmp_113*tmp_29;
      real_t tmp_118 = tmp_115*tmp_30;
      real_t tmp_119 = tmp_19*tmp_75;
      real_t tmp_120 = tmp_119*tmp_6;
      real_t tmp_121 = tmp_19*tmp_76;
      real_t tmp_122 = tmp_121*tmp_25;
      real_t tmp_123 = tmp_119*tmp_29;
      real_t tmp_124 = tmp_121*tmp_30;
      real_t tmp_125 = tmp_19*tmp_20;
      real_t tmp_126 = tmp_125*tmp_6;
      real_t tmp_127 = tmp_103*tmp_27;
      real_t tmp_128 = tmp_125*tmp_29;
      real_t tmp_129 = tmp_103*tmp_31;
      real_t tmp_130 = tmp_19*tmp_50;
      real_t tmp_131 = tmp_130*tmp_6;
      real_t tmp_132 = tmp_109*tmp_27;
      real_t tmp_133 = tmp_130*tmp_29;
      real_t tmp_134 = tmp_109*tmp_31;
      real_t tmp_135 = tmp_19*tmp_62;
      real_t tmp_136 = tmp_135*tmp_6;
      real_t tmp_137 = tmp_115*tmp_27;
      real_t tmp_138 = tmp_135*tmp_29;
      real_t tmp_139 = tmp_115*tmp_31;
      real_t tmp_140 = tmp_19*tmp_74;
      real_t tmp_141 = tmp_140*tmp_6;
      real_t tmp_142 = tmp_121*tmp_27;
      real_t tmp_143 = tmp_140*tmp_29;
      real_t tmp_144 = tmp_121*tmp_31;
      real_t tmp_145 = tmp_125*tmp_25;
      real_t tmp_146 = tmp_101*tmp_27;
      real_t tmp_147 = tmp_125*tmp_30;
      real_t tmp_148 = tmp_101*tmp_31;
      real_t tmp_149 = tmp_130*tmp_25;
      real_t tmp_150 = tmp_107*tmp_27;
      real_t tmp_151 = tmp_130*tmp_30;
      real_t tmp_152 = tmp_107*tmp_31;
      real_t tmp_153 = tmp_135*tmp_25;
      real_t tmp_154 = tmp_113*tmp_27;
      real_t tmp_155 = tmp_135*tmp_30;
      real_t tmp_156 = tmp_113*tmp_31;
      real_t tmp_157 = tmp_140*tmp_25;
      real_t tmp_158 = tmp_119*tmp_27;
      real_t tmp_159 = tmp_140*tmp_30;
      real_t tmp_160 = tmp_119*tmp_31;
      real_t tmp_161 = -tmp_21;
      real_t tmp_162 = 4.0 - tmp_20;
      real_t tmp_163 = tmp_19*(tmp_161 + tmp_162 - 4.6832815729997463);
      real_t tmp_164 = -tmp_51;
      real_t tmp_165 = 4.0 - tmp_50;
      real_t tmp_166 = tmp_19*(tmp_164 + tmp_165 - 1.1055728090000847);
      real_t tmp_167 = -tmp_63;
      real_t tmp_168 = 4.0 - tmp_62;
      real_t tmp_169 = tmp_19*(tmp_167 + tmp_168 - 1.1055728090000847);
      real_t tmp_170 = -tmp_75;
      real_t tmp_171 = 4.0 - tmp_74;
      real_t tmp_172 = tmp_19*(tmp_170 + tmp_171 - 1.1055728090000847);
      real_t tmp_173 = -tmp_22;
      real_t tmp_174 = tmp_19*(tmp_162 + tmp_173 - 1.1055728090000847);
      real_t tmp_175 = -tmp_52;
      real_t tmp_176 = tmp_19*(tmp_165 + tmp_175 - 4.6832815729997463);
      real_t tmp_177 = -tmp_64;
      real_t tmp_178 = tmp_19*(tmp_168 + tmp_177 - 1.1055728090000847);
      real_t tmp_179 = -tmp_76;
      real_t tmp_180 = tmp_19*(tmp_171 + tmp_179 - 1.1055728090000847);
      real_t tmp_181 = tmp_19*(tmp_161 + tmp_173 + 2.8944271909999153);
      real_t tmp_182 = tmp_19*(tmp_164 + tmp_175 + 2.8944271909999153);
      real_t tmp_183 = tmp_19*(tmp_167 + tmp_177 - 0.68328157299974634);
      real_t tmp_184 = tmp_19*(tmp_170 + tmp_179 + 2.8944271909999153);
      real_t a_0_0 = tmp_49*(tmp_32*tmp_35 - tmp_33*(tmp_24 + tmp_26 + tmp_28)) + tmp_61*(tmp_57*tmp_60 - tmp_58*(tmp_54 + tmp_55 + tmp_56)) + tmp_73*(tmp_69*tmp_72 - tmp_70*(tmp_66 + tmp_67 + tmp_68)) + tmp_85*(tmp_81*tmp_84 - tmp_82*(tmp_78 + tmp_79 + tmp_80));
      real_t a_0_1 = tmp_49*(-tmp_27*tmp_33*tmp_86 + tmp_34*tmp_86*tmp_87) + tmp_61*(-tmp_27*tmp_58*tmp_88 + tmp_59*tmp_87*tmp_88) + tmp_73*(-tmp_27*tmp_70*tmp_89 + tmp_71*tmp_87*tmp_89) + tmp_85*(-tmp_27*tmp_82*tmp_90 + tmp_83*tmp_87*tmp_90);
      real_t a_0_2 = tmp_49*(-tmp_25*tmp_33*tmp_91 + tmp_34*tmp_91*tmp_92) + tmp_61*(-tmp_25*tmp_58*tmp_93 + tmp_59*tmp_92*tmp_93) + tmp_73*(-tmp_25*tmp_70*tmp_94 + tmp_71*tmp_92*tmp_94) + tmp_85*(-tmp_25*tmp_82*tmp_95 + tmp_83*tmp_92*tmp_95);
      real_t a_0_3 = tmp_49*(-tmp_33*tmp_6*tmp_96 + tmp_34*tmp_96*tmp_97) + tmp_61*(-tmp_58*tmp_6*tmp_98 + tmp_59*tmp_97*tmp_98) + tmp_73*(-tmp_6*tmp_70*tmp_99 + tmp_71*tmp_97*tmp_99) + tmp_85*(-tmp_100*tmp_6*tmp_82 + tmp_100*tmp_83*tmp_97);
      real_t a_0_4 = tmp_49*(-tmp_33*(tmp_102 + tmp_104) + tmp_35*(tmp_105 + tmp_106)) + tmp_61*(-tmp_58*(tmp_108 + tmp_110) + tmp_60*(tmp_111 + tmp_112)) + tmp_73*(-tmp_70*(tmp_114 + tmp_116) + tmp_72*(tmp_117 + tmp_118)) + tmp_85*(-tmp_82*(tmp_120 + tmp_122) + tmp_84*(tmp_123 + tmp_124));
      real_t a_0_5 = tmp_49*(-tmp_33*(tmp_126 + tmp_127) + tmp_35*(tmp_128 + tmp_129)) + tmp_61*(-tmp_58*(tmp_131 + tmp_132) + tmp_60*(tmp_133 + tmp_134)) + tmp_73*(-tmp_70*(tmp_136 + tmp_137) + tmp_72*(tmp_138 + tmp_139)) + tmp_85*(-tmp_82*(tmp_141 + tmp_142) + tmp_84*(tmp_143 + tmp_144));
      real_t a_0_6 = tmp_49*(-tmp_33*(tmp_145 + tmp_146) + tmp_35*(tmp_147 + tmp_148)) + tmp_61*(-tmp_58*(tmp_149 + tmp_150) + tmp_60*(tmp_151 + tmp_152)) + tmp_73*(-tmp_70*(tmp_153 + tmp_154) + tmp_72*(tmp_155 + tmp_156)) + tmp_85*(-tmp_82*(tmp_157 + tmp_158) + tmp_84*(tmp_159 + tmp_160));
      real_t a_0_7 = tmp_49*(-tmp_33*(-tmp_104 - tmp_127 + tmp_163*tmp_6) + tmp_35*(-tmp_106 - tmp_129 + tmp_163*tmp_29)) + tmp_61*(-tmp_58*(-tmp_110 - tmp_132 + tmp_166*tmp_6) + tmp_60*(-tmp_112 - tmp_134 + tmp_166*tmp_29)) + tmp_73*(-tmp_70*(-tmp_116 - tmp_137 + tmp_169*tmp_6) + tmp_72*(-tmp_118 - tmp_139 + tmp_169*tmp_29)) + tmp_85*(-tmp_82*(-tmp_122 - tmp_142 + tmp_172*tmp_6) + tmp_84*(-tmp_124 - tmp_144 + tmp_172*tmp_29));
      real_t a_0_8 = tmp_49*(-tmp_33*(-tmp_102 - tmp_146 + tmp_174*tmp_25) + tmp_35*(-tmp_105 - tmp_148 + tmp_174*tmp_30)) + tmp_61*(-tmp_58*(-tmp_108 - tmp_150 + tmp_176*tmp_25) + tmp_60*(-tmp_111 - tmp_152 + tmp_176*tmp_30)) + tmp_73*(-tmp_70*(-tmp_114 - tmp_154 + tmp_178*tmp_25) + tmp_72*(-tmp_117 - tmp_156 + tmp_178*tmp_30)) + tmp_85*(-tmp_82*(-tmp_120 - tmp_158 + tmp_180*tmp_25) + tmp_84*(-tmp_123 - tmp_160 + tmp_180*tmp_30));
      real_t a_0_9 = tmp_49*(-tmp_33*(-tmp_126 - tmp_145 + tmp_181*tmp_27) + tmp_35*(-tmp_128 - tmp_147 + tmp_181*tmp_31)) + tmp_61*(-tmp_58*(-tmp_131 - tmp_149 + tmp_182*tmp_27) + tmp_60*(-tmp_133 - tmp_151 + tmp_182*tmp_31)) + tmp_73*(-tmp_70*(-tmp_136 - tmp_153 + tmp_183*tmp_27) + tmp_72*(-tmp_138 - tmp_155 + tmp_183*tmp_31)) + tmp_85*(-tmp_82*(-tmp_141 - tmp_157 + tmp_184*tmp_27) + tmp_84*(-tmp_143 - tmp_159 + tmp_184*tmp_31));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_full_stokescc_2_2_affine_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_2_affine_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_full_stokescc_2_2_affine_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17;
      real_t tmp_20 = 1.0 / (tmp_19);
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 0.55278640450004235;
      real_t tmp_23 = 2.3416407864998732;
      real_t tmp_24 = tmp_20*(tmp_21 + tmp_22 + tmp_23 - 3.0);
      real_t tmp_25 = tmp_24*tmp_8;
      real_t tmp_26 = tmp_16 - tmp_17;
      real_t tmp_27 = tmp_24*tmp_26;
      real_t tmp_28 = tmp_13 - tmp_18;
      real_t tmp_29 = tmp_24*tmp_28;
      real_t tmp_30 = tmp_25 + tmp_27 + tmp_29;
      real_t tmp_31 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_32 = tmp_24*tmp_31;
      real_t tmp_33 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_34 = tmp_24*tmp_33;
      real_t tmp_35 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_36 = tmp_24*tmp_35;
      real_t tmp_37 = tmp_32 + tmp_34 + tmp_36;
      real_t tmp_38 = 0.5*tmp_32 + 0.5*tmp_34 + 0.5*tmp_36;
      real_t tmp_39 = 2*tmp_38;
      real_t tmp_40 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_41 = tmp_24*tmp_40;
      real_t tmp_42 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_43 = tmp_24*tmp_42;
      real_t tmp_44 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_41 + tmp_43 + tmp_45;
      real_t tmp_47 = 0.5*tmp_41 + 0.5*tmp_43 + 0.5*tmp_45;
      real_t tmp_48 = 2*tmp_47;
      real_t tmp_49 = 1.0*tmp_25 + 1.0*tmp_27 + 1.0*tmp_29;
      real_t tmp_50 = 2.0*tmp_25 + 2.0*tmp_27 + 2.0*tmp_29;
      real_t tmp_51 = p_affine_0_0*p_affine_1_1;
      real_t tmp_52 = p_affine_0_0*p_affine_1_2;
      real_t tmp_53 = p_affine_2_1*p_affine_3_2;
      real_t tmp_54 = p_affine_0_1*p_affine_1_0;
      real_t tmp_55 = p_affine_0_1*p_affine_1_2;
      real_t tmp_56 = p_affine_2_2*p_affine_3_0;
      real_t tmp_57 = p_affine_0_2*p_affine_1_0;
      real_t tmp_58 = p_affine_0_2*p_affine_1_1;
      real_t tmp_59 = p_affine_2_0*p_affine_3_1;
      real_t tmp_60 = p_affine_2_2*p_affine_3_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_2;
      real_t tmp_62 = p_affine_2_1*p_affine_3_0;
      real_t tmp_63 = std::abs(p_affine_0_0*tmp_53 - p_affine_0_0*tmp_60 + p_affine_0_1*tmp_56 - p_affine_0_1*tmp_61 + p_affine_0_2*tmp_59 - p_affine_0_2*tmp_62 - p_affine_1_0*tmp_53 + p_affine_1_0*tmp_60 - p_affine_1_1*tmp_56 + p_affine_1_1*tmp_61 - p_affine_1_2*tmp_59 + p_affine_1_2*tmp_62 + p_affine_2_0*tmp_55 - p_affine_2_0*tmp_58 - p_affine_2_1*tmp_52 + p_affine_2_1*tmp_57 + p_affine_2_2*tmp_51 - p_affine_2_2*tmp_54 - p_affine_3_0*tmp_55 + p_affine_3_0*tmp_58 + p_affine_3_1*tmp_52 - p_affine_3_1*tmp_57 - p_affine_3_2*tmp_51 + p_affine_3_2*tmp_54);
      real_t tmp_64 = 0.041666666666666657*tmp_63;
      real_t tmp_65 = 0.55278640450004235;
      real_t tmp_66 = 2.3416407864998732;
      real_t tmp_67 = 0.55278640450004235;
      real_t tmp_68 = tmp_20*(tmp_65 + tmp_66 + tmp_67 - 3.0);
      real_t tmp_69 = tmp_68*tmp_8;
      real_t tmp_70 = tmp_26*tmp_68;
      real_t tmp_71 = tmp_28*tmp_68;
      real_t tmp_72 = tmp_69 + tmp_70 + tmp_71;
      real_t tmp_73 = tmp_31*tmp_68;
      real_t tmp_74 = tmp_33*tmp_68;
      real_t tmp_75 = tmp_35*tmp_68;
      real_t tmp_76 = tmp_73 + tmp_74 + tmp_75;
      real_t tmp_77 = 0.5*tmp_73 + 0.5*tmp_74 + 0.5*tmp_75;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = tmp_40*tmp_68;
      real_t tmp_80 = tmp_42*tmp_68;
      real_t tmp_81 = tmp_44*tmp_68;
      real_t tmp_82 = tmp_79 + tmp_80 + tmp_81;
      real_t tmp_83 = 0.5*tmp_79 + 0.5*tmp_80 + 0.5*tmp_81;
      real_t tmp_84 = 2*tmp_83;
      real_t tmp_85 = 1.0*tmp_69 + 1.0*tmp_70 + 1.0*tmp_71;
      real_t tmp_86 = 2.0*tmp_69 + 2.0*tmp_70 + 2.0*tmp_71;
      real_t tmp_87 = 0.041666666666666657*tmp_63;
      real_t tmp_88 = 2.3416407864998732;
      real_t tmp_89 = 0.55278640450004235;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_20*(tmp_88 + tmp_89 + tmp_90 - 3.0);
      real_t tmp_92 = tmp_8*tmp_91;
      real_t tmp_93 = tmp_26*tmp_91;
      real_t tmp_94 = tmp_28*tmp_91;
      real_t tmp_95 = tmp_92 + tmp_93 + tmp_94;
      real_t tmp_96 = tmp_31*tmp_91;
      real_t tmp_97 = tmp_33*tmp_91;
      real_t tmp_98 = tmp_35*tmp_91;
      real_t tmp_99 = tmp_96 + tmp_97 + tmp_98;
      real_t tmp_100 = 0.5*tmp_96 + 0.5*tmp_97 + 0.5*tmp_98;
      real_t tmp_101 = 2*tmp_100;
      real_t tmp_102 = tmp_40*tmp_91;
      real_t tmp_103 = tmp_42*tmp_91;
      real_t tmp_104 = tmp_44*tmp_91;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104;
      real_t tmp_106 = 0.5*tmp_102 + 0.5*tmp_103 + 0.5*tmp_104;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = 1.0*tmp_92 + 1.0*tmp_93 + 1.0*tmp_94;
      real_t tmp_109 = 2.0*tmp_92 + 2.0*tmp_93 + 2.0*tmp_94;
      real_t tmp_110 = 0.041666666666666657*tmp_63;
      real_t tmp_111 = 0.55278640450004235;
      real_t tmp_112 = 0.55278640450004235;
      real_t tmp_113 = 0.55278640450004235;
      real_t tmp_114 = tmp_20*(tmp_111 + tmp_112 + tmp_113 - 3.0);
      real_t tmp_115 = tmp_114*tmp_8;
      real_t tmp_116 = tmp_114*tmp_26;
      real_t tmp_117 = tmp_114*tmp_28;
      real_t tmp_118 = tmp_115 + tmp_116 + tmp_117;
      real_t tmp_119 = tmp_114*tmp_31;
      real_t tmp_120 = tmp_114*tmp_33;
      real_t tmp_121 = tmp_114*tmp_35;
      real_t tmp_122 = tmp_119 + tmp_120 + tmp_121;
      real_t tmp_123 = 0.5*tmp_119 + 0.5*tmp_120 + 0.5*tmp_121;
      real_t tmp_124 = 2*tmp_123;
      real_t tmp_125 = tmp_114*tmp_40;
      real_t tmp_126 = tmp_114*tmp_42;
      real_t tmp_127 = tmp_114*tmp_44;
      real_t tmp_128 = tmp_125 + tmp_126 + tmp_127;
      real_t tmp_129 = 0.5*tmp_125 + 0.5*tmp_126 + 0.5*tmp_127;
      real_t tmp_130 = 2*tmp_129;
      real_t tmp_131 = 1.0*tmp_115 + 1.0*tmp_116 + 1.0*tmp_117;
      real_t tmp_132 = 2.0*tmp_115 + 2.0*tmp_116 + 2.0*tmp_117;
      real_t tmp_133 = 0.041666666666666657*tmp_63;
      real_t tmp_134 = (2.0/3.0)*tmp_30;
      real_t tmp_135 = tmp_21 - 1.0;
      real_t tmp_136 = tmp_20*tmp_28;
      real_t tmp_137 = tmp_135*tmp_136;
      real_t tmp_138 = -tmp_134*tmp_137;
      real_t tmp_139 = 2.0*tmp_49;
      real_t tmp_140 = 2.0*tmp_20;
      real_t tmp_141 = tmp_135*tmp_140;
      real_t tmp_142 = tmp_141*tmp_35;
      real_t tmp_143 = tmp_141*tmp_44;
      real_t tmp_144 = (2.0/3.0)*tmp_72;
      real_t tmp_145 = tmp_65 - 1.0;
      real_t tmp_146 = tmp_136*tmp_145;
      real_t tmp_147 = -tmp_144*tmp_146;
      real_t tmp_148 = 2.0*tmp_85;
      real_t tmp_149 = tmp_140*tmp_145;
      real_t tmp_150 = tmp_149*tmp_35;
      real_t tmp_151 = tmp_149*tmp_44;
      real_t tmp_152 = (2.0/3.0)*tmp_95;
      real_t tmp_153 = tmp_88 - 1.0;
      real_t tmp_154 = tmp_136*tmp_153;
      real_t tmp_155 = -tmp_152*tmp_154;
      real_t tmp_156 = 2.0*tmp_108;
      real_t tmp_157 = tmp_140*tmp_153;
      real_t tmp_158 = tmp_157*tmp_35;
      real_t tmp_159 = tmp_157*tmp_44;
      real_t tmp_160 = (2.0/3.0)*tmp_118;
      real_t tmp_161 = tmp_111 - 1.0;
      real_t tmp_162 = tmp_136*tmp_161;
      real_t tmp_163 = -tmp_160*tmp_162;
      real_t tmp_164 = 2.0*tmp_131;
      real_t tmp_165 = tmp_140*tmp_161;
      real_t tmp_166 = tmp_165*tmp_35;
      real_t tmp_167 = tmp_165*tmp_44;
      real_t tmp_168 = tmp_22 - 1.0;
      real_t tmp_169 = tmp_20*tmp_26;
      real_t tmp_170 = tmp_168*tmp_169;
      real_t tmp_171 = -tmp_134*tmp_170;
      real_t tmp_172 = tmp_140*tmp_168;
      real_t tmp_173 = tmp_172*tmp_33;
      real_t tmp_174 = tmp_172*tmp_42;
      real_t tmp_175 = tmp_66 - 1.0;
      real_t tmp_176 = tmp_169*tmp_175;
      real_t tmp_177 = -tmp_144*tmp_176;
      real_t tmp_178 = tmp_140*tmp_175;
      real_t tmp_179 = tmp_178*tmp_33;
      real_t tmp_180 = tmp_178*tmp_42;
      real_t tmp_181 = tmp_89 - 1.0;
      real_t tmp_182 = tmp_169*tmp_181;
      real_t tmp_183 = -tmp_152*tmp_182;
      real_t tmp_184 = tmp_140*tmp_181;
      real_t tmp_185 = tmp_184*tmp_33;
      real_t tmp_186 = tmp_184*tmp_42;
      real_t tmp_187 = tmp_112 - 1.0;
      real_t tmp_188 = tmp_169*tmp_187;
      real_t tmp_189 = -tmp_160*tmp_188;
      real_t tmp_190 = tmp_140*tmp_187;
      real_t tmp_191 = tmp_190*tmp_33;
      real_t tmp_192 = tmp_190*tmp_42;
      real_t tmp_193 = tmp_23 - 1.0;
      real_t tmp_194 = tmp_20*tmp_8;
      real_t tmp_195 = tmp_193*tmp_194;
      real_t tmp_196 = -tmp_134*tmp_195;
      real_t tmp_197 = tmp_140*tmp_193;
      real_t tmp_198 = tmp_197*tmp_31;
      real_t tmp_199 = tmp_197*tmp_40;
      real_t tmp_200 = tmp_67 - 1.0;
      real_t tmp_201 = tmp_194*tmp_200;
      real_t tmp_202 = -tmp_144*tmp_201;
      real_t tmp_203 = tmp_140*tmp_200;
      real_t tmp_204 = tmp_203*tmp_31;
      real_t tmp_205 = tmp_203*tmp_40;
      real_t tmp_206 = tmp_90 - 1.0;
      real_t tmp_207 = tmp_194*tmp_206;
      real_t tmp_208 = -tmp_152*tmp_207;
      real_t tmp_209 = tmp_140*tmp_206;
      real_t tmp_210 = tmp_209*tmp_31;
      real_t tmp_211 = tmp_209*tmp_40;
      real_t tmp_212 = tmp_113 - 1.0;
      real_t tmp_213 = tmp_194*tmp_212;
      real_t tmp_214 = -tmp_160*tmp_213;
      real_t tmp_215 = tmp_140*tmp_212;
      real_t tmp_216 = tmp_215*tmp_31;
      real_t tmp_217 = tmp_215*tmp_40;
      real_t tmp_218 = tmp_194*tmp_22;
      real_t tmp_219 = tmp_169*tmp_23;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = -tmp_134*tmp_220;
      real_t tmp_222 = 1.1055728090000847;
      real_t tmp_223 = tmp_194*tmp_222;
      real_t tmp_224 = 4.6832815729997463;
      real_t tmp_225 = tmp_169*tmp_224;
      real_t tmp_226 = tmp_223 + tmp_225;
      real_t tmp_227 = tmp_20*tmp_22;
      real_t tmp_228 = tmp_227*tmp_31;
      real_t tmp_229 = tmp_20*tmp_23;
      real_t tmp_230 = tmp_229*tmp_33;
      real_t tmp_231 = tmp_228 + tmp_230;
      real_t tmp_232 = tmp_227*tmp_40;
      real_t tmp_233 = tmp_229*tmp_42;
      real_t tmp_234 = tmp_232 + tmp_233;
      real_t tmp_235 = tmp_194*tmp_66;
      real_t tmp_236 = tmp_169*tmp_67;
      real_t tmp_237 = tmp_235 + tmp_236;
      real_t tmp_238 = -tmp_144*tmp_237;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_194*tmp_239;
      real_t tmp_241 = 1.1055728090000847;
      real_t tmp_242 = tmp_169*tmp_241;
      real_t tmp_243 = tmp_240 + tmp_242;
      real_t tmp_244 = tmp_20*tmp_66;
      real_t tmp_245 = tmp_244*tmp_31;
      real_t tmp_246 = tmp_20*tmp_67;
      real_t tmp_247 = tmp_246*tmp_33;
      real_t tmp_248 = tmp_245 + tmp_247;
      real_t tmp_249 = tmp_244*tmp_40;
      real_t tmp_250 = tmp_246*tmp_42;
      real_t tmp_251 = tmp_249 + tmp_250;
      real_t tmp_252 = tmp_194*tmp_89;
      real_t tmp_253 = tmp_169*tmp_90;
      real_t tmp_254 = tmp_252 + tmp_253;
      real_t tmp_255 = -tmp_152*tmp_254;
      real_t tmp_256 = 1.1055728090000847;
      real_t tmp_257 = tmp_194*tmp_256;
      real_t tmp_258 = 1.1055728090000847;
      real_t tmp_259 = tmp_169*tmp_258;
      real_t tmp_260 = tmp_257 + tmp_259;
      real_t tmp_261 = tmp_20*tmp_89;
      real_t tmp_262 = tmp_261*tmp_31;
      real_t tmp_263 = tmp_20*tmp_90;
      real_t tmp_264 = tmp_263*tmp_33;
      real_t tmp_265 = tmp_262 + tmp_264;
      real_t tmp_266 = tmp_261*tmp_40;
      real_t tmp_267 = tmp_263*tmp_42;
      real_t tmp_268 = tmp_266 + tmp_267;
      real_t tmp_269 = tmp_112*tmp_194;
      real_t tmp_270 = tmp_113*tmp_169;
      real_t tmp_271 = tmp_269 + tmp_270;
      real_t tmp_272 = -tmp_160*tmp_271;
      real_t tmp_273 = 1.1055728090000847;
      real_t tmp_274 = tmp_194*tmp_273;
      real_t tmp_275 = 1.1055728090000847;
      real_t tmp_276 = tmp_169*tmp_275;
      real_t tmp_277 = tmp_274 + tmp_276;
      real_t tmp_278 = tmp_112*tmp_20;
      real_t tmp_279 = tmp_278*tmp_31;
      real_t tmp_280 = tmp_113*tmp_20;
      real_t tmp_281 = tmp_280*tmp_33;
      real_t tmp_282 = tmp_279 + tmp_281;
      real_t tmp_283 = tmp_278*tmp_40;
      real_t tmp_284 = tmp_280*tmp_42;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_194*tmp_21;
      real_t tmp_287 = tmp_136*tmp_23;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = -tmp_134*tmp_288;
      real_t tmp_290 = 1.1055728090000847;
      real_t tmp_291 = tmp_194*tmp_290;
      real_t tmp_292 = tmp_136*tmp_224;
      real_t tmp_293 = tmp_291 + tmp_292;
      real_t tmp_294 = tmp_20*tmp_21;
      real_t tmp_295 = tmp_294*tmp_31;
      real_t tmp_296 = tmp_229*tmp_35;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_294*tmp_40;
      real_t tmp_299 = tmp_229*tmp_44;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_194*tmp_65;
      real_t tmp_302 = tmp_136*tmp_67;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = -tmp_144*tmp_303;
      real_t tmp_305 = 1.1055728090000847;
      real_t tmp_306 = tmp_194*tmp_305;
      real_t tmp_307 = tmp_136*tmp_241;
      real_t tmp_308 = tmp_306 + tmp_307;
      real_t tmp_309 = tmp_20*tmp_65;
      real_t tmp_310 = tmp_309*tmp_31;
      real_t tmp_311 = tmp_246*tmp_35;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_309*tmp_40;
      real_t tmp_314 = tmp_246*tmp_44;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_194*tmp_88;
      real_t tmp_317 = tmp_136*tmp_90;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = -tmp_152*tmp_318;
      real_t tmp_320 = 4.6832815729997463;
      real_t tmp_321 = tmp_194*tmp_320;
      real_t tmp_322 = tmp_136*tmp_258;
      real_t tmp_323 = tmp_321 + tmp_322;
      real_t tmp_324 = tmp_20*tmp_88;
      real_t tmp_325 = tmp_31*tmp_324;
      real_t tmp_326 = tmp_263*tmp_35;
      real_t tmp_327 = tmp_325 + tmp_326;
      real_t tmp_328 = tmp_324*tmp_40;
      real_t tmp_329 = tmp_263*tmp_44;
      real_t tmp_330 = tmp_328 + tmp_329;
      real_t tmp_331 = tmp_111*tmp_194;
      real_t tmp_332 = tmp_113*tmp_136;
      real_t tmp_333 = tmp_331 + tmp_332;
      real_t tmp_334 = -tmp_160*tmp_333;
      real_t tmp_335 = 1.1055728090000847;
      real_t tmp_336 = tmp_194*tmp_335;
      real_t tmp_337 = tmp_136*tmp_275;
      real_t tmp_338 = tmp_336 + tmp_337;
      real_t tmp_339 = tmp_111*tmp_20;
      real_t tmp_340 = tmp_31*tmp_339;
      real_t tmp_341 = tmp_280*tmp_35;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = tmp_339*tmp_40;
      real_t tmp_344 = tmp_280*tmp_44;
      real_t tmp_345 = tmp_343 + tmp_344;
      real_t tmp_346 = tmp_169*tmp_21;
      real_t tmp_347 = tmp_136*tmp_22;
      real_t tmp_348 = tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_134*tmp_348;
      real_t tmp_350 = tmp_169*tmp_290;
      real_t tmp_351 = tmp_136*tmp_222;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = tmp_294*tmp_33;
      real_t tmp_354 = tmp_227*tmp_35;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_294*tmp_42;
      real_t tmp_357 = tmp_227*tmp_44;
      real_t tmp_358 = tmp_356 + tmp_357;
      real_t tmp_359 = tmp_169*tmp_65;
      real_t tmp_360 = tmp_136*tmp_66;
      real_t tmp_361 = tmp_359 + tmp_360;
      real_t tmp_362 = -tmp_144*tmp_361;
      real_t tmp_363 = tmp_169*tmp_305;
      real_t tmp_364 = tmp_136*tmp_239;
      real_t tmp_365 = tmp_363 + tmp_364;
      real_t tmp_366 = tmp_309*tmp_33;
      real_t tmp_367 = tmp_244*tmp_35;
      real_t tmp_368 = tmp_366 + tmp_367;
      real_t tmp_369 = tmp_309*tmp_42;
      real_t tmp_370 = tmp_244*tmp_44;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_169*tmp_88;
      real_t tmp_373 = tmp_136*tmp_89;
      real_t tmp_374 = tmp_372 + tmp_373;
      real_t tmp_375 = -tmp_152*tmp_374;
      real_t tmp_376 = tmp_169*tmp_320;
      real_t tmp_377 = tmp_136*tmp_256;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_324*tmp_33;
      real_t tmp_380 = tmp_261*tmp_35;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_324*tmp_42;
      real_t tmp_383 = tmp_261*tmp_44;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_111*tmp_169;
      real_t tmp_386 = tmp_112*tmp_136;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = -tmp_160*tmp_387;
      real_t tmp_389 = tmp_169*tmp_335;
      real_t tmp_390 = tmp_136*tmp_273;
      real_t tmp_391 = tmp_389 + tmp_390;
      real_t tmp_392 = tmp_33*tmp_339;
      real_t tmp_393 = tmp_278*tmp_35;
      real_t tmp_394 = tmp_392 + tmp_393;
      real_t tmp_395 = tmp_339*tmp_42;
      real_t tmp_396 = tmp_278*tmp_44;
      real_t tmp_397 = tmp_395 + tmp_396;
      real_t tmp_398 = -tmp_22;
      real_t tmp_399 = 4.0 - tmp_21;
      real_t tmp_400 = tmp_20*(-tmp_224 + tmp_398 + tmp_399);
      real_t tmp_401 = tmp_400*tmp_8;
      real_t tmp_402 = -tmp_219 - tmp_287;
      real_t tmp_403 = tmp_401 + tmp_402;
      real_t tmp_404 = -tmp_134*tmp_403;
      real_t tmp_405 = -tmp_225 - tmp_292 + 2.0*tmp_401;
      real_t tmp_406 = tmp_31*tmp_400;
      real_t tmp_407 = -tmp_230 - tmp_296 + tmp_406;
      real_t tmp_408 = tmp_40*tmp_400;
      real_t tmp_409 = -tmp_233 - tmp_299 + tmp_408;
      real_t tmp_410 = -tmp_66;
      real_t tmp_411 = 4.0 - tmp_65;
      real_t tmp_412 = tmp_20*(-tmp_241 + tmp_410 + tmp_411);
      real_t tmp_413 = tmp_412*tmp_8;
      real_t tmp_414 = -tmp_236 - tmp_302;
      real_t tmp_415 = tmp_413 + tmp_414;
      real_t tmp_416 = -tmp_144*tmp_415;
      real_t tmp_417 = -tmp_242 - tmp_307 + 2.0*tmp_413;
      real_t tmp_418 = tmp_31*tmp_412;
      real_t tmp_419 = -tmp_247 - tmp_311 + tmp_418;
      real_t tmp_420 = tmp_40*tmp_412;
      real_t tmp_421 = -tmp_250 - tmp_314 + tmp_420;
      real_t tmp_422 = -tmp_89;
      real_t tmp_423 = 4.0 - tmp_88;
      real_t tmp_424 = tmp_20*(-tmp_258 + tmp_422 + tmp_423);
      real_t tmp_425 = tmp_424*tmp_8;
      real_t tmp_426 = -tmp_253 - tmp_317;
      real_t tmp_427 = tmp_425 + tmp_426;
      real_t tmp_428 = -tmp_152*tmp_427;
      real_t tmp_429 = -tmp_259 - tmp_322 + 2.0*tmp_425;
      real_t tmp_430 = tmp_31*tmp_424;
      real_t tmp_431 = -tmp_264 - tmp_326 + tmp_430;
      real_t tmp_432 = tmp_40*tmp_424;
      real_t tmp_433 = -tmp_267 - tmp_329 + tmp_432;
      real_t tmp_434 = -tmp_112;
      real_t tmp_435 = 4.0 - tmp_111;
      real_t tmp_436 = tmp_20*(-tmp_275 + tmp_434 + tmp_435);
      real_t tmp_437 = tmp_436*tmp_8;
      real_t tmp_438 = -tmp_270 - tmp_332;
      real_t tmp_439 = tmp_437 + tmp_438;
      real_t tmp_440 = -tmp_160*tmp_439;
      real_t tmp_441 = -tmp_276 - tmp_337 + 2.0*tmp_437;
      real_t tmp_442 = tmp_31*tmp_436;
      real_t tmp_443 = -tmp_281 - tmp_341 + tmp_442;
      real_t tmp_444 = tmp_40*tmp_436;
      real_t tmp_445 = -tmp_284 - tmp_344 + tmp_444;
      real_t tmp_446 = -tmp_23;
      real_t tmp_447 = tmp_20*(-tmp_222 + tmp_399 + tmp_446);
      real_t tmp_448 = tmp_26*tmp_447;
      real_t tmp_449 = -tmp_218 - tmp_347;
      real_t tmp_450 = tmp_448 + tmp_449;
      real_t tmp_451 = -tmp_134*tmp_450;
      real_t tmp_452 = -tmp_223 - tmp_351 + 2.0*tmp_448;
      real_t tmp_453 = tmp_33*tmp_447;
      real_t tmp_454 = -tmp_228 - tmp_354 + tmp_453;
      real_t tmp_455 = tmp_42*tmp_447;
      real_t tmp_456 = -tmp_232 - tmp_357 + tmp_455;
      real_t tmp_457 = -tmp_67;
      real_t tmp_458 = tmp_20*(-tmp_239 + tmp_411 + tmp_457);
      real_t tmp_459 = tmp_26*tmp_458;
      real_t tmp_460 = -tmp_235 - tmp_360;
      real_t tmp_461 = tmp_459 + tmp_460;
      real_t tmp_462 = -tmp_144*tmp_461;
      real_t tmp_463 = -tmp_240 - tmp_364 + 2.0*tmp_459;
      real_t tmp_464 = tmp_33*tmp_458;
      real_t tmp_465 = -tmp_245 - tmp_367 + tmp_464;
      real_t tmp_466 = tmp_42*tmp_458;
      real_t tmp_467 = -tmp_249 - tmp_370 + tmp_466;
      real_t tmp_468 = -tmp_90;
      real_t tmp_469 = tmp_20*(-tmp_256 + tmp_423 + tmp_468);
      real_t tmp_470 = tmp_26*tmp_469;
      real_t tmp_471 = -tmp_252 - tmp_373;
      real_t tmp_472 = tmp_470 + tmp_471;
      real_t tmp_473 = -tmp_152*tmp_472;
      real_t tmp_474 = -tmp_257 - tmp_377 + 2.0*tmp_470;
      real_t tmp_475 = tmp_33*tmp_469;
      real_t tmp_476 = -tmp_262 - tmp_380 + tmp_475;
      real_t tmp_477 = tmp_42*tmp_469;
      real_t tmp_478 = -tmp_266 - tmp_383 + tmp_477;
      real_t tmp_479 = -tmp_113;
      real_t tmp_480 = tmp_20*(-tmp_273 + tmp_435 + tmp_479);
      real_t tmp_481 = tmp_26*tmp_480;
      real_t tmp_482 = -tmp_269 - tmp_386;
      real_t tmp_483 = tmp_481 + tmp_482;
      real_t tmp_484 = -tmp_160*tmp_483;
      real_t tmp_485 = -tmp_274 - tmp_390 + 2.0*tmp_481;
      real_t tmp_486 = tmp_33*tmp_480;
      real_t tmp_487 = -tmp_279 - tmp_393 + tmp_486;
      real_t tmp_488 = tmp_42*tmp_480;
      real_t tmp_489 = -tmp_283 - tmp_396 + tmp_488;
      real_t tmp_490 = tmp_20*(-tmp_290 + tmp_398 + tmp_446 + 4.0);
      real_t tmp_491 = tmp_28*tmp_490;
      real_t tmp_492 = -tmp_286 - tmp_346;
      real_t tmp_493 = tmp_491 + tmp_492;
      real_t tmp_494 = -tmp_134*tmp_493;
      real_t tmp_495 = -tmp_291 - tmp_350 + 2.0*tmp_491;
      real_t tmp_496 = tmp_35*tmp_490;
      real_t tmp_497 = -tmp_295 - tmp_353 + tmp_496;
      real_t tmp_498 = tmp_44*tmp_490;
      real_t tmp_499 = -tmp_298 - tmp_356 + tmp_498;
      real_t tmp_500 = tmp_20*(-tmp_305 + tmp_410 + tmp_457 + 4.0);
      real_t tmp_501 = tmp_28*tmp_500;
      real_t tmp_502 = -tmp_301 - tmp_359;
      real_t tmp_503 = tmp_501 + tmp_502;
      real_t tmp_504 = -tmp_144*tmp_503;
      real_t tmp_505 = -tmp_306 - tmp_363 + 2.0*tmp_501;
      real_t tmp_506 = tmp_35*tmp_500;
      real_t tmp_507 = -tmp_310 - tmp_366 + tmp_506;
      real_t tmp_508 = tmp_44*tmp_500;
      real_t tmp_509 = -tmp_313 - tmp_369 + tmp_508;
      real_t tmp_510 = tmp_20*(-tmp_320 + tmp_422 + tmp_468 + 4.0);
      real_t tmp_511 = tmp_28*tmp_510;
      real_t tmp_512 = -tmp_316 - tmp_372;
      real_t tmp_513 = tmp_511 + tmp_512;
      real_t tmp_514 = -tmp_152*tmp_513;
      real_t tmp_515 = -tmp_321 - tmp_376 + 2.0*tmp_511;
      real_t tmp_516 = tmp_35*tmp_510;
      real_t tmp_517 = -tmp_325 - tmp_379 + tmp_516;
      real_t tmp_518 = tmp_44*tmp_510;
      real_t tmp_519 = -tmp_328 - tmp_382 + tmp_518;
      real_t tmp_520 = tmp_20*(-tmp_335 + tmp_434 + tmp_479 + 4.0);
      real_t tmp_521 = tmp_28*tmp_520;
      real_t tmp_522 = -tmp_331 - tmp_385;
      real_t tmp_523 = tmp_521 + tmp_522;
      real_t tmp_524 = -tmp_160*tmp_523;
      real_t tmp_525 = -tmp_336 - tmp_389 + 2.0*tmp_521;
      real_t tmp_526 = tmp_35*tmp_520;
      real_t tmp_527 = -tmp_340 - tmp_392 + tmp_526;
      real_t tmp_528 = tmp_44*tmp_520;
      real_t tmp_529 = -tmp_343 - tmp_395 + tmp_528;
      real_t tmp_530 = 1.0*tmp_20;
      real_t tmp_531 = tmp_135*tmp_530;
      real_t tmp_532 = tmp_35*tmp_531;
      real_t tmp_533 = tmp_44*tmp_531;
      real_t tmp_534 = 1.0*tmp_137;
      real_t tmp_535 = tmp_145*tmp_530;
      real_t tmp_536 = tmp_35*tmp_535;
      real_t tmp_537 = tmp_44*tmp_535;
      real_t tmp_538 = 1.0*tmp_146;
      real_t tmp_539 = tmp_153*tmp_530;
      real_t tmp_540 = tmp_35*tmp_539;
      real_t tmp_541 = tmp_44*tmp_539;
      real_t tmp_542 = 1.0*tmp_154;
      real_t tmp_543 = tmp_161*tmp_530;
      real_t tmp_544 = tmp_35*tmp_543;
      real_t tmp_545 = tmp_44*tmp_543;
      real_t tmp_546 = 1.0*tmp_162;
      real_t tmp_547 = 1.0 / (tmp_19*tmp_19);
      real_t tmp_548 = 0.012499999999999983*tmp_547;
      real_t tmp_549 = 21.333333333333336*(tmp_28*tmp_28);
      real_t tmp_550 = (tmp_35*tmp_35);
      real_t tmp_551 = 16.0*tmp_548;
      real_t tmp_552 = (tmp_44*tmp_44);
      real_t tmp_553 = 0.012499999999999983*tmp_547;
      real_t tmp_554 = 16.0*tmp_553;
      real_t tmp_555 = 0.11249999999999989*tmp_547;
      real_t tmp_556 = 16.0*tmp_555;
      real_t tmp_557 = 0.012499999999999983*tmp_547;
      real_t tmp_558 = 16.0*tmp_557;
      real_t tmp_559 = tmp_135*tmp_168;
      real_t tmp_560 = 1.3333333333333335*tmp_28*tmp_547;
      real_t tmp_561 = tmp_26*tmp_560;
      real_t tmp_562 = 1.0*tmp_547;
      real_t tmp_563 = tmp_35*tmp_562;
      real_t tmp_564 = tmp_33*tmp_563;
      real_t tmp_565 = tmp_44*tmp_562;
      real_t tmp_566 = tmp_42*tmp_565;
      real_t tmp_567 = tmp_145*tmp_175;
      real_t tmp_568 = tmp_153*tmp_181;
      real_t tmp_569 = tmp_161*tmp_187;
      real_t tmp_570 = tmp_110*(tmp_561*tmp_568 + tmp_564*tmp_568 + tmp_566*tmp_568) + tmp_133*(tmp_561*tmp_569 + tmp_564*tmp_569 + tmp_566*tmp_569) + tmp_64*(tmp_559*tmp_561 + tmp_559*tmp_564 + tmp_559*tmp_566) + tmp_87*(tmp_561*tmp_567 + tmp_564*tmp_567 + tmp_566*tmp_567);
      real_t tmp_571 = tmp_135*tmp_193;
      real_t tmp_572 = tmp_560*tmp_8;
      real_t tmp_573 = tmp_31*tmp_563;
      real_t tmp_574 = tmp_40*tmp_565;
      real_t tmp_575 = tmp_145*tmp_200;
      real_t tmp_576 = tmp_153*tmp_206;
      real_t tmp_577 = tmp_161*tmp_212;
      real_t tmp_578 = tmp_110*(tmp_572*tmp_576 + tmp_573*tmp_576 + tmp_574*tmp_576) + tmp_133*(tmp_572*tmp_577 + tmp_573*tmp_577 + tmp_574*tmp_577) + tmp_64*(tmp_571*tmp_572 + tmp_571*tmp_573 + tmp_571*tmp_574) + tmp_87*(tmp_572*tmp_575 + tmp_573*tmp_575 + tmp_574*tmp_575);
      real_t tmp_579 = (2.0/3.0)*tmp_220;
      real_t tmp_580 = (2.0/3.0)*tmp_237;
      real_t tmp_581 = (2.0/3.0)*tmp_254;
      real_t tmp_582 = (2.0/3.0)*tmp_271;
      real_t tmp_583 = (2.0/3.0)*tmp_288;
      real_t tmp_584 = (2.0/3.0)*tmp_303;
      real_t tmp_585 = (2.0/3.0)*tmp_318;
      real_t tmp_586 = (2.0/3.0)*tmp_333;
      real_t tmp_587 = (2.0/3.0)*tmp_348;
      real_t tmp_588 = (2.0/3.0)*tmp_361;
      real_t tmp_589 = (2.0/3.0)*tmp_374;
      real_t tmp_590 = (2.0/3.0)*tmp_387;
      real_t tmp_591 = (2.0/3.0)*tmp_403;
      real_t tmp_592 = -tmp_137*tmp_591;
      real_t tmp_593 = (2.0/3.0)*tmp_415;
      real_t tmp_594 = -tmp_146*tmp_593;
      real_t tmp_595 = (2.0/3.0)*tmp_427;
      real_t tmp_596 = -tmp_154*tmp_595;
      real_t tmp_597 = (2.0/3.0)*tmp_439;
      real_t tmp_598 = -tmp_162*tmp_597;
      real_t tmp_599 = (2.0/3.0)*tmp_450;
      real_t tmp_600 = -tmp_137*tmp_599;
      real_t tmp_601 = (2.0/3.0)*tmp_461;
      real_t tmp_602 = -tmp_146*tmp_601;
      real_t tmp_603 = (2.0/3.0)*tmp_472;
      real_t tmp_604 = -tmp_154*tmp_603;
      real_t tmp_605 = (2.0/3.0)*tmp_483;
      real_t tmp_606 = -tmp_162*tmp_605;
      real_t tmp_607 = (2.0/3.0)*tmp_493;
      real_t tmp_608 = -tmp_137*tmp_607;
      real_t tmp_609 = (2.0/3.0)*tmp_503;
      real_t tmp_610 = -tmp_146*tmp_609;
      real_t tmp_611 = (2.0/3.0)*tmp_513;
      real_t tmp_612 = -tmp_154*tmp_611;
      real_t tmp_613 = (2.0/3.0)*tmp_523;
      real_t tmp_614 = -tmp_162*tmp_613;
      real_t tmp_615 = tmp_168*tmp_530;
      real_t tmp_616 = tmp_33*tmp_615;
      real_t tmp_617 = tmp_42*tmp_615;
      real_t tmp_618 = 1.0*tmp_170;
      real_t tmp_619 = tmp_175*tmp_530;
      real_t tmp_620 = tmp_33*tmp_619;
      real_t tmp_621 = tmp_42*tmp_619;
      real_t tmp_622 = 1.0*tmp_176;
      real_t tmp_623 = tmp_181*tmp_530;
      real_t tmp_624 = tmp_33*tmp_623;
      real_t tmp_625 = tmp_42*tmp_623;
      real_t tmp_626 = 1.0*tmp_182;
      real_t tmp_627 = tmp_187*tmp_530;
      real_t tmp_628 = tmp_33*tmp_627;
      real_t tmp_629 = tmp_42*tmp_627;
      real_t tmp_630 = 1.0*tmp_188;
      real_t tmp_631 = 0.012499999999999983*tmp_547;
      real_t tmp_632 = 21.333333333333336*(tmp_26*tmp_26);
      real_t tmp_633 = (tmp_33*tmp_33);
      real_t tmp_634 = 16.0*tmp_631;
      real_t tmp_635 = (tmp_42*tmp_42);
      real_t tmp_636 = 0.11249999999999989*tmp_547;
      real_t tmp_637 = 16.0*tmp_636;
      real_t tmp_638 = 0.012499999999999983*tmp_547;
      real_t tmp_639 = 16.0*tmp_638;
      real_t tmp_640 = 0.012499999999999983*tmp_547;
      real_t tmp_641 = 16.0*tmp_640;
      real_t tmp_642 = tmp_168*tmp_193;
      real_t tmp_643 = 1.3333333333333335*tmp_26*tmp_547*tmp_8;
      real_t tmp_644 = tmp_562*tmp_642;
      real_t tmp_645 = tmp_31*tmp_33;
      real_t tmp_646 = tmp_40*tmp_42;
      real_t tmp_647 = tmp_175*tmp_200;
      real_t tmp_648 = tmp_562*tmp_645;
      real_t tmp_649 = tmp_562*tmp_646;
      real_t tmp_650 = tmp_181*tmp_206;
      real_t tmp_651 = tmp_187*tmp_212;
      real_t tmp_652 = tmp_110*(tmp_643*tmp_650 + tmp_648*tmp_650 + tmp_649*tmp_650) + tmp_133*(tmp_643*tmp_651 + tmp_648*tmp_651 + tmp_649*tmp_651) + tmp_64*(tmp_642*tmp_643 + tmp_644*tmp_645 + tmp_644*tmp_646) + tmp_87*(tmp_643*tmp_647 + tmp_647*tmp_648 + tmp_647*tmp_649);
      real_t tmp_653 = -tmp_170*tmp_591;
      real_t tmp_654 = -tmp_176*tmp_593;
      real_t tmp_655 = -tmp_182*tmp_595;
      real_t tmp_656 = -tmp_188*tmp_597;
      real_t tmp_657 = -tmp_170*tmp_599;
      real_t tmp_658 = -tmp_176*tmp_601;
      real_t tmp_659 = -tmp_182*tmp_603;
      real_t tmp_660 = -tmp_188*tmp_605;
      real_t tmp_661 = -tmp_170*tmp_607;
      real_t tmp_662 = -tmp_176*tmp_609;
      real_t tmp_663 = -tmp_182*tmp_611;
      real_t tmp_664 = -tmp_188*tmp_613;
      real_t tmp_665 = tmp_193*tmp_530;
      real_t tmp_666 = tmp_31*tmp_665;
      real_t tmp_667 = tmp_40*tmp_665;
      real_t tmp_668 = 1.0*tmp_195;
      real_t tmp_669 = tmp_200*tmp_530;
      real_t tmp_670 = tmp_31*tmp_669;
      real_t tmp_671 = tmp_40*tmp_669;
      real_t tmp_672 = 1.0*tmp_201;
      real_t tmp_673 = tmp_206*tmp_530;
      real_t tmp_674 = tmp_31*tmp_673;
      real_t tmp_675 = tmp_40*tmp_673;
      real_t tmp_676 = 1.0*tmp_207;
      real_t tmp_677 = tmp_212*tmp_530;
      real_t tmp_678 = tmp_31*tmp_677;
      real_t tmp_679 = tmp_40*tmp_677;
      real_t tmp_680 = 1.0*tmp_213;
      real_t tmp_681 = 0.11249999999999989*tmp_547;
      real_t tmp_682 = 21.333333333333336*(tmp_8*tmp_8);
      real_t tmp_683 = (tmp_31*tmp_31);
      real_t tmp_684 = 16.0*tmp_681;
      real_t tmp_685 = (tmp_40*tmp_40);
      real_t tmp_686 = 0.012499999999999983*tmp_547;
      real_t tmp_687 = 16.0*tmp_686;
      real_t tmp_688 = 0.012499999999999983*tmp_547;
      real_t tmp_689 = 16.0*tmp_688;
      real_t tmp_690 = 0.012499999999999983*tmp_547;
      real_t tmp_691 = 16.0*tmp_690;
      real_t tmp_692 = -tmp_195*tmp_591;
      real_t tmp_693 = -tmp_201*tmp_593;
      real_t tmp_694 = -tmp_207*tmp_595;
      real_t tmp_695 = -tmp_213*tmp_597;
      real_t tmp_696 = -tmp_195*tmp_599;
      real_t tmp_697 = -tmp_201*tmp_601;
      real_t tmp_698 = -tmp_207*tmp_603;
      real_t tmp_699 = -tmp_213*tmp_605;
      real_t tmp_700 = -tmp_195*tmp_607;
      real_t tmp_701 = -tmp_201*tmp_609;
      real_t tmp_702 = -tmp_207*tmp_611;
      real_t tmp_703 = -tmp_213*tmp_613;
      real_t tmp_704 = 0.13819660112501059*tmp_140;
      real_t tmp_705 = tmp_31*tmp_704;
      real_t tmp_706 = 0.58541019662496829*tmp_140;
      real_t tmp_707 = tmp_33*tmp_706;
      real_t tmp_708 = tmp_705 + tmp_707;
      real_t tmp_709 = 2*tmp_708;
      real_t tmp_710 = tmp_40*tmp_704;
      real_t tmp_711 = tmp_42*tmp_706;
      real_t tmp_712 = tmp_710 + tmp_711;
      real_t tmp_713 = 2*tmp_712;
      real_t tmp_714 = 0.58541019662496829*tmp_140;
      real_t tmp_715 = tmp_31*tmp_714;
      real_t tmp_716 = 0.13819660112501059*tmp_140;
      real_t tmp_717 = tmp_33*tmp_716;
      real_t tmp_718 = tmp_715 + tmp_717;
      real_t tmp_719 = 2*tmp_718;
      real_t tmp_720 = tmp_40*tmp_714;
      real_t tmp_721 = tmp_42*tmp_716;
      real_t tmp_722 = tmp_720 + tmp_721;
      real_t tmp_723 = 2*tmp_722;
      real_t tmp_724 = 0.13819660112501059*tmp_140;
      real_t tmp_725 = tmp_31*tmp_724;
      real_t tmp_726 = 0.13819660112501059*tmp_140;
      real_t tmp_727 = tmp_33*tmp_726;
      real_t tmp_728 = tmp_725 + tmp_727;
      real_t tmp_729 = 2*tmp_728;
      real_t tmp_730 = tmp_40*tmp_724;
      real_t tmp_731 = tmp_42*tmp_726;
      real_t tmp_732 = tmp_730 + tmp_731;
      real_t tmp_733 = 2*tmp_732;
      real_t tmp_734 = 0.13819660112501059*tmp_140;
      real_t tmp_735 = tmp_31*tmp_734;
      real_t tmp_736 = 0.13819660112501059*tmp_140;
      real_t tmp_737 = tmp_33*tmp_736;
      real_t tmp_738 = tmp_735 + tmp_737;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = tmp_40*tmp_734;
      real_t tmp_741 = tmp_42*tmp_736;
      real_t tmp_742 = tmp_740 + tmp_741;
      real_t tmp_743 = 2*tmp_742;
      real_t tmp_744 = 1.3333333333333335*tmp_220;
      real_t tmp_745 = 1.3333333333333335*tmp_237;
      real_t tmp_746 = 1.3333333333333335*tmp_254;
      real_t tmp_747 = 1.3333333333333335*tmp_271;
      real_t tmp_748 = 0.13819660112501059*tmp_194;
      real_t tmp_749 = 0.58541019662496829*tmp_169;
      real_t tmp_750 = 0.58541019662496829*tmp_194;
      real_t tmp_751 = 0.13819660112501059*tmp_169;
      real_t tmp_752 = 0.13819660112501059*tmp_194;
      real_t tmp_753 = 0.13819660112501059*tmp_169;
      real_t tmp_754 = 0.13819660112501059*tmp_194;
      real_t tmp_755 = 0.13819660112501059*tmp_169;
      real_t tmp_756 = -tmp_288*tmp_579;
      real_t tmp_757 = -tmp_303*tmp_580;
      real_t tmp_758 = -tmp_318*tmp_581;
      real_t tmp_759 = -tmp_333*tmp_582;
      real_t tmp_760 = -tmp_348*tmp_579;
      real_t tmp_761 = -tmp_361*tmp_580;
      real_t tmp_762 = -tmp_374*tmp_581;
      real_t tmp_763 = -tmp_387*tmp_582;
      real_t tmp_764 = -tmp_403*tmp_579;
      real_t tmp_765 = -tmp_415*tmp_580;
      real_t tmp_766 = -tmp_427*tmp_581;
      real_t tmp_767 = -tmp_439*tmp_582;
      real_t tmp_768 = -tmp_450*tmp_579;
      real_t tmp_769 = -tmp_461*tmp_580;
      real_t tmp_770 = -tmp_472*tmp_581;
      real_t tmp_771 = -tmp_483*tmp_582;
      real_t tmp_772 = -tmp_493*tmp_579;
      real_t tmp_773 = -tmp_503*tmp_580;
      real_t tmp_774 = -tmp_513*tmp_581;
      real_t tmp_775 = -tmp_523*tmp_582;
      real_t tmp_776 = 0.13819660112501059*tmp_140;
      real_t tmp_777 = tmp_31*tmp_776;
      real_t tmp_778 = tmp_35*tmp_706;
      real_t tmp_779 = tmp_777 + tmp_778;
      real_t tmp_780 = 2*tmp_779;
      real_t tmp_781 = tmp_40*tmp_776;
      real_t tmp_782 = tmp_44*tmp_706;
      real_t tmp_783 = tmp_781 + tmp_782;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 0.13819660112501059*tmp_140;
      real_t tmp_786 = tmp_31*tmp_785;
      real_t tmp_787 = tmp_35*tmp_716;
      real_t tmp_788 = tmp_786 + tmp_787;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = tmp_40*tmp_785;
      real_t tmp_791 = tmp_44*tmp_716;
      real_t tmp_792 = tmp_790 + tmp_791;
      real_t tmp_793 = 2*tmp_792;
      real_t tmp_794 = 0.58541019662496829*tmp_140;
      real_t tmp_795 = tmp_31*tmp_794;
      real_t tmp_796 = tmp_35*tmp_726;
      real_t tmp_797 = tmp_795 + tmp_796;
      real_t tmp_798 = 2*tmp_797;
      real_t tmp_799 = tmp_40*tmp_794;
      real_t tmp_800 = tmp_44*tmp_726;
      real_t tmp_801 = tmp_799 + tmp_800;
      real_t tmp_802 = 2*tmp_801;
      real_t tmp_803 = 0.13819660112501059*tmp_140;
      real_t tmp_804 = tmp_31*tmp_803;
      real_t tmp_805 = tmp_35*tmp_736;
      real_t tmp_806 = tmp_804 + tmp_805;
      real_t tmp_807 = 2*tmp_806;
      real_t tmp_808 = tmp_40*tmp_803;
      real_t tmp_809 = tmp_44*tmp_736;
      real_t tmp_810 = tmp_808 + tmp_809;
      real_t tmp_811 = 2*tmp_810;
      real_t tmp_812 = 1.3333333333333335*tmp_288;
      real_t tmp_813 = 1.3333333333333335*tmp_303;
      real_t tmp_814 = 1.3333333333333335*tmp_318;
      real_t tmp_815 = 1.3333333333333335*tmp_333;
      real_t tmp_816 = 0.13819660112501059*tmp_194;
      real_t tmp_817 = 0.58541019662496829*tmp_136;
      real_t tmp_818 = 0.13819660112501059*tmp_194;
      real_t tmp_819 = 0.13819660112501059*tmp_136;
      real_t tmp_820 = 0.58541019662496829*tmp_194;
      real_t tmp_821 = 0.13819660112501059*tmp_136;
      real_t tmp_822 = 0.13819660112501059*tmp_194;
      real_t tmp_823 = 0.13819660112501059*tmp_136;
      real_t tmp_824 = -tmp_348*tmp_583;
      real_t tmp_825 = -tmp_361*tmp_584;
      real_t tmp_826 = -tmp_374*tmp_585;
      real_t tmp_827 = -tmp_387*tmp_586;
      real_t tmp_828 = -tmp_403*tmp_583;
      real_t tmp_829 = -tmp_415*tmp_584;
      real_t tmp_830 = -tmp_427*tmp_585;
      real_t tmp_831 = -tmp_439*tmp_586;
      real_t tmp_832 = -tmp_450*tmp_583;
      real_t tmp_833 = -tmp_461*tmp_584;
      real_t tmp_834 = -tmp_472*tmp_585;
      real_t tmp_835 = -tmp_483*tmp_586;
      real_t tmp_836 = -tmp_493*tmp_583;
      real_t tmp_837 = -tmp_503*tmp_584;
      real_t tmp_838 = -tmp_513*tmp_585;
      real_t tmp_839 = -tmp_523*tmp_586;
      real_t tmp_840 = tmp_33*tmp_776;
      real_t tmp_841 = tmp_35*tmp_704;
      real_t tmp_842 = tmp_840 + tmp_841;
      real_t tmp_843 = 2*tmp_842;
      real_t tmp_844 = tmp_42*tmp_776;
      real_t tmp_845 = tmp_44*tmp_704;
      real_t tmp_846 = tmp_844 + tmp_845;
      real_t tmp_847 = 2*tmp_846;
      real_t tmp_848 = tmp_33*tmp_785;
      real_t tmp_849 = tmp_35*tmp_714;
      real_t tmp_850 = tmp_848 + tmp_849;
      real_t tmp_851 = 2*tmp_850;
      real_t tmp_852 = tmp_42*tmp_785;
      real_t tmp_853 = tmp_44*tmp_714;
      real_t tmp_854 = tmp_852 + tmp_853;
      real_t tmp_855 = 2*tmp_854;
      real_t tmp_856 = tmp_33*tmp_794;
      real_t tmp_857 = tmp_35*tmp_724;
      real_t tmp_858 = tmp_856 + tmp_857;
      real_t tmp_859 = 2*tmp_858;
      real_t tmp_860 = tmp_42*tmp_794;
      real_t tmp_861 = tmp_44*tmp_724;
      real_t tmp_862 = tmp_860 + tmp_861;
      real_t tmp_863 = 2*tmp_862;
      real_t tmp_864 = tmp_33*tmp_803;
      real_t tmp_865 = tmp_35*tmp_734;
      real_t tmp_866 = tmp_864 + tmp_865;
      real_t tmp_867 = 2*tmp_866;
      real_t tmp_868 = tmp_42*tmp_803;
      real_t tmp_869 = tmp_44*tmp_734;
      real_t tmp_870 = tmp_868 + tmp_869;
      real_t tmp_871 = 2*tmp_870;
      real_t tmp_872 = 1.3333333333333335*tmp_348;
      real_t tmp_873 = 1.3333333333333335*tmp_361;
      real_t tmp_874 = 1.3333333333333335*tmp_374;
      real_t tmp_875 = 1.3333333333333335*tmp_387;
      real_t tmp_876 = 0.13819660112501059*tmp_169;
      real_t tmp_877 = 0.13819660112501059*tmp_136;
      real_t tmp_878 = 0.13819660112501059*tmp_169;
      real_t tmp_879 = 0.58541019662496829*tmp_136;
      real_t tmp_880 = 0.58541019662496829*tmp_169;
      real_t tmp_881 = 0.13819660112501059*tmp_136;
      real_t tmp_882 = 0.13819660112501059*tmp_169;
      real_t tmp_883 = 0.13819660112501059*tmp_136;
      real_t tmp_884 = -tmp_403*tmp_587;
      real_t tmp_885 = -tmp_415*tmp_588;
      real_t tmp_886 = -tmp_427*tmp_589;
      real_t tmp_887 = -tmp_439*tmp_590;
      real_t tmp_888 = -tmp_450*tmp_587;
      real_t tmp_889 = -tmp_461*tmp_588;
      real_t tmp_890 = -tmp_472*tmp_589;
      real_t tmp_891 = -tmp_483*tmp_590;
      real_t tmp_892 = -tmp_493*tmp_587;
      real_t tmp_893 = -tmp_503*tmp_588;
      real_t tmp_894 = -tmp_513*tmp_589;
      real_t tmp_895 = -tmp_523*tmp_590;
      real_t tmp_896 = 0.5*tmp_406 - tmp_707 - tmp_778;
      real_t tmp_897 = 2*tmp_896;
      real_t tmp_898 = 0.5*tmp_408 - tmp_711 - tmp_782;
      real_t tmp_899 = 2*tmp_898;
      real_t tmp_900 = 1.0*tmp_401 + tmp_402;
      real_t tmp_901 = 0.5*tmp_418 - tmp_717 - tmp_787;
      real_t tmp_902 = 2*tmp_901;
      real_t tmp_903 = 0.5*tmp_420 - tmp_721 - tmp_791;
      real_t tmp_904 = 2*tmp_903;
      real_t tmp_905 = 1.0*tmp_413 + tmp_414;
      real_t tmp_906 = 0.5*tmp_430 - tmp_727 - tmp_796;
      real_t tmp_907 = 2*tmp_906;
      real_t tmp_908 = 0.5*tmp_432 - tmp_731 - tmp_800;
      real_t tmp_909 = 2*tmp_908;
      real_t tmp_910 = 1.0*tmp_425 + tmp_426;
      real_t tmp_911 = 0.5*tmp_442 - tmp_737 - tmp_805;
      real_t tmp_912 = 2*tmp_911;
      real_t tmp_913 = 0.5*tmp_444 - tmp_741 - tmp_809;
      real_t tmp_914 = 2*tmp_913;
      real_t tmp_915 = 1.0*tmp_437 + tmp_438;
      real_t tmp_916 = 2.0*tmp_900;
      real_t tmp_917 = 2.0*tmp_905;
      real_t tmp_918 = 2.0*tmp_910;
      real_t tmp_919 = 2.0*tmp_915;
      real_t tmp_920 = -tmp_450*tmp_591;
      real_t tmp_921 = -tmp_461*tmp_593;
      real_t tmp_922 = -tmp_472*tmp_595;
      real_t tmp_923 = -tmp_483*tmp_597;
      real_t tmp_924 = -tmp_493*tmp_591;
      real_t tmp_925 = -tmp_503*tmp_593;
      real_t tmp_926 = -tmp_513*tmp_595;
      real_t tmp_927 = -tmp_523*tmp_597;
      real_t tmp_928 = 0.5*tmp_453 - tmp_705 - tmp_841;
      real_t tmp_929 = 2*tmp_928;
      real_t tmp_930 = 0.5*tmp_455 - tmp_710 - tmp_845;
      real_t tmp_931 = 2*tmp_930;
      real_t tmp_932 = 1.0*tmp_448 + tmp_449;
      real_t tmp_933 = 0.5*tmp_464 - tmp_715 - tmp_849;
      real_t tmp_934 = 2*tmp_933;
      real_t tmp_935 = 0.5*tmp_466 - tmp_720 - tmp_853;
      real_t tmp_936 = 2*tmp_935;
      real_t tmp_937 = 1.0*tmp_459 + tmp_460;
      real_t tmp_938 = 0.5*tmp_475 - tmp_725 - tmp_857;
      real_t tmp_939 = 2*tmp_938;
      real_t tmp_940 = 0.5*tmp_477 - tmp_730 - tmp_861;
      real_t tmp_941 = 2*tmp_940;
      real_t tmp_942 = 1.0*tmp_470 + tmp_471;
      real_t tmp_943 = 0.5*tmp_486 - tmp_735 - tmp_865;
      real_t tmp_944 = 2*tmp_943;
      real_t tmp_945 = 0.5*tmp_488 - tmp_740 - tmp_869;
      real_t tmp_946 = 2*tmp_945;
      real_t tmp_947 = 1.0*tmp_481 + tmp_482;
      real_t tmp_948 = 2.0*tmp_932;
      real_t tmp_949 = 2.0*tmp_937;
      real_t tmp_950 = 2.0*tmp_942;
      real_t tmp_951 = 2.0*tmp_947;
      real_t tmp_952 = -tmp_493*tmp_599;
      real_t tmp_953 = -tmp_503*tmp_601;
      real_t tmp_954 = -tmp_513*tmp_603;
      real_t tmp_955 = -tmp_523*tmp_605;
      real_t tmp_956 = 0.5*tmp_496 - tmp_777 - tmp_840;
      real_t tmp_957 = 2*tmp_956;
      real_t tmp_958 = 0.5*tmp_498 - tmp_781 - tmp_844;
      real_t tmp_959 = 2*tmp_958;
      real_t tmp_960 = 1.0*tmp_491 + tmp_492;
      real_t tmp_961 = 0.5*tmp_506 - tmp_786 - tmp_848;
      real_t tmp_962 = 2*tmp_961;
      real_t tmp_963 = 0.5*tmp_508 - tmp_790 - tmp_852;
      real_t tmp_964 = 2*tmp_963;
      real_t tmp_965 = 1.0*tmp_501 + tmp_502;
      real_t tmp_966 = 0.5*tmp_516 - tmp_795 - tmp_856;
      real_t tmp_967 = 2*tmp_966;
      real_t tmp_968 = 0.5*tmp_518 - tmp_799 - tmp_860;
      real_t tmp_969 = 2*tmp_968;
      real_t tmp_970 = 1.0*tmp_511 + tmp_512;
      real_t tmp_971 = 0.5*tmp_526 - tmp_804 - tmp_864;
      real_t tmp_972 = 2*tmp_971;
      real_t tmp_973 = 0.5*tmp_528 - tmp_808 - tmp_868;
      real_t tmp_974 = 2*tmp_973;
      real_t tmp_975 = 1.0*tmp_521 + tmp_522;
      real_t tmp_976 = 2.0*tmp_960;
      real_t tmp_977 = 2.0*tmp_965;
      real_t tmp_978 = 2.0*tmp_970;
      real_t tmp_979 = 2.0*tmp_975;
      real_t a_0_0 = tmp_110*(tmp_101*tmp_99 + tmp_105*tmp_107 + tmp_108*tmp_109 - 2.0/3.0*(tmp_95*tmp_95)) + tmp_133*(-2.0/3.0*(tmp_118*tmp_118) + tmp_122*tmp_124 + tmp_128*tmp_130 + tmp_131*tmp_132) + tmp_64*(-2.0/3.0*(tmp_30*tmp_30) + tmp_37*tmp_39 + tmp_46*tmp_48 + tmp_49*tmp_50) + tmp_87*(-2.0/3.0*(tmp_72*tmp_72) + tmp_76*tmp_78 + tmp_82*tmp_84 + tmp_85*tmp_86);
      real_t a_0_1 = tmp_110*(tmp_100*tmp_158 + tmp_106*tmp_159 + tmp_154*tmp_156 + tmp_155) + tmp_133*(tmp_123*tmp_166 + tmp_129*tmp_167 + tmp_162*tmp_164 + tmp_163) + tmp_64*(tmp_137*tmp_139 + tmp_138 + tmp_142*tmp_38 + tmp_143*tmp_47) + tmp_87*(tmp_146*tmp_148 + tmp_147 + tmp_150*tmp_77 + tmp_151*tmp_83);
      real_t a_0_2 = tmp_110*(tmp_100*tmp_185 + tmp_106*tmp_186 + tmp_156*tmp_182 + tmp_183) + tmp_133*(tmp_123*tmp_191 + tmp_129*tmp_192 + tmp_164*tmp_188 + tmp_189) + tmp_64*(tmp_139*tmp_170 + tmp_171 + tmp_173*tmp_38 + tmp_174*tmp_47) + tmp_87*(tmp_148*tmp_176 + tmp_177 + tmp_179*tmp_77 + tmp_180*tmp_83);
      real_t a_0_3 = tmp_110*(tmp_100*tmp_210 + tmp_106*tmp_211 + tmp_156*tmp_207 + tmp_208) + tmp_133*(tmp_123*tmp_216 + tmp_129*tmp_217 + tmp_164*tmp_213 + tmp_214) + tmp_64*(tmp_139*tmp_195 + tmp_196 + tmp_198*tmp_38 + tmp_199*tmp_47) + tmp_87*(tmp_148*tmp_201 + tmp_202 + tmp_204*tmp_77 + tmp_205*tmp_83);
      real_t a_0_4 = tmp_110*(tmp_101*tmp_265 + tmp_107*tmp_268 + tmp_108*tmp_260 + tmp_255) + tmp_133*(tmp_124*tmp_282 + tmp_130*tmp_285 + tmp_131*tmp_277 + tmp_272) + tmp_64*(tmp_221 + tmp_226*tmp_49 + tmp_231*tmp_39 + tmp_234*tmp_48) + tmp_87*(tmp_238 + tmp_243*tmp_85 + tmp_248*tmp_78 + tmp_251*tmp_84);
      real_t a_0_5 = tmp_110*(tmp_101*tmp_327 + tmp_107*tmp_330 + tmp_108*tmp_323 + tmp_319) + tmp_133*(tmp_124*tmp_342 + tmp_130*tmp_345 + tmp_131*tmp_338 + tmp_334) + tmp_64*(tmp_289 + tmp_293*tmp_49 + tmp_297*tmp_39 + tmp_300*tmp_48) + tmp_87*(tmp_304 + tmp_308*tmp_85 + tmp_312*tmp_78 + tmp_315*tmp_84);
      real_t a_0_6 = tmp_110*(tmp_101*tmp_381 + tmp_107*tmp_384 + tmp_108*tmp_378 + tmp_375) + tmp_133*(tmp_124*tmp_394 + tmp_130*tmp_397 + tmp_131*tmp_391 + tmp_388) + tmp_64*(tmp_349 + tmp_352*tmp_49 + tmp_355*tmp_39 + tmp_358*tmp_48) + tmp_87*(tmp_362 + tmp_365*tmp_85 + tmp_368*tmp_78 + tmp_371*tmp_84);
      real_t a_0_7 = tmp_110*(tmp_101*tmp_431 + tmp_107*tmp_433 + tmp_108*tmp_429 + tmp_428) + tmp_133*(tmp_124*tmp_443 + tmp_130*tmp_445 + tmp_131*tmp_441 + tmp_440) + tmp_64*(tmp_39*tmp_407 + tmp_404 + tmp_405*tmp_49 + tmp_409*tmp_48) + tmp_87*(tmp_416 + tmp_417*tmp_85 + tmp_419*tmp_78 + tmp_421*tmp_84);
      real_t a_0_8 = tmp_110*(tmp_101*tmp_476 + tmp_107*tmp_478 + tmp_108*tmp_474 + tmp_473) + tmp_133*(tmp_124*tmp_487 + tmp_130*tmp_489 + tmp_131*tmp_485 + tmp_484) + tmp_64*(tmp_39*tmp_454 + tmp_451 + tmp_452*tmp_49 + tmp_456*tmp_48) + tmp_87*(tmp_462 + tmp_463*tmp_85 + tmp_465*tmp_78 + tmp_467*tmp_84);
      real_t a_0_9 = tmp_110*(tmp_101*tmp_517 + tmp_107*tmp_519 + tmp_108*tmp_515 + tmp_514) + tmp_133*(tmp_124*tmp_527 + tmp_130*tmp_529 + tmp_131*tmp_525 + tmp_524) + tmp_64*(tmp_39*tmp_497 + tmp_48*tmp_499 + tmp_49*tmp_495 + tmp_494) + tmp_87*(tmp_504 + tmp_505*tmp_85 + tmp_507*tmp_78 + tmp_509*tmp_84);
      real_t a_1_0 = tmp_110*(tmp_105*tmp_541 + tmp_109*tmp_542 + tmp_155 + tmp_540*tmp_99) + tmp_133*(tmp_122*tmp_544 + tmp_128*tmp_545 + tmp_132*tmp_546 + tmp_163) + tmp_64*(tmp_138 + tmp_37*tmp_532 + tmp_46*tmp_533 + tmp_50*tmp_534) + tmp_87*(tmp_147 + tmp_536*tmp_76 + tmp_537*tmp_82 + tmp_538*tmp_86);
      real_t a_1_1 = tmp_110*(tmp_549*tmp_555 + tmp_550*tmp_556 + tmp_552*tmp_556) + tmp_133*(tmp_549*tmp_557 + tmp_550*tmp_558 + tmp_552*tmp_558) + tmp_64*(tmp_548*tmp_549 + tmp_550*tmp_551 + tmp_551*tmp_552) + tmp_87*(tmp_549*tmp_553 + tmp_550*tmp_554 + tmp_552*tmp_554);
      real_t a_1_2 = tmp_570;
      real_t a_1_3 = tmp_578;
      real_t a_1_4 = tmp_110*(-tmp_154*tmp_581 + tmp_260*tmp_542 + tmp_265*tmp_540 + tmp_268*tmp_541) + tmp_133*(-tmp_162*tmp_582 + tmp_277*tmp_546 + tmp_282*tmp_544 + tmp_285*tmp_545) + tmp_64*(-tmp_137*tmp_579 + tmp_226*tmp_534 + tmp_231*tmp_532 + tmp_234*tmp_533) + tmp_87*(-tmp_146*tmp_580 + tmp_243*tmp_538 + tmp_248*tmp_536 + tmp_251*tmp_537);
      real_t a_1_5 = tmp_110*(-tmp_154*tmp_585 + tmp_323*tmp_542 + tmp_327*tmp_540 + tmp_330*tmp_541) + tmp_133*(-tmp_162*tmp_586 + tmp_338*tmp_546 + tmp_342*tmp_544 + tmp_345*tmp_545) + tmp_64*(-tmp_137*tmp_583 + tmp_293*tmp_534 + tmp_297*tmp_532 + tmp_300*tmp_533) + tmp_87*(-tmp_146*tmp_584 + tmp_308*tmp_538 + tmp_312*tmp_536 + tmp_315*tmp_537);
      real_t a_1_6 = tmp_110*(-tmp_154*tmp_589 + tmp_378*tmp_542 + tmp_381*tmp_540 + tmp_384*tmp_541) + tmp_133*(-tmp_162*tmp_590 + tmp_391*tmp_546 + tmp_394*tmp_544 + tmp_397*tmp_545) + tmp_64*(-tmp_137*tmp_587 + tmp_352*tmp_534 + tmp_355*tmp_532 + tmp_358*tmp_533) + tmp_87*(-tmp_146*tmp_588 + tmp_365*tmp_538 + tmp_368*tmp_536 + tmp_371*tmp_537);
      real_t a_1_7 = tmp_110*(tmp_429*tmp_542 + tmp_431*tmp_540 + tmp_433*tmp_541 + tmp_596) + tmp_133*(tmp_441*tmp_546 + tmp_443*tmp_544 + tmp_445*tmp_545 + tmp_598) + tmp_64*(tmp_405*tmp_534 + tmp_407*tmp_532 + tmp_409*tmp_533 + tmp_592) + tmp_87*(tmp_417*tmp_538 + tmp_419*tmp_536 + tmp_421*tmp_537 + tmp_594);
      real_t a_1_8 = tmp_110*(tmp_474*tmp_542 + tmp_476*tmp_540 + tmp_478*tmp_541 + tmp_604) + tmp_133*(tmp_485*tmp_546 + tmp_487*tmp_544 + tmp_489*tmp_545 + tmp_606) + tmp_64*(tmp_452*tmp_534 + tmp_454*tmp_532 + tmp_456*tmp_533 + tmp_600) + tmp_87*(tmp_463*tmp_538 + tmp_465*tmp_536 + tmp_467*tmp_537 + tmp_602);
      real_t a_1_9 = tmp_110*(tmp_515*tmp_542 + tmp_517*tmp_540 + tmp_519*tmp_541 + tmp_612) + tmp_133*(tmp_525*tmp_546 + tmp_527*tmp_544 + tmp_529*tmp_545 + tmp_614) + tmp_64*(tmp_495*tmp_534 + tmp_497*tmp_532 + tmp_499*tmp_533 + tmp_608) + tmp_87*(tmp_505*tmp_538 + tmp_507*tmp_536 + tmp_509*tmp_537 + tmp_610);
      real_t a_2_0 = tmp_110*(tmp_105*tmp_625 + tmp_109*tmp_626 + tmp_183 + tmp_624*tmp_99) + tmp_133*(tmp_122*tmp_628 + tmp_128*tmp_629 + tmp_132*tmp_630 + tmp_189) + tmp_64*(tmp_171 + tmp_37*tmp_616 + tmp_46*tmp_617 + tmp_50*tmp_618) + tmp_87*(tmp_177 + tmp_620*tmp_76 + tmp_621*tmp_82 + tmp_622*tmp_86);
      real_t a_2_1 = tmp_570;
      real_t a_2_2 = tmp_110*(tmp_632*tmp_638 + tmp_633*tmp_639 + tmp_635*tmp_639) + tmp_133*(tmp_632*tmp_640 + tmp_633*tmp_641 + tmp_635*tmp_641) + tmp_64*(tmp_631*tmp_632 + tmp_633*tmp_634 + tmp_634*tmp_635) + tmp_87*(tmp_632*tmp_636 + tmp_633*tmp_637 + tmp_635*tmp_637);
      real_t a_2_3 = tmp_652;
      real_t a_2_4 = tmp_110*(-tmp_182*tmp_581 + tmp_260*tmp_626 + tmp_265*tmp_624 + tmp_268*tmp_625) + tmp_133*(-tmp_188*tmp_582 + tmp_277*tmp_630 + tmp_282*tmp_628 + tmp_285*tmp_629) + tmp_64*(-tmp_170*tmp_579 + tmp_226*tmp_618 + tmp_231*tmp_616 + tmp_234*tmp_617) + tmp_87*(-tmp_176*tmp_580 + tmp_243*tmp_622 + tmp_248*tmp_620 + tmp_251*tmp_621);
      real_t a_2_5 = tmp_110*(-tmp_182*tmp_585 + tmp_323*tmp_626 + tmp_327*tmp_624 + tmp_330*tmp_625) + tmp_133*(-tmp_188*tmp_586 + tmp_338*tmp_630 + tmp_342*tmp_628 + tmp_345*tmp_629) + tmp_64*(-tmp_170*tmp_583 + tmp_293*tmp_618 + tmp_297*tmp_616 + tmp_300*tmp_617) + tmp_87*(-tmp_176*tmp_584 + tmp_308*tmp_622 + tmp_312*tmp_620 + tmp_315*tmp_621);
      real_t a_2_6 = tmp_110*(-tmp_182*tmp_589 + tmp_378*tmp_626 + tmp_381*tmp_624 + tmp_384*tmp_625) + tmp_133*(-tmp_188*tmp_590 + tmp_391*tmp_630 + tmp_394*tmp_628 + tmp_397*tmp_629) + tmp_64*(-tmp_170*tmp_587 + tmp_352*tmp_618 + tmp_355*tmp_616 + tmp_358*tmp_617) + tmp_87*(-tmp_176*tmp_588 + tmp_365*tmp_622 + tmp_368*tmp_620 + tmp_371*tmp_621);
      real_t a_2_7 = tmp_110*(tmp_429*tmp_626 + tmp_431*tmp_624 + tmp_433*tmp_625 + tmp_655) + tmp_133*(tmp_441*tmp_630 + tmp_443*tmp_628 + tmp_445*tmp_629 + tmp_656) + tmp_64*(tmp_405*tmp_618 + tmp_407*tmp_616 + tmp_409*tmp_617 + tmp_653) + tmp_87*(tmp_417*tmp_622 + tmp_419*tmp_620 + tmp_421*tmp_621 + tmp_654);
      real_t a_2_8 = tmp_110*(tmp_474*tmp_626 + tmp_476*tmp_624 + tmp_478*tmp_625 + tmp_659) + tmp_133*(tmp_485*tmp_630 + tmp_487*tmp_628 + tmp_489*tmp_629 + tmp_660) + tmp_64*(tmp_452*tmp_618 + tmp_454*tmp_616 + tmp_456*tmp_617 + tmp_657) + tmp_87*(tmp_463*tmp_622 + tmp_465*tmp_620 + tmp_467*tmp_621 + tmp_658);
      real_t a_2_9 = tmp_110*(tmp_515*tmp_626 + tmp_517*tmp_624 + tmp_519*tmp_625 + tmp_663) + tmp_133*(tmp_525*tmp_630 + tmp_527*tmp_628 + tmp_529*tmp_629 + tmp_664) + tmp_64*(tmp_495*tmp_618 + tmp_497*tmp_616 + tmp_499*tmp_617 + tmp_661) + tmp_87*(tmp_505*tmp_622 + tmp_507*tmp_620 + tmp_509*tmp_621 + tmp_662);
      real_t a_3_0 = tmp_110*(tmp_105*tmp_675 + tmp_109*tmp_676 + tmp_208 + tmp_674*tmp_99) + tmp_133*(tmp_122*tmp_678 + tmp_128*tmp_679 + tmp_132*tmp_680 + tmp_214) + tmp_64*(tmp_196 + tmp_37*tmp_666 + tmp_46*tmp_667 + tmp_50*tmp_668) + tmp_87*(tmp_202 + tmp_670*tmp_76 + tmp_671*tmp_82 + tmp_672*tmp_86);
      real_t a_3_1 = tmp_578;
      real_t a_3_2 = tmp_652;
      real_t a_3_3 = tmp_110*(tmp_682*tmp_688 + tmp_683*tmp_689 + tmp_685*tmp_689) + tmp_133*(tmp_682*tmp_690 + tmp_683*tmp_691 + tmp_685*tmp_691) + tmp_64*(tmp_681*tmp_682 + tmp_683*tmp_684 + tmp_684*tmp_685) + tmp_87*(tmp_682*tmp_686 + tmp_683*tmp_687 + tmp_685*tmp_687);
      real_t a_3_4 = tmp_110*(-tmp_207*tmp_581 + tmp_260*tmp_676 + tmp_265*tmp_674 + tmp_268*tmp_675) + tmp_133*(-tmp_213*tmp_582 + tmp_277*tmp_680 + tmp_282*tmp_678 + tmp_285*tmp_679) + tmp_64*(-tmp_195*tmp_579 + tmp_226*tmp_668 + tmp_231*tmp_666 + tmp_234*tmp_667) + tmp_87*(-tmp_201*tmp_580 + tmp_243*tmp_672 + tmp_248*tmp_670 + tmp_251*tmp_671);
      real_t a_3_5 = tmp_110*(-tmp_207*tmp_585 + tmp_323*tmp_676 + tmp_327*tmp_674 + tmp_330*tmp_675) + tmp_133*(-tmp_213*tmp_586 + tmp_338*tmp_680 + tmp_342*tmp_678 + tmp_345*tmp_679) + tmp_64*(-tmp_195*tmp_583 + tmp_293*tmp_668 + tmp_297*tmp_666 + tmp_300*tmp_667) + tmp_87*(-tmp_201*tmp_584 + tmp_308*tmp_672 + tmp_312*tmp_670 + tmp_315*tmp_671);
      real_t a_3_6 = tmp_110*(-tmp_207*tmp_589 + tmp_378*tmp_676 + tmp_381*tmp_674 + tmp_384*tmp_675) + tmp_133*(-tmp_213*tmp_590 + tmp_391*tmp_680 + tmp_394*tmp_678 + tmp_397*tmp_679) + tmp_64*(-tmp_195*tmp_587 + tmp_352*tmp_668 + tmp_355*tmp_666 + tmp_358*tmp_667) + tmp_87*(-tmp_201*tmp_588 + tmp_365*tmp_672 + tmp_368*tmp_670 + tmp_371*tmp_671);
      real_t a_3_7 = tmp_110*(tmp_429*tmp_676 + tmp_431*tmp_674 + tmp_433*tmp_675 + tmp_694) + tmp_133*(tmp_441*tmp_680 + tmp_443*tmp_678 + tmp_445*tmp_679 + tmp_695) + tmp_64*(tmp_405*tmp_668 + tmp_407*tmp_666 + tmp_409*tmp_667 + tmp_692) + tmp_87*(tmp_417*tmp_672 + tmp_419*tmp_670 + tmp_421*tmp_671 + tmp_693);
      real_t a_3_8 = tmp_110*(tmp_474*tmp_676 + tmp_476*tmp_674 + tmp_478*tmp_675 + tmp_698) + tmp_133*(tmp_485*tmp_680 + tmp_487*tmp_678 + tmp_489*tmp_679 + tmp_699) + tmp_64*(tmp_452*tmp_668 + tmp_454*tmp_666 + tmp_456*tmp_667 + tmp_696) + tmp_87*(tmp_463*tmp_672 + tmp_465*tmp_670 + tmp_467*tmp_671 + tmp_697);
      real_t a_3_9 = tmp_110*(tmp_515*tmp_676 + tmp_517*tmp_674 + tmp_519*tmp_675 + tmp_702) + tmp_133*(tmp_525*tmp_680 + tmp_527*tmp_678 + tmp_529*tmp_679 + tmp_703) + tmp_64*(tmp_495*tmp_668 + tmp_497*tmp_666 + tmp_499*tmp_667 + tmp_700) + tmp_87*(tmp_505*tmp_672 + tmp_507*tmp_670 + tmp_509*tmp_671 + tmp_701);
      real_t a_4_0 = tmp_110*(tmp_105*tmp_733 + tmp_109*tmp_254 + tmp_255 + tmp_729*tmp_99) + tmp_133*(tmp_122*tmp_739 + tmp_128*tmp_743 + tmp_132*tmp_271 + tmp_272) + tmp_64*(tmp_220*tmp_50 + tmp_221 + tmp_37*tmp_709 + tmp_46*tmp_713) + tmp_87*(tmp_237*tmp_86 + tmp_238 + tmp_719*tmp_76 + tmp_723*tmp_82);
      real_t a_4_1 = tmp_110*(tmp_154*tmp_746 + tmp_158*tmp_728 + tmp_159*tmp_732) + tmp_133*(tmp_162*tmp_747 + tmp_166*tmp_738 + tmp_167*tmp_742) + tmp_64*(tmp_137*tmp_744 + tmp_142*tmp_708 + tmp_143*tmp_712) + tmp_87*(tmp_146*tmp_745 + tmp_150*tmp_718 + tmp_151*tmp_722);
      real_t a_4_2 = tmp_110*(tmp_182*tmp_746 + tmp_185*tmp_728 + tmp_186*tmp_732) + tmp_133*(tmp_188*tmp_747 + tmp_191*tmp_738 + tmp_192*tmp_742) + tmp_64*(tmp_170*tmp_744 + tmp_173*tmp_708 + tmp_174*tmp_712) + tmp_87*(tmp_176*tmp_745 + tmp_179*tmp_718 + tmp_180*tmp_722);
      real_t a_4_3 = tmp_110*(tmp_207*tmp_746 + tmp_210*tmp_728 + tmp_211*tmp_732) + tmp_133*(tmp_213*tmp_747 + tmp_216*tmp_738 + tmp_217*tmp_742) + tmp_64*(tmp_195*tmp_744 + tmp_198*tmp_708 + tmp_199*tmp_712) + tmp_87*(tmp_201*tmp_745 + tmp_204*tmp_718 + tmp_205*tmp_722);
      real_t a_4_4 = tmp_110*(tmp_254*tmp_260 + tmp_265*tmp_729 + tmp_268*tmp_733 - 10.666666666666666*((tmp_752 + tmp_753)*(tmp_752 + tmp_753))) + tmp_133*(tmp_271*tmp_277 + tmp_282*tmp_739 + tmp_285*tmp_743 - 10.666666666666666*((tmp_754 + tmp_755)*(tmp_754 + tmp_755))) + tmp_64*(tmp_220*tmp_226 + tmp_231*tmp_709 + tmp_234*tmp_713 - 10.666666666666666*((tmp_748 + tmp_749)*(tmp_748 + tmp_749))) + tmp_87*(tmp_237*tmp_243 + tmp_248*tmp_719 + tmp_251*tmp_723 - 10.666666666666666*((tmp_750 + tmp_751)*(tmp_750 + tmp_751)));
      real_t a_4_5 = tmp_110*(tmp_254*tmp_323 + tmp_327*tmp_729 + tmp_330*tmp_733 + tmp_758) + tmp_133*(tmp_271*tmp_338 + tmp_342*tmp_739 + tmp_345*tmp_743 + tmp_759) + tmp_64*(tmp_220*tmp_293 + tmp_297*tmp_709 + tmp_300*tmp_713 + tmp_756) + tmp_87*(tmp_237*tmp_308 + tmp_312*tmp_719 + tmp_315*tmp_723 + tmp_757);
      real_t a_4_6 = tmp_110*(tmp_254*tmp_378 + tmp_381*tmp_729 + tmp_384*tmp_733 + tmp_762) + tmp_133*(tmp_271*tmp_391 + tmp_394*tmp_739 + tmp_397*tmp_743 + tmp_763) + tmp_64*(tmp_220*tmp_352 + tmp_355*tmp_709 + tmp_358*tmp_713 + tmp_760) + tmp_87*(tmp_237*tmp_365 + tmp_368*tmp_719 + tmp_371*tmp_723 + tmp_761);
      real_t a_4_7 = tmp_110*(tmp_254*tmp_429 + tmp_431*tmp_729 + tmp_433*tmp_733 + tmp_766) + tmp_133*(tmp_271*tmp_441 + tmp_443*tmp_739 + tmp_445*tmp_743 + tmp_767) + tmp_64*(tmp_220*tmp_405 + tmp_407*tmp_709 + tmp_409*tmp_713 + tmp_764) + tmp_87*(tmp_237*tmp_417 + tmp_419*tmp_719 + tmp_421*tmp_723 + tmp_765);
      real_t a_4_8 = tmp_110*(tmp_254*tmp_474 + tmp_476*tmp_729 + tmp_478*tmp_733 + tmp_770) + tmp_133*(tmp_271*tmp_485 + tmp_487*tmp_739 + tmp_489*tmp_743 + tmp_771) + tmp_64*(tmp_220*tmp_452 + tmp_454*tmp_709 + tmp_456*tmp_713 + tmp_768) + tmp_87*(tmp_237*tmp_463 + tmp_465*tmp_719 + tmp_467*tmp_723 + tmp_769);
      real_t a_4_9 = tmp_110*(tmp_254*tmp_515 + tmp_517*tmp_729 + tmp_519*tmp_733 + tmp_774) + tmp_133*(tmp_271*tmp_525 + tmp_527*tmp_739 + tmp_529*tmp_743 + tmp_775) + tmp_64*(tmp_220*tmp_495 + tmp_497*tmp_709 + tmp_499*tmp_713 + tmp_772) + tmp_87*(tmp_237*tmp_505 + tmp_507*tmp_719 + tmp_509*tmp_723 + tmp_773);
      real_t a_5_0 = tmp_110*(tmp_105*tmp_802 + tmp_109*tmp_318 + tmp_319 + tmp_798*tmp_99) + tmp_133*(tmp_122*tmp_807 + tmp_128*tmp_811 + tmp_132*tmp_333 + tmp_334) + tmp_64*(tmp_288*tmp_50 + tmp_289 + tmp_37*tmp_780 + tmp_46*tmp_784) + tmp_87*(tmp_303*tmp_86 + tmp_304 + tmp_76*tmp_789 + tmp_793*tmp_82);
      real_t a_5_1 = tmp_110*(tmp_154*tmp_814 + tmp_158*tmp_797 + tmp_159*tmp_801) + tmp_133*(tmp_162*tmp_815 + tmp_166*tmp_806 + tmp_167*tmp_810) + tmp_64*(tmp_137*tmp_812 + tmp_142*tmp_779 + tmp_143*tmp_783) + tmp_87*(tmp_146*tmp_813 + tmp_150*tmp_788 + tmp_151*tmp_792);
      real_t a_5_2 = tmp_110*(tmp_182*tmp_814 + tmp_185*tmp_797 + tmp_186*tmp_801) + tmp_133*(tmp_188*tmp_815 + tmp_191*tmp_806 + tmp_192*tmp_810) + tmp_64*(tmp_170*tmp_812 + tmp_173*tmp_779 + tmp_174*tmp_783) + tmp_87*(tmp_176*tmp_813 + tmp_179*tmp_788 + tmp_180*tmp_792);
      real_t a_5_3 = tmp_110*(tmp_207*tmp_814 + tmp_210*tmp_797 + tmp_211*tmp_801) + tmp_133*(tmp_213*tmp_815 + tmp_216*tmp_806 + tmp_217*tmp_810) + tmp_64*(tmp_195*tmp_812 + tmp_198*tmp_779 + tmp_199*tmp_783) + tmp_87*(tmp_201*tmp_813 + tmp_204*tmp_788 + tmp_205*tmp_792);
      real_t a_5_4 = tmp_110*(tmp_260*tmp_318 + tmp_265*tmp_798 + tmp_268*tmp_802 + tmp_758) + tmp_133*(tmp_277*tmp_333 + tmp_282*tmp_807 + tmp_285*tmp_811 + tmp_759) + tmp_64*(tmp_226*tmp_288 + tmp_231*tmp_780 + tmp_234*tmp_784 + tmp_756) + tmp_87*(tmp_243*tmp_303 + tmp_248*tmp_789 + tmp_251*tmp_793 + tmp_757);
      real_t a_5_5 = tmp_110*(tmp_318*tmp_323 + tmp_327*tmp_798 + tmp_330*tmp_802 - 10.666666666666666*((tmp_820 + tmp_821)*(tmp_820 + tmp_821))) + tmp_133*(tmp_333*tmp_338 + tmp_342*tmp_807 + tmp_345*tmp_811 - 10.666666666666666*((tmp_822 + tmp_823)*(tmp_822 + tmp_823))) + tmp_64*(tmp_288*tmp_293 + tmp_297*tmp_780 + tmp_300*tmp_784 - 10.666666666666666*((tmp_816 + tmp_817)*(tmp_816 + tmp_817))) + tmp_87*(tmp_303*tmp_308 + tmp_312*tmp_789 + tmp_315*tmp_793 - 10.666666666666666*((tmp_818 + tmp_819)*(tmp_818 + tmp_819)));
      real_t a_5_6 = tmp_110*(tmp_318*tmp_378 + tmp_381*tmp_798 + tmp_384*tmp_802 + tmp_826) + tmp_133*(tmp_333*tmp_391 + tmp_394*tmp_807 + tmp_397*tmp_811 + tmp_827) + tmp_64*(tmp_288*tmp_352 + tmp_355*tmp_780 + tmp_358*tmp_784 + tmp_824) + tmp_87*(tmp_303*tmp_365 + tmp_368*tmp_789 + tmp_371*tmp_793 + tmp_825);
      real_t a_5_7 = tmp_110*(tmp_318*tmp_429 + tmp_431*tmp_798 + tmp_433*tmp_802 + tmp_830) + tmp_133*(tmp_333*tmp_441 + tmp_443*tmp_807 + tmp_445*tmp_811 + tmp_831) + tmp_64*(tmp_288*tmp_405 + tmp_407*tmp_780 + tmp_409*tmp_784 + tmp_828) + tmp_87*(tmp_303*tmp_417 + tmp_419*tmp_789 + tmp_421*tmp_793 + tmp_829);
      real_t a_5_8 = tmp_110*(tmp_318*tmp_474 + tmp_476*tmp_798 + tmp_478*tmp_802 + tmp_834) + tmp_133*(tmp_333*tmp_485 + tmp_487*tmp_807 + tmp_489*tmp_811 + tmp_835) + tmp_64*(tmp_288*tmp_452 + tmp_454*tmp_780 + tmp_456*tmp_784 + tmp_832) + tmp_87*(tmp_303*tmp_463 + tmp_465*tmp_789 + tmp_467*tmp_793 + tmp_833);
      real_t a_5_9 = tmp_110*(tmp_318*tmp_515 + tmp_517*tmp_798 + tmp_519*tmp_802 + tmp_838) + tmp_133*(tmp_333*tmp_525 + tmp_527*tmp_807 + tmp_529*tmp_811 + tmp_839) + tmp_64*(tmp_288*tmp_495 + tmp_497*tmp_780 + tmp_499*tmp_784 + tmp_836) + tmp_87*(tmp_303*tmp_505 + tmp_507*tmp_789 + tmp_509*tmp_793 + tmp_837);
      real_t a_6_0 = tmp_110*(tmp_105*tmp_863 + tmp_109*tmp_374 + tmp_375 + tmp_859*tmp_99) + tmp_133*(tmp_122*tmp_867 + tmp_128*tmp_871 + tmp_132*tmp_387 + tmp_388) + tmp_64*(tmp_348*tmp_50 + tmp_349 + tmp_37*tmp_843 + tmp_46*tmp_847) + tmp_87*(tmp_361*tmp_86 + tmp_362 + tmp_76*tmp_851 + tmp_82*tmp_855);
      real_t a_6_1 = tmp_110*(tmp_154*tmp_874 + tmp_158*tmp_858 + tmp_159*tmp_862) + tmp_133*(tmp_162*tmp_875 + tmp_166*tmp_866 + tmp_167*tmp_870) + tmp_64*(tmp_137*tmp_872 + tmp_142*tmp_842 + tmp_143*tmp_846) + tmp_87*(tmp_146*tmp_873 + tmp_150*tmp_850 + tmp_151*tmp_854);
      real_t a_6_2 = tmp_110*(tmp_182*tmp_874 + tmp_185*tmp_858 + tmp_186*tmp_862) + tmp_133*(tmp_188*tmp_875 + tmp_191*tmp_866 + tmp_192*tmp_870) + tmp_64*(tmp_170*tmp_872 + tmp_173*tmp_842 + tmp_174*tmp_846) + tmp_87*(tmp_176*tmp_873 + tmp_179*tmp_850 + tmp_180*tmp_854);
      real_t a_6_3 = tmp_110*(tmp_207*tmp_874 + tmp_210*tmp_858 + tmp_211*tmp_862) + tmp_133*(tmp_213*tmp_875 + tmp_216*tmp_866 + tmp_217*tmp_870) + tmp_64*(tmp_195*tmp_872 + tmp_198*tmp_842 + tmp_199*tmp_846) + tmp_87*(tmp_201*tmp_873 + tmp_204*tmp_850 + tmp_205*tmp_854);
      real_t a_6_4 = tmp_110*(tmp_260*tmp_374 + tmp_265*tmp_859 + tmp_268*tmp_863 + tmp_762) + tmp_133*(tmp_277*tmp_387 + tmp_282*tmp_867 + tmp_285*tmp_871 + tmp_763) + tmp_64*(tmp_226*tmp_348 + tmp_231*tmp_843 + tmp_234*tmp_847 + tmp_760) + tmp_87*(tmp_243*tmp_361 + tmp_248*tmp_851 + tmp_251*tmp_855 + tmp_761);
      real_t a_6_5 = tmp_110*(tmp_323*tmp_374 + tmp_327*tmp_859 + tmp_330*tmp_863 + tmp_826) + tmp_133*(tmp_338*tmp_387 + tmp_342*tmp_867 + tmp_345*tmp_871 + tmp_827) + tmp_64*(tmp_293*tmp_348 + tmp_297*tmp_843 + tmp_300*tmp_847 + tmp_824) + tmp_87*(tmp_308*tmp_361 + tmp_312*tmp_851 + tmp_315*tmp_855 + tmp_825);
      real_t a_6_6 = tmp_110*(tmp_374*tmp_378 + tmp_381*tmp_859 + tmp_384*tmp_863 - 10.666666666666666*((tmp_880 + tmp_881)*(tmp_880 + tmp_881))) + tmp_133*(tmp_387*tmp_391 + tmp_394*tmp_867 + tmp_397*tmp_871 - 10.666666666666666*((tmp_882 + tmp_883)*(tmp_882 + tmp_883))) + tmp_64*(tmp_348*tmp_352 + tmp_355*tmp_843 + tmp_358*tmp_847 - 10.666666666666666*((tmp_876 + tmp_877)*(tmp_876 + tmp_877))) + tmp_87*(tmp_361*tmp_365 + tmp_368*tmp_851 + tmp_371*tmp_855 - 10.666666666666666*((tmp_878 + tmp_879)*(tmp_878 + tmp_879)));
      real_t a_6_7 = tmp_110*(tmp_374*tmp_429 + tmp_431*tmp_859 + tmp_433*tmp_863 + tmp_886) + tmp_133*(tmp_387*tmp_441 + tmp_443*tmp_867 + tmp_445*tmp_871 + tmp_887) + tmp_64*(tmp_348*tmp_405 + tmp_407*tmp_843 + tmp_409*tmp_847 + tmp_884) + tmp_87*(tmp_361*tmp_417 + tmp_419*tmp_851 + tmp_421*tmp_855 + tmp_885);
      real_t a_6_8 = tmp_110*(tmp_374*tmp_474 + tmp_476*tmp_859 + tmp_478*tmp_863 + tmp_890) + tmp_133*(tmp_387*tmp_485 + tmp_487*tmp_867 + tmp_489*tmp_871 + tmp_891) + tmp_64*(tmp_348*tmp_452 + tmp_454*tmp_843 + tmp_456*tmp_847 + tmp_888) + tmp_87*(tmp_361*tmp_463 + tmp_465*tmp_851 + tmp_467*tmp_855 + tmp_889);
      real_t a_6_9 = tmp_110*(tmp_374*tmp_515 + tmp_517*tmp_859 + tmp_519*tmp_863 + tmp_894) + tmp_133*(tmp_387*tmp_525 + tmp_527*tmp_867 + tmp_529*tmp_871 + tmp_895) + tmp_64*(tmp_348*tmp_495 + tmp_497*tmp_843 + tmp_499*tmp_847 + tmp_892) + tmp_87*(tmp_361*tmp_505 + tmp_507*tmp_851 + tmp_509*tmp_855 + tmp_893);
      real_t a_7_0 = tmp_110*(tmp_105*tmp_909 + tmp_109*tmp_910 + tmp_428 + tmp_907*tmp_99) + tmp_133*(tmp_122*tmp_912 + tmp_128*tmp_914 + tmp_132*tmp_915 + tmp_440) + tmp_64*(tmp_37*tmp_897 + tmp_404 + tmp_46*tmp_899 + tmp_50*tmp_900) + tmp_87*(tmp_416 + tmp_76*tmp_902 + tmp_82*tmp_904 + tmp_86*tmp_905);
      real_t a_7_1 = tmp_110*(tmp_154*tmp_918 + tmp_158*tmp_906 + tmp_159*tmp_908 + tmp_596) + tmp_133*(tmp_162*tmp_919 + tmp_166*tmp_911 + tmp_167*tmp_913 + tmp_598) + tmp_64*(tmp_137*tmp_916 + tmp_142*tmp_896 + tmp_143*tmp_898 + tmp_592) + tmp_87*(tmp_146*tmp_917 + tmp_150*tmp_901 + tmp_151*tmp_903 + tmp_594);
      real_t a_7_2 = tmp_110*(tmp_182*tmp_918 + tmp_185*tmp_906 + tmp_186*tmp_908 + tmp_655) + tmp_133*(tmp_188*tmp_919 + tmp_191*tmp_911 + tmp_192*tmp_913 + tmp_656) + tmp_64*(tmp_170*tmp_916 + tmp_173*tmp_896 + tmp_174*tmp_898 + tmp_653) + tmp_87*(tmp_176*tmp_917 + tmp_179*tmp_901 + tmp_180*tmp_903 + tmp_654);
      real_t a_7_3 = tmp_110*(tmp_207*tmp_918 + tmp_210*tmp_906 + tmp_211*tmp_908 + tmp_694) + tmp_133*(tmp_213*tmp_919 + tmp_216*tmp_911 + tmp_217*tmp_913 + tmp_695) + tmp_64*(tmp_195*tmp_916 + tmp_198*tmp_896 + tmp_199*tmp_898 + tmp_692) + tmp_87*(tmp_201*tmp_917 + tmp_204*tmp_901 + tmp_205*tmp_903 + tmp_693);
      real_t a_7_4 = tmp_110*(tmp_260*tmp_910 + tmp_265*tmp_907 + tmp_268*tmp_909 + tmp_766) + tmp_133*(tmp_277*tmp_915 + tmp_282*tmp_912 + tmp_285*tmp_914 + tmp_767) + tmp_64*(tmp_226*tmp_900 + tmp_231*tmp_897 + tmp_234*tmp_899 + tmp_764) + tmp_87*(tmp_243*tmp_905 + tmp_248*tmp_902 + tmp_251*tmp_904 + tmp_765);
      real_t a_7_5 = tmp_110*(tmp_323*tmp_910 + tmp_327*tmp_907 + tmp_330*tmp_909 + tmp_830) + tmp_133*(tmp_338*tmp_915 + tmp_342*tmp_912 + tmp_345*tmp_914 + tmp_831) + tmp_64*(tmp_293*tmp_900 + tmp_297*tmp_897 + tmp_300*tmp_899 + tmp_828) + tmp_87*(tmp_308*tmp_905 + tmp_312*tmp_902 + tmp_315*tmp_904 + tmp_829);
      real_t a_7_6 = tmp_110*(tmp_378*tmp_910 + tmp_381*tmp_907 + tmp_384*tmp_909 + tmp_886) + tmp_133*(tmp_391*tmp_915 + tmp_394*tmp_912 + tmp_397*tmp_914 + tmp_887) + tmp_64*(tmp_352*tmp_900 + tmp_355*tmp_897 + tmp_358*tmp_899 + tmp_884) + tmp_87*(tmp_365*tmp_905 + tmp_368*tmp_902 + tmp_371*tmp_904 + tmp_885);
      real_t a_7_7 = tmp_110*(tmp_429*tmp_910 + tmp_431*tmp_907 + tmp_433*tmp_909 - 10.666666666666666*((0.25*tmp_425 - tmp_753 - tmp_821)*(0.25*tmp_425 - tmp_753 - tmp_821))) + tmp_133*(tmp_441*tmp_915 + tmp_443*tmp_912 + tmp_445*tmp_914 - 10.666666666666666*((0.25*tmp_437 - tmp_755 - tmp_823)*(0.25*tmp_437 - tmp_755 - tmp_823))) + tmp_64*(tmp_405*tmp_900 + tmp_407*tmp_897 + tmp_409*tmp_899 - 10.666666666666666*((0.25*tmp_401 - tmp_749 - tmp_817)*(0.25*tmp_401 - tmp_749 - tmp_817))) + tmp_87*(tmp_417*tmp_905 + tmp_419*tmp_902 + tmp_421*tmp_904 - 10.666666666666666*((0.25*tmp_413 - tmp_751 - tmp_819)*(0.25*tmp_413 - tmp_751 - tmp_819)));
      real_t a_7_8 = tmp_110*(tmp_474*tmp_910 + tmp_476*tmp_907 + tmp_478*tmp_909 + tmp_922) + tmp_133*(tmp_485*tmp_915 + tmp_487*tmp_912 + tmp_489*tmp_914 + tmp_923) + tmp_64*(tmp_452*tmp_900 + tmp_454*tmp_897 + tmp_456*tmp_899 + tmp_920) + tmp_87*(tmp_463*tmp_905 + tmp_465*tmp_902 + tmp_467*tmp_904 + tmp_921);
      real_t a_7_9 = tmp_110*(tmp_515*tmp_910 + tmp_517*tmp_907 + tmp_519*tmp_909 + tmp_926) + tmp_133*(tmp_525*tmp_915 + tmp_527*tmp_912 + tmp_529*tmp_914 + tmp_927) + tmp_64*(tmp_495*tmp_900 + tmp_497*tmp_897 + tmp_499*tmp_899 + tmp_924) + tmp_87*(tmp_505*tmp_905 + tmp_507*tmp_902 + tmp_509*tmp_904 + tmp_925);
      real_t a_8_0 = tmp_110*(tmp_105*tmp_941 + tmp_109*tmp_942 + tmp_473 + tmp_939*tmp_99) + tmp_133*(tmp_122*tmp_944 + tmp_128*tmp_946 + tmp_132*tmp_947 + tmp_484) + tmp_64*(tmp_37*tmp_929 + tmp_451 + tmp_46*tmp_931 + tmp_50*tmp_932) + tmp_87*(tmp_462 + tmp_76*tmp_934 + tmp_82*tmp_936 + tmp_86*tmp_937);
      real_t a_8_1 = tmp_110*(tmp_154*tmp_950 + tmp_158*tmp_938 + tmp_159*tmp_940 + tmp_604) + tmp_133*(tmp_162*tmp_951 + tmp_166*tmp_943 + tmp_167*tmp_945 + tmp_606) + tmp_64*(tmp_137*tmp_948 + tmp_142*tmp_928 + tmp_143*tmp_930 + tmp_600) + tmp_87*(tmp_146*tmp_949 + tmp_150*tmp_933 + tmp_151*tmp_935 + tmp_602);
      real_t a_8_2 = tmp_110*(tmp_182*tmp_950 + tmp_185*tmp_938 + tmp_186*tmp_940 + tmp_659) + tmp_133*(tmp_188*tmp_951 + tmp_191*tmp_943 + tmp_192*tmp_945 + tmp_660) + tmp_64*(tmp_170*tmp_948 + tmp_173*tmp_928 + tmp_174*tmp_930 + tmp_657) + tmp_87*(tmp_176*tmp_949 + tmp_179*tmp_933 + tmp_180*tmp_935 + tmp_658);
      real_t a_8_3 = tmp_110*(tmp_207*tmp_950 + tmp_210*tmp_938 + tmp_211*tmp_940 + tmp_698) + tmp_133*(tmp_213*tmp_951 + tmp_216*tmp_943 + tmp_217*tmp_945 + tmp_699) + tmp_64*(tmp_195*tmp_948 + tmp_198*tmp_928 + tmp_199*tmp_930 + tmp_696) + tmp_87*(tmp_201*tmp_949 + tmp_204*tmp_933 + tmp_205*tmp_935 + tmp_697);
      real_t a_8_4 = tmp_110*(tmp_260*tmp_942 + tmp_265*tmp_939 + tmp_268*tmp_941 + tmp_770) + tmp_133*(tmp_277*tmp_947 + tmp_282*tmp_944 + tmp_285*tmp_946 + tmp_771) + tmp_64*(tmp_226*tmp_932 + tmp_231*tmp_929 + tmp_234*tmp_931 + tmp_768) + tmp_87*(tmp_243*tmp_937 + tmp_248*tmp_934 + tmp_251*tmp_936 + tmp_769);
      real_t a_8_5 = tmp_110*(tmp_323*tmp_942 + tmp_327*tmp_939 + tmp_330*tmp_941 + tmp_834) + tmp_133*(tmp_338*tmp_947 + tmp_342*tmp_944 + tmp_345*tmp_946 + tmp_835) + tmp_64*(tmp_293*tmp_932 + tmp_297*tmp_929 + tmp_300*tmp_931 + tmp_832) + tmp_87*(tmp_308*tmp_937 + tmp_312*tmp_934 + tmp_315*tmp_936 + tmp_833);
      real_t a_8_6 = tmp_110*(tmp_378*tmp_942 + tmp_381*tmp_939 + tmp_384*tmp_941 + tmp_890) + tmp_133*(tmp_391*tmp_947 + tmp_394*tmp_944 + tmp_397*tmp_946 + tmp_891) + tmp_64*(tmp_352*tmp_932 + tmp_355*tmp_929 + tmp_358*tmp_931 + tmp_888) + tmp_87*(tmp_365*tmp_937 + tmp_368*tmp_934 + tmp_371*tmp_936 + tmp_889);
      real_t a_8_7 = tmp_110*(tmp_429*tmp_942 + tmp_431*tmp_939 + tmp_433*tmp_941 + tmp_922) + tmp_133*(tmp_441*tmp_947 + tmp_443*tmp_944 + tmp_445*tmp_946 + tmp_923) + tmp_64*(tmp_405*tmp_932 + tmp_407*tmp_929 + tmp_409*tmp_931 + tmp_920) + tmp_87*(tmp_417*tmp_937 + tmp_419*tmp_934 + tmp_421*tmp_936 + tmp_921);
      real_t a_8_8 = tmp_110*(tmp_474*tmp_942 + tmp_476*tmp_939 + tmp_478*tmp_941 - 10.666666666666666*((0.25*tmp_470 - tmp_752 - tmp_881)*(0.25*tmp_470 - tmp_752 - tmp_881))) + tmp_133*(tmp_485*tmp_947 + tmp_487*tmp_944 + tmp_489*tmp_946 - 10.666666666666666*((0.25*tmp_481 - tmp_754 - tmp_883)*(0.25*tmp_481 - tmp_754 - tmp_883))) + tmp_64*(tmp_452*tmp_932 + tmp_454*tmp_929 + tmp_456*tmp_931 - 10.666666666666666*((0.25*tmp_448 - tmp_748 - tmp_877)*(0.25*tmp_448 - tmp_748 - tmp_877))) + tmp_87*(tmp_463*tmp_937 + tmp_465*tmp_934 + tmp_467*tmp_936 - 10.666666666666666*((0.25*tmp_459 - tmp_750 - tmp_879)*(0.25*tmp_459 - tmp_750 - tmp_879)));
      real_t a_8_9 = tmp_110*(tmp_515*tmp_942 + tmp_517*tmp_939 + tmp_519*tmp_941 + tmp_954) + tmp_133*(tmp_525*tmp_947 + tmp_527*tmp_944 + tmp_529*tmp_946 + tmp_955) + tmp_64*(tmp_495*tmp_932 + tmp_497*tmp_929 + tmp_499*tmp_931 + tmp_952) + tmp_87*(tmp_505*tmp_937 + tmp_507*tmp_934 + tmp_509*tmp_936 + tmp_953);
      real_t a_9_0 = tmp_110*(tmp_105*tmp_969 + tmp_109*tmp_970 + tmp_514 + tmp_967*tmp_99) + tmp_133*(tmp_122*tmp_972 + tmp_128*tmp_974 + tmp_132*tmp_975 + tmp_524) + tmp_64*(tmp_37*tmp_957 + tmp_46*tmp_959 + tmp_494 + tmp_50*tmp_960) + tmp_87*(tmp_504 + tmp_76*tmp_962 + tmp_82*tmp_964 + tmp_86*tmp_965);
      real_t a_9_1 = tmp_110*(tmp_154*tmp_978 + tmp_158*tmp_966 + tmp_159*tmp_968 + tmp_612) + tmp_133*(tmp_162*tmp_979 + tmp_166*tmp_971 + tmp_167*tmp_973 + tmp_614) + tmp_64*(tmp_137*tmp_976 + tmp_142*tmp_956 + tmp_143*tmp_958 + tmp_608) + tmp_87*(tmp_146*tmp_977 + tmp_150*tmp_961 + tmp_151*tmp_963 + tmp_610);
      real_t a_9_2 = tmp_110*(tmp_182*tmp_978 + tmp_185*tmp_966 + tmp_186*tmp_968 + tmp_663) + tmp_133*(tmp_188*tmp_979 + tmp_191*tmp_971 + tmp_192*tmp_973 + tmp_664) + tmp_64*(tmp_170*tmp_976 + tmp_173*tmp_956 + tmp_174*tmp_958 + tmp_661) + tmp_87*(tmp_176*tmp_977 + tmp_179*tmp_961 + tmp_180*tmp_963 + tmp_662);
      real_t a_9_3 = tmp_110*(tmp_207*tmp_978 + tmp_210*tmp_966 + tmp_211*tmp_968 + tmp_702) + tmp_133*(tmp_213*tmp_979 + tmp_216*tmp_971 + tmp_217*tmp_973 + tmp_703) + tmp_64*(tmp_195*tmp_976 + tmp_198*tmp_956 + tmp_199*tmp_958 + tmp_700) + tmp_87*(tmp_201*tmp_977 + tmp_204*tmp_961 + tmp_205*tmp_963 + tmp_701);
      real_t a_9_4 = tmp_110*(tmp_260*tmp_970 + tmp_265*tmp_967 + tmp_268*tmp_969 + tmp_774) + tmp_133*(tmp_277*tmp_975 + tmp_282*tmp_972 + tmp_285*tmp_974 + tmp_775) + tmp_64*(tmp_226*tmp_960 + tmp_231*tmp_957 + tmp_234*tmp_959 + tmp_772) + tmp_87*(tmp_243*tmp_965 + tmp_248*tmp_962 + tmp_251*tmp_964 + tmp_773);
      real_t a_9_5 = tmp_110*(tmp_323*tmp_970 + tmp_327*tmp_967 + tmp_330*tmp_969 + tmp_838) + tmp_133*(tmp_338*tmp_975 + tmp_342*tmp_972 + tmp_345*tmp_974 + tmp_839) + tmp_64*(tmp_293*tmp_960 + tmp_297*tmp_957 + tmp_300*tmp_959 + tmp_836) + tmp_87*(tmp_308*tmp_965 + tmp_312*tmp_962 + tmp_315*tmp_964 + tmp_837);
      real_t a_9_6 = tmp_110*(tmp_378*tmp_970 + tmp_381*tmp_967 + tmp_384*tmp_969 + tmp_894) + tmp_133*(tmp_391*tmp_975 + tmp_394*tmp_972 + tmp_397*tmp_974 + tmp_895) + tmp_64*(tmp_352*tmp_960 + tmp_355*tmp_957 + tmp_358*tmp_959 + tmp_892) + tmp_87*(tmp_365*tmp_965 + tmp_368*tmp_962 + tmp_371*tmp_964 + tmp_893);
      real_t a_9_7 = tmp_110*(tmp_429*tmp_970 + tmp_431*tmp_967 + tmp_433*tmp_969 + tmp_926) + tmp_133*(tmp_441*tmp_975 + tmp_443*tmp_972 + tmp_445*tmp_974 + tmp_927) + tmp_64*(tmp_405*tmp_960 + tmp_407*tmp_957 + tmp_409*tmp_959 + tmp_924) + tmp_87*(tmp_417*tmp_965 + tmp_419*tmp_962 + tmp_421*tmp_964 + tmp_925);
      real_t a_9_8 = tmp_110*(tmp_474*tmp_970 + tmp_476*tmp_967 + tmp_478*tmp_969 + tmp_954) + tmp_133*(tmp_485*tmp_975 + tmp_487*tmp_972 + tmp_489*tmp_974 + tmp_955) + tmp_64*(tmp_452*tmp_960 + tmp_454*tmp_957 + tmp_456*tmp_959 + tmp_952) + tmp_87*(tmp_463*tmp_965 + tmp_465*tmp_962 + tmp_467*tmp_964 + tmp_953);
      real_t a_9_9 = tmp_110*(tmp_515*tmp_970 + tmp_517*tmp_967 + tmp_519*tmp_969 - 10.666666666666666*((0.25*tmp_511 - tmp_820 - tmp_880)*(0.25*tmp_511 - tmp_820 - tmp_880))) + tmp_133*(tmp_525*tmp_975 + tmp_527*tmp_972 + tmp_529*tmp_974 - 10.666666666666666*((0.25*tmp_521 - tmp_822 - tmp_882)*(0.25*tmp_521 - tmp_822 - tmp_882))) + tmp_64*(tmp_495*tmp_960 + tmp_497*tmp_957 + tmp_499*tmp_959 - 10.666666666666666*((0.25*tmp_491 - tmp_816 - tmp_876)*(0.25*tmp_491 - tmp_816 - tmp_876))) + tmp_87*(tmp_505*tmp_965 + tmp_507*tmp_962 + tmp_509*tmp_964 - 10.666666666666666*((0.25*tmp_501 - tmp_818 - tmp_878)*(0.25*tmp_501 - tmp_818 - tmp_878)));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_full_stokescc_2_2_affine_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = -p_affine_0_2;
      real_t tmp_10 = p_affine_3_2 + tmp_9;
      real_t tmp_11 = p_affine_1_2 + tmp_9;
      real_t tmp_12 = p_affine_3_1 + tmp_2;
      real_t tmp_13 = tmp_12*tmp_5;
      real_t tmp_14 = p_affine_2_2 + tmp_9;
      real_t tmp_15 = p_affine_3_0 + tmp_0;
      real_t tmp_16 = tmp_15*tmp_6;
      real_t tmp_17 = tmp_1*tmp_12;
      real_t tmp_18 = tmp_15*tmp_3;
      real_t tmp_19 = 1.0 / (tmp_10*tmp_4 - tmp_10*tmp_7 + tmp_11*tmp_13 - tmp_11*tmp_18 + tmp_14*tmp_16 - tmp_14*tmp_17);
      real_t tmp_20 = 0.55278640450004235;
      real_t tmp_21 = 0.55278640450004235;
      real_t tmp_22 = 2.3416407864998732;
      real_t tmp_23 = tmp_19*(tmp_20 + tmp_21 + tmp_22 - 3.0);
      real_t tmp_24 = tmp_23*tmp_8;
      real_t tmp_25 = tmp_16 - tmp_17;
      real_t tmp_26 = tmp_23*tmp_25;
      real_t tmp_27 = tmp_13 - tmp_18;
      real_t tmp_28 = tmp_23*tmp_27;
      real_t tmp_29 = tmp_24 + tmp_26 + tmp_28;
      real_t tmp_30 = -tmp_1*tmp_14 + tmp_11*tmp_5;
      real_t tmp_31 = tmp_23*tmp_30;
      real_t tmp_32 = tmp_1*tmp_10 - tmp_11*tmp_15;
      real_t tmp_33 = tmp_23*tmp_32;
      real_t tmp_34 = -tmp_10*tmp_5 + tmp_14*tmp_15;
      real_t tmp_35 = tmp_23*tmp_34;
      real_t tmp_36 = 0.5*tmp_31 + 0.5*tmp_33 + 0.5*tmp_35;
      real_t tmp_37 = 2*tmp_36;
      real_t tmp_38 = -tmp_11*tmp_3 + tmp_14*tmp_6;
      real_t tmp_39 = tmp_23*tmp_38;
      real_t tmp_40 = -tmp_10*tmp_6 + tmp_11*tmp_12;
      real_t tmp_41 = tmp_23*tmp_40;
      real_t tmp_42 = tmp_10*tmp_3 - tmp_12*tmp_14;
      real_t tmp_43 = tmp_23*tmp_42;
      real_t tmp_44 = 0.5*tmp_39 + 0.5*tmp_41 + 0.5*tmp_43;
      real_t tmp_45 = 2*tmp_44;
      real_t tmp_46 = 1.0*tmp_24 + 1.0*tmp_26 + 1.0*tmp_28;
      real_t tmp_47 = p_affine_0_0*p_affine_1_1;
      real_t tmp_48 = p_affine_0_0*p_affine_1_2;
      real_t tmp_49 = p_affine_2_1*p_affine_3_2;
      real_t tmp_50 = p_affine_0_1*p_affine_1_0;
      real_t tmp_51 = p_affine_0_1*p_affine_1_2;
      real_t tmp_52 = p_affine_2_2*p_affine_3_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_0;
      real_t tmp_54 = p_affine_0_2*p_affine_1_1;
      real_t tmp_55 = p_affine_2_0*p_affine_3_1;
      real_t tmp_56 = p_affine_2_2*p_affine_3_1;
      real_t tmp_57 = p_affine_2_0*p_affine_3_2;
      real_t tmp_58 = p_affine_2_1*p_affine_3_0;
      real_t tmp_59 = std::abs(p_affine_0_0*tmp_49 - p_affine_0_0*tmp_56 + p_affine_0_1*tmp_52 - p_affine_0_1*tmp_57 + p_affine_0_2*tmp_55 - p_affine_0_2*tmp_58 - p_affine_1_0*tmp_49 + p_affine_1_0*tmp_56 - p_affine_1_1*tmp_52 + p_affine_1_1*tmp_57 - p_affine_1_2*tmp_55 + p_affine_1_2*tmp_58 + p_affine_2_0*tmp_51 - p_affine_2_0*tmp_54 - p_affine_2_1*tmp_48 + p_affine_2_1*tmp_53 + p_affine_2_2*tmp_47 - p_affine_2_2*tmp_50 - p_affine_3_0*tmp_51 + p_affine_3_0*tmp_54 + p_affine_3_1*tmp_48 - p_affine_3_1*tmp_53 - p_affine_3_2*tmp_47 + p_affine_3_2*tmp_50);
      real_t tmp_60 = 0.041666666666666657*tmp_59;
      real_t tmp_61 = 0.55278640450004235;
      real_t tmp_62 = 2.3416407864998732;
      real_t tmp_63 = 0.55278640450004235;
      real_t tmp_64 = tmp_19*(tmp_61 + tmp_62 + tmp_63 - 3.0);
      real_t tmp_65 = tmp_64*tmp_8;
      real_t tmp_66 = tmp_25*tmp_64;
      real_t tmp_67 = tmp_27*tmp_64;
      real_t tmp_68 = tmp_65 + tmp_66 + tmp_67;
      real_t tmp_69 = tmp_30*tmp_64;
      real_t tmp_70 = tmp_32*tmp_64;
      real_t tmp_71 = tmp_34*tmp_64;
      real_t tmp_72 = 0.5*tmp_69 + 0.5*tmp_70 + 0.5*tmp_71;
      real_t tmp_73 = 2*tmp_72;
      real_t tmp_74 = tmp_38*tmp_64;
      real_t tmp_75 = tmp_40*tmp_64;
      real_t tmp_76 = tmp_42*tmp_64;
      real_t tmp_77 = 0.5*tmp_74 + 0.5*tmp_75 + 0.5*tmp_76;
      real_t tmp_78 = 2*tmp_77;
      real_t tmp_79 = 1.0*tmp_65 + 1.0*tmp_66 + 1.0*tmp_67;
      real_t tmp_80 = 0.041666666666666657*tmp_59;
      real_t tmp_81 = 2.3416407864998732;
      real_t tmp_82 = 0.55278640450004235;
      real_t tmp_83 = 0.55278640450004235;
      real_t tmp_84 = tmp_19*(tmp_81 + tmp_82 + tmp_83 - 3.0);
      real_t tmp_85 = tmp_8*tmp_84;
      real_t tmp_86 = tmp_25*tmp_84;
      real_t tmp_87 = tmp_27*tmp_84;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87;
      real_t tmp_89 = tmp_30*tmp_84;
      real_t tmp_90 = tmp_32*tmp_84;
      real_t tmp_91 = tmp_34*tmp_84;
      real_t tmp_92 = 0.5*tmp_89 + 0.5*tmp_90 + 0.5*tmp_91;
      real_t tmp_93 = 2*tmp_92;
      real_t tmp_94 = tmp_38*tmp_84;
      real_t tmp_95 = tmp_40*tmp_84;
      real_t tmp_96 = tmp_42*tmp_84;
      real_t tmp_97 = 0.5*tmp_94 + 0.5*tmp_95 + 0.5*tmp_96;
      real_t tmp_98 = 2*tmp_97;
      real_t tmp_99 = 1.0*tmp_85 + 1.0*tmp_86 + 1.0*tmp_87;
      real_t tmp_100 = 0.041666666666666657*tmp_59;
      real_t tmp_101 = 0.55278640450004235;
      real_t tmp_102 = 0.55278640450004235;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = tmp_19*(tmp_101 + tmp_102 + tmp_103 - 3.0);
      real_t tmp_105 = tmp_104*tmp_8;
      real_t tmp_106 = tmp_104*tmp_25;
      real_t tmp_107 = tmp_104*tmp_27;
      real_t tmp_108 = tmp_105 + tmp_106 + tmp_107;
      real_t tmp_109 = tmp_104*tmp_30;
      real_t tmp_110 = tmp_104*tmp_32;
      real_t tmp_111 = tmp_104*tmp_34;
      real_t tmp_112 = 0.5*tmp_109 + 0.5*tmp_110 + 0.5*tmp_111;
      real_t tmp_113 = 2*tmp_112;
      real_t tmp_114 = tmp_104*tmp_38;
      real_t tmp_115 = tmp_104*tmp_40;
      real_t tmp_116 = tmp_104*tmp_42;
      real_t tmp_117 = 0.5*tmp_114 + 0.5*tmp_115 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = 1.0*tmp_105 + 1.0*tmp_106 + 1.0*tmp_107;
      real_t tmp_120 = 0.041666666666666657*tmp_59;
      real_t tmp_121 = (2.0/3.0)*tmp_29;
      real_t tmp_122 = tmp_20 - 1.0;
      real_t tmp_123 = tmp_19*tmp_27;
      real_t tmp_124 = tmp_122*tmp_123;
      real_t tmp_125 = 2.0*tmp_46;
      real_t tmp_126 = 2.0*tmp_19;
      real_t tmp_127 = tmp_122*tmp_126;
      real_t tmp_128 = (2.0/3.0)*tmp_68;
      real_t tmp_129 = tmp_61 - 1.0;
      real_t tmp_130 = tmp_123*tmp_129;
      real_t tmp_131 = 2.0*tmp_79;
      real_t tmp_132 = tmp_126*tmp_129;
      real_t tmp_133 = (2.0/3.0)*tmp_88;
      real_t tmp_134 = tmp_81 - 1.0;
      real_t tmp_135 = tmp_123*tmp_134;
      real_t tmp_136 = 2.0*tmp_99;
      real_t tmp_137 = tmp_126*tmp_134;
      real_t tmp_138 = (2.0/3.0)*tmp_108;
      real_t tmp_139 = tmp_101 - 1.0;
      real_t tmp_140 = tmp_123*tmp_139;
      real_t tmp_141 = 2.0*tmp_119;
      real_t tmp_142 = tmp_126*tmp_139;
      real_t tmp_143 = tmp_21 - 1.0;
      real_t tmp_144 = tmp_19*tmp_25;
      real_t tmp_145 = tmp_143*tmp_144;
      real_t tmp_146 = tmp_126*tmp_143;
      real_t tmp_147 = tmp_62 - 1.0;
      real_t tmp_148 = tmp_144*tmp_147;
      real_t tmp_149 = tmp_126*tmp_147;
      real_t tmp_150 = tmp_82 - 1.0;
      real_t tmp_151 = tmp_144*tmp_150;
      real_t tmp_152 = tmp_126*tmp_150;
      real_t tmp_153 = tmp_102 - 1.0;
      real_t tmp_154 = tmp_144*tmp_153;
      real_t tmp_155 = tmp_126*tmp_153;
      real_t tmp_156 = tmp_22 - 1.0;
      real_t tmp_157 = tmp_19*tmp_8;
      real_t tmp_158 = tmp_156*tmp_157;
      real_t tmp_159 = tmp_126*tmp_156;
      real_t tmp_160 = tmp_63 - 1.0;
      real_t tmp_161 = tmp_157*tmp_160;
      real_t tmp_162 = tmp_126*tmp_160;
      real_t tmp_163 = tmp_83 - 1.0;
      real_t tmp_164 = tmp_157*tmp_163;
      real_t tmp_165 = tmp_126*tmp_163;
      real_t tmp_166 = tmp_103 - 1.0;
      real_t tmp_167 = tmp_157*tmp_166;
      real_t tmp_168 = tmp_126*tmp_166;
      real_t tmp_169 = tmp_157*tmp_21;
      real_t tmp_170 = tmp_144*tmp_22;
      real_t tmp_171 = 1.1055728090000847;
      real_t tmp_172 = tmp_157*tmp_171;
      real_t tmp_173 = 4.6832815729997463;
      real_t tmp_174 = tmp_144*tmp_173;
      real_t tmp_175 = tmp_19*tmp_21;
      real_t tmp_176 = tmp_175*tmp_30;
      real_t tmp_177 = tmp_19*tmp_22;
      real_t tmp_178 = tmp_177*tmp_32;
      real_t tmp_179 = tmp_175*tmp_38;
      real_t tmp_180 = tmp_177*tmp_40;
      real_t tmp_181 = tmp_157*tmp_62;
      real_t tmp_182 = tmp_144*tmp_63;
      real_t tmp_183 = 4.6832815729997463;
      real_t tmp_184 = tmp_157*tmp_183;
      real_t tmp_185 = 1.1055728090000847;
      real_t tmp_186 = tmp_144*tmp_185;
      real_t tmp_187 = tmp_19*tmp_62;
      real_t tmp_188 = tmp_187*tmp_30;
      real_t tmp_189 = tmp_19*tmp_63;
      real_t tmp_190 = tmp_189*tmp_32;
      real_t tmp_191 = tmp_187*tmp_38;
      real_t tmp_192 = tmp_189*tmp_40;
      real_t tmp_193 = tmp_157*tmp_82;
      real_t tmp_194 = tmp_144*tmp_83;
      real_t tmp_195 = 1.1055728090000847;
      real_t tmp_196 = tmp_157*tmp_195;
      real_t tmp_197 = 1.1055728090000847;
      real_t tmp_198 = tmp_144*tmp_197;
      real_t tmp_199 = tmp_19*tmp_82;
      real_t tmp_200 = tmp_199*tmp_30;
      real_t tmp_201 = tmp_19*tmp_83;
      real_t tmp_202 = tmp_201*tmp_32;
      real_t tmp_203 = tmp_199*tmp_38;
      real_t tmp_204 = tmp_201*tmp_40;
      real_t tmp_205 = tmp_102*tmp_157;
      real_t tmp_206 = tmp_103*tmp_144;
      real_t tmp_207 = 1.1055728090000847;
      real_t tmp_208 = tmp_157*tmp_207;
      real_t tmp_209 = 1.1055728090000847;
      real_t tmp_210 = tmp_144*tmp_209;
      real_t tmp_211 = tmp_102*tmp_19;
      real_t tmp_212 = tmp_211*tmp_30;
      real_t tmp_213 = tmp_103*tmp_19;
      real_t tmp_214 = tmp_213*tmp_32;
      real_t tmp_215 = tmp_211*tmp_38;
      real_t tmp_216 = tmp_213*tmp_40;
      real_t tmp_217 = tmp_157*tmp_20;
      real_t tmp_218 = tmp_177*tmp_27;
      real_t tmp_219 = 1.1055728090000847;
      real_t tmp_220 = tmp_157*tmp_219;
      real_t tmp_221 = tmp_123*tmp_173;
      real_t tmp_222 = tmp_19*tmp_20;
      real_t tmp_223 = tmp_222*tmp_30;
      real_t tmp_224 = tmp_177*tmp_34;
      real_t tmp_225 = tmp_222*tmp_38;
      real_t tmp_226 = tmp_177*tmp_42;
      real_t tmp_227 = tmp_157*tmp_61;
      real_t tmp_228 = tmp_189*tmp_27;
      real_t tmp_229 = 1.1055728090000847;
      real_t tmp_230 = tmp_157*tmp_229;
      real_t tmp_231 = tmp_123*tmp_185;
      real_t tmp_232 = tmp_19*tmp_61;
      real_t tmp_233 = tmp_232*tmp_30;
      real_t tmp_234 = tmp_189*tmp_34;
      real_t tmp_235 = tmp_232*tmp_38;
      real_t tmp_236 = tmp_189*tmp_42;
      real_t tmp_237 = tmp_157*tmp_81;
      real_t tmp_238 = tmp_201*tmp_27;
      real_t tmp_239 = 4.6832815729997463;
      real_t tmp_240 = tmp_157*tmp_239;
      real_t tmp_241 = tmp_123*tmp_197;
      real_t tmp_242 = tmp_19*tmp_81;
      real_t tmp_243 = tmp_242*tmp_30;
      real_t tmp_244 = tmp_201*tmp_34;
      real_t tmp_245 = tmp_242*tmp_38;
      real_t tmp_246 = tmp_201*tmp_42;
      real_t tmp_247 = tmp_101*tmp_157;
      real_t tmp_248 = tmp_213*tmp_27;
      real_t tmp_249 = 1.1055728090000847;
      real_t tmp_250 = tmp_157*tmp_249;
      real_t tmp_251 = tmp_123*tmp_209;
      real_t tmp_252 = tmp_101*tmp_19;
      real_t tmp_253 = tmp_252*tmp_30;
      real_t tmp_254 = tmp_213*tmp_34;
      real_t tmp_255 = tmp_252*tmp_38;
      real_t tmp_256 = tmp_213*tmp_42;
      real_t tmp_257 = tmp_144*tmp_20;
      real_t tmp_258 = tmp_175*tmp_27;
      real_t tmp_259 = tmp_144*tmp_219;
      real_t tmp_260 = tmp_123*tmp_171;
      real_t tmp_261 = tmp_222*tmp_32;
      real_t tmp_262 = tmp_175*tmp_34;
      real_t tmp_263 = tmp_222*tmp_40;
      real_t tmp_264 = tmp_175*tmp_42;
      real_t tmp_265 = tmp_144*tmp_61;
      real_t tmp_266 = tmp_187*tmp_27;
      real_t tmp_267 = tmp_144*tmp_229;
      real_t tmp_268 = tmp_123*tmp_183;
      real_t tmp_269 = tmp_232*tmp_32;
      real_t tmp_270 = tmp_187*tmp_34;
      real_t tmp_271 = tmp_232*tmp_40;
      real_t tmp_272 = tmp_187*tmp_42;
      real_t tmp_273 = tmp_144*tmp_81;
      real_t tmp_274 = tmp_199*tmp_27;
      real_t tmp_275 = tmp_144*tmp_239;
      real_t tmp_276 = tmp_123*tmp_195;
      real_t tmp_277 = tmp_242*tmp_32;
      real_t tmp_278 = tmp_199*tmp_34;
      real_t tmp_279 = tmp_242*tmp_40;
      real_t tmp_280 = tmp_199*tmp_42;
      real_t tmp_281 = tmp_101*tmp_144;
      real_t tmp_282 = tmp_211*tmp_27;
      real_t tmp_283 = tmp_144*tmp_249;
      real_t tmp_284 = tmp_123*tmp_207;
      real_t tmp_285 = tmp_252*tmp_32;
      real_t tmp_286 = tmp_211*tmp_34;
      real_t tmp_287 = tmp_252*tmp_40;
      real_t tmp_288 = tmp_211*tmp_42;
      real_t tmp_289 = -tmp_21;
      real_t tmp_290 = 4.0 - tmp_20;
      real_t tmp_291 = tmp_19*(-tmp_173 + tmp_289 + tmp_290);
      real_t tmp_292 = tmp_291*tmp_8;
      real_t tmp_293 = -tmp_62;
      real_t tmp_294 = 4.0 - tmp_61;
      real_t tmp_295 = tmp_19*(-tmp_185 + tmp_293 + tmp_294);
      real_t tmp_296 = tmp_295*tmp_8;
      real_t tmp_297 = -tmp_82;
      real_t tmp_298 = 4.0 - tmp_81;
      real_t tmp_299 = tmp_19*(-tmp_197 + tmp_297 + tmp_298);
      real_t tmp_300 = tmp_299*tmp_8;
      real_t tmp_301 = -tmp_102;
      real_t tmp_302 = 4.0 - tmp_101;
      real_t tmp_303 = tmp_19*(-tmp_209 + tmp_301 + tmp_302);
      real_t tmp_304 = tmp_303*tmp_8;
      real_t tmp_305 = -tmp_22;
      real_t tmp_306 = tmp_19*(-tmp_171 + tmp_290 + tmp_305);
      real_t tmp_307 = tmp_25*tmp_306;
      real_t tmp_308 = -tmp_63;
      real_t tmp_309 = tmp_19*(-tmp_183 + tmp_294 + tmp_308);
      real_t tmp_310 = tmp_25*tmp_309;
      real_t tmp_311 = -tmp_83;
      real_t tmp_312 = tmp_19*(-tmp_195 + tmp_298 + tmp_311);
      real_t tmp_313 = tmp_25*tmp_312;
      real_t tmp_314 = -tmp_103;
      real_t tmp_315 = tmp_19*(-tmp_207 + tmp_302 + tmp_314);
      real_t tmp_316 = tmp_25*tmp_315;
      real_t tmp_317 = tmp_19*(-tmp_219 + tmp_289 + tmp_305 + 4.0);
      real_t tmp_318 = tmp_27*tmp_317;
      real_t tmp_319 = tmp_19*(-tmp_229 + tmp_293 + tmp_308 + 4.0);
      real_t tmp_320 = tmp_27*tmp_319;
      real_t tmp_321 = tmp_19*(-tmp_239 + tmp_297 + tmp_311 + 4.0);
      real_t tmp_322 = tmp_27*tmp_321;
      real_t tmp_323 = tmp_19*(-tmp_249 + tmp_301 + tmp_314 + 4.0);
      real_t tmp_324 = tmp_27*tmp_323;
      real_t a_0_0 = tmp_100*(-2.0/3.0*(tmp_88*tmp_88) + tmp_93*(tmp_89 + tmp_90 + tmp_91) + tmp_98*(tmp_94 + tmp_95 + tmp_96) + tmp_99*(2.0*tmp_85 + 2.0*tmp_86 + 2.0*tmp_87)) + tmp_120*(-2.0/3.0*(tmp_108*tmp_108) + tmp_113*(tmp_109 + tmp_110 + tmp_111) + tmp_118*(tmp_114 + tmp_115 + tmp_116) + tmp_119*(2.0*tmp_105 + 2.0*tmp_106 + 2.0*tmp_107)) + tmp_60*(-2.0/3.0*(tmp_29*tmp_29) + tmp_37*(tmp_31 + tmp_33 + tmp_35) + tmp_45*(tmp_39 + tmp_41 + tmp_43) + tmp_46*(2.0*tmp_24 + 2.0*tmp_26 + 2.0*tmp_28)) + tmp_80*(-2.0/3.0*(tmp_68*tmp_68) + tmp_73*(tmp_69 + tmp_70 + tmp_71) + tmp_78*(tmp_74 + tmp_75 + tmp_76) + tmp_79*(2.0*tmp_65 + 2.0*tmp_66 + 2.0*tmp_67));
      real_t a_0_1 = tmp_100*(-tmp_133*tmp_135 + tmp_135*tmp_136 + tmp_137*tmp_34*tmp_92 + tmp_137*tmp_42*tmp_97) + tmp_120*(tmp_112*tmp_142*tmp_34 + tmp_117*tmp_142*tmp_42 - tmp_138*tmp_140 + tmp_140*tmp_141) + tmp_60*(-tmp_121*tmp_124 + tmp_124*tmp_125 + tmp_127*tmp_34*tmp_36 + tmp_127*tmp_42*tmp_44) + tmp_80*(-tmp_128*tmp_130 + tmp_130*tmp_131 + tmp_132*tmp_34*tmp_72 + tmp_132*tmp_42*tmp_77);
      real_t a_0_2 = tmp_100*(-tmp_133*tmp_151 + tmp_136*tmp_151 + tmp_152*tmp_32*tmp_92 + tmp_152*tmp_40*tmp_97) + tmp_120*(tmp_112*tmp_155*tmp_32 + tmp_117*tmp_155*tmp_40 - tmp_138*tmp_154 + tmp_141*tmp_154) + tmp_60*(-tmp_121*tmp_145 + tmp_125*tmp_145 + tmp_146*tmp_32*tmp_36 + tmp_146*tmp_40*tmp_44) + tmp_80*(-tmp_128*tmp_148 + tmp_131*tmp_148 + tmp_149*tmp_32*tmp_72 + tmp_149*tmp_40*tmp_77);
      real_t a_0_3 = tmp_100*(-tmp_133*tmp_164 + tmp_136*tmp_164 + tmp_165*tmp_30*tmp_92 + tmp_165*tmp_38*tmp_97) + tmp_120*(tmp_112*tmp_168*tmp_30 + tmp_117*tmp_168*tmp_38 - tmp_138*tmp_167 + tmp_141*tmp_167) + tmp_60*(-tmp_121*tmp_158 + tmp_125*tmp_158 + tmp_159*tmp_30*tmp_36 + tmp_159*tmp_38*tmp_44) + tmp_80*(-tmp_128*tmp_161 + tmp_131*tmp_161 + tmp_162*tmp_30*tmp_72 + tmp_162*tmp_38*tmp_77);
      real_t a_0_4 = tmp_100*(-tmp_133*(tmp_193 + tmp_194) + tmp_93*(tmp_200 + tmp_202) + tmp_98*(tmp_203 + tmp_204) + tmp_99*(tmp_196 + tmp_198)) + tmp_120*(tmp_113*(tmp_212 + tmp_214) + tmp_118*(tmp_215 + tmp_216) + tmp_119*(tmp_208 + tmp_210) - tmp_138*(tmp_205 + tmp_206)) + tmp_60*(-tmp_121*(tmp_169 + tmp_170) + tmp_37*(tmp_176 + tmp_178) + tmp_45*(tmp_179 + tmp_180) + tmp_46*(tmp_172 + tmp_174)) + tmp_80*(-tmp_128*(tmp_181 + tmp_182) + tmp_73*(tmp_188 + tmp_190) + tmp_78*(tmp_191 + tmp_192) + tmp_79*(tmp_184 + tmp_186));
      real_t a_0_5 = tmp_100*(-tmp_133*(tmp_237 + tmp_238) + tmp_93*(tmp_243 + tmp_244) + tmp_98*(tmp_245 + tmp_246) + tmp_99*(tmp_240 + tmp_241)) + tmp_120*(tmp_113*(tmp_253 + tmp_254) + tmp_118*(tmp_255 + tmp_256) + tmp_119*(tmp_250 + tmp_251) - tmp_138*(tmp_247 + tmp_248)) + tmp_60*(-tmp_121*(tmp_217 + tmp_218) + tmp_37*(tmp_223 + tmp_224) + tmp_45*(tmp_225 + tmp_226) + tmp_46*(tmp_220 + tmp_221)) + tmp_80*(-tmp_128*(tmp_227 + tmp_228) + tmp_73*(tmp_233 + tmp_234) + tmp_78*(tmp_235 + tmp_236) + tmp_79*(tmp_230 + tmp_231));
      real_t a_0_6 = tmp_100*(-tmp_133*(tmp_273 + tmp_274) + tmp_93*(tmp_277 + tmp_278) + tmp_98*(tmp_279 + tmp_280) + tmp_99*(tmp_275 + tmp_276)) + tmp_120*(tmp_113*(tmp_285 + tmp_286) + tmp_118*(tmp_287 + tmp_288) + tmp_119*(tmp_283 + tmp_284) - tmp_138*(tmp_281 + tmp_282)) + tmp_60*(-tmp_121*(tmp_257 + tmp_258) + tmp_37*(tmp_261 + tmp_262) + tmp_45*(tmp_263 + tmp_264) + tmp_46*(tmp_259 + tmp_260)) + tmp_80*(-tmp_128*(tmp_265 + tmp_266) + tmp_73*(tmp_269 + tmp_270) + tmp_78*(tmp_271 + tmp_272) + tmp_79*(tmp_267 + tmp_268));
      real_t a_0_7 = tmp_100*(-tmp_133*(-tmp_194 - tmp_238 + tmp_300) + tmp_93*(-tmp_202 - tmp_244 + tmp_299*tmp_30) + tmp_98*(-tmp_204 - tmp_246 + tmp_299*tmp_38) + tmp_99*(-tmp_198 - tmp_241 + 2.0*tmp_300)) + tmp_120*(tmp_113*(-tmp_214 - tmp_254 + tmp_30*tmp_303) + tmp_118*(-tmp_216 - tmp_256 + tmp_303*tmp_38) + tmp_119*(-tmp_210 - tmp_251 + 2.0*tmp_304) - tmp_138*(-tmp_206 - tmp_248 + tmp_304)) + tmp_60*(-tmp_121*(-tmp_170 - tmp_218 + tmp_292) + tmp_37*(-tmp_178 - tmp_224 + tmp_291*tmp_30) + tmp_45*(-tmp_180 - tmp_226 + tmp_291*tmp_38) + tmp_46*(-tmp_174 - tmp_221 + 2.0*tmp_292)) + tmp_80*(-tmp_128*(-tmp_182 - tmp_228 + tmp_296) + tmp_73*(-tmp_190 - tmp_234 + tmp_295*tmp_30) + tmp_78*(-tmp_192 - tmp_236 + tmp_295*tmp_38) + tmp_79*(-tmp_186 - tmp_231 + 2.0*tmp_296));
      real_t a_0_8 = tmp_100*(-tmp_133*(-tmp_193 - tmp_274 + tmp_313) + tmp_93*(-tmp_200 - tmp_278 + tmp_312*tmp_32) + tmp_98*(-tmp_203 - tmp_280 + tmp_312*tmp_40) + tmp_99*(-tmp_196 - tmp_276 + 2.0*tmp_313)) + tmp_120*(tmp_113*(-tmp_212 - tmp_286 + tmp_315*tmp_32) + tmp_118*(-tmp_215 - tmp_288 + tmp_315*tmp_40) + tmp_119*(-tmp_208 - tmp_284 + 2.0*tmp_316) - tmp_138*(-tmp_205 - tmp_282 + tmp_316)) + tmp_60*(-tmp_121*(-tmp_169 - tmp_258 + tmp_307) + tmp_37*(-tmp_176 - tmp_262 + tmp_306*tmp_32) + tmp_45*(-tmp_179 - tmp_264 + tmp_306*tmp_40) + tmp_46*(-tmp_172 - tmp_260 + 2.0*tmp_307)) + tmp_80*(-tmp_128*(-tmp_181 - tmp_266 + tmp_310) + tmp_73*(-tmp_188 - tmp_270 + tmp_309*tmp_32) + tmp_78*(-tmp_191 - tmp_272 + tmp_309*tmp_40) + tmp_79*(-tmp_184 - tmp_268 + 2.0*tmp_310));
      real_t a_0_9 = tmp_100*(-tmp_133*(-tmp_237 - tmp_273 + tmp_322) + tmp_93*(-tmp_243 - tmp_277 + tmp_321*tmp_34) + tmp_98*(-tmp_245 - tmp_279 + tmp_321*tmp_42) + tmp_99*(-tmp_240 - tmp_275 + 2.0*tmp_322)) + tmp_120*(tmp_113*(-tmp_253 - tmp_285 + tmp_323*tmp_34) + tmp_118*(-tmp_255 - tmp_287 + tmp_323*tmp_42) + tmp_119*(-tmp_250 - tmp_283 + 2.0*tmp_324) - tmp_138*(-tmp_247 - tmp_281 + tmp_324)) + tmp_60*(-tmp_121*(-tmp_217 - tmp_257 + tmp_318) + tmp_37*(-tmp_223 - tmp_261 + tmp_317*tmp_34) + tmp_45*(-tmp_225 - tmp_263 + tmp_317*tmp_42) + tmp_46*(-tmp_220 - tmp_259 + 2.0*tmp_318)) + tmp_80*(-tmp_128*(-tmp_227 - tmp_265 + tmp_320) + tmp_73*(-tmp_233 - tmp_269 + tmp_319*tmp_34) + tmp_78*(-tmp_235 - tmp_271 + tmp_319*tmp_42) + tmp_79*(-tmp_230 - tmp_267 + 2.0*tmp_320));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

} // namespace forms
} // namespace hyteg
