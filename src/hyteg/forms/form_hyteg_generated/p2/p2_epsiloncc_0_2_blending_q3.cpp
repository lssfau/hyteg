/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsiloncc_0_2_blending_q3.hpp"

namespace hyteg {
namespace forms {

   void p2_epsiloncc_0_2_blending_q3::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_blending_q3::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Blending_DF_Tetrahedron_4_0 = 0;
      real_t Blending_DF_Tetrahedron_4_1 = 0;
      real_t Blending_DF_Tetrahedron_4_2 = 0;
      real_t Blending_DF_Tetrahedron_4_3 = 0;
      real_t Blending_DF_Tetrahedron_4_4 = 0;
      real_t Blending_DF_Tetrahedron_4_5 = 0;
      real_t Blending_DF_Tetrahedron_4_6 = 0;
      real_t Blending_DF_Tetrahedron_4_7 = 0;
      real_t Blending_DF_Tetrahedron_4_8 = 0;
      real_t Blending_DF_Tetrahedron_5_0 = 0;
      real_t Blending_DF_Tetrahedron_5_1 = 0;
      real_t Blending_DF_Tetrahedron_5_2 = 0;
      real_t Blending_DF_Tetrahedron_5_3 = 0;
      real_t Blending_DF_Tetrahedron_5_4 = 0;
      real_t Blending_DF_Tetrahedron_5_5 = 0;
      real_t Blending_DF_Tetrahedron_5_6 = 0;
      real_t Blending_DF_Tetrahedron_5_7 = 0;
      real_t Blending_DF_Tetrahedron_5_8 = 0;
      Blending_DF_Tetrahedron( 0.64142979149569634*p_affine_0_0 + 0.16200149169852451*p_affine_1_0 + 0.18385035049209769*p_affine_2_0 + 0.012718366313681451*p_affine_3_0, 0.64142979149569634*p_affine_0_1 + 0.16200149169852451*p_affine_1_1 + 0.18385035049209769*p_affine_2_1 + 0.012718366313681451*p_affine_3_1, 0.64142979149569634*p_affine_0_2 + 0.16200149169852451*p_affine_1_2 + 0.18385035049209769*p_affine_2_2 + 0.012718366313681451*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.34544415571973075*p_affine_0_0 + 0.010905212211189241*p_affine_1_0 + 0.28152380212354622*p_affine_2_0 + 0.3621268299455338*p_affine_3_0, 0.34544415571973075*p_affine_0_1 + 0.010905212211189241*p_affine_1_1 + 0.28152380212354622*p_affine_2_1 + 0.3621268299455338*p_affine_3_1, 0.34544415571973075*p_affine_0_2 + 0.010905212211189241*p_affine_1_2 + 0.28152380212354622*p_affine_2_2 + 0.3621268299455338*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.43985894764927508*p_affine_0_0 + 0.19011700243928389*p_affine_1_0 + 0.011403329444557171*p_affine_2_0 + 0.35862072046688392*p_affine_3_0, 0.43985894764927508*p_affine_0_1 + 0.19011700243928389*p_affine_1_1 + 0.011403329444557171*p_affine_2_1 + 0.35862072046688392*p_affine_3_1, 0.43985894764927508*p_affine_0_2 + 0.19011700243928389*p_affine_1_2 + 0.011403329444557171*p_affine_2_2 + 0.35862072046688392*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.037871631782356974*p_affine_0_0 + 0.170816925164989*p_affine_1_0 + 0.15281814309092731*p_affine_2_0 + 0.63849329996172666*p_affine_3_0, 0.037871631782356974*p_affine_0_1 + 0.170816925164989*p_affine_1_1 + 0.15281814309092731*p_affine_2_1 + 0.63849329996172666*p_affine_3_1, 0.037871631782356974*p_affine_0_2 + 0.170816925164989*p_affine_1_2 + 0.15281814309092731*p_affine_2_2 + 0.63849329996172666*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Blending_DF_Tetrahedron( 0.12480486216524708*p_affine_0_0 + 0.15868516322744061*p_affine_1_0 + 0.58566280565521578*p_affine_2_0 + 0.1308471689520965*p_affine_3_0, 0.12480486216524708*p_affine_0_1 + 0.15868516322744061*p_affine_1_1 + 0.58566280565521578*p_affine_2_1 + 0.1308471689520965*p_affine_3_1, 0.12480486216524708*p_affine_0_2 + 0.15868516322744061*p_affine_1_2 + 0.58566280565521578*p_affine_2_2 + 0.1308471689520965*p_affine_3_2, &Blending_DF_Tetrahedron_4_0, &Blending_DF_Tetrahedron_4_1, &Blending_DF_Tetrahedron_4_2, &Blending_DF_Tetrahedron_4_3, &Blending_DF_Tetrahedron_4_4, &Blending_DF_Tetrahedron_4_5, &Blending_DF_Tetrahedron_4_6, &Blending_DF_Tetrahedron_4_7, &Blending_DF_Tetrahedron_4_8 );
      Blending_DF_Tetrahedron( 0.14148275196950461*p_affine_0_0 + 0.57122605214911515*p_affine_1_0 + 0.14691839008716959*p_affine_2_0 + 0.14037280579421069*p_affine_3_0, 0.14148275196950461*p_affine_0_1 + 0.57122605214911515*p_affine_1_1 + 0.14691839008716959*p_affine_2_1 + 0.14037280579421069*p_affine_3_1, 0.14148275196950461*p_affine_0_2 + 0.57122605214911515*p_affine_1_2 + 0.14691839008716959*p_affine_2_2 + 0.14037280579421069*p_affine_3_2, &Blending_DF_Tetrahedron_5_0, &Blending_DF_Tetrahedron_5_1, &Blending_DF_Tetrahedron_5_2, &Blending_DF_Tetrahedron_5_3, &Blending_DF_Tetrahedron_5_4, &Blending_DF_Tetrahedron_5_5, &Blending_DF_Tetrahedron_5_6, &Blending_DF_Tetrahedron_5_7, &Blending_DF_Tetrahedron_5_8 );
      real_t tmp_0 = 0.64800596679409805;
      real_t tmp_1 = 0.73540140196839077;
      real_t tmp_2 = 0.050873465254725803;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_48 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_49 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_50 = tmp_12*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.020387000459557512*std::abs(tmp_19);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.043620848844756963;
      real_t tmp_73 = 1.1260952084941849;
      real_t tmp_74 = 1.4485073197821352;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_0*tmp_78 - Blending_DF_Tetrahedron_1_0*tmp_80 + Blending_DF_Tetrahedron_1_1*tmp_79 - Blending_DF_Tetrahedron_1_1*tmp_81 + Blending_DF_Tetrahedron_1_2*tmp_76 - Blending_DF_Tetrahedron_1_2*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_79 - tmp_81);
      real_t tmp_86 = tmp_83*(tmp_78 - tmp_80);
      real_t tmp_87 = tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_92 = tmp_83*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_93 = tmp_83*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_94 = tmp_12*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.021344402118457811*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 0.76046800975713558;
      real_t tmp_103 = 0.045613317778228683;
      real_t tmp_104 = 1.4344828818675357;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_0*tmp_108 - Blending_DF_Tetrahedron_2_0*tmp_110 + Blending_DF_Tetrahedron_2_1*tmp_109 - Blending_DF_Tetrahedron_2_1*tmp_111 + Blending_DF_Tetrahedron_2_2*tmp_106 - Blending_DF_Tetrahedron_2_2*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_109 - tmp_111);
      real_t tmp_116 = tmp_113*(tmp_108 - tmp_110);
      real_t tmp_117 = tmp_114*tmp_12 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_122 = tmp_113*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_123 = tmp_113*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_124 = tmp_12*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.022094671190740864*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.68326770065995601;
      real_t tmp_133 = 0.61127257236370924;
      real_t tmp_134 = 2.5539731998469066;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_0*tmp_138 - Blending_DF_Tetrahedron_3_0*tmp_140 + Blending_DF_Tetrahedron_3_1*tmp_139 - Blending_DF_Tetrahedron_3_1*tmp_141 + Blending_DF_Tetrahedron_3_2*tmp_136 - Blending_DF_Tetrahedron_3_2*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_139 - tmp_141);
      real_t tmp_146 = tmp_143*(tmp_138 - tmp_140);
      real_t tmp_147 = tmp_12*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_152 = tmp_143*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_153 = tmp_143*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_154 = tmp_12*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.023437401610067198*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 0.63474065290976245;
      real_t tmp_163 = 2.3426512226208631;
      real_t tmp_164 = 0.52338867580838599;
      real_t tmp_165 = tmp_162 + tmp_163 + tmp_164 - 3.0;
      real_t tmp_166 = Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_7;
      real_t tmp_167 = Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_6;
      real_t tmp_168 = Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_8;
      real_t tmp_169 = Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_6;
      real_t tmp_170 = Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_7;
      real_t tmp_171 = Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_8;
      real_t tmp_172 = Blending_DF_Tetrahedron_4_0*tmp_168 - Blending_DF_Tetrahedron_4_0*tmp_170 + Blending_DF_Tetrahedron_4_1*tmp_169 - Blending_DF_Tetrahedron_4_1*tmp_171 + Blending_DF_Tetrahedron_4_2*tmp_166 - Blending_DF_Tetrahedron_4_2*tmp_167;
      real_t tmp_173 = tmp_30/tmp_172;
      real_t tmp_174 = tmp_173*(tmp_166 - tmp_167);
      real_t tmp_175 = tmp_173*(tmp_169 - tmp_171);
      real_t tmp_176 = tmp_173*(tmp_168 - tmp_170);
      real_t tmp_177 = tmp_12*tmp_174 + tmp_175*tmp_33 + tmp_176*tmp_35;
      real_t tmp_178 = tmp_174*tmp_38 + tmp_175*tmp_39 + tmp_176*tmp_40;
      real_t tmp_179 = tmp_174*tmp_42 + tmp_175*tmp_43 + tmp_176*tmp_44;
      real_t tmp_180 = tmp_165*tmp_177 + tmp_165*tmp_178 + tmp_165*tmp_179;
      real_t tmp_181 = tmp_173*(Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_4 - Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_3);
      real_t tmp_182 = tmp_173*(-Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_5 + Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_3);
      real_t tmp_183 = tmp_173*(Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_5 - Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_4);
      real_t tmp_184 = tmp_12*tmp_181 + tmp_182*tmp_33 + tmp_183*tmp_35;
      real_t tmp_185 = 0.5*tmp_165;
      real_t tmp_186 = tmp_181*tmp_38 + tmp_182*tmp_39 + tmp_183*tmp_40;
      real_t tmp_187 = tmp_181*tmp_42 + tmp_182*tmp_43 + tmp_183*tmp_44;
      real_t tmp_188 = tmp_184*tmp_185 + tmp_185*tmp_186 + tmp_185*tmp_187;
      real_t tmp_189 = 0.037402527819592891*std::abs(tmp_172);
      real_t tmp_190 = tmp_189*tmp_68;
      real_t tmp_191 = tmp_188*tmp_190;
      real_t tmp_192 = 2.2849042085964606;
      real_t tmp_193 = 0.58767356034867835;
      real_t tmp_194 = 0.56149122317684275;
      real_t tmp_195 = tmp_192 + tmp_193 + tmp_194 - 3.0;
      real_t tmp_196 = Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_7;
      real_t tmp_197 = Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_6;
      real_t tmp_198 = Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_8;
      real_t tmp_199 = Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_6;
      real_t tmp_200 = Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_7;
      real_t tmp_201 = Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_8;
      real_t tmp_202 = Blending_DF_Tetrahedron_5_0*tmp_198 - Blending_DF_Tetrahedron_5_0*tmp_200 + Blending_DF_Tetrahedron_5_1*tmp_199 - Blending_DF_Tetrahedron_5_1*tmp_201 + Blending_DF_Tetrahedron_5_2*tmp_196 - Blending_DF_Tetrahedron_5_2*tmp_197;
      real_t tmp_203 = tmp_30/tmp_202;
      real_t tmp_204 = tmp_203*(tmp_196 - tmp_197);
      real_t tmp_205 = tmp_203*(tmp_199 - tmp_201);
      real_t tmp_206 = tmp_203*(tmp_198 - tmp_200);
      real_t tmp_207 = tmp_12*tmp_204 + tmp_205*tmp_33 + tmp_206*tmp_35;
      real_t tmp_208 = tmp_204*tmp_38 + tmp_205*tmp_39 + tmp_206*tmp_40;
      real_t tmp_209 = tmp_204*tmp_42 + tmp_205*tmp_43 + tmp_206*tmp_44;
      real_t tmp_210 = tmp_195*tmp_207 + tmp_195*tmp_208 + tmp_195*tmp_209;
      real_t tmp_211 = tmp_203*(Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_4 - Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_3);
      real_t tmp_212 = tmp_203*(-Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_5 + Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_3);
      real_t tmp_213 = tmp_203*(Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_5 - Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_4);
      real_t tmp_214 = tmp_12*tmp_211 + tmp_212*tmp_33 + tmp_213*tmp_35;
      real_t tmp_215 = 0.5*tmp_195;
      real_t tmp_216 = tmp_211*tmp_38 + tmp_212*tmp_39 + tmp_213*tmp_40;
      real_t tmp_217 = tmp_211*tmp_42 + tmp_212*tmp_43 + tmp_213*tmp_44;
      real_t tmp_218 = tmp_214*tmp_215 + tmp_215*tmp_216 + tmp_215*tmp_217;
      real_t tmp_219 = 0.042000663468250377*std::abs(tmp_202);
      real_t tmp_220 = tmp_219*tmp_68;
      real_t tmp_221 = tmp_218*tmp_220;
      real_t tmp_222 = 2.0*tmp_67;
      real_t tmp_223 = tmp_222*tmp_54;
      real_t tmp_224 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_225 = tmp_224*tmp_45;
      real_t tmp_226 = tmp_222*tmp_98;
      real_t tmp_227 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_228 = tmp_227*tmp_89;
      real_t tmp_229 = tmp_128*tmp_222;
      real_t tmp_230 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_231 = tmp_119*tmp_230;
      real_t tmp_232 = tmp_158*tmp_222;
      real_t tmp_233 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_234 = tmp_149*tmp_233;
      real_t tmp_235 = tmp_188*tmp_222;
      real_t tmp_236 = tmp_189*(tmp_162 - 1.0);
      real_t tmp_237 = tmp_179*tmp_236;
      real_t tmp_238 = tmp_218*tmp_222;
      real_t tmp_239 = tmp_219*(tmp_192 - 1.0);
      real_t tmp_240 = tmp_209*tmp_239;
      real_t tmp_241 = tmp_223*tmp_69;
      real_t tmp_242 = tmp_1 - 1.0;
      real_t tmp_243 = tmp_242*tmp_41;
      real_t tmp_244 = tmp_226*tmp_99;
      real_t tmp_245 = tmp_73 - 1.0;
      real_t tmp_246 = tmp_245*tmp_88;
      real_t tmp_247 = tmp_129*tmp_229;
      real_t tmp_248 = tmp_103 - 1.0;
      real_t tmp_249 = tmp_118*tmp_248;
      real_t tmp_250 = tmp_159*tmp_232;
      real_t tmp_251 = tmp_133 - 1.0;
      real_t tmp_252 = tmp_148*tmp_251;
      real_t tmp_253 = tmp_189*tmp_235;
      real_t tmp_254 = tmp_163 - 1.0;
      real_t tmp_255 = tmp_178*tmp_254;
      real_t tmp_256 = tmp_219*tmp_238;
      real_t tmp_257 = tmp_193 - 1.0;
      real_t tmp_258 = tmp_208*tmp_257;
      real_t tmp_259 = tmp_2 - 1.0;
      real_t tmp_260 = tmp_259*tmp_37;
      real_t tmp_261 = tmp_74 - 1.0;
      real_t tmp_262 = tmp_261*tmp_87;
      real_t tmp_263 = tmp_104 - 1.0;
      real_t tmp_264 = tmp_117*tmp_263;
      real_t tmp_265 = tmp_134 - 1.0;
      real_t tmp_266 = tmp_147*tmp_265;
      real_t tmp_267 = tmp_164 - 1.0;
      real_t tmp_268 = tmp_177*tmp_267;
      real_t tmp_269 = tmp_194 - 1.0;
      real_t tmp_270 = tmp_207*tmp_269;
      real_t tmp_271 = tmp_1*tmp_37;
      real_t tmp_272 = tmp_2*tmp_41;
      real_t tmp_273 = tmp_271 + tmp_272;
      real_t tmp_274 = tmp_73*tmp_87;
      real_t tmp_275 = tmp_74*tmp_88;
      real_t tmp_276 = tmp_274 + tmp_275;
      real_t tmp_277 = tmp_103*tmp_117;
      real_t tmp_278 = tmp_104*tmp_118;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_133*tmp_147;
      real_t tmp_281 = tmp_134*tmp_148;
      real_t tmp_282 = tmp_280 + tmp_281;
      real_t tmp_283 = tmp_163*tmp_177;
      real_t tmp_284 = tmp_164*tmp_178;
      real_t tmp_285 = tmp_283 + tmp_284;
      real_t tmp_286 = tmp_193*tmp_207;
      real_t tmp_287 = tmp_194*tmp_208;
      real_t tmp_288 = tmp_286 + tmp_287;
      real_t tmp_289 = tmp_0*tmp_37;
      real_t tmp_290 = tmp_2*tmp_45;
      real_t tmp_291 = tmp_289 + tmp_290;
      real_t tmp_292 = tmp_72*tmp_87;
      real_t tmp_293 = tmp_74*tmp_89;
      real_t tmp_294 = tmp_292 + tmp_293;
      real_t tmp_295 = tmp_102*tmp_117;
      real_t tmp_296 = tmp_104*tmp_119;
      real_t tmp_297 = tmp_295 + tmp_296;
      real_t tmp_298 = tmp_132*tmp_147;
      real_t tmp_299 = tmp_134*tmp_149;
      real_t tmp_300 = tmp_298 + tmp_299;
      real_t tmp_301 = tmp_162*tmp_177;
      real_t tmp_302 = tmp_164*tmp_179;
      real_t tmp_303 = tmp_301 + tmp_302;
      real_t tmp_304 = tmp_192*tmp_207;
      real_t tmp_305 = tmp_194*tmp_209;
      real_t tmp_306 = tmp_304 + tmp_305;
      real_t tmp_307 = tmp_0*tmp_41;
      real_t tmp_308 = tmp_1*tmp_45;
      real_t tmp_309 = tmp_307 + tmp_308;
      real_t tmp_310 = tmp_72*tmp_88;
      real_t tmp_311 = tmp_73*tmp_89;
      real_t tmp_312 = tmp_310 + tmp_311;
      real_t tmp_313 = tmp_102*tmp_118;
      real_t tmp_314 = tmp_103*tmp_119;
      real_t tmp_315 = tmp_313 + tmp_314;
      real_t tmp_316 = tmp_132*tmp_148;
      real_t tmp_317 = tmp_133*tmp_149;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_162*tmp_178;
      real_t tmp_320 = tmp_163*tmp_179;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = tmp_192*tmp_208;
      real_t tmp_323 = tmp_193*tmp_209;
      real_t tmp_324 = tmp_322 + tmp_323;
      real_t tmp_325 = -tmp_1;
      real_t tmp_326 = 4.0 - tmp_0;
      real_t tmp_327 = tmp_325 + tmp_326 - 0.10174693050945161;
      real_t tmp_328 = -tmp_272 - tmp_290 + tmp_327*tmp_37;
      real_t tmp_329 = -tmp_73;
      real_t tmp_330 = 4.0 - tmp_72;
      real_t tmp_331 = tmp_329 + tmp_330 - 2.8970146395642704;
      real_t tmp_332 = -tmp_275 - tmp_293 + tmp_331*tmp_87;
      real_t tmp_333 = -tmp_103;
      real_t tmp_334 = 4.0 - tmp_102;
      real_t tmp_335 = tmp_333 + tmp_334 - 2.8689657637350714;
      real_t tmp_336 = tmp_117*tmp_335 - tmp_278 - tmp_296;
      real_t tmp_337 = -tmp_133;
      real_t tmp_338 = 4.0 - tmp_132;
      real_t tmp_339 = tmp_337 + tmp_338 - 5.1079463996938133;
      real_t tmp_340 = tmp_147*tmp_339 - tmp_281 - tmp_299;
      real_t tmp_341 = -tmp_163;
      real_t tmp_342 = 4.0 - tmp_162;
      real_t tmp_343 = tmp_341 + tmp_342 - 1.046777351616772;
      real_t tmp_344 = tmp_177*tmp_343 - tmp_284 - tmp_302;
      real_t tmp_345 = -tmp_193;
      real_t tmp_346 = 4.0 - tmp_192;
      real_t tmp_347 = tmp_345 + tmp_346 - 1.1229824463536855;
      real_t tmp_348 = tmp_207*tmp_347 - tmp_287 - tmp_305;
      real_t tmp_349 = -tmp_2;
      real_t tmp_350 = tmp_326 + tmp_349 - 1.4708028039367815;
      real_t tmp_351 = -tmp_271 - tmp_308 + tmp_350*tmp_41;
      real_t tmp_352 = -tmp_74;
      real_t tmp_353 = tmp_330 + tmp_352 - 2.2521904169883697;
      real_t tmp_354 = -tmp_274 - tmp_311 + tmp_353*tmp_88;
      real_t tmp_355 = -tmp_104;
      real_t tmp_356 = tmp_334 + tmp_355 - 0.091226635556457367;
      real_t tmp_357 = tmp_118*tmp_356 - tmp_277 - tmp_314;
      real_t tmp_358 = -tmp_134;
      real_t tmp_359 = tmp_338 + tmp_358 - 1.2225451447274185;
      real_t tmp_360 = tmp_148*tmp_359 - tmp_280 - tmp_317;
      real_t tmp_361 = -tmp_164;
      real_t tmp_362 = tmp_342 + tmp_361 - 4.6853024452417262;
      real_t tmp_363 = tmp_178*tmp_362 - tmp_283 - tmp_320;
      real_t tmp_364 = -tmp_194;
      real_t tmp_365 = tmp_346 + tmp_364 - 1.1753471206973567;
      real_t tmp_366 = tmp_208*tmp_365 - tmp_286 - tmp_323;
      real_t tmp_367 = tmp_325 + tmp_349 + 2.7039880664118039;
      real_t tmp_368 = -tmp_289 - tmp_307 + tmp_367*tmp_45;
      real_t tmp_369 = tmp_329 + tmp_352 + 3.9127583023104862;
      real_t tmp_370 = -tmp_292 - tmp_310 + tmp_369*tmp_89;
      real_t tmp_371 = tmp_333 + tmp_355 + 2.4790639804857291;
      real_t tmp_372 = tmp_119*tmp_371 - tmp_295 - tmp_313;
      real_t tmp_373 = tmp_337 + tmp_358 + 2.6334645986800878;
      real_t tmp_374 = tmp_149*tmp_373 - tmp_298 - tmp_316;
      real_t tmp_375 = tmp_341 + tmp_361 + 2.7305186941804749;
      real_t tmp_376 = tmp_179*tmp_375 - tmp_301 - tmp_319;
      real_t tmp_377 = tmp_345 + tmp_364 - 0.56980841719292119;
      real_t tmp_378 = tmp_209*tmp_377 - tmp_304 - tmp_322;
      real_t tmp_379 = 1.0*tmp_67;
      real_t tmp_380 = tmp_379*tmp_46;
      real_t tmp_381 = tmp_224*tmp_53;
      real_t tmp_382 = tmp_379*tmp_90;
      real_t tmp_383 = tmp_227*tmp_97;
      real_t tmp_384 = tmp_120*tmp_379;
      real_t tmp_385 = tmp_127*tmp_230;
      real_t tmp_386 = tmp_150*tmp_379;
      real_t tmp_387 = tmp_157*tmp_233;
      real_t tmp_388 = tmp_180*tmp_379;
      real_t tmp_389 = tmp_187*tmp_236;
      real_t tmp_390 = tmp_210*tmp_379;
      real_t tmp_391 = tmp_217*tmp_239;
      real_t tmp_392 = 16.0*tmp_67;
      real_t tmp_393 = tmp_392*tmp_69;
      real_t tmp_394 = tmp_392*tmp_99;
      real_t tmp_395 = tmp_129*tmp_392;
      real_t tmp_396 = tmp_159*tmp_392;
      real_t tmp_397 = tmp_189*tmp_392;
      real_t tmp_398 = tmp_219*tmp_392;
      real_t tmp_399 = tmp_379*tmp_381;
      real_t tmp_400 = tmp_379*tmp_383;
      real_t tmp_401 = tmp_379*tmp_385;
      real_t tmp_402 = tmp_379*tmp_387;
      real_t tmp_403 = tmp_379*tmp_389;
      real_t tmp_404 = tmp_379*tmp_391;
      real_t tmp_405 = tmp_380*tmp_69;
      real_t tmp_406 = tmp_242*tmp_52;
      real_t tmp_407 = tmp_382*tmp_99;
      real_t tmp_408 = tmp_245*tmp_96;
      real_t tmp_409 = tmp_129*tmp_384;
      real_t tmp_410 = tmp_126*tmp_248;
      real_t tmp_411 = tmp_159*tmp_386;
      real_t tmp_412 = tmp_156*tmp_251;
      real_t tmp_413 = tmp_189*tmp_388;
      real_t tmp_414 = tmp_186*tmp_254;
      real_t tmp_415 = tmp_219*tmp_390;
      real_t tmp_416 = tmp_216*tmp_257;
      real_t tmp_417 = tmp_225*tmp_379;
      real_t tmp_418 = tmp_228*tmp_379;
      real_t tmp_419 = tmp_231*tmp_379;
      real_t tmp_420 = tmp_234*tmp_379;
      real_t tmp_421 = tmp_237*tmp_379;
      real_t tmp_422 = tmp_240*tmp_379;
      real_t tmp_423 = tmp_379*tmp_69;
      real_t tmp_424 = tmp_406*tmp_423;
      real_t tmp_425 = tmp_379*tmp_99;
      real_t tmp_426 = tmp_408*tmp_425;
      real_t tmp_427 = tmp_129*tmp_379;
      real_t tmp_428 = tmp_410*tmp_427;
      real_t tmp_429 = tmp_159*tmp_379;
      real_t tmp_430 = tmp_412*tmp_429;
      real_t tmp_431 = tmp_189*tmp_379;
      real_t tmp_432 = tmp_414*tmp_431;
      real_t tmp_433 = tmp_219*tmp_379;
      real_t tmp_434 = tmp_416*tmp_433;
      real_t tmp_435 = tmp_259*tmp_50;
      real_t tmp_436 = tmp_261*tmp_94;
      real_t tmp_437 = tmp_124*tmp_263;
      real_t tmp_438 = tmp_154*tmp_265;
      real_t tmp_439 = tmp_184*tmp_267;
      real_t tmp_440 = tmp_214*tmp_269;
      real_t tmp_441 = tmp_423*tmp_435;
      real_t tmp_442 = tmp_425*tmp_436;
      real_t tmp_443 = tmp_427*tmp_437;
      real_t tmp_444 = tmp_429*tmp_438;
      real_t tmp_445 = tmp_431*tmp_439;
      real_t tmp_446 = tmp_433*tmp_440;
      real_t tmp_447 = 2.0*tmp_50;
      real_t tmp_448 = 0.18385035049209769*tmp_447;
      real_t tmp_449 = 0.025436732627362901;
      real_t tmp_450 = tmp_449*tmp_52;
      real_t tmp_451 = tmp_448 + tmp_450;
      real_t tmp_452 = tmp_451*tmp_70;
      real_t tmp_453 = 2.0*tmp_94;
      real_t tmp_454 = 0.28152380212354622*tmp_453;
      real_t tmp_455 = 0.7242536598910676;
      real_t tmp_456 = tmp_455*tmp_96;
      real_t tmp_457 = tmp_454 + tmp_456;
      real_t tmp_458 = tmp_100*tmp_457;
      real_t tmp_459 = 2.0*tmp_124;
      real_t tmp_460 = 0.011403329444557171*tmp_459;
      real_t tmp_461 = 0.71724144093376785;
      real_t tmp_462 = tmp_126*tmp_461;
      real_t tmp_463 = tmp_460 + tmp_462;
      real_t tmp_464 = tmp_130*tmp_463;
      real_t tmp_465 = 2.0*tmp_154;
      real_t tmp_466 = 0.15281814309092731*tmp_465;
      real_t tmp_467 = 1.2769865999234533;
      real_t tmp_468 = tmp_156*tmp_467;
      real_t tmp_469 = tmp_466 + tmp_468;
      real_t tmp_470 = tmp_160*tmp_469;
      real_t tmp_471 = 2.0*tmp_184;
      real_t tmp_472 = 0.58566280565521578*tmp_471;
      real_t tmp_473 = 0.261694337904193;
      real_t tmp_474 = tmp_186*tmp_473;
      real_t tmp_475 = tmp_472 + tmp_474;
      real_t tmp_476 = tmp_190*tmp_475;
      real_t tmp_477 = 2.0*tmp_214;
      real_t tmp_478 = 0.14691839008716959*tmp_477;
      real_t tmp_479 = 0.28074561158842137;
      real_t tmp_480 = tmp_216*tmp_479;
      real_t tmp_481 = tmp_478 + tmp_480;
      real_t tmp_482 = tmp_220*tmp_481;
      real_t tmp_483 = tmp_222*tmp_451;
      real_t tmp_484 = tmp_222*tmp_457;
      real_t tmp_485 = tmp_222*tmp_463;
      real_t tmp_486 = tmp_222*tmp_469;
      real_t tmp_487 = tmp_222*tmp_475;
      real_t tmp_488 = tmp_222*tmp_481;
      real_t tmp_489 = tmp_483*tmp_69;
      real_t tmp_490 = tmp_484*tmp_99;
      real_t tmp_491 = tmp_129*tmp_485;
      real_t tmp_492 = tmp_159*tmp_486;
      real_t tmp_493 = tmp_189*tmp_487;
      real_t tmp_494 = tmp_219*tmp_488;
      real_t tmp_495 = 0.16200149169852451*tmp_447;
      real_t tmp_496 = tmp_449*tmp_53;
      real_t tmp_497 = tmp_495 + tmp_496;
      real_t tmp_498 = tmp_497*tmp_70;
      real_t tmp_499 = 0.010905212211189241*tmp_453;
      real_t tmp_500 = tmp_455*tmp_97;
      real_t tmp_501 = tmp_499 + tmp_500;
      real_t tmp_502 = tmp_100*tmp_501;
      real_t tmp_503 = 0.19011700243928389*tmp_459;
      real_t tmp_504 = tmp_127*tmp_461;
      real_t tmp_505 = tmp_503 + tmp_504;
      real_t tmp_506 = tmp_130*tmp_505;
      real_t tmp_507 = 0.170816925164989*tmp_465;
      real_t tmp_508 = tmp_157*tmp_467;
      real_t tmp_509 = tmp_507 + tmp_508;
      real_t tmp_510 = tmp_160*tmp_509;
      real_t tmp_511 = 0.15868516322744061*tmp_471;
      real_t tmp_512 = tmp_187*tmp_473;
      real_t tmp_513 = tmp_511 + tmp_512;
      real_t tmp_514 = tmp_190*tmp_513;
      real_t tmp_515 = 0.57122605214911515*tmp_477;
      real_t tmp_516 = tmp_217*tmp_479;
      real_t tmp_517 = tmp_515 + tmp_516;
      real_t tmp_518 = tmp_220*tmp_517;
      real_t tmp_519 = tmp_222*tmp_497;
      real_t tmp_520 = tmp_222*tmp_501;
      real_t tmp_521 = tmp_222*tmp_505;
      real_t tmp_522 = tmp_222*tmp_509;
      real_t tmp_523 = tmp_222*tmp_513;
      real_t tmp_524 = tmp_222*tmp_517;
      real_t tmp_525 = tmp_519*tmp_69;
      real_t tmp_526 = tmp_520*tmp_99;
      real_t tmp_527 = tmp_129*tmp_521;
      real_t tmp_528 = tmp_159*tmp_522;
      real_t tmp_529 = tmp_189*tmp_523;
      real_t tmp_530 = tmp_219*tmp_524;
      real_t tmp_531 = 0.32400298339704903*tmp_52;
      real_t tmp_532 = 0.36770070098419538*tmp_53;
      real_t tmp_533 = tmp_531 + tmp_532;
      real_t tmp_534 = tmp_533*tmp_70;
      real_t tmp_535 = 0.021810424422378481*tmp_96;
      real_t tmp_536 = 0.56304760424709244*tmp_97;
      real_t tmp_537 = tmp_535 + tmp_536;
      real_t tmp_538 = tmp_100*tmp_537;
      real_t tmp_539 = 0.38023400487856779*tmp_126;
      real_t tmp_540 = 0.022806658889114342*tmp_127;
      real_t tmp_541 = tmp_539 + tmp_540;
      real_t tmp_542 = tmp_130*tmp_541;
      real_t tmp_543 = 0.34163385032997801*tmp_156;
      real_t tmp_544 = 0.30563628618185462*tmp_157;
      real_t tmp_545 = tmp_543 + tmp_544;
      real_t tmp_546 = tmp_160*tmp_545;
      real_t tmp_547 = 0.31737032645488122*tmp_186;
      real_t tmp_548 = 1.1713256113104316*tmp_187;
      real_t tmp_549 = tmp_547 + tmp_548;
      real_t tmp_550 = tmp_190*tmp_549;
      real_t tmp_551 = 1.1424521042982303*tmp_216;
      real_t tmp_552 = 0.29383678017433917*tmp_217;
      real_t tmp_553 = tmp_551 + tmp_552;
      real_t tmp_554 = tmp_220*tmp_553;
      real_t tmp_555 = tmp_222*tmp_533;
      real_t tmp_556 = tmp_222*tmp_537;
      real_t tmp_557 = tmp_222*tmp_541;
      real_t tmp_558 = tmp_222*tmp_545;
      real_t tmp_559 = tmp_222*tmp_549;
      real_t tmp_560 = tmp_222*tmp_553;
      real_t tmp_561 = tmp_555*tmp_69;
      real_t tmp_562 = tmp_556*tmp_99;
      real_t tmp_563 = tmp_129*tmp_557;
      real_t tmp_564 = tmp_159*tmp_558;
      real_t tmp_565 = tmp_189*tmp_559;
      real_t tmp_566 = tmp_219*tmp_560;
      real_t tmp_567 = 0.5*tmp_327*tmp_50 - tmp_450 - tmp_496;
      real_t tmp_568 = tmp_567*tmp_70;
      real_t tmp_569 = 0.5*tmp_331*tmp_94 - tmp_456 - tmp_500;
      real_t tmp_570 = tmp_100*tmp_569;
      real_t tmp_571 = 0.5*tmp_124*tmp_335 - tmp_462 - tmp_504;
      real_t tmp_572 = tmp_130*tmp_571;
      real_t tmp_573 = 0.5*tmp_154*tmp_339 - tmp_468 - tmp_508;
      real_t tmp_574 = tmp_160*tmp_573;
      real_t tmp_575 = 0.5*tmp_184*tmp_343 - tmp_474 - tmp_512;
      real_t tmp_576 = tmp_190*tmp_575;
      real_t tmp_577 = 0.5*tmp_214*tmp_347 - tmp_480 - tmp_516;
      real_t tmp_578 = tmp_220*tmp_577;
      real_t tmp_579 = tmp_222*tmp_567;
      real_t tmp_580 = tmp_222*tmp_569;
      real_t tmp_581 = tmp_222*tmp_571;
      real_t tmp_582 = tmp_222*tmp_573;
      real_t tmp_583 = tmp_222*tmp_575;
      real_t tmp_584 = tmp_222*tmp_577;
      real_t tmp_585 = tmp_579*tmp_69;
      real_t tmp_586 = tmp_580*tmp_99;
      real_t tmp_587 = tmp_129*tmp_581;
      real_t tmp_588 = tmp_159*tmp_582;
      real_t tmp_589 = tmp_189*tmp_583;
      real_t tmp_590 = tmp_219*tmp_584;
      real_t tmp_591 = 0.5*tmp_350*tmp_52 - tmp_448 - tmp_532;
      real_t tmp_592 = tmp_591*tmp_70;
      real_t tmp_593 = 0.5*tmp_353*tmp_96 - tmp_454 - tmp_536;
      real_t tmp_594 = tmp_100*tmp_593;
      real_t tmp_595 = 0.5*tmp_126*tmp_356 - tmp_460 - tmp_540;
      real_t tmp_596 = tmp_130*tmp_595;
      real_t tmp_597 = 0.5*tmp_156*tmp_359 - tmp_466 - tmp_544;
      real_t tmp_598 = tmp_160*tmp_597;
      real_t tmp_599 = 0.5*tmp_186*tmp_362 - tmp_472 - tmp_548;
      real_t tmp_600 = tmp_190*tmp_599;
      real_t tmp_601 = 0.5*tmp_216*tmp_365 - tmp_478 - tmp_552;
      real_t tmp_602 = tmp_220*tmp_601;
      real_t tmp_603 = tmp_222*tmp_591;
      real_t tmp_604 = tmp_222*tmp_593;
      real_t tmp_605 = tmp_222*tmp_595;
      real_t tmp_606 = tmp_222*tmp_597;
      real_t tmp_607 = tmp_222*tmp_599;
      real_t tmp_608 = tmp_222*tmp_601;
      real_t tmp_609 = tmp_603*tmp_69;
      real_t tmp_610 = tmp_604*tmp_99;
      real_t tmp_611 = tmp_129*tmp_605;
      real_t tmp_612 = tmp_159*tmp_606;
      real_t tmp_613 = tmp_189*tmp_607;
      real_t tmp_614 = tmp_219*tmp_608;
      real_t tmp_615 = 0.5*tmp_367*tmp_53 - tmp_495 - tmp_531;
      real_t tmp_616 = tmp_615*tmp_70;
      real_t tmp_617 = 0.5*tmp_369*tmp_97 - tmp_499 - tmp_535;
      real_t tmp_618 = tmp_100*tmp_617;
      real_t tmp_619 = 0.5*tmp_127*tmp_371 - tmp_503 - tmp_539;
      real_t tmp_620 = tmp_130*tmp_619;
      real_t tmp_621 = 0.5*tmp_157*tmp_373 - tmp_507 - tmp_543;
      real_t tmp_622 = tmp_160*tmp_621;
      real_t tmp_623 = 0.5*tmp_187*tmp_375 - tmp_511 - tmp_547;
      real_t tmp_624 = tmp_190*tmp_623;
      real_t tmp_625 = 0.5*tmp_217*tmp_377 - tmp_515 - tmp_551;
      real_t tmp_626 = tmp_220*tmp_625;
      real_t tmp_627 = tmp_222*tmp_615;
      real_t tmp_628 = tmp_222*tmp_617;
      real_t tmp_629 = tmp_222*tmp_619;
      real_t tmp_630 = tmp_222*tmp_621;
      real_t tmp_631 = tmp_222*tmp_623;
      real_t tmp_632 = tmp_222*tmp_625;
      real_t tmp_633 = tmp_627*tmp_69;
      real_t tmp_634 = tmp_628*tmp_99;
      real_t tmp_635 = tmp_129*tmp_629;
      real_t tmp_636 = tmp_159*tmp_630;
      real_t tmp_637 = tmp_189*tmp_631;
      real_t tmp_638 = tmp_219*tmp_632;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_180*tmp_191 + tmp_210*tmp_221 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_223*tmp_225 + tmp_226*tmp_228 + tmp_229*tmp_231 + tmp_232*tmp_234 + tmp_235*tmp_237 + tmp_238*tmp_240;
      real_t a_0_2 = tmp_241*tmp_243 + tmp_244*tmp_246 + tmp_247*tmp_249 + tmp_250*tmp_252 + tmp_253*tmp_255 + tmp_256*tmp_258;
      real_t a_0_3 = tmp_241*tmp_260 + tmp_244*tmp_262 + tmp_247*tmp_264 + tmp_250*tmp_266 + tmp_253*tmp_268 + tmp_256*tmp_270;
      real_t a_0_4 = tmp_101*tmp_276 + tmp_131*tmp_279 + tmp_161*tmp_282 + tmp_191*tmp_285 + tmp_221*tmp_288 + tmp_273*tmp_71;
      real_t a_0_5 = tmp_101*tmp_294 + tmp_131*tmp_297 + tmp_161*tmp_300 + tmp_191*tmp_303 + tmp_221*tmp_306 + tmp_291*tmp_71;
      real_t a_0_6 = tmp_101*tmp_312 + tmp_131*tmp_315 + tmp_161*tmp_318 + tmp_191*tmp_321 + tmp_221*tmp_324 + tmp_309*tmp_71;
      real_t a_0_7 = tmp_101*tmp_332 + tmp_131*tmp_336 + tmp_161*tmp_340 + tmp_191*tmp_344 + tmp_221*tmp_348 + tmp_328*tmp_71;
      real_t a_0_8 = tmp_101*tmp_354 + tmp_131*tmp_357 + tmp_161*tmp_360 + tmp_191*tmp_363 + tmp_221*tmp_366 + tmp_351*tmp_71;
      real_t a_0_9 = tmp_101*tmp_370 + tmp_131*tmp_372 + tmp_161*tmp_374 + tmp_191*tmp_376 + tmp_221*tmp_378 + tmp_368*tmp_71;
      real_t a_1_0 = tmp_380*tmp_381 + tmp_382*tmp_383 + tmp_384*tmp_385 + tmp_386*tmp_387 + tmp_388*tmp_389 + tmp_390*tmp_391;
      real_t a_1_1 = 0.0035859733968567312*tmp_119*tmp_127*tmp_395 + 0.0062699593403269518*tmp_149*tmp_157*tmp_396 + 0.0083383994147991636*tmp_179*tmp_187*tmp_397 + 0.10318617657930605*tmp_209*tmp_217*tmp_398 + 0.0077437374632848503*tmp_393*tmp_45*tmp_53 + 0.057166317547776457*tmp_394*tmp_89*tmp_97;
      real_t a_1_2 = tmp_243*tmp_399 + tmp_246*tmp_400 + tmp_249*tmp_401 + tmp_252*tmp_402 + tmp_255*tmp_403 + tmp_258*tmp_404;
      real_t a_1_3 = tmp_260*tmp_399 + tmp_262*tmp_400 + tmp_264*tmp_401 + tmp_266*tmp_402 + tmp_268*tmp_403 + tmp_270*tmp_404;
      real_t a_1_4 = tmp_273*tmp_399 + tmp_276*tmp_400 + tmp_279*tmp_401 + tmp_282*tmp_402 + tmp_285*tmp_403 + tmp_288*tmp_404;
      real_t a_1_5 = tmp_291*tmp_399 + tmp_294*tmp_400 + tmp_297*tmp_401 + tmp_300*tmp_402 + tmp_303*tmp_403 + tmp_306*tmp_404;
      real_t a_1_6 = tmp_309*tmp_399 + tmp_312*tmp_400 + tmp_315*tmp_401 + tmp_318*tmp_402 + tmp_321*tmp_403 + tmp_324*tmp_404;
      real_t a_1_7 = tmp_328*tmp_399 + tmp_332*tmp_400 + tmp_336*tmp_401 + tmp_340*tmp_402 + tmp_344*tmp_403 + tmp_348*tmp_404;
      real_t a_1_8 = tmp_351*tmp_399 + tmp_354*tmp_400 + tmp_357*tmp_401 + tmp_360*tmp_402 + tmp_363*tmp_403 + tmp_366*tmp_404;
      real_t a_1_9 = tmp_368*tmp_399 + tmp_370*tmp_400 + tmp_372*tmp_401 + tmp_374*tmp_402 + tmp_376*tmp_403 + tmp_378*tmp_404;
      real_t a_2_0 = tmp_405*tmp_406 + tmp_407*tmp_408 + tmp_409*tmp_410 + tmp_411*tmp_412 + tmp_413*tmp_414 + tmp_415*tmp_416;
      real_t a_2_1 = tmp_406*tmp_417 + tmp_408*tmp_418 + tmp_410*tmp_419 + tmp_412*tmp_420 + tmp_414*tmp_421 + tmp_416*tmp_422;
      real_t a_2_2 = 0.056928371200142526*tmp_118*tmp_126*tmp_395 + 0.0094443133122954787*tmp_148*tmp_156*tmp_396 + 0.11266951910033116*tmp_178*tmp_186*tmp_397 + 0.010625818302220938*tmp_208*tmp_216*tmp_398 + 0.0043757761300183204*tmp_393*tmp_41*tmp_52 + 0.00099375010032449703*tmp_394*tmp_88*tmp_96;
      real_t a_2_3 = tmp_260*tmp_424 + tmp_262*tmp_426 + tmp_264*tmp_428 + tmp_266*tmp_430 + tmp_268*tmp_432 + tmp_270*tmp_434;
      real_t a_2_4 = tmp_273*tmp_424 + tmp_276*tmp_426 + tmp_279*tmp_428 + tmp_282*tmp_430 + tmp_285*tmp_432 + tmp_288*tmp_434;
      real_t a_2_5 = tmp_291*tmp_424 + tmp_294*tmp_426 + tmp_297*tmp_428 + tmp_300*tmp_430 + tmp_303*tmp_432 + tmp_306*tmp_434;
      real_t a_2_6 = tmp_309*tmp_424 + tmp_312*tmp_426 + tmp_315*tmp_428 + tmp_318*tmp_430 + tmp_321*tmp_432 + tmp_324*tmp_434;
      real_t a_2_7 = tmp_328*tmp_424 + tmp_332*tmp_426 + tmp_336*tmp_428 + tmp_340*tmp_430 + tmp_344*tmp_432 + tmp_348*tmp_434;
      real_t a_2_8 = tmp_351*tmp_424 + tmp_354*tmp_426 + tmp_357*tmp_428 + tmp_360*tmp_430 + tmp_363*tmp_432 + tmp_366*tmp_434;
      real_t a_2_9 = tmp_368*tmp_424 + tmp_370*tmp_426 + tmp_372*tmp_428 + tmp_374*tmp_430 + tmp_376*tmp_432 + tmp_378*tmp_434;
      real_t a_3_0 = tmp_405*tmp_435 + tmp_407*tmp_436 + tmp_409*tmp_437 + tmp_411*tmp_438 + tmp_413*tmp_439 + tmp_415*tmp_440;
      real_t a_3_1 = tmp_417*tmp_435 + tmp_418*tmp_436 + tmp_419*tmp_437 + tmp_420*tmp_438 + tmp_421*tmp_439 + tmp_422*tmp_440;
      real_t a_3_2 = tmp_243*tmp_441 + tmp_246*tmp_442 + tmp_249*tmp_443 + tmp_252*tmp_444 + tmp_255*tmp_445 + tmp_258*tmp_446;
      real_t a_3_3 = 0.011798460914744936*tmp_117*tmp_124*tmp_395 + 0.15092704411515212*tmp_147*tmp_154*tmp_396 + 0.014197397146730236*tmp_177*tmp_184*tmp_397 + 0.012018121709433846*tmp_207*tmp_214*tmp_398 + 0.056302573684848263*tmp_37*tmp_393*tmp_50 + 0.012572425993634655*tmp_394*tmp_87*tmp_94;
      real_t a_3_4 = tmp_273*tmp_441 + tmp_276*tmp_442 + tmp_279*tmp_443 + tmp_282*tmp_444 + tmp_285*tmp_445 + tmp_288*tmp_446;
      real_t a_3_5 = tmp_291*tmp_441 + tmp_294*tmp_442 + tmp_297*tmp_443 + tmp_300*tmp_444 + tmp_303*tmp_445 + tmp_306*tmp_446;
      real_t a_3_6 = tmp_309*tmp_441 + tmp_312*tmp_442 + tmp_315*tmp_443 + tmp_318*tmp_444 + tmp_321*tmp_445 + tmp_324*tmp_446;
      real_t a_3_7 = tmp_328*tmp_441 + tmp_332*tmp_442 + tmp_336*tmp_443 + tmp_340*tmp_444 + tmp_344*tmp_445 + tmp_348*tmp_446;
      real_t a_3_8 = tmp_351*tmp_441 + tmp_354*tmp_442 + tmp_357*tmp_443 + tmp_360*tmp_444 + tmp_363*tmp_445 + tmp_366*tmp_446;
      real_t a_3_9 = tmp_368*tmp_441 + tmp_370*tmp_442 + tmp_372*tmp_443 + tmp_374*tmp_444 + tmp_376*tmp_445 + tmp_378*tmp_446;
      real_t a_4_0 = tmp_120*tmp_464 + tmp_150*tmp_470 + tmp_180*tmp_476 + tmp_210*tmp_482 + tmp_452*tmp_46 + tmp_458*tmp_90;
      real_t a_4_1 = tmp_225*tmp_483 + tmp_228*tmp_484 + tmp_231*tmp_485 + tmp_234*tmp_486 + tmp_237*tmp_487 + tmp_240*tmp_488;
      real_t a_4_2 = tmp_243*tmp_489 + tmp_246*tmp_490 + tmp_249*tmp_491 + tmp_252*tmp_492 + tmp_255*tmp_493 + tmp_258*tmp_494;
      real_t a_4_3 = tmp_260*tmp_489 + tmp_262*tmp_490 + tmp_264*tmp_491 + tmp_266*tmp_492 + tmp_268*tmp_493 + tmp_270*tmp_494;
      real_t a_4_4 = tmp_273*tmp_452 + tmp_276*tmp_458 + tmp_279*tmp_464 + tmp_282*tmp_470 + tmp_285*tmp_476 + tmp_288*tmp_482;
      real_t a_4_5 = tmp_291*tmp_452 + tmp_294*tmp_458 + tmp_297*tmp_464 + tmp_300*tmp_470 + tmp_303*tmp_476 + tmp_306*tmp_482;
      real_t a_4_6 = tmp_309*tmp_452 + tmp_312*tmp_458 + tmp_315*tmp_464 + tmp_318*tmp_470 + tmp_321*tmp_476 + tmp_324*tmp_482;
      real_t a_4_7 = tmp_328*tmp_452 + tmp_332*tmp_458 + tmp_336*tmp_464 + tmp_340*tmp_470 + tmp_344*tmp_476 + tmp_348*tmp_482;
      real_t a_4_8 = tmp_351*tmp_452 + tmp_354*tmp_458 + tmp_357*tmp_464 + tmp_360*tmp_470 + tmp_363*tmp_476 + tmp_366*tmp_482;
      real_t a_4_9 = tmp_368*tmp_452 + tmp_370*tmp_458 + tmp_372*tmp_464 + tmp_374*tmp_470 + tmp_376*tmp_476 + tmp_378*tmp_482;
      real_t a_5_0 = tmp_120*tmp_506 + tmp_150*tmp_510 + tmp_180*tmp_514 + tmp_210*tmp_518 + tmp_46*tmp_498 + tmp_502*tmp_90;
      real_t a_5_1 = tmp_225*tmp_519 + tmp_228*tmp_520 + tmp_231*tmp_521 + tmp_234*tmp_522 + tmp_237*tmp_523 + tmp_240*tmp_524;
      real_t a_5_2 = tmp_243*tmp_525 + tmp_246*tmp_526 + tmp_249*tmp_527 + tmp_252*tmp_528 + tmp_255*tmp_529 + tmp_258*tmp_530;
      real_t a_5_3 = tmp_260*tmp_525 + tmp_262*tmp_526 + tmp_264*tmp_527 + tmp_266*tmp_528 + tmp_268*tmp_529 + tmp_270*tmp_530;
      real_t a_5_4 = tmp_273*tmp_498 + tmp_276*tmp_502 + tmp_279*tmp_506 + tmp_282*tmp_510 + tmp_285*tmp_514 + tmp_288*tmp_518;
      real_t a_5_5 = tmp_291*tmp_498 + tmp_294*tmp_502 + tmp_297*tmp_506 + tmp_300*tmp_510 + tmp_303*tmp_514 + tmp_306*tmp_518;
      real_t a_5_6 = tmp_309*tmp_498 + tmp_312*tmp_502 + tmp_315*tmp_506 + tmp_318*tmp_510 + tmp_321*tmp_514 + tmp_324*tmp_518;
      real_t a_5_7 = tmp_328*tmp_498 + tmp_332*tmp_502 + tmp_336*tmp_506 + tmp_340*tmp_510 + tmp_344*tmp_514 + tmp_348*tmp_518;
      real_t a_5_8 = tmp_351*tmp_498 + tmp_354*tmp_502 + tmp_357*tmp_506 + tmp_360*tmp_510 + tmp_363*tmp_514 + tmp_366*tmp_518;
      real_t a_5_9 = tmp_368*tmp_498 + tmp_370*tmp_502 + tmp_372*tmp_506 + tmp_374*tmp_510 + tmp_376*tmp_514 + tmp_378*tmp_518;
      real_t a_6_0 = tmp_120*tmp_542 + tmp_150*tmp_546 + tmp_180*tmp_550 + tmp_210*tmp_554 + tmp_46*tmp_534 + tmp_538*tmp_90;
      real_t a_6_1 = tmp_225*tmp_555 + tmp_228*tmp_556 + tmp_231*tmp_557 + tmp_234*tmp_558 + tmp_237*tmp_559 + tmp_240*tmp_560;
      real_t a_6_2 = tmp_243*tmp_561 + tmp_246*tmp_562 + tmp_249*tmp_563 + tmp_252*tmp_564 + tmp_255*tmp_565 + tmp_258*tmp_566;
      real_t a_6_3 = tmp_260*tmp_561 + tmp_262*tmp_562 + tmp_264*tmp_563 + tmp_266*tmp_564 + tmp_268*tmp_565 + tmp_270*tmp_566;
      real_t a_6_4 = tmp_273*tmp_534 + tmp_276*tmp_538 + tmp_279*tmp_542 + tmp_282*tmp_546 + tmp_285*tmp_550 + tmp_288*tmp_554;
      real_t a_6_5 = tmp_291*tmp_534 + tmp_294*tmp_538 + tmp_297*tmp_542 + tmp_300*tmp_546 + tmp_303*tmp_550 + tmp_306*tmp_554;
      real_t a_6_6 = tmp_309*tmp_534 + tmp_312*tmp_538 + tmp_315*tmp_542 + tmp_318*tmp_546 + tmp_321*tmp_550 + tmp_324*tmp_554;
      real_t a_6_7 = tmp_328*tmp_534 + tmp_332*tmp_538 + tmp_336*tmp_542 + tmp_340*tmp_546 + tmp_344*tmp_550 + tmp_348*tmp_554;
      real_t a_6_8 = tmp_351*tmp_534 + tmp_354*tmp_538 + tmp_357*tmp_542 + tmp_360*tmp_546 + tmp_363*tmp_550 + tmp_366*tmp_554;
      real_t a_6_9 = tmp_368*tmp_534 + tmp_370*tmp_538 + tmp_372*tmp_542 + tmp_374*tmp_546 + tmp_376*tmp_550 + tmp_378*tmp_554;
      real_t a_7_0 = tmp_120*tmp_572 + tmp_150*tmp_574 + tmp_180*tmp_576 + tmp_210*tmp_578 + tmp_46*tmp_568 + tmp_570*tmp_90;
      real_t a_7_1 = tmp_225*tmp_579 + tmp_228*tmp_580 + tmp_231*tmp_581 + tmp_234*tmp_582 + tmp_237*tmp_583 + tmp_240*tmp_584;
      real_t a_7_2 = tmp_243*tmp_585 + tmp_246*tmp_586 + tmp_249*tmp_587 + tmp_252*tmp_588 + tmp_255*tmp_589 + tmp_258*tmp_590;
      real_t a_7_3 = tmp_260*tmp_585 + tmp_262*tmp_586 + tmp_264*tmp_587 + tmp_266*tmp_588 + tmp_268*tmp_589 + tmp_270*tmp_590;
      real_t a_7_4 = tmp_273*tmp_568 + tmp_276*tmp_570 + tmp_279*tmp_572 + tmp_282*tmp_574 + tmp_285*tmp_576 + tmp_288*tmp_578;
      real_t a_7_5 = tmp_291*tmp_568 + tmp_294*tmp_570 + tmp_297*tmp_572 + tmp_300*tmp_574 + tmp_303*tmp_576 + tmp_306*tmp_578;
      real_t a_7_6 = tmp_309*tmp_568 + tmp_312*tmp_570 + tmp_315*tmp_572 + tmp_318*tmp_574 + tmp_321*tmp_576 + tmp_324*tmp_578;
      real_t a_7_7 = tmp_328*tmp_568 + tmp_332*tmp_570 + tmp_336*tmp_572 + tmp_340*tmp_574 + tmp_344*tmp_576 + tmp_348*tmp_578;
      real_t a_7_8 = tmp_351*tmp_568 + tmp_354*tmp_570 + tmp_357*tmp_572 + tmp_360*tmp_574 + tmp_363*tmp_576 + tmp_366*tmp_578;
      real_t a_7_9 = tmp_368*tmp_568 + tmp_370*tmp_570 + tmp_372*tmp_572 + tmp_374*tmp_574 + tmp_376*tmp_576 + tmp_378*tmp_578;
      real_t a_8_0 = tmp_120*tmp_596 + tmp_150*tmp_598 + tmp_180*tmp_600 + tmp_210*tmp_602 + tmp_46*tmp_592 + tmp_594*tmp_90;
      real_t a_8_1 = tmp_225*tmp_603 + tmp_228*tmp_604 + tmp_231*tmp_605 + tmp_234*tmp_606 + tmp_237*tmp_607 + tmp_240*tmp_608;
      real_t a_8_2 = tmp_243*tmp_609 + tmp_246*tmp_610 + tmp_249*tmp_611 + tmp_252*tmp_612 + tmp_255*tmp_613 + tmp_258*tmp_614;
      real_t a_8_3 = tmp_260*tmp_609 + tmp_262*tmp_610 + tmp_264*tmp_611 + tmp_266*tmp_612 + tmp_268*tmp_613 + tmp_270*tmp_614;
      real_t a_8_4 = tmp_273*tmp_592 + tmp_276*tmp_594 + tmp_279*tmp_596 + tmp_282*tmp_598 + tmp_285*tmp_600 + tmp_288*tmp_602;
      real_t a_8_5 = tmp_291*tmp_592 + tmp_294*tmp_594 + tmp_297*tmp_596 + tmp_300*tmp_598 + tmp_303*tmp_600 + tmp_306*tmp_602;
      real_t a_8_6 = tmp_309*tmp_592 + tmp_312*tmp_594 + tmp_315*tmp_596 + tmp_318*tmp_598 + tmp_321*tmp_600 + tmp_324*tmp_602;
      real_t a_8_7 = tmp_328*tmp_592 + tmp_332*tmp_594 + tmp_336*tmp_596 + tmp_340*tmp_598 + tmp_344*tmp_600 + tmp_348*tmp_602;
      real_t a_8_8 = tmp_351*tmp_592 + tmp_354*tmp_594 + tmp_357*tmp_596 + tmp_360*tmp_598 + tmp_363*tmp_600 + tmp_366*tmp_602;
      real_t a_8_9 = tmp_368*tmp_592 + tmp_370*tmp_594 + tmp_372*tmp_596 + tmp_374*tmp_598 + tmp_376*tmp_600 + tmp_378*tmp_602;
      real_t a_9_0 = tmp_120*tmp_620 + tmp_150*tmp_622 + tmp_180*tmp_624 + tmp_210*tmp_626 + tmp_46*tmp_616 + tmp_618*tmp_90;
      real_t a_9_1 = tmp_225*tmp_627 + tmp_228*tmp_628 + tmp_231*tmp_629 + tmp_234*tmp_630 + tmp_237*tmp_631 + tmp_240*tmp_632;
      real_t a_9_2 = tmp_243*tmp_633 + tmp_246*tmp_634 + tmp_249*tmp_635 + tmp_252*tmp_636 + tmp_255*tmp_637 + tmp_258*tmp_638;
      real_t a_9_3 = tmp_260*tmp_633 + tmp_262*tmp_634 + tmp_264*tmp_635 + tmp_266*tmp_636 + tmp_268*tmp_637 + tmp_270*tmp_638;
      real_t a_9_4 = tmp_273*tmp_616 + tmp_276*tmp_618 + tmp_279*tmp_620 + tmp_282*tmp_622 + tmp_285*tmp_624 + tmp_288*tmp_626;
      real_t a_9_5 = tmp_291*tmp_616 + tmp_294*tmp_618 + tmp_297*tmp_620 + tmp_300*tmp_622 + tmp_303*tmp_624 + tmp_306*tmp_626;
      real_t a_9_6 = tmp_309*tmp_616 + tmp_312*tmp_618 + tmp_315*tmp_620 + tmp_318*tmp_622 + tmp_321*tmp_624 + tmp_324*tmp_626;
      real_t a_9_7 = tmp_328*tmp_616 + tmp_332*tmp_618 + tmp_336*tmp_620 + tmp_340*tmp_622 + tmp_344*tmp_624 + tmp_348*tmp_626;
      real_t a_9_8 = tmp_351*tmp_616 + tmp_354*tmp_618 + tmp_357*tmp_620 + tmp_360*tmp_622 + tmp_363*tmp_624 + tmp_366*tmp_626;
      real_t a_9_9 = tmp_368*tmp_616 + tmp_370*tmp_618 + tmp_372*tmp_620 + tmp_374*tmp_622 + tmp_376*tmp_624 + tmp_378*tmp_626;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_2_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Blending_DF_Tetrahedron_4_0 = 0;
      real_t Blending_DF_Tetrahedron_4_1 = 0;
      real_t Blending_DF_Tetrahedron_4_2 = 0;
      real_t Blending_DF_Tetrahedron_4_3 = 0;
      real_t Blending_DF_Tetrahedron_4_4 = 0;
      real_t Blending_DF_Tetrahedron_4_5 = 0;
      real_t Blending_DF_Tetrahedron_4_6 = 0;
      real_t Blending_DF_Tetrahedron_4_7 = 0;
      real_t Blending_DF_Tetrahedron_4_8 = 0;
      real_t Blending_DF_Tetrahedron_5_0 = 0;
      real_t Blending_DF_Tetrahedron_5_1 = 0;
      real_t Blending_DF_Tetrahedron_5_2 = 0;
      real_t Blending_DF_Tetrahedron_5_3 = 0;
      real_t Blending_DF_Tetrahedron_5_4 = 0;
      real_t Blending_DF_Tetrahedron_5_5 = 0;
      real_t Blending_DF_Tetrahedron_5_6 = 0;
      real_t Blending_DF_Tetrahedron_5_7 = 0;
      real_t Blending_DF_Tetrahedron_5_8 = 0;
      Blending_DF_Tetrahedron( 0.64142979149569634*p_affine_0_0 + 0.16200149169852451*p_affine_1_0 + 0.18385035049209769*p_affine_2_0 + 0.012718366313681451*p_affine_3_0, 0.64142979149569634*p_affine_0_1 + 0.16200149169852451*p_affine_1_1 + 0.18385035049209769*p_affine_2_1 + 0.012718366313681451*p_affine_3_1, 0.64142979149569634*p_affine_0_2 + 0.16200149169852451*p_affine_1_2 + 0.18385035049209769*p_affine_2_2 + 0.012718366313681451*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.34544415571973075*p_affine_0_0 + 0.010905212211189241*p_affine_1_0 + 0.28152380212354622*p_affine_2_0 + 0.3621268299455338*p_affine_3_0, 0.34544415571973075*p_affine_0_1 + 0.010905212211189241*p_affine_1_1 + 0.28152380212354622*p_affine_2_1 + 0.3621268299455338*p_affine_3_1, 0.34544415571973075*p_affine_0_2 + 0.010905212211189241*p_affine_1_2 + 0.28152380212354622*p_affine_2_2 + 0.3621268299455338*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.43985894764927508*p_affine_0_0 + 0.19011700243928389*p_affine_1_0 + 0.011403329444557171*p_affine_2_0 + 0.35862072046688392*p_affine_3_0, 0.43985894764927508*p_affine_0_1 + 0.19011700243928389*p_affine_1_1 + 0.011403329444557171*p_affine_2_1 + 0.35862072046688392*p_affine_3_1, 0.43985894764927508*p_affine_0_2 + 0.19011700243928389*p_affine_1_2 + 0.011403329444557171*p_affine_2_2 + 0.35862072046688392*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.037871631782356974*p_affine_0_0 + 0.170816925164989*p_affine_1_0 + 0.15281814309092731*p_affine_2_0 + 0.63849329996172666*p_affine_3_0, 0.037871631782356974*p_affine_0_1 + 0.170816925164989*p_affine_1_1 + 0.15281814309092731*p_affine_2_1 + 0.63849329996172666*p_affine_3_1, 0.037871631782356974*p_affine_0_2 + 0.170816925164989*p_affine_1_2 + 0.15281814309092731*p_affine_2_2 + 0.63849329996172666*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Blending_DF_Tetrahedron( 0.12480486216524708*p_affine_0_0 + 0.15868516322744061*p_affine_1_0 + 0.58566280565521578*p_affine_2_0 + 0.1308471689520965*p_affine_3_0, 0.12480486216524708*p_affine_0_1 + 0.15868516322744061*p_affine_1_1 + 0.58566280565521578*p_affine_2_1 + 0.1308471689520965*p_affine_3_1, 0.12480486216524708*p_affine_0_2 + 0.15868516322744061*p_affine_1_2 + 0.58566280565521578*p_affine_2_2 + 0.1308471689520965*p_affine_3_2, &Blending_DF_Tetrahedron_4_0, &Blending_DF_Tetrahedron_4_1, &Blending_DF_Tetrahedron_4_2, &Blending_DF_Tetrahedron_4_3, &Blending_DF_Tetrahedron_4_4, &Blending_DF_Tetrahedron_4_5, &Blending_DF_Tetrahedron_4_6, &Blending_DF_Tetrahedron_4_7, &Blending_DF_Tetrahedron_4_8 );
      Blending_DF_Tetrahedron( 0.14148275196950461*p_affine_0_0 + 0.57122605214911515*p_affine_1_0 + 0.14691839008716959*p_affine_2_0 + 0.14037280579421069*p_affine_3_0, 0.14148275196950461*p_affine_0_1 + 0.57122605214911515*p_affine_1_1 + 0.14691839008716959*p_affine_2_1 + 0.14037280579421069*p_affine_3_1, 0.14148275196950461*p_affine_0_2 + 0.57122605214911515*p_affine_1_2 + 0.14691839008716959*p_affine_2_2 + 0.14037280579421069*p_affine_3_2, &Blending_DF_Tetrahedron_5_0, &Blending_DF_Tetrahedron_5_1, &Blending_DF_Tetrahedron_5_2, &Blending_DF_Tetrahedron_5_3, &Blending_DF_Tetrahedron_5_4, &Blending_DF_Tetrahedron_5_5, &Blending_DF_Tetrahedron_5_6, &Blending_DF_Tetrahedron_5_7, &Blending_DF_Tetrahedron_5_8 );
      real_t tmp_0 = 0.64800596679409805;
      real_t tmp_1 = 0.73540140196839077;
      real_t tmp_2 = 0.050873465254725803;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_61 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_62 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.020387000459557512*(tmp_63*(tmp_12*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_19);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.043620848844756963;
      real_t tmp_67 = 1.1260952084941849;
      real_t tmp_68 = 1.4485073197821352;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_0*tmp_72 - Blending_DF_Tetrahedron_1_0*tmp_74 + Blending_DF_Tetrahedron_1_1*tmp_73 - Blending_DF_Tetrahedron_1_1*tmp_75 + Blending_DF_Tetrahedron_1_2*tmp_70 - Blending_DF_Tetrahedron_1_2*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_73 - tmp_75);
      real_t tmp_80 = tmp_77*(tmp_72 - tmp_74);
      real_t tmp_81 = tmp_12*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_85 = tmp_77*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_86 = tmp_77*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.021344402118457811*(tmp_87*(tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 0.76046800975713558;
      real_t tmp_91 = 0.045613317778228683;
      real_t tmp_92 = 1.4344828818675357;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_0*tmp_96 - Blending_DF_Tetrahedron_2_0*tmp_98 + Blending_DF_Tetrahedron_2_1*tmp_97 - Blending_DF_Tetrahedron_2_1*tmp_99 + Blending_DF_Tetrahedron_2_2*tmp_94 - Blending_DF_Tetrahedron_2_2*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_97 - tmp_99);
      real_t tmp_104 = tmp_101*(tmp_96 - tmp_98);
      real_t tmp_105 = tmp_102*tmp_12 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_109 = tmp_101*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_110 = tmp_101*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.022094671190740864*(tmp_111*(tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.68326770065995601;
      real_t tmp_115 = 0.61127257236370924;
      real_t tmp_116 = 2.5539731998469066;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_0*tmp_120 - Blending_DF_Tetrahedron_3_0*tmp_122 + Blending_DF_Tetrahedron_3_1*tmp_121 - Blending_DF_Tetrahedron_3_1*tmp_123 + Blending_DF_Tetrahedron_3_2*tmp_118 - Blending_DF_Tetrahedron_3_2*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_121 - tmp_123);
      real_t tmp_128 = tmp_125*(tmp_120 - tmp_122);
      real_t tmp_129 = tmp_12*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_133 = tmp_125*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_134 = tmp_125*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.023437401610067198*(tmp_135*(tmp_12*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 0.63474065290976245;
      real_t tmp_139 = 2.3426512226208631;
      real_t tmp_140 = 0.52338867580838599;
      real_t tmp_141 = tmp_138 + tmp_139 + tmp_140 - 3.0;
      real_t tmp_142 = Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_7;
      real_t tmp_143 = Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_6;
      real_t tmp_144 = Blending_DF_Tetrahedron_4_4*Blending_DF_Tetrahedron_4_8;
      real_t tmp_145 = Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_6;
      real_t tmp_146 = Blending_DF_Tetrahedron_4_5*Blending_DF_Tetrahedron_4_7;
      real_t tmp_147 = Blending_DF_Tetrahedron_4_3*Blending_DF_Tetrahedron_4_8;
      real_t tmp_148 = Blending_DF_Tetrahedron_4_0*tmp_144 - Blending_DF_Tetrahedron_4_0*tmp_146 + Blending_DF_Tetrahedron_4_1*tmp_145 - Blending_DF_Tetrahedron_4_1*tmp_147 + Blending_DF_Tetrahedron_4_2*tmp_142 - Blending_DF_Tetrahedron_4_2*tmp_143;
      real_t tmp_149 = tmp_30/tmp_148;
      real_t tmp_150 = tmp_149*(tmp_142 - tmp_143);
      real_t tmp_151 = tmp_149*(tmp_145 - tmp_147);
      real_t tmp_152 = tmp_149*(tmp_144 - tmp_146);
      real_t tmp_153 = tmp_12*tmp_150 + tmp_151*tmp_33 + tmp_152*tmp_35;
      real_t tmp_154 = tmp_150*tmp_38 + tmp_151*tmp_39 + tmp_152*tmp_40;
      real_t tmp_155 = tmp_150*tmp_42 + tmp_151*tmp_43 + tmp_152*tmp_44;
      real_t tmp_156 = tmp_149*(Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_4 - Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_3);
      real_t tmp_157 = tmp_149*(-Blending_DF_Tetrahedron_4_0*Blending_DF_Tetrahedron_4_5 + Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_3);
      real_t tmp_158 = tmp_149*(Blending_DF_Tetrahedron_4_1*Blending_DF_Tetrahedron_4_5 - Blending_DF_Tetrahedron_4_2*Blending_DF_Tetrahedron_4_4);
      real_t tmp_159 = 0.5*tmp_141;
      real_t tmp_160 = 0.037402527819592891*(tmp_159*(tmp_12*tmp_156 + tmp_157*tmp_33 + tmp_158*tmp_35) + tmp_159*(tmp_156*tmp_38 + tmp_157*tmp_39 + tmp_158*tmp_40) + tmp_159*(tmp_156*tmp_42 + tmp_157*tmp_43 + tmp_158*tmp_44))*std::abs(tmp_148);
      real_t tmp_161 = tmp_160*tmp_59;
      real_t tmp_162 = 2.2849042085964606;
      real_t tmp_163 = 0.58767356034867835;
      real_t tmp_164 = 0.56149122317684275;
      real_t tmp_165 = tmp_162 + tmp_163 + tmp_164 - 3.0;
      real_t tmp_166 = Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_7;
      real_t tmp_167 = Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_6;
      real_t tmp_168 = Blending_DF_Tetrahedron_5_4*Blending_DF_Tetrahedron_5_8;
      real_t tmp_169 = Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_6;
      real_t tmp_170 = Blending_DF_Tetrahedron_5_5*Blending_DF_Tetrahedron_5_7;
      real_t tmp_171 = Blending_DF_Tetrahedron_5_3*Blending_DF_Tetrahedron_5_8;
      real_t tmp_172 = Blending_DF_Tetrahedron_5_0*tmp_168 - Blending_DF_Tetrahedron_5_0*tmp_170 + Blending_DF_Tetrahedron_5_1*tmp_169 - Blending_DF_Tetrahedron_5_1*tmp_171 + Blending_DF_Tetrahedron_5_2*tmp_166 - Blending_DF_Tetrahedron_5_2*tmp_167;
      real_t tmp_173 = tmp_30/tmp_172;
      real_t tmp_174 = tmp_173*(tmp_166 - tmp_167);
      real_t tmp_175 = tmp_173*(tmp_169 - tmp_171);
      real_t tmp_176 = tmp_173*(tmp_168 - tmp_170);
      real_t tmp_177 = tmp_12*tmp_174 + tmp_175*tmp_33 + tmp_176*tmp_35;
      real_t tmp_178 = tmp_174*tmp_38 + tmp_175*tmp_39 + tmp_176*tmp_40;
      real_t tmp_179 = tmp_174*tmp_42 + tmp_175*tmp_43 + tmp_176*tmp_44;
      real_t tmp_180 = tmp_173*(Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_4 - Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_3);
      real_t tmp_181 = tmp_173*(-Blending_DF_Tetrahedron_5_0*Blending_DF_Tetrahedron_5_5 + Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_3);
      real_t tmp_182 = tmp_173*(Blending_DF_Tetrahedron_5_1*Blending_DF_Tetrahedron_5_5 - Blending_DF_Tetrahedron_5_2*Blending_DF_Tetrahedron_5_4);
      real_t tmp_183 = 0.5*tmp_165;
      real_t tmp_184 = 0.042000663468250377*(tmp_183*(tmp_12*tmp_180 + tmp_181*tmp_33 + tmp_182*tmp_35) + tmp_183*(tmp_180*tmp_38 + tmp_181*tmp_39 + tmp_182*tmp_40) + tmp_183*(tmp_180*tmp_42 + tmp_181*tmp_43 + tmp_182*tmp_44))*std::abs(tmp_172);
      real_t tmp_185 = tmp_184*tmp_59;
      real_t tmp_186 = 2.0*tmp_58;
      real_t tmp_187 = tmp_186*tmp_64;
      real_t tmp_188 = tmp_186*tmp_88;
      real_t tmp_189 = tmp_112*tmp_186;
      real_t tmp_190 = tmp_136*tmp_186;
      real_t tmp_191 = tmp_160*tmp_186;
      real_t tmp_192 = tmp_184*tmp_186;
      real_t tmp_193 = tmp_1*tmp_37;
      real_t tmp_194 = tmp_2*tmp_41;
      real_t tmp_195 = tmp_67*tmp_81;
      real_t tmp_196 = tmp_68*tmp_82;
      real_t tmp_197 = tmp_105*tmp_91;
      real_t tmp_198 = tmp_106*tmp_92;
      real_t tmp_199 = tmp_115*tmp_129;
      real_t tmp_200 = tmp_116*tmp_130;
      real_t tmp_201 = tmp_139*tmp_153;
      real_t tmp_202 = tmp_140*tmp_154;
      real_t tmp_203 = tmp_163*tmp_177;
      real_t tmp_204 = tmp_164*tmp_178;
      real_t tmp_205 = tmp_0*tmp_37;
      real_t tmp_206 = tmp_2*tmp_45;
      real_t tmp_207 = tmp_66*tmp_81;
      real_t tmp_208 = tmp_68*tmp_83;
      real_t tmp_209 = tmp_105*tmp_90;
      real_t tmp_210 = tmp_107*tmp_92;
      real_t tmp_211 = tmp_114*tmp_129;
      real_t tmp_212 = tmp_116*tmp_131;
      real_t tmp_213 = tmp_138*tmp_153;
      real_t tmp_214 = tmp_140*tmp_155;
      real_t tmp_215 = tmp_162*tmp_177;
      real_t tmp_216 = tmp_164*tmp_179;
      real_t tmp_217 = tmp_0*tmp_41;
      real_t tmp_218 = tmp_1*tmp_45;
      real_t tmp_219 = tmp_66*tmp_82;
      real_t tmp_220 = tmp_67*tmp_83;
      real_t tmp_221 = tmp_106*tmp_90;
      real_t tmp_222 = tmp_107*tmp_91;
      real_t tmp_223 = tmp_114*tmp_130;
      real_t tmp_224 = tmp_115*tmp_131;
      real_t tmp_225 = tmp_138*tmp_154;
      real_t tmp_226 = tmp_139*tmp_155;
      real_t tmp_227 = tmp_162*tmp_178;
      real_t tmp_228 = tmp_163*tmp_179;
      real_t tmp_229 = -tmp_1;
      real_t tmp_230 = 4.0 - tmp_0;
      real_t tmp_231 = -tmp_67;
      real_t tmp_232 = 4.0 - tmp_66;
      real_t tmp_233 = -tmp_91;
      real_t tmp_234 = 4.0 - tmp_90;
      real_t tmp_235 = -tmp_115;
      real_t tmp_236 = 4.0 - tmp_114;
      real_t tmp_237 = -tmp_139;
      real_t tmp_238 = 4.0 - tmp_138;
      real_t tmp_239 = -tmp_163;
      real_t tmp_240 = 4.0 - tmp_162;
      real_t tmp_241 = -tmp_2;
      real_t tmp_242 = -tmp_68;
      real_t tmp_243 = -tmp_92;
      real_t tmp_244 = -tmp_116;
      real_t tmp_245 = -tmp_140;
      real_t tmp_246 = -tmp_164;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_161*(tmp_141*tmp_153 + tmp_141*tmp_154 + tmp_141*tmp_155) + tmp_185*(tmp_165*tmp_177 + tmp_165*tmp_178 + tmp_165*tmp_179) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_189*(tmp_90 - 1.0) + tmp_131*tmp_190*(tmp_114 - 1.0) + tmp_155*tmp_191*(tmp_138 - 1.0) + tmp_179*tmp_192*(tmp_162 - 1.0) + tmp_187*tmp_45*(tmp_0 - 1.0) + tmp_188*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_189*(tmp_91 - 1.0) + tmp_130*tmp_190*(tmp_115 - 1.0) + tmp_154*tmp_191*(tmp_139 - 1.0) + tmp_178*tmp_192*(tmp_163 - 1.0) + tmp_187*tmp_41*(tmp_1 - 1.0) + tmp_188*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_189*(tmp_92 - 1.0) + tmp_129*tmp_190*(tmp_116 - 1.0) + tmp_153*tmp_191*(tmp_140 - 1.0) + tmp_177*tmp_192*(tmp_164 - 1.0) + tmp_187*tmp_37*(tmp_2 - 1.0) + tmp_188*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_197 + tmp_198) + tmp_137*(tmp_199 + tmp_200) + tmp_161*(tmp_201 + tmp_202) + tmp_185*(tmp_203 + tmp_204) + tmp_65*(tmp_193 + tmp_194) + tmp_89*(tmp_195 + tmp_196);
      real_t a_0_5 = tmp_113*(tmp_209 + tmp_210) + tmp_137*(tmp_211 + tmp_212) + tmp_161*(tmp_213 + tmp_214) + tmp_185*(tmp_215 + tmp_216) + tmp_65*(tmp_205 + tmp_206) + tmp_89*(tmp_207 + tmp_208);
      real_t a_0_6 = tmp_113*(tmp_221 + tmp_222) + tmp_137*(tmp_223 + tmp_224) + tmp_161*(tmp_225 + tmp_226) + tmp_185*(tmp_227 + tmp_228) + tmp_65*(tmp_217 + tmp_218) + tmp_89*(tmp_219 + tmp_220);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_233 + tmp_234 - 2.8689657637350714) - tmp_198 - tmp_210) + tmp_137*(tmp_129*(tmp_235 + tmp_236 - 5.1079463996938133) - tmp_200 - tmp_212) + tmp_161*(tmp_153*(tmp_237 + tmp_238 - 1.046777351616772) - tmp_202 - tmp_214) + tmp_185*(tmp_177*(tmp_239 + tmp_240 - 1.1229824463536855) - tmp_204 - tmp_216) + tmp_65*(-tmp_194 - tmp_206 + tmp_37*(tmp_229 + tmp_230 - 0.10174693050945161)) + tmp_89*(-tmp_196 - tmp_208 + tmp_81*(tmp_231 + tmp_232 - 2.8970146395642704));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_234 + tmp_243 - 0.091226635556457367) - tmp_197 - tmp_222) + tmp_137*(tmp_130*(tmp_236 + tmp_244 - 1.2225451447274185) - tmp_199 - tmp_224) + tmp_161*(tmp_154*(tmp_238 + tmp_245 - 4.6853024452417262) - tmp_201 - tmp_226) + tmp_185*(tmp_178*(tmp_240 + tmp_246 - 1.1753471206973567) - tmp_203 - tmp_228) + tmp_65*(-tmp_193 - tmp_218 + tmp_41*(tmp_230 + tmp_241 - 1.4708028039367815)) + tmp_89*(-tmp_195 - tmp_220 + tmp_82*(tmp_232 + tmp_242 - 2.2521904169883697));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_233 + tmp_243 + 2.4790639804857291) - tmp_209 - tmp_221) + tmp_137*(tmp_131*(tmp_235 + tmp_244 + 2.6334645986800878) - tmp_211 - tmp_223) + tmp_161*(tmp_155*(tmp_237 + tmp_245 + 2.7305186941804749) - tmp_213 - tmp_225) + tmp_185*(tmp_179*(tmp_239 + tmp_246 - 0.56980841719292119) - tmp_215 - tmp_227) + tmp_65*(-tmp_205 - tmp_217 + tmp_45*(tmp_229 + tmp_241 + 2.7039880664118039)) + tmp_89*(-tmp_207 - tmp_219 + tmp_83*(tmp_231 + tmp_242 + 3.9127583023104862));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_2_blending_q3::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
