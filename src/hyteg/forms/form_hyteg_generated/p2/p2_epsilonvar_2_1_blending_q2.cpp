/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.5
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsilonvar_2_1_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_epsilonvar_2_1_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_1_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsilonvar_2_1_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_F_Tetrahedron_0_0 = 0;
      real_t Blending_F_Tetrahedron_0_1 = 0;
      real_t Blending_F_Tetrahedron_0_2 = 0;
      real_t Blending_F_Tetrahedron_1_0 = 0;
      real_t Blending_F_Tetrahedron_1_1 = 0;
      real_t Blending_F_Tetrahedron_1_2 = 0;
      real_t Blending_F_Tetrahedron_2_0 = 0;
      real_t Blending_F_Tetrahedron_2_1 = 0;
      real_t Blending_F_Tetrahedron_2_2 = 0;
      real_t Blending_F_Tetrahedron_3_0 = 0;
      real_t Blending_F_Tetrahedron_3_1 = 0;
      real_t Blending_F_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Blending_F_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_F_Tetrahedron_0_0, &Blending_F_Tetrahedron_0_1, &Blending_F_Tetrahedron_0_2 );
      Blending_F_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_1_0, &Blending_F_Tetrahedron_1_1, &Blending_F_Tetrahedron_1_2 );
      Blending_F_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_2_0, &Blending_F_Tetrahedron_2_1, &Blending_F_Tetrahedron_2_2 );
      Blending_F_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_3_0, &Blending_F_Tetrahedron_3_1, &Blending_F_Tetrahedron_3_2 );
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_0_0, Blending_F_Tetrahedron_0_1, Blending_F_Tetrahedron_0_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_1_0, Blending_F_Tetrahedron_1_1, Blending_F_Tetrahedron_1_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_2_0, Blending_F_Tetrahedron_2_1, Blending_F_Tetrahedron_2_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_3_0, Blending_F_Tetrahedron_3_1, Blending_F_Tetrahedron_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_10 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_6*tmp_11 - Blending_DF_Tetrahedron_0_6*tmp_14 + Blending_DF_Tetrahedron_0_7*tmp_12 - Blending_DF_Tetrahedron_0_7*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_10 + Blending_DF_Tetrahedron_0_8*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_3_1 + tmp_2;
      real_t tmp_19 = p_affine_1_2 + tmp_16;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_0 + tmp_0;
      real_t tmp_22 = p_affine_2_2 + tmp_16;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_22;
      real_t tmp_25 = tmp_19*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_24 + tmp_21*tmp_23 - tmp_21*tmp_25);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*(-tmp_10 + tmp_9);
      real_t tmp_29 = tmp_20 - tmp_24;
      real_t tmp_30 = tmp_27*(tmp_12 - tmp_13);
      real_t tmp_31 = tmp_23 - tmp_25;
      real_t tmp_32 = tmp_27*(tmp_11 - tmp_14);
      real_t tmp_33 = tmp_28*tmp_8 + tmp_29*tmp_30 + tmp_31*tmp_32;
      real_t tmp_34 = 0.55278640450004235;
      real_t tmp_35 = 0.55278640450004235;
      real_t tmp_36 = 2.3416407864998732;
      real_t tmp_37 = 0.5*tmp_34 + 0.5*tmp_35 + 0.5*tmp_36 - 1.5;
      real_t tmp_38 = -tmp_1*tmp_18 + tmp_21*tmp_6;
      real_t tmp_39 = tmp_1*tmp_17 - tmp_19*tmp_21;
      real_t tmp_40 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_41 = tmp_28*tmp_38 + tmp_30*tmp_39 + tmp_32*tmp_40;
      real_t tmp_42 = tmp_18*tmp_5 - tmp_21*tmp_3;
      real_t tmp_43 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_44 = tmp_17*tmp_3 - tmp_18*tmp_22;
      real_t tmp_45 = tmp_28*tmp_42 + tmp_30*tmp_43 + tmp_32*tmp_44;
      real_t tmp_46 = tmp_33*tmp_37 + tmp_37*tmp_41 + tmp_37*tmp_45;
      real_t tmp_47 = tmp_27*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_48 = tmp_27*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_49 = tmp_27*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_50 = tmp_29*tmp_48 + tmp_31*tmp_49 + tmp_47*tmp_8;
      real_t tmp_51 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_52 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_53 = tmp_37*tmp_50 + tmp_37*tmp_51 + tmp_37*tmp_52;
      real_t tmp_54 = p_affine_0_0*p_affine_1_1;
      real_t tmp_55 = p_affine_0_0*p_affine_1_2;
      real_t tmp_56 = p_affine_2_1*p_affine_3_2;
      real_t tmp_57 = p_affine_0_1*p_affine_1_0;
      real_t tmp_58 = p_affine_0_1*p_affine_1_2;
      real_t tmp_59 = p_affine_2_2*p_affine_3_0;
      real_t tmp_60 = p_affine_0_2*p_affine_1_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_1;
      real_t tmp_62 = p_affine_2_0*p_affine_3_1;
      real_t tmp_63 = p_affine_2_2*p_affine_3_1;
      real_t tmp_64 = p_affine_2_0*p_affine_3_2;
      real_t tmp_65 = p_affine_2_1*p_affine_3_0;
      real_t tmp_66 = std::abs(p_affine_0_0*tmp_56 - p_affine_0_0*tmp_63 + p_affine_0_1*tmp_59 - p_affine_0_1*tmp_64 + p_affine_0_2*tmp_62 - p_affine_0_2*tmp_65 - p_affine_1_0*tmp_56 + p_affine_1_0*tmp_63 - p_affine_1_1*tmp_59 + p_affine_1_1*tmp_64 - p_affine_1_2*tmp_62 + p_affine_1_2*tmp_65 + p_affine_2_0*tmp_58 - p_affine_2_0*tmp_61 - p_affine_2_1*tmp_55 + p_affine_2_1*tmp_60 + p_affine_2_2*tmp_54 - p_affine_2_2*tmp_57 - p_affine_3_0*tmp_58 + p_affine_3_0*tmp_61 + p_affine_3_1*tmp_55 - p_affine_3_1*tmp_60 - p_affine_3_2*tmp_54 + p_affine_3_2*tmp_57);
      real_t tmp_67 = 4*tmp_66;
      real_t tmp_68 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*std::abs(tmp_15);
      real_t tmp_69 = tmp_67*tmp_68;
      real_t tmp_70 = tmp_53*tmp_69;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_6*tmp_73 - Blending_DF_Tetrahedron_1_6*tmp_76 + Blending_DF_Tetrahedron_1_7*tmp_74 - Blending_DF_Tetrahedron_1_7*tmp_75 + Blending_DF_Tetrahedron_1_8*tmp_71 - Blending_DF_Tetrahedron_1_8*tmp_72;
      real_t tmp_78 = tmp_26/tmp_77;
      real_t tmp_79 = tmp_78*(tmp_71 - tmp_72);
      real_t tmp_80 = tmp_78*(tmp_74 - tmp_75);
      real_t tmp_81 = tmp_78*(tmp_73 - tmp_76);
      real_t tmp_82 = tmp_29*tmp_80 + tmp_31*tmp_81 + tmp_79*tmp_8;
      real_t tmp_83 = 0.55278640450004235;
      real_t tmp_84 = 2.3416407864998732;
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 0.5*tmp_83 + 0.5*tmp_84 + 0.5*tmp_85 - 1.5;
      real_t tmp_87 = tmp_38*tmp_79 + tmp_39*tmp_80 + tmp_40*tmp_81;
      real_t tmp_88 = tmp_42*tmp_79 + tmp_43*tmp_80 + tmp_44*tmp_81;
      real_t tmp_89 = tmp_82*tmp_86 + tmp_86*tmp_87 + tmp_86*tmp_88;
      real_t tmp_90 = tmp_78*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_91 = tmp_78*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_92 = tmp_78*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_93 = tmp_29*tmp_91 + tmp_31*tmp_92 + tmp_8*tmp_90;
      real_t tmp_94 = tmp_38*tmp_90 + tmp_39*tmp_91 + tmp_40*tmp_92;
      real_t tmp_95 = tmp_42*tmp_90 + tmp_43*tmp_91 + tmp_44*tmp_92;
      real_t tmp_96 = tmp_86*tmp_93 + tmp_86*tmp_94 + tmp_86*tmp_95;
      real_t tmp_97 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*std::abs(tmp_77);
      real_t tmp_98 = tmp_67*tmp_97;
      real_t tmp_99 = tmp_96*tmp_98;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_101 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_102 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_103 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_104 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_105 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_6*tmp_102 - Blending_DF_Tetrahedron_2_6*tmp_105 + Blending_DF_Tetrahedron_2_7*tmp_103 - Blending_DF_Tetrahedron_2_7*tmp_104 + Blending_DF_Tetrahedron_2_8*tmp_100 - Blending_DF_Tetrahedron_2_8*tmp_101;
      real_t tmp_107 = tmp_26/tmp_106;
      real_t tmp_108 = tmp_107*(tmp_100 - tmp_101);
      real_t tmp_109 = tmp_107*(tmp_103 - tmp_104);
      real_t tmp_110 = tmp_107*(tmp_102 - tmp_105);
      real_t tmp_111 = tmp_108*tmp_8 + tmp_109*tmp_29 + tmp_110*tmp_31;
      real_t tmp_112 = 2.3416407864998732;
      real_t tmp_113 = 0.55278640450004235;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.5*tmp_112 + 0.5*tmp_113 + 0.5*tmp_114 - 1.5;
      real_t tmp_116 = tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40;
      real_t tmp_117 = tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44;
      real_t tmp_118 = tmp_111*tmp_115 + tmp_115*tmp_116 + tmp_115*tmp_117;
      real_t tmp_119 = tmp_107*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_120 = tmp_107*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_121 = tmp_107*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_122 = tmp_119*tmp_8 + tmp_120*tmp_29 + tmp_121*tmp_31;
      real_t tmp_123 = tmp_119*tmp_38 + tmp_120*tmp_39 + tmp_121*tmp_40;
      real_t tmp_124 = tmp_119*tmp_42 + tmp_120*tmp_43 + tmp_121*tmp_44;
      real_t tmp_125 = tmp_115*tmp_122 + tmp_115*tmp_123 + tmp_115*tmp_124;
      real_t tmp_126 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*std::abs(tmp_106);
      real_t tmp_127 = tmp_126*tmp_67;
      real_t tmp_128 = tmp_125*tmp_127;
      real_t tmp_129 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_130 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_131 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_132 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_133 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_134 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_135 = Blending_DF_Tetrahedron_3_6*tmp_131 - Blending_DF_Tetrahedron_3_6*tmp_134 + Blending_DF_Tetrahedron_3_7*tmp_132 - Blending_DF_Tetrahedron_3_7*tmp_133 + Blending_DF_Tetrahedron_3_8*tmp_129 - Blending_DF_Tetrahedron_3_8*tmp_130;
      real_t tmp_136 = tmp_26/tmp_135;
      real_t tmp_137 = tmp_136*(tmp_129 - tmp_130);
      real_t tmp_138 = tmp_136*(tmp_132 - tmp_133);
      real_t tmp_139 = tmp_136*(tmp_131 - tmp_134);
      real_t tmp_140 = tmp_137*tmp_8 + tmp_138*tmp_29 + tmp_139*tmp_31;
      real_t tmp_141 = 0.55278640450004235;
      real_t tmp_142 = 0.55278640450004235;
      real_t tmp_143 = 0.55278640450004235;
      real_t tmp_144 = 0.5*tmp_141 + 0.5*tmp_142 + 0.5*tmp_143 - 1.5;
      real_t tmp_145 = tmp_137*tmp_38 + tmp_138*tmp_39 + tmp_139*tmp_40;
      real_t tmp_146 = tmp_137*tmp_42 + tmp_138*tmp_43 + tmp_139*tmp_44;
      real_t tmp_147 = tmp_140*tmp_144 + tmp_144*tmp_145 + tmp_144*tmp_146;
      real_t tmp_148 = tmp_136*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_149 = tmp_136*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_150 = tmp_136*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_151 = tmp_148*tmp_8 + tmp_149*tmp_29 + tmp_150*tmp_31;
      real_t tmp_152 = tmp_148*tmp_38 + tmp_149*tmp_39 + tmp_150*tmp_40;
      real_t tmp_153 = tmp_148*tmp_42 + tmp_149*tmp_43 + tmp_150*tmp_44;
      real_t tmp_154 = tmp_144*tmp_151 + tmp_144*tmp_152 + tmp_144*tmp_153;
      real_t tmp_155 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*std::abs(tmp_135);
      real_t tmp_156 = tmp_155*tmp_67;
      real_t tmp_157 = tmp_154*tmp_156;
      real_t tmp_158 = 2.0*tmp_66;
      real_t tmp_159 = tmp_53*tmp_68;
      real_t tmp_160 = tmp_158*tmp_159;
      real_t tmp_161 = tmp_34 - 1.0;
      real_t tmp_162 = tmp_161*tmp_45;
      real_t tmp_163 = tmp_96*tmp_97;
      real_t tmp_164 = tmp_158*tmp_163;
      real_t tmp_165 = tmp_83 - 1.0;
      real_t tmp_166 = tmp_165*tmp_88;
      real_t tmp_167 = tmp_125*tmp_126;
      real_t tmp_168 = tmp_158*tmp_167;
      real_t tmp_169 = tmp_112 - 1.0;
      real_t tmp_170 = tmp_117*tmp_169;
      real_t tmp_171 = tmp_154*tmp_155;
      real_t tmp_172 = tmp_158*tmp_171;
      real_t tmp_173 = tmp_141 - 1.0;
      real_t tmp_174 = tmp_146*tmp_173;
      real_t tmp_175 = tmp_35 - 1.0;
      real_t tmp_176 = tmp_175*tmp_41;
      real_t tmp_177 = tmp_84 - 1.0;
      real_t tmp_178 = tmp_177*tmp_87;
      real_t tmp_179 = tmp_113 - 1.0;
      real_t tmp_180 = tmp_116*tmp_179;
      real_t tmp_181 = tmp_142 - 1.0;
      real_t tmp_182 = tmp_145*tmp_181;
      real_t tmp_183 = 2.0*tmp_33;
      real_t tmp_184 = tmp_36 - 1.0;
      real_t tmp_185 = tmp_184*tmp_66;
      real_t tmp_186 = tmp_183*tmp_185;
      real_t tmp_187 = 2.0*tmp_82;
      real_t tmp_188 = tmp_85 - 1.0;
      real_t tmp_189 = tmp_188*tmp_66;
      real_t tmp_190 = tmp_187*tmp_189;
      real_t tmp_191 = 2.0*tmp_111;
      real_t tmp_192 = tmp_114 - 1.0;
      real_t tmp_193 = tmp_192*tmp_66;
      real_t tmp_194 = tmp_191*tmp_193;
      real_t tmp_195 = 2.0*tmp_140;
      real_t tmp_196 = tmp_143 - 1.0;
      real_t tmp_197 = tmp_196*tmp_66;
      real_t tmp_198 = tmp_195*tmp_197;
      real_t tmp_199 = 0.13819660112501059*tmp_183;
      real_t tmp_200 = 1.1708203932499366;
      real_t tmp_201 = tmp_200*tmp_41;
      real_t tmp_202 = tmp_199 + tmp_201;
      real_t tmp_203 = 0.58541019662496829*tmp_187;
      real_t tmp_204 = 0.27639320225002117;
      real_t tmp_205 = tmp_204*tmp_87;
      real_t tmp_206 = tmp_203 + tmp_205;
      real_t tmp_207 = 0.13819660112501059*tmp_191;
      real_t tmp_208 = 0.27639320225002117;
      real_t tmp_209 = tmp_116*tmp_208;
      real_t tmp_210 = tmp_207 + tmp_209;
      real_t tmp_211 = 0.13819660112501059*tmp_195;
      real_t tmp_212 = 0.27639320225002117;
      real_t tmp_213 = tmp_145*tmp_212;
      real_t tmp_214 = tmp_211 + tmp_213;
      real_t tmp_215 = 0.13819660112501059*tmp_183;
      real_t tmp_216 = tmp_200*tmp_45;
      real_t tmp_217 = tmp_215 + tmp_216;
      real_t tmp_218 = 0.13819660112501059*tmp_187;
      real_t tmp_219 = tmp_204*tmp_88;
      real_t tmp_220 = tmp_218 + tmp_219;
      real_t tmp_221 = 0.58541019662496829*tmp_191;
      real_t tmp_222 = tmp_117*tmp_208;
      real_t tmp_223 = tmp_221 + tmp_222;
      real_t tmp_224 = 0.13819660112501059*tmp_195;
      real_t tmp_225 = tmp_146*tmp_212;
      real_t tmp_226 = tmp_224 + tmp_225;
      real_t tmp_227 = 0.27639320225002117;
      real_t tmp_228 = tmp_227*tmp_41;
      real_t tmp_229 = 0.27639320225002117;
      real_t tmp_230 = tmp_229*tmp_45;
      real_t tmp_231 = tmp_228 + tmp_230;
      real_t tmp_232 = 0.27639320225002117;
      real_t tmp_233 = tmp_232*tmp_87;
      real_t tmp_234 = 1.1708203932499366;
      real_t tmp_235 = tmp_234*tmp_88;
      real_t tmp_236 = tmp_233 + tmp_235;
      real_t tmp_237 = 1.1708203932499366;
      real_t tmp_238 = tmp_116*tmp_237;
      real_t tmp_239 = 0.27639320225002117;
      real_t tmp_240 = tmp_117*tmp_239;
      real_t tmp_241 = tmp_238 + tmp_240;
      real_t tmp_242 = 0.27639320225002117;
      real_t tmp_243 = tmp_145*tmp_242;
      real_t tmp_244 = 0.27639320225002117;
      real_t tmp_245 = tmp_146*tmp_244;
      real_t tmp_246 = tmp_243 + tmp_245;
      real_t tmp_247 = -tmp_35;
      real_t tmp_248 = 4.0 - tmp_34;
      real_t tmp_249 = 0.5*tmp_247 + 0.5*tmp_248 - 2.3416407864998732;
      real_t tmp_250 = -tmp_201 - tmp_216 + tmp_249*tmp_33;
      real_t tmp_251 = -tmp_84;
      real_t tmp_252 = 4.0 - tmp_83;
      real_t tmp_253 = 0.5*tmp_251 + 0.5*tmp_252 - 0.55278640450004235;
      real_t tmp_254 = -tmp_205 - tmp_219 + tmp_253*tmp_82;
      real_t tmp_255 = -tmp_113;
      real_t tmp_256 = 4.0 - tmp_112;
      real_t tmp_257 = 0.5*tmp_255 + 0.5*tmp_256 - 0.55278640450004235;
      real_t tmp_258 = tmp_111*tmp_257 - tmp_209 - tmp_222;
      real_t tmp_259 = -tmp_142;
      real_t tmp_260 = 4.0 - tmp_141;
      real_t tmp_261 = 0.5*tmp_259 + 0.5*tmp_260 - 0.55278640450004235;
      real_t tmp_262 = tmp_140*tmp_261 - tmp_213 - tmp_225;
      real_t tmp_263 = -tmp_36;
      real_t tmp_264 = 0.5*tmp_248 + 0.5*tmp_263 - 0.55278640450004235;
      real_t tmp_265 = -tmp_199 - tmp_230 + tmp_264*tmp_41;
      real_t tmp_266 = -tmp_85;
      real_t tmp_267 = 0.5*tmp_252 + 0.5*tmp_266 - 2.3416407864998732;
      real_t tmp_268 = -tmp_203 - tmp_235 + tmp_267*tmp_87;
      real_t tmp_269 = -tmp_114;
      real_t tmp_270 = 0.5*tmp_256 + 0.5*tmp_269 - 0.55278640450004235;
      real_t tmp_271 = tmp_116*tmp_270 - tmp_207 - tmp_240;
      real_t tmp_272 = -tmp_143;
      real_t tmp_273 = 0.5*tmp_260 + 0.5*tmp_272 - 0.55278640450004235;
      real_t tmp_274 = tmp_145*tmp_273 - tmp_211 - tmp_245;
      real_t tmp_275 = 0.5*tmp_247 + 0.5*tmp_263 + 1.4472135954999577;
      real_t tmp_276 = -tmp_215 - tmp_228 + tmp_275*tmp_45;
      real_t tmp_277 = 0.5*tmp_251 + 0.5*tmp_266 + 1.4472135954999577;
      real_t tmp_278 = -tmp_218 - tmp_233 + tmp_277*tmp_88;
      real_t tmp_279 = 0.5*tmp_255 + 0.5*tmp_269 - 0.34164078649987317;
      real_t tmp_280 = tmp_117*tmp_279 - tmp_221 - tmp_238;
      real_t tmp_281 = 0.5*tmp_259 + 0.5*tmp_272 + 1.4472135954999577;
      real_t tmp_282 = tmp_146*tmp_281 - tmp_224 - tmp_243;
      real_t tmp_283 = tmp_158*tmp_46;
      real_t tmp_284 = tmp_52*tmp_68;
      real_t tmp_285 = tmp_161*tmp_284;
      real_t tmp_286 = tmp_158*tmp_89;
      real_t tmp_287 = tmp_95*tmp_97;
      real_t tmp_288 = tmp_165*tmp_287;
      real_t tmp_289 = tmp_118*tmp_158;
      real_t tmp_290 = tmp_124*tmp_126;
      real_t tmp_291 = tmp_169*tmp_290;
      real_t tmp_292 = tmp_147*tmp_158;
      real_t tmp_293 = tmp_153*tmp_155;
      real_t tmp_294 = tmp_173*tmp_293;
      real_t tmp_295 = 16.0*tmp_66;
      real_t tmp_296 = 1.0*tmp_66;
      real_t tmp_297 = 1.0*tmp_185;
      real_t tmp_298 = tmp_297*tmp_33;
      real_t tmp_299 = 1.0*tmp_189;
      real_t tmp_300 = tmp_299*tmp_82;
      real_t tmp_301 = 1.0*tmp_193;
      real_t tmp_302 = tmp_111*tmp_301;
      real_t tmp_303 = 1.0*tmp_197;
      real_t tmp_304 = tmp_140*tmp_303;
      real_t tmp_305 = tmp_158*tmp_285;
      real_t tmp_306 = tmp_158*tmp_288;
      real_t tmp_307 = tmp_158*tmp_291;
      real_t tmp_308 = tmp_158*tmp_294;
      real_t tmp_309 = tmp_51*tmp_68;
      real_t tmp_310 = tmp_175*tmp_309;
      real_t tmp_311 = tmp_94*tmp_97;
      real_t tmp_312 = tmp_177*tmp_311;
      real_t tmp_313 = tmp_123*tmp_126;
      real_t tmp_314 = tmp_179*tmp_313;
      real_t tmp_315 = tmp_152*tmp_155;
      real_t tmp_316 = tmp_181*tmp_315;
      real_t tmp_317 = tmp_158*tmp_310;
      real_t tmp_318 = tmp_158*tmp_312;
      real_t tmp_319 = tmp_158*tmp_314;
      real_t tmp_320 = tmp_158*tmp_316;
      real_t tmp_321 = tmp_50*tmp_68;
      real_t tmp_322 = tmp_184*tmp_321;
      real_t tmp_323 = tmp_93*tmp_97;
      real_t tmp_324 = tmp_188*tmp_323;
      real_t tmp_325 = tmp_122*tmp_126;
      real_t tmp_326 = tmp_192*tmp_325;
      real_t tmp_327 = tmp_151*tmp_155;
      real_t tmp_328 = tmp_196*tmp_327;
      real_t tmp_329 = tmp_297*tmp_321;
      real_t tmp_330 = tmp_299*tmp_323;
      real_t tmp_331 = tmp_301*tmp_325;
      real_t tmp_332 = tmp_303*tmp_327;
      real_t tmp_333 = tmp_158*tmp_322;
      real_t tmp_334 = tmp_158*tmp_324;
      real_t tmp_335 = tmp_158*tmp_326;
      real_t tmp_336 = tmp_158*tmp_328;
      real_t tmp_337 = tmp_229*tmp_50;
      real_t tmp_338 = tmp_200*tmp_51;
      real_t tmp_339 = tmp_337 + tmp_338;
      real_t tmp_340 = tmp_339*tmp_69;
      real_t tmp_341 = tmp_234*tmp_93;
      real_t tmp_342 = tmp_204*tmp_94;
      real_t tmp_343 = tmp_341 + tmp_342;
      real_t tmp_344 = tmp_343*tmp_98;
      real_t tmp_345 = tmp_122*tmp_239;
      real_t tmp_346 = tmp_123*tmp_208;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_127*tmp_347;
      real_t tmp_349 = tmp_151*tmp_244;
      real_t tmp_350 = tmp_152*tmp_212;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_156*tmp_351;
      real_t tmp_353 = tmp_339*tmp_68;
      real_t tmp_354 = tmp_158*tmp_353;
      real_t tmp_355 = tmp_343*tmp_97;
      real_t tmp_356 = tmp_158*tmp_355;
      real_t tmp_357 = tmp_126*tmp_347;
      real_t tmp_358 = tmp_158*tmp_357;
      real_t tmp_359 = tmp_155*tmp_351;
      real_t tmp_360 = tmp_158*tmp_359;
      real_t tmp_361 = tmp_227*tmp_50;
      real_t tmp_362 = tmp_200*tmp_52;
      real_t tmp_363 = tmp_361 + tmp_362;
      real_t tmp_364 = tmp_363*tmp_69;
      real_t tmp_365 = tmp_232*tmp_93;
      real_t tmp_366 = tmp_204*tmp_95;
      real_t tmp_367 = tmp_365 + tmp_366;
      real_t tmp_368 = tmp_367*tmp_98;
      real_t tmp_369 = tmp_122*tmp_237;
      real_t tmp_370 = tmp_124*tmp_208;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_127*tmp_371;
      real_t tmp_373 = tmp_151*tmp_242;
      real_t tmp_374 = tmp_153*tmp_212;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_156*tmp_375;
      real_t tmp_377 = tmp_363*tmp_68;
      real_t tmp_378 = tmp_158*tmp_377;
      real_t tmp_379 = tmp_367*tmp_97;
      real_t tmp_380 = tmp_158*tmp_379;
      real_t tmp_381 = tmp_126*tmp_371;
      real_t tmp_382 = tmp_158*tmp_381;
      real_t tmp_383 = tmp_155*tmp_375;
      real_t tmp_384 = tmp_158*tmp_383;
      real_t tmp_385 = tmp_227*tmp_51;
      real_t tmp_386 = tmp_229*tmp_52;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_387*tmp_69;
      real_t tmp_389 = tmp_232*tmp_94;
      real_t tmp_390 = tmp_234*tmp_95;
      real_t tmp_391 = tmp_389 + tmp_390;
      real_t tmp_392 = tmp_391*tmp_98;
      real_t tmp_393 = tmp_123*tmp_237;
      real_t tmp_394 = tmp_124*tmp_239;
      real_t tmp_395 = tmp_393 + tmp_394;
      real_t tmp_396 = tmp_127*tmp_395;
      real_t tmp_397 = tmp_152*tmp_242;
      real_t tmp_398 = tmp_153*tmp_244;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = tmp_156*tmp_399;
      real_t tmp_401 = tmp_387*tmp_68;
      real_t tmp_402 = tmp_158*tmp_401;
      real_t tmp_403 = tmp_391*tmp_97;
      real_t tmp_404 = tmp_158*tmp_403;
      real_t tmp_405 = tmp_126*tmp_395;
      real_t tmp_406 = tmp_158*tmp_405;
      real_t tmp_407 = tmp_155*tmp_399;
      real_t tmp_408 = tmp_158*tmp_407;
      real_t tmp_409 = tmp_249*tmp_50 - tmp_338 - tmp_362;
      real_t tmp_410 = tmp_409*tmp_69;
      real_t tmp_411 = tmp_253*tmp_93 - tmp_342 - tmp_366;
      real_t tmp_412 = tmp_411*tmp_98;
      real_t tmp_413 = tmp_122*tmp_257 - tmp_346 - tmp_370;
      real_t tmp_414 = tmp_127*tmp_413;
      real_t tmp_415 = tmp_151*tmp_261 - tmp_350 - tmp_374;
      real_t tmp_416 = tmp_156*tmp_415;
      real_t tmp_417 = tmp_409*tmp_68;
      real_t tmp_418 = tmp_158*tmp_417;
      real_t tmp_419 = tmp_411*tmp_97;
      real_t tmp_420 = tmp_158*tmp_419;
      real_t tmp_421 = tmp_126*tmp_413;
      real_t tmp_422 = tmp_158*tmp_421;
      real_t tmp_423 = tmp_155*tmp_415;
      real_t tmp_424 = tmp_158*tmp_423;
      real_t tmp_425 = tmp_264*tmp_51 - tmp_337 - tmp_386;
      real_t tmp_426 = tmp_425*tmp_69;
      real_t tmp_427 = tmp_267*tmp_94 - tmp_341 - tmp_390;
      real_t tmp_428 = tmp_427*tmp_98;
      real_t tmp_429 = tmp_123*tmp_270 - tmp_345 - tmp_394;
      real_t tmp_430 = tmp_127*tmp_429;
      real_t tmp_431 = tmp_152*tmp_273 - tmp_349 - tmp_398;
      real_t tmp_432 = tmp_156*tmp_431;
      real_t tmp_433 = tmp_425*tmp_68;
      real_t tmp_434 = tmp_158*tmp_433;
      real_t tmp_435 = tmp_427*tmp_97;
      real_t tmp_436 = tmp_158*tmp_435;
      real_t tmp_437 = tmp_126*tmp_429;
      real_t tmp_438 = tmp_158*tmp_437;
      real_t tmp_439 = tmp_155*tmp_431;
      real_t tmp_440 = tmp_158*tmp_439;
      real_t tmp_441 = tmp_275*tmp_52 - tmp_361 - tmp_385;
      real_t tmp_442 = tmp_441*tmp_69;
      real_t tmp_443 = tmp_277*tmp_95 - tmp_365 - tmp_389;
      real_t tmp_444 = tmp_443*tmp_98;
      real_t tmp_445 = tmp_124*tmp_279 - tmp_369 - tmp_393;
      real_t tmp_446 = tmp_127*tmp_445;
      real_t tmp_447 = tmp_153*tmp_281 - tmp_373 - tmp_397;
      real_t tmp_448 = tmp_156*tmp_447;
      real_t tmp_449 = tmp_441*tmp_68;
      real_t tmp_450 = tmp_158*tmp_449;
      real_t tmp_451 = tmp_443*tmp_97;
      real_t tmp_452 = tmp_158*tmp_451;
      real_t tmp_453 = tmp_126*tmp_445;
      real_t tmp_454 = tmp_158*tmp_453;
      real_t tmp_455 = tmp_155*tmp_447;
      real_t tmp_456 = tmp_158*tmp_455;
      real_t a_0_0 = tmp_118*tmp_128 + tmp_147*tmp_157 + tmp_46*tmp_70 + tmp_89*tmp_99;
      real_t a_0_1 = tmp_160*tmp_162 + tmp_164*tmp_166 + tmp_168*tmp_170 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_160*tmp_176 + tmp_164*tmp_178 + tmp_168*tmp_180 + tmp_172*tmp_182;
      real_t a_0_3 = tmp_159*tmp_186 + tmp_163*tmp_190 + tmp_167*tmp_194 + tmp_171*tmp_198;
      real_t a_0_4 = tmp_128*tmp_210 + tmp_157*tmp_214 + tmp_202*tmp_70 + tmp_206*tmp_99;
      real_t a_0_5 = tmp_128*tmp_223 + tmp_157*tmp_226 + tmp_217*tmp_70 + tmp_220*tmp_99;
      real_t a_0_6 = tmp_128*tmp_241 + tmp_157*tmp_246 + tmp_231*tmp_70 + tmp_236*tmp_99;
      real_t a_0_7 = tmp_128*tmp_258 + tmp_157*tmp_262 + tmp_250*tmp_70 + tmp_254*tmp_99;
      real_t a_0_8 = tmp_128*tmp_271 + tmp_157*tmp_274 + tmp_265*tmp_70 + tmp_268*tmp_99;
      real_t a_0_9 = tmp_128*tmp_280 + tmp_157*tmp_282 + tmp_276*tmp_70 + tmp_278*tmp_99;
      real_t a_1_0 = tmp_283*tmp_285 + tmp_286*tmp_288 + tmp_289*tmp_291 + tmp_292*tmp_294;
      real_t a_1_1 = 0.11249999999999989*tmp_117*tmp_290*tmp_295 + 0.012499999999999983*tmp_146*tmp_293*tmp_295 + 0.012499999999999983*tmp_284*tmp_295*tmp_45 + 0.012499999999999983*tmp_287*tmp_295*tmp_88;
      real_t a_1_2 = tmp_176*tmp_285*tmp_296 + tmp_178*tmp_288*tmp_296 + tmp_180*tmp_291*tmp_296 + tmp_182*tmp_294*tmp_296;
      real_t a_1_3 = tmp_285*tmp_298 + tmp_288*tmp_300 + tmp_291*tmp_302 + tmp_294*tmp_304;
      real_t a_1_4 = tmp_202*tmp_305 + tmp_206*tmp_306 + tmp_210*tmp_307 + tmp_214*tmp_308;
      real_t a_1_5 = tmp_217*tmp_305 + tmp_220*tmp_306 + tmp_223*tmp_307 + tmp_226*tmp_308;
      real_t a_1_6 = tmp_231*tmp_305 + tmp_236*tmp_306 + tmp_241*tmp_307 + tmp_246*tmp_308;
      real_t a_1_7 = tmp_250*tmp_305 + tmp_254*tmp_306 + tmp_258*tmp_307 + tmp_262*tmp_308;
      real_t a_1_8 = tmp_265*tmp_305 + tmp_268*tmp_306 + tmp_271*tmp_307 + tmp_274*tmp_308;
      real_t a_1_9 = tmp_276*tmp_305 + tmp_278*tmp_306 + tmp_280*tmp_307 + tmp_282*tmp_308;
      real_t a_2_0 = tmp_283*tmp_310 + tmp_286*tmp_312 + tmp_289*tmp_314 + tmp_292*tmp_316;
      real_t a_2_1 = tmp_162*tmp_296*tmp_310 + tmp_166*tmp_296*tmp_312 + tmp_170*tmp_296*tmp_314 + tmp_174*tmp_296*tmp_316;
      real_t a_2_2 = 0.012499999999999983*tmp_116*tmp_295*tmp_313 + 0.012499999999999983*tmp_145*tmp_295*tmp_315 + 0.012499999999999983*tmp_295*tmp_309*tmp_41 + 0.11249999999999989*tmp_295*tmp_311*tmp_87;
      real_t a_2_3 = tmp_298*tmp_310 + tmp_300*tmp_312 + tmp_302*tmp_314 + tmp_304*tmp_316;
      real_t a_2_4 = tmp_202*tmp_317 + tmp_206*tmp_318 + tmp_210*tmp_319 + tmp_214*tmp_320;
      real_t a_2_5 = tmp_217*tmp_317 + tmp_220*tmp_318 + tmp_223*tmp_319 + tmp_226*tmp_320;
      real_t a_2_6 = tmp_231*tmp_317 + tmp_236*tmp_318 + tmp_241*tmp_319 + tmp_246*tmp_320;
      real_t a_2_7 = tmp_250*tmp_317 + tmp_254*tmp_318 + tmp_258*tmp_319 + tmp_262*tmp_320;
      real_t a_2_8 = tmp_265*tmp_317 + tmp_268*tmp_318 + tmp_271*tmp_319 + tmp_274*tmp_320;
      real_t a_2_9 = tmp_276*tmp_317 + tmp_278*tmp_318 + tmp_280*tmp_319 + tmp_282*tmp_320;
      real_t a_3_0 = tmp_283*tmp_322 + tmp_286*tmp_324 + tmp_289*tmp_326 + tmp_292*tmp_328;
      real_t a_3_1 = tmp_162*tmp_329 + tmp_166*tmp_330 + tmp_170*tmp_331 + tmp_174*tmp_332;
      real_t a_3_2 = tmp_176*tmp_329 + tmp_178*tmp_330 + tmp_180*tmp_331 + tmp_182*tmp_332;
      real_t a_3_3 = 0.012499999999999983*tmp_111*tmp_295*tmp_325 + 0.012499999999999983*tmp_140*tmp_295*tmp_327 + 0.11249999999999989*tmp_295*tmp_321*tmp_33 + 0.012499999999999983*tmp_295*tmp_323*tmp_82;
      real_t a_3_4 = tmp_202*tmp_333 + tmp_206*tmp_334 + tmp_210*tmp_335 + tmp_214*tmp_336;
      real_t a_3_5 = tmp_217*tmp_333 + tmp_220*tmp_334 + tmp_223*tmp_335 + tmp_226*tmp_336;
      real_t a_3_6 = tmp_231*tmp_333 + tmp_236*tmp_334 + tmp_241*tmp_335 + tmp_246*tmp_336;
      real_t a_3_7 = tmp_250*tmp_333 + tmp_254*tmp_334 + tmp_258*tmp_335 + tmp_262*tmp_336;
      real_t a_3_8 = tmp_265*tmp_333 + tmp_268*tmp_334 + tmp_271*tmp_335 + tmp_274*tmp_336;
      real_t a_3_9 = tmp_276*tmp_333 + tmp_278*tmp_334 + tmp_280*tmp_335 + tmp_282*tmp_336;
      real_t a_4_0 = tmp_118*tmp_348 + tmp_147*tmp_352 + tmp_340*tmp_46 + tmp_344*tmp_89;
      real_t a_4_1 = tmp_162*tmp_354 + tmp_166*tmp_356 + tmp_170*tmp_358 + tmp_174*tmp_360;
      real_t a_4_2 = tmp_176*tmp_354 + tmp_178*tmp_356 + tmp_180*tmp_358 + tmp_182*tmp_360;
      real_t a_4_3 = tmp_186*tmp_353 + tmp_190*tmp_355 + tmp_194*tmp_357 + tmp_198*tmp_359;
      real_t a_4_4 = tmp_202*tmp_340 + tmp_206*tmp_344 + tmp_210*tmp_348 + tmp_214*tmp_352;
      real_t a_4_5 = tmp_217*tmp_340 + tmp_220*tmp_344 + tmp_223*tmp_348 + tmp_226*tmp_352;
      real_t a_4_6 = tmp_231*tmp_340 + tmp_236*tmp_344 + tmp_241*tmp_348 + tmp_246*tmp_352;
      real_t a_4_7 = tmp_250*tmp_340 + tmp_254*tmp_344 + tmp_258*tmp_348 + tmp_262*tmp_352;
      real_t a_4_8 = tmp_265*tmp_340 + tmp_268*tmp_344 + tmp_271*tmp_348 + tmp_274*tmp_352;
      real_t a_4_9 = tmp_276*tmp_340 + tmp_278*tmp_344 + tmp_280*tmp_348 + tmp_282*tmp_352;
      real_t a_5_0 = tmp_118*tmp_372 + tmp_147*tmp_376 + tmp_364*tmp_46 + tmp_368*tmp_89;
      real_t a_5_1 = tmp_162*tmp_378 + tmp_166*tmp_380 + tmp_170*tmp_382 + tmp_174*tmp_384;
      real_t a_5_2 = tmp_176*tmp_378 + tmp_178*tmp_380 + tmp_180*tmp_382 + tmp_182*tmp_384;
      real_t a_5_3 = tmp_186*tmp_377 + tmp_190*tmp_379 + tmp_194*tmp_381 + tmp_198*tmp_383;
      real_t a_5_4 = tmp_202*tmp_364 + tmp_206*tmp_368 + tmp_210*tmp_372 + tmp_214*tmp_376;
      real_t a_5_5 = tmp_217*tmp_364 + tmp_220*tmp_368 + tmp_223*tmp_372 + tmp_226*tmp_376;
      real_t a_5_6 = tmp_231*tmp_364 + tmp_236*tmp_368 + tmp_241*tmp_372 + tmp_246*tmp_376;
      real_t a_5_7 = tmp_250*tmp_364 + tmp_254*tmp_368 + tmp_258*tmp_372 + tmp_262*tmp_376;
      real_t a_5_8 = tmp_265*tmp_364 + tmp_268*tmp_368 + tmp_271*tmp_372 + tmp_274*tmp_376;
      real_t a_5_9 = tmp_276*tmp_364 + tmp_278*tmp_368 + tmp_280*tmp_372 + tmp_282*tmp_376;
      real_t a_6_0 = tmp_118*tmp_396 + tmp_147*tmp_400 + tmp_388*tmp_46 + tmp_392*tmp_89;
      real_t a_6_1 = tmp_162*tmp_402 + tmp_166*tmp_404 + tmp_170*tmp_406 + tmp_174*tmp_408;
      real_t a_6_2 = tmp_176*tmp_402 + tmp_178*tmp_404 + tmp_180*tmp_406 + tmp_182*tmp_408;
      real_t a_6_3 = tmp_186*tmp_401 + tmp_190*tmp_403 + tmp_194*tmp_405 + tmp_198*tmp_407;
      real_t a_6_4 = tmp_202*tmp_388 + tmp_206*tmp_392 + tmp_210*tmp_396 + tmp_214*tmp_400;
      real_t a_6_5 = tmp_217*tmp_388 + tmp_220*tmp_392 + tmp_223*tmp_396 + tmp_226*tmp_400;
      real_t a_6_6 = tmp_231*tmp_388 + tmp_236*tmp_392 + tmp_241*tmp_396 + tmp_246*tmp_400;
      real_t a_6_7 = tmp_250*tmp_388 + tmp_254*tmp_392 + tmp_258*tmp_396 + tmp_262*tmp_400;
      real_t a_6_8 = tmp_265*tmp_388 + tmp_268*tmp_392 + tmp_271*tmp_396 + tmp_274*tmp_400;
      real_t a_6_9 = tmp_276*tmp_388 + tmp_278*tmp_392 + tmp_280*tmp_396 + tmp_282*tmp_400;
      real_t a_7_0 = tmp_118*tmp_414 + tmp_147*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_89;
      real_t a_7_1 = tmp_162*tmp_418 + tmp_166*tmp_420 + tmp_170*tmp_422 + tmp_174*tmp_424;
      real_t a_7_2 = tmp_176*tmp_418 + tmp_178*tmp_420 + tmp_180*tmp_422 + tmp_182*tmp_424;
      real_t a_7_3 = tmp_186*tmp_417 + tmp_190*tmp_419 + tmp_194*tmp_421 + tmp_198*tmp_423;
      real_t a_7_4 = tmp_202*tmp_410 + tmp_206*tmp_412 + tmp_210*tmp_414 + tmp_214*tmp_416;
      real_t a_7_5 = tmp_217*tmp_410 + tmp_220*tmp_412 + tmp_223*tmp_414 + tmp_226*tmp_416;
      real_t a_7_6 = tmp_231*tmp_410 + tmp_236*tmp_412 + tmp_241*tmp_414 + tmp_246*tmp_416;
      real_t a_7_7 = tmp_250*tmp_410 + tmp_254*tmp_412 + tmp_258*tmp_414 + tmp_262*tmp_416;
      real_t a_7_8 = tmp_265*tmp_410 + tmp_268*tmp_412 + tmp_271*tmp_414 + tmp_274*tmp_416;
      real_t a_7_9 = tmp_276*tmp_410 + tmp_278*tmp_412 + tmp_280*tmp_414 + tmp_282*tmp_416;
      real_t a_8_0 = tmp_118*tmp_430 + tmp_147*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_89;
      real_t a_8_1 = tmp_162*tmp_434 + tmp_166*tmp_436 + tmp_170*tmp_438 + tmp_174*tmp_440;
      real_t a_8_2 = tmp_176*tmp_434 + tmp_178*tmp_436 + tmp_180*tmp_438 + tmp_182*tmp_440;
      real_t a_8_3 = tmp_186*tmp_433 + tmp_190*tmp_435 + tmp_194*tmp_437 + tmp_198*tmp_439;
      real_t a_8_4 = tmp_202*tmp_426 + tmp_206*tmp_428 + tmp_210*tmp_430 + tmp_214*tmp_432;
      real_t a_8_5 = tmp_217*tmp_426 + tmp_220*tmp_428 + tmp_223*tmp_430 + tmp_226*tmp_432;
      real_t a_8_6 = tmp_231*tmp_426 + tmp_236*tmp_428 + tmp_241*tmp_430 + tmp_246*tmp_432;
      real_t a_8_7 = tmp_250*tmp_426 + tmp_254*tmp_428 + tmp_258*tmp_430 + tmp_262*tmp_432;
      real_t a_8_8 = tmp_265*tmp_426 + tmp_268*tmp_428 + tmp_271*tmp_430 + tmp_274*tmp_432;
      real_t a_8_9 = tmp_276*tmp_426 + tmp_278*tmp_428 + tmp_280*tmp_430 + tmp_282*tmp_432;
      real_t a_9_0 = tmp_118*tmp_446 + tmp_147*tmp_448 + tmp_442*tmp_46 + tmp_444*tmp_89;
      real_t a_9_1 = tmp_162*tmp_450 + tmp_166*tmp_452 + tmp_170*tmp_454 + tmp_174*tmp_456;
      real_t a_9_2 = tmp_176*tmp_450 + tmp_178*tmp_452 + tmp_180*tmp_454 + tmp_182*tmp_456;
      real_t a_9_3 = tmp_186*tmp_449 + tmp_190*tmp_451 + tmp_194*tmp_453 + tmp_198*tmp_455;
      real_t a_9_4 = tmp_202*tmp_442 + tmp_206*tmp_444 + tmp_210*tmp_446 + tmp_214*tmp_448;
      real_t a_9_5 = tmp_217*tmp_442 + tmp_220*tmp_444 + tmp_223*tmp_446 + tmp_226*tmp_448;
      real_t a_9_6 = tmp_231*tmp_442 + tmp_236*tmp_444 + tmp_241*tmp_446 + tmp_246*tmp_448;
      real_t a_9_7 = tmp_250*tmp_442 + tmp_254*tmp_444 + tmp_258*tmp_446 + tmp_262*tmp_448;
      real_t a_9_8 = tmp_265*tmp_442 + tmp_268*tmp_444 + tmp_271*tmp_446 + tmp_274*tmp_448;
      real_t a_9_9 = tmp_276*tmp_442 + tmp_278*tmp_444 + tmp_280*tmp_446 + tmp_282*tmp_448;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsilonvar_2_1_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_F_Tetrahedron_0_0 = 0;
      real_t Blending_F_Tetrahedron_0_1 = 0;
      real_t Blending_F_Tetrahedron_0_2 = 0;
      real_t Blending_F_Tetrahedron_1_0 = 0;
      real_t Blending_F_Tetrahedron_1_1 = 0;
      real_t Blending_F_Tetrahedron_1_2 = 0;
      real_t Blending_F_Tetrahedron_2_0 = 0;
      real_t Blending_F_Tetrahedron_2_1 = 0;
      real_t Blending_F_Tetrahedron_2_2 = 0;
      real_t Blending_F_Tetrahedron_3_0 = 0;
      real_t Blending_F_Tetrahedron_3_1 = 0;
      real_t Blending_F_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      real_t Scalar_Variable_Coefficient_3D_0_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_1_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_2_0 = 0;
      real_t Scalar_Variable_Coefficient_3D_3_0 = 0;
      Blending_F_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_F_Tetrahedron_0_0, &Blending_F_Tetrahedron_0_1, &Blending_F_Tetrahedron_0_2 );
      Blending_F_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_1_0, &Blending_F_Tetrahedron_1_1, &Blending_F_Tetrahedron_1_2 );
      Blending_F_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_2_0, &Blending_F_Tetrahedron_2_1, &Blending_F_Tetrahedron_2_2 );
      Blending_F_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_F_Tetrahedron_3_0, &Blending_F_Tetrahedron_3_1, &Blending_F_Tetrahedron_3_2 );
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_0_0, Blending_F_Tetrahedron_0_1, Blending_F_Tetrahedron_0_2, &Scalar_Variable_Coefficient_3D_0_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_1_0, Blending_F_Tetrahedron_1_1, Blending_F_Tetrahedron_1_2, &Scalar_Variable_Coefficient_3D_1_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_2_0, Blending_F_Tetrahedron_2_1, Blending_F_Tetrahedron_2_2, &Scalar_Variable_Coefficient_3D_2_0 );
      Scalar_Variable_Coefficient_3D( Blending_F_Tetrahedron_3_0, Blending_F_Tetrahedron_3_1, Blending_F_Tetrahedron_3_2, &Scalar_Variable_Coefficient_3D_3_0 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_10 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_6*tmp_11 - Blending_DF_Tetrahedron_0_6*tmp_14 + Blending_DF_Tetrahedron_0_7*tmp_12 - Blending_DF_Tetrahedron_0_7*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_10 + Blending_DF_Tetrahedron_0_8*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_3_1 + tmp_2;
      real_t tmp_19 = p_affine_1_2 + tmp_16;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_0 + tmp_0;
      real_t tmp_22 = p_affine_2_2 + tmp_16;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_22;
      real_t tmp_25 = tmp_19*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_24 + tmp_21*tmp_23 - tmp_21*tmp_25);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*(-tmp_10 + tmp_9);
      real_t tmp_29 = tmp_20 - tmp_24;
      real_t tmp_30 = tmp_27*(tmp_12 - tmp_13);
      real_t tmp_31 = tmp_23 - tmp_25;
      real_t tmp_32 = tmp_27*(tmp_11 - tmp_14);
      real_t tmp_33 = tmp_28*tmp_8 + tmp_29*tmp_30 + tmp_31*tmp_32;
      real_t tmp_34 = 0.55278640450004235;
      real_t tmp_35 = 0.55278640450004235;
      real_t tmp_36 = 2.3416407864998732;
      real_t tmp_37 = 0.5*tmp_34 + 0.5*tmp_35 + 0.5*tmp_36 - 1.5;
      real_t tmp_38 = -tmp_1*tmp_18 + tmp_21*tmp_6;
      real_t tmp_39 = tmp_1*tmp_17 - tmp_19*tmp_21;
      real_t tmp_40 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_41 = tmp_28*tmp_38 + tmp_30*tmp_39 + tmp_32*tmp_40;
      real_t tmp_42 = tmp_18*tmp_5 - tmp_21*tmp_3;
      real_t tmp_43 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_44 = tmp_17*tmp_3 - tmp_18*tmp_22;
      real_t tmp_45 = tmp_28*tmp_42 + tmp_30*tmp_43 + tmp_32*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 4*tmp_58;
      real_t tmp_60 = tmp_27*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_61 = tmp_27*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_62 = tmp_27*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_63 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_0_0*(tmp_37*(tmp_29*tmp_61 + tmp_31*tmp_62 + tmp_60*tmp_8) + tmp_37*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_37*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_15);
      real_t tmp_64 = tmp_59*tmp_63;
      real_t tmp_65 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_66 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_67 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_68 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_69 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_6*tmp_67 - Blending_DF_Tetrahedron_1_6*tmp_70 + Blending_DF_Tetrahedron_1_7*tmp_68 - Blending_DF_Tetrahedron_1_7*tmp_69 + Blending_DF_Tetrahedron_1_8*tmp_65 - Blending_DF_Tetrahedron_1_8*tmp_66;
      real_t tmp_72 = tmp_26/tmp_71;
      real_t tmp_73 = tmp_72*(tmp_65 - tmp_66);
      real_t tmp_74 = tmp_72*(tmp_68 - tmp_69);
      real_t tmp_75 = tmp_72*(tmp_67 - tmp_70);
      real_t tmp_76 = tmp_29*tmp_74 + tmp_31*tmp_75 + tmp_73*tmp_8;
      real_t tmp_77 = 0.55278640450004235;
      real_t tmp_78 = 2.3416407864998732;
      real_t tmp_79 = 0.55278640450004235;
      real_t tmp_80 = 0.5*tmp_77 + 0.5*tmp_78 + 0.5*tmp_79 - 1.5;
      real_t tmp_81 = tmp_38*tmp_73 + tmp_39*tmp_74 + tmp_40*tmp_75;
      real_t tmp_82 = tmp_42*tmp_73 + tmp_43*tmp_74 + tmp_44*tmp_75;
      real_t tmp_83 = tmp_72*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_84 = tmp_72*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_85 = tmp_72*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_86 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_1_0*(tmp_80*(tmp_29*tmp_84 + tmp_31*tmp_85 + tmp_8*tmp_83) + tmp_80*(tmp_38*tmp_83 + tmp_39*tmp_84 + tmp_40*tmp_85) + tmp_80*(tmp_42*tmp_83 + tmp_43*tmp_84 + tmp_44*tmp_85))*std::abs(tmp_71);
      real_t tmp_87 = tmp_59*tmp_86;
      real_t tmp_88 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_89 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_90 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_91 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_92 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_93 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_6*tmp_90 - Blending_DF_Tetrahedron_2_6*tmp_93 + Blending_DF_Tetrahedron_2_7*tmp_91 - Blending_DF_Tetrahedron_2_7*tmp_92 + Blending_DF_Tetrahedron_2_8*tmp_88 - Blending_DF_Tetrahedron_2_8*tmp_89;
      real_t tmp_95 = tmp_26/tmp_94;
      real_t tmp_96 = tmp_95*(tmp_88 - tmp_89);
      real_t tmp_97 = tmp_95*(tmp_91 - tmp_92);
      real_t tmp_98 = tmp_95*(tmp_90 - tmp_93);
      real_t tmp_99 = tmp_29*tmp_97 + tmp_31*tmp_98 + tmp_8*tmp_96;
      real_t tmp_100 = 2.3416407864998732;
      real_t tmp_101 = 0.55278640450004235;
      real_t tmp_102 = 0.55278640450004235;
      real_t tmp_103 = 0.5*tmp_100 + 0.5*tmp_101 + 0.5*tmp_102 - 1.5;
      real_t tmp_104 = tmp_38*tmp_96 + tmp_39*tmp_97 + tmp_40*tmp_98;
      real_t tmp_105 = tmp_42*tmp_96 + tmp_43*tmp_97 + tmp_44*tmp_98;
      real_t tmp_106 = tmp_95*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_107 = tmp_95*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_108 = tmp_95*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_109 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_2_0*(tmp_103*(tmp_106*tmp_38 + tmp_107*tmp_39 + tmp_108*tmp_40) + tmp_103*(tmp_106*tmp_42 + tmp_107*tmp_43 + tmp_108*tmp_44) + tmp_103*(tmp_106*tmp_8 + tmp_107*tmp_29 + tmp_108*tmp_31))*std::abs(tmp_94);
      real_t tmp_110 = tmp_109*tmp_59;
      real_t tmp_111 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_112 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_113 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_114 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_115 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_116 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_117 = Blending_DF_Tetrahedron_3_6*tmp_113 - Blending_DF_Tetrahedron_3_6*tmp_116 + Blending_DF_Tetrahedron_3_7*tmp_114 - Blending_DF_Tetrahedron_3_7*tmp_115 + Blending_DF_Tetrahedron_3_8*tmp_111 - Blending_DF_Tetrahedron_3_8*tmp_112;
      real_t tmp_118 = tmp_26/tmp_117;
      real_t tmp_119 = tmp_118*(tmp_111 - tmp_112);
      real_t tmp_120 = tmp_118*(tmp_114 - tmp_115);
      real_t tmp_121 = tmp_118*(tmp_113 - tmp_116);
      real_t tmp_122 = tmp_119*tmp_8 + tmp_120*tmp_29 + tmp_121*tmp_31;
      real_t tmp_123 = 0.55278640450004235;
      real_t tmp_124 = 0.55278640450004235;
      real_t tmp_125 = 0.55278640450004235;
      real_t tmp_126 = 0.5*tmp_123 + 0.5*tmp_124 + 0.5*tmp_125 - 1.5;
      real_t tmp_127 = tmp_119*tmp_38 + tmp_120*tmp_39 + tmp_121*tmp_40;
      real_t tmp_128 = tmp_119*tmp_42 + tmp_120*tmp_43 + tmp_121*tmp_44;
      real_t tmp_129 = tmp_118*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_130 = tmp_118*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_131 = tmp_118*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_132 = 0.041666666666666657*Scalar_Variable_Coefficient_3D_3_0*(tmp_126*(tmp_129*tmp_38 + tmp_130*tmp_39 + tmp_131*tmp_40) + tmp_126*(tmp_129*tmp_42 + tmp_130*tmp_43 + tmp_131*tmp_44) + tmp_126*(tmp_129*tmp_8 + tmp_130*tmp_29 + tmp_131*tmp_31))*std::abs(tmp_117);
      real_t tmp_133 = tmp_132*tmp_59;
      real_t tmp_134 = 2.0*tmp_45;
      real_t tmp_135 = tmp_58*tmp_63;
      real_t tmp_136 = 2.0*tmp_82;
      real_t tmp_137 = tmp_58*tmp_86;
      real_t tmp_138 = 2.0*tmp_105;
      real_t tmp_139 = tmp_109*tmp_58;
      real_t tmp_140 = 2.0*tmp_128;
      real_t tmp_141 = tmp_132*tmp_58;
      real_t tmp_142 = 2.0*tmp_41;
      real_t tmp_143 = 2.0*tmp_81;
      real_t tmp_144 = 2.0*tmp_104;
      real_t tmp_145 = 2.0*tmp_127;
      real_t tmp_146 = 2.0*tmp_33;
      real_t tmp_147 = 2.0*tmp_76;
      real_t tmp_148 = 2.0*tmp_99;
      real_t tmp_149 = 2.0*tmp_122;
      real_t tmp_150 = 0.13819660112501059*tmp_146;
      real_t tmp_151 = 1.1708203932499366;
      real_t tmp_152 = tmp_151*tmp_41;
      real_t tmp_153 = 0.58541019662496829*tmp_147;
      real_t tmp_154 = 0.27639320225002117;
      real_t tmp_155 = tmp_154*tmp_81;
      real_t tmp_156 = 0.13819660112501059*tmp_148;
      real_t tmp_157 = 0.27639320225002117;
      real_t tmp_158 = tmp_104*tmp_157;
      real_t tmp_159 = 0.13819660112501059*tmp_149;
      real_t tmp_160 = 0.27639320225002117;
      real_t tmp_161 = tmp_127*tmp_160;
      real_t tmp_162 = 0.13819660112501059*tmp_146;
      real_t tmp_163 = tmp_151*tmp_45;
      real_t tmp_164 = 0.13819660112501059*tmp_147;
      real_t tmp_165 = tmp_154*tmp_82;
      real_t tmp_166 = 0.58541019662496829*tmp_148;
      real_t tmp_167 = tmp_105*tmp_157;
      real_t tmp_168 = 0.13819660112501059*tmp_149;
      real_t tmp_169 = tmp_128*tmp_160;
      real_t tmp_170 = 0.13819660112501059*tmp_142;
      real_t tmp_171 = 0.13819660112501059*tmp_134;
      real_t tmp_172 = 0.13819660112501059*tmp_143;
      real_t tmp_173 = 0.58541019662496829*tmp_136;
      real_t tmp_174 = 0.58541019662496829*tmp_144;
      real_t tmp_175 = 0.13819660112501059*tmp_138;
      real_t tmp_176 = 0.13819660112501059*tmp_145;
      real_t tmp_177 = 0.13819660112501059*tmp_140;
      real_t tmp_178 = -tmp_35;
      real_t tmp_179 = 4.0 - tmp_34;
      real_t tmp_180 = -tmp_78;
      real_t tmp_181 = 4.0 - tmp_77;
      real_t tmp_182 = -tmp_101;
      real_t tmp_183 = 4.0 - tmp_100;
      real_t tmp_184 = -tmp_124;
      real_t tmp_185 = 4.0 - tmp_123;
      real_t tmp_186 = -tmp_36;
      real_t tmp_187 = -tmp_79;
      real_t tmp_188 = -tmp_102;
      real_t tmp_189 = -tmp_125;
      real_t a_0_0 = tmp_110*(tmp_103*tmp_104 + tmp_103*tmp_105 + tmp_103*tmp_99) + tmp_133*(tmp_122*tmp_126 + tmp_126*tmp_127 + tmp_126*tmp_128) + tmp_64*(tmp_33*tmp_37 + tmp_37*tmp_41 + tmp_37*tmp_45) + tmp_87*(tmp_76*tmp_80 + tmp_80*tmp_81 + tmp_80*tmp_82);
      real_t a_0_1 = tmp_134*tmp_135*(tmp_34 - 1.0) + tmp_136*tmp_137*(tmp_77 - 1.0) + tmp_138*tmp_139*(tmp_100 - 1.0) + tmp_140*tmp_141*(tmp_123 - 1.0);
      real_t a_0_2 = tmp_135*tmp_142*(tmp_35 - 1.0) + tmp_137*tmp_143*(tmp_78 - 1.0) + tmp_139*tmp_144*(tmp_101 - 1.0) + tmp_141*tmp_145*(tmp_124 - 1.0);
      real_t a_0_3 = tmp_135*tmp_146*(tmp_36 - 1.0) + tmp_137*tmp_147*(tmp_79 - 1.0) + tmp_139*tmp_148*(tmp_102 - 1.0) + tmp_141*tmp_149*(tmp_125 - 1.0);
      real_t a_0_4 = tmp_110*(tmp_156 + tmp_158) + tmp_133*(tmp_159 + tmp_161) + tmp_64*(tmp_150 + tmp_152) + tmp_87*(tmp_153 + tmp_155);
      real_t a_0_5 = tmp_110*(tmp_166 + tmp_167) + tmp_133*(tmp_168 + tmp_169) + tmp_64*(tmp_162 + tmp_163) + tmp_87*(tmp_164 + tmp_165);
      real_t a_0_6 = tmp_110*(tmp_174 + tmp_175) + tmp_133*(tmp_176 + tmp_177) + tmp_64*(tmp_170 + tmp_171) + tmp_87*(tmp_172 + tmp_173);
      real_t a_0_7 = tmp_110*(-tmp_158 - tmp_167 + 0.5*tmp_99*(tmp_182 + tmp_183 - 1.1055728090000847)) + tmp_133*(0.5*tmp_122*(tmp_184 + tmp_185 - 1.1055728090000847) - tmp_161 - tmp_169) + tmp_64*(-tmp_152 - tmp_163 + 0.5*tmp_33*(tmp_178 + tmp_179 - 4.6832815729997463)) + tmp_87*(-tmp_155 - tmp_165 + 0.5*tmp_76*(tmp_180 + tmp_181 - 1.1055728090000847));
      real_t a_0_8 = tmp_110*(0.5*tmp_104*(tmp_183 + tmp_188 - 1.1055728090000847) - tmp_156 - tmp_175) + tmp_133*(0.5*tmp_127*(tmp_185 + tmp_189 - 1.1055728090000847) - tmp_159 - tmp_177) + tmp_64*(-tmp_150 - tmp_171 + 0.5*tmp_41*(tmp_179 + tmp_186 - 1.1055728090000847)) + tmp_87*(-tmp_153 - tmp_173 + 0.5*tmp_81*(tmp_181 + tmp_187 - 4.6832815729997463));
      real_t a_0_9 = tmp_110*(0.5*tmp_105*(tmp_182 + tmp_188 - 0.68328157299974634) - tmp_166 - tmp_174) + tmp_133*(0.5*tmp_128*(tmp_184 + tmp_189 + 2.8944271909999153) - tmp_168 - tmp_176) + tmp_64*(-tmp_162 - tmp_170 + 0.5*tmp_45*(tmp_178 + tmp_186 + 2.8944271909999153)) + tmp_87*(-tmp_164 - tmp_172 + 0.5*tmp_82*(tmp_180 + tmp_187 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsilonvar_2_1_blending_q2::Blending_F_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2 ) const
   {
      Point3D  in( {in_0, in_1, in_2} );
      Point3D out;
      geometryMap_->evalF( in, out );
      *out_0 = out[0];
      *out_1 = out[1];
      *out_2 = out[2];
   }

   void p2_epsilonvar_2_1_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsilonvar_2_1_blending_q2::Scalar_Variable_Coefficient_3D( real_t in_0, real_t in_1, real_t in_2, real_t * out_0 ) const
   {
      *out_0 = callback3D( Point3D( {in_0, in_1, in_2} ) );
   }

} // namespace forms
} // namespace hyteg
