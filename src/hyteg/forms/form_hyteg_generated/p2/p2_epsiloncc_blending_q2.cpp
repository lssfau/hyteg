/*
 * Copyright (c) 2017-2021 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 * 
 * Software:
 *
 * - quadpy version: 0.16.6
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "p2_epsiloncc_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void p2_epsiloncc_0_0_blending_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = 1.0 / (tmp_4*tmp_7 - (p_affine_1_1 + tmp_6)*(p_affine_2_0 + tmp_3));
      real_t tmp_9 = tmp_8/tmp_5;
      real_t tmp_10 = Blending_DF_Triangle_0_0*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = Blending_DF_Triangle_0_1*tmp_9;
      real_t tmp_13 = tmp_10*tmp_4 - tmp_11*tmp_12;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_10*tmp_15 - tmp_12*tmp_7;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = tmp_14 + tmp_17;
      real_t tmp_19 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_20 = 2*tmp_19;
      real_t tmp_21 = Blending_DF_Triangle_0_3*tmp_9;
      real_t tmp_22 = Blending_DF_Triangle_0_2*tmp_9;
      real_t tmp_23 = tmp_11*tmp_21 - tmp_22*tmp_4;
      real_t tmp_24 = 1.0*tmp_2;
      real_t tmp_25 = -tmp_15*tmp_22 + tmp_21*tmp_7;
      real_t tmp_26 = tmp_23*tmp_24 + tmp_24*tmp_25;
      real_t tmp_27 = 2.0*tmp_2;
      real_t tmp_28 = tmp_23*tmp_27 + tmp_25*tmp_27;
      real_t tmp_29 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_30 = 0.16666666666666666*tmp_29*std::abs(tmp_5);
      real_t tmp_31 = 2.6666666666666665;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = tmp_31 + tmp_32 - 3;
      real_t tmp_34 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_35 = tmp_8/tmp_34;
      real_t tmp_36 = Blending_DF_Triangle_1_0*tmp_35;
      real_t tmp_37 = Blending_DF_Triangle_1_1*tmp_35;
      real_t tmp_38 = -tmp_11*tmp_37 + tmp_36*tmp_4;
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = tmp_15*tmp_36 - tmp_37*tmp_7;
      real_t tmp_41 = tmp_33*tmp_40;
      real_t tmp_42 = tmp_39 + tmp_41;
      real_t tmp_43 = 0.5*tmp_39 + 0.5*tmp_41;
      real_t tmp_44 = 2*tmp_43;
      real_t tmp_45 = Blending_DF_Triangle_1_3*tmp_35;
      real_t tmp_46 = Blending_DF_Triangle_1_2*tmp_35;
      real_t tmp_47 = tmp_11*tmp_45 - tmp_4*tmp_46;
      real_t tmp_48 = 1.0*tmp_33;
      real_t tmp_49 = -tmp_15*tmp_46 + tmp_45*tmp_7;
      real_t tmp_50 = tmp_47*tmp_48 + tmp_48*tmp_49;
      real_t tmp_51 = 2.0*tmp_33;
      real_t tmp_52 = tmp_47*tmp_51 + tmp_49*tmp_51;
      real_t tmp_53 = 0.16666666666666666*tmp_29*std::abs(tmp_34);
      real_t tmp_54 = 0.66666666666666663;
      real_t tmp_55 = 0.66666666666666663;
      real_t tmp_56 = tmp_54 + tmp_55 - 3;
      real_t tmp_57 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_58 = tmp_8/tmp_57;
      real_t tmp_59 = Blending_DF_Triangle_2_0*tmp_58;
      real_t tmp_60 = Blending_DF_Triangle_2_1*tmp_58;
      real_t tmp_61 = -tmp_11*tmp_60 + tmp_4*tmp_59;
      real_t tmp_62 = tmp_56*tmp_61;
      real_t tmp_63 = tmp_15*tmp_59 - tmp_60*tmp_7;
      real_t tmp_64 = tmp_56*tmp_63;
      real_t tmp_65 = tmp_62 + tmp_64;
      real_t tmp_66 = 0.5*tmp_62 + 0.5*tmp_64;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = Blending_DF_Triangle_2_3*tmp_58;
      real_t tmp_69 = Blending_DF_Triangle_2_2*tmp_58;
      real_t tmp_70 = tmp_11*tmp_68 - tmp_4*tmp_69;
      real_t tmp_71 = 1.0*tmp_56;
      real_t tmp_72 = -tmp_15*tmp_69 + tmp_68*tmp_7;
      real_t tmp_73 = tmp_70*tmp_71 + tmp_71*tmp_72;
      real_t tmp_74 = 2.0*tmp_56;
      real_t tmp_75 = tmp_70*tmp_74 + tmp_72*tmp_74;
      real_t tmp_76 = 0.16666666666666666*tmp_29*std::abs(tmp_57);
      real_t tmp_77 = tmp_0 - 1;
      real_t tmp_78 = 2.0*tmp_77;
      real_t tmp_79 = tmp_16*tmp_78;
      real_t tmp_80 = tmp_25*tmp_78;
      real_t tmp_81 = tmp_31 - 1;
      real_t tmp_82 = 2.0*tmp_81;
      real_t tmp_83 = tmp_40*tmp_82;
      real_t tmp_84 = tmp_49*tmp_82;
      real_t tmp_85 = tmp_54 - 1;
      real_t tmp_86 = 2.0*tmp_85;
      real_t tmp_87 = tmp_63*tmp_86;
      real_t tmp_88 = tmp_72*tmp_86;
      real_t tmp_89 = tmp_1 - 1;
      real_t tmp_90 = 2.0*tmp_89;
      real_t tmp_91 = tmp_13*tmp_90;
      real_t tmp_92 = tmp_23*tmp_90;
      real_t tmp_93 = tmp_32 - 1;
      real_t tmp_94 = 2.0*tmp_93;
      real_t tmp_95 = tmp_38*tmp_94;
      real_t tmp_96 = tmp_47*tmp_94;
      real_t tmp_97 = tmp_55 - 1;
      real_t tmp_98 = 2.0*tmp_97;
      real_t tmp_99 = tmp_61*tmp_98;
      real_t tmp_100 = tmp_70*tmp_98;
      real_t tmp_101 = 0.16666666666666666*tmp_23;
      real_t tmp_102 = 8.0*tmp_101;
      real_t tmp_103 = 0.66666666666666663*tmp_25;
      real_t tmp_104 = 8.0*tmp_103;
      real_t tmp_105 = tmp_102 + tmp_104;
      real_t tmp_106 = 0.16666666666666666*tmp_13;
      real_t tmp_107 = 4.0*tmp_106;
      real_t tmp_108 = 0.66666666666666663*tmp_16;
      real_t tmp_109 = 4.0*tmp_108;
      real_t tmp_110 = tmp_107 + tmp_109;
      real_t tmp_111 = 0.66666666666666663*tmp_47;
      real_t tmp_112 = 8.0*tmp_111;
      real_t tmp_113 = 0.16666666666666666*tmp_49;
      real_t tmp_114 = 8.0*tmp_113;
      real_t tmp_115 = tmp_112 + tmp_114;
      real_t tmp_116 = 0.66666666666666663*tmp_38;
      real_t tmp_117 = 4.0*tmp_116;
      real_t tmp_118 = 0.16666666666666666*tmp_40;
      real_t tmp_119 = 4.0*tmp_118;
      real_t tmp_120 = tmp_117 + tmp_119;
      real_t tmp_121 = 0.16666666666666666*tmp_70;
      real_t tmp_122 = 8.0*tmp_121;
      real_t tmp_123 = 0.16666666666666666*tmp_72;
      real_t tmp_124 = 8.0*tmp_123;
      real_t tmp_125 = tmp_122 + tmp_124;
      real_t tmp_126 = 0.16666666666666666*tmp_61;
      real_t tmp_127 = 4.0*tmp_126;
      real_t tmp_128 = 0.16666666666666666*tmp_63;
      real_t tmp_129 = 4.0*tmp_128;
      real_t tmp_130 = tmp_127 + tmp_129;
      real_t tmp_131 = -tmp_0 - 1.333333333333333;
      real_t tmp_132 = tmp_13*tmp_131;
      real_t tmp_133 = -tmp_109 + tmp_132;
      real_t tmp_134 = tmp_131*tmp_23;
      real_t tmp_135 = -tmp_104 + 2.0*tmp_134;
      real_t tmp_136 = 2.666666666666667 - tmp_31;
      real_t tmp_137 = tmp_136*tmp_38;
      real_t tmp_138 = -tmp_119 + tmp_137;
      real_t tmp_139 = tmp_136*tmp_47;
      real_t tmp_140 = -tmp_114 + 2.0*tmp_139;
      real_t tmp_141 = 2.666666666666667 - tmp_54;
      real_t tmp_142 = tmp_141*tmp_61;
      real_t tmp_143 = -tmp_129 + tmp_142;
      real_t tmp_144 = tmp_141*tmp_70;
      real_t tmp_145 = -tmp_124 + 2.0*tmp_144;
      real_t tmp_146 = 2.666666666666667 - tmp_1;
      real_t tmp_147 = tmp_146*tmp_16;
      real_t tmp_148 = -tmp_107 + tmp_147;
      real_t tmp_149 = tmp_146*tmp_25;
      real_t tmp_150 = -tmp_102 + 2.0*tmp_149;
      real_t tmp_151 = -tmp_32 - 1.333333333333333;
      real_t tmp_152 = tmp_151*tmp_40;
      real_t tmp_153 = -tmp_117 + tmp_152;
      real_t tmp_154 = tmp_151*tmp_49;
      real_t tmp_155 = -tmp_112 + 2.0*tmp_154;
      real_t tmp_156 = 2.666666666666667 - tmp_55;
      real_t tmp_157 = tmp_156*tmp_63;
      real_t tmp_158 = -tmp_127 + tmp_157;
      real_t tmp_159 = tmp_156*tmp_72;
      real_t tmp_160 = -tmp_122 + 2.0*tmp_159;
      real_t tmp_161 = 1.0*tmp_77;
      real_t tmp_162 = tmp_16*tmp_161;
      real_t tmp_163 = tmp_161*tmp_25;
      real_t tmp_164 = 1.0*tmp_81;
      real_t tmp_165 = tmp_164*tmp_40;
      real_t tmp_166 = tmp_164*tmp_49;
      real_t tmp_167 = 1.0*tmp_85;
      real_t tmp_168 = tmp_167*tmp_63;
      real_t tmp_169 = tmp_167*tmp_72;
      real_t tmp_170 = (tmp_77*tmp_77);
      real_t tmp_171 = (tmp_81*tmp_81);
      real_t tmp_172 = (tmp_85*tmp_85);
      real_t tmp_173 = tmp_30*(tmp_13*tmp_162*tmp_89 + tmp_23*tmp_80*tmp_89) + tmp_53*(tmp_165*tmp_38*tmp_93 + tmp_47*tmp_84*tmp_93) + tmp_76*(tmp_168*tmp_61*tmp_97 + tmp_70*tmp_88*tmp_97);
      real_t tmp_174 = 1.0*tmp_89;
      real_t tmp_175 = tmp_13*tmp_174;
      real_t tmp_176 = tmp_174*tmp_23;
      real_t tmp_177 = 1.0*tmp_93;
      real_t tmp_178 = tmp_177*tmp_38;
      real_t tmp_179 = tmp_177*tmp_47;
      real_t tmp_180 = 1.0*tmp_97;
      real_t tmp_181 = tmp_180*tmp_61;
      real_t tmp_182 = tmp_180*tmp_70;
      real_t tmp_183 = (tmp_89*tmp_89);
      real_t tmp_184 = (tmp_93*tmp_93);
      real_t tmp_185 = (tmp_97*tmp_97);
      real_t tmp_186 = 2.0*tmp_106;
      real_t tmp_187 = 2.0*tmp_108;
      real_t tmp_188 = tmp_186 + tmp_187;
      real_t tmp_189 = 2*tmp_188;
      real_t tmp_190 = 4.0*tmp_101;
      real_t tmp_191 = 4.0*tmp_103;
      real_t tmp_192 = tmp_190 + tmp_191;
      real_t tmp_193 = 2.0*tmp_116;
      real_t tmp_194 = 2.0*tmp_118;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = 2*tmp_195;
      real_t tmp_197 = 4.0*tmp_111;
      real_t tmp_198 = 4.0*tmp_113;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = 2.0*tmp_126;
      real_t tmp_201 = 2.0*tmp_128;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = 2*tmp_202;
      real_t tmp_204 = 4.0*tmp_121;
      real_t tmp_205 = 4.0*tmp_123;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = 0.5*tmp_132 - tmp_187;
      real_t tmp_208 = 2*tmp_207;
      real_t tmp_209 = 1.0*tmp_134 - tmp_191;
      real_t tmp_210 = 0.5*tmp_137 - tmp_194;
      real_t tmp_211 = 2*tmp_210;
      real_t tmp_212 = 1.0*tmp_139 - tmp_198;
      real_t tmp_213 = 0.5*tmp_142 - tmp_201;
      real_t tmp_214 = 2*tmp_213;
      real_t tmp_215 = 1.0*tmp_144 - tmp_205;
      real_t tmp_216 = 0.5*tmp_147 - tmp_186;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = 1.0*tmp_149 - tmp_190;
      real_t tmp_219 = 0.5*tmp_152 - tmp_193;
      real_t tmp_220 = 2*tmp_219;
      real_t tmp_221 = 1.0*tmp_154 - tmp_197;
      real_t tmp_222 = 0.5*tmp_157 - tmp_200;
      real_t tmp_223 = 2*tmp_222;
      real_t tmp_224 = 1.0*tmp_159 - tmp_204;
      real_t a_0_0 = tmp_30*(tmp_18*tmp_20 + tmp_26*tmp_28) + tmp_53*(tmp_42*tmp_44 + tmp_50*tmp_52) + tmp_76*(tmp_65*tmp_67 + tmp_73*tmp_75);
      real_t a_0_1 = tmp_30*(tmp_19*tmp_79 + tmp_26*tmp_80) + tmp_53*(tmp_43*tmp_83 + tmp_50*tmp_84) + tmp_76*(tmp_66*tmp_87 + tmp_73*tmp_88);
      real_t a_0_2 = tmp_30*(tmp_19*tmp_91 + tmp_26*tmp_92) + tmp_53*(tmp_43*tmp_95 + tmp_50*tmp_96) + tmp_76*(tmp_100*tmp_73 + tmp_66*tmp_99);
      real_t a_0_3 = tmp_30*(tmp_105*tmp_26 + tmp_110*tmp_20) + tmp_53*(tmp_115*tmp_50 + tmp_120*tmp_44) + tmp_76*(tmp_125*tmp_73 + tmp_130*tmp_67);
      real_t a_0_4 = tmp_30*(tmp_133*tmp_20 + tmp_135*tmp_26) + tmp_53*(tmp_138*tmp_44 + tmp_140*tmp_50) + tmp_76*(tmp_143*tmp_67 + tmp_145*tmp_73);
      real_t a_0_5 = tmp_30*(tmp_148*tmp_20 + tmp_150*tmp_26) + tmp_53*(tmp_153*tmp_44 + tmp_155*tmp_50) + tmp_76*(tmp_158*tmp_67 + tmp_160*tmp_73);
      real_t a_1_0 = tmp_30*(tmp_162*tmp_18 + tmp_163*tmp_28) + tmp_53*(tmp_165*tmp_42 + tmp_166*tmp_52) + tmp_76*(tmp_168*tmp_65 + tmp_169*tmp_75);
      real_t a_1_1 = tmp_30*(1.0*(tmp_16*tmp_16)*tmp_170 + 2.0*tmp_170*(tmp_25*tmp_25)) + tmp_53*(1.0*tmp_171*(tmp_40*tmp_40) + 2.0*tmp_171*(tmp_49*tmp_49)) + tmp_76*(1.0*tmp_172*(tmp_63*tmp_63) + 2.0*tmp_172*(tmp_72*tmp_72));
      real_t a_1_2 = tmp_173;
      real_t a_1_3 = tmp_30*(tmp_105*tmp_163 + tmp_110*tmp_162) + tmp_53*(tmp_115*tmp_166 + tmp_120*tmp_165) + tmp_76*(tmp_125*tmp_169 + tmp_130*tmp_168);
      real_t a_1_4 = tmp_30*(tmp_133*tmp_162 + tmp_135*tmp_163) + tmp_53*(tmp_138*tmp_165 + tmp_140*tmp_166) + tmp_76*(tmp_143*tmp_168 + tmp_145*tmp_169);
      real_t a_1_5 = tmp_30*(tmp_148*tmp_162 + tmp_150*tmp_163) + tmp_53*(tmp_153*tmp_165 + tmp_155*tmp_166) + tmp_76*(tmp_158*tmp_168 + tmp_160*tmp_169);
      real_t a_2_0 = tmp_30*(tmp_175*tmp_18 + tmp_176*tmp_28) + tmp_53*(tmp_178*tmp_42 + tmp_179*tmp_52) + tmp_76*(tmp_181*tmp_65 + tmp_182*tmp_75);
      real_t a_2_1 = tmp_173;
      real_t a_2_2 = tmp_30*(1.0*(tmp_13*tmp_13)*tmp_183 + 2.0*tmp_183*(tmp_23*tmp_23)) + tmp_53*(1.0*tmp_184*(tmp_38*tmp_38) + 2.0*tmp_184*(tmp_47*tmp_47)) + tmp_76*(1.0*tmp_185*(tmp_61*tmp_61) + 2.0*tmp_185*(tmp_70*tmp_70));
      real_t a_2_3 = tmp_30*(tmp_105*tmp_176 + tmp_110*tmp_175) + tmp_53*(tmp_115*tmp_179 + tmp_120*tmp_178) + tmp_76*(tmp_125*tmp_182 + tmp_130*tmp_181);
      real_t a_2_4 = tmp_30*(tmp_133*tmp_175 + tmp_135*tmp_176) + tmp_53*(tmp_138*tmp_178 + tmp_140*tmp_179) + tmp_76*(tmp_143*tmp_181 + tmp_145*tmp_182);
      real_t a_2_5 = tmp_30*(tmp_148*tmp_175 + tmp_150*tmp_176) + tmp_53*(tmp_153*tmp_178 + tmp_155*tmp_179) + tmp_76*(tmp_158*tmp_181 + tmp_160*tmp_182);
      real_t a_3_0 = tmp_30*(tmp_18*tmp_189 + tmp_192*tmp_28) + tmp_53*(tmp_196*tmp_42 + tmp_199*tmp_52) + tmp_76*(tmp_203*tmp_65 + tmp_206*tmp_75);
      real_t a_3_1 = tmp_30*(tmp_188*tmp_79 + tmp_192*tmp_80) + tmp_53*(tmp_195*tmp_83 + tmp_199*tmp_84) + tmp_76*(tmp_202*tmp_87 + tmp_206*tmp_88);
      real_t a_3_2 = tmp_30*(tmp_188*tmp_91 + tmp_192*tmp_92) + tmp_53*(tmp_195*tmp_95 + tmp_199*tmp_96) + tmp_76*(tmp_100*tmp_206 + tmp_202*tmp_99);
      real_t a_3_3 = tmp_30*(tmp_105*tmp_192 + tmp_110*tmp_189) + tmp_53*(tmp_115*tmp_199 + tmp_120*tmp_196) + tmp_76*(tmp_125*tmp_206 + tmp_130*tmp_203);
      real_t a_3_4 = tmp_30*(tmp_133*tmp_189 + tmp_135*tmp_192) + tmp_53*(tmp_138*tmp_196 + tmp_140*tmp_199) + tmp_76*(tmp_143*tmp_203 + tmp_145*tmp_206);
      real_t a_3_5 = tmp_30*(tmp_148*tmp_189 + tmp_150*tmp_192) + tmp_53*(tmp_153*tmp_196 + tmp_155*tmp_199) + tmp_76*(tmp_158*tmp_203 + tmp_160*tmp_206);
      real_t a_4_0 = tmp_30*(tmp_18*tmp_208 + tmp_209*tmp_28) + tmp_53*(tmp_211*tmp_42 + tmp_212*tmp_52) + tmp_76*(tmp_214*tmp_65 + tmp_215*tmp_75);
      real_t a_4_1 = tmp_30*(tmp_207*tmp_79 + tmp_209*tmp_80) + tmp_53*(tmp_210*tmp_83 + tmp_212*tmp_84) + tmp_76*(tmp_213*tmp_87 + tmp_215*tmp_88);
      real_t a_4_2 = tmp_30*(tmp_207*tmp_91 + tmp_209*tmp_92) + tmp_53*(tmp_210*tmp_95 + tmp_212*tmp_96) + tmp_76*(tmp_100*tmp_215 + tmp_213*tmp_99);
      real_t a_4_3 = tmp_30*(tmp_105*tmp_209 + tmp_110*tmp_208) + tmp_53*(tmp_115*tmp_212 + tmp_120*tmp_211) + tmp_76*(tmp_125*tmp_215 + tmp_130*tmp_214);
      real_t a_4_4 = tmp_30*(tmp_133*tmp_208 + tmp_135*tmp_209) + tmp_53*(tmp_138*tmp_211 + tmp_140*tmp_212) + tmp_76*(tmp_143*tmp_214 + tmp_145*tmp_215);
      real_t a_4_5 = tmp_30*(tmp_148*tmp_208 + tmp_150*tmp_209) + tmp_53*(tmp_153*tmp_211 + tmp_155*tmp_212) + tmp_76*(tmp_158*tmp_214 + tmp_160*tmp_215);
      real_t a_5_0 = tmp_30*(tmp_18*tmp_217 + tmp_218*tmp_28) + tmp_53*(tmp_220*tmp_42 + tmp_221*tmp_52) + tmp_76*(tmp_223*tmp_65 + tmp_224*tmp_75);
      real_t a_5_1 = tmp_30*(tmp_216*tmp_79 + tmp_218*tmp_80) + tmp_53*(tmp_219*tmp_83 + tmp_221*tmp_84) + tmp_76*(tmp_222*tmp_87 + tmp_224*tmp_88);
      real_t a_5_2 = tmp_30*(tmp_216*tmp_91 + tmp_218*tmp_92) + tmp_53*(tmp_219*tmp_95 + tmp_221*tmp_96) + tmp_76*(tmp_100*tmp_224 + tmp_222*tmp_99);
      real_t a_5_3 = tmp_30*(tmp_105*tmp_218 + tmp_110*tmp_217) + tmp_53*(tmp_115*tmp_221 + tmp_120*tmp_220) + tmp_76*(tmp_125*tmp_224 + tmp_130*tmp_223);
      real_t a_5_4 = tmp_30*(tmp_133*tmp_217 + tmp_135*tmp_218) + tmp_53*(tmp_138*tmp_220 + tmp_140*tmp_221) + tmp_76*(tmp_143*tmp_223 + tmp_145*tmp_224);
      real_t a_5_5 = tmp_30*(tmp_148*tmp_217 + tmp_150*tmp_218) + tmp_53*(tmp_153*tmp_220 + tmp_155*tmp_221) + tmp_76*(tmp_158*tmp_223 + tmp_160*tmp_224);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_0_0_blending_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = 1.0 / (tmp_4*tmp_7 - (p_affine_1_1 + tmp_6)*(p_affine_2_0 + tmp_3));
      real_t tmp_9 = tmp_8/tmp_5;
      real_t tmp_10 = Blending_DF_Triangle_0_0*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = Blending_DF_Triangle_0_1*tmp_9;
      real_t tmp_13 = tmp_10*tmp_4 - tmp_11*tmp_12;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_10*tmp_15 - tmp_12*tmp_7;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_19 = 2*tmp_18;
      real_t tmp_20 = Blending_DF_Triangle_0_3*tmp_9;
      real_t tmp_21 = Blending_DF_Triangle_0_2*tmp_9;
      real_t tmp_22 = tmp_11*tmp_20 - tmp_21*tmp_4;
      real_t tmp_23 = 1.0*tmp_2;
      real_t tmp_24 = -tmp_15*tmp_21 + tmp_20*tmp_7;
      real_t tmp_25 = tmp_22*tmp_23 + tmp_23*tmp_24;
      real_t tmp_26 = 2.0*tmp_2;
      real_t tmp_27 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_28 = 0.16666666666666666*tmp_27*std::abs(tmp_5);
      real_t tmp_29 = 2.6666666666666665;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = tmp_29 + tmp_30 - 3;
      real_t tmp_32 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_33 = tmp_8/tmp_32;
      real_t tmp_34 = Blending_DF_Triangle_1_0*tmp_33;
      real_t tmp_35 = Blending_DF_Triangle_1_1*tmp_33;
      real_t tmp_36 = -tmp_11*tmp_35 + tmp_34*tmp_4;
      real_t tmp_37 = tmp_31*tmp_36;
      real_t tmp_38 = tmp_15*tmp_34 - tmp_35*tmp_7;
      real_t tmp_39 = tmp_31*tmp_38;
      real_t tmp_40 = 0.5*tmp_37 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = Blending_DF_Triangle_1_3*tmp_33;
      real_t tmp_43 = Blending_DF_Triangle_1_2*tmp_33;
      real_t tmp_44 = tmp_11*tmp_42 - tmp_4*tmp_43;
      real_t tmp_45 = 1.0*tmp_31;
      real_t tmp_46 = -tmp_15*tmp_43 + tmp_42*tmp_7;
      real_t tmp_47 = tmp_44*tmp_45 + tmp_45*tmp_46;
      real_t tmp_48 = 2.0*tmp_31;
      real_t tmp_49 = 0.16666666666666666*tmp_27*std::abs(tmp_32);
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = tmp_50 + tmp_51 - 3;
      real_t tmp_53 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_54 = tmp_8/tmp_53;
      real_t tmp_55 = Blending_DF_Triangle_2_0*tmp_54;
      real_t tmp_56 = Blending_DF_Triangle_2_1*tmp_54;
      real_t tmp_57 = -tmp_11*tmp_56 + tmp_4*tmp_55;
      real_t tmp_58 = tmp_52*tmp_57;
      real_t tmp_59 = tmp_15*tmp_55 - tmp_56*tmp_7;
      real_t tmp_60 = tmp_52*tmp_59;
      real_t tmp_61 = 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_62 = 2*tmp_61;
      real_t tmp_63 = Blending_DF_Triangle_2_3*tmp_54;
      real_t tmp_64 = Blending_DF_Triangle_2_2*tmp_54;
      real_t tmp_65 = tmp_11*tmp_63 - tmp_4*tmp_64;
      real_t tmp_66 = 1.0*tmp_52;
      real_t tmp_67 = -tmp_15*tmp_64 + tmp_63*tmp_7;
      real_t tmp_68 = tmp_65*tmp_66 + tmp_66*tmp_67;
      real_t tmp_69 = 2.0*tmp_52;
      real_t tmp_70 = 0.16666666666666666*tmp_27*std::abs(tmp_53);
      real_t tmp_71 = tmp_0 - 1;
      real_t tmp_72 = 2.0*tmp_18;
      real_t tmp_73 = 2.0*tmp_24;
      real_t tmp_74 = tmp_29 - 1;
      real_t tmp_75 = 2.0*tmp_40;
      real_t tmp_76 = 2.0*tmp_46;
      real_t tmp_77 = tmp_50 - 1;
      real_t tmp_78 = 2.0*tmp_61;
      real_t tmp_79 = 2.0*tmp_67;
      real_t tmp_80 = tmp_1 - 1;
      real_t tmp_81 = 2.0*tmp_22;
      real_t tmp_82 = tmp_30 - 1;
      real_t tmp_83 = 2.0*tmp_44;
      real_t tmp_84 = tmp_51 - 1;
      real_t tmp_85 = 2.0*tmp_65;
      real_t tmp_86 = 1.3333333333333333*tmp_22;
      real_t tmp_87 = 5.333333333333333*tmp_24;
      real_t tmp_88 = 0.66666666666666663*tmp_13;
      real_t tmp_89 = 2.6666666666666665*tmp_16;
      real_t tmp_90 = 5.333333333333333*tmp_44;
      real_t tmp_91 = 1.3333333333333333*tmp_46;
      real_t tmp_92 = 2.6666666666666665*tmp_36;
      real_t tmp_93 = 0.66666666666666663*tmp_38;
      real_t tmp_94 = 1.3333333333333333*tmp_65;
      real_t tmp_95 = 1.3333333333333333*tmp_67;
      real_t tmp_96 = 0.66666666666666663*tmp_57;
      real_t tmp_97 = 0.66666666666666663*tmp_59;
      real_t tmp_98 = -tmp_0 - 1.333333333333333;
      real_t tmp_99 = 2.666666666666667 - tmp_29;
      real_t tmp_100 = 2.666666666666667 - tmp_50;
      real_t tmp_101 = 2.666666666666667 - tmp_1;
      real_t tmp_102 = -tmp_30 - 1.333333333333333;
      real_t tmp_103 = 2.666666666666667 - tmp_51;
      real_t a_0_0 = tmp_28*(tmp_19*(tmp_14 + tmp_17) + tmp_25*(tmp_22*tmp_26 + tmp_24*tmp_26)) + tmp_49*(tmp_41*(tmp_37 + tmp_39) + tmp_47*(tmp_44*tmp_48 + tmp_46*tmp_48)) + tmp_70*(tmp_62*(tmp_58 + tmp_60) + tmp_68*(tmp_65*tmp_69 + tmp_67*tmp_69));
      real_t a_0_1 = tmp_28*(tmp_16*tmp_71*tmp_72 + tmp_25*tmp_71*tmp_73) + tmp_49*(tmp_38*tmp_74*tmp_75 + tmp_47*tmp_74*tmp_76) + tmp_70*(tmp_59*tmp_77*tmp_78 + tmp_68*tmp_77*tmp_79);
      real_t a_0_2 = tmp_28*(tmp_13*tmp_72*tmp_80 + tmp_25*tmp_80*tmp_81) + tmp_49*(tmp_36*tmp_75*tmp_82 + tmp_47*tmp_82*tmp_83) + tmp_70*(tmp_57*tmp_78*tmp_84 + tmp_68*tmp_84*tmp_85);
      real_t a_0_3 = tmp_28*(tmp_19*(tmp_88 + tmp_89) + tmp_25*(tmp_86 + tmp_87)) + tmp_49*(tmp_41*(tmp_92 + tmp_93) + tmp_47*(tmp_90 + tmp_91)) + tmp_70*(tmp_62*(tmp_96 + tmp_97) + tmp_68*(tmp_94 + tmp_95));
      real_t a_0_4 = tmp_28*(tmp_19*(tmp_13*tmp_98 - tmp_89) + tmp_25*(tmp_81*tmp_98 - tmp_87)) + tmp_49*(tmp_41*(tmp_36*tmp_99 - tmp_93) + tmp_47*(tmp_83*tmp_99 - tmp_91)) + tmp_70*(tmp_62*(tmp_100*tmp_57 - tmp_97) + tmp_68*(tmp_100*tmp_85 - tmp_95));
      real_t a_0_5 = tmp_28*(tmp_19*(tmp_101*tmp_16 - tmp_88) + tmp_25*(tmp_101*tmp_73 - tmp_86)) + tmp_49*(tmp_41*(tmp_102*tmp_38 - tmp_92) + tmp_47*(tmp_102*tmp_76 - tmp_90)) + tmp_70*(tmp_62*(tmp_103*tmp_59 - tmp_96) + tmp_68*(tmp_103*tmp_79 - tmp_94));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_0_0_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_13 - Blending_DF_Tetrahedron_0_0*tmp_16 + Blending_DF_Tetrahedron_0_1*tmp_14 - Blending_DF_Tetrahedron_0_1*tmp_17 + Blending_DF_Tetrahedron_0_2*tmp_15 - Blending_DF_Tetrahedron_0_2*tmp_18;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = tmp_38 + tmp_43 + tmp_48;
      real_t tmp_50 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_51 = 2*tmp_50;
      real_t tmp_52 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_54 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_55 = tmp_12*tmp_52 + tmp_33*tmp_53 + tmp_35*tmp_54;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_39*tmp_52 + tmp_40*tmp_53 + tmp_41*tmp_54;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_44*tmp_52 + tmp_45*tmp_53 + tmp_46*tmp_54;
      real_t tmp_60 = tmp_3*tmp_59;
      real_t tmp_61 = tmp_56 + tmp_58 + tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_65 = tmp_31*(tmp_14 - tmp_17);
      real_t tmp_66 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_67 = tmp_12*tmp_64 + tmp_33*tmp_65 + tmp_35*tmp_66;
      real_t tmp_68 = 1.0*tmp_3;
      real_t tmp_69 = tmp_39*tmp_64 + tmp_40*tmp_65 + tmp_41*tmp_66;
      real_t tmp_70 = tmp_44*tmp_64 + tmp_45*tmp_65 + tmp_46*tmp_66;
      real_t tmp_71 = tmp_67*tmp_68 + tmp_68*tmp_69 + tmp_68*tmp_70;
      real_t tmp_72 = 2.0*tmp_3;
      real_t tmp_73 = tmp_67*tmp_72 + tmp_69*tmp_72 + tmp_70*tmp_72;
      real_t tmp_74 = p_affine_0_0*p_affine_1_1;
      real_t tmp_75 = p_affine_0_0*p_affine_1_2;
      real_t tmp_76 = p_affine_2_1*p_affine_3_2;
      real_t tmp_77 = p_affine_0_1*p_affine_1_0;
      real_t tmp_78 = p_affine_0_1*p_affine_1_2;
      real_t tmp_79 = p_affine_2_2*p_affine_3_0;
      real_t tmp_80 = p_affine_0_2*p_affine_1_0;
      real_t tmp_81 = p_affine_0_2*p_affine_1_1;
      real_t tmp_82 = p_affine_2_0*p_affine_3_1;
      real_t tmp_83 = p_affine_2_2*p_affine_3_1;
      real_t tmp_84 = p_affine_2_0*p_affine_3_2;
      real_t tmp_85 = p_affine_2_1*p_affine_3_0;
      real_t tmp_86 = std::abs(p_affine_0_0*tmp_76 - p_affine_0_0*tmp_83 + p_affine_0_1*tmp_79 - p_affine_0_1*tmp_84 + p_affine_0_2*tmp_82 - p_affine_0_2*tmp_85 - p_affine_1_0*tmp_76 + p_affine_1_0*tmp_83 - p_affine_1_1*tmp_79 + p_affine_1_1*tmp_84 - p_affine_1_2*tmp_82 + p_affine_1_2*tmp_85 + p_affine_2_0*tmp_78 - p_affine_2_0*tmp_81 - p_affine_2_1*tmp_75 + p_affine_2_1*tmp_80 + p_affine_2_2*tmp_74 - p_affine_2_2*tmp_77 - p_affine_3_0*tmp_78 + p_affine_3_0*tmp_81 + p_affine_3_1*tmp_75 - p_affine_3_1*tmp_80 - p_affine_3_2*tmp_74 + p_affine_3_2*tmp_77);
      real_t tmp_87 = 0.041666666666666657*tmp_86*std::abs(tmp_19);
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 2.3416407864998732;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90 - 3.0;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_96 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_1_0*tmp_92 - Blending_DF_Tetrahedron_1_0*tmp_95 + Blending_DF_Tetrahedron_1_1*tmp_93 - Blending_DF_Tetrahedron_1_1*tmp_96 + Blending_DF_Tetrahedron_1_2*tmp_94 - Blending_DF_Tetrahedron_1_2*tmp_97;
      real_t tmp_99 = tmp_30/tmp_98;
      real_t tmp_100 = tmp_99*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_101 = tmp_99*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_102 = tmp_99*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_103 = tmp_100*tmp_12 + tmp_101*tmp_33 + tmp_102*tmp_35;
      real_t tmp_104 = tmp_103*tmp_91;
      real_t tmp_105 = tmp_100*tmp_39 + tmp_101*tmp_40 + tmp_102*tmp_41;
      real_t tmp_106 = tmp_105*tmp_91;
      real_t tmp_107 = tmp_100*tmp_44 + tmp_101*tmp_45 + tmp_102*tmp_46;
      real_t tmp_108 = tmp_107*tmp_91;
      real_t tmp_109 = tmp_104 + tmp_106 + tmp_108;
      real_t tmp_110 = 0.5*tmp_104 + 0.5*tmp_106 + 0.5*tmp_108;
      real_t tmp_111 = 2*tmp_110;
      real_t tmp_112 = tmp_99*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_113 = tmp_99*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_114 = tmp_99*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_115 = tmp_112*tmp_12 + tmp_113*tmp_33 + tmp_114*tmp_35;
      real_t tmp_116 = tmp_115*tmp_91;
      real_t tmp_117 = tmp_112*tmp_39 + tmp_113*tmp_40 + tmp_114*tmp_41;
      real_t tmp_118 = tmp_117*tmp_91;
      real_t tmp_119 = tmp_112*tmp_44 + tmp_113*tmp_45 + tmp_114*tmp_46;
      real_t tmp_120 = tmp_119*tmp_91;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = 0.5*tmp_116 + 0.5*tmp_118 + 0.5*tmp_120;
      real_t tmp_123 = 2*tmp_122;
      real_t tmp_124 = tmp_99*(tmp_94 - tmp_97);
      real_t tmp_125 = tmp_99*(tmp_93 - tmp_96);
      real_t tmp_126 = tmp_99*(tmp_92 - tmp_95);
      real_t tmp_127 = tmp_12*tmp_124 + tmp_125*tmp_33 + tmp_126*tmp_35;
      real_t tmp_128 = 1.0*tmp_91;
      real_t tmp_129 = tmp_124*tmp_39 + tmp_125*tmp_40 + tmp_126*tmp_41;
      real_t tmp_130 = tmp_124*tmp_44 + tmp_125*tmp_45 + tmp_126*tmp_46;
      real_t tmp_131 = tmp_127*tmp_128 + tmp_128*tmp_129 + tmp_128*tmp_130;
      real_t tmp_132 = 2.0*tmp_91;
      real_t tmp_133 = tmp_127*tmp_132 + tmp_129*tmp_132 + tmp_130*tmp_132;
      real_t tmp_134 = 0.041666666666666657*tmp_86*std::abs(tmp_98);
      real_t tmp_135 = 2.3416407864998732;
      real_t tmp_136 = 0.55278640450004235;
      real_t tmp_137 = 0.55278640450004235;
      real_t tmp_138 = tmp_135 + tmp_136 + tmp_137 - 3.0;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_140 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_141 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_142 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_143 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_144 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_145 = Blending_DF_Tetrahedron_2_0*tmp_139 - Blending_DF_Tetrahedron_2_0*tmp_142 + Blending_DF_Tetrahedron_2_1*tmp_140 - Blending_DF_Tetrahedron_2_1*tmp_143 + Blending_DF_Tetrahedron_2_2*tmp_141 - Blending_DF_Tetrahedron_2_2*tmp_144;
      real_t tmp_146 = tmp_30/tmp_145;
      real_t tmp_147 = tmp_146*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_148 = tmp_146*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_149 = tmp_146*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_150 = tmp_12*tmp_147 + tmp_148*tmp_33 + tmp_149*tmp_35;
      real_t tmp_151 = tmp_138*tmp_150;
      real_t tmp_152 = tmp_147*tmp_39 + tmp_148*tmp_40 + tmp_149*tmp_41;
      real_t tmp_153 = tmp_138*tmp_152;
      real_t tmp_154 = tmp_147*tmp_44 + tmp_148*tmp_45 + tmp_149*tmp_46;
      real_t tmp_155 = tmp_138*tmp_154;
      real_t tmp_156 = tmp_151 + tmp_153 + tmp_155;
      real_t tmp_157 = 0.5*tmp_151 + 0.5*tmp_153 + 0.5*tmp_155;
      real_t tmp_158 = 2*tmp_157;
      real_t tmp_159 = tmp_146*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_160 = tmp_146*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_161 = tmp_146*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_162 = tmp_12*tmp_159 + tmp_160*tmp_33 + tmp_161*tmp_35;
      real_t tmp_163 = tmp_138*tmp_162;
      real_t tmp_164 = tmp_159*tmp_39 + tmp_160*tmp_40 + tmp_161*tmp_41;
      real_t tmp_165 = tmp_138*tmp_164;
      real_t tmp_166 = tmp_159*tmp_44 + tmp_160*tmp_45 + tmp_161*tmp_46;
      real_t tmp_167 = tmp_138*tmp_166;
      real_t tmp_168 = tmp_163 + tmp_165 + tmp_167;
      real_t tmp_169 = 0.5*tmp_163 + 0.5*tmp_165 + 0.5*tmp_167;
      real_t tmp_170 = 2*tmp_169;
      real_t tmp_171 = tmp_146*(tmp_141 - tmp_144);
      real_t tmp_172 = tmp_146*(tmp_140 - tmp_143);
      real_t tmp_173 = tmp_146*(tmp_139 - tmp_142);
      real_t tmp_174 = tmp_12*tmp_171 + tmp_172*tmp_33 + tmp_173*tmp_35;
      real_t tmp_175 = 1.0*tmp_138;
      real_t tmp_176 = tmp_171*tmp_39 + tmp_172*tmp_40 + tmp_173*tmp_41;
      real_t tmp_177 = tmp_171*tmp_44 + tmp_172*tmp_45 + tmp_173*tmp_46;
      real_t tmp_178 = tmp_174*tmp_175 + tmp_175*tmp_176 + tmp_175*tmp_177;
      real_t tmp_179 = 2.0*tmp_138;
      real_t tmp_180 = tmp_174*tmp_179 + tmp_176*tmp_179 + tmp_177*tmp_179;
      real_t tmp_181 = 0.041666666666666657*tmp_86*std::abs(tmp_145);
      real_t tmp_182 = 0.55278640450004235;
      real_t tmp_183 = 0.55278640450004235;
      real_t tmp_184 = 0.55278640450004235;
      real_t tmp_185 = tmp_182 + tmp_183 + tmp_184 - 3.0;
      real_t tmp_186 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_187 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_188 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_189 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_190 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_191 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_192 = Blending_DF_Tetrahedron_3_0*tmp_186 - Blending_DF_Tetrahedron_3_0*tmp_189 + Blending_DF_Tetrahedron_3_1*tmp_187 - Blending_DF_Tetrahedron_3_1*tmp_190 + Blending_DF_Tetrahedron_3_2*tmp_188 - Blending_DF_Tetrahedron_3_2*tmp_191;
      real_t tmp_193 = tmp_30/tmp_192;
      real_t tmp_194 = tmp_193*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_195 = tmp_193*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_196 = tmp_193*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_197 = tmp_12*tmp_194 + tmp_195*tmp_33 + tmp_196*tmp_35;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_194*tmp_39 + tmp_195*tmp_40 + tmp_196*tmp_41;
      real_t tmp_200 = tmp_185*tmp_199;
      real_t tmp_201 = tmp_194*tmp_44 + tmp_195*tmp_45 + tmp_196*tmp_46;
      real_t tmp_202 = tmp_185*tmp_201;
      real_t tmp_203 = tmp_198 + tmp_200 + tmp_202;
      real_t tmp_204 = 0.5*tmp_198 + 0.5*tmp_200 + 0.5*tmp_202;
      real_t tmp_205 = 2*tmp_204;
      real_t tmp_206 = tmp_193*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_207 = tmp_193*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_208 = tmp_193*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_209 = tmp_12*tmp_206 + tmp_207*tmp_33 + tmp_208*tmp_35;
      real_t tmp_210 = tmp_185*tmp_209;
      real_t tmp_211 = tmp_206*tmp_39 + tmp_207*tmp_40 + tmp_208*tmp_41;
      real_t tmp_212 = tmp_185*tmp_211;
      real_t tmp_213 = tmp_206*tmp_44 + tmp_207*tmp_45 + tmp_208*tmp_46;
      real_t tmp_214 = tmp_185*tmp_213;
      real_t tmp_215 = tmp_210 + tmp_212 + tmp_214;
      real_t tmp_216 = 0.5*tmp_210 + 0.5*tmp_212 + 0.5*tmp_214;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = tmp_193*(tmp_188 - tmp_191);
      real_t tmp_219 = tmp_193*(tmp_187 - tmp_190);
      real_t tmp_220 = tmp_193*(tmp_186 - tmp_189);
      real_t tmp_221 = tmp_12*tmp_218 + tmp_219*tmp_33 + tmp_220*tmp_35;
      real_t tmp_222 = 1.0*tmp_185;
      real_t tmp_223 = tmp_218*tmp_39 + tmp_219*tmp_40 + tmp_220*tmp_41;
      real_t tmp_224 = tmp_218*tmp_44 + tmp_219*tmp_45 + tmp_220*tmp_46;
      real_t tmp_225 = tmp_221*tmp_222 + tmp_222*tmp_223 + tmp_222*tmp_224;
      real_t tmp_226 = 2.0*tmp_185;
      real_t tmp_227 = tmp_221*tmp_226 + tmp_223*tmp_226 + tmp_224*tmp_226;
      real_t tmp_228 = 0.041666666666666657*tmp_86*std::abs(tmp_192);
      real_t tmp_229 = tmp_0 - 1.0;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = tmp_230*tmp_47;
      real_t tmp_232 = tmp_230*tmp_59;
      real_t tmp_233 = tmp_230*tmp_70;
      real_t tmp_234 = tmp_88 - 1.0;
      real_t tmp_235 = 2.0*tmp_234;
      real_t tmp_236 = tmp_107*tmp_235;
      real_t tmp_237 = tmp_119*tmp_235;
      real_t tmp_238 = tmp_130*tmp_235;
      real_t tmp_239 = tmp_135 - 1.0;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_154*tmp_240;
      real_t tmp_242 = tmp_166*tmp_240;
      real_t tmp_243 = tmp_177*tmp_240;
      real_t tmp_244 = tmp_182 - 1.0;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = tmp_201*tmp_245;
      real_t tmp_247 = tmp_213*tmp_245;
      real_t tmp_248 = tmp_224*tmp_245;
      real_t tmp_249 = tmp_1 - 1.0;
      real_t tmp_250 = 2.0*tmp_249;
      real_t tmp_251 = tmp_250*tmp_42;
      real_t tmp_252 = tmp_250*tmp_57;
      real_t tmp_253 = tmp_250*tmp_69;
      real_t tmp_254 = tmp_89 - 1.0;
      real_t tmp_255 = 2.0*tmp_254;
      real_t tmp_256 = tmp_105*tmp_255;
      real_t tmp_257 = tmp_117*tmp_255;
      real_t tmp_258 = tmp_129*tmp_255;
      real_t tmp_259 = tmp_136 - 1.0;
      real_t tmp_260 = 2.0*tmp_259;
      real_t tmp_261 = tmp_152*tmp_260;
      real_t tmp_262 = tmp_164*tmp_260;
      real_t tmp_263 = tmp_176*tmp_260;
      real_t tmp_264 = tmp_183 - 1.0;
      real_t tmp_265 = 2.0*tmp_264;
      real_t tmp_266 = tmp_199*tmp_265;
      real_t tmp_267 = tmp_211*tmp_265;
      real_t tmp_268 = tmp_223*tmp_265;
      real_t tmp_269 = tmp_2 - 1.0;
      real_t tmp_270 = 2.0*tmp_269;
      real_t tmp_271 = tmp_270*tmp_37;
      real_t tmp_272 = tmp_270*tmp_55;
      real_t tmp_273 = tmp_270*tmp_67;
      real_t tmp_274 = tmp_90 - 1.0;
      real_t tmp_275 = 2.0*tmp_274;
      real_t tmp_276 = tmp_103*tmp_275;
      real_t tmp_277 = tmp_115*tmp_275;
      real_t tmp_278 = tmp_127*tmp_275;
      real_t tmp_279 = tmp_137 - 1.0;
      real_t tmp_280 = 2.0*tmp_279;
      real_t tmp_281 = tmp_150*tmp_280;
      real_t tmp_282 = tmp_162*tmp_280;
      real_t tmp_283 = tmp_174*tmp_280;
      real_t tmp_284 = tmp_184 - 1.0;
      real_t tmp_285 = 2.0*tmp_284;
      real_t tmp_286 = tmp_197*tmp_285;
      real_t tmp_287 = tmp_209*tmp_285;
      real_t tmp_288 = tmp_221*tmp_285;
      real_t tmp_289 = 1.1055728090000847;
      real_t tmp_290 = tmp_289*tmp_67;
      real_t tmp_291 = 4.6832815729997463;
      real_t tmp_292 = tmp_291*tmp_69;
      real_t tmp_293 = tmp_290 + tmp_292;
      real_t tmp_294 = tmp_1*tmp_37;
      real_t tmp_295 = tmp_2*tmp_42;
      real_t tmp_296 = tmp_294 + tmp_295;
      real_t tmp_297 = tmp_1*tmp_55;
      real_t tmp_298 = tmp_2*tmp_57;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = 4.6832815729997463;
      real_t tmp_301 = tmp_127*tmp_300;
      real_t tmp_302 = 1.1055728090000847;
      real_t tmp_303 = tmp_129*tmp_302;
      real_t tmp_304 = tmp_301 + tmp_303;
      real_t tmp_305 = tmp_103*tmp_89;
      real_t tmp_306 = tmp_105*tmp_90;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_115*tmp_89;
      real_t tmp_309 = tmp_117*tmp_90;
      real_t tmp_310 = tmp_308 + tmp_309;
      real_t tmp_311 = 1.1055728090000847;
      real_t tmp_312 = tmp_174*tmp_311;
      real_t tmp_313 = 1.1055728090000847;
      real_t tmp_314 = tmp_176*tmp_313;
      real_t tmp_315 = tmp_312 + tmp_314;
      real_t tmp_316 = tmp_136*tmp_150;
      real_t tmp_317 = tmp_137*tmp_152;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_136*tmp_162;
      real_t tmp_320 = tmp_137*tmp_164;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = 1.1055728090000847;
      real_t tmp_323 = tmp_221*tmp_322;
      real_t tmp_324 = 1.1055728090000847;
      real_t tmp_325 = tmp_223*tmp_324;
      real_t tmp_326 = tmp_323 + tmp_325;
      real_t tmp_327 = tmp_183*tmp_197;
      real_t tmp_328 = tmp_184*tmp_199;
      real_t tmp_329 = tmp_327 + tmp_328;
      real_t tmp_330 = tmp_183*tmp_209;
      real_t tmp_331 = tmp_184*tmp_211;
      real_t tmp_332 = tmp_330 + tmp_331;
      real_t tmp_333 = 1.1055728090000847;
      real_t tmp_334 = tmp_333*tmp_67;
      real_t tmp_335 = tmp_291*tmp_70;
      real_t tmp_336 = tmp_334 + tmp_335;
      real_t tmp_337 = tmp_0*tmp_37;
      real_t tmp_338 = tmp_2*tmp_47;
      real_t tmp_339 = tmp_337 + tmp_338;
      real_t tmp_340 = tmp_0*tmp_55;
      real_t tmp_341 = tmp_2*tmp_59;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = 1.1055728090000847;
      real_t tmp_344 = tmp_127*tmp_343;
      real_t tmp_345 = tmp_130*tmp_302;
      real_t tmp_346 = tmp_344 + tmp_345;
      real_t tmp_347 = tmp_103*tmp_88;
      real_t tmp_348 = tmp_107*tmp_90;
      real_t tmp_349 = tmp_347 + tmp_348;
      real_t tmp_350 = tmp_115*tmp_88;
      real_t tmp_351 = tmp_119*tmp_90;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = 4.6832815729997463;
      real_t tmp_354 = tmp_174*tmp_353;
      real_t tmp_355 = tmp_177*tmp_313;
      real_t tmp_356 = tmp_354 + tmp_355;
      real_t tmp_357 = tmp_135*tmp_150;
      real_t tmp_358 = tmp_137*tmp_154;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_135*tmp_162;
      real_t tmp_361 = tmp_137*tmp_166;
      real_t tmp_362 = tmp_360 + tmp_361;
      real_t tmp_363 = 1.1055728090000847;
      real_t tmp_364 = tmp_221*tmp_363;
      real_t tmp_365 = tmp_224*tmp_324;
      real_t tmp_366 = tmp_364 + tmp_365;
      real_t tmp_367 = tmp_182*tmp_197;
      real_t tmp_368 = tmp_184*tmp_201;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = tmp_182*tmp_209;
      real_t tmp_371 = tmp_184*tmp_213;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_333*tmp_69;
      real_t tmp_374 = tmp_289*tmp_70;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_0*tmp_42;
      real_t tmp_377 = tmp_1*tmp_47;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_0*tmp_57;
      real_t tmp_380 = tmp_1*tmp_59;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_129*tmp_343;
      real_t tmp_383 = tmp_130*tmp_300;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_105*tmp_88;
      real_t tmp_386 = tmp_107*tmp_89;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_117*tmp_88;
      real_t tmp_389 = tmp_119*tmp_89;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_176*tmp_353;
      real_t tmp_392 = tmp_177*tmp_311;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = tmp_135*tmp_152;
      real_t tmp_395 = tmp_136*tmp_154;
      real_t tmp_396 = tmp_394 + tmp_395;
      real_t tmp_397 = tmp_135*tmp_164;
      real_t tmp_398 = tmp_136*tmp_166;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = tmp_223*tmp_363;
      real_t tmp_401 = tmp_224*tmp_322;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_182*tmp_199;
      real_t tmp_404 = tmp_183*tmp_201;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_182*tmp_211;
      real_t tmp_407 = tmp_183*tmp_213;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_1;
      real_t tmp_410 = 4.0 - tmp_0;
      real_t tmp_411 = -tmp_291 + tmp_409 + tmp_410;
      real_t tmp_412 = tmp_37*tmp_411;
      real_t tmp_413 = -tmp_295 - tmp_338 + tmp_412;
      real_t tmp_414 = tmp_411*tmp_55;
      real_t tmp_415 = -tmp_298 - tmp_341 + tmp_414;
      real_t tmp_416 = tmp_411*tmp_67;
      real_t tmp_417 = -tmp_292 - tmp_335 + 2.0*tmp_416;
      real_t tmp_418 = -tmp_89;
      real_t tmp_419 = 4.0 - tmp_88;
      real_t tmp_420 = -tmp_302 + tmp_418 + tmp_419;
      real_t tmp_421 = tmp_103*tmp_420;
      real_t tmp_422 = -tmp_306 - tmp_348 + tmp_421;
      real_t tmp_423 = tmp_115*tmp_420;
      real_t tmp_424 = -tmp_309 - tmp_351 + tmp_423;
      real_t tmp_425 = tmp_127*tmp_420;
      real_t tmp_426 = -tmp_303 - tmp_345 + 2.0*tmp_425;
      real_t tmp_427 = -tmp_136;
      real_t tmp_428 = 4.0 - tmp_135;
      real_t tmp_429 = -tmp_313 + tmp_427 + tmp_428;
      real_t tmp_430 = tmp_150*tmp_429;
      real_t tmp_431 = -tmp_317 - tmp_358 + tmp_430;
      real_t tmp_432 = tmp_162*tmp_429;
      real_t tmp_433 = -tmp_320 - tmp_361 + tmp_432;
      real_t tmp_434 = tmp_174*tmp_429;
      real_t tmp_435 = -tmp_314 - tmp_355 + 2.0*tmp_434;
      real_t tmp_436 = -tmp_183;
      real_t tmp_437 = 4.0 - tmp_182;
      real_t tmp_438 = -tmp_324 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_197*tmp_438;
      real_t tmp_440 = -tmp_328 - tmp_368 + tmp_439;
      real_t tmp_441 = tmp_209*tmp_438;
      real_t tmp_442 = -tmp_331 - tmp_371 + tmp_441;
      real_t tmp_443 = tmp_221*tmp_438;
      real_t tmp_444 = -tmp_325 - tmp_365 + 2.0*tmp_443;
      real_t tmp_445 = -tmp_2;
      real_t tmp_446 = -tmp_289 + tmp_410 + tmp_445;
      real_t tmp_447 = tmp_42*tmp_446;
      real_t tmp_448 = -tmp_294 - tmp_377 + tmp_447;
      real_t tmp_449 = tmp_446*tmp_57;
      real_t tmp_450 = -tmp_297 - tmp_380 + tmp_449;
      real_t tmp_451 = tmp_446*tmp_69;
      real_t tmp_452 = -tmp_290 - tmp_374 + 2.0*tmp_451;
      real_t tmp_453 = -tmp_90;
      real_t tmp_454 = -tmp_300 + tmp_419 + tmp_453;
      real_t tmp_455 = tmp_105*tmp_454;
      real_t tmp_456 = -tmp_305 - tmp_386 + tmp_455;
      real_t tmp_457 = tmp_117*tmp_454;
      real_t tmp_458 = -tmp_308 - tmp_389 + tmp_457;
      real_t tmp_459 = tmp_129*tmp_454;
      real_t tmp_460 = -tmp_301 - tmp_383 + 2.0*tmp_459;
      real_t tmp_461 = -tmp_137;
      real_t tmp_462 = -tmp_311 + tmp_428 + tmp_461;
      real_t tmp_463 = tmp_152*tmp_462;
      real_t tmp_464 = -tmp_316 - tmp_395 + tmp_463;
      real_t tmp_465 = tmp_164*tmp_462;
      real_t tmp_466 = -tmp_319 - tmp_398 + tmp_465;
      real_t tmp_467 = tmp_176*tmp_462;
      real_t tmp_468 = -tmp_312 - tmp_392 + 2.0*tmp_467;
      real_t tmp_469 = -tmp_184;
      real_t tmp_470 = -tmp_322 + tmp_437 + tmp_469;
      real_t tmp_471 = tmp_199*tmp_470;
      real_t tmp_472 = -tmp_327 - tmp_404 + tmp_471;
      real_t tmp_473 = tmp_211*tmp_470;
      real_t tmp_474 = -tmp_330 - tmp_407 + tmp_473;
      real_t tmp_475 = tmp_223*tmp_470;
      real_t tmp_476 = -tmp_323 - tmp_401 + 2.0*tmp_475;
      real_t tmp_477 = -tmp_333 + tmp_409 + tmp_445 + 4.0;
      real_t tmp_478 = tmp_47*tmp_477;
      real_t tmp_479 = -tmp_337 - tmp_376 + tmp_478;
      real_t tmp_480 = tmp_477*tmp_59;
      real_t tmp_481 = -tmp_340 - tmp_379 + tmp_480;
      real_t tmp_482 = tmp_477*tmp_70;
      real_t tmp_483 = -tmp_334 - tmp_373 + 2.0*tmp_482;
      real_t tmp_484 = -tmp_343 + tmp_418 + tmp_453 + 4.0;
      real_t tmp_485 = tmp_107*tmp_484;
      real_t tmp_486 = -tmp_347 - tmp_385 + tmp_485;
      real_t tmp_487 = tmp_119*tmp_484;
      real_t tmp_488 = -tmp_350 - tmp_388 + tmp_487;
      real_t tmp_489 = tmp_130*tmp_484;
      real_t tmp_490 = -tmp_344 - tmp_382 + 2.0*tmp_489;
      real_t tmp_491 = -tmp_353 + tmp_427 + tmp_461 + 4.0;
      real_t tmp_492 = tmp_154*tmp_491;
      real_t tmp_493 = -tmp_357 - tmp_394 + tmp_492;
      real_t tmp_494 = tmp_166*tmp_491;
      real_t tmp_495 = -tmp_360 - tmp_397 + tmp_494;
      real_t tmp_496 = tmp_177*tmp_491;
      real_t tmp_497 = -tmp_354 - tmp_391 + 2.0*tmp_496;
      real_t tmp_498 = -tmp_363 + tmp_436 + tmp_469 + 4.0;
      real_t tmp_499 = tmp_201*tmp_498;
      real_t tmp_500 = -tmp_367 - tmp_403 + tmp_499;
      real_t tmp_501 = tmp_213*tmp_498;
      real_t tmp_502 = -tmp_370 - tmp_406 + tmp_501;
      real_t tmp_503 = tmp_224*tmp_498;
      real_t tmp_504 = -tmp_364 - tmp_400 + 2.0*tmp_503;
      real_t tmp_505 = 1.0*tmp_229;
      real_t tmp_506 = tmp_47*tmp_505;
      real_t tmp_507 = tmp_505*tmp_59;
      real_t tmp_508 = tmp_505*tmp_70;
      real_t tmp_509 = 1.0*tmp_234;
      real_t tmp_510 = tmp_107*tmp_509;
      real_t tmp_511 = tmp_119*tmp_509;
      real_t tmp_512 = tmp_130*tmp_509;
      real_t tmp_513 = 1.0*tmp_239;
      real_t tmp_514 = tmp_154*tmp_513;
      real_t tmp_515 = tmp_166*tmp_513;
      real_t tmp_516 = tmp_177*tmp_513;
      real_t tmp_517 = 1.0*tmp_244;
      real_t tmp_518 = tmp_201*tmp_517;
      real_t tmp_519 = tmp_213*tmp_517;
      real_t tmp_520 = tmp_224*tmp_517;
      real_t tmp_521 = 0.012499999999999983;
      real_t tmp_522 = 16.0*tmp_521;
      real_t tmp_523 = 0.012499999999999983;
      real_t tmp_524 = 16.0*tmp_523;
      real_t tmp_525 = 0.11249999999999989;
      real_t tmp_526 = 16.0*tmp_525;
      real_t tmp_527 = 0.012499999999999983;
      real_t tmp_528 = 16.0*tmp_527;
      real_t tmp_529 = tmp_134*(tmp_105*tmp_254*tmp_510 + tmp_117*tmp_254*tmp_511 + tmp_129*tmp_238*tmp_254) + tmp_181*(tmp_152*tmp_259*tmp_514 + tmp_164*tmp_259*tmp_515 + tmp_176*tmp_243*tmp_259) + tmp_228*(tmp_199*tmp_264*tmp_518 + tmp_211*tmp_264*tmp_519 + tmp_223*tmp_248*tmp_264) + tmp_87*(tmp_233*tmp_249*tmp_69 + tmp_249*tmp_42*tmp_506 + tmp_249*tmp_507*tmp_57);
      real_t tmp_530 = tmp_269*tmp_37;
      real_t tmp_531 = tmp_269*tmp_55;
      real_t tmp_532 = tmp_269*tmp_67;
      real_t tmp_533 = tmp_103*tmp_274;
      real_t tmp_534 = tmp_115*tmp_274;
      real_t tmp_535 = tmp_127*tmp_274;
      real_t tmp_536 = tmp_150*tmp_279;
      real_t tmp_537 = tmp_162*tmp_279;
      real_t tmp_538 = tmp_174*tmp_279;
      real_t tmp_539 = tmp_197*tmp_284;
      real_t tmp_540 = tmp_209*tmp_284;
      real_t tmp_541 = tmp_221*tmp_284;
      real_t tmp_542 = tmp_134*(tmp_238*tmp_535 + tmp_510*tmp_533 + tmp_511*tmp_534) + tmp_181*(tmp_243*tmp_538 + tmp_514*tmp_536 + tmp_515*tmp_537) + tmp_228*(tmp_248*tmp_541 + tmp_518*tmp_539 + tmp_519*tmp_540) + tmp_87*(tmp_233*tmp_532 + tmp_506*tmp_530 + tmp_507*tmp_531);
      real_t tmp_543 = 1.0*tmp_249;
      real_t tmp_544 = tmp_42*tmp_543;
      real_t tmp_545 = tmp_543*tmp_57;
      real_t tmp_546 = tmp_543*tmp_69;
      real_t tmp_547 = 1.0*tmp_254;
      real_t tmp_548 = tmp_105*tmp_547;
      real_t tmp_549 = tmp_117*tmp_547;
      real_t tmp_550 = tmp_129*tmp_547;
      real_t tmp_551 = 1.0*tmp_259;
      real_t tmp_552 = tmp_152*tmp_551;
      real_t tmp_553 = tmp_164*tmp_551;
      real_t tmp_554 = tmp_176*tmp_551;
      real_t tmp_555 = 1.0*tmp_264;
      real_t tmp_556 = tmp_199*tmp_555;
      real_t tmp_557 = tmp_211*tmp_555;
      real_t tmp_558 = tmp_223*tmp_555;
      real_t tmp_559 = 0.012499999999999983;
      real_t tmp_560 = 16.0*tmp_559;
      real_t tmp_561 = 0.11249999999999989;
      real_t tmp_562 = 16.0*tmp_561;
      real_t tmp_563 = 0.012499999999999983;
      real_t tmp_564 = 16.0*tmp_563;
      real_t tmp_565 = 0.012499999999999983;
      real_t tmp_566 = 16.0*tmp_565;
      real_t tmp_567 = tmp_134*(tmp_258*tmp_535 + tmp_533*tmp_548 + tmp_534*tmp_549) + tmp_181*(tmp_263*tmp_538 + tmp_536*tmp_552 + tmp_537*tmp_553) + tmp_228*(tmp_268*tmp_541 + tmp_539*tmp_556 + tmp_540*tmp_557) + tmp_87*(tmp_253*tmp_532 + tmp_530*tmp_544 + tmp_531*tmp_545);
      real_t tmp_568 = 1.0*tmp_269;
      real_t tmp_569 = tmp_37*tmp_568;
      real_t tmp_570 = tmp_55*tmp_568;
      real_t tmp_571 = tmp_568*tmp_67;
      real_t tmp_572 = 1.0*tmp_274;
      real_t tmp_573 = tmp_103*tmp_572;
      real_t tmp_574 = tmp_115*tmp_572;
      real_t tmp_575 = tmp_127*tmp_572;
      real_t tmp_576 = 1.0*tmp_279;
      real_t tmp_577 = tmp_150*tmp_576;
      real_t tmp_578 = tmp_162*tmp_576;
      real_t tmp_579 = tmp_174*tmp_576;
      real_t tmp_580 = 1.0*tmp_284;
      real_t tmp_581 = tmp_197*tmp_580;
      real_t tmp_582 = tmp_209*tmp_580;
      real_t tmp_583 = tmp_221*tmp_580;
      real_t tmp_584 = 0.11249999999999989;
      real_t tmp_585 = 16.0*tmp_584;
      real_t tmp_586 = 0.012499999999999983;
      real_t tmp_587 = 16.0*tmp_586;
      real_t tmp_588 = 0.012499999999999983;
      real_t tmp_589 = 16.0*tmp_588;
      real_t tmp_590 = 0.012499999999999983;
      real_t tmp_591 = 16.0*tmp_590;
      real_t tmp_592 = 0.27639320225002117;
      real_t tmp_593 = tmp_37*tmp_592;
      real_t tmp_594 = 1.1708203932499366;
      real_t tmp_595 = tmp_42*tmp_594;
      real_t tmp_596 = tmp_593 + tmp_595;
      real_t tmp_597 = 2*tmp_596;
      real_t tmp_598 = tmp_55*tmp_592;
      real_t tmp_599 = tmp_57*tmp_594;
      real_t tmp_600 = tmp_598 + tmp_599;
      real_t tmp_601 = 2*tmp_600;
      real_t tmp_602 = tmp_1*tmp_67;
      real_t tmp_603 = tmp_2*tmp_69;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = 1.1708203932499366;
      real_t tmp_606 = tmp_103*tmp_605;
      real_t tmp_607 = 0.27639320225002117;
      real_t tmp_608 = tmp_105*tmp_607;
      real_t tmp_609 = tmp_606 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_115*tmp_605;
      real_t tmp_612 = tmp_117*tmp_607;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 2*tmp_613;
      real_t tmp_615 = tmp_127*tmp_89;
      real_t tmp_616 = tmp_129*tmp_90;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 0.27639320225002117;
      real_t tmp_619 = tmp_150*tmp_618;
      real_t tmp_620 = 0.27639320225002117;
      real_t tmp_621 = tmp_152*tmp_620;
      real_t tmp_622 = tmp_619 + tmp_621;
      real_t tmp_623 = 2*tmp_622;
      real_t tmp_624 = tmp_162*tmp_618;
      real_t tmp_625 = tmp_164*tmp_620;
      real_t tmp_626 = tmp_624 + tmp_625;
      real_t tmp_627 = 2*tmp_626;
      real_t tmp_628 = tmp_136*tmp_174;
      real_t tmp_629 = tmp_137*tmp_176;
      real_t tmp_630 = tmp_628 + tmp_629;
      real_t tmp_631 = 0.27639320225002117;
      real_t tmp_632 = tmp_197*tmp_631;
      real_t tmp_633 = 0.27639320225002117;
      real_t tmp_634 = tmp_199*tmp_633;
      real_t tmp_635 = tmp_632 + tmp_634;
      real_t tmp_636 = 2*tmp_635;
      real_t tmp_637 = tmp_209*tmp_631;
      real_t tmp_638 = tmp_211*tmp_633;
      real_t tmp_639 = tmp_637 + tmp_638;
      real_t tmp_640 = 2*tmp_639;
      real_t tmp_641 = tmp_183*tmp_221;
      real_t tmp_642 = tmp_184*tmp_223;
      real_t tmp_643 = tmp_641 + tmp_642;
      real_t tmp_644 = 0.27639320225002117;
      real_t tmp_645 = tmp_37*tmp_644;
      real_t tmp_646 = tmp_47*tmp_594;
      real_t tmp_647 = tmp_645 + tmp_646;
      real_t tmp_648 = 2*tmp_647;
      real_t tmp_649 = tmp_55*tmp_644;
      real_t tmp_650 = tmp_59*tmp_594;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_0*tmp_67;
      real_t tmp_654 = tmp_2*tmp_70;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 0.27639320225002117;
      real_t tmp_657 = tmp_103*tmp_656;
      real_t tmp_658 = tmp_107*tmp_607;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = 2*tmp_659;
      real_t tmp_661 = tmp_115*tmp_656;
      real_t tmp_662 = tmp_119*tmp_607;
      real_t tmp_663 = tmp_661 + tmp_662;
      real_t tmp_664 = 2*tmp_663;
      real_t tmp_665 = tmp_127*tmp_88;
      real_t tmp_666 = tmp_130*tmp_90;
      real_t tmp_667 = tmp_665 + tmp_666;
      real_t tmp_668 = 1.1708203932499366;
      real_t tmp_669 = tmp_150*tmp_668;
      real_t tmp_670 = tmp_154*tmp_620;
      real_t tmp_671 = tmp_669 + tmp_670;
      real_t tmp_672 = 2*tmp_671;
      real_t tmp_673 = tmp_162*tmp_668;
      real_t tmp_674 = tmp_166*tmp_620;
      real_t tmp_675 = tmp_673 + tmp_674;
      real_t tmp_676 = 2*tmp_675;
      real_t tmp_677 = tmp_135*tmp_174;
      real_t tmp_678 = tmp_137*tmp_177;
      real_t tmp_679 = tmp_677 + tmp_678;
      real_t tmp_680 = 0.27639320225002117;
      real_t tmp_681 = tmp_197*tmp_680;
      real_t tmp_682 = tmp_201*tmp_633;
      real_t tmp_683 = tmp_681 + tmp_682;
      real_t tmp_684 = 2*tmp_683;
      real_t tmp_685 = tmp_209*tmp_680;
      real_t tmp_686 = tmp_213*tmp_633;
      real_t tmp_687 = tmp_685 + tmp_686;
      real_t tmp_688 = 2*tmp_687;
      real_t tmp_689 = tmp_182*tmp_221;
      real_t tmp_690 = tmp_184*tmp_224;
      real_t tmp_691 = tmp_689 + tmp_690;
      real_t tmp_692 = tmp_42*tmp_644;
      real_t tmp_693 = tmp_47*tmp_592;
      real_t tmp_694 = tmp_692 + tmp_693;
      real_t tmp_695 = 2*tmp_694;
      real_t tmp_696 = tmp_57*tmp_644;
      real_t tmp_697 = tmp_59*tmp_592;
      real_t tmp_698 = tmp_696 + tmp_697;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = tmp_0*tmp_69;
      real_t tmp_701 = tmp_1*tmp_70;
      real_t tmp_702 = tmp_700 + tmp_701;
      real_t tmp_703 = tmp_105*tmp_656;
      real_t tmp_704 = tmp_107*tmp_605;
      real_t tmp_705 = tmp_703 + tmp_704;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = tmp_117*tmp_656;
      real_t tmp_708 = tmp_119*tmp_605;
      real_t tmp_709 = tmp_707 + tmp_708;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = tmp_129*tmp_88;
      real_t tmp_712 = tmp_130*tmp_89;
      real_t tmp_713 = tmp_711 + tmp_712;
      real_t tmp_714 = tmp_152*tmp_668;
      real_t tmp_715 = tmp_154*tmp_618;
      real_t tmp_716 = tmp_714 + tmp_715;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_164*tmp_668;
      real_t tmp_719 = tmp_166*tmp_618;
      real_t tmp_720 = tmp_718 + tmp_719;
      real_t tmp_721 = 2*tmp_720;
      real_t tmp_722 = tmp_135*tmp_176;
      real_t tmp_723 = tmp_136*tmp_177;
      real_t tmp_724 = tmp_722 + tmp_723;
      real_t tmp_725 = tmp_199*tmp_680;
      real_t tmp_726 = tmp_201*tmp_631;
      real_t tmp_727 = tmp_725 + tmp_726;
      real_t tmp_728 = 2*tmp_727;
      real_t tmp_729 = tmp_211*tmp_680;
      real_t tmp_730 = tmp_213*tmp_631;
      real_t tmp_731 = tmp_729 + tmp_730;
      real_t tmp_732 = 2*tmp_731;
      real_t tmp_733 = tmp_182*tmp_223;
      real_t tmp_734 = tmp_183*tmp_224;
      real_t tmp_735 = tmp_733 + tmp_734;
      real_t tmp_736 = 0.5*tmp_412 - tmp_595 - tmp_646;
      real_t tmp_737 = 2*tmp_736;
      real_t tmp_738 = 0.5*tmp_414 - tmp_599 - tmp_650;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = 1.0*tmp_416 - tmp_603 - tmp_654;
      real_t tmp_741 = 0.5*tmp_421 - tmp_608 - tmp_658;
      real_t tmp_742 = 2*tmp_741;
      real_t tmp_743 = 0.5*tmp_423 - tmp_612 - tmp_662;
      real_t tmp_744 = 2*tmp_743;
      real_t tmp_745 = 1.0*tmp_425 - tmp_616 - tmp_666;
      real_t tmp_746 = 0.5*tmp_430 - tmp_621 - tmp_670;
      real_t tmp_747 = 2*tmp_746;
      real_t tmp_748 = 0.5*tmp_432 - tmp_625 - tmp_674;
      real_t tmp_749 = 2*tmp_748;
      real_t tmp_750 = 1.0*tmp_434 - tmp_629 - tmp_678;
      real_t tmp_751 = 0.5*tmp_439 - tmp_634 - tmp_682;
      real_t tmp_752 = 2*tmp_751;
      real_t tmp_753 = 0.5*tmp_441 - tmp_638 - tmp_686;
      real_t tmp_754 = 2*tmp_753;
      real_t tmp_755 = 1.0*tmp_443 - tmp_642 - tmp_690;
      real_t tmp_756 = 0.5*tmp_447 - tmp_593 - tmp_693;
      real_t tmp_757 = 2*tmp_756;
      real_t tmp_758 = 0.5*tmp_449 - tmp_598 - tmp_697;
      real_t tmp_759 = 2*tmp_758;
      real_t tmp_760 = 1.0*tmp_451 - tmp_602 - tmp_701;
      real_t tmp_761 = 0.5*tmp_455 - tmp_606 - tmp_704;
      real_t tmp_762 = 2*tmp_761;
      real_t tmp_763 = 0.5*tmp_457 - tmp_611 - tmp_708;
      real_t tmp_764 = 2*tmp_763;
      real_t tmp_765 = 1.0*tmp_459 - tmp_615 - tmp_712;
      real_t tmp_766 = 0.5*tmp_463 - tmp_619 - tmp_715;
      real_t tmp_767 = 2*tmp_766;
      real_t tmp_768 = 0.5*tmp_465 - tmp_624 - tmp_719;
      real_t tmp_769 = 2*tmp_768;
      real_t tmp_770 = 1.0*tmp_467 - tmp_628 - tmp_723;
      real_t tmp_771 = 0.5*tmp_471 - tmp_632 - tmp_726;
      real_t tmp_772 = 2*tmp_771;
      real_t tmp_773 = 0.5*tmp_473 - tmp_637 - tmp_730;
      real_t tmp_774 = 2*tmp_773;
      real_t tmp_775 = 1.0*tmp_475 - tmp_641 - tmp_734;
      real_t tmp_776 = 0.5*tmp_478 - tmp_645 - tmp_692;
      real_t tmp_777 = 2*tmp_776;
      real_t tmp_778 = 0.5*tmp_480 - tmp_649 - tmp_696;
      real_t tmp_779 = 2*tmp_778;
      real_t tmp_780 = 1.0*tmp_482 - tmp_653 - tmp_700;
      real_t tmp_781 = 0.5*tmp_485 - tmp_657 - tmp_703;
      real_t tmp_782 = 2*tmp_781;
      real_t tmp_783 = 0.5*tmp_487 - tmp_661 - tmp_707;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 1.0*tmp_489 - tmp_665 - tmp_711;
      real_t tmp_786 = 0.5*tmp_492 - tmp_669 - tmp_714;
      real_t tmp_787 = 2*tmp_786;
      real_t tmp_788 = 0.5*tmp_494 - tmp_673 - tmp_718;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = 1.0*tmp_496 - tmp_677 - tmp_722;
      real_t tmp_791 = 0.5*tmp_499 - tmp_681 - tmp_725;
      real_t tmp_792 = 2*tmp_791;
      real_t tmp_793 = 0.5*tmp_501 - tmp_685 - tmp_729;
      real_t tmp_794 = 2*tmp_793;
      real_t tmp_795 = 1.0*tmp_503 - tmp_689 - tmp_733;
      real_t a_0_0 = tmp_134*(tmp_109*tmp_111 + tmp_121*tmp_123 + tmp_131*tmp_133) + tmp_181*(tmp_156*tmp_158 + tmp_168*tmp_170 + tmp_178*tmp_180) + tmp_228*(tmp_203*tmp_205 + tmp_215*tmp_217 + tmp_225*tmp_227) + tmp_87*(tmp_49*tmp_51 + tmp_61*tmp_63 + tmp_71*tmp_73);
      real_t a_0_1 = tmp_134*(tmp_110*tmp_236 + tmp_122*tmp_237 + tmp_131*tmp_238) + tmp_181*(tmp_157*tmp_241 + tmp_169*tmp_242 + tmp_178*tmp_243) + tmp_228*(tmp_204*tmp_246 + tmp_216*tmp_247 + tmp_225*tmp_248) + tmp_87*(tmp_231*tmp_50 + tmp_232*tmp_62 + tmp_233*tmp_71);
      real_t a_0_2 = tmp_134*(tmp_110*tmp_256 + tmp_122*tmp_257 + tmp_131*tmp_258) + tmp_181*(tmp_157*tmp_261 + tmp_169*tmp_262 + tmp_178*tmp_263) + tmp_228*(tmp_204*tmp_266 + tmp_216*tmp_267 + tmp_225*tmp_268) + tmp_87*(tmp_251*tmp_50 + tmp_252*tmp_62 + tmp_253*tmp_71);
      real_t a_0_3 = tmp_134*(tmp_110*tmp_276 + tmp_122*tmp_277 + tmp_131*tmp_278) + tmp_181*(tmp_157*tmp_281 + tmp_169*tmp_282 + tmp_178*tmp_283) + tmp_228*(tmp_204*tmp_286 + tmp_216*tmp_287 + tmp_225*tmp_288) + tmp_87*(tmp_271*tmp_50 + tmp_272*tmp_62 + tmp_273*tmp_71);
      real_t a_0_4 = tmp_134*(tmp_111*tmp_307 + tmp_123*tmp_310 + tmp_131*tmp_304) + tmp_181*(tmp_158*tmp_318 + tmp_170*tmp_321 + tmp_178*tmp_315) + tmp_228*(tmp_205*tmp_329 + tmp_217*tmp_332 + tmp_225*tmp_326) + tmp_87*(tmp_293*tmp_71 + tmp_296*tmp_51 + tmp_299*tmp_63);
      real_t a_0_5 = tmp_134*(tmp_111*tmp_349 + tmp_123*tmp_352 + tmp_131*tmp_346) + tmp_181*(tmp_158*tmp_359 + tmp_170*tmp_362 + tmp_178*tmp_356) + tmp_228*(tmp_205*tmp_369 + tmp_217*tmp_372 + tmp_225*tmp_366) + tmp_87*(tmp_336*tmp_71 + tmp_339*tmp_51 + tmp_342*tmp_63);
      real_t a_0_6 = tmp_134*(tmp_111*tmp_387 + tmp_123*tmp_390 + tmp_131*tmp_384) + tmp_181*(tmp_158*tmp_396 + tmp_170*tmp_399 + tmp_178*tmp_393) + tmp_228*(tmp_205*tmp_405 + tmp_217*tmp_408 + tmp_225*tmp_402) + tmp_87*(tmp_375*tmp_71 + tmp_378*tmp_51 + tmp_381*tmp_63);
      real_t a_0_7 = tmp_134*(tmp_111*tmp_422 + tmp_123*tmp_424 + tmp_131*tmp_426) + tmp_181*(tmp_158*tmp_431 + tmp_170*tmp_433 + tmp_178*tmp_435) + tmp_228*(tmp_205*tmp_440 + tmp_217*tmp_442 + tmp_225*tmp_444) + tmp_87*(tmp_413*tmp_51 + tmp_415*tmp_63 + tmp_417*tmp_71);
      real_t a_0_8 = tmp_134*(tmp_111*tmp_456 + tmp_123*tmp_458 + tmp_131*tmp_460) + tmp_181*(tmp_158*tmp_464 + tmp_170*tmp_466 + tmp_178*tmp_468) + tmp_228*(tmp_205*tmp_472 + tmp_217*tmp_474 + tmp_225*tmp_476) + tmp_87*(tmp_448*tmp_51 + tmp_450*tmp_63 + tmp_452*tmp_71);
      real_t a_0_9 = tmp_134*(tmp_111*tmp_486 + tmp_123*tmp_488 + tmp_131*tmp_490) + tmp_181*(tmp_158*tmp_493 + tmp_170*tmp_495 + tmp_178*tmp_497) + tmp_228*(tmp_205*tmp_500 + tmp_217*tmp_502 + tmp_225*tmp_504) + tmp_87*(tmp_479*tmp_51 + tmp_481*tmp_63 + tmp_483*tmp_71);
      real_t a_1_0 = tmp_134*(tmp_109*tmp_510 + tmp_121*tmp_511 + tmp_133*tmp_512) + tmp_181*(tmp_156*tmp_514 + tmp_168*tmp_515 + tmp_180*tmp_516) + tmp_228*(tmp_203*tmp_518 + tmp_215*tmp_519 + tmp_227*tmp_520) + tmp_87*(tmp_49*tmp_506 + tmp_507*tmp_61 + tmp_508*tmp_73);
      real_t a_1_1 = tmp_134*((tmp_107*tmp_107)*tmp_524 + (tmp_119*tmp_119)*tmp_524 + 32.0*(tmp_130*tmp_130)*tmp_523) + tmp_181*((tmp_154*tmp_154)*tmp_526 + (tmp_166*tmp_166)*tmp_526 + 32.0*(tmp_177*tmp_177)*tmp_525) + tmp_228*((tmp_201*tmp_201)*tmp_528 + (tmp_213*tmp_213)*tmp_528 + 32.0*(tmp_224*tmp_224)*tmp_527) + tmp_87*((tmp_47*tmp_47)*tmp_522 + 32.0*tmp_521*(tmp_70*tmp_70) + tmp_522*(tmp_59*tmp_59));
      real_t a_1_2 = tmp_529;
      real_t a_1_3 = tmp_542;
      real_t a_1_4 = tmp_134*(tmp_304*tmp_512 + tmp_307*tmp_510 + tmp_310*tmp_511) + tmp_181*(tmp_315*tmp_516 + tmp_318*tmp_514 + tmp_321*tmp_515) + tmp_228*(tmp_326*tmp_520 + tmp_329*tmp_518 + tmp_332*tmp_519) + tmp_87*(tmp_293*tmp_508 + tmp_296*tmp_506 + tmp_299*tmp_507);
      real_t a_1_5 = tmp_134*(tmp_346*tmp_512 + tmp_349*tmp_510 + tmp_352*tmp_511) + tmp_181*(tmp_356*tmp_516 + tmp_359*tmp_514 + tmp_362*tmp_515) + tmp_228*(tmp_366*tmp_520 + tmp_369*tmp_518 + tmp_372*tmp_519) + tmp_87*(tmp_336*tmp_508 + tmp_339*tmp_506 + tmp_342*tmp_507);
      real_t a_1_6 = tmp_134*(tmp_384*tmp_512 + tmp_387*tmp_510 + tmp_390*tmp_511) + tmp_181*(tmp_393*tmp_516 + tmp_396*tmp_514 + tmp_399*tmp_515) + tmp_228*(tmp_402*tmp_520 + tmp_405*tmp_518 + tmp_408*tmp_519) + tmp_87*(tmp_375*tmp_508 + tmp_378*tmp_506 + tmp_381*tmp_507);
      real_t a_1_7 = tmp_134*(tmp_422*tmp_510 + tmp_424*tmp_511 + tmp_426*tmp_512) + tmp_181*(tmp_431*tmp_514 + tmp_433*tmp_515 + tmp_435*tmp_516) + tmp_228*(tmp_440*tmp_518 + tmp_442*tmp_519 + tmp_444*tmp_520) + tmp_87*(tmp_413*tmp_506 + tmp_415*tmp_507 + tmp_417*tmp_508);
      real_t a_1_8 = tmp_134*(tmp_456*tmp_510 + tmp_458*tmp_511 + tmp_460*tmp_512) + tmp_181*(tmp_464*tmp_514 + tmp_466*tmp_515 + tmp_468*tmp_516) + tmp_228*(tmp_472*tmp_518 + tmp_474*tmp_519 + tmp_476*tmp_520) + tmp_87*(tmp_448*tmp_506 + tmp_450*tmp_507 + tmp_452*tmp_508);
      real_t a_1_9 = tmp_134*(tmp_486*tmp_510 + tmp_488*tmp_511 + tmp_490*tmp_512) + tmp_181*(tmp_493*tmp_514 + tmp_495*tmp_515 + tmp_497*tmp_516) + tmp_228*(tmp_500*tmp_518 + tmp_502*tmp_519 + tmp_504*tmp_520) + tmp_87*(tmp_479*tmp_506 + tmp_481*tmp_507 + tmp_483*tmp_508);
      real_t a_2_0 = tmp_134*(tmp_109*tmp_548 + tmp_121*tmp_549 + tmp_133*tmp_550) + tmp_181*(tmp_156*tmp_552 + tmp_168*tmp_553 + tmp_180*tmp_554) + tmp_228*(tmp_203*tmp_556 + tmp_215*tmp_557 + tmp_227*tmp_558) + tmp_87*(tmp_49*tmp_544 + tmp_545*tmp_61 + tmp_546*tmp_73);
      real_t a_2_1 = tmp_529;
      real_t a_2_2 = tmp_134*((tmp_105*tmp_105)*tmp_562 + (tmp_117*tmp_117)*tmp_562 + 32.0*(tmp_129*tmp_129)*tmp_561) + tmp_181*((tmp_152*tmp_152)*tmp_564 + (tmp_164*tmp_164)*tmp_564 + 32.0*(tmp_176*tmp_176)*tmp_563) + tmp_228*((tmp_199*tmp_199)*tmp_566 + (tmp_211*tmp_211)*tmp_566 + 32.0*(tmp_223*tmp_223)*tmp_565) + tmp_87*((tmp_42*tmp_42)*tmp_560 + 32.0*tmp_559*(tmp_69*tmp_69) + tmp_560*(tmp_57*tmp_57));
      real_t a_2_3 = tmp_567;
      real_t a_2_4 = tmp_134*(tmp_304*tmp_550 + tmp_307*tmp_548 + tmp_310*tmp_549) + tmp_181*(tmp_315*tmp_554 + tmp_318*tmp_552 + tmp_321*tmp_553) + tmp_228*(tmp_326*tmp_558 + tmp_329*tmp_556 + tmp_332*tmp_557) + tmp_87*(tmp_293*tmp_546 + tmp_296*tmp_544 + tmp_299*tmp_545);
      real_t a_2_5 = tmp_134*(tmp_346*tmp_550 + tmp_349*tmp_548 + tmp_352*tmp_549) + tmp_181*(tmp_356*tmp_554 + tmp_359*tmp_552 + tmp_362*tmp_553) + tmp_228*(tmp_366*tmp_558 + tmp_369*tmp_556 + tmp_372*tmp_557) + tmp_87*(tmp_336*tmp_546 + tmp_339*tmp_544 + tmp_342*tmp_545);
      real_t a_2_6 = tmp_134*(tmp_384*tmp_550 + tmp_387*tmp_548 + tmp_390*tmp_549) + tmp_181*(tmp_393*tmp_554 + tmp_396*tmp_552 + tmp_399*tmp_553) + tmp_228*(tmp_402*tmp_558 + tmp_405*tmp_556 + tmp_408*tmp_557) + tmp_87*(tmp_375*tmp_546 + tmp_378*tmp_544 + tmp_381*tmp_545);
      real_t a_2_7 = tmp_134*(tmp_422*tmp_548 + tmp_424*tmp_549 + tmp_426*tmp_550) + tmp_181*(tmp_431*tmp_552 + tmp_433*tmp_553 + tmp_435*tmp_554) + tmp_228*(tmp_440*tmp_556 + tmp_442*tmp_557 + tmp_444*tmp_558) + tmp_87*(tmp_413*tmp_544 + tmp_415*tmp_545 + tmp_417*tmp_546);
      real_t a_2_8 = tmp_134*(tmp_456*tmp_548 + tmp_458*tmp_549 + tmp_460*tmp_550) + tmp_181*(tmp_464*tmp_552 + tmp_466*tmp_553 + tmp_468*tmp_554) + tmp_228*(tmp_472*tmp_556 + tmp_474*tmp_557 + tmp_476*tmp_558) + tmp_87*(tmp_448*tmp_544 + tmp_450*tmp_545 + tmp_452*tmp_546);
      real_t a_2_9 = tmp_134*(tmp_486*tmp_548 + tmp_488*tmp_549 + tmp_490*tmp_550) + tmp_181*(tmp_493*tmp_552 + tmp_495*tmp_553 + tmp_497*tmp_554) + tmp_228*(tmp_500*tmp_556 + tmp_502*tmp_557 + tmp_504*tmp_558) + tmp_87*(tmp_479*tmp_544 + tmp_481*tmp_545 + tmp_483*tmp_546);
      real_t a_3_0 = tmp_134*(tmp_109*tmp_573 + tmp_121*tmp_574 + tmp_133*tmp_575) + tmp_181*(tmp_156*tmp_577 + tmp_168*tmp_578 + tmp_180*tmp_579) + tmp_228*(tmp_203*tmp_581 + tmp_215*tmp_582 + tmp_227*tmp_583) + tmp_87*(tmp_49*tmp_569 + tmp_570*tmp_61 + tmp_571*tmp_73);
      real_t a_3_1 = tmp_542;
      real_t a_3_2 = tmp_567;
      real_t a_3_3 = tmp_134*((tmp_103*tmp_103)*tmp_587 + (tmp_115*tmp_115)*tmp_587 + 32.0*(tmp_127*tmp_127)*tmp_586) + tmp_181*((tmp_150*tmp_150)*tmp_589 + (tmp_162*tmp_162)*tmp_589 + 32.0*(tmp_174*tmp_174)*tmp_588) + tmp_228*((tmp_197*tmp_197)*tmp_591 + (tmp_209*tmp_209)*tmp_591 + 32.0*(tmp_221*tmp_221)*tmp_590) + tmp_87*((tmp_37*tmp_37)*tmp_585 + (tmp_55*tmp_55)*tmp_585 + 32.0*tmp_584*(tmp_67*tmp_67));
      real_t a_3_4 = tmp_134*(tmp_304*tmp_575 + tmp_307*tmp_573 + tmp_310*tmp_574) + tmp_181*(tmp_315*tmp_579 + tmp_318*tmp_577 + tmp_321*tmp_578) + tmp_228*(tmp_326*tmp_583 + tmp_329*tmp_581 + tmp_332*tmp_582) + tmp_87*(tmp_293*tmp_571 + tmp_296*tmp_569 + tmp_299*tmp_570);
      real_t a_3_5 = tmp_134*(tmp_346*tmp_575 + tmp_349*tmp_573 + tmp_352*tmp_574) + tmp_181*(tmp_356*tmp_579 + tmp_359*tmp_577 + tmp_362*tmp_578) + tmp_228*(tmp_366*tmp_583 + tmp_369*tmp_581 + tmp_372*tmp_582) + tmp_87*(tmp_336*tmp_571 + tmp_339*tmp_569 + tmp_342*tmp_570);
      real_t a_3_6 = tmp_134*(tmp_384*tmp_575 + tmp_387*tmp_573 + tmp_390*tmp_574) + tmp_181*(tmp_393*tmp_579 + tmp_396*tmp_577 + tmp_399*tmp_578) + tmp_228*(tmp_402*tmp_583 + tmp_405*tmp_581 + tmp_408*tmp_582) + tmp_87*(tmp_375*tmp_571 + tmp_378*tmp_569 + tmp_381*tmp_570);
      real_t a_3_7 = tmp_134*(tmp_422*tmp_573 + tmp_424*tmp_574 + tmp_426*tmp_575) + tmp_181*(tmp_431*tmp_577 + tmp_433*tmp_578 + tmp_435*tmp_579) + tmp_228*(tmp_440*tmp_581 + tmp_442*tmp_582 + tmp_444*tmp_583) + tmp_87*(tmp_413*tmp_569 + tmp_415*tmp_570 + tmp_417*tmp_571);
      real_t a_3_8 = tmp_134*(tmp_456*tmp_573 + tmp_458*tmp_574 + tmp_460*tmp_575) + tmp_181*(tmp_464*tmp_577 + tmp_466*tmp_578 + tmp_468*tmp_579) + tmp_228*(tmp_472*tmp_581 + tmp_474*tmp_582 + tmp_476*tmp_583) + tmp_87*(tmp_448*tmp_569 + tmp_450*tmp_570 + tmp_452*tmp_571);
      real_t a_3_9 = tmp_134*(tmp_486*tmp_573 + tmp_488*tmp_574 + tmp_490*tmp_575) + tmp_181*(tmp_493*tmp_577 + tmp_495*tmp_578 + tmp_497*tmp_579) + tmp_228*(tmp_500*tmp_581 + tmp_502*tmp_582 + tmp_504*tmp_583) + tmp_87*(tmp_479*tmp_569 + tmp_481*tmp_570 + tmp_483*tmp_571);
      real_t a_4_0 = tmp_134*(tmp_109*tmp_610 + tmp_121*tmp_614 + tmp_133*tmp_617) + tmp_181*(tmp_156*tmp_623 + tmp_168*tmp_627 + tmp_180*tmp_630) + tmp_228*(tmp_203*tmp_636 + tmp_215*tmp_640 + tmp_227*tmp_643) + tmp_87*(tmp_49*tmp_597 + tmp_601*tmp_61 + tmp_604*tmp_73);
      real_t a_4_1 = tmp_134*(tmp_236*tmp_609 + tmp_237*tmp_613 + tmp_238*tmp_617) + tmp_181*(tmp_241*tmp_622 + tmp_242*tmp_626 + tmp_243*tmp_630) + tmp_228*(tmp_246*tmp_635 + tmp_247*tmp_639 + tmp_248*tmp_643) + tmp_87*(tmp_231*tmp_596 + tmp_232*tmp_600 + tmp_233*tmp_604);
      real_t a_4_2 = tmp_134*(tmp_256*tmp_609 + tmp_257*tmp_613 + tmp_258*tmp_617) + tmp_181*(tmp_261*tmp_622 + tmp_262*tmp_626 + tmp_263*tmp_630) + tmp_228*(tmp_266*tmp_635 + tmp_267*tmp_639 + tmp_268*tmp_643) + tmp_87*(tmp_251*tmp_596 + tmp_252*tmp_600 + tmp_253*tmp_604);
      real_t a_4_3 = tmp_134*(tmp_276*tmp_609 + tmp_277*tmp_613 + tmp_278*tmp_617) + tmp_181*(tmp_281*tmp_622 + tmp_282*tmp_626 + tmp_283*tmp_630) + tmp_228*(tmp_286*tmp_635 + tmp_287*tmp_639 + tmp_288*tmp_643) + tmp_87*(tmp_271*tmp_596 + tmp_272*tmp_600 + tmp_273*tmp_604);
      real_t a_4_4 = tmp_134*(tmp_304*tmp_617 + tmp_307*tmp_610 + tmp_310*tmp_614) + tmp_181*(tmp_315*tmp_630 + tmp_318*tmp_623 + tmp_321*tmp_627) + tmp_228*(tmp_326*tmp_643 + tmp_329*tmp_636 + tmp_332*tmp_640) + tmp_87*(tmp_293*tmp_604 + tmp_296*tmp_597 + tmp_299*tmp_601);
      real_t a_4_5 = tmp_134*(tmp_346*tmp_617 + tmp_349*tmp_610 + tmp_352*tmp_614) + tmp_181*(tmp_356*tmp_630 + tmp_359*tmp_623 + tmp_362*tmp_627) + tmp_228*(tmp_366*tmp_643 + tmp_369*tmp_636 + tmp_372*tmp_640) + tmp_87*(tmp_336*tmp_604 + tmp_339*tmp_597 + tmp_342*tmp_601);
      real_t a_4_6 = tmp_134*(tmp_384*tmp_617 + tmp_387*tmp_610 + tmp_390*tmp_614) + tmp_181*(tmp_393*tmp_630 + tmp_396*tmp_623 + tmp_399*tmp_627) + tmp_228*(tmp_402*tmp_643 + tmp_405*tmp_636 + tmp_408*tmp_640) + tmp_87*(tmp_375*tmp_604 + tmp_378*tmp_597 + tmp_381*tmp_601);
      real_t a_4_7 = tmp_134*(tmp_422*tmp_610 + tmp_424*tmp_614 + tmp_426*tmp_617) + tmp_181*(tmp_431*tmp_623 + tmp_433*tmp_627 + tmp_435*tmp_630) + tmp_228*(tmp_440*tmp_636 + tmp_442*tmp_640 + tmp_444*tmp_643) + tmp_87*(tmp_413*tmp_597 + tmp_415*tmp_601 + tmp_417*tmp_604);
      real_t a_4_8 = tmp_134*(tmp_456*tmp_610 + tmp_458*tmp_614 + tmp_460*tmp_617) + tmp_181*(tmp_464*tmp_623 + tmp_466*tmp_627 + tmp_468*tmp_630) + tmp_228*(tmp_472*tmp_636 + tmp_474*tmp_640 + tmp_476*tmp_643) + tmp_87*(tmp_448*tmp_597 + tmp_450*tmp_601 + tmp_452*tmp_604);
      real_t a_4_9 = tmp_134*(tmp_486*tmp_610 + tmp_488*tmp_614 + tmp_490*tmp_617) + tmp_181*(tmp_493*tmp_623 + tmp_495*tmp_627 + tmp_497*tmp_630) + tmp_228*(tmp_500*tmp_636 + tmp_502*tmp_640 + tmp_504*tmp_643) + tmp_87*(tmp_479*tmp_597 + tmp_481*tmp_601 + tmp_483*tmp_604);
      real_t a_5_0 = tmp_134*(tmp_109*tmp_660 + tmp_121*tmp_664 + tmp_133*tmp_667) + tmp_181*(tmp_156*tmp_672 + tmp_168*tmp_676 + tmp_180*tmp_679) + tmp_228*(tmp_203*tmp_684 + tmp_215*tmp_688 + tmp_227*tmp_691) + tmp_87*(tmp_49*tmp_648 + tmp_61*tmp_652 + tmp_655*tmp_73);
      real_t a_5_1 = tmp_134*(tmp_236*tmp_659 + tmp_237*tmp_663 + tmp_238*tmp_667) + tmp_181*(tmp_241*tmp_671 + tmp_242*tmp_675 + tmp_243*tmp_679) + tmp_228*(tmp_246*tmp_683 + tmp_247*tmp_687 + tmp_248*tmp_691) + tmp_87*(tmp_231*tmp_647 + tmp_232*tmp_651 + tmp_233*tmp_655);
      real_t a_5_2 = tmp_134*(tmp_256*tmp_659 + tmp_257*tmp_663 + tmp_258*tmp_667) + tmp_181*(tmp_261*tmp_671 + tmp_262*tmp_675 + tmp_263*tmp_679) + tmp_228*(tmp_266*tmp_683 + tmp_267*tmp_687 + tmp_268*tmp_691) + tmp_87*(tmp_251*tmp_647 + tmp_252*tmp_651 + tmp_253*tmp_655);
      real_t a_5_3 = tmp_134*(tmp_276*tmp_659 + tmp_277*tmp_663 + tmp_278*tmp_667) + tmp_181*(tmp_281*tmp_671 + tmp_282*tmp_675 + tmp_283*tmp_679) + tmp_228*(tmp_286*tmp_683 + tmp_287*tmp_687 + tmp_288*tmp_691) + tmp_87*(tmp_271*tmp_647 + tmp_272*tmp_651 + tmp_273*tmp_655);
      real_t a_5_4 = tmp_134*(tmp_304*tmp_667 + tmp_307*tmp_660 + tmp_310*tmp_664) + tmp_181*(tmp_315*tmp_679 + tmp_318*tmp_672 + tmp_321*tmp_676) + tmp_228*(tmp_326*tmp_691 + tmp_329*tmp_684 + tmp_332*tmp_688) + tmp_87*(tmp_293*tmp_655 + tmp_296*tmp_648 + tmp_299*tmp_652);
      real_t a_5_5 = tmp_134*(tmp_346*tmp_667 + tmp_349*tmp_660 + tmp_352*tmp_664) + tmp_181*(tmp_356*tmp_679 + tmp_359*tmp_672 + tmp_362*tmp_676) + tmp_228*(tmp_366*tmp_691 + tmp_369*tmp_684 + tmp_372*tmp_688) + tmp_87*(tmp_336*tmp_655 + tmp_339*tmp_648 + tmp_342*tmp_652);
      real_t a_5_6 = tmp_134*(tmp_384*tmp_667 + tmp_387*tmp_660 + tmp_390*tmp_664) + tmp_181*(tmp_393*tmp_679 + tmp_396*tmp_672 + tmp_399*tmp_676) + tmp_228*(tmp_402*tmp_691 + tmp_405*tmp_684 + tmp_408*tmp_688) + tmp_87*(tmp_375*tmp_655 + tmp_378*tmp_648 + tmp_381*tmp_652);
      real_t a_5_7 = tmp_134*(tmp_422*tmp_660 + tmp_424*tmp_664 + tmp_426*tmp_667) + tmp_181*(tmp_431*tmp_672 + tmp_433*tmp_676 + tmp_435*tmp_679) + tmp_228*(tmp_440*tmp_684 + tmp_442*tmp_688 + tmp_444*tmp_691) + tmp_87*(tmp_413*tmp_648 + tmp_415*tmp_652 + tmp_417*tmp_655);
      real_t a_5_8 = tmp_134*(tmp_456*tmp_660 + tmp_458*tmp_664 + tmp_460*tmp_667) + tmp_181*(tmp_464*tmp_672 + tmp_466*tmp_676 + tmp_468*tmp_679) + tmp_228*(tmp_472*tmp_684 + tmp_474*tmp_688 + tmp_476*tmp_691) + tmp_87*(tmp_448*tmp_648 + tmp_450*tmp_652 + tmp_452*tmp_655);
      real_t a_5_9 = tmp_134*(tmp_486*tmp_660 + tmp_488*tmp_664 + tmp_490*tmp_667) + tmp_181*(tmp_493*tmp_672 + tmp_495*tmp_676 + tmp_497*tmp_679) + tmp_228*(tmp_500*tmp_684 + tmp_502*tmp_688 + tmp_504*tmp_691) + tmp_87*(tmp_479*tmp_648 + tmp_481*tmp_652 + tmp_483*tmp_655);
      real_t a_6_0 = tmp_134*(tmp_109*tmp_706 + tmp_121*tmp_710 + tmp_133*tmp_713) + tmp_181*(tmp_156*tmp_717 + tmp_168*tmp_721 + tmp_180*tmp_724) + tmp_228*(tmp_203*tmp_728 + tmp_215*tmp_732 + tmp_227*tmp_735) + tmp_87*(tmp_49*tmp_695 + tmp_61*tmp_699 + tmp_702*tmp_73);
      real_t a_6_1 = tmp_134*(tmp_236*tmp_705 + tmp_237*tmp_709 + tmp_238*tmp_713) + tmp_181*(tmp_241*tmp_716 + tmp_242*tmp_720 + tmp_243*tmp_724) + tmp_228*(tmp_246*tmp_727 + tmp_247*tmp_731 + tmp_248*tmp_735) + tmp_87*(tmp_231*tmp_694 + tmp_232*tmp_698 + tmp_233*tmp_702);
      real_t a_6_2 = tmp_134*(tmp_256*tmp_705 + tmp_257*tmp_709 + tmp_258*tmp_713) + tmp_181*(tmp_261*tmp_716 + tmp_262*tmp_720 + tmp_263*tmp_724) + tmp_228*(tmp_266*tmp_727 + tmp_267*tmp_731 + tmp_268*tmp_735) + tmp_87*(tmp_251*tmp_694 + tmp_252*tmp_698 + tmp_253*tmp_702);
      real_t a_6_3 = tmp_134*(tmp_276*tmp_705 + tmp_277*tmp_709 + tmp_278*tmp_713) + tmp_181*(tmp_281*tmp_716 + tmp_282*tmp_720 + tmp_283*tmp_724) + tmp_228*(tmp_286*tmp_727 + tmp_287*tmp_731 + tmp_288*tmp_735) + tmp_87*(tmp_271*tmp_694 + tmp_272*tmp_698 + tmp_273*tmp_702);
      real_t a_6_4 = tmp_134*(tmp_304*tmp_713 + tmp_307*tmp_706 + tmp_310*tmp_710) + tmp_181*(tmp_315*tmp_724 + tmp_318*tmp_717 + tmp_321*tmp_721) + tmp_228*(tmp_326*tmp_735 + tmp_329*tmp_728 + tmp_332*tmp_732) + tmp_87*(tmp_293*tmp_702 + tmp_296*tmp_695 + tmp_299*tmp_699);
      real_t a_6_5 = tmp_134*(tmp_346*tmp_713 + tmp_349*tmp_706 + tmp_352*tmp_710) + tmp_181*(tmp_356*tmp_724 + tmp_359*tmp_717 + tmp_362*tmp_721) + tmp_228*(tmp_366*tmp_735 + tmp_369*tmp_728 + tmp_372*tmp_732) + tmp_87*(tmp_336*tmp_702 + tmp_339*tmp_695 + tmp_342*tmp_699);
      real_t a_6_6 = tmp_134*(tmp_384*tmp_713 + tmp_387*tmp_706 + tmp_390*tmp_710) + tmp_181*(tmp_393*tmp_724 + tmp_396*tmp_717 + tmp_399*tmp_721) + tmp_228*(tmp_402*tmp_735 + tmp_405*tmp_728 + tmp_408*tmp_732) + tmp_87*(tmp_375*tmp_702 + tmp_378*tmp_695 + tmp_381*tmp_699);
      real_t a_6_7 = tmp_134*(tmp_422*tmp_706 + tmp_424*tmp_710 + tmp_426*tmp_713) + tmp_181*(tmp_431*tmp_717 + tmp_433*tmp_721 + tmp_435*tmp_724) + tmp_228*(tmp_440*tmp_728 + tmp_442*tmp_732 + tmp_444*tmp_735) + tmp_87*(tmp_413*tmp_695 + tmp_415*tmp_699 + tmp_417*tmp_702);
      real_t a_6_8 = tmp_134*(tmp_456*tmp_706 + tmp_458*tmp_710 + tmp_460*tmp_713) + tmp_181*(tmp_464*tmp_717 + tmp_466*tmp_721 + tmp_468*tmp_724) + tmp_228*(tmp_472*tmp_728 + tmp_474*tmp_732 + tmp_476*tmp_735) + tmp_87*(tmp_448*tmp_695 + tmp_450*tmp_699 + tmp_452*tmp_702);
      real_t a_6_9 = tmp_134*(tmp_486*tmp_706 + tmp_488*tmp_710 + tmp_490*tmp_713) + tmp_181*(tmp_493*tmp_717 + tmp_495*tmp_721 + tmp_497*tmp_724) + tmp_228*(tmp_500*tmp_728 + tmp_502*tmp_732 + tmp_504*tmp_735) + tmp_87*(tmp_479*tmp_695 + tmp_481*tmp_699 + tmp_483*tmp_702);
      real_t a_7_0 = tmp_134*(tmp_109*tmp_742 + tmp_121*tmp_744 + tmp_133*tmp_745) + tmp_181*(tmp_156*tmp_747 + tmp_168*tmp_749 + tmp_180*tmp_750) + tmp_228*(tmp_203*tmp_752 + tmp_215*tmp_754 + tmp_227*tmp_755) + tmp_87*(tmp_49*tmp_737 + tmp_61*tmp_739 + tmp_73*tmp_740);
      real_t a_7_1 = tmp_134*(tmp_236*tmp_741 + tmp_237*tmp_743 + tmp_238*tmp_745) + tmp_181*(tmp_241*tmp_746 + tmp_242*tmp_748 + tmp_243*tmp_750) + tmp_228*(tmp_246*tmp_751 + tmp_247*tmp_753 + tmp_248*tmp_755) + tmp_87*(tmp_231*tmp_736 + tmp_232*tmp_738 + tmp_233*tmp_740);
      real_t a_7_2 = tmp_134*(tmp_256*tmp_741 + tmp_257*tmp_743 + tmp_258*tmp_745) + tmp_181*(tmp_261*tmp_746 + tmp_262*tmp_748 + tmp_263*tmp_750) + tmp_228*(tmp_266*tmp_751 + tmp_267*tmp_753 + tmp_268*tmp_755) + tmp_87*(tmp_251*tmp_736 + tmp_252*tmp_738 + tmp_253*tmp_740);
      real_t a_7_3 = tmp_134*(tmp_276*tmp_741 + tmp_277*tmp_743 + tmp_278*tmp_745) + tmp_181*(tmp_281*tmp_746 + tmp_282*tmp_748 + tmp_283*tmp_750) + tmp_228*(tmp_286*tmp_751 + tmp_287*tmp_753 + tmp_288*tmp_755) + tmp_87*(tmp_271*tmp_736 + tmp_272*tmp_738 + tmp_273*tmp_740);
      real_t a_7_4 = tmp_134*(tmp_304*tmp_745 + tmp_307*tmp_742 + tmp_310*tmp_744) + tmp_181*(tmp_315*tmp_750 + tmp_318*tmp_747 + tmp_321*tmp_749) + tmp_228*(tmp_326*tmp_755 + tmp_329*tmp_752 + tmp_332*tmp_754) + tmp_87*(tmp_293*tmp_740 + tmp_296*tmp_737 + tmp_299*tmp_739);
      real_t a_7_5 = tmp_134*(tmp_346*tmp_745 + tmp_349*tmp_742 + tmp_352*tmp_744) + tmp_181*(tmp_356*tmp_750 + tmp_359*tmp_747 + tmp_362*tmp_749) + tmp_228*(tmp_366*tmp_755 + tmp_369*tmp_752 + tmp_372*tmp_754) + tmp_87*(tmp_336*tmp_740 + tmp_339*tmp_737 + tmp_342*tmp_739);
      real_t a_7_6 = tmp_134*(tmp_384*tmp_745 + tmp_387*tmp_742 + tmp_390*tmp_744) + tmp_181*(tmp_393*tmp_750 + tmp_396*tmp_747 + tmp_399*tmp_749) + tmp_228*(tmp_402*tmp_755 + tmp_405*tmp_752 + tmp_408*tmp_754) + tmp_87*(tmp_375*tmp_740 + tmp_378*tmp_737 + tmp_381*tmp_739);
      real_t a_7_7 = tmp_134*(tmp_422*tmp_742 + tmp_424*tmp_744 + tmp_426*tmp_745) + tmp_181*(tmp_431*tmp_747 + tmp_433*tmp_749 + tmp_435*tmp_750) + tmp_228*(tmp_440*tmp_752 + tmp_442*tmp_754 + tmp_444*tmp_755) + tmp_87*(tmp_413*tmp_737 + tmp_415*tmp_739 + tmp_417*tmp_740);
      real_t a_7_8 = tmp_134*(tmp_456*tmp_742 + tmp_458*tmp_744 + tmp_460*tmp_745) + tmp_181*(tmp_464*tmp_747 + tmp_466*tmp_749 + tmp_468*tmp_750) + tmp_228*(tmp_472*tmp_752 + tmp_474*tmp_754 + tmp_476*tmp_755) + tmp_87*(tmp_448*tmp_737 + tmp_450*tmp_739 + tmp_452*tmp_740);
      real_t a_7_9 = tmp_134*(tmp_486*tmp_742 + tmp_488*tmp_744 + tmp_490*tmp_745) + tmp_181*(tmp_493*tmp_747 + tmp_495*tmp_749 + tmp_497*tmp_750) + tmp_228*(tmp_500*tmp_752 + tmp_502*tmp_754 + tmp_504*tmp_755) + tmp_87*(tmp_479*tmp_737 + tmp_481*tmp_739 + tmp_483*tmp_740);
      real_t a_8_0 = tmp_134*(tmp_109*tmp_762 + tmp_121*tmp_764 + tmp_133*tmp_765) + tmp_181*(tmp_156*tmp_767 + tmp_168*tmp_769 + tmp_180*tmp_770) + tmp_228*(tmp_203*tmp_772 + tmp_215*tmp_774 + tmp_227*tmp_775) + tmp_87*(tmp_49*tmp_757 + tmp_61*tmp_759 + tmp_73*tmp_760);
      real_t a_8_1 = tmp_134*(tmp_236*tmp_761 + tmp_237*tmp_763 + tmp_238*tmp_765) + tmp_181*(tmp_241*tmp_766 + tmp_242*tmp_768 + tmp_243*tmp_770) + tmp_228*(tmp_246*tmp_771 + tmp_247*tmp_773 + tmp_248*tmp_775) + tmp_87*(tmp_231*tmp_756 + tmp_232*tmp_758 + tmp_233*tmp_760);
      real_t a_8_2 = tmp_134*(tmp_256*tmp_761 + tmp_257*tmp_763 + tmp_258*tmp_765) + tmp_181*(tmp_261*tmp_766 + tmp_262*tmp_768 + tmp_263*tmp_770) + tmp_228*(tmp_266*tmp_771 + tmp_267*tmp_773 + tmp_268*tmp_775) + tmp_87*(tmp_251*tmp_756 + tmp_252*tmp_758 + tmp_253*tmp_760);
      real_t a_8_3 = tmp_134*(tmp_276*tmp_761 + tmp_277*tmp_763 + tmp_278*tmp_765) + tmp_181*(tmp_281*tmp_766 + tmp_282*tmp_768 + tmp_283*tmp_770) + tmp_228*(tmp_286*tmp_771 + tmp_287*tmp_773 + tmp_288*tmp_775) + tmp_87*(tmp_271*tmp_756 + tmp_272*tmp_758 + tmp_273*tmp_760);
      real_t a_8_4 = tmp_134*(tmp_304*tmp_765 + tmp_307*tmp_762 + tmp_310*tmp_764) + tmp_181*(tmp_315*tmp_770 + tmp_318*tmp_767 + tmp_321*tmp_769) + tmp_228*(tmp_326*tmp_775 + tmp_329*tmp_772 + tmp_332*tmp_774) + tmp_87*(tmp_293*tmp_760 + tmp_296*tmp_757 + tmp_299*tmp_759);
      real_t a_8_5 = tmp_134*(tmp_346*tmp_765 + tmp_349*tmp_762 + tmp_352*tmp_764) + tmp_181*(tmp_356*tmp_770 + tmp_359*tmp_767 + tmp_362*tmp_769) + tmp_228*(tmp_366*tmp_775 + tmp_369*tmp_772 + tmp_372*tmp_774) + tmp_87*(tmp_336*tmp_760 + tmp_339*tmp_757 + tmp_342*tmp_759);
      real_t a_8_6 = tmp_134*(tmp_384*tmp_765 + tmp_387*tmp_762 + tmp_390*tmp_764) + tmp_181*(tmp_393*tmp_770 + tmp_396*tmp_767 + tmp_399*tmp_769) + tmp_228*(tmp_402*tmp_775 + tmp_405*tmp_772 + tmp_408*tmp_774) + tmp_87*(tmp_375*tmp_760 + tmp_378*tmp_757 + tmp_381*tmp_759);
      real_t a_8_7 = tmp_134*(tmp_422*tmp_762 + tmp_424*tmp_764 + tmp_426*tmp_765) + tmp_181*(tmp_431*tmp_767 + tmp_433*tmp_769 + tmp_435*tmp_770) + tmp_228*(tmp_440*tmp_772 + tmp_442*tmp_774 + tmp_444*tmp_775) + tmp_87*(tmp_413*tmp_757 + tmp_415*tmp_759 + tmp_417*tmp_760);
      real_t a_8_8 = tmp_134*(tmp_456*tmp_762 + tmp_458*tmp_764 + tmp_460*tmp_765) + tmp_181*(tmp_464*tmp_767 + tmp_466*tmp_769 + tmp_468*tmp_770) + tmp_228*(tmp_472*tmp_772 + tmp_474*tmp_774 + tmp_476*tmp_775) + tmp_87*(tmp_448*tmp_757 + tmp_450*tmp_759 + tmp_452*tmp_760);
      real_t a_8_9 = tmp_134*(tmp_486*tmp_762 + tmp_488*tmp_764 + tmp_490*tmp_765) + tmp_181*(tmp_493*tmp_767 + tmp_495*tmp_769 + tmp_497*tmp_770) + tmp_228*(tmp_500*tmp_772 + tmp_502*tmp_774 + tmp_504*tmp_775) + tmp_87*(tmp_479*tmp_757 + tmp_481*tmp_759 + tmp_483*tmp_760);
      real_t a_9_0 = tmp_134*(tmp_109*tmp_782 + tmp_121*tmp_784 + tmp_133*tmp_785) + tmp_181*(tmp_156*tmp_787 + tmp_168*tmp_789 + tmp_180*tmp_790) + tmp_228*(tmp_203*tmp_792 + tmp_215*tmp_794 + tmp_227*tmp_795) + tmp_87*(tmp_49*tmp_777 + tmp_61*tmp_779 + tmp_73*tmp_780);
      real_t a_9_1 = tmp_134*(tmp_236*tmp_781 + tmp_237*tmp_783 + tmp_238*tmp_785) + tmp_181*(tmp_241*tmp_786 + tmp_242*tmp_788 + tmp_243*tmp_790) + tmp_228*(tmp_246*tmp_791 + tmp_247*tmp_793 + tmp_248*tmp_795) + tmp_87*(tmp_231*tmp_776 + tmp_232*tmp_778 + tmp_233*tmp_780);
      real_t a_9_2 = tmp_134*(tmp_256*tmp_781 + tmp_257*tmp_783 + tmp_258*tmp_785) + tmp_181*(tmp_261*tmp_786 + tmp_262*tmp_788 + tmp_263*tmp_790) + tmp_228*(tmp_266*tmp_791 + tmp_267*tmp_793 + tmp_268*tmp_795) + tmp_87*(tmp_251*tmp_776 + tmp_252*tmp_778 + tmp_253*tmp_780);
      real_t a_9_3 = tmp_134*(tmp_276*tmp_781 + tmp_277*tmp_783 + tmp_278*tmp_785) + tmp_181*(tmp_281*tmp_786 + tmp_282*tmp_788 + tmp_283*tmp_790) + tmp_228*(tmp_286*tmp_791 + tmp_287*tmp_793 + tmp_288*tmp_795) + tmp_87*(tmp_271*tmp_776 + tmp_272*tmp_778 + tmp_273*tmp_780);
      real_t a_9_4 = tmp_134*(tmp_304*tmp_785 + tmp_307*tmp_782 + tmp_310*tmp_784) + tmp_181*(tmp_315*tmp_790 + tmp_318*tmp_787 + tmp_321*tmp_789) + tmp_228*(tmp_326*tmp_795 + tmp_329*tmp_792 + tmp_332*tmp_794) + tmp_87*(tmp_293*tmp_780 + tmp_296*tmp_777 + tmp_299*tmp_779);
      real_t a_9_5 = tmp_134*(tmp_346*tmp_785 + tmp_349*tmp_782 + tmp_352*tmp_784) + tmp_181*(tmp_356*tmp_790 + tmp_359*tmp_787 + tmp_362*tmp_789) + tmp_228*(tmp_366*tmp_795 + tmp_369*tmp_792 + tmp_372*tmp_794) + tmp_87*(tmp_336*tmp_780 + tmp_339*tmp_777 + tmp_342*tmp_779);
      real_t a_9_6 = tmp_134*(tmp_384*tmp_785 + tmp_387*tmp_782 + tmp_390*tmp_784) + tmp_181*(tmp_393*tmp_790 + tmp_396*tmp_787 + tmp_399*tmp_789) + tmp_228*(tmp_402*tmp_795 + tmp_405*tmp_792 + tmp_408*tmp_794) + tmp_87*(tmp_375*tmp_780 + tmp_378*tmp_777 + tmp_381*tmp_779);
      real_t a_9_7 = tmp_134*(tmp_422*tmp_782 + tmp_424*tmp_784 + tmp_426*tmp_785) + tmp_181*(tmp_431*tmp_787 + tmp_433*tmp_789 + tmp_435*tmp_790) + tmp_228*(tmp_440*tmp_792 + tmp_442*tmp_794 + tmp_444*tmp_795) + tmp_87*(tmp_413*tmp_777 + tmp_415*tmp_779 + tmp_417*tmp_780);
      real_t a_9_8 = tmp_134*(tmp_456*tmp_782 + tmp_458*tmp_784 + tmp_460*tmp_785) + tmp_181*(tmp_464*tmp_787 + tmp_466*tmp_789 + tmp_468*tmp_790) + tmp_228*(tmp_472*tmp_792 + tmp_474*tmp_794 + tmp_476*tmp_795) + tmp_87*(tmp_448*tmp_777 + tmp_450*tmp_779 + tmp_452*tmp_780);
      real_t a_9_9 = tmp_134*(tmp_486*tmp_782 + tmp_488*tmp_784 + tmp_490*tmp_785) + tmp_181*(tmp_493*tmp_787 + tmp_495*tmp_789 + tmp_497*tmp_790) + tmp_228*(tmp_500*tmp_792 + tmp_502*tmp_794 + tmp_504*tmp_795) + tmp_87*(tmp_479*tmp_777 + tmp_481*tmp_779 + tmp_483*tmp_780);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_0_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_13 - Blending_DF_Tetrahedron_0_0*tmp_16 + Blending_DF_Tetrahedron_0_1*tmp_14 - Blending_DF_Tetrahedron_0_1*tmp_17 + Blending_DF_Tetrahedron_0_2*tmp_15 - Blending_DF_Tetrahedron_0_2*tmp_18;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_50 = 2*tmp_49;
      real_t tmp_51 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_54 = tmp_12*tmp_51 + tmp_33*tmp_52 + tmp_35*tmp_53;
      real_t tmp_55 = tmp_3*tmp_54;
      real_t tmp_56 = tmp_39*tmp_51 + tmp_40*tmp_52 + tmp_41*tmp_53;
      real_t tmp_57 = tmp_3*tmp_56;
      real_t tmp_58 = tmp_44*tmp_51 + tmp_45*tmp_52 + tmp_46*tmp_53;
      real_t tmp_59 = tmp_3*tmp_58;
      real_t tmp_60 = 0.5*tmp_55 + 0.5*tmp_57 + 0.5*tmp_59;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_63 = tmp_31*(tmp_14 - tmp_17);
      real_t tmp_64 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_65 = tmp_12*tmp_62 + tmp_33*tmp_63 + tmp_35*tmp_64;
      real_t tmp_66 = 1.0*tmp_3;
      real_t tmp_67 = tmp_39*tmp_62 + tmp_40*tmp_63 + tmp_41*tmp_64;
      real_t tmp_68 = tmp_44*tmp_62 + tmp_45*tmp_63 + tmp_46*tmp_64;
      real_t tmp_69 = tmp_65*tmp_66 + tmp_66*tmp_67 + tmp_66*tmp_68;
      real_t tmp_70 = 2.0*tmp_3;
      real_t tmp_71 = p_affine_0_0*p_affine_1_1;
      real_t tmp_72 = p_affine_0_0*p_affine_1_2;
      real_t tmp_73 = p_affine_2_1*p_affine_3_2;
      real_t tmp_74 = p_affine_0_1*p_affine_1_0;
      real_t tmp_75 = p_affine_0_1*p_affine_1_2;
      real_t tmp_76 = p_affine_2_2*p_affine_3_0;
      real_t tmp_77 = p_affine_0_2*p_affine_1_0;
      real_t tmp_78 = p_affine_0_2*p_affine_1_1;
      real_t tmp_79 = p_affine_2_0*p_affine_3_1;
      real_t tmp_80 = p_affine_2_2*p_affine_3_1;
      real_t tmp_81 = p_affine_2_0*p_affine_3_2;
      real_t tmp_82 = p_affine_2_1*p_affine_3_0;
      real_t tmp_83 = std::abs(p_affine_0_0*tmp_73 - p_affine_0_0*tmp_80 + p_affine_0_1*tmp_76 - p_affine_0_1*tmp_81 + p_affine_0_2*tmp_79 - p_affine_0_2*tmp_82 - p_affine_1_0*tmp_73 + p_affine_1_0*tmp_80 - p_affine_1_1*tmp_76 + p_affine_1_1*tmp_81 - p_affine_1_2*tmp_79 + p_affine_1_2*tmp_82 + p_affine_2_0*tmp_75 - p_affine_2_0*tmp_78 - p_affine_2_1*tmp_72 + p_affine_2_1*tmp_77 + p_affine_2_2*tmp_71 - p_affine_2_2*tmp_74 - p_affine_3_0*tmp_75 + p_affine_3_0*tmp_78 + p_affine_3_1*tmp_72 - p_affine_3_1*tmp_77 - p_affine_3_2*tmp_71 + p_affine_3_2*tmp_74);
      real_t tmp_84 = 0.041666666666666657*tmp_83*std::abs(tmp_19);
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 2.3416407864998732;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87 - 3.0;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_0*tmp_89 - Blending_DF_Tetrahedron_1_0*tmp_92 + Blending_DF_Tetrahedron_1_1*tmp_90 - Blending_DF_Tetrahedron_1_1*tmp_93 + Blending_DF_Tetrahedron_1_2*tmp_91 - Blending_DF_Tetrahedron_1_2*tmp_94;
      real_t tmp_96 = tmp_30/tmp_95;
      real_t tmp_97 = tmp_96*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_98 = tmp_96*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_99 = tmp_96*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_100 = tmp_12*tmp_97 + tmp_33*tmp_98 + tmp_35*tmp_99;
      real_t tmp_101 = tmp_100*tmp_88;
      real_t tmp_102 = tmp_39*tmp_97 + tmp_40*tmp_98 + tmp_41*tmp_99;
      real_t tmp_103 = tmp_102*tmp_88;
      real_t tmp_104 = tmp_44*tmp_97 + tmp_45*tmp_98 + tmp_46*tmp_99;
      real_t tmp_105 = tmp_104*tmp_88;
      real_t tmp_106 = 0.5*tmp_101 + 0.5*tmp_103 + 0.5*tmp_105;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = tmp_96*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_109 = tmp_96*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_110 = tmp_96*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_111 = tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35;
      real_t tmp_112 = tmp_111*tmp_88;
      real_t tmp_113 = tmp_108*tmp_39 + tmp_109*tmp_40 + tmp_110*tmp_41;
      real_t tmp_114 = tmp_113*tmp_88;
      real_t tmp_115 = tmp_108*tmp_44 + tmp_109*tmp_45 + tmp_110*tmp_46;
      real_t tmp_116 = tmp_115*tmp_88;
      real_t tmp_117 = 0.5*tmp_112 + 0.5*tmp_114 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = tmp_96*(tmp_91 - tmp_94);
      real_t tmp_120 = tmp_96*(tmp_90 - tmp_93);
      real_t tmp_121 = tmp_96*(tmp_89 - tmp_92);
      real_t tmp_122 = tmp_119*tmp_12 + tmp_120*tmp_33 + tmp_121*tmp_35;
      real_t tmp_123 = 1.0*tmp_88;
      real_t tmp_124 = tmp_119*tmp_39 + tmp_120*tmp_40 + tmp_121*tmp_41;
      real_t tmp_125 = tmp_119*tmp_44 + tmp_120*tmp_45 + tmp_121*tmp_46;
      real_t tmp_126 = tmp_122*tmp_123 + tmp_123*tmp_124 + tmp_123*tmp_125;
      real_t tmp_127 = 2.0*tmp_88;
      real_t tmp_128 = 0.041666666666666657*tmp_83*std::abs(tmp_95);
      real_t tmp_129 = 2.3416407864998732;
      real_t tmp_130 = 0.55278640450004235;
      real_t tmp_131 = 0.55278640450004235;
      real_t tmp_132 = tmp_129 + tmp_130 + tmp_131 - 3.0;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_134 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_135 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_136 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_138 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_0*tmp_133 - Blending_DF_Tetrahedron_2_0*tmp_136 + Blending_DF_Tetrahedron_2_1*tmp_134 - Blending_DF_Tetrahedron_2_1*tmp_137 + Blending_DF_Tetrahedron_2_2*tmp_135 - Blending_DF_Tetrahedron_2_2*tmp_138;
      real_t tmp_140 = tmp_30/tmp_139;
      real_t tmp_141 = tmp_140*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_142 = tmp_140*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_143 = tmp_140*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_144 = tmp_12*tmp_141 + tmp_142*tmp_33 + tmp_143*tmp_35;
      real_t tmp_145 = tmp_132*tmp_144;
      real_t tmp_146 = tmp_141*tmp_39 + tmp_142*tmp_40 + tmp_143*tmp_41;
      real_t tmp_147 = tmp_132*tmp_146;
      real_t tmp_148 = tmp_141*tmp_44 + tmp_142*tmp_45 + tmp_143*tmp_46;
      real_t tmp_149 = tmp_132*tmp_148;
      real_t tmp_150 = 0.5*tmp_145 + 0.5*tmp_147 + 0.5*tmp_149;
      real_t tmp_151 = 2*tmp_150;
      real_t tmp_152 = tmp_140*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_153 = tmp_140*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_154 = tmp_140*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_155 = tmp_12*tmp_152 + tmp_153*tmp_33 + tmp_154*tmp_35;
      real_t tmp_156 = tmp_132*tmp_155;
      real_t tmp_157 = tmp_152*tmp_39 + tmp_153*tmp_40 + tmp_154*tmp_41;
      real_t tmp_158 = tmp_132*tmp_157;
      real_t tmp_159 = tmp_152*tmp_44 + tmp_153*tmp_45 + tmp_154*tmp_46;
      real_t tmp_160 = tmp_132*tmp_159;
      real_t tmp_161 = 0.5*tmp_156 + 0.5*tmp_158 + 0.5*tmp_160;
      real_t tmp_162 = 2*tmp_161;
      real_t tmp_163 = tmp_140*(tmp_135 - tmp_138);
      real_t tmp_164 = tmp_140*(tmp_134 - tmp_137);
      real_t tmp_165 = tmp_140*(tmp_133 - tmp_136);
      real_t tmp_166 = tmp_12*tmp_163 + tmp_164*tmp_33 + tmp_165*tmp_35;
      real_t tmp_167 = 1.0*tmp_132;
      real_t tmp_168 = tmp_163*tmp_39 + tmp_164*tmp_40 + tmp_165*tmp_41;
      real_t tmp_169 = tmp_163*tmp_44 + tmp_164*tmp_45 + tmp_165*tmp_46;
      real_t tmp_170 = tmp_166*tmp_167 + tmp_167*tmp_168 + tmp_167*tmp_169;
      real_t tmp_171 = 2.0*tmp_132;
      real_t tmp_172 = 0.041666666666666657*tmp_83*std::abs(tmp_139);
      real_t tmp_173 = 0.55278640450004235;
      real_t tmp_174 = 0.55278640450004235;
      real_t tmp_175 = 0.55278640450004235;
      real_t tmp_176 = tmp_173 + tmp_174 + tmp_175 - 3.0;
      real_t tmp_177 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_178 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_179 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_180 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_181 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_182 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_183 = Blending_DF_Tetrahedron_3_0*tmp_177 - Blending_DF_Tetrahedron_3_0*tmp_180 + Blending_DF_Tetrahedron_3_1*tmp_178 - Blending_DF_Tetrahedron_3_1*tmp_181 + Blending_DF_Tetrahedron_3_2*tmp_179 - Blending_DF_Tetrahedron_3_2*tmp_182;
      real_t tmp_184 = tmp_30/tmp_183;
      real_t tmp_185 = tmp_184*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_186 = tmp_184*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_187 = tmp_184*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_188 = tmp_12*tmp_185 + tmp_186*tmp_33 + tmp_187*tmp_35;
      real_t tmp_189 = tmp_176*tmp_188;
      real_t tmp_190 = tmp_185*tmp_39 + tmp_186*tmp_40 + tmp_187*tmp_41;
      real_t tmp_191 = tmp_176*tmp_190;
      real_t tmp_192 = tmp_185*tmp_44 + tmp_186*tmp_45 + tmp_187*tmp_46;
      real_t tmp_193 = tmp_176*tmp_192;
      real_t tmp_194 = 0.5*tmp_189 + 0.5*tmp_191 + 0.5*tmp_193;
      real_t tmp_195 = 2*tmp_194;
      real_t tmp_196 = tmp_184*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_197 = tmp_184*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_198 = tmp_184*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_199 = tmp_12*tmp_196 + tmp_197*tmp_33 + tmp_198*tmp_35;
      real_t tmp_200 = tmp_176*tmp_199;
      real_t tmp_201 = tmp_196*tmp_39 + tmp_197*tmp_40 + tmp_198*tmp_41;
      real_t tmp_202 = tmp_176*tmp_201;
      real_t tmp_203 = tmp_196*tmp_44 + tmp_197*tmp_45 + tmp_198*tmp_46;
      real_t tmp_204 = tmp_176*tmp_203;
      real_t tmp_205 = 0.5*tmp_200 + 0.5*tmp_202 + 0.5*tmp_204;
      real_t tmp_206 = 2*tmp_205;
      real_t tmp_207 = tmp_184*(tmp_179 - tmp_182);
      real_t tmp_208 = tmp_184*(tmp_178 - tmp_181);
      real_t tmp_209 = tmp_184*(tmp_177 - tmp_180);
      real_t tmp_210 = tmp_12*tmp_207 + tmp_208*tmp_33 + tmp_209*tmp_35;
      real_t tmp_211 = 1.0*tmp_176;
      real_t tmp_212 = tmp_207*tmp_39 + tmp_208*tmp_40 + tmp_209*tmp_41;
      real_t tmp_213 = tmp_207*tmp_44 + tmp_208*tmp_45 + tmp_209*tmp_46;
      real_t tmp_214 = tmp_210*tmp_211 + tmp_211*tmp_212 + tmp_211*tmp_213;
      real_t tmp_215 = 2.0*tmp_176;
      real_t tmp_216 = 0.041666666666666657*tmp_83*std::abs(tmp_183);
      real_t tmp_217 = tmp_0 - 1.0;
      real_t tmp_218 = 2.0*tmp_217;
      real_t tmp_219 = 2.0*tmp_68;
      real_t tmp_220 = tmp_85 - 1.0;
      real_t tmp_221 = 2.0*tmp_220;
      real_t tmp_222 = 2.0*tmp_125;
      real_t tmp_223 = tmp_129 - 1.0;
      real_t tmp_224 = 2.0*tmp_223;
      real_t tmp_225 = 2.0*tmp_169;
      real_t tmp_226 = tmp_173 - 1.0;
      real_t tmp_227 = 2.0*tmp_226;
      real_t tmp_228 = 2.0*tmp_213;
      real_t tmp_229 = tmp_1 - 1.0;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = 2.0*tmp_67;
      real_t tmp_232 = tmp_86 - 1.0;
      real_t tmp_233 = 2.0*tmp_232;
      real_t tmp_234 = 2.0*tmp_124;
      real_t tmp_235 = tmp_130 - 1.0;
      real_t tmp_236 = 2.0*tmp_235;
      real_t tmp_237 = 2.0*tmp_168;
      real_t tmp_238 = tmp_174 - 1.0;
      real_t tmp_239 = 2.0*tmp_238;
      real_t tmp_240 = 2.0*tmp_212;
      real_t tmp_241 = tmp_2 - 1.0;
      real_t tmp_242 = 2.0*tmp_241;
      real_t tmp_243 = 2.0*tmp_65;
      real_t tmp_244 = tmp_87 - 1.0;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = 2.0*tmp_122;
      real_t tmp_247 = tmp_131 - 1.0;
      real_t tmp_248 = 2.0*tmp_247;
      real_t tmp_249 = 2.0*tmp_166;
      real_t tmp_250 = tmp_175 - 1.0;
      real_t tmp_251 = 2.0*tmp_250;
      real_t tmp_252 = 2.0*tmp_210;
      real_t tmp_253 = 1.1055728090000847;
      real_t tmp_254 = tmp_253*tmp_65;
      real_t tmp_255 = 4.6832815729997463;
      real_t tmp_256 = tmp_255*tmp_67;
      real_t tmp_257 = tmp_1*tmp_37;
      real_t tmp_258 = tmp_2*tmp_42;
      real_t tmp_259 = tmp_1*tmp_54;
      real_t tmp_260 = tmp_2*tmp_56;
      real_t tmp_261 = 4.6832815729997463;
      real_t tmp_262 = tmp_122*tmp_261;
      real_t tmp_263 = 1.1055728090000847;
      real_t tmp_264 = tmp_124*tmp_263;
      real_t tmp_265 = tmp_100*tmp_86;
      real_t tmp_266 = tmp_102*tmp_87;
      real_t tmp_267 = tmp_111*tmp_86;
      real_t tmp_268 = tmp_113*tmp_87;
      real_t tmp_269 = 1.1055728090000847;
      real_t tmp_270 = tmp_166*tmp_269;
      real_t tmp_271 = 1.1055728090000847;
      real_t tmp_272 = tmp_168*tmp_271;
      real_t tmp_273 = tmp_130*tmp_144;
      real_t tmp_274 = tmp_131*tmp_146;
      real_t tmp_275 = tmp_130*tmp_155;
      real_t tmp_276 = tmp_131*tmp_157;
      real_t tmp_277 = 1.1055728090000847;
      real_t tmp_278 = tmp_210*tmp_277;
      real_t tmp_279 = 1.1055728090000847;
      real_t tmp_280 = tmp_212*tmp_279;
      real_t tmp_281 = tmp_174*tmp_188;
      real_t tmp_282 = tmp_175*tmp_190;
      real_t tmp_283 = tmp_174*tmp_199;
      real_t tmp_284 = tmp_175*tmp_201;
      real_t tmp_285 = 1.1055728090000847;
      real_t tmp_286 = tmp_285*tmp_65;
      real_t tmp_287 = tmp_255*tmp_68;
      real_t tmp_288 = tmp_0*tmp_37;
      real_t tmp_289 = tmp_2*tmp_47;
      real_t tmp_290 = tmp_0*tmp_54;
      real_t tmp_291 = tmp_2*tmp_58;
      real_t tmp_292 = 1.1055728090000847;
      real_t tmp_293 = tmp_122*tmp_292;
      real_t tmp_294 = tmp_125*tmp_263;
      real_t tmp_295 = tmp_100*tmp_85;
      real_t tmp_296 = tmp_104*tmp_87;
      real_t tmp_297 = tmp_111*tmp_85;
      real_t tmp_298 = tmp_115*tmp_87;
      real_t tmp_299 = 4.6832815729997463;
      real_t tmp_300 = tmp_166*tmp_299;
      real_t tmp_301 = tmp_169*tmp_271;
      real_t tmp_302 = tmp_129*tmp_144;
      real_t tmp_303 = tmp_131*tmp_148;
      real_t tmp_304 = tmp_129*tmp_155;
      real_t tmp_305 = tmp_131*tmp_159;
      real_t tmp_306 = 1.1055728090000847;
      real_t tmp_307 = tmp_210*tmp_306;
      real_t tmp_308 = tmp_213*tmp_279;
      real_t tmp_309 = tmp_173*tmp_188;
      real_t tmp_310 = tmp_175*tmp_192;
      real_t tmp_311 = tmp_173*tmp_199;
      real_t tmp_312 = tmp_175*tmp_203;
      real_t tmp_313 = tmp_285*tmp_67;
      real_t tmp_314 = tmp_253*tmp_68;
      real_t tmp_315 = tmp_0*tmp_42;
      real_t tmp_316 = tmp_1*tmp_47;
      real_t tmp_317 = tmp_0*tmp_56;
      real_t tmp_318 = tmp_1*tmp_58;
      real_t tmp_319 = tmp_124*tmp_292;
      real_t tmp_320 = tmp_125*tmp_261;
      real_t tmp_321 = tmp_102*tmp_85;
      real_t tmp_322 = tmp_104*tmp_86;
      real_t tmp_323 = tmp_113*tmp_85;
      real_t tmp_324 = tmp_115*tmp_86;
      real_t tmp_325 = tmp_168*tmp_299;
      real_t tmp_326 = tmp_169*tmp_269;
      real_t tmp_327 = tmp_129*tmp_146;
      real_t tmp_328 = tmp_130*tmp_148;
      real_t tmp_329 = tmp_129*tmp_157;
      real_t tmp_330 = tmp_130*tmp_159;
      real_t tmp_331 = tmp_212*tmp_306;
      real_t tmp_332 = tmp_213*tmp_277;
      real_t tmp_333 = tmp_173*tmp_190;
      real_t tmp_334 = tmp_174*tmp_192;
      real_t tmp_335 = tmp_173*tmp_201;
      real_t tmp_336 = tmp_174*tmp_203;
      real_t tmp_337 = -tmp_1;
      real_t tmp_338 = 4.0 - tmp_0;
      real_t tmp_339 = -tmp_255 + tmp_337 + tmp_338;
      real_t tmp_340 = -tmp_86;
      real_t tmp_341 = 4.0 - tmp_85;
      real_t tmp_342 = -tmp_263 + tmp_340 + tmp_341;
      real_t tmp_343 = -tmp_130;
      real_t tmp_344 = 4.0 - tmp_129;
      real_t tmp_345 = -tmp_271 + tmp_343 + tmp_344;
      real_t tmp_346 = -tmp_174;
      real_t tmp_347 = 4.0 - tmp_173;
      real_t tmp_348 = -tmp_279 + tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_2;
      real_t tmp_350 = -tmp_253 + tmp_338 + tmp_349;
      real_t tmp_351 = -tmp_87;
      real_t tmp_352 = -tmp_261 + tmp_341 + tmp_351;
      real_t tmp_353 = -tmp_131;
      real_t tmp_354 = -tmp_269 + tmp_344 + tmp_353;
      real_t tmp_355 = -tmp_175;
      real_t tmp_356 = -tmp_277 + tmp_347 + tmp_355;
      real_t tmp_357 = -tmp_285 + tmp_337 + tmp_349 + 4.0;
      real_t tmp_358 = -tmp_292 + tmp_340 + tmp_351 + 4.0;
      real_t tmp_359 = -tmp_299 + tmp_343 + tmp_353 + 4.0;
      real_t tmp_360 = -tmp_306 + tmp_346 + tmp_355 + 4.0;
      real_t a_0_0 = tmp_128*(tmp_107*(tmp_101 + tmp_103 + tmp_105) + tmp_118*(tmp_112 + tmp_114 + tmp_116) + tmp_126*(tmp_122*tmp_127 + tmp_124*tmp_127 + tmp_125*tmp_127)) + tmp_172*(tmp_151*(tmp_145 + tmp_147 + tmp_149) + tmp_162*(tmp_156 + tmp_158 + tmp_160) + tmp_170*(tmp_166*tmp_171 + tmp_168*tmp_171 + tmp_169*tmp_171)) + tmp_216*(tmp_195*(tmp_189 + tmp_191 + tmp_193) + tmp_206*(tmp_200 + tmp_202 + tmp_204) + tmp_214*(tmp_210*tmp_215 + tmp_212*tmp_215 + tmp_213*tmp_215)) + tmp_84*(tmp_50*(tmp_38 + tmp_43 + tmp_48) + tmp_61*(tmp_55 + tmp_57 + tmp_59) + tmp_69*(tmp_65*tmp_70 + tmp_67*tmp_70 + tmp_68*tmp_70));
      real_t a_0_1 = tmp_128*(tmp_104*tmp_106*tmp_221 + tmp_115*tmp_117*tmp_221 + tmp_126*tmp_220*tmp_222) + tmp_172*(tmp_148*tmp_150*tmp_224 + tmp_159*tmp_161*tmp_224 + tmp_170*tmp_223*tmp_225) + tmp_216*(tmp_192*tmp_194*tmp_227 + tmp_203*tmp_205*tmp_227 + tmp_214*tmp_226*tmp_228) + tmp_84*(tmp_217*tmp_219*tmp_69 + tmp_218*tmp_47*tmp_49 + tmp_218*tmp_58*tmp_60);
      real_t a_0_2 = tmp_128*(tmp_102*tmp_106*tmp_233 + tmp_113*tmp_117*tmp_233 + tmp_126*tmp_232*tmp_234) + tmp_172*(tmp_146*tmp_150*tmp_236 + tmp_157*tmp_161*tmp_236 + tmp_170*tmp_235*tmp_237) + tmp_216*(tmp_190*tmp_194*tmp_239 + tmp_201*tmp_205*tmp_239 + tmp_214*tmp_238*tmp_240) + tmp_84*(tmp_229*tmp_231*tmp_69 + tmp_230*tmp_42*tmp_49 + tmp_230*tmp_56*tmp_60);
      real_t a_0_3 = tmp_128*(tmp_100*tmp_106*tmp_245 + tmp_111*tmp_117*tmp_245 + tmp_126*tmp_244*tmp_246) + tmp_172*(tmp_144*tmp_150*tmp_248 + tmp_155*tmp_161*tmp_248 + tmp_170*tmp_247*tmp_249) + tmp_216*(tmp_188*tmp_194*tmp_251 + tmp_199*tmp_205*tmp_251 + tmp_214*tmp_250*tmp_252) + tmp_84*(tmp_241*tmp_243*tmp_69 + tmp_242*tmp_37*tmp_49 + tmp_242*tmp_54*tmp_60);
      real_t a_0_4 = tmp_128*(tmp_107*(tmp_265 + tmp_266) + tmp_118*(tmp_267 + tmp_268) + tmp_126*(tmp_262 + tmp_264)) + tmp_172*(tmp_151*(tmp_273 + tmp_274) + tmp_162*(tmp_275 + tmp_276) + tmp_170*(tmp_270 + tmp_272)) + tmp_216*(tmp_195*(tmp_281 + tmp_282) + tmp_206*(tmp_283 + tmp_284) + tmp_214*(tmp_278 + tmp_280)) + tmp_84*(tmp_50*(tmp_257 + tmp_258) + tmp_61*(tmp_259 + tmp_260) + tmp_69*(tmp_254 + tmp_256));
      real_t a_0_5 = tmp_128*(tmp_107*(tmp_295 + tmp_296) + tmp_118*(tmp_297 + tmp_298) + tmp_126*(tmp_293 + tmp_294)) + tmp_172*(tmp_151*(tmp_302 + tmp_303) + tmp_162*(tmp_304 + tmp_305) + tmp_170*(tmp_300 + tmp_301)) + tmp_216*(tmp_195*(tmp_309 + tmp_310) + tmp_206*(tmp_311 + tmp_312) + tmp_214*(tmp_307 + tmp_308)) + tmp_84*(tmp_50*(tmp_288 + tmp_289) + tmp_61*(tmp_290 + tmp_291) + tmp_69*(tmp_286 + tmp_287));
      real_t a_0_6 = tmp_128*(tmp_107*(tmp_321 + tmp_322) + tmp_118*(tmp_323 + tmp_324) + tmp_126*(tmp_319 + tmp_320)) + tmp_172*(tmp_151*(tmp_327 + tmp_328) + tmp_162*(tmp_329 + tmp_330) + tmp_170*(tmp_325 + tmp_326)) + tmp_216*(tmp_195*(tmp_333 + tmp_334) + tmp_206*(tmp_335 + tmp_336) + tmp_214*(tmp_331 + tmp_332)) + tmp_84*(tmp_50*(tmp_315 + tmp_316) + tmp_61*(tmp_317 + tmp_318) + tmp_69*(tmp_313 + tmp_314));
      real_t a_0_7 = tmp_128*(tmp_107*(tmp_100*tmp_342 - tmp_266 - tmp_296) + tmp_118*(tmp_111*tmp_342 - tmp_268 - tmp_298) + tmp_126*(tmp_246*tmp_342 - tmp_264 - tmp_294)) + tmp_172*(tmp_151*(tmp_144*tmp_345 - tmp_274 - tmp_303) + tmp_162*(tmp_155*tmp_345 - tmp_276 - tmp_305) + tmp_170*(tmp_249*tmp_345 - tmp_272 - tmp_301)) + tmp_216*(tmp_195*(tmp_188*tmp_348 - tmp_282 - tmp_310) + tmp_206*(tmp_199*tmp_348 - tmp_284 - tmp_312) + tmp_214*(tmp_252*tmp_348 - tmp_280 - tmp_308)) + tmp_84*(tmp_50*(-tmp_258 - tmp_289 + tmp_339*tmp_37) + tmp_61*(-tmp_260 - tmp_291 + tmp_339*tmp_54) + tmp_69*(tmp_243*tmp_339 - tmp_256 - tmp_287));
      real_t a_0_8 = tmp_128*(tmp_107*(tmp_102*tmp_352 - tmp_265 - tmp_322) + tmp_118*(tmp_113*tmp_352 - tmp_267 - tmp_324) + tmp_126*(tmp_234*tmp_352 - tmp_262 - tmp_320)) + tmp_172*(tmp_151*(tmp_146*tmp_354 - tmp_273 - tmp_328) + tmp_162*(tmp_157*tmp_354 - tmp_275 - tmp_330) + tmp_170*(tmp_237*tmp_354 - tmp_270 - tmp_326)) + tmp_216*(tmp_195*(tmp_190*tmp_356 - tmp_281 - tmp_334) + tmp_206*(tmp_201*tmp_356 - tmp_283 - tmp_336) + tmp_214*(tmp_240*tmp_356 - tmp_278 - tmp_332)) + tmp_84*(tmp_50*(-tmp_257 - tmp_316 + tmp_350*tmp_42) + tmp_61*(-tmp_259 - tmp_318 + tmp_350*tmp_56) + tmp_69*(tmp_231*tmp_350 - tmp_254 - tmp_314));
      real_t a_0_9 = tmp_128*(tmp_107*(tmp_104*tmp_358 - tmp_295 - tmp_321) + tmp_118*(tmp_115*tmp_358 - tmp_297 - tmp_323) + tmp_126*(tmp_222*tmp_358 - tmp_293 - tmp_319)) + tmp_172*(tmp_151*(tmp_148*tmp_359 - tmp_302 - tmp_327) + tmp_162*(tmp_159*tmp_359 - tmp_304 - tmp_329) + tmp_170*(tmp_225*tmp_359 - tmp_300 - tmp_325)) + tmp_216*(tmp_195*(tmp_192*tmp_360 - tmp_309 - tmp_333) + tmp_206*(tmp_203*tmp_360 - tmp_311 - tmp_335) + tmp_214*(tmp_228*tmp_360 - tmp_307 - tmp_331)) + tmp_84*(tmp_50*(-tmp_288 - tmp_315 + tmp_357*tmp_47) + tmp_61*(-tmp_290 - tmp_317 + tmp_357*tmp_58) + tmp_69*(tmp_219*tmp_357 - tmp_286 - tmp_313));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_0_blending_q2::Blending_DF_Triangle( real_t in_0, real_t in_1, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3 ) const
   {
      Point3D  mappedPt( in_0, in_1, 0 );
      Matrix2r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 1, 0 );
      *out_3 = DPsi( 1, 1 );
   }

   void p2_epsiloncc_0_0_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_0_1_blending_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_11*tmp_8 - tmp_12*tmp_14;
      real_t tmp_16 = tmp_13*tmp_2 + tmp_15*tmp_2;
      real_t tmp_17 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_18 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_19 = tmp_17*tmp_6 - tmp_18*tmp_3;
      real_t tmp_20 = 0.5*tmp_2;
      real_t tmp_21 = tmp_14*tmp_17 - tmp_18*tmp_8;
      real_t tmp_22 = tmp_19*tmp_20 + tmp_20*tmp_21;
      real_t tmp_23 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_24 = 2*tmp_23;
      real_t tmp_25 = 0.16666666666666666*std::abs(tmp_4);
      real_t tmp_26 = tmp_24*tmp_25;
      real_t tmp_27 = tmp_22*tmp_26;
      real_t tmp_28 = 2.6666666666666665;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_28 + tmp_29 - 3;
      real_t tmp_31 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_32 = tmp_9/tmp_31;
      real_t tmp_33 = Blending_DF_Triangle_1_3*tmp_32;
      real_t tmp_34 = Blending_DF_Triangle_1_2*tmp_32;
      real_t tmp_35 = tmp_3*tmp_33 - tmp_34*tmp_6;
      real_t tmp_36 = -tmp_14*tmp_34 + tmp_33*tmp_8;
      real_t tmp_37 = tmp_30*tmp_35 + tmp_30*tmp_36;
      real_t tmp_38 = Blending_DF_Triangle_1_0*tmp_32;
      real_t tmp_39 = Blending_DF_Triangle_1_1*tmp_32;
      real_t tmp_40 = -tmp_3*tmp_39 + tmp_38*tmp_6;
      real_t tmp_41 = 0.5*tmp_30;
      real_t tmp_42 = tmp_14*tmp_38 - tmp_39*tmp_8;
      real_t tmp_43 = tmp_40*tmp_41 + tmp_41*tmp_42;
      real_t tmp_44 = 0.16666666666666666*std::abs(tmp_31);
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_43*tmp_45;
      real_t tmp_47 = 0.66666666666666663;
      real_t tmp_48 = 0.66666666666666663;
      real_t tmp_49 = tmp_47 + tmp_48 - 3;
      real_t tmp_50 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_51 = tmp_9/tmp_50;
      real_t tmp_52 = Blending_DF_Triangle_2_3*tmp_51;
      real_t tmp_53 = Blending_DF_Triangle_2_2*tmp_51;
      real_t tmp_54 = tmp_3*tmp_52 - tmp_53*tmp_6;
      real_t tmp_55 = -tmp_14*tmp_53 + tmp_52*tmp_8;
      real_t tmp_56 = tmp_49*tmp_54 + tmp_49*tmp_55;
      real_t tmp_57 = Blending_DF_Triangle_2_0*tmp_51;
      real_t tmp_58 = Blending_DF_Triangle_2_1*tmp_51;
      real_t tmp_59 = -tmp_3*tmp_58 + tmp_57*tmp_6;
      real_t tmp_60 = 0.5*tmp_49;
      real_t tmp_61 = tmp_14*tmp_57 - tmp_58*tmp_8;
      real_t tmp_62 = tmp_59*tmp_60 + tmp_60*tmp_61;
      real_t tmp_63 = 0.16666666666666666*std::abs(tmp_50);
      real_t tmp_64 = tmp_24*tmp_63;
      real_t tmp_65 = tmp_62*tmp_64;
      real_t tmp_66 = 2.0*tmp_23;
      real_t tmp_67 = tmp_22*tmp_66;
      real_t tmp_68 = tmp_0 - 1;
      real_t tmp_69 = tmp_25*tmp_68;
      real_t tmp_70 = tmp_15*tmp_69;
      real_t tmp_71 = tmp_43*tmp_66;
      real_t tmp_72 = tmp_28 - 1;
      real_t tmp_73 = tmp_44*tmp_72;
      real_t tmp_74 = tmp_36*tmp_73;
      real_t tmp_75 = tmp_62*tmp_66;
      real_t tmp_76 = tmp_47 - 1;
      real_t tmp_77 = tmp_63*tmp_76;
      real_t tmp_78 = tmp_55*tmp_77;
      real_t tmp_79 = tmp_1 - 1;
      real_t tmp_80 = tmp_25*tmp_79;
      real_t tmp_81 = tmp_13*tmp_80;
      real_t tmp_82 = tmp_29 - 1;
      real_t tmp_83 = tmp_44*tmp_82;
      real_t tmp_84 = tmp_35*tmp_83;
      real_t tmp_85 = tmp_48 - 1;
      real_t tmp_86 = tmp_63*tmp_85;
      real_t tmp_87 = tmp_54*tmp_86;
      real_t tmp_88 = 0.66666666666666663*tmp_13;
      real_t tmp_89 = 2.6666666666666665*tmp_15;
      real_t tmp_90 = tmp_88 + tmp_89;
      real_t tmp_91 = 2.6666666666666665*tmp_35;
      real_t tmp_92 = 0.66666666666666663*tmp_36;
      real_t tmp_93 = tmp_91 + tmp_92;
      real_t tmp_94 = 0.66666666666666663*tmp_54;
      real_t tmp_95 = 0.66666666666666663*tmp_55;
      real_t tmp_96 = tmp_94 + tmp_95;
      real_t tmp_97 = -tmp_0 - 1.333333333333333;
      real_t tmp_98 = tmp_13*tmp_97 - tmp_89;
      real_t tmp_99 = 2.666666666666667 - tmp_28;
      real_t tmp_100 = tmp_35*tmp_99 - tmp_92;
      real_t tmp_101 = 2.666666666666667 - tmp_47;
      real_t tmp_102 = tmp_101*tmp_54 - tmp_95;
      real_t tmp_103 = 2.666666666666667 - tmp_1;
      real_t tmp_104 = tmp_103*tmp_15 - tmp_88;
      real_t tmp_105 = -tmp_29 - 1.333333333333333;
      real_t tmp_106 = tmp_105*tmp_36 - tmp_91;
      real_t tmp_107 = 2.666666666666667 - tmp_48;
      real_t tmp_108 = tmp_107*tmp_55 - tmp_94;
      real_t tmp_109 = 1.0*tmp_23;
      real_t tmp_110 = tmp_109*tmp_21;
      real_t tmp_111 = tmp_110*tmp_69;
      real_t tmp_112 = tmp_109*tmp_42;
      real_t tmp_113 = tmp_112*tmp_73;
      real_t tmp_114 = tmp_109*tmp_61;
      real_t tmp_115 = tmp_114*tmp_77;
      real_t tmp_116 = tmp_109*tmp_19;
      real_t tmp_117 = tmp_116*tmp_80;
      real_t tmp_118 = tmp_109*tmp_40;
      real_t tmp_119 = tmp_118*tmp_83;
      real_t tmp_120 = tmp_109*tmp_59;
      real_t tmp_121 = tmp_120*tmp_86;
      real_t tmp_122 = 0.33333333333333331*tmp_19;
      real_t tmp_123 = 1.3333333333333333*tmp_21;
      real_t tmp_124 = tmp_122 + tmp_123;
      real_t tmp_125 = tmp_124*tmp_26;
      real_t tmp_126 = 1.3333333333333333*tmp_40;
      real_t tmp_127 = 0.33333333333333331*tmp_42;
      real_t tmp_128 = tmp_126 + tmp_127;
      real_t tmp_129 = tmp_128*tmp_45;
      real_t tmp_130 = 0.33333333333333331*tmp_59;
      real_t tmp_131 = 0.33333333333333331*tmp_61;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_132*tmp_64;
      real_t tmp_134 = tmp_124*tmp_66;
      real_t tmp_135 = tmp_128*tmp_66;
      real_t tmp_136 = tmp_132*tmp_66;
      real_t tmp_137 = -tmp_123 + 0.5*tmp_19*tmp_97;
      real_t tmp_138 = tmp_137*tmp_26;
      real_t tmp_139 = -tmp_127 + 0.5*tmp_40*tmp_99;
      real_t tmp_140 = tmp_139*tmp_45;
      real_t tmp_141 = 0.5*tmp_101*tmp_59 - tmp_131;
      real_t tmp_142 = tmp_141*tmp_64;
      real_t tmp_143 = tmp_137*tmp_66;
      real_t tmp_144 = tmp_139*tmp_66;
      real_t tmp_145 = tmp_141*tmp_66;
      real_t tmp_146 = 0.5*tmp_103*tmp_21 - tmp_122;
      real_t tmp_147 = tmp_146*tmp_26;
      real_t tmp_148 = 0.5*tmp_105*tmp_42 - tmp_126;
      real_t tmp_149 = tmp_148*tmp_45;
      real_t tmp_150 = 0.5*tmp_107*tmp_61 - tmp_130;
      real_t tmp_151 = tmp_150*tmp_64;
      real_t tmp_152 = tmp_146*tmp_66;
      real_t tmp_153 = tmp_148*tmp_66;
      real_t tmp_154 = tmp_150*tmp_66;
      real_t a_0_0 = tmp_16*tmp_27 + tmp_37*tmp_46 + tmp_56*tmp_65;
      real_t a_0_1 = tmp_67*tmp_70 + tmp_71*tmp_74 + tmp_75*tmp_78;
      real_t a_0_2 = tmp_67*tmp_81 + tmp_71*tmp_84 + tmp_75*tmp_87;
      real_t a_0_3 = tmp_27*tmp_90 + tmp_46*tmp_93 + tmp_65*tmp_96;
      real_t a_0_4 = tmp_100*tmp_46 + tmp_102*tmp_65 + tmp_27*tmp_98;
      real_t a_0_5 = tmp_104*tmp_27 + tmp_106*tmp_46 + tmp_108*tmp_65;
      real_t a_1_0 = tmp_111*tmp_16 + tmp_113*tmp_37 + tmp_115*tmp_56;
      real_t a_1_1 = tmp_110*tmp_15*tmp_25*(tmp_68*tmp_68) + tmp_112*tmp_36*tmp_44*(tmp_72*tmp_72) + tmp_114*tmp_55*tmp_63*(tmp_76*tmp_76);
      real_t a_1_2 = tmp_111*tmp_13*tmp_79 + tmp_113*tmp_35*tmp_82 + tmp_115*tmp_54*tmp_85;
      real_t a_1_3 = tmp_111*tmp_90 + tmp_113*tmp_93 + tmp_115*tmp_96;
      real_t a_1_4 = tmp_100*tmp_113 + tmp_102*tmp_115 + tmp_111*tmp_98;
      real_t a_1_5 = tmp_104*tmp_111 + tmp_106*tmp_113 + tmp_108*tmp_115;
      real_t a_2_0 = tmp_117*tmp_16 + tmp_119*tmp_37 + tmp_121*tmp_56;
      real_t a_2_1 = tmp_116*tmp_70*tmp_79 + tmp_118*tmp_74*tmp_82 + tmp_120*tmp_78*tmp_85;
      real_t a_2_2 = tmp_116*tmp_13*tmp_25*(tmp_79*tmp_79) + tmp_118*tmp_35*tmp_44*(tmp_82*tmp_82) + tmp_120*tmp_54*tmp_63*(tmp_85*tmp_85);
      real_t a_2_3 = tmp_117*tmp_90 + tmp_119*tmp_93 + tmp_121*tmp_96;
      real_t a_2_4 = tmp_100*tmp_119 + tmp_102*tmp_121 + tmp_117*tmp_98;
      real_t a_2_5 = tmp_104*tmp_117 + tmp_106*tmp_119 + tmp_108*tmp_121;
      real_t a_3_0 = tmp_125*tmp_16 + tmp_129*tmp_37 + tmp_133*tmp_56;
      real_t a_3_1 = tmp_134*tmp_70 + tmp_135*tmp_74 + tmp_136*tmp_78;
      real_t a_3_2 = tmp_134*tmp_81 + tmp_135*tmp_84 + tmp_136*tmp_87;
      real_t a_3_3 = tmp_125*tmp_90 + tmp_129*tmp_93 + tmp_133*tmp_96;
      real_t a_3_4 = tmp_100*tmp_129 + tmp_102*tmp_133 + tmp_125*tmp_98;
      real_t a_3_5 = tmp_104*tmp_125 + tmp_106*tmp_129 + tmp_108*tmp_133;
      real_t a_4_0 = tmp_138*tmp_16 + tmp_140*tmp_37 + tmp_142*tmp_56;
      real_t a_4_1 = tmp_143*tmp_70 + tmp_144*tmp_74 + tmp_145*tmp_78;
      real_t a_4_2 = tmp_143*tmp_81 + tmp_144*tmp_84 + tmp_145*tmp_87;
      real_t a_4_3 = tmp_138*tmp_90 + tmp_140*tmp_93 + tmp_142*tmp_96;
      real_t a_4_4 = tmp_100*tmp_140 + tmp_102*tmp_142 + tmp_138*tmp_98;
      real_t a_4_5 = tmp_104*tmp_138 + tmp_106*tmp_140 + tmp_108*tmp_142;
      real_t a_5_0 = tmp_147*tmp_16 + tmp_149*tmp_37 + tmp_151*tmp_56;
      real_t a_5_1 = tmp_152*tmp_70 + tmp_153*tmp_74 + tmp_154*tmp_78;
      real_t a_5_2 = tmp_152*tmp_81 + tmp_153*tmp_84 + tmp_154*tmp_87;
      real_t a_5_3 = tmp_147*tmp_90 + tmp_149*tmp_93 + tmp_151*tmp_96;
      real_t a_5_4 = tmp_100*tmp_149 + tmp_102*tmp_151 + tmp_147*tmp_98;
      real_t a_5_5 = tmp_104*tmp_147 + tmp_106*tmp_149 + tmp_108*tmp_151;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_0_1_blending_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_11*tmp_8 - tmp_12*tmp_14;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 2*tmp_16;
      real_t tmp_18 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_19 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_20 = 0.5*tmp_2;
      real_t tmp_21 = 0.16666666666666666*(tmp_20*(tmp_14*tmp_18 - tmp_19*tmp_8) + tmp_20*(tmp_18*tmp_6 - tmp_19*tmp_3))*std::abs(tmp_4);
      real_t tmp_22 = tmp_17*tmp_21;
      real_t tmp_23 = 2.6666666666666665;
      real_t tmp_24 = 0.66666666666666663;
      real_t tmp_25 = tmp_23 + tmp_24 - 3;
      real_t tmp_26 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_27 = tmp_9/tmp_26;
      real_t tmp_28 = Blending_DF_Triangle_1_3*tmp_27;
      real_t tmp_29 = Blending_DF_Triangle_1_2*tmp_27;
      real_t tmp_30 = tmp_28*tmp_3 - tmp_29*tmp_6;
      real_t tmp_31 = -tmp_14*tmp_29 + tmp_28*tmp_8;
      real_t tmp_32 = Blending_DF_Triangle_1_0*tmp_27;
      real_t tmp_33 = Blending_DF_Triangle_1_1*tmp_27;
      real_t tmp_34 = 0.5*tmp_25;
      real_t tmp_35 = 0.16666666666666666*(tmp_34*(tmp_14*tmp_32 - tmp_33*tmp_8) + tmp_34*(-tmp_3*tmp_33 + tmp_32*tmp_6))*std::abs(tmp_26);
      real_t tmp_36 = tmp_17*tmp_35;
      real_t tmp_37 = 0.66666666666666663;
      real_t tmp_38 = 0.66666666666666663;
      real_t tmp_39 = tmp_37 + tmp_38 - 3;
      real_t tmp_40 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_41 = tmp_9/tmp_40;
      real_t tmp_42 = Blending_DF_Triangle_2_3*tmp_41;
      real_t tmp_43 = Blending_DF_Triangle_2_2*tmp_41;
      real_t tmp_44 = tmp_3*tmp_42 - tmp_43*tmp_6;
      real_t tmp_45 = -tmp_14*tmp_43 + tmp_42*tmp_8;
      real_t tmp_46 = Blending_DF_Triangle_2_0*tmp_41;
      real_t tmp_47 = Blending_DF_Triangle_2_1*tmp_41;
      real_t tmp_48 = 0.5*tmp_39;
      real_t tmp_49 = 0.16666666666666666*(tmp_48*(tmp_14*tmp_46 - tmp_47*tmp_8) + tmp_48*(-tmp_3*tmp_47 + tmp_46*tmp_6))*std::abs(tmp_40);
      real_t tmp_50 = tmp_17*tmp_49;
      real_t tmp_51 = 2.0*tmp_16;
      real_t tmp_52 = tmp_21*tmp_51;
      real_t tmp_53 = tmp_35*tmp_51;
      real_t tmp_54 = tmp_49*tmp_51;
      real_t tmp_55 = 0.66666666666666663*tmp_13;
      real_t tmp_56 = 2.6666666666666665*tmp_15;
      real_t tmp_57 = 2.6666666666666665*tmp_30;
      real_t tmp_58 = 0.66666666666666663*tmp_31;
      real_t tmp_59 = 0.66666666666666663*tmp_44;
      real_t tmp_60 = 0.66666666666666663*tmp_45;
      real_t a_0_0 = tmp_22*(tmp_13*tmp_2 + tmp_15*tmp_2) + tmp_36*(tmp_25*tmp_30 + tmp_25*tmp_31) + tmp_50*(tmp_39*tmp_44 + tmp_39*tmp_45);
      real_t a_0_1 = tmp_15*tmp_52*(tmp_0 - 1) + tmp_31*tmp_53*(tmp_23 - 1) + tmp_45*tmp_54*(tmp_37 - 1);
      real_t a_0_2 = tmp_13*tmp_52*(tmp_1 - 1) + tmp_30*tmp_53*(tmp_24 - 1) + tmp_44*tmp_54*(tmp_38 - 1);
      real_t a_0_3 = tmp_22*(tmp_55 + tmp_56) + tmp_36*(tmp_57 + tmp_58) + tmp_50*(tmp_59 + tmp_60);
      real_t a_0_4 = tmp_22*(tmp_13*(-tmp_0 - 1.333333333333333) - tmp_56) + tmp_36*(tmp_30*(2.666666666666667 - tmp_23) - tmp_58) + tmp_50*(tmp_44*(2.666666666666667 - tmp_37) - tmp_60);
      real_t a_0_5 = tmp_22*(tmp_15*(2.666666666666667 - tmp_1) - tmp_55) + tmp_36*(tmp_31*(-tmp_24 - 1.333333333333333) - tmp_57) + tmp_50*(tmp_45*(2.666666666666667 - tmp_38) - tmp_59);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_0_1_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_48 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_49 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_50 = tmp_12*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_19);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_0*tmp_78 - Blending_DF_Tetrahedron_1_0*tmp_80 + Blending_DF_Tetrahedron_1_1*tmp_79 - Blending_DF_Tetrahedron_1_1*tmp_81 + Blending_DF_Tetrahedron_1_2*tmp_76 - Blending_DF_Tetrahedron_1_2*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_79 - tmp_81);
      real_t tmp_86 = tmp_83*(tmp_78 - tmp_80);
      real_t tmp_87 = tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_92 = tmp_83*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_93 = tmp_83*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_94 = tmp_12*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_0*tmp_108 - Blending_DF_Tetrahedron_2_0*tmp_110 + Blending_DF_Tetrahedron_2_1*tmp_109 - Blending_DF_Tetrahedron_2_1*tmp_111 + Blending_DF_Tetrahedron_2_2*tmp_106 - Blending_DF_Tetrahedron_2_2*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_109 - tmp_111);
      real_t tmp_116 = tmp_113*(tmp_108 - tmp_110);
      real_t tmp_117 = tmp_114*tmp_12 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_122 = tmp_113*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_123 = tmp_113*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_124 = tmp_12*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_0*tmp_138 - Blending_DF_Tetrahedron_3_0*tmp_140 + Blending_DF_Tetrahedron_3_1*tmp_139 - Blending_DF_Tetrahedron_3_1*tmp_141 + Blending_DF_Tetrahedron_3_2*tmp_136 - Blending_DF_Tetrahedron_3_2*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_139 - tmp_141);
      real_t tmp_146 = tmp_143*(tmp_138 - tmp_140);
      real_t tmp_147 = tmp_12*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_152 = tmp_143*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_153 = tmp_143*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_154 = tmp_12*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_1_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_61 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_62 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_12*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_19);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_0*tmp_72 - Blending_DF_Tetrahedron_1_0*tmp_74 + Blending_DF_Tetrahedron_1_1*tmp_73 - Blending_DF_Tetrahedron_1_1*tmp_75 + Blending_DF_Tetrahedron_1_2*tmp_70 - Blending_DF_Tetrahedron_1_2*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_73 - tmp_75);
      real_t tmp_80 = tmp_77*(tmp_72 - tmp_74);
      real_t tmp_81 = tmp_12*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_85 = tmp_77*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_86 = tmp_77*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_0*tmp_96 - Blending_DF_Tetrahedron_2_0*tmp_98 + Blending_DF_Tetrahedron_2_1*tmp_97 - Blending_DF_Tetrahedron_2_1*tmp_99 + Blending_DF_Tetrahedron_2_2*tmp_94 - Blending_DF_Tetrahedron_2_2*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_97 - tmp_99);
      real_t tmp_104 = tmp_101*(tmp_96 - tmp_98);
      real_t tmp_105 = tmp_102*tmp_12 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_109 = tmp_101*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_110 = tmp_101*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_0*tmp_120 - Blending_DF_Tetrahedron_3_0*tmp_122 + Blending_DF_Tetrahedron_3_1*tmp_121 - Blending_DF_Tetrahedron_3_1*tmp_123 + Blending_DF_Tetrahedron_3_2*tmp_118 - Blending_DF_Tetrahedron_3_2*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_121 - tmp_123);
      real_t tmp_128 = tmp_125*(tmp_120 - tmp_122);
      real_t tmp_129 = tmp_12*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_133 = tmp_125*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_134 = tmp_125*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_12*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_1_blending_q2::Blending_DF_Triangle( real_t in_0, real_t in_1, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3 ) const
   {
      Point3D  mappedPt( in_0, in_1, 0 );
      Matrix2r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 1, 0 );
      *out_3 = DPsi( 1, 1 );
   }

   void p2_epsiloncc_0_1_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_0_2_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_0_2_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_48 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_49 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_50 = tmp_12*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_19);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_0*tmp_78 - Blending_DF_Tetrahedron_1_0*tmp_80 + Blending_DF_Tetrahedron_1_1*tmp_79 - Blending_DF_Tetrahedron_1_1*tmp_81 + Blending_DF_Tetrahedron_1_2*tmp_76 - Blending_DF_Tetrahedron_1_2*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_79 - tmp_81);
      real_t tmp_86 = tmp_83*(tmp_78 - tmp_80);
      real_t tmp_87 = tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_92 = tmp_83*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_93 = tmp_83*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_94 = tmp_12*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_0*tmp_108 - Blending_DF_Tetrahedron_2_0*tmp_110 + Blending_DF_Tetrahedron_2_1*tmp_109 - Blending_DF_Tetrahedron_2_1*tmp_111 + Blending_DF_Tetrahedron_2_2*tmp_106 - Blending_DF_Tetrahedron_2_2*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_109 - tmp_111);
      real_t tmp_116 = tmp_113*(tmp_108 - tmp_110);
      real_t tmp_117 = tmp_114*tmp_12 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_122 = tmp_113*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_123 = tmp_113*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_124 = tmp_12*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_0*tmp_138 - Blending_DF_Tetrahedron_3_0*tmp_140 + Blending_DF_Tetrahedron_3_1*tmp_139 - Blending_DF_Tetrahedron_3_1*tmp_141 + Blending_DF_Tetrahedron_3_2*tmp_136 - Blending_DF_Tetrahedron_3_2*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_139 - tmp_141);
      real_t tmp_146 = tmp_143*(tmp_138 - tmp_140);
      real_t tmp_147 = tmp_12*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_152 = tmp_143*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_153 = tmp_143*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_154 = tmp_12*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_0_2_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_0*tmp_15 - Blending_DF_Tetrahedron_0_0*tmp_17 + Blending_DF_Tetrahedron_0_1*tmp_16 - Blending_DF_Tetrahedron_0_1*tmp_18 + Blending_DF_Tetrahedron_0_2*tmp_13 - Blending_DF_Tetrahedron_0_2*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_18);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_17);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_61 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_62 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_12*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_19);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_0*tmp_72 - Blending_DF_Tetrahedron_1_0*tmp_74 + Blending_DF_Tetrahedron_1_1*tmp_73 - Blending_DF_Tetrahedron_1_1*tmp_75 + Blending_DF_Tetrahedron_1_2*tmp_70 - Blending_DF_Tetrahedron_1_2*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_73 - tmp_75);
      real_t tmp_80 = tmp_77*(tmp_72 - tmp_74);
      real_t tmp_81 = tmp_12*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_85 = tmp_77*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_86 = tmp_77*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_0*tmp_96 - Blending_DF_Tetrahedron_2_0*tmp_98 + Blending_DF_Tetrahedron_2_1*tmp_97 - Blending_DF_Tetrahedron_2_1*tmp_99 + Blending_DF_Tetrahedron_2_2*tmp_94 - Blending_DF_Tetrahedron_2_2*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_97 - tmp_99);
      real_t tmp_104 = tmp_101*(tmp_96 - tmp_98);
      real_t tmp_105 = tmp_102*tmp_12 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_109 = tmp_101*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_110 = tmp_101*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_0*tmp_120 - Blending_DF_Tetrahedron_3_0*tmp_122 + Blending_DF_Tetrahedron_3_1*tmp_121 - Blending_DF_Tetrahedron_3_1*tmp_123 + Blending_DF_Tetrahedron_3_2*tmp_118 - Blending_DF_Tetrahedron_3_2*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_121 - tmp_123);
      real_t tmp_128 = tmp_125*(tmp_120 - tmp_122);
      real_t tmp_129 = tmp_12*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_133 = tmp_125*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_134 = tmp_125*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_12*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_0_2_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_1_0_blending_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = 1.0 / (tmp_4*tmp_7 - (p_affine_1_1 + tmp_6)*(p_affine_2_0 + tmp_3));
      real_t tmp_9 = tmp_8/tmp_5;
      real_t tmp_10 = Blending_DF_Triangle_0_0*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = Blending_DF_Triangle_0_1*tmp_9;
      real_t tmp_13 = tmp_10*tmp_4 - tmp_11*tmp_12;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_10*tmp_14 - tmp_12*tmp_7;
      real_t tmp_16 = tmp_13*tmp_2 + tmp_15*tmp_2;
      real_t tmp_17 = Blending_DF_Triangle_0_3*tmp_9;
      real_t tmp_18 = Blending_DF_Triangle_0_2*tmp_9;
      real_t tmp_19 = tmp_11*tmp_17 - tmp_18*tmp_4;
      real_t tmp_20 = 0.5*tmp_2;
      real_t tmp_21 = -tmp_14*tmp_18 + tmp_17*tmp_7;
      real_t tmp_22 = tmp_19*tmp_20 + tmp_20*tmp_21;
      real_t tmp_23 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_24 = 2*tmp_23;
      real_t tmp_25 = 0.16666666666666666*std::abs(tmp_5);
      real_t tmp_26 = tmp_24*tmp_25;
      real_t tmp_27 = tmp_22*tmp_26;
      real_t tmp_28 = 2.6666666666666665;
      real_t tmp_29 = 0.66666666666666663;
      real_t tmp_30 = tmp_28 + tmp_29 - 3;
      real_t tmp_31 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_32 = tmp_8/tmp_31;
      real_t tmp_33 = Blending_DF_Triangle_1_0*tmp_32;
      real_t tmp_34 = Blending_DF_Triangle_1_1*tmp_32;
      real_t tmp_35 = -tmp_11*tmp_34 + tmp_33*tmp_4;
      real_t tmp_36 = tmp_14*tmp_33 - tmp_34*tmp_7;
      real_t tmp_37 = tmp_30*tmp_35 + tmp_30*tmp_36;
      real_t tmp_38 = Blending_DF_Triangle_1_3*tmp_32;
      real_t tmp_39 = Blending_DF_Triangle_1_2*tmp_32;
      real_t tmp_40 = tmp_11*tmp_38 - tmp_39*tmp_4;
      real_t tmp_41 = 0.5*tmp_30;
      real_t tmp_42 = -tmp_14*tmp_39 + tmp_38*tmp_7;
      real_t tmp_43 = tmp_40*tmp_41 + tmp_41*tmp_42;
      real_t tmp_44 = 0.16666666666666666*std::abs(tmp_31);
      real_t tmp_45 = tmp_24*tmp_44;
      real_t tmp_46 = tmp_43*tmp_45;
      real_t tmp_47 = 0.66666666666666663;
      real_t tmp_48 = 0.66666666666666663;
      real_t tmp_49 = tmp_47 + tmp_48 - 3;
      real_t tmp_50 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_51 = tmp_8/tmp_50;
      real_t tmp_52 = Blending_DF_Triangle_2_0*tmp_51;
      real_t tmp_53 = Blending_DF_Triangle_2_1*tmp_51;
      real_t tmp_54 = -tmp_11*tmp_53 + tmp_4*tmp_52;
      real_t tmp_55 = tmp_14*tmp_52 - tmp_53*tmp_7;
      real_t tmp_56 = tmp_49*tmp_54 + tmp_49*tmp_55;
      real_t tmp_57 = Blending_DF_Triangle_2_3*tmp_51;
      real_t tmp_58 = Blending_DF_Triangle_2_2*tmp_51;
      real_t tmp_59 = tmp_11*tmp_57 - tmp_4*tmp_58;
      real_t tmp_60 = 0.5*tmp_49;
      real_t tmp_61 = -tmp_14*tmp_58 + tmp_57*tmp_7;
      real_t tmp_62 = tmp_59*tmp_60 + tmp_60*tmp_61;
      real_t tmp_63 = 0.16666666666666666*std::abs(tmp_50);
      real_t tmp_64 = tmp_24*tmp_63;
      real_t tmp_65 = tmp_62*tmp_64;
      real_t tmp_66 = 2.0*tmp_23;
      real_t tmp_67 = tmp_22*tmp_66;
      real_t tmp_68 = tmp_0 - 1;
      real_t tmp_69 = tmp_25*tmp_68;
      real_t tmp_70 = tmp_15*tmp_69;
      real_t tmp_71 = tmp_43*tmp_66;
      real_t tmp_72 = tmp_28 - 1;
      real_t tmp_73 = tmp_44*tmp_72;
      real_t tmp_74 = tmp_36*tmp_73;
      real_t tmp_75 = tmp_62*tmp_66;
      real_t tmp_76 = tmp_47 - 1;
      real_t tmp_77 = tmp_63*tmp_76;
      real_t tmp_78 = tmp_55*tmp_77;
      real_t tmp_79 = tmp_1 - 1;
      real_t tmp_80 = tmp_25*tmp_79;
      real_t tmp_81 = tmp_13*tmp_80;
      real_t tmp_82 = tmp_29 - 1;
      real_t tmp_83 = tmp_44*tmp_82;
      real_t tmp_84 = tmp_35*tmp_83;
      real_t tmp_85 = tmp_48 - 1;
      real_t tmp_86 = tmp_63*tmp_85;
      real_t tmp_87 = tmp_54*tmp_86;
      real_t tmp_88 = 0.66666666666666663*tmp_13;
      real_t tmp_89 = 2.6666666666666665*tmp_15;
      real_t tmp_90 = tmp_88 + tmp_89;
      real_t tmp_91 = 2.6666666666666665*tmp_35;
      real_t tmp_92 = 0.66666666666666663*tmp_36;
      real_t tmp_93 = tmp_91 + tmp_92;
      real_t tmp_94 = 0.66666666666666663*tmp_54;
      real_t tmp_95 = 0.66666666666666663*tmp_55;
      real_t tmp_96 = tmp_94 + tmp_95;
      real_t tmp_97 = -tmp_0 - 1.333333333333333;
      real_t tmp_98 = tmp_13*tmp_97 - tmp_89;
      real_t tmp_99 = 2.666666666666667 - tmp_28;
      real_t tmp_100 = tmp_35*tmp_99 - tmp_92;
      real_t tmp_101 = 2.666666666666667 - tmp_47;
      real_t tmp_102 = tmp_101*tmp_54 - tmp_95;
      real_t tmp_103 = 2.666666666666667 - tmp_1;
      real_t tmp_104 = tmp_103*tmp_15 - tmp_88;
      real_t tmp_105 = -tmp_29 - 1.333333333333333;
      real_t tmp_106 = tmp_105*tmp_36 - tmp_91;
      real_t tmp_107 = 2.666666666666667 - tmp_48;
      real_t tmp_108 = tmp_107*tmp_55 - tmp_94;
      real_t tmp_109 = 1.0*tmp_23;
      real_t tmp_110 = tmp_109*tmp_21;
      real_t tmp_111 = tmp_110*tmp_69;
      real_t tmp_112 = tmp_109*tmp_42;
      real_t tmp_113 = tmp_112*tmp_73;
      real_t tmp_114 = tmp_109*tmp_61;
      real_t tmp_115 = tmp_114*tmp_77;
      real_t tmp_116 = tmp_109*tmp_19;
      real_t tmp_117 = tmp_116*tmp_80;
      real_t tmp_118 = tmp_109*tmp_40;
      real_t tmp_119 = tmp_118*tmp_83;
      real_t tmp_120 = tmp_109*tmp_59;
      real_t tmp_121 = tmp_120*tmp_86;
      real_t tmp_122 = 0.33333333333333331*tmp_19;
      real_t tmp_123 = 1.3333333333333333*tmp_21;
      real_t tmp_124 = tmp_122 + tmp_123;
      real_t tmp_125 = tmp_124*tmp_26;
      real_t tmp_126 = 1.3333333333333333*tmp_40;
      real_t tmp_127 = 0.33333333333333331*tmp_42;
      real_t tmp_128 = tmp_126 + tmp_127;
      real_t tmp_129 = tmp_128*tmp_45;
      real_t tmp_130 = 0.33333333333333331*tmp_59;
      real_t tmp_131 = 0.33333333333333331*tmp_61;
      real_t tmp_132 = tmp_130 + tmp_131;
      real_t tmp_133 = tmp_132*tmp_64;
      real_t tmp_134 = tmp_124*tmp_66;
      real_t tmp_135 = tmp_128*tmp_66;
      real_t tmp_136 = tmp_132*tmp_66;
      real_t tmp_137 = -tmp_123 + 0.5*tmp_19*tmp_97;
      real_t tmp_138 = tmp_137*tmp_26;
      real_t tmp_139 = -tmp_127 + 0.5*tmp_40*tmp_99;
      real_t tmp_140 = tmp_139*tmp_45;
      real_t tmp_141 = 0.5*tmp_101*tmp_59 - tmp_131;
      real_t tmp_142 = tmp_141*tmp_64;
      real_t tmp_143 = tmp_137*tmp_66;
      real_t tmp_144 = tmp_139*tmp_66;
      real_t tmp_145 = tmp_141*tmp_66;
      real_t tmp_146 = 0.5*tmp_103*tmp_21 - tmp_122;
      real_t tmp_147 = tmp_146*tmp_26;
      real_t tmp_148 = 0.5*tmp_105*tmp_42 - tmp_126;
      real_t tmp_149 = tmp_148*tmp_45;
      real_t tmp_150 = 0.5*tmp_107*tmp_61 - tmp_130;
      real_t tmp_151 = tmp_150*tmp_64;
      real_t tmp_152 = tmp_146*tmp_66;
      real_t tmp_153 = tmp_148*tmp_66;
      real_t tmp_154 = tmp_150*tmp_66;
      real_t a_0_0 = tmp_16*tmp_27 + tmp_37*tmp_46 + tmp_56*tmp_65;
      real_t a_0_1 = tmp_67*tmp_70 + tmp_71*tmp_74 + tmp_75*tmp_78;
      real_t a_0_2 = tmp_67*tmp_81 + tmp_71*tmp_84 + tmp_75*tmp_87;
      real_t a_0_3 = tmp_27*tmp_90 + tmp_46*tmp_93 + tmp_65*tmp_96;
      real_t a_0_4 = tmp_100*tmp_46 + tmp_102*tmp_65 + tmp_27*tmp_98;
      real_t a_0_5 = tmp_104*tmp_27 + tmp_106*tmp_46 + tmp_108*tmp_65;
      real_t a_1_0 = tmp_111*tmp_16 + tmp_113*tmp_37 + tmp_115*tmp_56;
      real_t a_1_1 = tmp_110*tmp_15*tmp_25*(tmp_68*tmp_68) + tmp_112*tmp_36*tmp_44*(tmp_72*tmp_72) + tmp_114*tmp_55*tmp_63*(tmp_76*tmp_76);
      real_t a_1_2 = tmp_111*tmp_13*tmp_79 + tmp_113*tmp_35*tmp_82 + tmp_115*tmp_54*tmp_85;
      real_t a_1_3 = tmp_111*tmp_90 + tmp_113*tmp_93 + tmp_115*tmp_96;
      real_t a_1_4 = tmp_100*tmp_113 + tmp_102*tmp_115 + tmp_111*tmp_98;
      real_t a_1_5 = tmp_104*tmp_111 + tmp_106*tmp_113 + tmp_108*tmp_115;
      real_t a_2_0 = tmp_117*tmp_16 + tmp_119*tmp_37 + tmp_121*tmp_56;
      real_t a_2_1 = tmp_116*tmp_70*tmp_79 + tmp_118*tmp_74*tmp_82 + tmp_120*tmp_78*tmp_85;
      real_t a_2_2 = tmp_116*tmp_13*tmp_25*(tmp_79*tmp_79) + tmp_118*tmp_35*tmp_44*(tmp_82*tmp_82) + tmp_120*tmp_54*tmp_63*(tmp_85*tmp_85);
      real_t a_2_3 = tmp_117*tmp_90 + tmp_119*tmp_93 + tmp_121*tmp_96;
      real_t a_2_4 = tmp_100*tmp_119 + tmp_102*tmp_121 + tmp_117*tmp_98;
      real_t a_2_5 = tmp_104*tmp_117 + tmp_106*tmp_119 + tmp_108*tmp_121;
      real_t a_3_0 = tmp_125*tmp_16 + tmp_129*tmp_37 + tmp_133*tmp_56;
      real_t a_3_1 = tmp_134*tmp_70 + tmp_135*tmp_74 + tmp_136*tmp_78;
      real_t a_3_2 = tmp_134*tmp_81 + tmp_135*tmp_84 + tmp_136*tmp_87;
      real_t a_3_3 = tmp_125*tmp_90 + tmp_129*tmp_93 + tmp_133*tmp_96;
      real_t a_3_4 = tmp_100*tmp_129 + tmp_102*tmp_133 + tmp_125*tmp_98;
      real_t a_3_5 = tmp_104*tmp_125 + tmp_106*tmp_129 + tmp_108*tmp_133;
      real_t a_4_0 = tmp_138*tmp_16 + tmp_140*tmp_37 + tmp_142*tmp_56;
      real_t a_4_1 = tmp_143*tmp_70 + tmp_144*tmp_74 + tmp_145*tmp_78;
      real_t a_4_2 = tmp_143*tmp_81 + tmp_144*tmp_84 + tmp_145*tmp_87;
      real_t a_4_3 = tmp_138*tmp_90 + tmp_140*tmp_93 + tmp_142*tmp_96;
      real_t a_4_4 = tmp_100*tmp_140 + tmp_102*tmp_142 + tmp_138*tmp_98;
      real_t a_4_5 = tmp_104*tmp_138 + tmp_106*tmp_140 + tmp_108*tmp_142;
      real_t a_5_0 = tmp_147*tmp_16 + tmp_149*tmp_37 + tmp_151*tmp_56;
      real_t a_5_1 = tmp_152*tmp_70 + tmp_153*tmp_74 + tmp_154*tmp_78;
      real_t a_5_2 = tmp_152*tmp_81 + tmp_153*tmp_84 + tmp_154*tmp_87;
      real_t a_5_3 = tmp_147*tmp_90 + tmp_149*tmp_93 + tmp_151*tmp_96;
      real_t a_5_4 = tmp_100*tmp_149 + tmp_102*tmp_151 + tmp_147*tmp_98;
      real_t a_5_5 = tmp_104*tmp_147 + tmp_106*tmp_149 + tmp_108*tmp_151;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_1_0_blending_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = -p_affine_0_0;
      real_t tmp_4 = p_affine_1_0 + tmp_3;
      real_t tmp_5 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = 1.0 / (tmp_4*tmp_7 - (p_affine_1_1 + tmp_6)*(p_affine_2_0 + tmp_3));
      real_t tmp_9 = tmp_8/tmp_5;
      real_t tmp_10 = Blending_DF_Triangle_0_0*tmp_9;
      real_t tmp_11 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_12 = Blending_DF_Triangle_0_1*tmp_9;
      real_t tmp_13 = tmp_10*tmp_4 - tmp_11*tmp_12;
      real_t tmp_14 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_15 = tmp_10*tmp_14 - tmp_12*tmp_7;
      real_t tmp_16 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_17 = 2*tmp_16;
      real_t tmp_18 = Blending_DF_Triangle_0_3*tmp_9;
      real_t tmp_19 = Blending_DF_Triangle_0_2*tmp_9;
      real_t tmp_20 = 0.5*tmp_2;
      real_t tmp_21 = 0.16666666666666666*(tmp_20*(tmp_11*tmp_18 - tmp_19*tmp_4) + tmp_20*(-tmp_14*tmp_19 + tmp_18*tmp_7))*std::abs(tmp_5);
      real_t tmp_22 = tmp_17*tmp_21;
      real_t tmp_23 = 2.6666666666666665;
      real_t tmp_24 = 0.66666666666666663;
      real_t tmp_25 = tmp_23 + tmp_24 - 3;
      real_t tmp_26 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_27 = tmp_8/tmp_26;
      real_t tmp_28 = Blending_DF_Triangle_1_0*tmp_27;
      real_t tmp_29 = Blending_DF_Triangle_1_1*tmp_27;
      real_t tmp_30 = -tmp_11*tmp_29 + tmp_28*tmp_4;
      real_t tmp_31 = tmp_14*tmp_28 - tmp_29*tmp_7;
      real_t tmp_32 = Blending_DF_Triangle_1_3*tmp_27;
      real_t tmp_33 = Blending_DF_Triangle_1_2*tmp_27;
      real_t tmp_34 = 0.5*tmp_25;
      real_t tmp_35 = 0.16666666666666666*(tmp_34*(tmp_11*tmp_32 - tmp_33*tmp_4) + tmp_34*(-tmp_14*tmp_33 + tmp_32*tmp_7))*std::abs(tmp_26);
      real_t tmp_36 = tmp_17*tmp_35;
      real_t tmp_37 = 0.66666666666666663;
      real_t tmp_38 = 0.66666666666666663;
      real_t tmp_39 = tmp_37 + tmp_38 - 3;
      real_t tmp_40 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_41 = tmp_8/tmp_40;
      real_t tmp_42 = Blending_DF_Triangle_2_0*tmp_41;
      real_t tmp_43 = Blending_DF_Triangle_2_1*tmp_41;
      real_t tmp_44 = -tmp_11*tmp_43 + tmp_4*tmp_42;
      real_t tmp_45 = tmp_14*tmp_42 - tmp_43*tmp_7;
      real_t tmp_46 = Blending_DF_Triangle_2_3*tmp_41;
      real_t tmp_47 = Blending_DF_Triangle_2_2*tmp_41;
      real_t tmp_48 = 0.5*tmp_39;
      real_t tmp_49 = 0.16666666666666666*(tmp_48*(tmp_11*tmp_46 - tmp_4*tmp_47) + tmp_48*(-tmp_14*tmp_47 + tmp_46*tmp_7))*std::abs(tmp_40);
      real_t tmp_50 = tmp_17*tmp_49;
      real_t tmp_51 = 2.0*tmp_16;
      real_t tmp_52 = tmp_21*tmp_51;
      real_t tmp_53 = tmp_35*tmp_51;
      real_t tmp_54 = tmp_49*tmp_51;
      real_t tmp_55 = 0.66666666666666663*tmp_13;
      real_t tmp_56 = 2.6666666666666665*tmp_15;
      real_t tmp_57 = 2.6666666666666665*tmp_30;
      real_t tmp_58 = 0.66666666666666663*tmp_31;
      real_t tmp_59 = 0.66666666666666663*tmp_44;
      real_t tmp_60 = 0.66666666666666663*tmp_45;
      real_t a_0_0 = tmp_22*(tmp_13*tmp_2 + tmp_15*tmp_2) + tmp_36*(tmp_25*tmp_30 + tmp_25*tmp_31) + tmp_50*(tmp_39*tmp_44 + tmp_39*tmp_45);
      real_t a_0_1 = tmp_15*tmp_52*(tmp_0 - 1) + tmp_31*tmp_53*(tmp_23 - 1) + tmp_45*tmp_54*(tmp_37 - 1);
      real_t a_0_2 = tmp_13*tmp_52*(tmp_1 - 1) + tmp_30*tmp_53*(tmp_24 - 1) + tmp_44*tmp_54*(tmp_38 - 1);
      real_t a_0_3 = tmp_22*(tmp_55 + tmp_56) + tmp_36*(tmp_57 + tmp_58) + tmp_50*(tmp_59 + tmp_60);
      real_t a_0_4 = tmp_22*(tmp_13*(-tmp_0 - 1.333333333333333) - tmp_56) + tmp_36*(tmp_30*(2.666666666666667 - tmp_23) - tmp_58) + tmp_50*(tmp_44*(2.666666666666667 - tmp_37) - tmp_60);
      real_t a_0_5 = tmp_22*(tmp_15*(2.666666666666667 - tmp_1) - tmp_55) + tmp_36*(tmp_31*(-tmp_24 - 1.333333333333333) - tmp_57) + tmp_50*(tmp_45*(2.666666666666667 - tmp_38) - tmp_59);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_1_0_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_14 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_13 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_11 - Blending_DF_Tetrahedron_0_5*tmp_12;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(tmp_11 - tmp_12);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(tmp_14 - tmp_15);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_26 - tmp_27;
      real_t tmp_39 = tmp_20 - tmp_29;
      real_t tmp_40 = tmp_23 - tmp_28;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_44 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_48 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_49 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_50 = tmp_10*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_17);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_3*tmp_79 - Blending_DF_Tetrahedron_1_3*tmp_80 + Blending_DF_Tetrahedron_1_4*tmp_78 - Blending_DF_Tetrahedron_1_4*tmp_81 + Blending_DF_Tetrahedron_1_5*tmp_76 - Blending_DF_Tetrahedron_1_5*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_78 - tmp_81);
      real_t tmp_86 = tmp_83*(tmp_79 - tmp_80);
      real_t tmp_87 = tmp_10*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_92 = tmp_83*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_93 = tmp_83*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_94 = tmp_10*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_3*tmp_109 - Blending_DF_Tetrahedron_2_3*tmp_110 + Blending_DF_Tetrahedron_2_4*tmp_108 - Blending_DF_Tetrahedron_2_4*tmp_111 + Blending_DF_Tetrahedron_2_5*tmp_106 - Blending_DF_Tetrahedron_2_5*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_108 - tmp_111);
      real_t tmp_116 = tmp_113*(tmp_109 - tmp_110);
      real_t tmp_117 = tmp_10*tmp_114 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_122 = tmp_113*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_123 = tmp_113*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_124 = tmp_10*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_3*tmp_139 - Blending_DF_Tetrahedron_3_3*tmp_140 + Blending_DF_Tetrahedron_3_4*tmp_138 - Blending_DF_Tetrahedron_3_4*tmp_141 + Blending_DF_Tetrahedron_3_5*tmp_136 - Blending_DF_Tetrahedron_3_5*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_138 - tmp_141);
      real_t tmp_146 = tmp_143*(tmp_139 - tmp_140);
      real_t tmp_147 = tmp_10*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_152 = tmp_143*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_153 = tmp_143*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_154 = tmp_10*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_0_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_14 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_13 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_11 - Blending_DF_Tetrahedron_0_5*tmp_12;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(tmp_11 - tmp_12);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(tmp_14 - tmp_15);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_26 - tmp_27;
      real_t tmp_39 = tmp_20 - tmp_29;
      real_t tmp_40 = tmp_23 - tmp_28;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_44 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_61 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_62 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_10*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_17);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_3*tmp_73 - Blending_DF_Tetrahedron_1_3*tmp_74 + Blending_DF_Tetrahedron_1_4*tmp_72 - Blending_DF_Tetrahedron_1_4*tmp_75 + Blending_DF_Tetrahedron_1_5*tmp_70 - Blending_DF_Tetrahedron_1_5*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_72 - tmp_75);
      real_t tmp_80 = tmp_77*(tmp_73 - tmp_74);
      real_t tmp_81 = tmp_10*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_85 = tmp_77*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_86 = tmp_77*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_10*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_3*tmp_97 - Blending_DF_Tetrahedron_2_3*tmp_98 + Blending_DF_Tetrahedron_2_4*tmp_96 - Blending_DF_Tetrahedron_2_4*tmp_99 + Blending_DF_Tetrahedron_2_5*tmp_94 - Blending_DF_Tetrahedron_2_5*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_96 - tmp_99);
      real_t tmp_104 = tmp_101*(tmp_97 - tmp_98);
      real_t tmp_105 = tmp_10*tmp_102 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_109 = tmp_101*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_110 = tmp_101*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_10*tmp_108 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_3*tmp_121 - Blending_DF_Tetrahedron_3_3*tmp_122 + Blending_DF_Tetrahedron_3_4*tmp_120 - Blending_DF_Tetrahedron_3_4*tmp_123 + Blending_DF_Tetrahedron_3_5*tmp_118 - Blending_DF_Tetrahedron_3_5*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_120 - tmp_123);
      real_t tmp_128 = tmp_125*(tmp_121 - tmp_122);
      real_t tmp_129 = tmp_10*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_133 = tmp_125*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_134 = tmp_125*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_10*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_0_blending_q2::Blending_DF_Triangle( real_t in_0, real_t in_1, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3 ) const
   {
      Point3D  mappedPt( in_0, in_1, 0 );
      Matrix2r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 1, 0 );
      *out_3 = DPsi( 1, 1 );
   }

   void p2_epsiloncc_1_0_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_1_1_blending_q2::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_11*tmp_8 - tmp_12*tmp_15;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = tmp_14 + tmp_17;
      real_t tmp_19 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_20 = 2*tmp_19;
      real_t tmp_21 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_22 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_23 = tmp_21*tmp_6 - tmp_22*tmp_3;
      real_t tmp_24 = 1.0*tmp_2;
      real_t tmp_25 = tmp_15*tmp_21 - tmp_22*tmp_8;
      real_t tmp_26 = tmp_23*tmp_24 + tmp_24*tmp_25;
      real_t tmp_27 = 2.0*tmp_2;
      real_t tmp_28 = tmp_23*tmp_27 + tmp_25*tmp_27;
      real_t tmp_29 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_30 = 0.16666666666666666*tmp_29*std::abs(tmp_4);
      real_t tmp_31 = 2.6666666666666665;
      real_t tmp_32 = 0.66666666666666663;
      real_t tmp_33 = tmp_31 + tmp_32 - 3;
      real_t tmp_34 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_35 = tmp_9/tmp_34;
      real_t tmp_36 = Blending_DF_Triangle_1_3*tmp_35;
      real_t tmp_37 = Blending_DF_Triangle_1_2*tmp_35;
      real_t tmp_38 = tmp_3*tmp_36 - tmp_37*tmp_6;
      real_t tmp_39 = tmp_33*tmp_38;
      real_t tmp_40 = -tmp_15*tmp_37 + tmp_36*tmp_8;
      real_t tmp_41 = tmp_33*tmp_40;
      real_t tmp_42 = tmp_39 + tmp_41;
      real_t tmp_43 = 0.5*tmp_39 + 0.5*tmp_41;
      real_t tmp_44 = 2*tmp_43;
      real_t tmp_45 = Blending_DF_Triangle_1_0*tmp_35;
      real_t tmp_46 = Blending_DF_Triangle_1_1*tmp_35;
      real_t tmp_47 = -tmp_3*tmp_46 + tmp_45*tmp_6;
      real_t tmp_48 = 1.0*tmp_33;
      real_t tmp_49 = tmp_15*tmp_45 - tmp_46*tmp_8;
      real_t tmp_50 = tmp_47*tmp_48 + tmp_48*tmp_49;
      real_t tmp_51 = 2.0*tmp_33;
      real_t tmp_52 = tmp_47*tmp_51 + tmp_49*tmp_51;
      real_t tmp_53 = 0.16666666666666666*tmp_29*std::abs(tmp_34);
      real_t tmp_54 = 0.66666666666666663;
      real_t tmp_55 = 0.66666666666666663;
      real_t tmp_56 = tmp_54 + tmp_55 - 3;
      real_t tmp_57 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_58 = tmp_9/tmp_57;
      real_t tmp_59 = Blending_DF_Triangle_2_3*tmp_58;
      real_t tmp_60 = Blending_DF_Triangle_2_2*tmp_58;
      real_t tmp_61 = tmp_3*tmp_59 - tmp_6*tmp_60;
      real_t tmp_62 = tmp_56*tmp_61;
      real_t tmp_63 = -tmp_15*tmp_60 + tmp_59*tmp_8;
      real_t tmp_64 = tmp_56*tmp_63;
      real_t tmp_65 = tmp_62 + tmp_64;
      real_t tmp_66 = 0.5*tmp_62 + 0.5*tmp_64;
      real_t tmp_67 = 2*tmp_66;
      real_t tmp_68 = Blending_DF_Triangle_2_0*tmp_58;
      real_t tmp_69 = Blending_DF_Triangle_2_1*tmp_58;
      real_t tmp_70 = -tmp_3*tmp_69 + tmp_6*tmp_68;
      real_t tmp_71 = 1.0*tmp_56;
      real_t tmp_72 = tmp_15*tmp_68 - tmp_69*tmp_8;
      real_t tmp_73 = tmp_70*tmp_71 + tmp_71*tmp_72;
      real_t tmp_74 = 2.0*tmp_56;
      real_t tmp_75 = tmp_70*tmp_74 + tmp_72*tmp_74;
      real_t tmp_76 = 0.16666666666666666*tmp_29*std::abs(tmp_57);
      real_t tmp_77 = tmp_0 - 1;
      real_t tmp_78 = 2.0*tmp_77;
      real_t tmp_79 = tmp_25*tmp_78;
      real_t tmp_80 = tmp_16*tmp_78;
      real_t tmp_81 = tmp_31 - 1;
      real_t tmp_82 = 2.0*tmp_81;
      real_t tmp_83 = tmp_49*tmp_82;
      real_t tmp_84 = tmp_40*tmp_82;
      real_t tmp_85 = tmp_54 - 1;
      real_t tmp_86 = 2.0*tmp_85;
      real_t tmp_87 = tmp_72*tmp_86;
      real_t tmp_88 = tmp_63*tmp_86;
      real_t tmp_89 = tmp_1 - 1;
      real_t tmp_90 = 2.0*tmp_89;
      real_t tmp_91 = tmp_23*tmp_90;
      real_t tmp_92 = tmp_13*tmp_90;
      real_t tmp_93 = tmp_32 - 1;
      real_t tmp_94 = 2.0*tmp_93;
      real_t tmp_95 = tmp_47*tmp_94;
      real_t tmp_96 = tmp_38*tmp_94;
      real_t tmp_97 = tmp_55 - 1;
      real_t tmp_98 = 2.0*tmp_97;
      real_t tmp_99 = tmp_70*tmp_98;
      real_t tmp_100 = tmp_61*tmp_98;
      real_t tmp_101 = 0.16666666666666666*tmp_23;
      real_t tmp_102 = 8.0*tmp_101;
      real_t tmp_103 = 0.66666666666666663*tmp_25;
      real_t tmp_104 = 8.0*tmp_103;
      real_t tmp_105 = tmp_102 + tmp_104;
      real_t tmp_106 = 0.16666666666666666*tmp_13;
      real_t tmp_107 = 4.0*tmp_106;
      real_t tmp_108 = 0.66666666666666663*tmp_16;
      real_t tmp_109 = 4.0*tmp_108;
      real_t tmp_110 = tmp_107 + tmp_109;
      real_t tmp_111 = 0.66666666666666663*tmp_47;
      real_t tmp_112 = 8.0*tmp_111;
      real_t tmp_113 = 0.16666666666666666*tmp_49;
      real_t tmp_114 = 8.0*tmp_113;
      real_t tmp_115 = tmp_112 + tmp_114;
      real_t tmp_116 = 0.66666666666666663*tmp_38;
      real_t tmp_117 = 4.0*tmp_116;
      real_t tmp_118 = 0.16666666666666666*tmp_40;
      real_t tmp_119 = 4.0*tmp_118;
      real_t tmp_120 = tmp_117 + tmp_119;
      real_t tmp_121 = 0.16666666666666666*tmp_70;
      real_t tmp_122 = 8.0*tmp_121;
      real_t tmp_123 = 0.16666666666666666*tmp_72;
      real_t tmp_124 = 8.0*tmp_123;
      real_t tmp_125 = tmp_122 + tmp_124;
      real_t tmp_126 = 0.16666666666666666*tmp_61;
      real_t tmp_127 = 4.0*tmp_126;
      real_t tmp_128 = 0.16666666666666666*tmp_63;
      real_t tmp_129 = 4.0*tmp_128;
      real_t tmp_130 = tmp_127 + tmp_129;
      real_t tmp_131 = -tmp_0 - 1.333333333333333;
      real_t tmp_132 = tmp_131*tmp_23;
      real_t tmp_133 = -tmp_104 + 2.0*tmp_132;
      real_t tmp_134 = tmp_13*tmp_131;
      real_t tmp_135 = -tmp_109 + tmp_134;
      real_t tmp_136 = 2.666666666666667 - tmp_31;
      real_t tmp_137 = tmp_136*tmp_47;
      real_t tmp_138 = -tmp_114 + 2.0*tmp_137;
      real_t tmp_139 = tmp_136*tmp_38;
      real_t tmp_140 = -tmp_119 + tmp_139;
      real_t tmp_141 = 2.666666666666667 - tmp_54;
      real_t tmp_142 = tmp_141*tmp_70;
      real_t tmp_143 = -tmp_124 + 2.0*tmp_142;
      real_t tmp_144 = tmp_141*tmp_61;
      real_t tmp_145 = -tmp_129 + tmp_144;
      real_t tmp_146 = 2.666666666666667 - tmp_1;
      real_t tmp_147 = tmp_146*tmp_25;
      real_t tmp_148 = -tmp_102 + 2.0*tmp_147;
      real_t tmp_149 = tmp_146*tmp_16;
      real_t tmp_150 = -tmp_107 + tmp_149;
      real_t tmp_151 = -tmp_32 - 1.333333333333333;
      real_t tmp_152 = tmp_151*tmp_49;
      real_t tmp_153 = -tmp_112 + 2.0*tmp_152;
      real_t tmp_154 = tmp_151*tmp_40;
      real_t tmp_155 = -tmp_117 + tmp_154;
      real_t tmp_156 = 2.666666666666667 - tmp_55;
      real_t tmp_157 = tmp_156*tmp_72;
      real_t tmp_158 = -tmp_122 + 2.0*tmp_157;
      real_t tmp_159 = tmp_156*tmp_63;
      real_t tmp_160 = -tmp_127 + tmp_159;
      real_t tmp_161 = 1.0*tmp_77;
      real_t tmp_162 = tmp_16*tmp_161;
      real_t tmp_163 = tmp_161*tmp_25;
      real_t tmp_164 = 1.0*tmp_81;
      real_t tmp_165 = tmp_164*tmp_40;
      real_t tmp_166 = tmp_164*tmp_49;
      real_t tmp_167 = 1.0*tmp_85;
      real_t tmp_168 = tmp_167*tmp_63;
      real_t tmp_169 = tmp_167*tmp_72;
      real_t tmp_170 = (tmp_77*tmp_77);
      real_t tmp_171 = (tmp_81*tmp_81);
      real_t tmp_172 = (tmp_85*tmp_85);
      real_t tmp_173 = tmp_30*(tmp_13*tmp_162*tmp_89 + tmp_23*tmp_79*tmp_89) + tmp_53*(tmp_165*tmp_38*tmp_93 + tmp_47*tmp_83*tmp_93) + tmp_76*(tmp_168*tmp_61*tmp_97 + tmp_70*tmp_87*tmp_97);
      real_t tmp_174 = 1.0*tmp_89;
      real_t tmp_175 = tmp_13*tmp_174;
      real_t tmp_176 = tmp_174*tmp_23;
      real_t tmp_177 = 1.0*tmp_93;
      real_t tmp_178 = tmp_177*tmp_38;
      real_t tmp_179 = tmp_177*tmp_47;
      real_t tmp_180 = 1.0*tmp_97;
      real_t tmp_181 = tmp_180*tmp_61;
      real_t tmp_182 = tmp_180*tmp_70;
      real_t tmp_183 = (tmp_89*tmp_89);
      real_t tmp_184 = (tmp_93*tmp_93);
      real_t tmp_185 = (tmp_97*tmp_97);
      real_t tmp_186 = 2.0*tmp_106;
      real_t tmp_187 = 2.0*tmp_108;
      real_t tmp_188 = tmp_186 + tmp_187;
      real_t tmp_189 = 2*tmp_188;
      real_t tmp_190 = 4.0*tmp_101;
      real_t tmp_191 = 4.0*tmp_103;
      real_t tmp_192 = tmp_190 + tmp_191;
      real_t tmp_193 = 2.0*tmp_116;
      real_t tmp_194 = 2.0*tmp_118;
      real_t tmp_195 = tmp_193 + tmp_194;
      real_t tmp_196 = 2*tmp_195;
      real_t tmp_197 = 4.0*tmp_111;
      real_t tmp_198 = 4.0*tmp_113;
      real_t tmp_199 = tmp_197 + tmp_198;
      real_t tmp_200 = 2.0*tmp_126;
      real_t tmp_201 = 2.0*tmp_128;
      real_t tmp_202 = tmp_200 + tmp_201;
      real_t tmp_203 = 2*tmp_202;
      real_t tmp_204 = 4.0*tmp_121;
      real_t tmp_205 = 4.0*tmp_123;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = 0.5*tmp_134 - tmp_187;
      real_t tmp_208 = 2*tmp_207;
      real_t tmp_209 = 1.0*tmp_132 - tmp_191;
      real_t tmp_210 = 0.5*tmp_139 - tmp_194;
      real_t tmp_211 = 2*tmp_210;
      real_t tmp_212 = 1.0*tmp_137 - tmp_198;
      real_t tmp_213 = 0.5*tmp_144 - tmp_201;
      real_t tmp_214 = 2*tmp_213;
      real_t tmp_215 = 1.0*tmp_142 - tmp_205;
      real_t tmp_216 = 0.5*tmp_149 - tmp_186;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = 1.0*tmp_147 - tmp_190;
      real_t tmp_219 = 0.5*tmp_154 - tmp_193;
      real_t tmp_220 = 2*tmp_219;
      real_t tmp_221 = 1.0*tmp_152 - tmp_197;
      real_t tmp_222 = 0.5*tmp_159 - tmp_200;
      real_t tmp_223 = 2*tmp_222;
      real_t tmp_224 = 1.0*tmp_157 - tmp_204;
      real_t a_0_0 = tmp_30*(tmp_18*tmp_20 + tmp_26*tmp_28) + tmp_53*(tmp_42*tmp_44 + tmp_50*tmp_52) + tmp_76*(tmp_65*tmp_67 + tmp_73*tmp_75);
      real_t a_0_1 = tmp_30*(tmp_19*tmp_80 + tmp_26*tmp_79) + tmp_53*(tmp_43*tmp_84 + tmp_50*tmp_83) + tmp_76*(tmp_66*tmp_88 + tmp_73*tmp_87);
      real_t a_0_2 = tmp_30*(tmp_19*tmp_92 + tmp_26*tmp_91) + tmp_53*(tmp_43*tmp_96 + tmp_50*tmp_95) + tmp_76*(tmp_100*tmp_66 + tmp_73*tmp_99);
      real_t a_0_3 = tmp_30*(tmp_105*tmp_26 + tmp_110*tmp_20) + tmp_53*(tmp_115*tmp_50 + tmp_120*tmp_44) + tmp_76*(tmp_125*tmp_73 + tmp_130*tmp_67);
      real_t a_0_4 = tmp_30*(tmp_133*tmp_26 + tmp_135*tmp_20) + tmp_53*(tmp_138*tmp_50 + tmp_140*tmp_44) + tmp_76*(tmp_143*tmp_73 + tmp_145*tmp_67);
      real_t a_0_5 = tmp_30*(tmp_148*tmp_26 + tmp_150*tmp_20) + tmp_53*(tmp_153*tmp_50 + tmp_155*tmp_44) + tmp_76*(tmp_158*tmp_73 + tmp_160*tmp_67);
      real_t a_1_0 = tmp_30*(tmp_162*tmp_18 + tmp_163*tmp_28) + tmp_53*(tmp_165*tmp_42 + tmp_166*tmp_52) + tmp_76*(tmp_168*tmp_65 + tmp_169*tmp_75);
      real_t a_1_1 = tmp_30*(1.0*(tmp_16*tmp_16)*tmp_170 + 2.0*tmp_170*(tmp_25*tmp_25)) + tmp_53*(1.0*tmp_171*(tmp_40*tmp_40) + 2.0*tmp_171*(tmp_49*tmp_49)) + tmp_76*(1.0*tmp_172*(tmp_63*tmp_63) + 2.0*tmp_172*(tmp_72*tmp_72));
      real_t a_1_2 = tmp_173;
      real_t a_1_3 = tmp_30*(tmp_105*tmp_163 + tmp_110*tmp_162) + tmp_53*(tmp_115*tmp_166 + tmp_120*tmp_165) + tmp_76*(tmp_125*tmp_169 + tmp_130*tmp_168);
      real_t a_1_4 = tmp_30*(tmp_133*tmp_163 + tmp_135*tmp_162) + tmp_53*(tmp_138*tmp_166 + tmp_140*tmp_165) + tmp_76*(tmp_143*tmp_169 + tmp_145*tmp_168);
      real_t a_1_5 = tmp_30*(tmp_148*tmp_163 + tmp_150*tmp_162) + tmp_53*(tmp_153*tmp_166 + tmp_155*tmp_165) + tmp_76*(tmp_158*tmp_169 + tmp_160*tmp_168);
      real_t a_2_0 = tmp_30*(tmp_175*tmp_18 + tmp_176*tmp_28) + tmp_53*(tmp_178*tmp_42 + tmp_179*tmp_52) + tmp_76*(tmp_181*tmp_65 + tmp_182*tmp_75);
      real_t a_2_1 = tmp_173;
      real_t a_2_2 = tmp_30*(1.0*(tmp_13*tmp_13)*tmp_183 + 2.0*tmp_183*(tmp_23*tmp_23)) + tmp_53*(1.0*tmp_184*(tmp_38*tmp_38) + 2.0*tmp_184*(tmp_47*tmp_47)) + tmp_76*(1.0*tmp_185*(tmp_61*tmp_61) + 2.0*tmp_185*(tmp_70*tmp_70));
      real_t a_2_3 = tmp_30*(tmp_105*tmp_176 + tmp_110*tmp_175) + tmp_53*(tmp_115*tmp_179 + tmp_120*tmp_178) + tmp_76*(tmp_125*tmp_182 + tmp_130*tmp_181);
      real_t a_2_4 = tmp_30*(tmp_133*tmp_176 + tmp_135*tmp_175) + tmp_53*(tmp_138*tmp_179 + tmp_140*tmp_178) + tmp_76*(tmp_143*tmp_182 + tmp_145*tmp_181);
      real_t a_2_5 = tmp_30*(tmp_148*tmp_176 + tmp_150*tmp_175) + tmp_53*(tmp_153*tmp_179 + tmp_155*tmp_178) + tmp_76*(tmp_158*tmp_182 + tmp_160*tmp_181);
      real_t a_3_0 = tmp_30*(tmp_18*tmp_189 + tmp_192*tmp_28) + tmp_53*(tmp_196*tmp_42 + tmp_199*tmp_52) + tmp_76*(tmp_203*tmp_65 + tmp_206*tmp_75);
      real_t a_3_1 = tmp_30*(tmp_188*tmp_80 + tmp_192*tmp_79) + tmp_53*(tmp_195*tmp_84 + tmp_199*tmp_83) + tmp_76*(tmp_202*tmp_88 + tmp_206*tmp_87);
      real_t a_3_2 = tmp_30*(tmp_188*tmp_92 + tmp_192*tmp_91) + tmp_53*(tmp_195*tmp_96 + tmp_199*tmp_95) + tmp_76*(tmp_100*tmp_202 + tmp_206*tmp_99);
      real_t a_3_3 = tmp_30*(tmp_105*tmp_192 + tmp_110*tmp_189) + tmp_53*(tmp_115*tmp_199 + tmp_120*tmp_196) + tmp_76*(tmp_125*tmp_206 + tmp_130*tmp_203);
      real_t a_3_4 = tmp_30*(tmp_133*tmp_192 + tmp_135*tmp_189) + tmp_53*(tmp_138*tmp_199 + tmp_140*tmp_196) + tmp_76*(tmp_143*tmp_206 + tmp_145*tmp_203);
      real_t a_3_5 = tmp_30*(tmp_148*tmp_192 + tmp_150*tmp_189) + tmp_53*(tmp_153*tmp_199 + tmp_155*tmp_196) + tmp_76*(tmp_158*tmp_206 + tmp_160*tmp_203);
      real_t a_4_0 = tmp_30*(tmp_18*tmp_208 + tmp_209*tmp_28) + tmp_53*(tmp_211*tmp_42 + tmp_212*tmp_52) + tmp_76*(tmp_214*tmp_65 + tmp_215*tmp_75);
      real_t a_4_1 = tmp_30*(tmp_207*tmp_80 + tmp_209*tmp_79) + tmp_53*(tmp_210*tmp_84 + tmp_212*tmp_83) + tmp_76*(tmp_213*tmp_88 + tmp_215*tmp_87);
      real_t a_4_2 = tmp_30*(tmp_207*tmp_92 + tmp_209*tmp_91) + tmp_53*(tmp_210*tmp_96 + tmp_212*tmp_95) + tmp_76*(tmp_100*tmp_213 + tmp_215*tmp_99);
      real_t a_4_3 = tmp_30*(tmp_105*tmp_209 + tmp_110*tmp_208) + tmp_53*(tmp_115*tmp_212 + tmp_120*tmp_211) + tmp_76*(tmp_125*tmp_215 + tmp_130*tmp_214);
      real_t a_4_4 = tmp_30*(tmp_133*tmp_209 + tmp_135*tmp_208) + tmp_53*(tmp_138*tmp_212 + tmp_140*tmp_211) + tmp_76*(tmp_143*tmp_215 + tmp_145*tmp_214);
      real_t a_4_5 = tmp_30*(tmp_148*tmp_209 + tmp_150*tmp_208) + tmp_53*(tmp_153*tmp_212 + tmp_155*tmp_211) + tmp_76*(tmp_158*tmp_215 + tmp_160*tmp_214);
      real_t a_5_0 = tmp_30*(tmp_18*tmp_217 + tmp_218*tmp_28) + tmp_53*(tmp_220*tmp_42 + tmp_221*tmp_52) + tmp_76*(tmp_223*tmp_65 + tmp_224*tmp_75);
      real_t a_5_1 = tmp_30*(tmp_216*tmp_80 + tmp_218*tmp_79) + tmp_53*(tmp_219*tmp_84 + tmp_221*tmp_83) + tmp_76*(tmp_222*tmp_88 + tmp_224*tmp_87);
      real_t a_5_2 = tmp_30*(tmp_216*tmp_92 + tmp_218*tmp_91) + tmp_53*(tmp_219*tmp_96 + tmp_221*tmp_95) + tmp_76*(tmp_100*tmp_222 + tmp_224*tmp_99);
      real_t a_5_3 = tmp_30*(tmp_105*tmp_218 + tmp_110*tmp_217) + tmp_53*(tmp_115*tmp_221 + tmp_120*tmp_220) + tmp_76*(tmp_125*tmp_224 + tmp_130*tmp_223);
      real_t a_5_4 = tmp_30*(tmp_133*tmp_218 + tmp_135*tmp_217) + tmp_53*(tmp_138*tmp_221 + tmp_140*tmp_220) + tmp_76*(tmp_143*tmp_224 + tmp_145*tmp_223);
      real_t a_5_5 = tmp_30*(tmp_148*tmp_218 + tmp_150*tmp_217) + tmp_53*(tmp_153*tmp_221 + tmp_155*tmp_220) + tmp_76*(tmp_158*tmp_224 + tmp_160*tmp_223);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void p2_epsiloncc_1_1_blending_q2::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t Blending_DF_Triangle_0_0 = 0;
      real_t Blending_DF_Triangle_0_1 = 0;
      real_t Blending_DF_Triangle_0_2 = 0;
      real_t Blending_DF_Triangle_0_3 = 0;
      real_t Blending_DF_Triangle_1_0 = 0;
      real_t Blending_DF_Triangle_1_1 = 0;
      real_t Blending_DF_Triangle_1_2 = 0;
      real_t Blending_DF_Triangle_1_3 = 0;
      real_t Blending_DF_Triangle_2_0 = 0;
      real_t Blending_DF_Triangle_2_1 = 0;
      real_t Blending_DF_Triangle_2_2 = 0;
      real_t Blending_DF_Triangle_2_3 = 0;
      Blending_DF_Triangle( 0.16666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.66666666666666663*p_affine_2_0, 0.16666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.66666666666666663*p_affine_2_1, &Blending_DF_Triangle_0_0, &Blending_DF_Triangle_0_1, &Blending_DF_Triangle_0_2, &Blending_DF_Triangle_0_3 );
      Blending_DF_Triangle( 0.16666666666666671*p_affine_0_0 + 0.66666666666666663*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.16666666666666671*p_affine_0_1 + 0.66666666666666663*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_1_0, &Blending_DF_Triangle_1_1, &Blending_DF_Triangle_1_2, &Blending_DF_Triangle_1_3 );
      Blending_DF_Triangle( 0.66666666666666674*p_affine_0_0 + 0.16666666666666666*p_affine_1_0 + 0.16666666666666666*p_affine_2_0, 0.66666666666666674*p_affine_0_1 + 0.16666666666666666*p_affine_1_1 + 0.16666666666666666*p_affine_2_1, &Blending_DF_Triangle_2_0, &Blending_DF_Triangle_2_1, &Blending_DF_Triangle_2_2, &Blending_DF_Triangle_2_3 );
      real_t tmp_0 = 0.66666666666666663;
      real_t tmp_1 = 2.6666666666666665;
      real_t tmp_2 = tmp_0 + tmp_1 - 3;
      real_t tmp_3 = p_affine_0_1 - p_affine_1_1;
      real_t tmp_4 = Blending_DF_Triangle_0_0*Blending_DF_Triangle_0_3 - Blending_DF_Triangle_0_1*Blending_DF_Triangle_0_2;
      real_t tmp_5 = -p_affine_0_0;
      real_t tmp_6 = p_affine_1_0 + tmp_5;
      real_t tmp_7 = -p_affine_0_1;
      real_t tmp_8 = p_affine_2_1 + tmp_7;
      real_t tmp_9 = 1.0 / (tmp_6*tmp_8 - (p_affine_1_1 + tmp_7)*(p_affine_2_0 + tmp_5));
      real_t tmp_10 = tmp_9/tmp_4;
      real_t tmp_11 = Blending_DF_Triangle_0_3*tmp_10;
      real_t tmp_12 = Blending_DF_Triangle_0_2*tmp_10;
      real_t tmp_13 = tmp_11*tmp_3 - tmp_12*tmp_6;
      real_t tmp_14 = tmp_13*tmp_2;
      real_t tmp_15 = p_affine_0_0 - p_affine_2_0;
      real_t tmp_16 = tmp_11*tmp_8 - tmp_12*tmp_15;
      real_t tmp_17 = tmp_16*tmp_2;
      real_t tmp_18 = 0.5*tmp_14 + 0.5*tmp_17;
      real_t tmp_19 = 2*tmp_18;
      real_t tmp_20 = Blending_DF_Triangle_0_0*tmp_10;
      real_t tmp_21 = Blending_DF_Triangle_0_1*tmp_10;
      real_t tmp_22 = tmp_20*tmp_6 - tmp_21*tmp_3;
      real_t tmp_23 = 1.0*tmp_2;
      real_t tmp_24 = tmp_15*tmp_20 - tmp_21*tmp_8;
      real_t tmp_25 = tmp_22*tmp_23 + tmp_23*tmp_24;
      real_t tmp_26 = 2.0*tmp_2;
      real_t tmp_27 = std::abs(p_affine_0_0*p_affine_1_1 - p_affine_0_0*p_affine_2_1 - p_affine_0_1*p_affine_1_0 + p_affine_0_1*p_affine_2_0 + p_affine_1_0*p_affine_2_1 - p_affine_1_1*p_affine_2_0);
      real_t tmp_28 = 0.16666666666666666*tmp_27*std::abs(tmp_4);
      real_t tmp_29 = 2.6666666666666665;
      real_t tmp_30 = 0.66666666666666663;
      real_t tmp_31 = tmp_29 + tmp_30 - 3;
      real_t tmp_32 = Blending_DF_Triangle_1_0*Blending_DF_Triangle_1_3 - Blending_DF_Triangle_1_1*Blending_DF_Triangle_1_2;
      real_t tmp_33 = tmp_9/tmp_32;
      real_t tmp_34 = Blending_DF_Triangle_1_3*tmp_33;
      real_t tmp_35 = Blending_DF_Triangle_1_2*tmp_33;
      real_t tmp_36 = tmp_3*tmp_34 - tmp_35*tmp_6;
      real_t tmp_37 = tmp_31*tmp_36;
      real_t tmp_38 = -tmp_15*tmp_35 + tmp_34*tmp_8;
      real_t tmp_39 = tmp_31*tmp_38;
      real_t tmp_40 = 0.5*tmp_37 + 0.5*tmp_39;
      real_t tmp_41 = 2*tmp_40;
      real_t tmp_42 = Blending_DF_Triangle_1_0*tmp_33;
      real_t tmp_43 = Blending_DF_Triangle_1_1*tmp_33;
      real_t tmp_44 = -tmp_3*tmp_43 + tmp_42*tmp_6;
      real_t tmp_45 = 1.0*tmp_31;
      real_t tmp_46 = tmp_15*tmp_42 - tmp_43*tmp_8;
      real_t tmp_47 = tmp_44*tmp_45 + tmp_45*tmp_46;
      real_t tmp_48 = 2.0*tmp_31;
      real_t tmp_49 = 0.16666666666666666*tmp_27*std::abs(tmp_32);
      real_t tmp_50 = 0.66666666666666663;
      real_t tmp_51 = 0.66666666666666663;
      real_t tmp_52 = tmp_50 + tmp_51 - 3;
      real_t tmp_53 = Blending_DF_Triangle_2_0*Blending_DF_Triangle_2_3 - Blending_DF_Triangle_2_1*Blending_DF_Triangle_2_2;
      real_t tmp_54 = tmp_9/tmp_53;
      real_t tmp_55 = Blending_DF_Triangle_2_3*tmp_54;
      real_t tmp_56 = Blending_DF_Triangle_2_2*tmp_54;
      real_t tmp_57 = tmp_3*tmp_55 - tmp_56*tmp_6;
      real_t tmp_58 = tmp_52*tmp_57;
      real_t tmp_59 = -tmp_15*tmp_56 + tmp_55*tmp_8;
      real_t tmp_60 = tmp_52*tmp_59;
      real_t tmp_61 = 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_62 = 2*tmp_61;
      real_t tmp_63 = Blending_DF_Triangle_2_0*tmp_54;
      real_t tmp_64 = Blending_DF_Triangle_2_1*tmp_54;
      real_t tmp_65 = -tmp_3*tmp_64 + tmp_6*tmp_63;
      real_t tmp_66 = 1.0*tmp_52;
      real_t tmp_67 = tmp_15*tmp_63 - tmp_64*tmp_8;
      real_t tmp_68 = tmp_65*tmp_66 + tmp_66*tmp_67;
      real_t tmp_69 = 2.0*tmp_52;
      real_t tmp_70 = 0.16666666666666666*tmp_27*std::abs(tmp_53);
      real_t tmp_71 = tmp_0 - 1;
      real_t tmp_72 = 2.0*tmp_24;
      real_t tmp_73 = 2.0*tmp_18;
      real_t tmp_74 = tmp_29 - 1;
      real_t tmp_75 = 2.0*tmp_46;
      real_t tmp_76 = 2.0*tmp_40;
      real_t tmp_77 = tmp_50 - 1;
      real_t tmp_78 = 2.0*tmp_67;
      real_t tmp_79 = 2.0*tmp_61;
      real_t tmp_80 = tmp_1 - 1;
      real_t tmp_81 = 2.0*tmp_22;
      real_t tmp_82 = tmp_30 - 1;
      real_t tmp_83 = 2.0*tmp_44;
      real_t tmp_84 = tmp_51 - 1;
      real_t tmp_85 = 2.0*tmp_65;
      real_t tmp_86 = 1.3333333333333333*tmp_22;
      real_t tmp_87 = 5.333333333333333*tmp_24;
      real_t tmp_88 = 0.66666666666666663*tmp_13;
      real_t tmp_89 = 2.6666666666666665*tmp_16;
      real_t tmp_90 = 5.333333333333333*tmp_44;
      real_t tmp_91 = 1.3333333333333333*tmp_46;
      real_t tmp_92 = 2.6666666666666665*tmp_36;
      real_t tmp_93 = 0.66666666666666663*tmp_38;
      real_t tmp_94 = 1.3333333333333333*tmp_65;
      real_t tmp_95 = 1.3333333333333333*tmp_67;
      real_t tmp_96 = 0.66666666666666663*tmp_57;
      real_t tmp_97 = 0.66666666666666663*tmp_59;
      real_t tmp_98 = -tmp_0 - 1.333333333333333;
      real_t tmp_99 = 2.666666666666667 - tmp_29;
      real_t tmp_100 = 2.666666666666667 - tmp_50;
      real_t tmp_101 = 2.666666666666667 - tmp_1;
      real_t tmp_102 = -tmp_30 - 1.333333333333333;
      real_t tmp_103 = 2.666666666666667 - tmp_51;
      real_t a_0_0 = tmp_28*(tmp_19*(tmp_14 + tmp_17) + tmp_25*(tmp_22*tmp_26 + tmp_24*tmp_26)) + tmp_49*(tmp_41*(tmp_37 + tmp_39) + tmp_47*(tmp_44*tmp_48 + tmp_46*tmp_48)) + tmp_70*(tmp_62*(tmp_58 + tmp_60) + tmp_68*(tmp_65*tmp_69 + tmp_67*tmp_69));
      real_t a_0_1 = tmp_28*(tmp_16*tmp_71*tmp_73 + tmp_25*tmp_71*tmp_72) + tmp_49*(tmp_38*tmp_74*tmp_76 + tmp_47*tmp_74*tmp_75) + tmp_70*(tmp_59*tmp_77*tmp_79 + tmp_68*tmp_77*tmp_78);
      real_t a_0_2 = tmp_28*(tmp_13*tmp_73*tmp_80 + tmp_25*tmp_80*tmp_81) + tmp_49*(tmp_36*tmp_76*tmp_82 + tmp_47*tmp_82*tmp_83) + tmp_70*(tmp_57*tmp_79*tmp_84 + tmp_68*tmp_84*tmp_85);
      real_t a_0_3 = tmp_28*(tmp_19*(tmp_88 + tmp_89) + tmp_25*(tmp_86 + tmp_87)) + tmp_49*(tmp_41*(tmp_92 + tmp_93) + tmp_47*(tmp_90 + tmp_91)) + tmp_70*(tmp_62*(tmp_96 + tmp_97) + tmp_68*(tmp_94 + tmp_95));
      real_t a_0_4 = tmp_28*(tmp_19*(tmp_13*tmp_98 - tmp_89) + tmp_25*(tmp_81*tmp_98 - tmp_87)) + tmp_49*(tmp_41*(tmp_36*tmp_99 - tmp_93) + tmp_47*(tmp_83*tmp_99 - tmp_91)) + tmp_70*(tmp_62*(tmp_100*tmp_57 - tmp_97) + tmp_68*(tmp_100*tmp_85 - tmp_95));
      real_t a_0_5 = tmp_28*(tmp_19*(tmp_101*tmp_16 - tmp_88) + tmp_25*(tmp_101*tmp_72 - tmp_86)) + tmp_49*(tmp_41*(tmp_102*tmp_38 - tmp_92) + tmp_47*(tmp_102*tmp_75 - tmp_90)) + tmp_70*(tmp_62*(tmp_103*tmp_59 - tmp_96) + tmp_68*(tmp_103*tmp_78 - tmp_94));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
   }

   void p2_epsiloncc_1_1_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_13 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_11 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_12 - Blending_DF_Tetrahedron_0_5*tmp_14;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_26 - tmp_27;
      real_t tmp_40 = tmp_20 - tmp_29;
      real_t tmp_41 = tmp_23 - tmp_28;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_46 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = tmp_38 + tmp_43 + tmp_48;
      real_t tmp_50 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_51 = 2*tmp_50;
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_54 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_55 = tmp_10*tmp_52 + tmp_33*tmp_53 + tmp_35*tmp_54;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_39*tmp_52 + tmp_40*tmp_53 + tmp_41*tmp_54;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_44*tmp_52 + tmp_45*tmp_53 + tmp_46*tmp_54;
      real_t tmp_60 = tmp_3*tmp_59;
      real_t tmp_61 = tmp_56 + tmp_58 + tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = tmp_31*(tmp_12 - tmp_14);
      real_t tmp_65 = tmp_31*(tmp_11 - tmp_16);
      real_t tmp_66 = tmp_31*(tmp_13 - tmp_15);
      real_t tmp_67 = tmp_10*tmp_64 + tmp_33*tmp_65 + tmp_35*tmp_66;
      real_t tmp_68 = 1.0*tmp_3;
      real_t tmp_69 = tmp_39*tmp_64 + tmp_40*tmp_65 + tmp_41*tmp_66;
      real_t tmp_70 = tmp_44*tmp_64 + tmp_45*tmp_65 + tmp_46*tmp_66;
      real_t tmp_71 = tmp_67*tmp_68 + tmp_68*tmp_69 + tmp_68*tmp_70;
      real_t tmp_72 = 2.0*tmp_3;
      real_t tmp_73 = tmp_67*tmp_72 + tmp_69*tmp_72 + tmp_70*tmp_72;
      real_t tmp_74 = p_affine_0_0*p_affine_1_1;
      real_t tmp_75 = p_affine_0_0*p_affine_1_2;
      real_t tmp_76 = p_affine_2_1*p_affine_3_2;
      real_t tmp_77 = p_affine_0_1*p_affine_1_0;
      real_t tmp_78 = p_affine_0_1*p_affine_1_2;
      real_t tmp_79 = p_affine_2_2*p_affine_3_0;
      real_t tmp_80 = p_affine_0_2*p_affine_1_0;
      real_t tmp_81 = p_affine_0_2*p_affine_1_1;
      real_t tmp_82 = p_affine_2_0*p_affine_3_1;
      real_t tmp_83 = p_affine_2_2*p_affine_3_1;
      real_t tmp_84 = p_affine_2_0*p_affine_3_2;
      real_t tmp_85 = p_affine_2_1*p_affine_3_0;
      real_t tmp_86 = std::abs(p_affine_0_0*tmp_76 - p_affine_0_0*tmp_83 + p_affine_0_1*tmp_79 - p_affine_0_1*tmp_84 + p_affine_0_2*tmp_82 - p_affine_0_2*tmp_85 - p_affine_1_0*tmp_76 + p_affine_1_0*tmp_83 - p_affine_1_1*tmp_79 + p_affine_1_1*tmp_84 - p_affine_1_2*tmp_82 + p_affine_1_2*tmp_85 + p_affine_2_0*tmp_78 - p_affine_2_0*tmp_81 - p_affine_2_1*tmp_75 + p_affine_2_1*tmp_80 + p_affine_2_2*tmp_74 - p_affine_2_2*tmp_77 - p_affine_3_0*tmp_78 + p_affine_3_0*tmp_81 + p_affine_3_1*tmp_75 - p_affine_3_1*tmp_80 - p_affine_3_2*tmp_74 + p_affine_3_2*tmp_77);
      real_t tmp_87 = 0.041666666666666657*tmp_86*std::abs(tmp_17);
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 2.3416407864998732;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90 - 3.0;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_96 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_98 = Blending_DF_Tetrahedron_1_3*tmp_94 - Blending_DF_Tetrahedron_1_3*tmp_96 + Blending_DF_Tetrahedron_1_4*tmp_92 - Blending_DF_Tetrahedron_1_4*tmp_97 + Blending_DF_Tetrahedron_1_5*tmp_93 - Blending_DF_Tetrahedron_1_5*tmp_95;
      real_t tmp_99 = tmp_30/tmp_98;
      real_t tmp_100 = tmp_99*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_101 = tmp_99*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_102 = tmp_99*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_103 = tmp_10*tmp_100 + tmp_101*tmp_33 + tmp_102*tmp_35;
      real_t tmp_104 = tmp_103*tmp_91;
      real_t tmp_105 = tmp_100*tmp_39 + tmp_101*tmp_40 + tmp_102*tmp_41;
      real_t tmp_106 = tmp_105*tmp_91;
      real_t tmp_107 = tmp_100*tmp_44 + tmp_101*tmp_45 + tmp_102*tmp_46;
      real_t tmp_108 = tmp_107*tmp_91;
      real_t tmp_109 = tmp_104 + tmp_106 + tmp_108;
      real_t tmp_110 = 0.5*tmp_104 + 0.5*tmp_106 + 0.5*tmp_108;
      real_t tmp_111 = 2*tmp_110;
      real_t tmp_112 = tmp_99*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_113 = tmp_99*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_114 = tmp_99*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_115 = tmp_10*tmp_112 + tmp_113*tmp_33 + tmp_114*tmp_35;
      real_t tmp_116 = tmp_115*tmp_91;
      real_t tmp_117 = tmp_112*tmp_39 + tmp_113*tmp_40 + tmp_114*tmp_41;
      real_t tmp_118 = tmp_117*tmp_91;
      real_t tmp_119 = tmp_112*tmp_44 + tmp_113*tmp_45 + tmp_114*tmp_46;
      real_t tmp_120 = tmp_119*tmp_91;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = 0.5*tmp_116 + 0.5*tmp_118 + 0.5*tmp_120;
      real_t tmp_123 = 2*tmp_122;
      real_t tmp_124 = tmp_99*(tmp_93 - tmp_95);
      real_t tmp_125 = tmp_99*(tmp_92 - tmp_97);
      real_t tmp_126 = tmp_99*(tmp_94 - tmp_96);
      real_t tmp_127 = tmp_10*tmp_124 + tmp_125*tmp_33 + tmp_126*tmp_35;
      real_t tmp_128 = 1.0*tmp_91;
      real_t tmp_129 = tmp_124*tmp_39 + tmp_125*tmp_40 + tmp_126*tmp_41;
      real_t tmp_130 = tmp_124*tmp_44 + tmp_125*tmp_45 + tmp_126*tmp_46;
      real_t tmp_131 = tmp_127*tmp_128 + tmp_128*tmp_129 + tmp_128*tmp_130;
      real_t tmp_132 = 2.0*tmp_91;
      real_t tmp_133 = tmp_127*tmp_132 + tmp_129*tmp_132 + tmp_130*tmp_132;
      real_t tmp_134 = 0.041666666666666657*tmp_86*std::abs(tmp_98);
      real_t tmp_135 = 2.3416407864998732;
      real_t tmp_136 = 0.55278640450004235;
      real_t tmp_137 = 0.55278640450004235;
      real_t tmp_138 = tmp_135 + tmp_136 + tmp_137 - 3.0;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_140 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_141 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_142 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_143 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_144 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_145 = Blending_DF_Tetrahedron_2_3*tmp_141 - Blending_DF_Tetrahedron_2_3*tmp_143 + Blending_DF_Tetrahedron_2_4*tmp_139 - Blending_DF_Tetrahedron_2_4*tmp_144 + Blending_DF_Tetrahedron_2_5*tmp_140 - Blending_DF_Tetrahedron_2_5*tmp_142;
      real_t tmp_146 = tmp_30/tmp_145;
      real_t tmp_147 = tmp_146*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_148 = tmp_146*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_149 = tmp_146*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_150 = tmp_10*tmp_147 + tmp_148*tmp_33 + tmp_149*tmp_35;
      real_t tmp_151 = tmp_138*tmp_150;
      real_t tmp_152 = tmp_147*tmp_39 + tmp_148*tmp_40 + tmp_149*tmp_41;
      real_t tmp_153 = tmp_138*tmp_152;
      real_t tmp_154 = tmp_147*tmp_44 + tmp_148*tmp_45 + tmp_149*tmp_46;
      real_t tmp_155 = tmp_138*tmp_154;
      real_t tmp_156 = tmp_151 + tmp_153 + tmp_155;
      real_t tmp_157 = 0.5*tmp_151 + 0.5*tmp_153 + 0.5*tmp_155;
      real_t tmp_158 = 2*tmp_157;
      real_t tmp_159 = tmp_146*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_160 = tmp_146*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_161 = tmp_146*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_162 = tmp_10*tmp_159 + tmp_160*tmp_33 + tmp_161*tmp_35;
      real_t tmp_163 = tmp_138*tmp_162;
      real_t tmp_164 = tmp_159*tmp_39 + tmp_160*tmp_40 + tmp_161*tmp_41;
      real_t tmp_165 = tmp_138*tmp_164;
      real_t tmp_166 = tmp_159*tmp_44 + tmp_160*tmp_45 + tmp_161*tmp_46;
      real_t tmp_167 = tmp_138*tmp_166;
      real_t tmp_168 = tmp_163 + tmp_165 + tmp_167;
      real_t tmp_169 = 0.5*tmp_163 + 0.5*tmp_165 + 0.5*tmp_167;
      real_t tmp_170 = 2*tmp_169;
      real_t tmp_171 = tmp_146*(tmp_140 - tmp_142);
      real_t tmp_172 = tmp_146*(tmp_139 - tmp_144);
      real_t tmp_173 = tmp_146*(tmp_141 - tmp_143);
      real_t tmp_174 = tmp_10*tmp_171 + tmp_172*tmp_33 + tmp_173*tmp_35;
      real_t tmp_175 = 1.0*tmp_138;
      real_t tmp_176 = tmp_171*tmp_39 + tmp_172*tmp_40 + tmp_173*tmp_41;
      real_t tmp_177 = tmp_171*tmp_44 + tmp_172*tmp_45 + tmp_173*tmp_46;
      real_t tmp_178 = tmp_174*tmp_175 + tmp_175*tmp_176 + tmp_175*tmp_177;
      real_t tmp_179 = 2.0*tmp_138;
      real_t tmp_180 = tmp_174*tmp_179 + tmp_176*tmp_179 + tmp_177*tmp_179;
      real_t tmp_181 = 0.041666666666666657*tmp_86*std::abs(tmp_145);
      real_t tmp_182 = 0.55278640450004235;
      real_t tmp_183 = 0.55278640450004235;
      real_t tmp_184 = 0.55278640450004235;
      real_t tmp_185 = tmp_182 + tmp_183 + tmp_184 - 3.0;
      real_t tmp_186 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_187 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_188 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_189 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_190 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_191 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_192 = Blending_DF_Tetrahedron_3_3*tmp_188 - Blending_DF_Tetrahedron_3_3*tmp_190 + Blending_DF_Tetrahedron_3_4*tmp_186 - Blending_DF_Tetrahedron_3_4*tmp_191 + Blending_DF_Tetrahedron_3_5*tmp_187 - Blending_DF_Tetrahedron_3_5*tmp_189;
      real_t tmp_193 = tmp_30/tmp_192;
      real_t tmp_194 = tmp_193*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_195 = tmp_193*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_196 = tmp_193*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_197 = tmp_10*tmp_194 + tmp_195*tmp_33 + tmp_196*tmp_35;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_194*tmp_39 + tmp_195*tmp_40 + tmp_196*tmp_41;
      real_t tmp_200 = tmp_185*tmp_199;
      real_t tmp_201 = tmp_194*tmp_44 + tmp_195*tmp_45 + tmp_196*tmp_46;
      real_t tmp_202 = tmp_185*tmp_201;
      real_t tmp_203 = tmp_198 + tmp_200 + tmp_202;
      real_t tmp_204 = 0.5*tmp_198 + 0.5*tmp_200 + 0.5*tmp_202;
      real_t tmp_205 = 2*tmp_204;
      real_t tmp_206 = tmp_193*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_207 = tmp_193*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_208 = tmp_193*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_209 = tmp_10*tmp_206 + tmp_207*tmp_33 + tmp_208*tmp_35;
      real_t tmp_210 = tmp_185*tmp_209;
      real_t tmp_211 = tmp_206*tmp_39 + tmp_207*tmp_40 + tmp_208*tmp_41;
      real_t tmp_212 = tmp_185*tmp_211;
      real_t tmp_213 = tmp_206*tmp_44 + tmp_207*tmp_45 + tmp_208*tmp_46;
      real_t tmp_214 = tmp_185*tmp_213;
      real_t tmp_215 = tmp_210 + tmp_212 + tmp_214;
      real_t tmp_216 = 0.5*tmp_210 + 0.5*tmp_212 + 0.5*tmp_214;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = tmp_193*(tmp_187 - tmp_189);
      real_t tmp_219 = tmp_193*(tmp_186 - tmp_191);
      real_t tmp_220 = tmp_193*(tmp_188 - tmp_190);
      real_t tmp_221 = tmp_10*tmp_218 + tmp_219*tmp_33 + tmp_220*tmp_35;
      real_t tmp_222 = 1.0*tmp_185;
      real_t tmp_223 = tmp_218*tmp_39 + tmp_219*tmp_40 + tmp_220*tmp_41;
      real_t tmp_224 = tmp_218*tmp_44 + tmp_219*tmp_45 + tmp_220*tmp_46;
      real_t tmp_225 = tmp_221*tmp_222 + tmp_222*tmp_223 + tmp_222*tmp_224;
      real_t tmp_226 = 2.0*tmp_185;
      real_t tmp_227 = tmp_221*tmp_226 + tmp_223*tmp_226 + tmp_224*tmp_226;
      real_t tmp_228 = 0.041666666666666657*tmp_86*std::abs(tmp_192);
      real_t tmp_229 = tmp_0 - 1.0;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = tmp_230*tmp_47;
      real_t tmp_232 = tmp_230*tmp_70;
      real_t tmp_233 = tmp_230*tmp_59;
      real_t tmp_234 = tmp_88 - 1.0;
      real_t tmp_235 = 2.0*tmp_234;
      real_t tmp_236 = tmp_107*tmp_235;
      real_t tmp_237 = tmp_130*tmp_235;
      real_t tmp_238 = tmp_119*tmp_235;
      real_t tmp_239 = tmp_135 - 1.0;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_154*tmp_240;
      real_t tmp_242 = tmp_177*tmp_240;
      real_t tmp_243 = tmp_166*tmp_240;
      real_t tmp_244 = tmp_182 - 1.0;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = tmp_201*tmp_245;
      real_t tmp_247 = tmp_224*tmp_245;
      real_t tmp_248 = tmp_213*tmp_245;
      real_t tmp_249 = tmp_1 - 1.0;
      real_t tmp_250 = 2.0*tmp_249;
      real_t tmp_251 = tmp_250*tmp_42;
      real_t tmp_252 = tmp_250*tmp_69;
      real_t tmp_253 = tmp_250*tmp_57;
      real_t tmp_254 = tmp_89 - 1.0;
      real_t tmp_255 = 2.0*tmp_254;
      real_t tmp_256 = tmp_105*tmp_255;
      real_t tmp_257 = tmp_129*tmp_255;
      real_t tmp_258 = tmp_117*tmp_255;
      real_t tmp_259 = tmp_136 - 1.0;
      real_t tmp_260 = 2.0*tmp_259;
      real_t tmp_261 = tmp_152*tmp_260;
      real_t tmp_262 = tmp_176*tmp_260;
      real_t tmp_263 = tmp_164*tmp_260;
      real_t tmp_264 = tmp_183 - 1.0;
      real_t tmp_265 = 2.0*tmp_264;
      real_t tmp_266 = tmp_199*tmp_265;
      real_t tmp_267 = tmp_223*tmp_265;
      real_t tmp_268 = tmp_211*tmp_265;
      real_t tmp_269 = tmp_2 - 1.0;
      real_t tmp_270 = 2.0*tmp_269;
      real_t tmp_271 = tmp_270*tmp_37;
      real_t tmp_272 = tmp_270*tmp_67;
      real_t tmp_273 = tmp_270*tmp_55;
      real_t tmp_274 = tmp_90 - 1.0;
      real_t tmp_275 = 2.0*tmp_274;
      real_t tmp_276 = tmp_103*tmp_275;
      real_t tmp_277 = tmp_127*tmp_275;
      real_t tmp_278 = tmp_115*tmp_275;
      real_t tmp_279 = tmp_137 - 1.0;
      real_t tmp_280 = 2.0*tmp_279;
      real_t tmp_281 = tmp_150*tmp_280;
      real_t tmp_282 = tmp_174*tmp_280;
      real_t tmp_283 = tmp_162*tmp_280;
      real_t tmp_284 = tmp_184 - 1.0;
      real_t tmp_285 = 2.0*tmp_284;
      real_t tmp_286 = tmp_197*tmp_285;
      real_t tmp_287 = tmp_221*tmp_285;
      real_t tmp_288 = tmp_209*tmp_285;
      real_t tmp_289 = 1.1055728090000847;
      real_t tmp_290 = tmp_289*tmp_67;
      real_t tmp_291 = 4.6832815729997463;
      real_t tmp_292 = tmp_291*tmp_69;
      real_t tmp_293 = tmp_290 + tmp_292;
      real_t tmp_294 = tmp_1*tmp_37;
      real_t tmp_295 = tmp_2*tmp_42;
      real_t tmp_296 = tmp_294 + tmp_295;
      real_t tmp_297 = tmp_1*tmp_55;
      real_t tmp_298 = tmp_2*tmp_57;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = 4.6832815729997463;
      real_t tmp_301 = tmp_127*tmp_300;
      real_t tmp_302 = 1.1055728090000847;
      real_t tmp_303 = tmp_129*tmp_302;
      real_t tmp_304 = tmp_301 + tmp_303;
      real_t tmp_305 = tmp_103*tmp_89;
      real_t tmp_306 = tmp_105*tmp_90;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_115*tmp_89;
      real_t tmp_309 = tmp_117*tmp_90;
      real_t tmp_310 = tmp_308 + tmp_309;
      real_t tmp_311 = 1.1055728090000847;
      real_t tmp_312 = tmp_174*tmp_311;
      real_t tmp_313 = 1.1055728090000847;
      real_t tmp_314 = tmp_176*tmp_313;
      real_t tmp_315 = tmp_312 + tmp_314;
      real_t tmp_316 = tmp_136*tmp_150;
      real_t tmp_317 = tmp_137*tmp_152;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_136*tmp_162;
      real_t tmp_320 = tmp_137*tmp_164;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = 1.1055728090000847;
      real_t tmp_323 = tmp_221*tmp_322;
      real_t tmp_324 = 1.1055728090000847;
      real_t tmp_325 = tmp_223*tmp_324;
      real_t tmp_326 = tmp_323 + tmp_325;
      real_t tmp_327 = tmp_183*tmp_197;
      real_t tmp_328 = tmp_184*tmp_199;
      real_t tmp_329 = tmp_327 + tmp_328;
      real_t tmp_330 = tmp_183*tmp_209;
      real_t tmp_331 = tmp_184*tmp_211;
      real_t tmp_332 = tmp_330 + tmp_331;
      real_t tmp_333 = 1.1055728090000847;
      real_t tmp_334 = tmp_333*tmp_67;
      real_t tmp_335 = tmp_291*tmp_70;
      real_t tmp_336 = tmp_334 + tmp_335;
      real_t tmp_337 = tmp_0*tmp_37;
      real_t tmp_338 = tmp_2*tmp_47;
      real_t tmp_339 = tmp_337 + tmp_338;
      real_t tmp_340 = tmp_0*tmp_55;
      real_t tmp_341 = tmp_2*tmp_59;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = 1.1055728090000847;
      real_t tmp_344 = tmp_127*tmp_343;
      real_t tmp_345 = tmp_130*tmp_302;
      real_t tmp_346 = tmp_344 + tmp_345;
      real_t tmp_347 = tmp_103*tmp_88;
      real_t tmp_348 = tmp_107*tmp_90;
      real_t tmp_349 = tmp_347 + tmp_348;
      real_t tmp_350 = tmp_115*tmp_88;
      real_t tmp_351 = tmp_119*tmp_90;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = 4.6832815729997463;
      real_t tmp_354 = tmp_174*tmp_353;
      real_t tmp_355 = tmp_177*tmp_313;
      real_t tmp_356 = tmp_354 + tmp_355;
      real_t tmp_357 = tmp_135*tmp_150;
      real_t tmp_358 = tmp_137*tmp_154;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_135*tmp_162;
      real_t tmp_361 = tmp_137*tmp_166;
      real_t tmp_362 = tmp_360 + tmp_361;
      real_t tmp_363 = 1.1055728090000847;
      real_t tmp_364 = tmp_221*tmp_363;
      real_t tmp_365 = tmp_224*tmp_324;
      real_t tmp_366 = tmp_364 + tmp_365;
      real_t tmp_367 = tmp_182*tmp_197;
      real_t tmp_368 = tmp_184*tmp_201;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = tmp_182*tmp_209;
      real_t tmp_371 = tmp_184*tmp_213;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_333*tmp_69;
      real_t tmp_374 = tmp_289*tmp_70;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_0*tmp_42;
      real_t tmp_377 = tmp_1*tmp_47;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_0*tmp_57;
      real_t tmp_380 = tmp_1*tmp_59;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_129*tmp_343;
      real_t tmp_383 = tmp_130*tmp_300;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_105*tmp_88;
      real_t tmp_386 = tmp_107*tmp_89;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_117*tmp_88;
      real_t tmp_389 = tmp_119*tmp_89;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_176*tmp_353;
      real_t tmp_392 = tmp_177*tmp_311;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = tmp_135*tmp_152;
      real_t tmp_395 = tmp_136*tmp_154;
      real_t tmp_396 = tmp_394 + tmp_395;
      real_t tmp_397 = tmp_135*tmp_164;
      real_t tmp_398 = tmp_136*tmp_166;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = tmp_223*tmp_363;
      real_t tmp_401 = tmp_224*tmp_322;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_182*tmp_199;
      real_t tmp_404 = tmp_183*tmp_201;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_182*tmp_211;
      real_t tmp_407 = tmp_183*tmp_213;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_1;
      real_t tmp_410 = 4.0 - tmp_0;
      real_t tmp_411 = -tmp_291 + tmp_409 + tmp_410;
      real_t tmp_412 = tmp_37*tmp_411;
      real_t tmp_413 = -tmp_295 - tmp_338 + tmp_412;
      real_t tmp_414 = tmp_411*tmp_67;
      real_t tmp_415 = -tmp_292 - tmp_335 + 2.0*tmp_414;
      real_t tmp_416 = tmp_411*tmp_55;
      real_t tmp_417 = -tmp_298 - tmp_341 + tmp_416;
      real_t tmp_418 = -tmp_89;
      real_t tmp_419 = 4.0 - tmp_88;
      real_t tmp_420 = -tmp_302 + tmp_418 + tmp_419;
      real_t tmp_421 = tmp_103*tmp_420;
      real_t tmp_422 = -tmp_306 - tmp_348 + tmp_421;
      real_t tmp_423 = tmp_127*tmp_420;
      real_t tmp_424 = -tmp_303 - tmp_345 + 2.0*tmp_423;
      real_t tmp_425 = tmp_115*tmp_420;
      real_t tmp_426 = -tmp_309 - tmp_351 + tmp_425;
      real_t tmp_427 = -tmp_136;
      real_t tmp_428 = 4.0 - tmp_135;
      real_t tmp_429 = -tmp_313 + tmp_427 + tmp_428;
      real_t tmp_430 = tmp_150*tmp_429;
      real_t tmp_431 = -tmp_317 - tmp_358 + tmp_430;
      real_t tmp_432 = tmp_174*tmp_429;
      real_t tmp_433 = -tmp_314 - tmp_355 + 2.0*tmp_432;
      real_t tmp_434 = tmp_162*tmp_429;
      real_t tmp_435 = -tmp_320 - tmp_361 + tmp_434;
      real_t tmp_436 = -tmp_183;
      real_t tmp_437 = 4.0 - tmp_182;
      real_t tmp_438 = -tmp_324 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_197*tmp_438;
      real_t tmp_440 = -tmp_328 - tmp_368 + tmp_439;
      real_t tmp_441 = tmp_221*tmp_438;
      real_t tmp_442 = -tmp_325 - tmp_365 + 2.0*tmp_441;
      real_t tmp_443 = tmp_209*tmp_438;
      real_t tmp_444 = -tmp_331 - tmp_371 + tmp_443;
      real_t tmp_445 = -tmp_2;
      real_t tmp_446 = -tmp_289 + tmp_410 + tmp_445;
      real_t tmp_447 = tmp_42*tmp_446;
      real_t tmp_448 = -tmp_294 - tmp_377 + tmp_447;
      real_t tmp_449 = tmp_446*tmp_69;
      real_t tmp_450 = -tmp_290 - tmp_374 + 2.0*tmp_449;
      real_t tmp_451 = tmp_446*tmp_57;
      real_t tmp_452 = -tmp_297 - tmp_380 + tmp_451;
      real_t tmp_453 = -tmp_90;
      real_t tmp_454 = -tmp_300 + tmp_419 + tmp_453;
      real_t tmp_455 = tmp_105*tmp_454;
      real_t tmp_456 = -tmp_305 - tmp_386 + tmp_455;
      real_t tmp_457 = tmp_129*tmp_454;
      real_t tmp_458 = -tmp_301 - tmp_383 + 2.0*tmp_457;
      real_t tmp_459 = tmp_117*tmp_454;
      real_t tmp_460 = -tmp_308 - tmp_389 + tmp_459;
      real_t tmp_461 = -tmp_137;
      real_t tmp_462 = -tmp_311 + tmp_428 + tmp_461;
      real_t tmp_463 = tmp_152*tmp_462;
      real_t tmp_464 = -tmp_316 - tmp_395 + tmp_463;
      real_t tmp_465 = tmp_176*tmp_462;
      real_t tmp_466 = -tmp_312 - tmp_392 + 2.0*tmp_465;
      real_t tmp_467 = tmp_164*tmp_462;
      real_t tmp_468 = -tmp_319 - tmp_398 + tmp_467;
      real_t tmp_469 = -tmp_184;
      real_t tmp_470 = -tmp_322 + tmp_437 + tmp_469;
      real_t tmp_471 = tmp_199*tmp_470;
      real_t tmp_472 = -tmp_327 - tmp_404 + tmp_471;
      real_t tmp_473 = tmp_223*tmp_470;
      real_t tmp_474 = -tmp_323 - tmp_401 + 2.0*tmp_473;
      real_t tmp_475 = tmp_211*tmp_470;
      real_t tmp_476 = -tmp_330 - tmp_407 + tmp_475;
      real_t tmp_477 = -tmp_333 + tmp_409 + tmp_445 + 4.0;
      real_t tmp_478 = tmp_47*tmp_477;
      real_t tmp_479 = -tmp_337 - tmp_376 + tmp_478;
      real_t tmp_480 = tmp_477*tmp_70;
      real_t tmp_481 = -tmp_334 - tmp_373 + 2.0*tmp_480;
      real_t tmp_482 = tmp_477*tmp_59;
      real_t tmp_483 = -tmp_340 - tmp_379 + tmp_482;
      real_t tmp_484 = -tmp_343 + tmp_418 + tmp_453 + 4.0;
      real_t tmp_485 = tmp_107*tmp_484;
      real_t tmp_486 = -tmp_347 - tmp_385 + tmp_485;
      real_t tmp_487 = tmp_130*tmp_484;
      real_t tmp_488 = -tmp_344 - tmp_382 + 2.0*tmp_487;
      real_t tmp_489 = tmp_119*tmp_484;
      real_t tmp_490 = -tmp_350 - tmp_388 + tmp_489;
      real_t tmp_491 = -tmp_353 + tmp_427 + tmp_461 + 4.0;
      real_t tmp_492 = tmp_154*tmp_491;
      real_t tmp_493 = -tmp_357 - tmp_394 + tmp_492;
      real_t tmp_494 = tmp_177*tmp_491;
      real_t tmp_495 = -tmp_354 - tmp_391 + 2.0*tmp_494;
      real_t tmp_496 = tmp_166*tmp_491;
      real_t tmp_497 = -tmp_360 - tmp_397 + tmp_496;
      real_t tmp_498 = -tmp_363 + tmp_436 + tmp_469 + 4.0;
      real_t tmp_499 = tmp_201*tmp_498;
      real_t tmp_500 = -tmp_367 - tmp_403 + tmp_499;
      real_t tmp_501 = tmp_224*tmp_498;
      real_t tmp_502 = -tmp_364 - tmp_400 + 2.0*tmp_501;
      real_t tmp_503 = tmp_213*tmp_498;
      real_t tmp_504 = -tmp_370 - tmp_406 + tmp_503;
      real_t tmp_505 = 1.0*tmp_229;
      real_t tmp_506 = tmp_47*tmp_505;
      real_t tmp_507 = tmp_505*tmp_59;
      real_t tmp_508 = tmp_505*tmp_70;
      real_t tmp_509 = 1.0*tmp_234;
      real_t tmp_510 = tmp_107*tmp_509;
      real_t tmp_511 = tmp_119*tmp_509;
      real_t tmp_512 = tmp_130*tmp_509;
      real_t tmp_513 = 1.0*tmp_239;
      real_t tmp_514 = tmp_154*tmp_513;
      real_t tmp_515 = tmp_166*tmp_513;
      real_t tmp_516 = tmp_177*tmp_513;
      real_t tmp_517 = 1.0*tmp_244;
      real_t tmp_518 = tmp_201*tmp_517;
      real_t tmp_519 = tmp_213*tmp_517;
      real_t tmp_520 = tmp_224*tmp_517;
      real_t tmp_521 = 0.012499999999999983;
      real_t tmp_522 = 16.0*tmp_521;
      real_t tmp_523 = 0.012499999999999983;
      real_t tmp_524 = 16.0*tmp_523;
      real_t tmp_525 = 0.11249999999999989;
      real_t tmp_526 = 16.0*tmp_525;
      real_t tmp_527 = 0.012499999999999983;
      real_t tmp_528 = 16.0*tmp_527;
      real_t tmp_529 = tmp_134*(tmp_105*tmp_254*tmp_510 + tmp_117*tmp_254*tmp_511 + tmp_129*tmp_237*tmp_254) + tmp_181*(tmp_152*tmp_259*tmp_514 + tmp_164*tmp_259*tmp_515 + tmp_176*tmp_242*tmp_259) + tmp_228*(tmp_199*tmp_264*tmp_518 + tmp_211*tmp_264*tmp_519 + tmp_223*tmp_247*tmp_264) + tmp_87*(tmp_232*tmp_249*tmp_69 + tmp_249*tmp_42*tmp_506 + tmp_249*tmp_507*tmp_57);
      real_t tmp_530 = tmp_269*tmp_37;
      real_t tmp_531 = tmp_269*tmp_67;
      real_t tmp_532 = tmp_269*tmp_55;
      real_t tmp_533 = tmp_103*tmp_274;
      real_t tmp_534 = tmp_127*tmp_274;
      real_t tmp_535 = tmp_115*tmp_274;
      real_t tmp_536 = tmp_150*tmp_279;
      real_t tmp_537 = tmp_174*tmp_279;
      real_t tmp_538 = tmp_162*tmp_279;
      real_t tmp_539 = tmp_197*tmp_284;
      real_t tmp_540 = tmp_221*tmp_284;
      real_t tmp_541 = tmp_209*tmp_284;
      real_t tmp_542 = tmp_134*(tmp_237*tmp_534 + tmp_510*tmp_533 + tmp_511*tmp_535) + tmp_181*(tmp_242*tmp_537 + tmp_514*tmp_536 + tmp_515*tmp_538) + tmp_228*(tmp_247*tmp_540 + tmp_518*tmp_539 + tmp_519*tmp_541) + tmp_87*(tmp_232*tmp_531 + tmp_506*tmp_530 + tmp_507*tmp_532);
      real_t tmp_543 = 1.0*tmp_249;
      real_t tmp_544 = tmp_42*tmp_543;
      real_t tmp_545 = tmp_543*tmp_57;
      real_t tmp_546 = tmp_543*tmp_69;
      real_t tmp_547 = 1.0*tmp_254;
      real_t tmp_548 = tmp_105*tmp_547;
      real_t tmp_549 = tmp_117*tmp_547;
      real_t tmp_550 = tmp_129*tmp_547;
      real_t tmp_551 = 1.0*tmp_259;
      real_t tmp_552 = tmp_152*tmp_551;
      real_t tmp_553 = tmp_164*tmp_551;
      real_t tmp_554 = tmp_176*tmp_551;
      real_t tmp_555 = 1.0*tmp_264;
      real_t tmp_556 = tmp_199*tmp_555;
      real_t tmp_557 = tmp_211*tmp_555;
      real_t tmp_558 = tmp_223*tmp_555;
      real_t tmp_559 = 0.012499999999999983;
      real_t tmp_560 = 16.0*tmp_559;
      real_t tmp_561 = 0.11249999999999989;
      real_t tmp_562 = 16.0*tmp_561;
      real_t tmp_563 = 0.012499999999999983;
      real_t tmp_564 = 16.0*tmp_563;
      real_t tmp_565 = 0.012499999999999983;
      real_t tmp_566 = 16.0*tmp_565;
      real_t tmp_567 = tmp_134*(tmp_257*tmp_534 + tmp_533*tmp_548 + tmp_535*tmp_549) + tmp_181*(tmp_262*tmp_537 + tmp_536*tmp_552 + tmp_538*tmp_553) + tmp_228*(tmp_267*tmp_540 + tmp_539*tmp_556 + tmp_541*tmp_557) + tmp_87*(tmp_252*tmp_531 + tmp_530*tmp_544 + tmp_532*tmp_545);
      real_t tmp_568 = 1.0*tmp_269;
      real_t tmp_569 = tmp_37*tmp_568;
      real_t tmp_570 = tmp_55*tmp_568;
      real_t tmp_571 = tmp_568*tmp_67;
      real_t tmp_572 = 1.0*tmp_274;
      real_t tmp_573 = tmp_103*tmp_572;
      real_t tmp_574 = tmp_115*tmp_572;
      real_t tmp_575 = tmp_127*tmp_572;
      real_t tmp_576 = 1.0*tmp_279;
      real_t tmp_577 = tmp_150*tmp_576;
      real_t tmp_578 = tmp_162*tmp_576;
      real_t tmp_579 = tmp_174*tmp_576;
      real_t tmp_580 = 1.0*tmp_284;
      real_t tmp_581 = tmp_197*tmp_580;
      real_t tmp_582 = tmp_209*tmp_580;
      real_t tmp_583 = tmp_221*tmp_580;
      real_t tmp_584 = 0.11249999999999989;
      real_t tmp_585 = 16.0*tmp_584;
      real_t tmp_586 = 0.012499999999999983;
      real_t tmp_587 = 16.0*tmp_586;
      real_t tmp_588 = 0.012499999999999983;
      real_t tmp_589 = 16.0*tmp_588;
      real_t tmp_590 = 0.012499999999999983;
      real_t tmp_591 = 16.0*tmp_590;
      real_t tmp_592 = 0.27639320225002117;
      real_t tmp_593 = tmp_37*tmp_592;
      real_t tmp_594 = 1.1708203932499366;
      real_t tmp_595 = tmp_42*tmp_594;
      real_t tmp_596 = tmp_593 + tmp_595;
      real_t tmp_597 = 2*tmp_596;
      real_t tmp_598 = tmp_55*tmp_592;
      real_t tmp_599 = tmp_57*tmp_594;
      real_t tmp_600 = tmp_598 + tmp_599;
      real_t tmp_601 = 2*tmp_600;
      real_t tmp_602 = tmp_1*tmp_67;
      real_t tmp_603 = tmp_2*tmp_69;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = 1.1708203932499366;
      real_t tmp_606 = tmp_103*tmp_605;
      real_t tmp_607 = 0.27639320225002117;
      real_t tmp_608 = tmp_105*tmp_607;
      real_t tmp_609 = tmp_606 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_115*tmp_605;
      real_t tmp_612 = tmp_117*tmp_607;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 2*tmp_613;
      real_t tmp_615 = tmp_127*tmp_89;
      real_t tmp_616 = tmp_129*tmp_90;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 0.27639320225002117;
      real_t tmp_619 = tmp_150*tmp_618;
      real_t tmp_620 = 0.27639320225002117;
      real_t tmp_621 = tmp_152*tmp_620;
      real_t tmp_622 = tmp_619 + tmp_621;
      real_t tmp_623 = 2*tmp_622;
      real_t tmp_624 = tmp_162*tmp_618;
      real_t tmp_625 = tmp_164*tmp_620;
      real_t tmp_626 = tmp_624 + tmp_625;
      real_t tmp_627 = 2*tmp_626;
      real_t tmp_628 = tmp_136*tmp_174;
      real_t tmp_629 = tmp_137*tmp_176;
      real_t tmp_630 = tmp_628 + tmp_629;
      real_t tmp_631 = 0.27639320225002117;
      real_t tmp_632 = tmp_197*tmp_631;
      real_t tmp_633 = 0.27639320225002117;
      real_t tmp_634 = tmp_199*tmp_633;
      real_t tmp_635 = tmp_632 + tmp_634;
      real_t tmp_636 = 2*tmp_635;
      real_t tmp_637 = tmp_209*tmp_631;
      real_t tmp_638 = tmp_211*tmp_633;
      real_t tmp_639 = tmp_637 + tmp_638;
      real_t tmp_640 = 2*tmp_639;
      real_t tmp_641 = tmp_183*tmp_221;
      real_t tmp_642 = tmp_184*tmp_223;
      real_t tmp_643 = tmp_641 + tmp_642;
      real_t tmp_644 = 0.27639320225002117;
      real_t tmp_645 = tmp_37*tmp_644;
      real_t tmp_646 = tmp_47*tmp_594;
      real_t tmp_647 = tmp_645 + tmp_646;
      real_t tmp_648 = 2*tmp_647;
      real_t tmp_649 = tmp_55*tmp_644;
      real_t tmp_650 = tmp_59*tmp_594;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_0*tmp_67;
      real_t tmp_654 = tmp_2*tmp_70;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 0.27639320225002117;
      real_t tmp_657 = tmp_103*tmp_656;
      real_t tmp_658 = tmp_107*tmp_607;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = 2*tmp_659;
      real_t tmp_661 = tmp_115*tmp_656;
      real_t tmp_662 = tmp_119*tmp_607;
      real_t tmp_663 = tmp_661 + tmp_662;
      real_t tmp_664 = 2*tmp_663;
      real_t tmp_665 = tmp_127*tmp_88;
      real_t tmp_666 = tmp_130*tmp_90;
      real_t tmp_667 = tmp_665 + tmp_666;
      real_t tmp_668 = 1.1708203932499366;
      real_t tmp_669 = tmp_150*tmp_668;
      real_t tmp_670 = tmp_154*tmp_620;
      real_t tmp_671 = tmp_669 + tmp_670;
      real_t tmp_672 = 2*tmp_671;
      real_t tmp_673 = tmp_162*tmp_668;
      real_t tmp_674 = tmp_166*tmp_620;
      real_t tmp_675 = tmp_673 + tmp_674;
      real_t tmp_676 = 2*tmp_675;
      real_t tmp_677 = tmp_135*tmp_174;
      real_t tmp_678 = tmp_137*tmp_177;
      real_t tmp_679 = tmp_677 + tmp_678;
      real_t tmp_680 = 0.27639320225002117;
      real_t tmp_681 = tmp_197*tmp_680;
      real_t tmp_682 = tmp_201*tmp_633;
      real_t tmp_683 = tmp_681 + tmp_682;
      real_t tmp_684 = 2*tmp_683;
      real_t tmp_685 = tmp_209*tmp_680;
      real_t tmp_686 = tmp_213*tmp_633;
      real_t tmp_687 = tmp_685 + tmp_686;
      real_t tmp_688 = 2*tmp_687;
      real_t tmp_689 = tmp_182*tmp_221;
      real_t tmp_690 = tmp_184*tmp_224;
      real_t tmp_691 = tmp_689 + tmp_690;
      real_t tmp_692 = tmp_42*tmp_644;
      real_t tmp_693 = tmp_47*tmp_592;
      real_t tmp_694 = tmp_692 + tmp_693;
      real_t tmp_695 = 2*tmp_694;
      real_t tmp_696 = tmp_57*tmp_644;
      real_t tmp_697 = tmp_59*tmp_592;
      real_t tmp_698 = tmp_696 + tmp_697;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = tmp_0*tmp_69;
      real_t tmp_701 = tmp_1*tmp_70;
      real_t tmp_702 = tmp_700 + tmp_701;
      real_t tmp_703 = tmp_105*tmp_656;
      real_t tmp_704 = tmp_107*tmp_605;
      real_t tmp_705 = tmp_703 + tmp_704;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = tmp_117*tmp_656;
      real_t tmp_708 = tmp_119*tmp_605;
      real_t tmp_709 = tmp_707 + tmp_708;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = tmp_129*tmp_88;
      real_t tmp_712 = tmp_130*tmp_89;
      real_t tmp_713 = tmp_711 + tmp_712;
      real_t tmp_714 = tmp_152*tmp_668;
      real_t tmp_715 = tmp_154*tmp_618;
      real_t tmp_716 = tmp_714 + tmp_715;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_164*tmp_668;
      real_t tmp_719 = tmp_166*tmp_618;
      real_t tmp_720 = tmp_718 + tmp_719;
      real_t tmp_721 = 2*tmp_720;
      real_t tmp_722 = tmp_135*tmp_176;
      real_t tmp_723 = tmp_136*tmp_177;
      real_t tmp_724 = tmp_722 + tmp_723;
      real_t tmp_725 = tmp_199*tmp_680;
      real_t tmp_726 = tmp_201*tmp_631;
      real_t tmp_727 = tmp_725 + tmp_726;
      real_t tmp_728 = 2*tmp_727;
      real_t tmp_729 = tmp_211*tmp_680;
      real_t tmp_730 = tmp_213*tmp_631;
      real_t tmp_731 = tmp_729 + tmp_730;
      real_t tmp_732 = 2*tmp_731;
      real_t tmp_733 = tmp_182*tmp_223;
      real_t tmp_734 = tmp_183*tmp_224;
      real_t tmp_735 = tmp_733 + tmp_734;
      real_t tmp_736 = 0.5*tmp_412 - tmp_595 - tmp_646;
      real_t tmp_737 = 2*tmp_736;
      real_t tmp_738 = 0.5*tmp_416 - tmp_599 - tmp_650;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = 1.0*tmp_414 - tmp_603 - tmp_654;
      real_t tmp_741 = 0.5*tmp_421 - tmp_608 - tmp_658;
      real_t tmp_742 = 2*tmp_741;
      real_t tmp_743 = 0.5*tmp_425 - tmp_612 - tmp_662;
      real_t tmp_744 = 2*tmp_743;
      real_t tmp_745 = 1.0*tmp_423 - tmp_616 - tmp_666;
      real_t tmp_746 = 0.5*tmp_430 - tmp_621 - tmp_670;
      real_t tmp_747 = 2*tmp_746;
      real_t tmp_748 = 0.5*tmp_434 - tmp_625 - tmp_674;
      real_t tmp_749 = 2*tmp_748;
      real_t tmp_750 = 1.0*tmp_432 - tmp_629 - tmp_678;
      real_t tmp_751 = 0.5*tmp_439 - tmp_634 - tmp_682;
      real_t tmp_752 = 2*tmp_751;
      real_t tmp_753 = 0.5*tmp_443 - tmp_638 - tmp_686;
      real_t tmp_754 = 2*tmp_753;
      real_t tmp_755 = 1.0*tmp_441 - tmp_642 - tmp_690;
      real_t tmp_756 = 0.5*tmp_447 - tmp_593 - tmp_693;
      real_t tmp_757 = 2*tmp_756;
      real_t tmp_758 = 0.5*tmp_451 - tmp_598 - tmp_697;
      real_t tmp_759 = 2*tmp_758;
      real_t tmp_760 = 1.0*tmp_449 - tmp_602 - tmp_701;
      real_t tmp_761 = 0.5*tmp_455 - tmp_606 - tmp_704;
      real_t tmp_762 = 2*tmp_761;
      real_t tmp_763 = 0.5*tmp_459 - tmp_611 - tmp_708;
      real_t tmp_764 = 2*tmp_763;
      real_t tmp_765 = 1.0*tmp_457 - tmp_615 - tmp_712;
      real_t tmp_766 = 0.5*tmp_463 - tmp_619 - tmp_715;
      real_t tmp_767 = 2*tmp_766;
      real_t tmp_768 = 0.5*tmp_467 - tmp_624 - tmp_719;
      real_t tmp_769 = 2*tmp_768;
      real_t tmp_770 = 1.0*tmp_465 - tmp_628 - tmp_723;
      real_t tmp_771 = 0.5*tmp_471 - tmp_632 - tmp_726;
      real_t tmp_772 = 2*tmp_771;
      real_t tmp_773 = 0.5*tmp_475 - tmp_637 - tmp_730;
      real_t tmp_774 = 2*tmp_773;
      real_t tmp_775 = 1.0*tmp_473 - tmp_641 - tmp_734;
      real_t tmp_776 = 0.5*tmp_478 - tmp_645 - tmp_692;
      real_t tmp_777 = 2*tmp_776;
      real_t tmp_778 = 0.5*tmp_482 - tmp_649 - tmp_696;
      real_t tmp_779 = 2*tmp_778;
      real_t tmp_780 = 1.0*tmp_480 - tmp_653 - tmp_700;
      real_t tmp_781 = 0.5*tmp_485 - tmp_657 - tmp_703;
      real_t tmp_782 = 2*tmp_781;
      real_t tmp_783 = 0.5*tmp_489 - tmp_661 - tmp_707;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 1.0*tmp_487 - tmp_665 - tmp_711;
      real_t tmp_786 = 0.5*tmp_492 - tmp_669 - tmp_714;
      real_t tmp_787 = 2*tmp_786;
      real_t tmp_788 = 0.5*tmp_496 - tmp_673 - tmp_718;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = 1.0*tmp_494 - tmp_677 - tmp_722;
      real_t tmp_791 = 0.5*tmp_499 - tmp_681 - tmp_725;
      real_t tmp_792 = 2*tmp_791;
      real_t tmp_793 = 0.5*tmp_503 - tmp_685 - tmp_729;
      real_t tmp_794 = 2*tmp_793;
      real_t tmp_795 = 1.0*tmp_501 - tmp_689 - tmp_733;
      real_t a_0_0 = tmp_134*(tmp_109*tmp_111 + tmp_121*tmp_123 + tmp_131*tmp_133) + tmp_181*(tmp_156*tmp_158 + tmp_168*tmp_170 + tmp_178*tmp_180) + tmp_228*(tmp_203*tmp_205 + tmp_215*tmp_217 + tmp_225*tmp_227) + tmp_87*(tmp_49*tmp_51 + tmp_61*tmp_63 + tmp_71*tmp_73);
      real_t a_0_1 = tmp_134*(tmp_110*tmp_236 + tmp_122*tmp_238 + tmp_131*tmp_237) + tmp_181*(tmp_157*tmp_241 + tmp_169*tmp_243 + tmp_178*tmp_242) + tmp_228*(tmp_204*tmp_246 + tmp_216*tmp_248 + tmp_225*tmp_247) + tmp_87*(tmp_231*tmp_50 + tmp_232*tmp_71 + tmp_233*tmp_62);
      real_t a_0_2 = tmp_134*(tmp_110*tmp_256 + tmp_122*tmp_258 + tmp_131*tmp_257) + tmp_181*(tmp_157*tmp_261 + tmp_169*tmp_263 + tmp_178*tmp_262) + tmp_228*(tmp_204*tmp_266 + tmp_216*tmp_268 + tmp_225*tmp_267) + tmp_87*(tmp_251*tmp_50 + tmp_252*tmp_71 + tmp_253*tmp_62);
      real_t a_0_3 = tmp_134*(tmp_110*tmp_276 + tmp_122*tmp_278 + tmp_131*tmp_277) + tmp_181*(tmp_157*tmp_281 + tmp_169*tmp_283 + tmp_178*tmp_282) + tmp_228*(tmp_204*tmp_286 + tmp_216*tmp_288 + tmp_225*tmp_287) + tmp_87*(tmp_271*tmp_50 + tmp_272*tmp_71 + tmp_273*tmp_62);
      real_t a_0_4 = tmp_134*(tmp_111*tmp_307 + tmp_123*tmp_310 + tmp_131*tmp_304) + tmp_181*(tmp_158*tmp_318 + tmp_170*tmp_321 + tmp_178*tmp_315) + tmp_228*(tmp_205*tmp_329 + tmp_217*tmp_332 + tmp_225*tmp_326) + tmp_87*(tmp_293*tmp_71 + tmp_296*tmp_51 + tmp_299*tmp_63);
      real_t a_0_5 = tmp_134*(tmp_111*tmp_349 + tmp_123*tmp_352 + tmp_131*tmp_346) + tmp_181*(tmp_158*tmp_359 + tmp_170*tmp_362 + tmp_178*tmp_356) + tmp_228*(tmp_205*tmp_369 + tmp_217*tmp_372 + tmp_225*tmp_366) + tmp_87*(tmp_336*tmp_71 + tmp_339*tmp_51 + tmp_342*tmp_63);
      real_t a_0_6 = tmp_134*(tmp_111*tmp_387 + tmp_123*tmp_390 + tmp_131*tmp_384) + tmp_181*(tmp_158*tmp_396 + tmp_170*tmp_399 + tmp_178*tmp_393) + tmp_228*(tmp_205*tmp_405 + tmp_217*tmp_408 + tmp_225*tmp_402) + tmp_87*(tmp_375*tmp_71 + tmp_378*tmp_51 + tmp_381*tmp_63);
      real_t a_0_7 = tmp_134*(tmp_111*tmp_422 + tmp_123*tmp_426 + tmp_131*tmp_424) + tmp_181*(tmp_158*tmp_431 + tmp_170*tmp_435 + tmp_178*tmp_433) + tmp_228*(tmp_205*tmp_440 + tmp_217*tmp_444 + tmp_225*tmp_442) + tmp_87*(tmp_413*tmp_51 + tmp_415*tmp_71 + tmp_417*tmp_63);
      real_t a_0_8 = tmp_134*(tmp_111*tmp_456 + tmp_123*tmp_460 + tmp_131*tmp_458) + tmp_181*(tmp_158*tmp_464 + tmp_170*tmp_468 + tmp_178*tmp_466) + tmp_228*(tmp_205*tmp_472 + tmp_217*tmp_476 + tmp_225*tmp_474) + tmp_87*(tmp_448*tmp_51 + tmp_450*tmp_71 + tmp_452*tmp_63);
      real_t a_0_9 = tmp_134*(tmp_111*tmp_486 + tmp_123*tmp_490 + tmp_131*tmp_488) + tmp_181*(tmp_158*tmp_493 + tmp_170*tmp_497 + tmp_178*tmp_495) + tmp_228*(tmp_205*tmp_500 + tmp_217*tmp_504 + tmp_225*tmp_502) + tmp_87*(tmp_479*tmp_51 + tmp_481*tmp_71 + tmp_483*tmp_63);
      real_t a_1_0 = tmp_134*(tmp_109*tmp_510 + tmp_121*tmp_511 + tmp_133*tmp_512) + tmp_181*(tmp_156*tmp_514 + tmp_168*tmp_515 + tmp_180*tmp_516) + tmp_228*(tmp_203*tmp_518 + tmp_215*tmp_519 + tmp_227*tmp_520) + tmp_87*(tmp_49*tmp_506 + tmp_507*tmp_61 + tmp_508*tmp_73);
      real_t a_1_1 = tmp_134*((tmp_107*tmp_107)*tmp_524 + (tmp_119*tmp_119)*tmp_524 + 32.0*(tmp_130*tmp_130)*tmp_523) + tmp_181*((tmp_154*tmp_154)*tmp_526 + (tmp_166*tmp_166)*tmp_526 + 32.0*(tmp_177*tmp_177)*tmp_525) + tmp_228*((tmp_201*tmp_201)*tmp_528 + (tmp_213*tmp_213)*tmp_528 + 32.0*(tmp_224*tmp_224)*tmp_527) + tmp_87*((tmp_47*tmp_47)*tmp_522 + 32.0*tmp_521*(tmp_70*tmp_70) + tmp_522*(tmp_59*tmp_59));
      real_t a_1_2 = tmp_529;
      real_t a_1_3 = tmp_542;
      real_t a_1_4 = tmp_134*(tmp_304*tmp_512 + tmp_307*tmp_510 + tmp_310*tmp_511) + tmp_181*(tmp_315*tmp_516 + tmp_318*tmp_514 + tmp_321*tmp_515) + tmp_228*(tmp_326*tmp_520 + tmp_329*tmp_518 + tmp_332*tmp_519) + tmp_87*(tmp_293*tmp_508 + tmp_296*tmp_506 + tmp_299*tmp_507);
      real_t a_1_5 = tmp_134*(tmp_346*tmp_512 + tmp_349*tmp_510 + tmp_352*tmp_511) + tmp_181*(tmp_356*tmp_516 + tmp_359*tmp_514 + tmp_362*tmp_515) + tmp_228*(tmp_366*tmp_520 + tmp_369*tmp_518 + tmp_372*tmp_519) + tmp_87*(tmp_336*tmp_508 + tmp_339*tmp_506 + tmp_342*tmp_507);
      real_t a_1_6 = tmp_134*(tmp_384*tmp_512 + tmp_387*tmp_510 + tmp_390*tmp_511) + tmp_181*(tmp_393*tmp_516 + tmp_396*tmp_514 + tmp_399*tmp_515) + tmp_228*(tmp_402*tmp_520 + tmp_405*tmp_518 + tmp_408*tmp_519) + tmp_87*(tmp_375*tmp_508 + tmp_378*tmp_506 + tmp_381*tmp_507);
      real_t a_1_7 = tmp_134*(tmp_422*tmp_510 + tmp_424*tmp_512 + tmp_426*tmp_511) + tmp_181*(tmp_431*tmp_514 + tmp_433*tmp_516 + tmp_435*tmp_515) + tmp_228*(tmp_440*tmp_518 + tmp_442*tmp_520 + tmp_444*tmp_519) + tmp_87*(tmp_413*tmp_506 + tmp_415*tmp_508 + tmp_417*tmp_507);
      real_t a_1_8 = tmp_134*(tmp_456*tmp_510 + tmp_458*tmp_512 + tmp_460*tmp_511) + tmp_181*(tmp_464*tmp_514 + tmp_466*tmp_516 + tmp_468*tmp_515) + tmp_228*(tmp_472*tmp_518 + tmp_474*tmp_520 + tmp_476*tmp_519) + tmp_87*(tmp_448*tmp_506 + tmp_450*tmp_508 + tmp_452*tmp_507);
      real_t a_1_9 = tmp_134*(tmp_486*tmp_510 + tmp_488*tmp_512 + tmp_490*tmp_511) + tmp_181*(tmp_493*tmp_514 + tmp_495*tmp_516 + tmp_497*tmp_515) + tmp_228*(tmp_500*tmp_518 + tmp_502*tmp_520 + tmp_504*tmp_519) + tmp_87*(tmp_479*tmp_506 + tmp_481*tmp_508 + tmp_483*tmp_507);
      real_t a_2_0 = tmp_134*(tmp_109*tmp_548 + tmp_121*tmp_549 + tmp_133*tmp_550) + tmp_181*(tmp_156*tmp_552 + tmp_168*tmp_553 + tmp_180*tmp_554) + tmp_228*(tmp_203*tmp_556 + tmp_215*tmp_557 + tmp_227*tmp_558) + tmp_87*(tmp_49*tmp_544 + tmp_545*tmp_61 + tmp_546*tmp_73);
      real_t a_2_1 = tmp_529;
      real_t a_2_2 = tmp_134*((tmp_105*tmp_105)*tmp_562 + (tmp_117*tmp_117)*tmp_562 + 32.0*(tmp_129*tmp_129)*tmp_561) + tmp_181*((tmp_152*tmp_152)*tmp_564 + (tmp_164*tmp_164)*tmp_564 + 32.0*(tmp_176*tmp_176)*tmp_563) + tmp_228*((tmp_199*tmp_199)*tmp_566 + (tmp_211*tmp_211)*tmp_566 + 32.0*(tmp_223*tmp_223)*tmp_565) + tmp_87*((tmp_42*tmp_42)*tmp_560 + 32.0*tmp_559*(tmp_69*tmp_69) + tmp_560*(tmp_57*tmp_57));
      real_t a_2_3 = tmp_567;
      real_t a_2_4 = tmp_134*(tmp_304*tmp_550 + tmp_307*tmp_548 + tmp_310*tmp_549) + tmp_181*(tmp_315*tmp_554 + tmp_318*tmp_552 + tmp_321*tmp_553) + tmp_228*(tmp_326*tmp_558 + tmp_329*tmp_556 + tmp_332*tmp_557) + tmp_87*(tmp_293*tmp_546 + tmp_296*tmp_544 + tmp_299*tmp_545);
      real_t a_2_5 = tmp_134*(tmp_346*tmp_550 + tmp_349*tmp_548 + tmp_352*tmp_549) + tmp_181*(tmp_356*tmp_554 + tmp_359*tmp_552 + tmp_362*tmp_553) + tmp_228*(tmp_366*tmp_558 + tmp_369*tmp_556 + tmp_372*tmp_557) + tmp_87*(tmp_336*tmp_546 + tmp_339*tmp_544 + tmp_342*tmp_545);
      real_t a_2_6 = tmp_134*(tmp_384*tmp_550 + tmp_387*tmp_548 + tmp_390*tmp_549) + tmp_181*(tmp_393*tmp_554 + tmp_396*tmp_552 + tmp_399*tmp_553) + tmp_228*(tmp_402*tmp_558 + tmp_405*tmp_556 + tmp_408*tmp_557) + tmp_87*(tmp_375*tmp_546 + tmp_378*tmp_544 + tmp_381*tmp_545);
      real_t a_2_7 = tmp_134*(tmp_422*tmp_548 + tmp_424*tmp_550 + tmp_426*tmp_549) + tmp_181*(tmp_431*tmp_552 + tmp_433*tmp_554 + tmp_435*tmp_553) + tmp_228*(tmp_440*tmp_556 + tmp_442*tmp_558 + tmp_444*tmp_557) + tmp_87*(tmp_413*tmp_544 + tmp_415*tmp_546 + tmp_417*tmp_545);
      real_t a_2_8 = tmp_134*(tmp_456*tmp_548 + tmp_458*tmp_550 + tmp_460*tmp_549) + tmp_181*(tmp_464*tmp_552 + tmp_466*tmp_554 + tmp_468*tmp_553) + tmp_228*(tmp_472*tmp_556 + tmp_474*tmp_558 + tmp_476*tmp_557) + tmp_87*(tmp_448*tmp_544 + tmp_450*tmp_546 + tmp_452*tmp_545);
      real_t a_2_9 = tmp_134*(tmp_486*tmp_548 + tmp_488*tmp_550 + tmp_490*tmp_549) + tmp_181*(tmp_493*tmp_552 + tmp_495*tmp_554 + tmp_497*tmp_553) + tmp_228*(tmp_500*tmp_556 + tmp_502*tmp_558 + tmp_504*tmp_557) + tmp_87*(tmp_479*tmp_544 + tmp_481*tmp_546 + tmp_483*tmp_545);
      real_t a_3_0 = tmp_134*(tmp_109*tmp_573 + tmp_121*tmp_574 + tmp_133*tmp_575) + tmp_181*(tmp_156*tmp_577 + tmp_168*tmp_578 + tmp_180*tmp_579) + tmp_228*(tmp_203*tmp_581 + tmp_215*tmp_582 + tmp_227*tmp_583) + tmp_87*(tmp_49*tmp_569 + tmp_570*tmp_61 + tmp_571*tmp_73);
      real_t a_3_1 = tmp_542;
      real_t a_3_2 = tmp_567;
      real_t a_3_3 = tmp_134*((tmp_103*tmp_103)*tmp_587 + (tmp_115*tmp_115)*tmp_587 + 32.0*(tmp_127*tmp_127)*tmp_586) + tmp_181*((tmp_150*tmp_150)*tmp_589 + (tmp_162*tmp_162)*tmp_589 + 32.0*(tmp_174*tmp_174)*tmp_588) + tmp_228*((tmp_197*tmp_197)*tmp_591 + (tmp_209*tmp_209)*tmp_591 + 32.0*(tmp_221*tmp_221)*tmp_590) + tmp_87*((tmp_37*tmp_37)*tmp_585 + (tmp_55*tmp_55)*tmp_585 + 32.0*tmp_584*(tmp_67*tmp_67));
      real_t a_3_4 = tmp_134*(tmp_304*tmp_575 + tmp_307*tmp_573 + tmp_310*tmp_574) + tmp_181*(tmp_315*tmp_579 + tmp_318*tmp_577 + tmp_321*tmp_578) + tmp_228*(tmp_326*tmp_583 + tmp_329*tmp_581 + tmp_332*tmp_582) + tmp_87*(tmp_293*tmp_571 + tmp_296*tmp_569 + tmp_299*tmp_570);
      real_t a_3_5 = tmp_134*(tmp_346*tmp_575 + tmp_349*tmp_573 + tmp_352*tmp_574) + tmp_181*(tmp_356*tmp_579 + tmp_359*tmp_577 + tmp_362*tmp_578) + tmp_228*(tmp_366*tmp_583 + tmp_369*tmp_581 + tmp_372*tmp_582) + tmp_87*(tmp_336*tmp_571 + tmp_339*tmp_569 + tmp_342*tmp_570);
      real_t a_3_6 = tmp_134*(tmp_384*tmp_575 + tmp_387*tmp_573 + tmp_390*tmp_574) + tmp_181*(tmp_393*tmp_579 + tmp_396*tmp_577 + tmp_399*tmp_578) + tmp_228*(tmp_402*tmp_583 + tmp_405*tmp_581 + tmp_408*tmp_582) + tmp_87*(tmp_375*tmp_571 + tmp_378*tmp_569 + tmp_381*tmp_570);
      real_t a_3_7 = tmp_134*(tmp_422*tmp_573 + tmp_424*tmp_575 + tmp_426*tmp_574) + tmp_181*(tmp_431*tmp_577 + tmp_433*tmp_579 + tmp_435*tmp_578) + tmp_228*(tmp_440*tmp_581 + tmp_442*tmp_583 + tmp_444*tmp_582) + tmp_87*(tmp_413*tmp_569 + tmp_415*tmp_571 + tmp_417*tmp_570);
      real_t a_3_8 = tmp_134*(tmp_456*tmp_573 + tmp_458*tmp_575 + tmp_460*tmp_574) + tmp_181*(tmp_464*tmp_577 + tmp_466*tmp_579 + tmp_468*tmp_578) + tmp_228*(tmp_472*tmp_581 + tmp_474*tmp_583 + tmp_476*tmp_582) + tmp_87*(tmp_448*tmp_569 + tmp_450*tmp_571 + tmp_452*tmp_570);
      real_t a_3_9 = tmp_134*(tmp_486*tmp_573 + tmp_488*tmp_575 + tmp_490*tmp_574) + tmp_181*(tmp_493*tmp_577 + tmp_495*tmp_579 + tmp_497*tmp_578) + tmp_228*(tmp_500*tmp_581 + tmp_502*tmp_583 + tmp_504*tmp_582) + tmp_87*(tmp_479*tmp_569 + tmp_481*tmp_571 + tmp_483*tmp_570);
      real_t a_4_0 = tmp_134*(tmp_109*tmp_610 + tmp_121*tmp_614 + tmp_133*tmp_617) + tmp_181*(tmp_156*tmp_623 + tmp_168*tmp_627 + tmp_180*tmp_630) + tmp_228*(tmp_203*tmp_636 + tmp_215*tmp_640 + tmp_227*tmp_643) + tmp_87*(tmp_49*tmp_597 + tmp_601*tmp_61 + tmp_604*tmp_73);
      real_t a_4_1 = tmp_134*(tmp_236*tmp_609 + tmp_237*tmp_617 + tmp_238*tmp_613) + tmp_181*(tmp_241*tmp_622 + tmp_242*tmp_630 + tmp_243*tmp_626) + tmp_228*(tmp_246*tmp_635 + tmp_247*tmp_643 + tmp_248*tmp_639) + tmp_87*(tmp_231*tmp_596 + tmp_232*tmp_604 + tmp_233*tmp_600);
      real_t a_4_2 = tmp_134*(tmp_256*tmp_609 + tmp_257*tmp_617 + tmp_258*tmp_613) + tmp_181*(tmp_261*tmp_622 + tmp_262*tmp_630 + tmp_263*tmp_626) + tmp_228*(tmp_266*tmp_635 + tmp_267*tmp_643 + tmp_268*tmp_639) + tmp_87*(tmp_251*tmp_596 + tmp_252*tmp_604 + tmp_253*tmp_600);
      real_t a_4_3 = tmp_134*(tmp_276*tmp_609 + tmp_277*tmp_617 + tmp_278*tmp_613) + tmp_181*(tmp_281*tmp_622 + tmp_282*tmp_630 + tmp_283*tmp_626) + tmp_228*(tmp_286*tmp_635 + tmp_287*tmp_643 + tmp_288*tmp_639) + tmp_87*(tmp_271*tmp_596 + tmp_272*tmp_604 + tmp_273*tmp_600);
      real_t a_4_4 = tmp_134*(tmp_304*tmp_617 + tmp_307*tmp_610 + tmp_310*tmp_614) + tmp_181*(tmp_315*tmp_630 + tmp_318*tmp_623 + tmp_321*tmp_627) + tmp_228*(tmp_326*tmp_643 + tmp_329*tmp_636 + tmp_332*tmp_640) + tmp_87*(tmp_293*tmp_604 + tmp_296*tmp_597 + tmp_299*tmp_601);
      real_t a_4_5 = tmp_134*(tmp_346*tmp_617 + tmp_349*tmp_610 + tmp_352*tmp_614) + tmp_181*(tmp_356*tmp_630 + tmp_359*tmp_623 + tmp_362*tmp_627) + tmp_228*(tmp_366*tmp_643 + tmp_369*tmp_636 + tmp_372*tmp_640) + tmp_87*(tmp_336*tmp_604 + tmp_339*tmp_597 + tmp_342*tmp_601);
      real_t a_4_6 = tmp_134*(tmp_384*tmp_617 + tmp_387*tmp_610 + tmp_390*tmp_614) + tmp_181*(tmp_393*tmp_630 + tmp_396*tmp_623 + tmp_399*tmp_627) + tmp_228*(tmp_402*tmp_643 + tmp_405*tmp_636 + tmp_408*tmp_640) + tmp_87*(tmp_375*tmp_604 + tmp_378*tmp_597 + tmp_381*tmp_601);
      real_t a_4_7 = tmp_134*(tmp_422*tmp_610 + tmp_424*tmp_617 + tmp_426*tmp_614) + tmp_181*(tmp_431*tmp_623 + tmp_433*tmp_630 + tmp_435*tmp_627) + tmp_228*(tmp_440*tmp_636 + tmp_442*tmp_643 + tmp_444*tmp_640) + tmp_87*(tmp_413*tmp_597 + tmp_415*tmp_604 + tmp_417*tmp_601);
      real_t a_4_8 = tmp_134*(tmp_456*tmp_610 + tmp_458*tmp_617 + tmp_460*tmp_614) + tmp_181*(tmp_464*tmp_623 + tmp_466*tmp_630 + tmp_468*tmp_627) + tmp_228*(tmp_472*tmp_636 + tmp_474*tmp_643 + tmp_476*tmp_640) + tmp_87*(tmp_448*tmp_597 + tmp_450*tmp_604 + tmp_452*tmp_601);
      real_t a_4_9 = tmp_134*(tmp_486*tmp_610 + tmp_488*tmp_617 + tmp_490*tmp_614) + tmp_181*(tmp_493*tmp_623 + tmp_495*tmp_630 + tmp_497*tmp_627) + tmp_228*(tmp_500*tmp_636 + tmp_502*tmp_643 + tmp_504*tmp_640) + tmp_87*(tmp_479*tmp_597 + tmp_481*tmp_604 + tmp_483*tmp_601);
      real_t a_5_0 = tmp_134*(tmp_109*tmp_660 + tmp_121*tmp_664 + tmp_133*tmp_667) + tmp_181*(tmp_156*tmp_672 + tmp_168*tmp_676 + tmp_180*tmp_679) + tmp_228*(tmp_203*tmp_684 + tmp_215*tmp_688 + tmp_227*tmp_691) + tmp_87*(tmp_49*tmp_648 + tmp_61*tmp_652 + tmp_655*tmp_73);
      real_t a_5_1 = tmp_134*(tmp_236*tmp_659 + tmp_237*tmp_667 + tmp_238*tmp_663) + tmp_181*(tmp_241*tmp_671 + tmp_242*tmp_679 + tmp_243*tmp_675) + tmp_228*(tmp_246*tmp_683 + tmp_247*tmp_691 + tmp_248*tmp_687) + tmp_87*(tmp_231*tmp_647 + tmp_232*tmp_655 + tmp_233*tmp_651);
      real_t a_5_2 = tmp_134*(tmp_256*tmp_659 + tmp_257*tmp_667 + tmp_258*tmp_663) + tmp_181*(tmp_261*tmp_671 + tmp_262*tmp_679 + tmp_263*tmp_675) + tmp_228*(tmp_266*tmp_683 + tmp_267*tmp_691 + tmp_268*tmp_687) + tmp_87*(tmp_251*tmp_647 + tmp_252*tmp_655 + tmp_253*tmp_651);
      real_t a_5_3 = tmp_134*(tmp_276*tmp_659 + tmp_277*tmp_667 + tmp_278*tmp_663) + tmp_181*(tmp_281*tmp_671 + tmp_282*tmp_679 + tmp_283*tmp_675) + tmp_228*(tmp_286*tmp_683 + tmp_287*tmp_691 + tmp_288*tmp_687) + tmp_87*(tmp_271*tmp_647 + tmp_272*tmp_655 + tmp_273*tmp_651);
      real_t a_5_4 = tmp_134*(tmp_304*tmp_667 + tmp_307*tmp_660 + tmp_310*tmp_664) + tmp_181*(tmp_315*tmp_679 + tmp_318*tmp_672 + tmp_321*tmp_676) + tmp_228*(tmp_326*tmp_691 + tmp_329*tmp_684 + tmp_332*tmp_688) + tmp_87*(tmp_293*tmp_655 + tmp_296*tmp_648 + tmp_299*tmp_652);
      real_t a_5_5 = tmp_134*(tmp_346*tmp_667 + tmp_349*tmp_660 + tmp_352*tmp_664) + tmp_181*(tmp_356*tmp_679 + tmp_359*tmp_672 + tmp_362*tmp_676) + tmp_228*(tmp_366*tmp_691 + tmp_369*tmp_684 + tmp_372*tmp_688) + tmp_87*(tmp_336*tmp_655 + tmp_339*tmp_648 + tmp_342*tmp_652);
      real_t a_5_6 = tmp_134*(tmp_384*tmp_667 + tmp_387*tmp_660 + tmp_390*tmp_664) + tmp_181*(tmp_393*tmp_679 + tmp_396*tmp_672 + tmp_399*tmp_676) + tmp_228*(tmp_402*tmp_691 + tmp_405*tmp_684 + tmp_408*tmp_688) + tmp_87*(tmp_375*tmp_655 + tmp_378*tmp_648 + tmp_381*tmp_652);
      real_t a_5_7 = tmp_134*(tmp_422*tmp_660 + tmp_424*tmp_667 + tmp_426*tmp_664) + tmp_181*(tmp_431*tmp_672 + tmp_433*tmp_679 + tmp_435*tmp_676) + tmp_228*(tmp_440*tmp_684 + tmp_442*tmp_691 + tmp_444*tmp_688) + tmp_87*(tmp_413*tmp_648 + tmp_415*tmp_655 + tmp_417*tmp_652);
      real_t a_5_8 = tmp_134*(tmp_456*tmp_660 + tmp_458*tmp_667 + tmp_460*tmp_664) + tmp_181*(tmp_464*tmp_672 + tmp_466*tmp_679 + tmp_468*tmp_676) + tmp_228*(tmp_472*tmp_684 + tmp_474*tmp_691 + tmp_476*tmp_688) + tmp_87*(tmp_448*tmp_648 + tmp_450*tmp_655 + tmp_452*tmp_652);
      real_t a_5_9 = tmp_134*(tmp_486*tmp_660 + tmp_488*tmp_667 + tmp_490*tmp_664) + tmp_181*(tmp_493*tmp_672 + tmp_495*tmp_679 + tmp_497*tmp_676) + tmp_228*(tmp_500*tmp_684 + tmp_502*tmp_691 + tmp_504*tmp_688) + tmp_87*(tmp_479*tmp_648 + tmp_481*tmp_655 + tmp_483*tmp_652);
      real_t a_6_0 = tmp_134*(tmp_109*tmp_706 + tmp_121*tmp_710 + tmp_133*tmp_713) + tmp_181*(tmp_156*tmp_717 + tmp_168*tmp_721 + tmp_180*tmp_724) + tmp_228*(tmp_203*tmp_728 + tmp_215*tmp_732 + tmp_227*tmp_735) + tmp_87*(tmp_49*tmp_695 + tmp_61*tmp_699 + tmp_702*tmp_73);
      real_t a_6_1 = tmp_134*(tmp_236*tmp_705 + tmp_237*tmp_713 + tmp_238*tmp_709) + tmp_181*(tmp_241*tmp_716 + tmp_242*tmp_724 + tmp_243*tmp_720) + tmp_228*(tmp_246*tmp_727 + tmp_247*tmp_735 + tmp_248*tmp_731) + tmp_87*(tmp_231*tmp_694 + tmp_232*tmp_702 + tmp_233*tmp_698);
      real_t a_6_2 = tmp_134*(tmp_256*tmp_705 + tmp_257*tmp_713 + tmp_258*tmp_709) + tmp_181*(tmp_261*tmp_716 + tmp_262*tmp_724 + tmp_263*tmp_720) + tmp_228*(tmp_266*tmp_727 + tmp_267*tmp_735 + tmp_268*tmp_731) + tmp_87*(tmp_251*tmp_694 + tmp_252*tmp_702 + tmp_253*tmp_698);
      real_t a_6_3 = tmp_134*(tmp_276*tmp_705 + tmp_277*tmp_713 + tmp_278*tmp_709) + tmp_181*(tmp_281*tmp_716 + tmp_282*tmp_724 + tmp_283*tmp_720) + tmp_228*(tmp_286*tmp_727 + tmp_287*tmp_735 + tmp_288*tmp_731) + tmp_87*(tmp_271*tmp_694 + tmp_272*tmp_702 + tmp_273*tmp_698);
      real_t a_6_4 = tmp_134*(tmp_304*tmp_713 + tmp_307*tmp_706 + tmp_310*tmp_710) + tmp_181*(tmp_315*tmp_724 + tmp_318*tmp_717 + tmp_321*tmp_721) + tmp_228*(tmp_326*tmp_735 + tmp_329*tmp_728 + tmp_332*tmp_732) + tmp_87*(tmp_293*tmp_702 + tmp_296*tmp_695 + tmp_299*tmp_699);
      real_t a_6_5 = tmp_134*(tmp_346*tmp_713 + tmp_349*tmp_706 + tmp_352*tmp_710) + tmp_181*(tmp_356*tmp_724 + tmp_359*tmp_717 + tmp_362*tmp_721) + tmp_228*(tmp_366*tmp_735 + tmp_369*tmp_728 + tmp_372*tmp_732) + tmp_87*(tmp_336*tmp_702 + tmp_339*tmp_695 + tmp_342*tmp_699);
      real_t a_6_6 = tmp_134*(tmp_384*tmp_713 + tmp_387*tmp_706 + tmp_390*tmp_710) + tmp_181*(tmp_393*tmp_724 + tmp_396*tmp_717 + tmp_399*tmp_721) + tmp_228*(tmp_402*tmp_735 + tmp_405*tmp_728 + tmp_408*tmp_732) + tmp_87*(tmp_375*tmp_702 + tmp_378*tmp_695 + tmp_381*tmp_699);
      real_t a_6_7 = tmp_134*(tmp_422*tmp_706 + tmp_424*tmp_713 + tmp_426*tmp_710) + tmp_181*(tmp_431*tmp_717 + tmp_433*tmp_724 + tmp_435*tmp_721) + tmp_228*(tmp_440*tmp_728 + tmp_442*tmp_735 + tmp_444*tmp_732) + tmp_87*(tmp_413*tmp_695 + tmp_415*tmp_702 + tmp_417*tmp_699);
      real_t a_6_8 = tmp_134*(tmp_456*tmp_706 + tmp_458*tmp_713 + tmp_460*tmp_710) + tmp_181*(tmp_464*tmp_717 + tmp_466*tmp_724 + tmp_468*tmp_721) + tmp_228*(tmp_472*tmp_728 + tmp_474*tmp_735 + tmp_476*tmp_732) + tmp_87*(tmp_448*tmp_695 + tmp_450*tmp_702 + tmp_452*tmp_699);
      real_t a_6_9 = tmp_134*(tmp_486*tmp_706 + tmp_488*tmp_713 + tmp_490*tmp_710) + tmp_181*(tmp_493*tmp_717 + tmp_495*tmp_724 + tmp_497*tmp_721) + tmp_228*(tmp_500*tmp_728 + tmp_502*tmp_735 + tmp_504*tmp_732) + tmp_87*(tmp_479*tmp_695 + tmp_481*tmp_702 + tmp_483*tmp_699);
      real_t a_7_0 = tmp_134*(tmp_109*tmp_742 + tmp_121*tmp_744 + tmp_133*tmp_745) + tmp_181*(tmp_156*tmp_747 + tmp_168*tmp_749 + tmp_180*tmp_750) + tmp_228*(tmp_203*tmp_752 + tmp_215*tmp_754 + tmp_227*tmp_755) + tmp_87*(tmp_49*tmp_737 + tmp_61*tmp_739 + tmp_73*tmp_740);
      real_t a_7_1 = tmp_134*(tmp_236*tmp_741 + tmp_237*tmp_745 + tmp_238*tmp_743) + tmp_181*(tmp_241*tmp_746 + tmp_242*tmp_750 + tmp_243*tmp_748) + tmp_228*(tmp_246*tmp_751 + tmp_247*tmp_755 + tmp_248*tmp_753) + tmp_87*(tmp_231*tmp_736 + tmp_232*tmp_740 + tmp_233*tmp_738);
      real_t a_7_2 = tmp_134*(tmp_256*tmp_741 + tmp_257*tmp_745 + tmp_258*tmp_743) + tmp_181*(tmp_261*tmp_746 + tmp_262*tmp_750 + tmp_263*tmp_748) + tmp_228*(tmp_266*tmp_751 + tmp_267*tmp_755 + tmp_268*tmp_753) + tmp_87*(tmp_251*tmp_736 + tmp_252*tmp_740 + tmp_253*tmp_738);
      real_t a_7_3 = tmp_134*(tmp_276*tmp_741 + tmp_277*tmp_745 + tmp_278*tmp_743) + tmp_181*(tmp_281*tmp_746 + tmp_282*tmp_750 + tmp_283*tmp_748) + tmp_228*(tmp_286*tmp_751 + tmp_287*tmp_755 + tmp_288*tmp_753) + tmp_87*(tmp_271*tmp_736 + tmp_272*tmp_740 + tmp_273*tmp_738);
      real_t a_7_4 = tmp_134*(tmp_304*tmp_745 + tmp_307*tmp_742 + tmp_310*tmp_744) + tmp_181*(tmp_315*tmp_750 + tmp_318*tmp_747 + tmp_321*tmp_749) + tmp_228*(tmp_326*tmp_755 + tmp_329*tmp_752 + tmp_332*tmp_754) + tmp_87*(tmp_293*tmp_740 + tmp_296*tmp_737 + tmp_299*tmp_739);
      real_t a_7_5 = tmp_134*(tmp_346*tmp_745 + tmp_349*tmp_742 + tmp_352*tmp_744) + tmp_181*(tmp_356*tmp_750 + tmp_359*tmp_747 + tmp_362*tmp_749) + tmp_228*(tmp_366*tmp_755 + tmp_369*tmp_752 + tmp_372*tmp_754) + tmp_87*(tmp_336*tmp_740 + tmp_339*tmp_737 + tmp_342*tmp_739);
      real_t a_7_6 = tmp_134*(tmp_384*tmp_745 + tmp_387*tmp_742 + tmp_390*tmp_744) + tmp_181*(tmp_393*tmp_750 + tmp_396*tmp_747 + tmp_399*tmp_749) + tmp_228*(tmp_402*tmp_755 + tmp_405*tmp_752 + tmp_408*tmp_754) + tmp_87*(tmp_375*tmp_740 + tmp_378*tmp_737 + tmp_381*tmp_739);
      real_t a_7_7 = tmp_134*(tmp_422*tmp_742 + tmp_424*tmp_745 + tmp_426*tmp_744) + tmp_181*(tmp_431*tmp_747 + tmp_433*tmp_750 + tmp_435*tmp_749) + tmp_228*(tmp_440*tmp_752 + tmp_442*tmp_755 + tmp_444*tmp_754) + tmp_87*(tmp_413*tmp_737 + tmp_415*tmp_740 + tmp_417*tmp_739);
      real_t a_7_8 = tmp_134*(tmp_456*tmp_742 + tmp_458*tmp_745 + tmp_460*tmp_744) + tmp_181*(tmp_464*tmp_747 + tmp_466*tmp_750 + tmp_468*tmp_749) + tmp_228*(tmp_472*tmp_752 + tmp_474*tmp_755 + tmp_476*tmp_754) + tmp_87*(tmp_448*tmp_737 + tmp_450*tmp_740 + tmp_452*tmp_739);
      real_t a_7_9 = tmp_134*(tmp_486*tmp_742 + tmp_488*tmp_745 + tmp_490*tmp_744) + tmp_181*(tmp_493*tmp_747 + tmp_495*tmp_750 + tmp_497*tmp_749) + tmp_228*(tmp_500*tmp_752 + tmp_502*tmp_755 + tmp_504*tmp_754) + tmp_87*(tmp_479*tmp_737 + tmp_481*tmp_740 + tmp_483*tmp_739);
      real_t a_8_0 = tmp_134*(tmp_109*tmp_762 + tmp_121*tmp_764 + tmp_133*tmp_765) + tmp_181*(tmp_156*tmp_767 + tmp_168*tmp_769 + tmp_180*tmp_770) + tmp_228*(tmp_203*tmp_772 + tmp_215*tmp_774 + tmp_227*tmp_775) + tmp_87*(tmp_49*tmp_757 + tmp_61*tmp_759 + tmp_73*tmp_760);
      real_t a_8_1 = tmp_134*(tmp_236*tmp_761 + tmp_237*tmp_765 + tmp_238*tmp_763) + tmp_181*(tmp_241*tmp_766 + tmp_242*tmp_770 + tmp_243*tmp_768) + tmp_228*(tmp_246*tmp_771 + tmp_247*tmp_775 + tmp_248*tmp_773) + tmp_87*(tmp_231*tmp_756 + tmp_232*tmp_760 + tmp_233*tmp_758);
      real_t a_8_2 = tmp_134*(tmp_256*tmp_761 + tmp_257*tmp_765 + tmp_258*tmp_763) + tmp_181*(tmp_261*tmp_766 + tmp_262*tmp_770 + tmp_263*tmp_768) + tmp_228*(tmp_266*tmp_771 + tmp_267*tmp_775 + tmp_268*tmp_773) + tmp_87*(tmp_251*tmp_756 + tmp_252*tmp_760 + tmp_253*tmp_758);
      real_t a_8_3 = tmp_134*(tmp_276*tmp_761 + tmp_277*tmp_765 + tmp_278*tmp_763) + tmp_181*(tmp_281*tmp_766 + tmp_282*tmp_770 + tmp_283*tmp_768) + tmp_228*(tmp_286*tmp_771 + tmp_287*tmp_775 + tmp_288*tmp_773) + tmp_87*(tmp_271*tmp_756 + tmp_272*tmp_760 + tmp_273*tmp_758);
      real_t a_8_4 = tmp_134*(tmp_304*tmp_765 + tmp_307*tmp_762 + tmp_310*tmp_764) + tmp_181*(tmp_315*tmp_770 + tmp_318*tmp_767 + tmp_321*tmp_769) + tmp_228*(tmp_326*tmp_775 + tmp_329*tmp_772 + tmp_332*tmp_774) + tmp_87*(tmp_293*tmp_760 + tmp_296*tmp_757 + tmp_299*tmp_759);
      real_t a_8_5 = tmp_134*(tmp_346*tmp_765 + tmp_349*tmp_762 + tmp_352*tmp_764) + tmp_181*(tmp_356*tmp_770 + tmp_359*tmp_767 + tmp_362*tmp_769) + tmp_228*(tmp_366*tmp_775 + tmp_369*tmp_772 + tmp_372*tmp_774) + tmp_87*(tmp_336*tmp_760 + tmp_339*tmp_757 + tmp_342*tmp_759);
      real_t a_8_6 = tmp_134*(tmp_384*tmp_765 + tmp_387*tmp_762 + tmp_390*tmp_764) + tmp_181*(tmp_393*tmp_770 + tmp_396*tmp_767 + tmp_399*tmp_769) + tmp_228*(tmp_402*tmp_775 + tmp_405*tmp_772 + tmp_408*tmp_774) + tmp_87*(tmp_375*tmp_760 + tmp_378*tmp_757 + tmp_381*tmp_759);
      real_t a_8_7 = tmp_134*(tmp_422*tmp_762 + tmp_424*tmp_765 + tmp_426*tmp_764) + tmp_181*(tmp_431*tmp_767 + tmp_433*tmp_770 + tmp_435*tmp_769) + tmp_228*(tmp_440*tmp_772 + tmp_442*tmp_775 + tmp_444*tmp_774) + tmp_87*(tmp_413*tmp_757 + tmp_415*tmp_760 + tmp_417*tmp_759);
      real_t a_8_8 = tmp_134*(tmp_456*tmp_762 + tmp_458*tmp_765 + tmp_460*tmp_764) + tmp_181*(tmp_464*tmp_767 + tmp_466*tmp_770 + tmp_468*tmp_769) + tmp_228*(tmp_472*tmp_772 + tmp_474*tmp_775 + tmp_476*tmp_774) + tmp_87*(tmp_448*tmp_757 + tmp_450*tmp_760 + tmp_452*tmp_759);
      real_t a_8_9 = tmp_134*(tmp_486*tmp_762 + tmp_488*tmp_765 + tmp_490*tmp_764) + tmp_181*(tmp_493*tmp_767 + tmp_495*tmp_770 + tmp_497*tmp_769) + tmp_228*(tmp_500*tmp_772 + tmp_502*tmp_775 + tmp_504*tmp_774) + tmp_87*(tmp_479*tmp_757 + tmp_481*tmp_760 + tmp_483*tmp_759);
      real_t a_9_0 = tmp_134*(tmp_109*tmp_782 + tmp_121*tmp_784 + tmp_133*tmp_785) + tmp_181*(tmp_156*tmp_787 + tmp_168*tmp_789 + tmp_180*tmp_790) + tmp_228*(tmp_203*tmp_792 + tmp_215*tmp_794 + tmp_227*tmp_795) + tmp_87*(tmp_49*tmp_777 + tmp_61*tmp_779 + tmp_73*tmp_780);
      real_t a_9_1 = tmp_134*(tmp_236*tmp_781 + tmp_237*tmp_785 + tmp_238*tmp_783) + tmp_181*(tmp_241*tmp_786 + tmp_242*tmp_790 + tmp_243*tmp_788) + tmp_228*(tmp_246*tmp_791 + tmp_247*tmp_795 + tmp_248*tmp_793) + tmp_87*(tmp_231*tmp_776 + tmp_232*tmp_780 + tmp_233*tmp_778);
      real_t a_9_2 = tmp_134*(tmp_256*tmp_781 + tmp_257*tmp_785 + tmp_258*tmp_783) + tmp_181*(tmp_261*tmp_786 + tmp_262*tmp_790 + tmp_263*tmp_788) + tmp_228*(tmp_266*tmp_791 + tmp_267*tmp_795 + tmp_268*tmp_793) + tmp_87*(tmp_251*tmp_776 + tmp_252*tmp_780 + tmp_253*tmp_778);
      real_t a_9_3 = tmp_134*(tmp_276*tmp_781 + tmp_277*tmp_785 + tmp_278*tmp_783) + tmp_181*(tmp_281*tmp_786 + tmp_282*tmp_790 + tmp_283*tmp_788) + tmp_228*(tmp_286*tmp_791 + tmp_287*tmp_795 + tmp_288*tmp_793) + tmp_87*(tmp_271*tmp_776 + tmp_272*tmp_780 + tmp_273*tmp_778);
      real_t a_9_4 = tmp_134*(tmp_304*tmp_785 + tmp_307*tmp_782 + tmp_310*tmp_784) + tmp_181*(tmp_315*tmp_790 + tmp_318*tmp_787 + tmp_321*tmp_789) + tmp_228*(tmp_326*tmp_795 + tmp_329*tmp_792 + tmp_332*tmp_794) + tmp_87*(tmp_293*tmp_780 + tmp_296*tmp_777 + tmp_299*tmp_779);
      real_t a_9_5 = tmp_134*(tmp_346*tmp_785 + tmp_349*tmp_782 + tmp_352*tmp_784) + tmp_181*(tmp_356*tmp_790 + tmp_359*tmp_787 + tmp_362*tmp_789) + tmp_228*(tmp_366*tmp_795 + tmp_369*tmp_792 + tmp_372*tmp_794) + tmp_87*(tmp_336*tmp_780 + tmp_339*tmp_777 + tmp_342*tmp_779);
      real_t a_9_6 = tmp_134*(tmp_384*tmp_785 + tmp_387*tmp_782 + tmp_390*tmp_784) + tmp_181*(tmp_393*tmp_790 + tmp_396*tmp_787 + tmp_399*tmp_789) + tmp_228*(tmp_402*tmp_795 + tmp_405*tmp_792 + tmp_408*tmp_794) + tmp_87*(tmp_375*tmp_780 + tmp_378*tmp_777 + tmp_381*tmp_779);
      real_t a_9_7 = tmp_134*(tmp_422*tmp_782 + tmp_424*tmp_785 + tmp_426*tmp_784) + tmp_181*(tmp_431*tmp_787 + tmp_433*tmp_790 + tmp_435*tmp_789) + tmp_228*(tmp_440*tmp_792 + tmp_442*tmp_795 + tmp_444*tmp_794) + tmp_87*(tmp_413*tmp_777 + tmp_415*tmp_780 + tmp_417*tmp_779);
      real_t a_9_8 = tmp_134*(tmp_456*tmp_782 + tmp_458*tmp_785 + tmp_460*tmp_784) + tmp_181*(tmp_464*tmp_787 + tmp_466*tmp_790 + tmp_468*tmp_789) + tmp_228*(tmp_472*tmp_792 + tmp_474*tmp_795 + tmp_476*tmp_794) + tmp_87*(tmp_448*tmp_777 + tmp_450*tmp_780 + tmp_452*tmp_779);
      real_t a_9_9 = tmp_134*(tmp_486*tmp_782 + tmp_488*tmp_785 + tmp_490*tmp_784) + tmp_181*(tmp_493*tmp_787 + tmp_495*tmp_790 + tmp_497*tmp_789) + tmp_228*(tmp_500*tmp_792 + tmp_502*tmp_795 + tmp_504*tmp_794) + tmp_87*(tmp_479*tmp_777 + tmp_481*tmp_780 + tmp_483*tmp_779);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_1_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_13 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_11 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_12 - Blending_DF_Tetrahedron_0_5*tmp_14;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_26 - tmp_27;
      real_t tmp_40 = tmp_20 - tmp_29;
      real_t tmp_41 = tmp_23 - tmp_28;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_46 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_50 = 2*tmp_49;
      real_t tmp_51 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_54 = tmp_10*tmp_51 + tmp_33*tmp_52 + tmp_35*tmp_53;
      real_t tmp_55 = tmp_3*tmp_54;
      real_t tmp_56 = tmp_39*tmp_51 + tmp_40*tmp_52 + tmp_41*tmp_53;
      real_t tmp_57 = tmp_3*tmp_56;
      real_t tmp_58 = tmp_44*tmp_51 + tmp_45*tmp_52 + tmp_46*tmp_53;
      real_t tmp_59 = tmp_3*tmp_58;
      real_t tmp_60 = 0.5*tmp_55 + 0.5*tmp_57 + 0.5*tmp_59;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = tmp_31*(tmp_12 - tmp_14);
      real_t tmp_63 = tmp_31*(tmp_11 - tmp_16);
      real_t tmp_64 = tmp_31*(tmp_13 - tmp_15);
      real_t tmp_65 = tmp_10*tmp_62 + tmp_33*tmp_63 + tmp_35*tmp_64;
      real_t tmp_66 = 1.0*tmp_3;
      real_t tmp_67 = tmp_39*tmp_62 + tmp_40*tmp_63 + tmp_41*tmp_64;
      real_t tmp_68 = tmp_44*tmp_62 + tmp_45*tmp_63 + tmp_46*tmp_64;
      real_t tmp_69 = tmp_65*tmp_66 + tmp_66*tmp_67 + tmp_66*tmp_68;
      real_t tmp_70 = 2.0*tmp_3;
      real_t tmp_71 = p_affine_0_0*p_affine_1_1;
      real_t tmp_72 = p_affine_0_0*p_affine_1_2;
      real_t tmp_73 = p_affine_2_1*p_affine_3_2;
      real_t tmp_74 = p_affine_0_1*p_affine_1_0;
      real_t tmp_75 = p_affine_0_1*p_affine_1_2;
      real_t tmp_76 = p_affine_2_2*p_affine_3_0;
      real_t tmp_77 = p_affine_0_2*p_affine_1_0;
      real_t tmp_78 = p_affine_0_2*p_affine_1_1;
      real_t tmp_79 = p_affine_2_0*p_affine_3_1;
      real_t tmp_80 = p_affine_2_2*p_affine_3_1;
      real_t tmp_81 = p_affine_2_0*p_affine_3_2;
      real_t tmp_82 = p_affine_2_1*p_affine_3_0;
      real_t tmp_83 = std::abs(p_affine_0_0*tmp_73 - p_affine_0_0*tmp_80 + p_affine_0_1*tmp_76 - p_affine_0_1*tmp_81 + p_affine_0_2*tmp_79 - p_affine_0_2*tmp_82 - p_affine_1_0*tmp_73 + p_affine_1_0*tmp_80 - p_affine_1_1*tmp_76 + p_affine_1_1*tmp_81 - p_affine_1_2*tmp_79 + p_affine_1_2*tmp_82 + p_affine_2_0*tmp_75 - p_affine_2_0*tmp_78 - p_affine_2_1*tmp_72 + p_affine_2_1*tmp_77 + p_affine_2_2*tmp_71 - p_affine_2_2*tmp_74 - p_affine_3_0*tmp_75 + p_affine_3_0*tmp_78 + p_affine_3_1*tmp_72 - p_affine_3_1*tmp_77 - p_affine_3_2*tmp_71 + p_affine_3_2*tmp_74);
      real_t tmp_84 = 0.041666666666666657*tmp_83*std::abs(tmp_17);
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 2.3416407864998732;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87 - 3.0;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_3*tmp_91 - Blending_DF_Tetrahedron_1_3*tmp_93 + Blending_DF_Tetrahedron_1_4*tmp_89 - Blending_DF_Tetrahedron_1_4*tmp_94 + Blending_DF_Tetrahedron_1_5*tmp_90 - Blending_DF_Tetrahedron_1_5*tmp_92;
      real_t tmp_96 = tmp_30/tmp_95;
      real_t tmp_97 = tmp_96*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_98 = tmp_96*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_99 = tmp_96*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_100 = tmp_10*tmp_97 + tmp_33*tmp_98 + tmp_35*tmp_99;
      real_t tmp_101 = tmp_100*tmp_88;
      real_t tmp_102 = tmp_39*tmp_97 + tmp_40*tmp_98 + tmp_41*tmp_99;
      real_t tmp_103 = tmp_102*tmp_88;
      real_t tmp_104 = tmp_44*tmp_97 + tmp_45*tmp_98 + tmp_46*tmp_99;
      real_t tmp_105 = tmp_104*tmp_88;
      real_t tmp_106 = 0.5*tmp_101 + 0.5*tmp_103 + 0.5*tmp_105;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = tmp_96*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_109 = tmp_96*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_110 = tmp_96*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_111 = tmp_10*tmp_108 + tmp_109*tmp_33 + tmp_110*tmp_35;
      real_t tmp_112 = tmp_111*tmp_88;
      real_t tmp_113 = tmp_108*tmp_39 + tmp_109*tmp_40 + tmp_110*tmp_41;
      real_t tmp_114 = tmp_113*tmp_88;
      real_t tmp_115 = tmp_108*tmp_44 + tmp_109*tmp_45 + tmp_110*tmp_46;
      real_t tmp_116 = tmp_115*tmp_88;
      real_t tmp_117 = 0.5*tmp_112 + 0.5*tmp_114 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = tmp_96*(tmp_90 - tmp_92);
      real_t tmp_120 = tmp_96*(tmp_89 - tmp_94);
      real_t tmp_121 = tmp_96*(tmp_91 - tmp_93);
      real_t tmp_122 = tmp_10*tmp_119 + tmp_120*tmp_33 + tmp_121*tmp_35;
      real_t tmp_123 = 1.0*tmp_88;
      real_t tmp_124 = tmp_119*tmp_39 + tmp_120*tmp_40 + tmp_121*tmp_41;
      real_t tmp_125 = tmp_119*tmp_44 + tmp_120*tmp_45 + tmp_121*tmp_46;
      real_t tmp_126 = tmp_122*tmp_123 + tmp_123*tmp_124 + tmp_123*tmp_125;
      real_t tmp_127 = 2.0*tmp_88;
      real_t tmp_128 = 0.041666666666666657*tmp_83*std::abs(tmp_95);
      real_t tmp_129 = 2.3416407864998732;
      real_t tmp_130 = 0.55278640450004235;
      real_t tmp_131 = 0.55278640450004235;
      real_t tmp_132 = tmp_129 + tmp_130 + tmp_131 - 3.0;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_134 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_135 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_136 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_137 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_138 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_3*tmp_135 - Blending_DF_Tetrahedron_2_3*tmp_137 + Blending_DF_Tetrahedron_2_4*tmp_133 - Blending_DF_Tetrahedron_2_4*tmp_138 + Blending_DF_Tetrahedron_2_5*tmp_134 - Blending_DF_Tetrahedron_2_5*tmp_136;
      real_t tmp_140 = tmp_30/tmp_139;
      real_t tmp_141 = tmp_140*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_142 = tmp_140*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_143 = tmp_140*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_144 = tmp_10*tmp_141 + tmp_142*tmp_33 + tmp_143*tmp_35;
      real_t tmp_145 = tmp_132*tmp_144;
      real_t tmp_146 = tmp_141*tmp_39 + tmp_142*tmp_40 + tmp_143*tmp_41;
      real_t tmp_147 = tmp_132*tmp_146;
      real_t tmp_148 = tmp_141*tmp_44 + tmp_142*tmp_45 + tmp_143*tmp_46;
      real_t tmp_149 = tmp_132*tmp_148;
      real_t tmp_150 = 0.5*tmp_145 + 0.5*tmp_147 + 0.5*tmp_149;
      real_t tmp_151 = 2*tmp_150;
      real_t tmp_152 = tmp_140*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_153 = tmp_140*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_154 = tmp_140*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_155 = tmp_10*tmp_152 + tmp_153*tmp_33 + tmp_154*tmp_35;
      real_t tmp_156 = tmp_132*tmp_155;
      real_t tmp_157 = tmp_152*tmp_39 + tmp_153*tmp_40 + tmp_154*tmp_41;
      real_t tmp_158 = tmp_132*tmp_157;
      real_t tmp_159 = tmp_152*tmp_44 + tmp_153*tmp_45 + tmp_154*tmp_46;
      real_t tmp_160 = tmp_132*tmp_159;
      real_t tmp_161 = 0.5*tmp_156 + 0.5*tmp_158 + 0.5*tmp_160;
      real_t tmp_162 = 2*tmp_161;
      real_t tmp_163 = tmp_140*(tmp_134 - tmp_136);
      real_t tmp_164 = tmp_140*(tmp_133 - tmp_138);
      real_t tmp_165 = tmp_140*(tmp_135 - tmp_137);
      real_t tmp_166 = tmp_10*tmp_163 + tmp_164*tmp_33 + tmp_165*tmp_35;
      real_t tmp_167 = 1.0*tmp_132;
      real_t tmp_168 = tmp_163*tmp_39 + tmp_164*tmp_40 + tmp_165*tmp_41;
      real_t tmp_169 = tmp_163*tmp_44 + tmp_164*tmp_45 + tmp_165*tmp_46;
      real_t tmp_170 = tmp_166*tmp_167 + tmp_167*tmp_168 + tmp_167*tmp_169;
      real_t tmp_171 = 2.0*tmp_132;
      real_t tmp_172 = 0.041666666666666657*tmp_83*std::abs(tmp_139);
      real_t tmp_173 = 0.55278640450004235;
      real_t tmp_174 = 0.55278640450004235;
      real_t tmp_175 = 0.55278640450004235;
      real_t tmp_176 = tmp_173 + tmp_174 + tmp_175 - 3.0;
      real_t tmp_177 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_178 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_179 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_180 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_181 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_182 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_183 = Blending_DF_Tetrahedron_3_3*tmp_179 - Blending_DF_Tetrahedron_3_3*tmp_181 + Blending_DF_Tetrahedron_3_4*tmp_177 - Blending_DF_Tetrahedron_3_4*tmp_182 + Blending_DF_Tetrahedron_3_5*tmp_178 - Blending_DF_Tetrahedron_3_5*tmp_180;
      real_t tmp_184 = tmp_30/tmp_183;
      real_t tmp_185 = tmp_184*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_186 = tmp_184*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_187 = tmp_184*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_188 = tmp_10*tmp_185 + tmp_186*tmp_33 + tmp_187*tmp_35;
      real_t tmp_189 = tmp_176*tmp_188;
      real_t tmp_190 = tmp_185*tmp_39 + tmp_186*tmp_40 + tmp_187*tmp_41;
      real_t tmp_191 = tmp_176*tmp_190;
      real_t tmp_192 = tmp_185*tmp_44 + tmp_186*tmp_45 + tmp_187*tmp_46;
      real_t tmp_193 = tmp_176*tmp_192;
      real_t tmp_194 = 0.5*tmp_189 + 0.5*tmp_191 + 0.5*tmp_193;
      real_t tmp_195 = 2*tmp_194;
      real_t tmp_196 = tmp_184*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_197 = tmp_184*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_198 = tmp_184*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_199 = tmp_10*tmp_196 + tmp_197*tmp_33 + tmp_198*tmp_35;
      real_t tmp_200 = tmp_176*tmp_199;
      real_t tmp_201 = tmp_196*tmp_39 + tmp_197*tmp_40 + tmp_198*tmp_41;
      real_t tmp_202 = tmp_176*tmp_201;
      real_t tmp_203 = tmp_196*tmp_44 + tmp_197*tmp_45 + tmp_198*tmp_46;
      real_t tmp_204 = tmp_176*tmp_203;
      real_t tmp_205 = 0.5*tmp_200 + 0.5*tmp_202 + 0.5*tmp_204;
      real_t tmp_206 = 2*tmp_205;
      real_t tmp_207 = tmp_184*(tmp_178 - tmp_180);
      real_t tmp_208 = tmp_184*(tmp_177 - tmp_182);
      real_t tmp_209 = tmp_184*(tmp_179 - tmp_181);
      real_t tmp_210 = tmp_10*tmp_207 + tmp_208*tmp_33 + tmp_209*tmp_35;
      real_t tmp_211 = 1.0*tmp_176;
      real_t tmp_212 = tmp_207*tmp_39 + tmp_208*tmp_40 + tmp_209*tmp_41;
      real_t tmp_213 = tmp_207*tmp_44 + tmp_208*tmp_45 + tmp_209*tmp_46;
      real_t tmp_214 = tmp_210*tmp_211 + tmp_211*tmp_212 + tmp_211*tmp_213;
      real_t tmp_215 = 2.0*tmp_176;
      real_t tmp_216 = 0.041666666666666657*tmp_83*std::abs(tmp_183);
      real_t tmp_217 = tmp_0 - 1.0;
      real_t tmp_218 = 2.0*tmp_217;
      real_t tmp_219 = 2.0*tmp_68;
      real_t tmp_220 = tmp_85 - 1.0;
      real_t tmp_221 = 2.0*tmp_220;
      real_t tmp_222 = 2.0*tmp_125;
      real_t tmp_223 = tmp_129 - 1.0;
      real_t tmp_224 = 2.0*tmp_223;
      real_t tmp_225 = 2.0*tmp_169;
      real_t tmp_226 = tmp_173 - 1.0;
      real_t tmp_227 = 2.0*tmp_226;
      real_t tmp_228 = 2.0*tmp_213;
      real_t tmp_229 = tmp_1 - 1.0;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = 2.0*tmp_67;
      real_t tmp_232 = tmp_86 - 1.0;
      real_t tmp_233 = 2.0*tmp_232;
      real_t tmp_234 = 2.0*tmp_124;
      real_t tmp_235 = tmp_130 - 1.0;
      real_t tmp_236 = 2.0*tmp_235;
      real_t tmp_237 = 2.0*tmp_168;
      real_t tmp_238 = tmp_174 - 1.0;
      real_t tmp_239 = 2.0*tmp_238;
      real_t tmp_240 = 2.0*tmp_212;
      real_t tmp_241 = tmp_2 - 1.0;
      real_t tmp_242 = 2.0*tmp_241;
      real_t tmp_243 = 2.0*tmp_65;
      real_t tmp_244 = tmp_87 - 1.0;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = 2.0*tmp_122;
      real_t tmp_247 = tmp_131 - 1.0;
      real_t tmp_248 = 2.0*tmp_247;
      real_t tmp_249 = 2.0*tmp_166;
      real_t tmp_250 = tmp_175 - 1.0;
      real_t tmp_251 = 2.0*tmp_250;
      real_t tmp_252 = 2.0*tmp_210;
      real_t tmp_253 = 1.1055728090000847;
      real_t tmp_254 = tmp_253*tmp_65;
      real_t tmp_255 = 4.6832815729997463;
      real_t tmp_256 = tmp_255*tmp_67;
      real_t tmp_257 = tmp_1*tmp_37;
      real_t tmp_258 = tmp_2*tmp_42;
      real_t tmp_259 = tmp_1*tmp_54;
      real_t tmp_260 = tmp_2*tmp_56;
      real_t tmp_261 = 4.6832815729997463;
      real_t tmp_262 = tmp_122*tmp_261;
      real_t tmp_263 = 1.1055728090000847;
      real_t tmp_264 = tmp_124*tmp_263;
      real_t tmp_265 = tmp_100*tmp_86;
      real_t tmp_266 = tmp_102*tmp_87;
      real_t tmp_267 = tmp_111*tmp_86;
      real_t tmp_268 = tmp_113*tmp_87;
      real_t tmp_269 = 1.1055728090000847;
      real_t tmp_270 = tmp_166*tmp_269;
      real_t tmp_271 = 1.1055728090000847;
      real_t tmp_272 = tmp_168*tmp_271;
      real_t tmp_273 = tmp_130*tmp_144;
      real_t tmp_274 = tmp_131*tmp_146;
      real_t tmp_275 = tmp_130*tmp_155;
      real_t tmp_276 = tmp_131*tmp_157;
      real_t tmp_277 = 1.1055728090000847;
      real_t tmp_278 = tmp_210*tmp_277;
      real_t tmp_279 = 1.1055728090000847;
      real_t tmp_280 = tmp_212*tmp_279;
      real_t tmp_281 = tmp_174*tmp_188;
      real_t tmp_282 = tmp_175*tmp_190;
      real_t tmp_283 = tmp_174*tmp_199;
      real_t tmp_284 = tmp_175*tmp_201;
      real_t tmp_285 = 1.1055728090000847;
      real_t tmp_286 = tmp_285*tmp_65;
      real_t tmp_287 = tmp_255*tmp_68;
      real_t tmp_288 = tmp_0*tmp_37;
      real_t tmp_289 = tmp_2*tmp_47;
      real_t tmp_290 = tmp_0*tmp_54;
      real_t tmp_291 = tmp_2*tmp_58;
      real_t tmp_292 = 1.1055728090000847;
      real_t tmp_293 = tmp_122*tmp_292;
      real_t tmp_294 = tmp_125*tmp_263;
      real_t tmp_295 = tmp_100*tmp_85;
      real_t tmp_296 = tmp_104*tmp_87;
      real_t tmp_297 = tmp_111*tmp_85;
      real_t tmp_298 = tmp_115*tmp_87;
      real_t tmp_299 = 4.6832815729997463;
      real_t tmp_300 = tmp_166*tmp_299;
      real_t tmp_301 = tmp_169*tmp_271;
      real_t tmp_302 = tmp_129*tmp_144;
      real_t tmp_303 = tmp_131*tmp_148;
      real_t tmp_304 = tmp_129*tmp_155;
      real_t tmp_305 = tmp_131*tmp_159;
      real_t tmp_306 = 1.1055728090000847;
      real_t tmp_307 = tmp_210*tmp_306;
      real_t tmp_308 = tmp_213*tmp_279;
      real_t tmp_309 = tmp_173*tmp_188;
      real_t tmp_310 = tmp_175*tmp_192;
      real_t tmp_311 = tmp_173*tmp_199;
      real_t tmp_312 = tmp_175*tmp_203;
      real_t tmp_313 = tmp_285*tmp_67;
      real_t tmp_314 = tmp_253*tmp_68;
      real_t tmp_315 = tmp_0*tmp_42;
      real_t tmp_316 = tmp_1*tmp_47;
      real_t tmp_317 = tmp_0*tmp_56;
      real_t tmp_318 = tmp_1*tmp_58;
      real_t tmp_319 = tmp_124*tmp_292;
      real_t tmp_320 = tmp_125*tmp_261;
      real_t tmp_321 = tmp_102*tmp_85;
      real_t tmp_322 = tmp_104*tmp_86;
      real_t tmp_323 = tmp_113*tmp_85;
      real_t tmp_324 = tmp_115*tmp_86;
      real_t tmp_325 = tmp_168*tmp_299;
      real_t tmp_326 = tmp_169*tmp_269;
      real_t tmp_327 = tmp_129*tmp_146;
      real_t tmp_328 = tmp_130*tmp_148;
      real_t tmp_329 = tmp_129*tmp_157;
      real_t tmp_330 = tmp_130*tmp_159;
      real_t tmp_331 = tmp_212*tmp_306;
      real_t tmp_332 = tmp_213*tmp_277;
      real_t tmp_333 = tmp_173*tmp_190;
      real_t tmp_334 = tmp_174*tmp_192;
      real_t tmp_335 = tmp_173*tmp_201;
      real_t tmp_336 = tmp_174*tmp_203;
      real_t tmp_337 = -tmp_1;
      real_t tmp_338 = 4.0 - tmp_0;
      real_t tmp_339 = -tmp_255 + tmp_337 + tmp_338;
      real_t tmp_340 = -tmp_86;
      real_t tmp_341 = 4.0 - tmp_85;
      real_t tmp_342 = -tmp_263 + tmp_340 + tmp_341;
      real_t tmp_343 = -tmp_130;
      real_t tmp_344 = 4.0 - tmp_129;
      real_t tmp_345 = -tmp_271 + tmp_343 + tmp_344;
      real_t tmp_346 = -tmp_174;
      real_t tmp_347 = 4.0 - tmp_173;
      real_t tmp_348 = -tmp_279 + tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_2;
      real_t tmp_350 = -tmp_253 + tmp_338 + tmp_349;
      real_t tmp_351 = -tmp_87;
      real_t tmp_352 = -tmp_261 + tmp_341 + tmp_351;
      real_t tmp_353 = -tmp_131;
      real_t tmp_354 = -tmp_269 + tmp_344 + tmp_353;
      real_t tmp_355 = -tmp_175;
      real_t tmp_356 = -tmp_277 + tmp_347 + tmp_355;
      real_t tmp_357 = -tmp_285 + tmp_337 + tmp_349 + 4.0;
      real_t tmp_358 = -tmp_292 + tmp_340 + tmp_351 + 4.0;
      real_t tmp_359 = -tmp_299 + tmp_343 + tmp_353 + 4.0;
      real_t tmp_360 = -tmp_306 + tmp_346 + tmp_355 + 4.0;
      real_t a_0_0 = tmp_128*(tmp_107*(tmp_101 + tmp_103 + tmp_105) + tmp_118*(tmp_112 + tmp_114 + tmp_116) + tmp_126*(tmp_122*tmp_127 + tmp_124*tmp_127 + tmp_125*tmp_127)) + tmp_172*(tmp_151*(tmp_145 + tmp_147 + tmp_149) + tmp_162*(tmp_156 + tmp_158 + tmp_160) + tmp_170*(tmp_166*tmp_171 + tmp_168*tmp_171 + tmp_169*tmp_171)) + tmp_216*(tmp_195*(tmp_189 + tmp_191 + tmp_193) + tmp_206*(tmp_200 + tmp_202 + tmp_204) + tmp_214*(tmp_210*tmp_215 + tmp_212*tmp_215 + tmp_213*tmp_215)) + tmp_84*(tmp_50*(tmp_38 + tmp_43 + tmp_48) + tmp_61*(tmp_55 + tmp_57 + tmp_59) + tmp_69*(tmp_65*tmp_70 + tmp_67*tmp_70 + tmp_68*tmp_70));
      real_t a_0_1 = tmp_128*(tmp_104*tmp_106*tmp_221 + tmp_115*tmp_117*tmp_221 + tmp_126*tmp_220*tmp_222) + tmp_172*(tmp_148*tmp_150*tmp_224 + tmp_159*tmp_161*tmp_224 + tmp_170*tmp_223*tmp_225) + tmp_216*(tmp_192*tmp_194*tmp_227 + tmp_203*tmp_205*tmp_227 + tmp_214*tmp_226*tmp_228) + tmp_84*(tmp_217*tmp_219*tmp_69 + tmp_218*tmp_47*tmp_49 + tmp_218*tmp_58*tmp_60);
      real_t a_0_2 = tmp_128*(tmp_102*tmp_106*tmp_233 + tmp_113*tmp_117*tmp_233 + tmp_126*tmp_232*tmp_234) + tmp_172*(tmp_146*tmp_150*tmp_236 + tmp_157*tmp_161*tmp_236 + tmp_170*tmp_235*tmp_237) + tmp_216*(tmp_190*tmp_194*tmp_239 + tmp_201*tmp_205*tmp_239 + tmp_214*tmp_238*tmp_240) + tmp_84*(tmp_229*tmp_231*tmp_69 + tmp_230*tmp_42*tmp_49 + tmp_230*tmp_56*tmp_60);
      real_t a_0_3 = tmp_128*(tmp_100*tmp_106*tmp_245 + tmp_111*tmp_117*tmp_245 + tmp_126*tmp_244*tmp_246) + tmp_172*(tmp_144*tmp_150*tmp_248 + tmp_155*tmp_161*tmp_248 + tmp_170*tmp_247*tmp_249) + tmp_216*(tmp_188*tmp_194*tmp_251 + tmp_199*tmp_205*tmp_251 + tmp_214*tmp_250*tmp_252) + tmp_84*(tmp_241*tmp_243*tmp_69 + tmp_242*tmp_37*tmp_49 + tmp_242*tmp_54*tmp_60);
      real_t a_0_4 = tmp_128*(tmp_107*(tmp_265 + tmp_266) + tmp_118*(tmp_267 + tmp_268) + tmp_126*(tmp_262 + tmp_264)) + tmp_172*(tmp_151*(tmp_273 + tmp_274) + tmp_162*(tmp_275 + tmp_276) + tmp_170*(tmp_270 + tmp_272)) + tmp_216*(tmp_195*(tmp_281 + tmp_282) + tmp_206*(tmp_283 + tmp_284) + tmp_214*(tmp_278 + tmp_280)) + tmp_84*(tmp_50*(tmp_257 + tmp_258) + tmp_61*(tmp_259 + tmp_260) + tmp_69*(tmp_254 + tmp_256));
      real_t a_0_5 = tmp_128*(tmp_107*(tmp_295 + tmp_296) + tmp_118*(tmp_297 + tmp_298) + tmp_126*(tmp_293 + tmp_294)) + tmp_172*(tmp_151*(tmp_302 + tmp_303) + tmp_162*(tmp_304 + tmp_305) + tmp_170*(tmp_300 + tmp_301)) + tmp_216*(tmp_195*(tmp_309 + tmp_310) + tmp_206*(tmp_311 + tmp_312) + tmp_214*(tmp_307 + tmp_308)) + tmp_84*(tmp_50*(tmp_288 + tmp_289) + tmp_61*(tmp_290 + tmp_291) + tmp_69*(tmp_286 + tmp_287));
      real_t a_0_6 = tmp_128*(tmp_107*(tmp_321 + tmp_322) + tmp_118*(tmp_323 + tmp_324) + tmp_126*(tmp_319 + tmp_320)) + tmp_172*(tmp_151*(tmp_327 + tmp_328) + tmp_162*(tmp_329 + tmp_330) + tmp_170*(tmp_325 + tmp_326)) + tmp_216*(tmp_195*(tmp_333 + tmp_334) + tmp_206*(tmp_335 + tmp_336) + tmp_214*(tmp_331 + tmp_332)) + tmp_84*(tmp_50*(tmp_315 + tmp_316) + tmp_61*(tmp_317 + tmp_318) + tmp_69*(tmp_313 + tmp_314));
      real_t a_0_7 = tmp_128*(tmp_107*(tmp_100*tmp_342 - tmp_266 - tmp_296) + tmp_118*(tmp_111*tmp_342 - tmp_268 - tmp_298) + tmp_126*(tmp_246*tmp_342 - tmp_264 - tmp_294)) + tmp_172*(tmp_151*(tmp_144*tmp_345 - tmp_274 - tmp_303) + tmp_162*(tmp_155*tmp_345 - tmp_276 - tmp_305) + tmp_170*(tmp_249*tmp_345 - tmp_272 - tmp_301)) + tmp_216*(tmp_195*(tmp_188*tmp_348 - tmp_282 - tmp_310) + tmp_206*(tmp_199*tmp_348 - tmp_284 - tmp_312) + tmp_214*(tmp_252*tmp_348 - tmp_280 - tmp_308)) + tmp_84*(tmp_50*(-tmp_258 - tmp_289 + tmp_339*tmp_37) + tmp_61*(-tmp_260 - tmp_291 + tmp_339*tmp_54) + tmp_69*(tmp_243*tmp_339 - tmp_256 - tmp_287));
      real_t a_0_8 = tmp_128*(tmp_107*(tmp_102*tmp_352 - tmp_265 - tmp_322) + tmp_118*(tmp_113*tmp_352 - tmp_267 - tmp_324) + tmp_126*(tmp_234*tmp_352 - tmp_262 - tmp_320)) + tmp_172*(tmp_151*(tmp_146*tmp_354 - tmp_273 - tmp_328) + tmp_162*(tmp_157*tmp_354 - tmp_275 - tmp_330) + tmp_170*(tmp_237*tmp_354 - tmp_270 - tmp_326)) + tmp_216*(tmp_195*(tmp_190*tmp_356 - tmp_281 - tmp_334) + tmp_206*(tmp_201*tmp_356 - tmp_283 - tmp_336) + tmp_214*(tmp_240*tmp_356 - tmp_278 - tmp_332)) + tmp_84*(tmp_50*(-tmp_257 - tmp_316 + tmp_350*tmp_42) + tmp_61*(-tmp_259 - tmp_318 + tmp_350*tmp_56) + tmp_69*(tmp_231*tmp_350 - tmp_254 - tmp_314));
      real_t a_0_9 = tmp_128*(tmp_107*(tmp_104*tmp_358 - tmp_295 - tmp_321) + tmp_118*(tmp_115*tmp_358 - tmp_297 - tmp_323) + tmp_126*(tmp_222*tmp_358 - tmp_293 - tmp_319)) + tmp_172*(tmp_151*(tmp_148*tmp_359 - tmp_302 - tmp_327) + tmp_162*(tmp_159*tmp_359 - tmp_304 - tmp_329) + tmp_170*(tmp_225*tmp_359 - tmp_300 - tmp_325)) + tmp_216*(tmp_195*(tmp_192*tmp_360 - tmp_309 - tmp_333) + tmp_206*(tmp_203*tmp_360 - tmp_311 - tmp_335) + tmp_214*(tmp_228*tmp_360 - tmp_307 - tmp_331)) + tmp_84*(tmp_50*(-tmp_288 - tmp_315 + tmp_357*tmp_47) + tmp_61*(-tmp_290 - tmp_317 + tmp_357*tmp_58) + tmp_69*(tmp_219*tmp_357 - tmp_286 - tmp_313));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_1_blending_q2::Blending_DF_Triangle( real_t in_0, real_t in_1, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3 ) const
   {
      Point3D  mappedPt( in_0, in_1, 0 );
      Matrix2r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 1, 0 );
      *out_3 = DPsi( 1, 1 );
   }

   void p2_epsiloncc_1_1_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_1_2_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_1_2_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_1_2_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_14 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_13 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_11 - Blending_DF_Tetrahedron_0_5*tmp_12;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(tmp_11 - tmp_12);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(tmp_14 - tmp_15);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_26 - tmp_27;
      real_t tmp_39 = tmp_20 - tmp_29;
      real_t tmp_40 = tmp_23 - tmp_28;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_44 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_48 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_49 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_50 = tmp_10*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_17);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_3*tmp_79 - Blending_DF_Tetrahedron_1_3*tmp_80 + Blending_DF_Tetrahedron_1_4*tmp_78 - Blending_DF_Tetrahedron_1_4*tmp_81 + Blending_DF_Tetrahedron_1_5*tmp_76 - Blending_DF_Tetrahedron_1_5*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_78 - tmp_81);
      real_t tmp_86 = tmp_83*(tmp_79 - tmp_80);
      real_t tmp_87 = tmp_10*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_92 = tmp_83*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_93 = tmp_83*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_94 = tmp_10*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_3*tmp_109 - Blending_DF_Tetrahedron_2_3*tmp_110 + Blending_DF_Tetrahedron_2_4*tmp_108 - Blending_DF_Tetrahedron_2_4*tmp_111 + Blending_DF_Tetrahedron_2_5*tmp_106 - Blending_DF_Tetrahedron_2_5*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_108 - tmp_111);
      real_t tmp_116 = tmp_113*(tmp_109 - tmp_110);
      real_t tmp_117 = tmp_10*tmp_114 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_122 = tmp_113*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_123 = tmp_113*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_124 = tmp_10*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_3*tmp_139 - Blending_DF_Tetrahedron_3_3*tmp_140 + Blending_DF_Tetrahedron_3_4*tmp_138 - Blending_DF_Tetrahedron_3_4*tmp_141 + Blending_DF_Tetrahedron_3_5*tmp_136 - Blending_DF_Tetrahedron_3_5*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_138 - tmp_141);
      real_t tmp_146 = tmp_143*(tmp_139 - tmp_140);
      real_t tmp_147 = tmp_10*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_152 = tmp_143*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_153 = tmp_143*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_154 = tmp_10*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_1_2_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = p_affine_2_0 + tmp_4;
      real_t tmp_9 = p_affine_1_1 + tmp_6;
      real_t tmp_10 = tmp_5*tmp_7 - tmp_8*tmp_9;
      real_t tmp_11 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6;
      real_t tmp_12 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_3*tmp_14 - Blending_DF_Tetrahedron_0_3*tmp_15 + Blending_DF_Tetrahedron_0_4*tmp_13 - Blending_DF_Tetrahedron_0_4*tmp_16 + Blending_DF_Tetrahedron_0_5*tmp_11 - Blending_DF_Tetrahedron_0_5*tmp_12;
      real_t tmp_18 = -p_affine_0_2;
      real_t tmp_19 = p_affine_3_2 + tmp_18;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_1 + tmp_6;
      real_t tmp_22 = p_affine_1_2 + tmp_18;
      real_t tmp_23 = tmp_21*tmp_22;
      real_t tmp_24 = p_affine_2_2 + tmp_18;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = tmp_25*tmp_9;
      real_t tmp_27 = tmp_21*tmp_5;
      real_t tmp_28 = tmp_19*tmp_9;
      real_t tmp_29 = tmp_22*tmp_25;
      real_t tmp_30 = 1.0 / (tmp_20*tmp_7 + tmp_23*tmp_8 + tmp_24*tmp_26 - tmp_24*tmp_27 - tmp_28*tmp_8 - tmp_29*tmp_7);
      real_t tmp_31 = tmp_30/tmp_17;
      real_t tmp_32 = tmp_31*(tmp_11 - tmp_12);
      real_t tmp_33 = tmp_22*tmp_8 - tmp_24*tmp_5;
      real_t tmp_34 = tmp_31*(tmp_13 - tmp_16);
      real_t tmp_35 = -tmp_22*tmp_7 + tmp_24*tmp_9;
      real_t tmp_36 = tmp_31*(tmp_14 - tmp_15);
      real_t tmp_37 = tmp_10*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_26 - tmp_27;
      real_t tmp_39 = tmp_20 - tmp_29;
      real_t tmp_40 = tmp_23 - tmp_28;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_21*tmp_8 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_19*tmp_8 + tmp_24*tmp_25;
      real_t tmp_44 = tmp_19*tmp_7 - tmp_21*tmp_24;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4 - Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3);
      real_t tmp_61 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3);
      real_t tmp_62 = tmp_31*(Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_10*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_17);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_3*tmp_73 - Blending_DF_Tetrahedron_1_3*tmp_74 + Blending_DF_Tetrahedron_1_4*tmp_72 - Blending_DF_Tetrahedron_1_4*tmp_75 + Blending_DF_Tetrahedron_1_5*tmp_70 - Blending_DF_Tetrahedron_1_5*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_72 - tmp_75);
      real_t tmp_80 = tmp_77*(tmp_73 - tmp_74);
      real_t tmp_81 = tmp_10*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4 - Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3);
      real_t tmp_85 = tmp_77*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3);
      real_t tmp_86 = tmp_77*(Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_10*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_3*tmp_97 - Blending_DF_Tetrahedron_2_3*tmp_98 + Blending_DF_Tetrahedron_2_4*tmp_96 - Blending_DF_Tetrahedron_2_4*tmp_99 + Blending_DF_Tetrahedron_2_5*tmp_94 - Blending_DF_Tetrahedron_2_5*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_96 - tmp_99);
      real_t tmp_104 = tmp_101*(tmp_97 - tmp_98);
      real_t tmp_105 = tmp_10*tmp_102 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4 - Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3);
      real_t tmp_109 = tmp_101*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3);
      real_t tmp_110 = tmp_101*(Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_10*tmp_108 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_3*tmp_121 - Blending_DF_Tetrahedron_3_3*tmp_122 + Blending_DF_Tetrahedron_3_4*tmp_120 - Blending_DF_Tetrahedron_3_4*tmp_123 + Blending_DF_Tetrahedron_3_5*tmp_118 - Blending_DF_Tetrahedron_3_5*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_120 - tmp_123);
      real_t tmp_128 = tmp_125*(tmp_121 - tmp_122);
      real_t tmp_129 = tmp_10*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4 - Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3);
      real_t tmp_133 = tmp_125*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3);
      real_t tmp_134 = tmp_125*(Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_10*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_1_2_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_2_0_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_0_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_0_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_15 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_16 - Blending_DF_Tetrahedron_0_7*tmp_17 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_17);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_48 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_49 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_50 = tmp_12*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_19);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_6*tmp_78 - Blending_DF_Tetrahedron_1_6*tmp_81 + Blending_DF_Tetrahedron_1_7*tmp_79 - Blending_DF_Tetrahedron_1_7*tmp_80 + Blending_DF_Tetrahedron_1_8*tmp_76 - Blending_DF_Tetrahedron_1_8*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_79 - tmp_80);
      real_t tmp_86 = tmp_83*(tmp_78 - tmp_81);
      real_t tmp_87 = tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_92 = tmp_83*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_93 = tmp_83*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_94 = tmp_12*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_6*tmp_108 - Blending_DF_Tetrahedron_2_6*tmp_111 + Blending_DF_Tetrahedron_2_7*tmp_109 - Blending_DF_Tetrahedron_2_7*tmp_110 + Blending_DF_Tetrahedron_2_8*tmp_106 - Blending_DF_Tetrahedron_2_8*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_109 - tmp_110);
      real_t tmp_116 = tmp_113*(tmp_108 - tmp_111);
      real_t tmp_117 = tmp_114*tmp_12 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_122 = tmp_113*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_123 = tmp_113*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_124 = tmp_12*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_6*tmp_138 - Blending_DF_Tetrahedron_3_6*tmp_141 + Blending_DF_Tetrahedron_3_7*tmp_139 - Blending_DF_Tetrahedron_3_7*tmp_140 + Blending_DF_Tetrahedron_3_8*tmp_136 - Blending_DF_Tetrahedron_3_8*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_139 - tmp_140);
      real_t tmp_146 = tmp_143*(tmp_138 - tmp_141);
      real_t tmp_147 = tmp_12*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_152 = tmp_143*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_153 = tmp_143*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_154 = tmp_12*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_0_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_15 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_16 - Blending_DF_Tetrahedron_0_7*tmp_17 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_17);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_61 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_62 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_12*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_19);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_6*tmp_72 - Blending_DF_Tetrahedron_1_6*tmp_75 + Blending_DF_Tetrahedron_1_7*tmp_73 - Blending_DF_Tetrahedron_1_7*tmp_74 + Blending_DF_Tetrahedron_1_8*tmp_70 - Blending_DF_Tetrahedron_1_8*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_73 - tmp_74);
      real_t tmp_80 = tmp_77*(tmp_72 - tmp_75);
      real_t tmp_81 = tmp_12*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_85 = tmp_77*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_86 = tmp_77*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_6*tmp_96 - Blending_DF_Tetrahedron_2_6*tmp_99 + Blending_DF_Tetrahedron_2_7*tmp_97 - Blending_DF_Tetrahedron_2_7*tmp_98 + Blending_DF_Tetrahedron_2_8*tmp_94 - Blending_DF_Tetrahedron_2_8*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_97 - tmp_98);
      real_t tmp_104 = tmp_101*(tmp_96 - tmp_99);
      real_t tmp_105 = tmp_102*tmp_12 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_109 = tmp_101*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_110 = tmp_101*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_6*tmp_120 - Blending_DF_Tetrahedron_3_6*tmp_123 + Blending_DF_Tetrahedron_3_7*tmp_121 - Blending_DF_Tetrahedron_3_7*tmp_122 + Blending_DF_Tetrahedron_3_8*tmp_118 - Blending_DF_Tetrahedron_3_8*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_121 - tmp_122);
      real_t tmp_128 = tmp_125*(tmp_120 - tmp_123);
      real_t tmp_129 = tmp_12*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_133 = tmp_125*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_134 = tmp_125*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_12*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_0_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_2_1_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_1_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_1_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_15 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_16 - Blending_DF_Tetrahedron_0_7*tmp_17 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_17);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45;
      real_t tmp_47 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_48 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_49 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_50 = tmp_12*tmp_47 + tmp_33*tmp_48 + tmp_35*tmp_49;
      real_t tmp_51 = 0.5*tmp_3;
      real_t tmp_52 = tmp_38*tmp_47 + tmp_39*tmp_48 + tmp_40*tmp_49;
      real_t tmp_53 = tmp_42*tmp_47 + tmp_43*tmp_48 + tmp_44*tmp_49;
      real_t tmp_54 = tmp_50*tmp_51 + tmp_51*tmp_52 + tmp_51*tmp_53;
      real_t tmp_55 = p_affine_0_0*p_affine_1_1;
      real_t tmp_56 = p_affine_0_0*p_affine_1_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_2;
      real_t tmp_58 = p_affine_0_1*p_affine_1_0;
      real_t tmp_59 = p_affine_0_1*p_affine_1_2;
      real_t tmp_60 = p_affine_2_2*p_affine_3_0;
      real_t tmp_61 = p_affine_0_2*p_affine_1_0;
      real_t tmp_62 = p_affine_0_2*p_affine_1_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_1;
      real_t tmp_64 = p_affine_2_2*p_affine_3_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_2;
      real_t tmp_66 = p_affine_2_1*p_affine_3_0;
      real_t tmp_67 = std::abs(p_affine_0_0*tmp_57 - p_affine_0_0*tmp_64 + p_affine_0_1*tmp_60 - p_affine_0_1*tmp_65 + p_affine_0_2*tmp_63 - p_affine_0_2*tmp_66 - p_affine_1_0*tmp_57 + p_affine_1_0*tmp_64 - p_affine_1_1*tmp_60 + p_affine_1_1*tmp_65 - p_affine_1_2*tmp_63 + p_affine_1_2*tmp_66 + p_affine_2_0*tmp_59 - p_affine_2_0*tmp_62 - p_affine_2_1*tmp_56 + p_affine_2_1*tmp_61 + p_affine_2_2*tmp_55 - p_affine_2_2*tmp_58 - p_affine_3_0*tmp_59 + p_affine_3_0*tmp_62 + p_affine_3_1*tmp_56 - p_affine_3_1*tmp_61 - p_affine_3_2*tmp_55 + p_affine_3_2*tmp_58);
      real_t tmp_68 = 2*tmp_67;
      real_t tmp_69 = 0.041666666666666657*std::abs(tmp_19);
      real_t tmp_70 = tmp_68*tmp_69;
      real_t tmp_71 = tmp_54*tmp_70;
      real_t tmp_72 = 0.55278640450004235;
      real_t tmp_73 = 2.3416407864998732;
      real_t tmp_74 = 0.55278640450004235;
      real_t tmp_75 = tmp_72 + tmp_73 + tmp_74 - 3.0;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_77 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_78 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_79 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_80 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_81 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_82 = Blending_DF_Tetrahedron_1_6*tmp_78 - Blending_DF_Tetrahedron_1_6*tmp_81 + Blending_DF_Tetrahedron_1_7*tmp_79 - Blending_DF_Tetrahedron_1_7*tmp_80 + Blending_DF_Tetrahedron_1_8*tmp_76 - Blending_DF_Tetrahedron_1_8*tmp_77;
      real_t tmp_83 = tmp_30/tmp_82;
      real_t tmp_84 = tmp_83*(tmp_76 - tmp_77);
      real_t tmp_85 = tmp_83*(tmp_79 - tmp_80);
      real_t tmp_86 = tmp_83*(tmp_78 - tmp_81);
      real_t tmp_87 = tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86;
      real_t tmp_88 = tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86;
      real_t tmp_89 = tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86;
      real_t tmp_90 = tmp_75*tmp_87 + tmp_75*tmp_88 + tmp_75*tmp_89;
      real_t tmp_91 = tmp_83*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_92 = tmp_83*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_93 = tmp_83*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_94 = tmp_12*tmp_91 + tmp_33*tmp_92 + tmp_35*tmp_93;
      real_t tmp_95 = 0.5*tmp_75;
      real_t tmp_96 = tmp_38*tmp_91 + tmp_39*tmp_92 + tmp_40*tmp_93;
      real_t tmp_97 = tmp_42*tmp_91 + tmp_43*tmp_92 + tmp_44*tmp_93;
      real_t tmp_98 = tmp_94*tmp_95 + tmp_95*tmp_96 + tmp_95*tmp_97;
      real_t tmp_99 = 0.041666666666666657*std::abs(tmp_82);
      real_t tmp_100 = tmp_68*tmp_99;
      real_t tmp_101 = tmp_100*tmp_98;
      real_t tmp_102 = 2.3416407864998732;
      real_t tmp_103 = 0.55278640450004235;
      real_t tmp_104 = 0.55278640450004235;
      real_t tmp_105 = tmp_102 + tmp_103 + tmp_104 - 3.0;
      real_t tmp_106 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_107 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_108 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_109 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_110 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_111 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_112 = Blending_DF_Tetrahedron_2_6*tmp_108 - Blending_DF_Tetrahedron_2_6*tmp_111 + Blending_DF_Tetrahedron_2_7*tmp_109 - Blending_DF_Tetrahedron_2_7*tmp_110 + Blending_DF_Tetrahedron_2_8*tmp_106 - Blending_DF_Tetrahedron_2_8*tmp_107;
      real_t tmp_113 = tmp_30/tmp_112;
      real_t tmp_114 = tmp_113*(tmp_106 - tmp_107);
      real_t tmp_115 = tmp_113*(tmp_109 - tmp_110);
      real_t tmp_116 = tmp_113*(tmp_108 - tmp_111);
      real_t tmp_117 = tmp_114*tmp_12 + tmp_115*tmp_33 + tmp_116*tmp_35;
      real_t tmp_118 = tmp_114*tmp_38 + tmp_115*tmp_39 + tmp_116*tmp_40;
      real_t tmp_119 = tmp_114*tmp_42 + tmp_115*tmp_43 + tmp_116*tmp_44;
      real_t tmp_120 = tmp_105*tmp_117 + tmp_105*tmp_118 + tmp_105*tmp_119;
      real_t tmp_121 = tmp_113*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_122 = tmp_113*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_123 = tmp_113*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_124 = tmp_12*tmp_121 + tmp_122*tmp_33 + tmp_123*tmp_35;
      real_t tmp_125 = 0.5*tmp_105;
      real_t tmp_126 = tmp_121*tmp_38 + tmp_122*tmp_39 + tmp_123*tmp_40;
      real_t tmp_127 = tmp_121*tmp_42 + tmp_122*tmp_43 + tmp_123*tmp_44;
      real_t tmp_128 = tmp_124*tmp_125 + tmp_125*tmp_126 + tmp_125*tmp_127;
      real_t tmp_129 = 0.041666666666666657*std::abs(tmp_112);
      real_t tmp_130 = tmp_129*tmp_68;
      real_t tmp_131 = tmp_128*tmp_130;
      real_t tmp_132 = 0.55278640450004235;
      real_t tmp_133 = 0.55278640450004235;
      real_t tmp_134 = 0.55278640450004235;
      real_t tmp_135 = tmp_132 + tmp_133 + tmp_134 - 3.0;
      real_t tmp_136 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_137 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_138 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_139 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_140 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_141 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_142 = Blending_DF_Tetrahedron_3_6*tmp_138 - Blending_DF_Tetrahedron_3_6*tmp_141 + Blending_DF_Tetrahedron_3_7*tmp_139 - Blending_DF_Tetrahedron_3_7*tmp_140 + Blending_DF_Tetrahedron_3_8*tmp_136 - Blending_DF_Tetrahedron_3_8*tmp_137;
      real_t tmp_143 = tmp_30/tmp_142;
      real_t tmp_144 = tmp_143*(tmp_136 - tmp_137);
      real_t tmp_145 = tmp_143*(tmp_139 - tmp_140);
      real_t tmp_146 = tmp_143*(tmp_138 - tmp_141);
      real_t tmp_147 = tmp_12*tmp_144 + tmp_145*tmp_33 + tmp_146*tmp_35;
      real_t tmp_148 = tmp_144*tmp_38 + tmp_145*tmp_39 + tmp_146*tmp_40;
      real_t tmp_149 = tmp_144*tmp_42 + tmp_145*tmp_43 + tmp_146*tmp_44;
      real_t tmp_150 = tmp_135*tmp_147 + tmp_135*tmp_148 + tmp_135*tmp_149;
      real_t tmp_151 = tmp_143*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_152 = tmp_143*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_153 = tmp_143*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_154 = tmp_12*tmp_151 + tmp_152*tmp_33 + tmp_153*tmp_35;
      real_t tmp_155 = 0.5*tmp_135;
      real_t tmp_156 = tmp_151*tmp_38 + tmp_152*tmp_39 + tmp_153*tmp_40;
      real_t tmp_157 = tmp_151*tmp_42 + tmp_152*tmp_43 + tmp_153*tmp_44;
      real_t tmp_158 = tmp_154*tmp_155 + tmp_155*tmp_156 + tmp_155*tmp_157;
      real_t tmp_159 = 0.041666666666666657*std::abs(tmp_142);
      real_t tmp_160 = tmp_159*tmp_68;
      real_t tmp_161 = tmp_158*tmp_160;
      real_t tmp_162 = 2.0*tmp_67;
      real_t tmp_163 = tmp_162*tmp_54;
      real_t tmp_164 = tmp_69*(tmp_0 - 1.0);
      real_t tmp_165 = tmp_164*tmp_45;
      real_t tmp_166 = tmp_162*tmp_98;
      real_t tmp_167 = tmp_99*(tmp_72 - 1.0);
      real_t tmp_168 = tmp_167*tmp_89;
      real_t tmp_169 = tmp_128*tmp_162;
      real_t tmp_170 = tmp_129*(tmp_102 - 1.0);
      real_t tmp_171 = tmp_119*tmp_170;
      real_t tmp_172 = tmp_158*tmp_162;
      real_t tmp_173 = tmp_159*(tmp_132 - 1.0);
      real_t tmp_174 = tmp_149*tmp_173;
      real_t tmp_175 = tmp_163*tmp_69;
      real_t tmp_176 = tmp_1 - 1.0;
      real_t tmp_177 = tmp_176*tmp_41;
      real_t tmp_178 = tmp_166*tmp_99;
      real_t tmp_179 = tmp_73 - 1.0;
      real_t tmp_180 = tmp_179*tmp_88;
      real_t tmp_181 = tmp_129*tmp_169;
      real_t tmp_182 = tmp_103 - 1.0;
      real_t tmp_183 = tmp_118*tmp_182;
      real_t tmp_184 = tmp_159*tmp_172;
      real_t tmp_185 = tmp_133 - 1.0;
      real_t tmp_186 = tmp_148*tmp_185;
      real_t tmp_187 = tmp_2 - 1.0;
      real_t tmp_188 = tmp_187*tmp_37;
      real_t tmp_189 = tmp_74 - 1.0;
      real_t tmp_190 = tmp_189*tmp_87;
      real_t tmp_191 = tmp_104 - 1.0;
      real_t tmp_192 = tmp_117*tmp_191;
      real_t tmp_193 = tmp_134 - 1.0;
      real_t tmp_194 = tmp_147*tmp_193;
      real_t tmp_195 = tmp_1*tmp_37;
      real_t tmp_196 = tmp_2*tmp_41;
      real_t tmp_197 = tmp_195 + tmp_196;
      real_t tmp_198 = tmp_73*tmp_87;
      real_t tmp_199 = tmp_74*tmp_88;
      real_t tmp_200 = tmp_198 + tmp_199;
      real_t tmp_201 = tmp_103*tmp_117;
      real_t tmp_202 = tmp_104*tmp_118;
      real_t tmp_203 = tmp_201 + tmp_202;
      real_t tmp_204 = tmp_133*tmp_147;
      real_t tmp_205 = tmp_134*tmp_148;
      real_t tmp_206 = tmp_204 + tmp_205;
      real_t tmp_207 = tmp_0*tmp_37;
      real_t tmp_208 = tmp_2*tmp_45;
      real_t tmp_209 = tmp_207 + tmp_208;
      real_t tmp_210 = tmp_72*tmp_87;
      real_t tmp_211 = tmp_74*tmp_89;
      real_t tmp_212 = tmp_210 + tmp_211;
      real_t tmp_213 = tmp_102*tmp_117;
      real_t tmp_214 = tmp_104*tmp_119;
      real_t tmp_215 = tmp_213 + tmp_214;
      real_t tmp_216 = tmp_132*tmp_147;
      real_t tmp_217 = tmp_134*tmp_149;
      real_t tmp_218 = tmp_216 + tmp_217;
      real_t tmp_219 = tmp_0*tmp_41;
      real_t tmp_220 = tmp_1*tmp_45;
      real_t tmp_221 = tmp_219 + tmp_220;
      real_t tmp_222 = tmp_72*tmp_88;
      real_t tmp_223 = tmp_73*tmp_89;
      real_t tmp_224 = tmp_222 + tmp_223;
      real_t tmp_225 = tmp_102*tmp_118;
      real_t tmp_226 = tmp_103*tmp_119;
      real_t tmp_227 = tmp_225 + tmp_226;
      real_t tmp_228 = tmp_132*tmp_148;
      real_t tmp_229 = tmp_133*tmp_149;
      real_t tmp_230 = tmp_228 + tmp_229;
      real_t tmp_231 = -tmp_1;
      real_t tmp_232 = 4.0 - tmp_0;
      real_t tmp_233 = tmp_231 + tmp_232 - 4.6832815729997463;
      real_t tmp_234 = -tmp_196 - tmp_208 + tmp_233*tmp_37;
      real_t tmp_235 = -tmp_73;
      real_t tmp_236 = 4.0 - tmp_72;
      real_t tmp_237 = tmp_235 + tmp_236 - 1.1055728090000847;
      real_t tmp_238 = -tmp_199 - tmp_211 + tmp_237*tmp_87;
      real_t tmp_239 = -tmp_103;
      real_t tmp_240 = 4.0 - tmp_102;
      real_t tmp_241 = tmp_239 + tmp_240 - 1.1055728090000847;
      real_t tmp_242 = tmp_117*tmp_241 - tmp_202 - tmp_214;
      real_t tmp_243 = -tmp_133;
      real_t tmp_244 = 4.0 - tmp_132;
      real_t tmp_245 = tmp_243 + tmp_244 - 1.1055728090000847;
      real_t tmp_246 = tmp_147*tmp_245 - tmp_205 - tmp_217;
      real_t tmp_247 = -tmp_2;
      real_t tmp_248 = tmp_232 + tmp_247 - 1.1055728090000847;
      real_t tmp_249 = -tmp_195 - tmp_220 + tmp_248*tmp_41;
      real_t tmp_250 = -tmp_74;
      real_t tmp_251 = tmp_236 + tmp_250 - 4.6832815729997463;
      real_t tmp_252 = -tmp_198 - tmp_223 + tmp_251*tmp_88;
      real_t tmp_253 = -tmp_104;
      real_t tmp_254 = tmp_240 + tmp_253 - 1.1055728090000847;
      real_t tmp_255 = tmp_118*tmp_254 - tmp_201 - tmp_226;
      real_t tmp_256 = -tmp_134;
      real_t tmp_257 = tmp_244 + tmp_256 - 1.1055728090000847;
      real_t tmp_258 = tmp_148*tmp_257 - tmp_204 - tmp_229;
      real_t tmp_259 = tmp_231 + tmp_247 + 2.8944271909999153;
      real_t tmp_260 = -tmp_207 - tmp_219 + tmp_259*tmp_45;
      real_t tmp_261 = tmp_235 + tmp_250 + 2.8944271909999153;
      real_t tmp_262 = -tmp_210 - tmp_222 + tmp_261*tmp_89;
      real_t tmp_263 = tmp_239 + tmp_253 - 0.68328157299974634;
      real_t tmp_264 = tmp_119*tmp_263 - tmp_213 - tmp_225;
      real_t tmp_265 = tmp_243 + tmp_256 + 2.8944271909999153;
      real_t tmp_266 = tmp_149*tmp_265 - tmp_216 - tmp_228;
      real_t tmp_267 = 1.0*tmp_67;
      real_t tmp_268 = tmp_267*tmp_46;
      real_t tmp_269 = tmp_164*tmp_53;
      real_t tmp_270 = tmp_267*tmp_90;
      real_t tmp_271 = tmp_167*tmp_97;
      real_t tmp_272 = tmp_120*tmp_267;
      real_t tmp_273 = tmp_127*tmp_170;
      real_t tmp_274 = tmp_150*tmp_267;
      real_t tmp_275 = tmp_157*tmp_173;
      real_t tmp_276 = 16.0*tmp_67;
      real_t tmp_277 = tmp_276*tmp_69;
      real_t tmp_278 = tmp_276*tmp_99;
      real_t tmp_279 = tmp_129*tmp_276;
      real_t tmp_280 = tmp_159*tmp_276;
      real_t tmp_281 = tmp_267*tmp_269;
      real_t tmp_282 = tmp_267*tmp_271;
      real_t tmp_283 = tmp_267*tmp_273;
      real_t tmp_284 = tmp_267*tmp_275;
      real_t tmp_285 = tmp_268*tmp_69;
      real_t tmp_286 = tmp_176*tmp_52;
      real_t tmp_287 = tmp_270*tmp_99;
      real_t tmp_288 = tmp_179*tmp_96;
      real_t tmp_289 = tmp_129*tmp_272;
      real_t tmp_290 = tmp_126*tmp_182;
      real_t tmp_291 = tmp_159*tmp_274;
      real_t tmp_292 = tmp_156*tmp_185;
      real_t tmp_293 = tmp_165*tmp_267;
      real_t tmp_294 = tmp_168*tmp_267;
      real_t tmp_295 = tmp_171*tmp_267;
      real_t tmp_296 = tmp_174*tmp_267;
      real_t tmp_297 = tmp_267*tmp_69;
      real_t tmp_298 = tmp_286*tmp_297;
      real_t tmp_299 = tmp_267*tmp_99;
      real_t tmp_300 = tmp_288*tmp_299;
      real_t tmp_301 = tmp_129*tmp_267;
      real_t tmp_302 = tmp_290*tmp_301;
      real_t tmp_303 = tmp_159*tmp_267;
      real_t tmp_304 = tmp_292*tmp_303;
      real_t tmp_305 = tmp_187*tmp_50;
      real_t tmp_306 = tmp_189*tmp_94;
      real_t tmp_307 = tmp_124*tmp_191;
      real_t tmp_308 = tmp_154*tmp_193;
      real_t tmp_309 = tmp_297*tmp_305;
      real_t tmp_310 = tmp_299*tmp_306;
      real_t tmp_311 = tmp_301*tmp_307;
      real_t tmp_312 = tmp_303*tmp_308;
      real_t tmp_313 = 2.0*tmp_50;
      real_t tmp_314 = 0.13819660112501059*tmp_313;
      real_t tmp_315 = 1.1708203932499366;
      real_t tmp_316 = tmp_315*tmp_52;
      real_t tmp_317 = tmp_314 + tmp_316;
      real_t tmp_318 = tmp_317*tmp_70;
      real_t tmp_319 = 2.0*tmp_94;
      real_t tmp_320 = 0.58541019662496829*tmp_319;
      real_t tmp_321 = 0.27639320225002117;
      real_t tmp_322 = tmp_321*tmp_96;
      real_t tmp_323 = tmp_320 + tmp_322;
      real_t tmp_324 = tmp_100*tmp_323;
      real_t tmp_325 = 2.0*tmp_124;
      real_t tmp_326 = 0.13819660112501059*tmp_325;
      real_t tmp_327 = 0.27639320225002117;
      real_t tmp_328 = tmp_126*tmp_327;
      real_t tmp_329 = tmp_326 + tmp_328;
      real_t tmp_330 = tmp_130*tmp_329;
      real_t tmp_331 = 2.0*tmp_154;
      real_t tmp_332 = 0.13819660112501059*tmp_331;
      real_t tmp_333 = 0.27639320225002117;
      real_t tmp_334 = tmp_156*tmp_333;
      real_t tmp_335 = tmp_332 + tmp_334;
      real_t tmp_336 = tmp_160*tmp_335;
      real_t tmp_337 = tmp_162*tmp_317;
      real_t tmp_338 = tmp_162*tmp_323;
      real_t tmp_339 = tmp_162*tmp_329;
      real_t tmp_340 = tmp_162*tmp_335;
      real_t tmp_341 = tmp_337*tmp_69;
      real_t tmp_342 = tmp_338*tmp_99;
      real_t tmp_343 = tmp_129*tmp_339;
      real_t tmp_344 = tmp_159*tmp_340;
      real_t tmp_345 = 0.13819660112501059*tmp_313;
      real_t tmp_346 = tmp_315*tmp_53;
      real_t tmp_347 = tmp_345 + tmp_346;
      real_t tmp_348 = tmp_347*tmp_70;
      real_t tmp_349 = 0.13819660112501059*tmp_319;
      real_t tmp_350 = tmp_321*tmp_97;
      real_t tmp_351 = tmp_349 + tmp_350;
      real_t tmp_352 = tmp_100*tmp_351;
      real_t tmp_353 = 0.58541019662496829*tmp_325;
      real_t tmp_354 = tmp_127*tmp_327;
      real_t tmp_355 = tmp_353 + tmp_354;
      real_t tmp_356 = tmp_130*tmp_355;
      real_t tmp_357 = 0.13819660112501059*tmp_331;
      real_t tmp_358 = tmp_157*tmp_333;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_160*tmp_359;
      real_t tmp_361 = tmp_162*tmp_347;
      real_t tmp_362 = tmp_162*tmp_351;
      real_t tmp_363 = tmp_162*tmp_355;
      real_t tmp_364 = tmp_162*tmp_359;
      real_t tmp_365 = tmp_361*tmp_69;
      real_t tmp_366 = tmp_362*tmp_99;
      real_t tmp_367 = tmp_129*tmp_363;
      real_t tmp_368 = tmp_159*tmp_364;
      real_t tmp_369 = 0.27639320225002117*tmp_52;
      real_t tmp_370 = 0.27639320225002117*tmp_53;
      real_t tmp_371 = tmp_369 + tmp_370;
      real_t tmp_372 = tmp_371*tmp_70;
      real_t tmp_373 = 0.27639320225002117*tmp_96;
      real_t tmp_374 = 1.1708203932499366*tmp_97;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_100*tmp_375;
      real_t tmp_377 = 1.1708203932499366*tmp_126;
      real_t tmp_378 = 0.27639320225002117*tmp_127;
      real_t tmp_379 = tmp_377 + tmp_378;
      real_t tmp_380 = tmp_130*tmp_379;
      real_t tmp_381 = 0.27639320225002117*tmp_156;
      real_t tmp_382 = 0.27639320225002117*tmp_157;
      real_t tmp_383 = tmp_381 + tmp_382;
      real_t tmp_384 = tmp_160*tmp_383;
      real_t tmp_385 = tmp_162*tmp_371;
      real_t tmp_386 = tmp_162*tmp_375;
      real_t tmp_387 = tmp_162*tmp_379;
      real_t tmp_388 = tmp_162*tmp_383;
      real_t tmp_389 = tmp_385*tmp_69;
      real_t tmp_390 = tmp_386*tmp_99;
      real_t tmp_391 = tmp_129*tmp_387;
      real_t tmp_392 = tmp_159*tmp_388;
      real_t tmp_393 = 0.5*tmp_233*tmp_50 - tmp_316 - tmp_346;
      real_t tmp_394 = tmp_393*tmp_70;
      real_t tmp_395 = 0.5*tmp_237*tmp_94 - tmp_322 - tmp_350;
      real_t tmp_396 = tmp_100*tmp_395;
      real_t tmp_397 = 0.5*tmp_124*tmp_241 - tmp_328 - tmp_354;
      real_t tmp_398 = tmp_130*tmp_397;
      real_t tmp_399 = 0.5*tmp_154*tmp_245 - tmp_334 - tmp_358;
      real_t tmp_400 = tmp_160*tmp_399;
      real_t tmp_401 = tmp_162*tmp_393;
      real_t tmp_402 = tmp_162*tmp_395;
      real_t tmp_403 = tmp_162*tmp_397;
      real_t tmp_404 = tmp_162*tmp_399;
      real_t tmp_405 = tmp_401*tmp_69;
      real_t tmp_406 = tmp_402*tmp_99;
      real_t tmp_407 = tmp_129*tmp_403;
      real_t tmp_408 = tmp_159*tmp_404;
      real_t tmp_409 = 0.5*tmp_248*tmp_52 - tmp_314 - tmp_370;
      real_t tmp_410 = tmp_409*tmp_70;
      real_t tmp_411 = 0.5*tmp_251*tmp_96 - tmp_320 - tmp_374;
      real_t tmp_412 = tmp_100*tmp_411;
      real_t tmp_413 = 0.5*tmp_126*tmp_254 - tmp_326 - tmp_378;
      real_t tmp_414 = tmp_130*tmp_413;
      real_t tmp_415 = 0.5*tmp_156*tmp_257 - tmp_332 - tmp_382;
      real_t tmp_416 = tmp_160*tmp_415;
      real_t tmp_417 = tmp_162*tmp_409;
      real_t tmp_418 = tmp_162*tmp_411;
      real_t tmp_419 = tmp_162*tmp_413;
      real_t tmp_420 = tmp_162*tmp_415;
      real_t tmp_421 = tmp_417*tmp_69;
      real_t tmp_422 = tmp_418*tmp_99;
      real_t tmp_423 = tmp_129*tmp_419;
      real_t tmp_424 = tmp_159*tmp_420;
      real_t tmp_425 = 0.5*tmp_259*tmp_53 - tmp_345 - tmp_369;
      real_t tmp_426 = tmp_425*tmp_70;
      real_t tmp_427 = 0.5*tmp_261*tmp_97 - tmp_349 - tmp_373;
      real_t tmp_428 = tmp_100*tmp_427;
      real_t tmp_429 = 0.5*tmp_127*tmp_263 - tmp_353 - tmp_377;
      real_t tmp_430 = tmp_130*tmp_429;
      real_t tmp_431 = 0.5*tmp_157*tmp_265 - tmp_357 - tmp_381;
      real_t tmp_432 = tmp_160*tmp_431;
      real_t tmp_433 = tmp_162*tmp_425;
      real_t tmp_434 = tmp_162*tmp_427;
      real_t tmp_435 = tmp_162*tmp_429;
      real_t tmp_436 = tmp_162*tmp_431;
      real_t tmp_437 = tmp_433*tmp_69;
      real_t tmp_438 = tmp_434*tmp_99;
      real_t tmp_439 = tmp_129*tmp_435;
      real_t tmp_440 = tmp_159*tmp_436;
      real_t a_0_0 = tmp_101*tmp_90 + tmp_120*tmp_131 + tmp_150*tmp_161 + tmp_46*tmp_71;
      real_t a_0_1 = tmp_163*tmp_165 + tmp_166*tmp_168 + tmp_169*tmp_171 + tmp_172*tmp_174;
      real_t a_0_2 = tmp_175*tmp_177 + tmp_178*tmp_180 + tmp_181*tmp_183 + tmp_184*tmp_186;
      real_t a_0_3 = tmp_175*tmp_188 + tmp_178*tmp_190 + tmp_181*tmp_192 + tmp_184*tmp_194;
      real_t a_0_4 = tmp_101*tmp_200 + tmp_131*tmp_203 + tmp_161*tmp_206 + tmp_197*tmp_71;
      real_t a_0_5 = tmp_101*tmp_212 + tmp_131*tmp_215 + tmp_161*tmp_218 + tmp_209*tmp_71;
      real_t a_0_6 = tmp_101*tmp_224 + tmp_131*tmp_227 + tmp_161*tmp_230 + tmp_221*tmp_71;
      real_t a_0_7 = tmp_101*tmp_238 + tmp_131*tmp_242 + tmp_161*tmp_246 + tmp_234*tmp_71;
      real_t a_0_8 = tmp_101*tmp_252 + tmp_131*tmp_255 + tmp_161*tmp_258 + tmp_249*tmp_71;
      real_t a_0_9 = tmp_101*tmp_262 + tmp_131*tmp_264 + tmp_161*tmp_266 + tmp_260*tmp_71;
      real_t a_1_0 = tmp_268*tmp_269 + tmp_270*tmp_271 + tmp_272*tmp_273 + tmp_274*tmp_275;
      real_t a_1_1 = 0.11249999999999989*tmp_119*tmp_127*tmp_279 + 0.012499999999999983*tmp_149*tmp_157*tmp_280 + 0.012499999999999983*tmp_277*tmp_45*tmp_53 + 0.012499999999999983*tmp_278*tmp_89*tmp_97;
      real_t a_1_2 = tmp_177*tmp_281 + tmp_180*tmp_282 + tmp_183*tmp_283 + tmp_186*tmp_284;
      real_t a_1_3 = tmp_188*tmp_281 + tmp_190*tmp_282 + tmp_192*tmp_283 + tmp_194*tmp_284;
      real_t a_1_4 = tmp_197*tmp_281 + tmp_200*tmp_282 + tmp_203*tmp_283 + tmp_206*tmp_284;
      real_t a_1_5 = tmp_209*tmp_281 + tmp_212*tmp_282 + tmp_215*tmp_283 + tmp_218*tmp_284;
      real_t a_1_6 = tmp_221*tmp_281 + tmp_224*tmp_282 + tmp_227*tmp_283 + tmp_230*tmp_284;
      real_t a_1_7 = tmp_234*tmp_281 + tmp_238*tmp_282 + tmp_242*tmp_283 + tmp_246*tmp_284;
      real_t a_1_8 = tmp_249*tmp_281 + tmp_252*tmp_282 + tmp_255*tmp_283 + tmp_258*tmp_284;
      real_t a_1_9 = tmp_260*tmp_281 + tmp_262*tmp_282 + tmp_264*tmp_283 + tmp_266*tmp_284;
      real_t a_2_0 = tmp_285*tmp_286 + tmp_287*tmp_288 + tmp_289*tmp_290 + tmp_291*tmp_292;
      real_t a_2_1 = tmp_286*tmp_293 + tmp_288*tmp_294 + tmp_290*tmp_295 + tmp_292*tmp_296;
      real_t a_2_2 = 0.012499999999999983*tmp_118*tmp_126*tmp_279 + 0.012499999999999983*tmp_148*tmp_156*tmp_280 + 0.012499999999999983*tmp_277*tmp_41*tmp_52 + 0.11249999999999989*tmp_278*tmp_88*tmp_96;
      real_t a_2_3 = tmp_188*tmp_298 + tmp_190*tmp_300 + tmp_192*tmp_302 + tmp_194*tmp_304;
      real_t a_2_4 = tmp_197*tmp_298 + tmp_200*tmp_300 + tmp_203*tmp_302 + tmp_206*tmp_304;
      real_t a_2_5 = tmp_209*tmp_298 + tmp_212*tmp_300 + tmp_215*tmp_302 + tmp_218*tmp_304;
      real_t a_2_6 = tmp_221*tmp_298 + tmp_224*tmp_300 + tmp_227*tmp_302 + tmp_230*tmp_304;
      real_t a_2_7 = tmp_234*tmp_298 + tmp_238*tmp_300 + tmp_242*tmp_302 + tmp_246*tmp_304;
      real_t a_2_8 = tmp_249*tmp_298 + tmp_252*tmp_300 + tmp_255*tmp_302 + tmp_258*tmp_304;
      real_t a_2_9 = tmp_260*tmp_298 + tmp_262*tmp_300 + tmp_264*tmp_302 + tmp_266*tmp_304;
      real_t a_3_0 = tmp_285*tmp_305 + tmp_287*tmp_306 + tmp_289*tmp_307 + tmp_291*tmp_308;
      real_t a_3_1 = tmp_293*tmp_305 + tmp_294*tmp_306 + tmp_295*tmp_307 + tmp_296*tmp_308;
      real_t a_3_2 = tmp_177*tmp_309 + tmp_180*tmp_310 + tmp_183*tmp_311 + tmp_186*tmp_312;
      real_t a_3_3 = 0.012499999999999983*tmp_117*tmp_124*tmp_279 + 0.012499999999999983*tmp_147*tmp_154*tmp_280 + 0.11249999999999989*tmp_277*tmp_37*tmp_50 + 0.012499999999999983*tmp_278*tmp_87*tmp_94;
      real_t a_3_4 = tmp_197*tmp_309 + tmp_200*tmp_310 + tmp_203*tmp_311 + tmp_206*tmp_312;
      real_t a_3_5 = tmp_209*tmp_309 + tmp_212*tmp_310 + tmp_215*tmp_311 + tmp_218*tmp_312;
      real_t a_3_6 = tmp_221*tmp_309 + tmp_224*tmp_310 + tmp_227*tmp_311 + tmp_230*tmp_312;
      real_t a_3_7 = tmp_234*tmp_309 + tmp_238*tmp_310 + tmp_242*tmp_311 + tmp_246*tmp_312;
      real_t a_3_8 = tmp_249*tmp_309 + tmp_252*tmp_310 + tmp_255*tmp_311 + tmp_258*tmp_312;
      real_t a_3_9 = tmp_260*tmp_309 + tmp_262*tmp_310 + tmp_264*tmp_311 + tmp_266*tmp_312;
      real_t a_4_0 = tmp_120*tmp_330 + tmp_150*tmp_336 + tmp_318*tmp_46 + tmp_324*tmp_90;
      real_t a_4_1 = tmp_165*tmp_337 + tmp_168*tmp_338 + tmp_171*tmp_339 + tmp_174*tmp_340;
      real_t a_4_2 = tmp_177*tmp_341 + tmp_180*tmp_342 + tmp_183*tmp_343 + tmp_186*tmp_344;
      real_t a_4_3 = tmp_188*tmp_341 + tmp_190*tmp_342 + tmp_192*tmp_343 + tmp_194*tmp_344;
      real_t a_4_4 = tmp_197*tmp_318 + tmp_200*tmp_324 + tmp_203*tmp_330 + tmp_206*tmp_336;
      real_t a_4_5 = tmp_209*tmp_318 + tmp_212*tmp_324 + tmp_215*tmp_330 + tmp_218*tmp_336;
      real_t a_4_6 = tmp_221*tmp_318 + tmp_224*tmp_324 + tmp_227*tmp_330 + tmp_230*tmp_336;
      real_t a_4_7 = tmp_234*tmp_318 + tmp_238*tmp_324 + tmp_242*tmp_330 + tmp_246*tmp_336;
      real_t a_4_8 = tmp_249*tmp_318 + tmp_252*tmp_324 + tmp_255*tmp_330 + tmp_258*tmp_336;
      real_t a_4_9 = tmp_260*tmp_318 + tmp_262*tmp_324 + tmp_264*tmp_330 + tmp_266*tmp_336;
      real_t a_5_0 = tmp_120*tmp_356 + tmp_150*tmp_360 + tmp_348*tmp_46 + tmp_352*tmp_90;
      real_t a_5_1 = tmp_165*tmp_361 + tmp_168*tmp_362 + tmp_171*tmp_363 + tmp_174*tmp_364;
      real_t a_5_2 = tmp_177*tmp_365 + tmp_180*tmp_366 + tmp_183*tmp_367 + tmp_186*tmp_368;
      real_t a_5_3 = tmp_188*tmp_365 + tmp_190*tmp_366 + tmp_192*tmp_367 + tmp_194*tmp_368;
      real_t a_5_4 = tmp_197*tmp_348 + tmp_200*tmp_352 + tmp_203*tmp_356 + tmp_206*tmp_360;
      real_t a_5_5 = tmp_209*tmp_348 + tmp_212*tmp_352 + tmp_215*tmp_356 + tmp_218*tmp_360;
      real_t a_5_6 = tmp_221*tmp_348 + tmp_224*tmp_352 + tmp_227*tmp_356 + tmp_230*tmp_360;
      real_t a_5_7 = tmp_234*tmp_348 + tmp_238*tmp_352 + tmp_242*tmp_356 + tmp_246*tmp_360;
      real_t a_5_8 = tmp_249*tmp_348 + tmp_252*tmp_352 + tmp_255*tmp_356 + tmp_258*tmp_360;
      real_t a_5_9 = tmp_260*tmp_348 + tmp_262*tmp_352 + tmp_264*tmp_356 + tmp_266*tmp_360;
      real_t a_6_0 = tmp_120*tmp_380 + tmp_150*tmp_384 + tmp_372*tmp_46 + tmp_376*tmp_90;
      real_t a_6_1 = tmp_165*tmp_385 + tmp_168*tmp_386 + tmp_171*tmp_387 + tmp_174*tmp_388;
      real_t a_6_2 = tmp_177*tmp_389 + tmp_180*tmp_390 + tmp_183*tmp_391 + tmp_186*tmp_392;
      real_t a_6_3 = tmp_188*tmp_389 + tmp_190*tmp_390 + tmp_192*tmp_391 + tmp_194*tmp_392;
      real_t a_6_4 = tmp_197*tmp_372 + tmp_200*tmp_376 + tmp_203*tmp_380 + tmp_206*tmp_384;
      real_t a_6_5 = tmp_209*tmp_372 + tmp_212*tmp_376 + tmp_215*tmp_380 + tmp_218*tmp_384;
      real_t a_6_6 = tmp_221*tmp_372 + tmp_224*tmp_376 + tmp_227*tmp_380 + tmp_230*tmp_384;
      real_t a_6_7 = tmp_234*tmp_372 + tmp_238*tmp_376 + tmp_242*tmp_380 + tmp_246*tmp_384;
      real_t a_6_8 = tmp_249*tmp_372 + tmp_252*tmp_376 + tmp_255*tmp_380 + tmp_258*tmp_384;
      real_t a_6_9 = tmp_260*tmp_372 + tmp_262*tmp_376 + tmp_264*tmp_380 + tmp_266*tmp_384;
      real_t a_7_0 = tmp_120*tmp_398 + tmp_150*tmp_400 + tmp_394*tmp_46 + tmp_396*tmp_90;
      real_t a_7_1 = tmp_165*tmp_401 + tmp_168*tmp_402 + tmp_171*tmp_403 + tmp_174*tmp_404;
      real_t a_7_2 = tmp_177*tmp_405 + tmp_180*tmp_406 + tmp_183*tmp_407 + tmp_186*tmp_408;
      real_t a_7_3 = tmp_188*tmp_405 + tmp_190*tmp_406 + tmp_192*tmp_407 + tmp_194*tmp_408;
      real_t a_7_4 = tmp_197*tmp_394 + tmp_200*tmp_396 + tmp_203*tmp_398 + tmp_206*tmp_400;
      real_t a_7_5 = tmp_209*tmp_394 + tmp_212*tmp_396 + tmp_215*tmp_398 + tmp_218*tmp_400;
      real_t a_7_6 = tmp_221*tmp_394 + tmp_224*tmp_396 + tmp_227*tmp_398 + tmp_230*tmp_400;
      real_t a_7_7 = tmp_234*tmp_394 + tmp_238*tmp_396 + tmp_242*tmp_398 + tmp_246*tmp_400;
      real_t a_7_8 = tmp_249*tmp_394 + tmp_252*tmp_396 + tmp_255*tmp_398 + tmp_258*tmp_400;
      real_t a_7_9 = tmp_260*tmp_394 + tmp_262*tmp_396 + tmp_264*tmp_398 + tmp_266*tmp_400;
      real_t a_8_0 = tmp_120*tmp_414 + tmp_150*tmp_416 + tmp_410*tmp_46 + tmp_412*tmp_90;
      real_t a_8_1 = tmp_165*tmp_417 + tmp_168*tmp_418 + tmp_171*tmp_419 + tmp_174*tmp_420;
      real_t a_8_2 = tmp_177*tmp_421 + tmp_180*tmp_422 + tmp_183*tmp_423 + tmp_186*tmp_424;
      real_t a_8_3 = tmp_188*tmp_421 + tmp_190*tmp_422 + tmp_192*tmp_423 + tmp_194*tmp_424;
      real_t a_8_4 = tmp_197*tmp_410 + tmp_200*tmp_412 + tmp_203*tmp_414 + tmp_206*tmp_416;
      real_t a_8_5 = tmp_209*tmp_410 + tmp_212*tmp_412 + tmp_215*tmp_414 + tmp_218*tmp_416;
      real_t a_8_6 = tmp_221*tmp_410 + tmp_224*tmp_412 + tmp_227*tmp_414 + tmp_230*tmp_416;
      real_t a_8_7 = tmp_234*tmp_410 + tmp_238*tmp_412 + tmp_242*tmp_414 + tmp_246*tmp_416;
      real_t a_8_8 = tmp_249*tmp_410 + tmp_252*tmp_412 + tmp_255*tmp_414 + tmp_258*tmp_416;
      real_t a_8_9 = tmp_260*tmp_410 + tmp_262*tmp_412 + tmp_264*tmp_414 + tmp_266*tmp_416;
      real_t a_9_0 = tmp_120*tmp_430 + tmp_150*tmp_432 + tmp_426*tmp_46 + tmp_428*tmp_90;
      real_t a_9_1 = tmp_165*tmp_433 + tmp_168*tmp_434 + tmp_171*tmp_435 + tmp_174*tmp_436;
      real_t a_9_2 = tmp_177*tmp_437 + tmp_180*tmp_438 + tmp_183*tmp_439 + tmp_186*tmp_440;
      real_t a_9_3 = tmp_188*tmp_437 + tmp_190*tmp_438 + tmp_192*tmp_439 + tmp_194*tmp_440;
      real_t a_9_4 = tmp_197*tmp_426 + tmp_200*tmp_428 + tmp_203*tmp_430 + tmp_206*tmp_432;
      real_t a_9_5 = tmp_209*tmp_426 + tmp_212*tmp_428 + tmp_215*tmp_430 + tmp_218*tmp_432;
      real_t a_9_6 = tmp_221*tmp_426 + tmp_224*tmp_428 + tmp_227*tmp_430 + tmp_230*tmp_432;
      real_t a_9_7 = tmp_234*tmp_426 + tmp_238*tmp_428 + tmp_242*tmp_430 + tmp_246*tmp_432;
      real_t a_9_8 = tmp_249*tmp_426 + tmp_252*tmp_428 + tmp_255*tmp_430 + tmp_258*tmp_432;
      real_t a_9_9 = tmp_260*tmp_426 + tmp_262*tmp_428 + tmp_264*tmp_430 + tmp_266*tmp_432;
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_1_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_15 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_16 - Blending_DF_Tetrahedron_0_7*tmp_17 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_14;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(tmp_13 - tmp_14);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(tmp_16 - tmp_17);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(tmp_15 - tmp_18);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_39 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_40 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_41 = tmp_32*tmp_38 + tmp_34*tmp_39 + tmp_36*tmp_40;
      real_t tmp_42 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_43 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_44 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_45 = tmp_32*tmp_42 + tmp_34*tmp_43 + tmp_36*tmp_44;
      real_t tmp_46 = p_affine_0_0*p_affine_1_1;
      real_t tmp_47 = p_affine_0_0*p_affine_1_2;
      real_t tmp_48 = p_affine_2_1*p_affine_3_2;
      real_t tmp_49 = p_affine_0_1*p_affine_1_0;
      real_t tmp_50 = p_affine_0_1*p_affine_1_2;
      real_t tmp_51 = p_affine_2_2*p_affine_3_0;
      real_t tmp_52 = p_affine_0_2*p_affine_1_0;
      real_t tmp_53 = p_affine_0_2*p_affine_1_1;
      real_t tmp_54 = p_affine_2_0*p_affine_3_1;
      real_t tmp_55 = p_affine_2_2*p_affine_3_1;
      real_t tmp_56 = p_affine_2_0*p_affine_3_2;
      real_t tmp_57 = p_affine_2_1*p_affine_3_0;
      real_t tmp_58 = std::abs(p_affine_0_0*tmp_48 - p_affine_0_0*tmp_55 + p_affine_0_1*tmp_51 - p_affine_0_1*tmp_56 + p_affine_0_2*tmp_54 - p_affine_0_2*tmp_57 - p_affine_1_0*tmp_48 + p_affine_1_0*tmp_55 - p_affine_1_1*tmp_51 + p_affine_1_1*tmp_56 - p_affine_1_2*tmp_54 + p_affine_1_2*tmp_57 + p_affine_2_0*tmp_50 - p_affine_2_0*tmp_53 - p_affine_2_1*tmp_47 + p_affine_2_1*tmp_52 + p_affine_2_2*tmp_46 - p_affine_2_2*tmp_49 - p_affine_3_0*tmp_50 + p_affine_3_0*tmp_53 + p_affine_3_1*tmp_47 - p_affine_3_1*tmp_52 - p_affine_3_2*tmp_46 + p_affine_3_2*tmp_49);
      real_t tmp_59 = 2*tmp_58;
      real_t tmp_60 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_61 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_62 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_63 = 0.5*tmp_3;
      real_t tmp_64 = 0.041666666666666657*(tmp_63*(tmp_12*tmp_60 + tmp_33*tmp_61 + tmp_35*tmp_62) + tmp_63*(tmp_38*tmp_60 + tmp_39*tmp_61 + tmp_40*tmp_62) + tmp_63*(tmp_42*tmp_60 + tmp_43*tmp_61 + tmp_44*tmp_62))*std::abs(tmp_19);
      real_t tmp_65 = tmp_59*tmp_64;
      real_t tmp_66 = 0.55278640450004235;
      real_t tmp_67 = 2.3416407864998732;
      real_t tmp_68 = 0.55278640450004235;
      real_t tmp_69 = tmp_66 + tmp_67 + tmp_68 - 3.0;
      real_t tmp_70 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_71 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_72 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_73 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_74 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_75 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_76 = Blending_DF_Tetrahedron_1_6*tmp_72 - Blending_DF_Tetrahedron_1_6*tmp_75 + Blending_DF_Tetrahedron_1_7*tmp_73 - Blending_DF_Tetrahedron_1_7*tmp_74 + Blending_DF_Tetrahedron_1_8*tmp_70 - Blending_DF_Tetrahedron_1_8*tmp_71;
      real_t tmp_77 = tmp_30/tmp_76;
      real_t tmp_78 = tmp_77*(tmp_70 - tmp_71);
      real_t tmp_79 = tmp_77*(tmp_73 - tmp_74);
      real_t tmp_80 = tmp_77*(tmp_72 - tmp_75);
      real_t tmp_81 = tmp_12*tmp_78 + tmp_33*tmp_79 + tmp_35*tmp_80;
      real_t tmp_82 = tmp_38*tmp_78 + tmp_39*tmp_79 + tmp_40*tmp_80;
      real_t tmp_83 = tmp_42*tmp_78 + tmp_43*tmp_79 + tmp_44*tmp_80;
      real_t tmp_84 = tmp_77*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_85 = tmp_77*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_86 = tmp_77*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_87 = 0.5*tmp_69;
      real_t tmp_88 = 0.041666666666666657*(tmp_87*(tmp_12*tmp_84 + tmp_33*tmp_85 + tmp_35*tmp_86) + tmp_87*(tmp_38*tmp_84 + tmp_39*tmp_85 + tmp_40*tmp_86) + tmp_87*(tmp_42*tmp_84 + tmp_43*tmp_85 + tmp_44*tmp_86))*std::abs(tmp_76);
      real_t tmp_89 = tmp_59*tmp_88;
      real_t tmp_90 = 2.3416407864998732;
      real_t tmp_91 = 0.55278640450004235;
      real_t tmp_92 = 0.55278640450004235;
      real_t tmp_93 = tmp_90 + tmp_91 + tmp_92 - 3.0;
      real_t tmp_94 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_95 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_96 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_97 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_98 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_99 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_100 = Blending_DF_Tetrahedron_2_6*tmp_96 - Blending_DF_Tetrahedron_2_6*tmp_99 + Blending_DF_Tetrahedron_2_7*tmp_97 - Blending_DF_Tetrahedron_2_7*tmp_98 + Blending_DF_Tetrahedron_2_8*tmp_94 - Blending_DF_Tetrahedron_2_8*tmp_95;
      real_t tmp_101 = tmp_30/tmp_100;
      real_t tmp_102 = tmp_101*(tmp_94 - tmp_95);
      real_t tmp_103 = tmp_101*(tmp_97 - tmp_98);
      real_t tmp_104 = tmp_101*(tmp_96 - tmp_99);
      real_t tmp_105 = tmp_102*tmp_12 + tmp_103*tmp_33 + tmp_104*tmp_35;
      real_t tmp_106 = tmp_102*tmp_38 + tmp_103*tmp_39 + tmp_104*tmp_40;
      real_t tmp_107 = tmp_102*tmp_42 + tmp_103*tmp_43 + tmp_104*tmp_44;
      real_t tmp_108 = tmp_101*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_109 = tmp_101*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_110 = tmp_101*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_111 = 0.5*tmp_93;
      real_t tmp_112 = 0.041666666666666657*(tmp_111*(tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35) + tmp_111*(tmp_108*tmp_38 + tmp_109*tmp_39 + tmp_110*tmp_40) + tmp_111*(tmp_108*tmp_42 + tmp_109*tmp_43 + tmp_110*tmp_44))*std::abs(tmp_100);
      real_t tmp_113 = tmp_112*tmp_59;
      real_t tmp_114 = 0.55278640450004235;
      real_t tmp_115 = 0.55278640450004235;
      real_t tmp_116 = 0.55278640450004235;
      real_t tmp_117 = tmp_114 + tmp_115 + tmp_116 - 3.0;
      real_t tmp_118 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_119 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_120 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_121 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_122 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_123 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_124 = Blending_DF_Tetrahedron_3_6*tmp_120 - Blending_DF_Tetrahedron_3_6*tmp_123 + Blending_DF_Tetrahedron_3_7*tmp_121 - Blending_DF_Tetrahedron_3_7*tmp_122 + Blending_DF_Tetrahedron_3_8*tmp_118 - Blending_DF_Tetrahedron_3_8*tmp_119;
      real_t tmp_125 = tmp_30/tmp_124;
      real_t tmp_126 = tmp_125*(tmp_118 - tmp_119);
      real_t tmp_127 = tmp_125*(tmp_121 - tmp_122);
      real_t tmp_128 = tmp_125*(tmp_120 - tmp_123);
      real_t tmp_129 = tmp_12*tmp_126 + tmp_127*tmp_33 + tmp_128*tmp_35;
      real_t tmp_130 = tmp_126*tmp_38 + tmp_127*tmp_39 + tmp_128*tmp_40;
      real_t tmp_131 = tmp_126*tmp_42 + tmp_127*tmp_43 + tmp_128*tmp_44;
      real_t tmp_132 = tmp_125*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_133 = tmp_125*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_134 = tmp_125*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_135 = 0.5*tmp_117;
      real_t tmp_136 = 0.041666666666666657*(tmp_135*(tmp_12*tmp_132 + tmp_133*tmp_33 + tmp_134*tmp_35) + tmp_135*(tmp_132*tmp_38 + tmp_133*tmp_39 + tmp_134*tmp_40) + tmp_135*(tmp_132*tmp_42 + tmp_133*tmp_43 + tmp_134*tmp_44))*std::abs(tmp_124);
      real_t tmp_137 = tmp_136*tmp_59;
      real_t tmp_138 = 2.0*tmp_58;
      real_t tmp_139 = tmp_138*tmp_64;
      real_t tmp_140 = tmp_138*tmp_88;
      real_t tmp_141 = tmp_112*tmp_138;
      real_t tmp_142 = tmp_136*tmp_138;
      real_t tmp_143 = tmp_1*tmp_37;
      real_t tmp_144 = tmp_2*tmp_41;
      real_t tmp_145 = tmp_67*tmp_81;
      real_t tmp_146 = tmp_68*tmp_82;
      real_t tmp_147 = tmp_105*tmp_91;
      real_t tmp_148 = tmp_106*tmp_92;
      real_t tmp_149 = tmp_115*tmp_129;
      real_t tmp_150 = tmp_116*tmp_130;
      real_t tmp_151 = tmp_0*tmp_37;
      real_t tmp_152 = tmp_2*tmp_45;
      real_t tmp_153 = tmp_66*tmp_81;
      real_t tmp_154 = tmp_68*tmp_83;
      real_t tmp_155 = tmp_105*tmp_90;
      real_t tmp_156 = tmp_107*tmp_92;
      real_t tmp_157 = tmp_114*tmp_129;
      real_t tmp_158 = tmp_116*tmp_131;
      real_t tmp_159 = tmp_0*tmp_41;
      real_t tmp_160 = tmp_1*tmp_45;
      real_t tmp_161 = tmp_66*tmp_82;
      real_t tmp_162 = tmp_67*tmp_83;
      real_t tmp_163 = tmp_106*tmp_90;
      real_t tmp_164 = tmp_107*tmp_91;
      real_t tmp_165 = tmp_114*tmp_130;
      real_t tmp_166 = tmp_115*tmp_131;
      real_t tmp_167 = -tmp_1;
      real_t tmp_168 = 4.0 - tmp_0;
      real_t tmp_169 = -tmp_67;
      real_t tmp_170 = 4.0 - tmp_66;
      real_t tmp_171 = -tmp_91;
      real_t tmp_172 = 4.0 - tmp_90;
      real_t tmp_173 = -tmp_115;
      real_t tmp_174 = 4.0 - tmp_114;
      real_t tmp_175 = -tmp_2;
      real_t tmp_176 = -tmp_68;
      real_t tmp_177 = -tmp_92;
      real_t tmp_178 = -tmp_116;
      real_t a_0_0 = tmp_113*(tmp_105*tmp_93 + tmp_106*tmp_93 + tmp_107*tmp_93) + tmp_137*(tmp_117*tmp_129 + tmp_117*tmp_130 + tmp_117*tmp_131) + tmp_65*(tmp_3*tmp_37 + tmp_3*tmp_41 + tmp_3*tmp_45) + tmp_89*(tmp_69*tmp_81 + tmp_69*tmp_82 + tmp_69*tmp_83);
      real_t a_0_1 = tmp_107*tmp_141*(tmp_90 - 1.0) + tmp_131*tmp_142*(tmp_114 - 1.0) + tmp_139*tmp_45*(tmp_0 - 1.0) + tmp_140*tmp_83*(tmp_66 - 1.0);
      real_t a_0_2 = tmp_106*tmp_141*(tmp_91 - 1.0) + tmp_130*tmp_142*(tmp_115 - 1.0) + tmp_139*tmp_41*(tmp_1 - 1.0) + tmp_140*tmp_82*(tmp_67 - 1.0);
      real_t a_0_3 = tmp_105*tmp_141*(tmp_92 - 1.0) + tmp_129*tmp_142*(tmp_116 - 1.0) + tmp_139*tmp_37*(tmp_2 - 1.0) + tmp_140*tmp_81*(tmp_68 - 1.0);
      real_t a_0_4 = tmp_113*(tmp_147 + tmp_148) + tmp_137*(tmp_149 + tmp_150) + tmp_65*(tmp_143 + tmp_144) + tmp_89*(tmp_145 + tmp_146);
      real_t a_0_5 = tmp_113*(tmp_155 + tmp_156) + tmp_137*(tmp_157 + tmp_158) + tmp_65*(tmp_151 + tmp_152) + tmp_89*(tmp_153 + tmp_154);
      real_t a_0_6 = tmp_113*(tmp_163 + tmp_164) + tmp_137*(tmp_165 + tmp_166) + tmp_65*(tmp_159 + tmp_160) + tmp_89*(tmp_161 + tmp_162);
      real_t a_0_7 = tmp_113*(tmp_105*(tmp_171 + tmp_172 - 1.1055728090000847) - tmp_148 - tmp_156) + tmp_137*(tmp_129*(tmp_173 + tmp_174 - 1.1055728090000847) - tmp_150 - tmp_158) + tmp_65*(-tmp_144 - tmp_152 + tmp_37*(tmp_167 + tmp_168 - 4.6832815729997463)) + tmp_89*(-tmp_146 - tmp_154 + tmp_81*(tmp_169 + tmp_170 - 1.1055728090000847));
      real_t a_0_8 = tmp_113*(tmp_106*(tmp_172 + tmp_177 - 1.1055728090000847) - tmp_147 - tmp_164) + tmp_137*(tmp_130*(tmp_174 + tmp_178 - 1.1055728090000847) - tmp_149 - tmp_166) + tmp_65*(-tmp_143 - tmp_160 + tmp_41*(tmp_168 + tmp_175 - 1.1055728090000847)) + tmp_89*(-tmp_145 - tmp_162 + tmp_82*(tmp_170 + tmp_176 - 4.6832815729997463));
      real_t a_0_9 = tmp_113*(tmp_107*(tmp_171 + tmp_177 - 0.68328157299974634) - tmp_155 - tmp_163) + tmp_137*(tmp_131*(tmp_173 + tmp_178 + 2.8944271909999153) - tmp_157 - tmp_165) + tmp_65*(-tmp_151 - tmp_159 + tmp_45*(tmp_167 + tmp_175 + 2.8944271909999153)) + tmp_89*(-tmp_153 - tmp_161 + tmp_83*(tmp_169 + tmp_176 + 2.8944271909999153));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_1_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

   void p2_epsiloncc_2_2_blending_q2::integrateAll( const std::array< Point3D, 3 >& , Matrix< real_t, 6, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_2_blending_q2::integrateRow0( const std::array< Point3D, 3 >& , Matrix< real_t, 1, 6 >&  ) const
   {
      
   }

   void p2_epsiloncc_2_2_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_14 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_15 - Blending_DF_Tetrahedron_0_7*tmp_16 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_17;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = tmp_38 + tmp_43 + tmp_48;
      real_t tmp_50 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_51 = 2*tmp_50;
      real_t tmp_52 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_54 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_55 = tmp_12*tmp_52 + tmp_33*tmp_53 + tmp_35*tmp_54;
      real_t tmp_56 = tmp_3*tmp_55;
      real_t tmp_57 = tmp_39*tmp_52 + tmp_40*tmp_53 + tmp_41*tmp_54;
      real_t tmp_58 = tmp_3*tmp_57;
      real_t tmp_59 = tmp_44*tmp_52 + tmp_45*tmp_53 + tmp_46*tmp_54;
      real_t tmp_60 = tmp_3*tmp_59;
      real_t tmp_61 = tmp_56 + tmp_58 + tmp_60;
      real_t tmp_62 = 0.5*tmp_56 + 0.5*tmp_58 + 0.5*tmp_60;
      real_t tmp_63 = 2*tmp_62;
      real_t tmp_64 = tmp_31*(tmp_13 - tmp_17);
      real_t tmp_65 = tmp_31*(tmp_15 - tmp_16);
      real_t tmp_66 = tmp_31*(tmp_14 - tmp_18);
      real_t tmp_67 = tmp_12*tmp_64 + tmp_33*tmp_65 + tmp_35*tmp_66;
      real_t tmp_68 = 1.0*tmp_3;
      real_t tmp_69 = tmp_39*tmp_64 + tmp_40*tmp_65 + tmp_41*tmp_66;
      real_t tmp_70 = tmp_44*tmp_64 + tmp_45*tmp_65 + tmp_46*tmp_66;
      real_t tmp_71 = tmp_67*tmp_68 + tmp_68*tmp_69 + tmp_68*tmp_70;
      real_t tmp_72 = 2.0*tmp_3;
      real_t tmp_73 = tmp_67*tmp_72 + tmp_69*tmp_72 + tmp_70*tmp_72;
      real_t tmp_74 = p_affine_0_0*p_affine_1_1;
      real_t tmp_75 = p_affine_0_0*p_affine_1_2;
      real_t tmp_76 = p_affine_2_1*p_affine_3_2;
      real_t tmp_77 = p_affine_0_1*p_affine_1_0;
      real_t tmp_78 = p_affine_0_1*p_affine_1_2;
      real_t tmp_79 = p_affine_2_2*p_affine_3_0;
      real_t tmp_80 = p_affine_0_2*p_affine_1_0;
      real_t tmp_81 = p_affine_0_2*p_affine_1_1;
      real_t tmp_82 = p_affine_2_0*p_affine_3_1;
      real_t tmp_83 = p_affine_2_2*p_affine_3_1;
      real_t tmp_84 = p_affine_2_0*p_affine_3_2;
      real_t tmp_85 = p_affine_2_1*p_affine_3_0;
      real_t tmp_86 = std::abs(p_affine_0_0*tmp_76 - p_affine_0_0*tmp_83 + p_affine_0_1*tmp_79 - p_affine_0_1*tmp_84 + p_affine_0_2*tmp_82 - p_affine_0_2*tmp_85 - p_affine_1_0*tmp_76 + p_affine_1_0*tmp_83 - p_affine_1_1*tmp_79 + p_affine_1_1*tmp_84 - p_affine_1_2*tmp_82 + p_affine_1_2*tmp_85 + p_affine_2_0*tmp_78 - p_affine_2_0*tmp_81 - p_affine_2_1*tmp_75 + p_affine_2_1*tmp_80 + p_affine_2_2*tmp_74 - p_affine_2_2*tmp_77 - p_affine_3_0*tmp_78 + p_affine_3_0*tmp_81 + p_affine_3_1*tmp_75 - p_affine_3_1*tmp_80 - p_affine_3_2*tmp_74 + p_affine_3_2*tmp_77);
      real_t tmp_87 = 0.041666666666666657*tmp_86*std::abs(tmp_19);
      real_t tmp_88 = 0.55278640450004235;
      real_t tmp_89 = 2.3416407864998732;
      real_t tmp_90 = 0.55278640450004235;
      real_t tmp_91 = tmp_88 + tmp_89 + tmp_90 - 3.0;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_96 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_97 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_98 = Blending_DF_Tetrahedron_1_6*tmp_93 - Blending_DF_Tetrahedron_1_6*tmp_97 + Blending_DF_Tetrahedron_1_7*tmp_94 - Blending_DF_Tetrahedron_1_7*tmp_95 + Blending_DF_Tetrahedron_1_8*tmp_92 - Blending_DF_Tetrahedron_1_8*tmp_96;
      real_t tmp_99 = tmp_30/tmp_98;
      real_t tmp_100 = tmp_99*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_101 = tmp_99*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_102 = tmp_99*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_103 = tmp_100*tmp_12 + tmp_101*tmp_33 + tmp_102*tmp_35;
      real_t tmp_104 = tmp_103*tmp_91;
      real_t tmp_105 = tmp_100*tmp_39 + tmp_101*tmp_40 + tmp_102*tmp_41;
      real_t tmp_106 = tmp_105*tmp_91;
      real_t tmp_107 = tmp_100*tmp_44 + tmp_101*tmp_45 + tmp_102*tmp_46;
      real_t tmp_108 = tmp_107*tmp_91;
      real_t tmp_109 = tmp_104 + tmp_106 + tmp_108;
      real_t tmp_110 = 0.5*tmp_104 + 0.5*tmp_106 + 0.5*tmp_108;
      real_t tmp_111 = 2*tmp_110;
      real_t tmp_112 = tmp_99*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_113 = tmp_99*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_114 = tmp_99*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_115 = tmp_112*tmp_12 + tmp_113*tmp_33 + tmp_114*tmp_35;
      real_t tmp_116 = tmp_115*tmp_91;
      real_t tmp_117 = tmp_112*tmp_39 + tmp_113*tmp_40 + tmp_114*tmp_41;
      real_t tmp_118 = tmp_117*tmp_91;
      real_t tmp_119 = tmp_112*tmp_44 + tmp_113*tmp_45 + tmp_114*tmp_46;
      real_t tmp_120 = tmp_119*tmp_91;
      real_t tmp_121 = tmp_116 + tmp_118 + tmp_120;
      real_t tmp_122 = 0.5*tmp_116 + 0.5*tmp_118 + 0.5*tmp_120;
      real_t tmp_123 = 2*tmp_122;
      real_t tmp_124 = tmp_99*(tmp_92 - tmp_96);
      real_t tmp_125 = tmp_99*(tmp_94 - tmp_95);
      real_t tmp_126 = tmp_99*(tmp_93 - tmp_97);
      real_t tmp_127 = tmp_12*tmp_124 + tmp_125*tmp_33 + tmp_126*tmp_35;
      real_t tmp_128 = 1.0*tmp_91;
      real_t tmp_129 = tmp_124*tmp_39 + tmp_125*tmp_40 + tmp_126*tmp_41;
      real_t tmp_130 = tmp_124*tmp_44 + tmp_125*tmp_45 + tmp_126*tmp_46;
      real_t tmp_131 = tmp_127*tmp_128 + tmp_128*tmp_129 + tmp_128*tmp_130;
      real_t tmp_132 = 2.0*tmp_91;
      real_t tmp_133 = tmp_127*tmp_132 + tmp_129*tmp_132 + tmp_130*tmp_132;
      real_t tmp_134 = 0.041666666666666657*tmp_86*std::abs(tmp_98);
      real_t tmp_135 = 2.3416407864998732;
      real_t tmp_136 = 0.55278640450004235;
      real_t tmp_137 = 0.55278640450004235;
      real_t tmp_138 = tmp_135 + tmp_136 + tmp_137 - 3.0;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_140 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_141 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_142 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_143 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_144 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_145 = Blending_DF_Tetrahedron_2_6*tmp_140 - Blending_DF_Tetrahedron_2_6*tmp_144 + Blending_DF_Tetrahedron_2_7*tmp_141 - Blending_DF_Tetrahedron_2_7*tmp_142 + Blending_DF_Tetrahedron_2_8*tmp_139 - Blending_DF_Tetrahedron_2_8*tmp_143;
      real_t tmp_146 = tmp_30/tmp_145;
      real_t tmp_147 = tmp_146*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_148 = tmp_146*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_149 = tmp_146*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_150 = tmp_12*tmp_147 + tmp_148*tmp_33 + tmp_149*tmp_35;
      real_t tmp_151 = tmp_138*tmp_150;
      real_t tmp_152 = tmp_147*tmp_39 + tmp_148*tmp_40 + tmp_149*tmp_41;
      real_t tmp_153 = tmp_138*tmp_152;
      real_t tmp_154 = tmp_147*tmp_44 + tmp_148*tmp_45 + tmp_149*tmp_46;
      real_t tmp_155 = tmp_138*tmp_154;
      real_t tmp_156 = tmp_151 + tmp_153 + tmp_155;
      real_t tmp_157 = 0.5*tmp_151 + 0.5*tmp_153 + 0.5*tmp_155;
      real_t tmp_158 = 2*tmp_157;
      real_t tmp_159 = tmp_146*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_160 = tmp_146*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_161 = tmp_146*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_162 = tmp_12*tmp_159 + tmp_160*tmp_33 + tmp_161*tmp_35;
      real_t tmp_163 = tmp_138*tmp_162;
      real_t tmp_164 = tmp_159*tmp_39 + tmp_160*tmp_40 + tmp_161*tmp_41;
      real_t tmp_165 = tmp_138*tmp_164;
      real_t tmp_166 = tmp_159*tmp_44 + tmp_160*tmp_45 + tmp_161*tmp_46;
      real_t tmp_167 = tmp_138*tmp_166;
      real_t tmp_168 = tmp_163 + tmp_165 + tmp_167;
      real_t tmp_169 = 0.5*tmp_163 + 0.5*tmp_165 + 0.5*tmp_167;
      real_t tmp_170 = 2*tmp_169;
      real_t tmp_171 = tmp_146*(tmp_139 - tmp_143);
      real_t tmp_172 = tmp_146*(tmp_141 - tmp_142);
      real_t tmp_173 = tmp_146*(tmp_140 - tmp_144);
      real_t tmp_174 = tmp_12*tmp_171 + tmp_172*tmp_33 + tmp_173*tmp_35;
      real_t tmp_175 = 1.0*tmp_138;
      real_t tmp_176 = tmp_171*tmp_39 + tmp_172*tmp_40 + tmp_173*tmp_41;
      real_t tmp_177 = tmp_171*tmp_44 + tmp_172*tmp_45 + tmp_173*tmp_46;
      real_t tmp_178 = tmp_174*tmp_175 + tmp_175*tmp_176 + tmp_175*tmp_177;
      real_t tmp_179 = 2.0*tmp_138;
      real_t tmp_180 = tmp_174*tmp_179 + tmp_176*tmp_179 + tmp_177*tmp_179;
      real_t tmp_181 = 0.041666666666666657*tmp_86*std::abs(tmp_145);
      real_t tmp_182 = 0.55278640450004235;
      real_t tmp_183 = 0.55278640450004235;
      real_t tmp_184 = 0.55278640450004235;
      real_t tmp_185 = tmp_182 + tmp_183 + tmp_184 - 3.0;
      real_t tmp_186 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_187 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_188 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_189 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_190 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_191 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_192 = Blending_DF_Tetrahedron_3_6*tmp_187 - Blending_DF_Tetrahedron_3_6*tmp_191 + Blending_DF_Tetrahedron_3_7*tmp_188 - Blending_DF_Tetrahedron_3_7*tmp_189 + Blending_DF_Tetrahedron_3_8*tmp_186 - Blending_DF_Tetrahedron_3_8*tmp_190;
      real_t tmp_193 = tmp_30/tmp_192;
      real_t tmp_194 = tmp_193*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_195 = tmp_193*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_196 = tmp_193*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_197 = tmp_12*tmp_194 + tmp_195*tmp_33 + tmp_196*tmp_35;
      real_t tmp_198 = tmp_185*tmp_197;
      real_t tmp_199 = tmp_194*tmp_39 + tmp_195*tmp_40 + tmp_196*tmp_41;
      real_t tmp_200 = tmp_185*tmp_199;
      real_t tmp_201 = tmp_194*tmp_44 + tmp_195*tmp_45 + tmp_196*tmp_46;
      real_t tmp_202 = tmp_185*tmp_201;
      real_t tmp_203 = tmp_198 + tmp_200 + tmp_202;
      real_t tmp_204 = 0.5*tmp_198 + 0.5*tmp_200 + 0.5*tmp_202;
      real_t tmp_205 = 2*tmp_204;
      real_t tmp_206 = tmp_193*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_207 = tmp_193*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_208 = tmp_193*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_209 = tmp_12*tmp_206 + tmp_207*tmp_33 + tmp_208*tmp_35;
      real_t tmp_210 = tmp_185*tmp_209;
      real_t tmp_211 = tmp_206*tmp_39 + tmp_207*tmp_40 + tmp_208*tmp_41;
      real_t tmp_212 = tmp_185*tmp_211;
      real_t tmp_213 = tmp_206*tmp_44 + tmp_207*tmp_45 + tmp_208*tmp_46;
      real_t tmp_214 = tmp_185*tmp_213;
      real_t tmp_215 = tmp_210 + tmp_212 + tmp_214;
      real_t tmp_216 = 0.5*tmp_210 + 0.5*tmp_212 + 0.5*tmp_214;
      real_t tmp_217 = 2*tmp_216;
      real_t tmp_218 = tmp_193*(tmp_186 - tmp_190);
      real_t tmp_219 = tmp_193*(tmp_188 - tmp_189);
      real_t tmp_220 = tmp_193*(tmp_187 - tmp_191);
      real_t tmp_221 = tmp_12*tmp_218 + tmp_219*tmp_33 + tmp_220*tmp_35;
      real_t tmp_222 = 1.0*tmp_185;
      real_t tmp_223 = tmp_218*tmp_39 + tmp_219*tmp_40 + tmp_220*tmp_41;
      real_t tmp_224 = tmp_218*tmp_44 + tmp_219*tmp_45 + tmp_220*tmp_46;
      real_t tmp_225 = tmp_221*tmp_222 + tmp_222*tmp_223 + tmp_222*tmp_224;
      real_t tmp_226 = 2.0*tmp_185;
      real_t tmp_227 = tmp_221*tmp_226 + tmp_223*tmp_226 + tmp_224*tmp_226;
      real_t tmp_228 = 0.041666666666666657*tmp_86*std::abs(tmp_192);
      real_t tmp_229 = tmp_0 - 1.0;
      real_t tmp_230 = 2.0*tmp_229;
      real_t tmp_231 = tmp_230*tmp_70;
      real_t tmp_232 = tmp_230*tmp_47;
      real_t tmp_233 = tmp_230*tmp_59;
      real_t tmp_234 = tmp_88 - 1.0;
      real_t tmp_235 = 2.0*tmp_234;
      real_t tmp_236 = tmp_130*tmp_235;
      real_t tmp_237 = tmp_107*tmp_235;
      real_t tmp_238 = tmp_119*tmp_235;
      real_t tmp_239 = tmp_135 - 1.0;
      real_t tmp_240 = 2.0*tmp_239;
      real_t tmp_241 = tmp_177*tmp_240;
      real_t tmp_242 = tmp_154*tmp_240;
      real_t tmp_243 = tmp_166*tmp_240;
      real_t tmp_244 = tmp_182 - 1.0;
      real_t tmp_245 = 2.0*tmp_244;
      real_t tmp_246 = tmp_224*tmp_245;
      real_t tmp_247 = tmp_201*tmp_245;
      real_t tmp_248 = tmp_213*tmp_245;
      real_t tmp_249 = tmp_1 - 1.0;
      real_t tmp_250 = 2.0*tmp_249;
      real_t tmp_251 = tmp_250*tmp_69;
      real_t tmp_252 = tmp_250*tmp_42;
      real_t tmp_253 = tmp_250*tmp_57;
      real_t tmp_254 = tmp_89 - 1.0;
      real_t tmp_255 = 2.0*tmp_254;
      real_t tmp_256 = tmp_129*tmp_255;
      real_t tmp_257 = tmp_105*tmp_255;
      real_t tmp_258 = tmp_117*tmp_255;
      real_t tmp_259 = tmp_136 - 1.0;
      real_t tmp_260 = 2.0*tmp_259;
      real_t tmp_261 = tmp_176*tmp_260;
      real_t tmp_262 = tmp_152*tmp_260;
      real_t tmp_263 = tmp_164*tmp_260;
      real_t tmp_264 = tmp_183 - 1.0;
      real_t tmp_265 = 2.0*tmp_264;
      real_t tmp_266 = tmp_223*tmp_265;
      real_t tmp_267 = tmp_199*tmp_265;
      real_t tmp_268 = tmp_211*tmp_265;
      real_t tmp_269 = tmp_2 - 1.0;
      real_t tmp_270 = 2.0*tmp_269;
      real_t tmp_271 = tmp_270*tmp_67;
      real_t tmp_272 = tmp_270*tmp_37;
      real_t tmp_273 = tmp_270*tmp_55;
      real_t tmp_274 = tmp_90 - 1.0;
      real_t tmp_275 = 2.0*tmp_274;
      real_t tmp_276 = tmp_127*tmp_275;
      real_t tmp_277 = tmp_103*tmp_275;
      real_t tmp_278 = tmp_115*tmp_275;
      real_t tmp_279 = tmp_137 - 1.0;
      real_t tmp_280 = 2.0*tmp_279;
      real_t tmp_281 = tmp_174*tmp_280;
      real_t tmp_282 = tmp_150*tmp_280;
      real_t tmp_283 = tmp_162*tmp_280;
      real_t tmp_284 = tmp_184 - 1.0;
      real_t tmp_285 = 2.0*tmp_284;
      real_t tmp_286 = tmp_221*tmp_285;
      real_t tmp_287 = tmp_197*tmp_285;
      real_t tmp_288 = tmp_209*tmp_285;
      real_t tmp_289 = 1.1055728090000847;
      real_t tmp_290 = tmp_289*tmp_67;
      real_t tmp_291 = 4.6832815729997463;
      real_t tmp_292 = tmp_291*tmp_69;
      real_t tmp_293 = tmp_290 + tmp_292;
      real_t tmp_294 = tmp_1*tmp_37;
      real_t tmp_295 = tmp_2*tmp_42;
      real_t tmp_296 = tmp_294 + tmp_295;
      real_t tmp_297 = tmp_1*tmp_55;
      real_t tmp_298 = tmp_2*tmp_57;
      real_t tmp_299 = tmp_297 + tmp_298;
      real_t tmp_300 = 4.6832815729997463;
      real_t tmp_301 = tmp_127*tmp_300;
      real_t tmp_302 = 1.1055728090000847;
      real_t tmp_303 = tmp_129*tmp_302;
      real_t tmp_304 = tmp_301 + tmp_303;
      real_t tmp_305 = tmp_103*tmp_89;
      real_t tmp_306 = tmp_105*tmp_90;
      real_t tmp_307 = tmp_305 + tmp_306;
      real_t tmp_308 = tmp_115*tmp_89;
      real_t tmp_309 = tmp_117*tmp_90;
      real_t tmp_310 = tmp_308 + tmp_309;
      real_t tmp_311 = 1.1055728090000847;
      real_t tmp_312 = tmp_174*tmp_311;
      real_t tmp_313 = 1.1055728090000847;
      real_t tmp_314 = tmp_176*tmp_313;
      real_t tmp_315 = tmp_312 + tmp_314;
      real_t tmp_316 = tmp_136*tmp_150;
      real_t tmp_317 = tmp_137*tmp_152;
      real_t tmp_318 = tmp_316 + tmp_317;
      real_t tmp_319 = tmp_136*tmp_162;
      real_t tmp_320 = tmp_137*tmp_164;
      real_t tmp_321 = tmp_319 + tmp_320;
      real_t tmp_322 = 1.1055728090000847;
      real_t tmp_323 = tmp_221*tmp_322;
      real_t tmp_324 = 1.1055728090000847;
      real_t tmp_325 = tmp_223*tmp_324;
      real_t tmp_326 = tmp_323 + tmp_325;
      real_t tmp_327 = tmp_183*tmp_197;
      real_t tmp_328 = tmp_184*tmp_199;
      real_t tmp_329 = tmp_327 + tmp_328;
      real_t tmp_330 = tmp_183*tmp_209;
      real_t tmp_331 = tmp_184*tmp_211;
      real_t tmp_332 = tmp_330 + tmp_331;
      real_t tmp_333 = 1.1055728090000847;
      real_t tmp_334 = tmp_333*tmp_67;
      real_t tmp_335 = tmp_291*tmp_70;
      real_t tmp_336 = tmp_334 + tmp_335;
      real_t tmp_337 = tmp_0*tmp_37;
      real_t tmp_338 = tmp_2*tmp_47;
      real_t tmp_339 = tmp_337 + tmp_338;
      real_t tmp_340 = tmp_0*tmp_55;
      real_t tmp_341 = tmp_2*tmp_59;
      real_t tmp_342 = tmp_340 + tmp_341;
      real_t tmp_343 = 1.1055728090000847;
      real_t tmp_344 = tmp_127*tmp_343;
      real_t tmp_345 = tmp_130*tmp_302;
      real_t tmp_346 = tmp_344 + tmp_345;
      real_t tmp_347 = tmp_103*tmp_88;
      real_t tmp_348 = tmp_107*tmp_90;
      real_t tmp_349 = tmp_347 + tmp_348;
      real_t tmp_350 = tmp_115*tmp_88;
      real_t tmp_351 = tmp_119*tmp_90;
      real_t tmp_352 = tmp_350 + tmp_351;
      real_t tmp_353 = 4.6832815729997463;
      real_t tmp_354 = tmp_174*tmp_353;
      real_t tmp_355 = tmp_177*tmp_313;
      real_t tmp_356 = tmp_354 + tmp_355;
      real_t tmp_357 = tmp_135*tmp_150;
      real_t tmp_358 = tmp_137*tmp_154;
      real_t tmp_359 = tmp_357 + tmp_358;
      real_t tmp_360 = tmp_135*tmp_162;
      real_t tmp_361 = tmp_137*tmp_166;
      real_t tmp_362 = tmp_360 + tmp_361;
      real_t tmp_363 = 1.1055728090000847;
      real_t tmp_364 = tmp_221*tmp_363;
      real_t tmp_365 = tmp_224*tmp_324;
      real_t tmp_366 = tmp_364 + tmp_365;
      real_t tmp_367 = tmp_182*tmp_197;
      real_t tmp_368 = tmp_184*tmp_201;
      real_t tmp_369 = tmp_367 + tmp_368;
      real_t tmp_370 = tmp_182*tmp_209;
      real_t tmp_371 = tmp_184*tmp_213;
      real_t tmp_372 = tmp_370 + tmp_371;
      real_t tmp_373 = tmp_333*tmp_69;
      real_t tmp_374 = tmp_289*tmp_70;
      real_t tmp_375 = tmp_373 + tmp_374;
      real_t tmp_376 = tmp_0*tmp_42;
      real_t tmp_377 = tmp_1*tmp_47;
      real_t tmp_378 = tmp_376 + tmp_377;
      real_t tmp_379 = tmp_0*tmp_57;
      real_t tmp_380 = tmp_1*tmp_59;
      real_t tmp_381 = tmp_379 + tmp_380;
      real_t tmp_382 = tmp_129*tmp_343;
      real_t tmp_383 = tmp_130*tmp_300;
      real_t tmp_384 = tmp_382 + tmp_383;
      real_t tmp_385 = tmp_105*tmp_88;
      real_t tmp_386 = tmp_107*tmp_89;
      real_t tmp_387 = tmp_385 + tmp_386;
      real_t tmp_388 = tmp_117*tmp_88;
      real_t tmp_389 = tmp_119*tmp_89;
      real_t tmp_390 = tmp_388 + tmp_389;
      real_t tmp_391 = tmp_176*tmp_353;
      real_t tmp_392 = tmp_177*tmp_311;
      real_t tmp_393 = tmp_391 + tmp_392;
      real_t tmp_394 = tmp_135*tmp_152;
      real_t tmp_395 = tmp_136*tmp_154;
      real_t tmp_396 = tmp_394 + tmp_395;
      real_t tmp_397 = tmp_135*tmp_164;
      real_t tmp_398 = tmp_136*tmp_166;
      real_t tmp_399 = tmp_397 + tmp_398;
      real_t tmp_400 = tmp_223*tmp_363;
      real_t tmp_401 = tmp_224*tmp_322;
      real_t tmp_402 = tmp_400 + tmp_401;
      real_t tmp_403 = tmp_182*tmp_199;
      real_t tmp_404 = tmp_183*tmp_201;
      real_t tmp_405 = tmp_403 + tmp_404;
      real_t tmp_406 = tmp_182*tmp_211;
      real_t tmp_407 = tmp_183*tmp_213;
      real_t tmp_408 = tmp_406 + tmp_407;
      real_t tmp_409 = -tmp_1;
      real_t tmp_410 = 4.0 - tmp_0;
      real_t tmp_411 = -tmp_291 + tmp_409 + tmp_410;
      real_t tmp_412 = tmp_411*tmp_67;
      real_t tmp_413 = -tmp_292 - tmp_335 + 2.0*tmp_412;
      real_t tmp_414 = tmp_37*tmp_411;
      real_t tmp_415 = -tmp_295 - tmp_338 + tmp_414;
      real_t tmp_416 = tmp_411*tmp_55;
      real_t tmp_417 = -tmp_298 - tmp_341 + tmp_416;
      real_t tmp_418 = -tmp_89;
      real_t tmp_419 = 4.0 - tmp_88;
      real_t tmp_420 = -tmp_302 + tmp_418 + tmp_419;
      real_t tmp_421 = tmp_127*tmp_420;
      real_t tmp_422 = -tmp_303 - tmp_345 + 2.0*tmp_421;
      real_t tmp_423 = tmp_103*tmp_420;
      real_t tmp_424 = -tmp_306 - tmp_348 + tmp_423;
      real_t tmp_425 = tmp_115*tmp_420;
      real_t tmp_426 = -tmp_309 - tmp_351 + tmp_425;
      real_t tmp_427 = -tmp_136;
      real_t tmp_428 = 4.0 - tmp_135;
      real_t tmp_429 = -tmp_313 + tmp_427 + tmp_428;
      real_t tmp_430 = tmp_174*tmp_429;
      real_t tmp_431 = -tmp_314 - tmp_355 + 2.0*tmp_430;
      real_t tmp_432 = tmp_150*tmp_429;
      real_t tmp_433 = -tmp_317 - tmp_358 + tmp_432;
      real_t tmp_434 = tmp_162*tmp_429;
      real_t tmp_435 = -tmp_320 - tmp_361 + tmp_434;
      real_t tmp_436 = -tmp_183;
      real_t tmp_437 = 4.0 - tmp_182;
      real_t tmp_438 = -tmp_324 + tmp_436 + tmp_437;
      real_t tmp_439 = tmp_221*tmp_438;
      real_t tmp_440 = -tmp_325 - tmp_365 + 2.0*tmp_439;
      real_t tmp_441 = tmp_197*tmp_438;
      real_t tmp_442 = -tmp_328 - tmp_368 + tmp_441;
      real_t tmp_443 = tmp_209*tmp_438;
      real_t tmp_444 = -tmp_331 - tmp_371 + tmp_443;
      real_t tmp_445 = -tmp_2;
      real_t tmp_446 = -tmp_289 + tmp_410 + tmp_445;
      real_t tmp_447 = tmp_446*tmp_69;
      real_t tmp_448 = -tmp_290 - tmp_374 + 2.0*tmp_447;
      real_t tmp_449 = tmp_42*tmp_446;
      real_t tmp_450 = -tmp_294 - tmp_377 + tmp_449;
      real_t tmp_451 = tmp_446*tmp_57;
      real_t tmp_452 = -tmp_297 - tmp_380 + tmp_451;
      real_t tmp_453 = -tmp_90;
      real_t tmp_454 = -tmp_300 + tmp_419 + tmp_453;
      real_t tmp_455 = tmp_129*tmp_454;
      real_t tmp_456 = -tmp_301 - tmp_383 + 2.0*tmp_455;
      real_t tmp_457 = tmp_105*tmp_454;
      real_t tmp_458 = -tmp_305 - tmp_386 + tmp_457;
      real_t tmp_459 = tmp_117*tmp_454;
      real_t tmp_460 = -tmp_308 - tmp_389 + tmp_459;
      real_t tmp_461 = -tmp_137;
      real_t tmp_462 = -tmp_311 + tmp_428 + tmp_461;
      real_t tmp_463 = tmp_176*tmp_462;
      real_t tmp_464 = -tmp_312 - tmp_392 + 2.0*tmp_463;
      real_t tmp_465 = tmp_152*tmp_462;
      real_t tmp_466 = -tmp_316 - tmp_395 + tmp_465;
      real_t tmp_467 = tmp_164*tmp_462;
      real_t tmp_468 = -tmp_319 - tmp_398 + tmp_467;
      real_t tmp_469 = -tmp_184;
      real_t tmp_470 = -tmp_322 + tmp_437 + tmp_469;
      real_t tmp_471 = tmp_223*tmp_470;
      real_t tmp_472 = -tmp_323 - tmp_401 + 2.0*tmp_471;
      real_t tmp_473 = tmp_199*tmp_470;
      real_t tmp_474 = -tmp_327 - tmp_404 + tmp_473;
      real_t tmp_475 = tmp_211*tmp_470;
      real_t tmp_476 = -tmp_330 - tmp_407 + tmp_475;
      real_t tmp_477 = -tmp_333 + tmp_409 + tmp_445 + 4.0;
      real_t tmp_478 = tmp_477*tmp_70;
      real_t tmp_479 = -tmp_334 - tmp_373 + 2.0*tmp_478;
      real_t tmp_480 = tmp_47*tmp_477;
      real_t tmp_481 = -tmp_337 - tmp_376 + tmp_480;
      real_t tmp_482 = tmp_477*tmp_59;
      real_t tmp_483 = -tmp_340 - tmp_379 + tmp_482;
      real_t tmp_484 = -tmp_343 + tmp_418 + tmp_453 + 4.0;
      real_t tmp_485 = tmp_130*tmp_484;
      real_t tmp_486 = -tmp_344 - tmp_382 + 2.0*tmp_485;
      real_t tmp_487 = tmp_107*tmp_484;
      real_t tmp_488 = -tmp_347 - tmp_385 + tmp_487;
      real_t tmp_489 = tmp_119*tmp_484;
      real_t tmp_490 = -tmp_350 - tmp_388 + tmp_489;
      real_t tmp_491 = -tmp_353 + tmp_427 + tmp_461 + 4.0;
      real_t tmp_492 = tmp_177*tmp_491;
      real_t tmp_493 = -tmp_354 - tmp_391 + 2.0*tmp_492;
      real_t tmp_494 = tmp_154*tmp_491;
      real_t tmp_495 = -tmp_357 - tmp_394 + tmp_494;
      real_t tmp_496 = tmp_166*tmp_491;
      real_t tmp_497 = -tmp_360 - tmp_397 + tmp_496;
      real_t tmp_498 = -tmp_363 + tmp_436 + tmp_469 + 4.0;
      real_t tmp_499 = tmp_224*tmp_498;
      real_t tmp_500 = -tmp_364 - tmp_400 + 2.0*tmp_499;
      real_t tmp_501 = tmp_201*tmp_498;
      real_t tmp_502 = -tmp_367 - tmp_403 + tmp_501;
      real_t tmp_503 = tmp_213*tmp_498;
      real_t tmp_504 = -tmp_370 - tmp_406 + tmp_503;
      real_t tmp_505 = 1.0*tmp_229;
      real_t tmp_506 = tmp_47*tmp_505;
      real_t tmp_507 = tmp_505*tmp_59;
      real_t tmp_508 = tmp_505*tmp_70;
      real_t tmp_509 = 1.0*tmp_234;
      real_t tmp_510 = tmp_107*tmp_509;
      real_t tmp_511 = tmp_119*tmp_509;
      real_t tmp_512 = tmp_130*tmp_509;
      real_t tmp_513 = 1.0*tmp_239;
      real_t tmp_514 = tmp_154*tmp_513;
      real_t tmp_515 = tmp_166*tmp_513;
      real_t tmp_516 = tmp_177*tmp_513;
      real_t tmp_517 = 1.0*tmp_244;
      real_t tmp_518 = tmp_201*tmp_517;
      real_t tmp_519 = tmp_213*tmp_517;
      real_t tmp_520 = tmp_224*tmp_517;
      real_t tmp_521 = 0.012499999999999983;
      real_t tmp_522 = 16.0*tmp_521;
      real_t tmp_523 = 0.012499999999999983;
      real_t tmp_524 = 16.0*tmp_523;
      real_t tmp_525 = 0.11249999999999989;
      real_t tmp_526 = 16.0*tmp_525;
      real_t tmp_527 = 0.012499999999999983;
      real_t tmp_528 = 16.0*tmp_527;
      real_t tmp_529 = tmp_134*(tmp_105*tmp_254*tmp_510 + tmp_117*tmp_254*tmp_511 + tmp_129*tmp_236*tmp_254) + tmp_181*(tmp_152*tmp_259*tmp_514 + tmp_164*tmp_259*tmp_515 + tmp_176*tmp_241*tmp_259) + tmp_228*(tmp_199*tmp_264*tmp_518 + tmp_211*tmp_264*tmp_519 + tmp_223*tmp_246*tmp_264) + tmp_87*(tmp_231*tmp_249*tmp_69 + tmp_249*tmp_42*tmp_506 + tmp_249*tmp_507*tmp_57);
      real_t tmp_530 = tmp_269*tmp_67;
      real_t tmp_531 = tmp_269*tmp_37;
      real_t tmp_532 = tmp_269*tmp_55;
      real_t tmp_533 = tmp_127*tmp_274;
      real_t tmp_534 = tmp_103*tmp_274;
      real_t tmp_535 = tmp_115*tmp_274;
      real_t tmp_536 = tmp_174*tmp_279;
      real_t tmp_537 = tmp_150*tmp_279;
      real_t tmp_538 = tmp_162*tmp_279;
      real_t tmp_539 = tmp_221*tmp_284;
      real_t tmp_540 = tmp_197*tmp_284;
      real_t tmp_541 = tmp_209*tmp_284;
      real_t tmp_542 = tmp_134*(tmp_236*tmp_533 + tmp_510*tmp_534 + tmp_511*tmp_535) + tmp_181*(tmp_241*tmp_536 + tmp_514*tmp_537 + tmp_515*tmp_538) + tmp_228*(tmp_246*tmp_539 + tmp_518*tmp_540 + tmp_519*tmp_541) + tmp_87*(tmp_231*tmp_530 + tmp_506*tmp_531 + tmp_507*tmp_532);
      real_t tmp_543 = 1.0*tmp_249;
      real_t tmp_544 = tmp_42*tmp_543;
      real_t tmp_545 = tmp_543*tmp_57;
      real_t tmp_546 = tmp_543*tmp_69;
      real_t tmp_547 = 1.0*tmp_254;
      real_t tmp_548 = tmp_105*tmp_547;
      real_t tmp_549 = tmp_117*tmp_547;
      real_t tmp_550 = tmp_129*tmp_547;
      real_t tmp_551 = 1.0*tmp_259;
      real_t tmp_552 = tmp_152*tmp_551;
      real_t tmp_553 = tmp_164*tmp_551;
      real_t tmp_554 = tmp_176*tmp_551;
      real_t tmp_555 = 1.0*tmp_264;
      real_t tmp_556 = tmp_199*tmp_555;
      real_t tmp_557 = tmp_211*tmp_555;
      real_t tmp_558 = tmp_223*tmp_555;
      real_t tmp_559 = 0.012499999999999983;
      real_t tmp_560 = 16.0*tmp_559;
      real_t tmp_561 = 0.11249999999999989;
      real_t tmp_562 = 16.0*tmp_561;
      real_t tmp_563 = 0.012499999999999983;
      real_t tmp_564 = 16.0*tmp_563;
      real_t tmp_565 = 0.012499999999999983;
      real_t tmp_566 = 16.0*tmp_565;
      real_t tmp_567 = tmp_134*(tmp_256*tmp_533 + tmp_534*tmp_548 + tmp_535*tmp_549) + tmp_181*(tmp_261*tmp_536 + tmp_537*tmp_552 + tmp_538*tmp_553) + tmp_228*(tmp_266*tmp_539 + tmp_540*tmp_556 + tmp_541*tmp_557) + tmp_87*(tmp_251*tmp_530 + tmp_531*tmp_544 + tmp_532*tmp_545);
      real_t tmp_568 = 1.0*tmp_269;
      real_t tmp_569 = tmp_37*tmp_568;
      real_t tmp_570 = tmp_55*tmp_568;
      real_t tmp_571 = tmp_568*tmp_67;
      real_t tmp_572 = 1.0*tmp_274;
      real_t tmp_573 = tmp_103*tmp_572;
      real_t tmp_574 = tmp_115*tmp_572;
      real_t tmp_575 = tmp_127*tmp_572;
      real_t tmp_576 = 1.0*tmp_279;
      real_t tmp_577 = tmp_150*tmp_576;
      real_t tmp_578 = tmp_162*tmp_576;
      real_t tmp_579 = tmp_174*tmp_576;
      real_t tmp_580 = 1.0*tmp_284;
      real_t tmp_581 = tmp_197*tmp_580;
      real_t tmp_582 = tmp_209*tmp_580;
      real_t tmp_583 = tmp_221*tmp_580;
      real_t tmp_584 = 0.11249999999999989;
      real_t tmp_585 = 16.0*tmp_584;
      real_t tmp_586 = 0.012499999999999983;
      real_t tmp_587 = 16.0*tmp_586;
      real_t tmp_588 = 0.012499999999999983;
      real_t tmp_589 = 16.0*tmp_588;
      real_t tmp_590 = 0.012499999999999983;
      real_t tmp_591 = 16.0*tmp_590;
      real_t tmp_592 = 0.27639320225002117;
      real_t tmp_593 = tmp_37*tmp_592;
      real_t tmp_594 = 1.1708203932499366;
      real_t tmp_595 = tmp_42*tmp_594;
      real_t tmp_596 = tmp_593 + tmp_595;
      real_t tmp_597 = 2*tmp_596;
      real_t tmp_598 = tmp_55*tmp_592;
      real_t tmp_599 = tmp_57*tmp_594;
      real_t tmp_600 = tmp_598 + tmp_599;
      real_t tmp_601 = 2*tmp_600;
      real_t tmp_602 = tmp_1*tmp_67;
      real_t tmp_603 = tmp_2*tmp_69;
      real_t tmp_604 = tmp_602 + tmp_603;
      real_t tmp_605 = 1.1708203932499366;
      real_t tmp_606 = tmp_103*tmp_605;
      real_t tmp_607 = 0.27639320225002117;
      real_t tmp_608 = tmp_105*tmp_607;
      real_t tmp_609 = tmp_606 + tmp_608;
      real_t tmp_610 = 2*tmp_609;
      real_t tmp_611 = tmp_115*tmp_605;
      real_t tmp_612 = tmp_117*tmp_607;
      real_t tmp_613 = tmp_611 + tmp_612;
      real_t tmp_614 = 2*tmp_613;
      real_t tmp_615 = tmp_127*tmp_89;
      real_t tmp_616 = tmp_129*tmp_90;
      real_t tmp_617 = tmp_615 + tmp_616;
      real_t tmp_618 = 0.27639320225002117;
      real_t tmp_619 = tmp_150*tmp_618;
      real_t tmp_620 = 0.27639320225002117;
      real_t tmp_621 = tmp_152*tmp_620;
      real_t tmp_622 = tmp_619 + tmp_621;
      real_t tmp_623 = 2*tmp_622;
      real_t tmp_624 = tmp_162*tmp_618;
      real_t tmp_625 = tmp_164*tmp_620;
      real_t tmp_626 = tmp_624 + tmp_625;
      real_t tmp_627 = 2*tmp_626;
      real_t tmp_628 = tmp_136*tmp_174;
      real_t tmp_629 = tmp_137*tmp_176;
      real_t tmp_630 = tmp_628 + tmp_629;
      real_t tmp_631 = 0.27639320225002117;
      real_t tmp_632 = tmp_197*tmp_631;
      real_t tmp_633 = 0.27639320225002117;
      real_t tmp_634 = tmp_199*tmp_633;
      real_t tmp_635 = tmp_632 + tmp_634;
      real_t tmp_636 = 2*tmp_635;
      real_t tmp_637 = tmp_209*tmp_631;
      real_t tmp_638 = tmp_211*tmp_633;
      real_t tmp_639 = tmp_637 + tmp_638;
      real_t tmp_640 = 2*tmp_639;
      real_t tmp_641 = tmp_183*tmp_221;
      real_t tmp_642 = tmp_184*tmp_223;
      real_t tmp_643 = tmp_641 + tmp_642;
      real_t tmp_644 = 0.27639320225002117;
      real_t tmp_645 = tmp_37*tmp_644;
      real_t tmp_646 = tmp_47*tmp_594;
      real_t tmp_647 = tmp_645 + tmp_646;
      real_t tmp_648 = 2*tmp_647;
      real_t tmp_649 = tmp_55*tmp_644;
      real_t tmp_650 = tmp_59*tmp_594;
      real_t tmp_651 = tmp_649 + tmp_650;
      real_t tmp_652 = 2*tmp_651;
      real_t tmp_653 = tmp_0*tmp_67;
      real_t tmp_654 = tmp_2*tmp_70;
      real_t tmp_655 = tmp_653 + tmp_654;
      real_t tmp_656 = 0.27639320225002117;
      real_t tmp_657 = tmp_103*tmp_656;
      real_t tmp_658 = tmp_107*tmp_607;
      real_t tmp_659 = tmp_657 + tmp_658;
      real_t tmp_660 = 2*tmp_659;
      real_t tmp_661 = tmp_115*tmp_656;
      real_t tmp_662 = tmp_119*tmp_607;
      real_t tmp_663 = tmp_661 + tmp_662;
      real_t tmp_664 = 2*tmp_663;
      real_t tmp_665 = tmp_127*tmp_88;
      real_t tmp_666 = tmp_130*tmp_90;
      real_t tmp_667 = tmp_665 + tmp_666;
      real_t tmp_668 = 1.1708203932499366;
      real_t tmp_669 = tmp_150*tmp_668;
      real_t tmp_670 = tmp_154*tmp_620;
      real_t tmp_671 = tmp_669 + tmp_670;
      real_t tmp_672 = 2*tmp_671;
      real_t tmp_673 = tmp_162*tmp_668;
      real_t tmp_674 = tmp_166*tmp_620;
      real_t tmp_675 = tmp_673 + tmp_674;
      real_t tmp_676 = 2*tmp_675;
      real_t tmp_677 = tmp_135*tmp_174;
      real_t tmp_678 = tmp_137*tmp_177;
      real_t tmp_679 = tmp_677 + tmp_678;
      real_t tmp_680 = 0.27639320225002117;
      real_t tmp_681 = tmp_197*tmp_680;
      real_t tmp_682 = tmp_201*tmp_633;
      real_t tmp_683 = tmp_681 + tmp_682;
      real_t tmp_684 = 2*tmp_683;
      real_t tmp_685 = tmp_209*tmp_680;
      real_t tmp_686 = tmp_213*tmp_633;
      real_t tmp_687 = tmp_685 + tmp_686;
      real_t tmp_688 = 2*tmp_687;
      real_t tmp_689 = tmp_182*tmp_221;
      real_t tmp_690 = tmp_184*tmp_224;
      real_t tmp_691 = tmp_689 + tmp_690;
      real_t tmp_692 = tmp_42*tmp_644;
      real_t tmp_693 = tmp_47*tmp_592;
      real_t tmp_694 = tmp_692 + tmp_693;
      real_t tmp_695 = 2*tmp_694;
      real_t tmp_696 = tmp_57*tmp_644;
      real_t tmp_697 = tmp_59*tmp_592;
      real_t tmp_698 = tmp_696 + tmp_697;
      real_t tmp_699 = 2*tmp_698;
      real_t tmp_700 = tmp_0*tmp_69;
      real_t tmp_701 = tmp_1*tmp_70;
      real_t tmp_702 = tmp_700 + tmp_701;
      real_t tmp_703 = tmp_105*tmp_656;
      real_t tmp_704 = tmp_107*tmp_605;
      real_t tmp_705 = tmp_703 + tmp_704;
      real_t tmp_706 = 2*tmp_705;
      real_t tmp_707 = tmp_117*tmp_656;
      real_t tmp_708 = tmp_119*tmp_605;
      real_t tmp_709 = tmp_707 + tmp_708;
      real_t tmp_710 = 2*tmp_709;
      real_t tmp_711 = tmp_129*tmp_88;
      real_t tmp_712 = tmp_130*tmp_89;
      real_t tmp_713 = tmp_711 + tmp_712;
      real_t tmp_714 = tmp_152*tmp_668;
      real_t tmp_715 = tmp_154*tmp_618;
      real_t tmp_716 = tmp_714 + tmp_715;
      real_t tmp_717 = 2*tmp_716;
      real_t tmp_718 = tmp_164*tmp_668;
      real_t tmp_719 = tmp_166*tmp_618;
      real_t tmp_720 = tmp_718 + tmp_719;
      real_t tmp_721 = 2*tmp_720;
      real_t tmp_722 = tmp_135*tmp_176;
      real_t tmp_723 = tmp_136*tmp_177;
      real_t tmp_724 = tmp_722 + tmp_723;
      real_t tmp_725 = tmp_199*tmp_680;
      real_t tmp_726 = tmp_201*tmp_631;
      real_t tmp_727 = tmp_725 + tmp_726;
      real_t tmp_728 = 2*tmp_727;
      real_t tmp_729 = tmp_211*tmp_680;
      real_t tmp_730 = tmp_213*tmp_631;
      real_t tmp_731 = tmp_729 + tmp_730;
      real_t tmp_732 = 2*tmp_731;
      real_t tmp_733 = tmp_182*tmp_223;
      real_t tmp_734 = tmp_183*tmp_224;
      real_t tmp_735 = tmp_733 + tmp_734;
      real_t tmp_736 = 0.5*tmp_414 - tmp_595 - tmp_646;
      real_t tmp_737 = 2*tmp_736;
      real_t tmp_738 = 0.5*tmp_416 - tmp_599 - tmp_650;
      real_t tmp_739 = 2*tmp_738;
      real_t tmp_740 = 1.0*tmp_412 - tmp_603 - tmp_654;
      real_t tmp_741 = 0.5*tmp_423 - tmp_608 - tmp_658;
      real_t tmp_742 = 2*tmp_741;
      real_t tmp_743 = 0.5*tmp_425 - tmp_612 - tmp_662;
      real_t tmp_744 = 2*tmp_743;
      real_t tmp_745 = 1.0*tmp_421 - tmp_616 - tmp_666;
      real_t tmp_746 = 0.5*tmp_432 - tmp_621 - tmp_670;
      real_t tmp_747 = 2*tmp_746;
      real_t tmp_748 = 0.5*tmp_434 - tmp_625 - tmp_674;
      real_t tmp_749 = 2*tmp_748;
      real_t tmp_750 = 1.0*tmp_430 - tmp_629 - tmp_678;
      real_t tmp_751 = 0.5*tmp_441 - tmp_634 - tmp_682;
      real_t tmp_752 = 2*tmp_751;
      real_t tmp_753 = 0.5*tmp_443 - tmp_638 - tmp_686;
      real_t tmp_754 = 2*tmp_753;
      real_t tmp_755 = 1.0*tmp_439 - tmp_642 - tmp_690;
      real_t tmp_756 = 0.5*tmp_449 - tmp_593 - tmp_693;
      real_t tmp_757 = 2*tmp_756;
      real_t tmp_758 = 0.5*tmp_451 - tmp_598 - tmp_697;
      real_t tmp_759 = 2*tmp_758;
      real_t tmp_760 = 1.0*tmp_447 - tmp_602 - tmp_701;
      real_t tmp_761 = 0.5*tmp_457 - tmp_606 - tmp_704;
      real_t tmp_762 = 2*tmp_761;
      real_t tmp_763 = 0.5*tmp_459 - tmp_611 - tmp_708;
      real_t tmp_764 = 2*tmp_763;
      real_t tmp_765 = 1.0*tmp_455 - tmp_615 - tmp_712;
      real_t tmp_766 = 0.5*tmp_465 - tmp_619 - tmp_715;
      real_t tmp_767 = 2*tmp_766;
      real_t tmp_768 = 0.5*tmp_467 - tmp_624 - tmp_719;
      real_t tmp_769 = 2*tmp_768;
      real_t tmp_770 = 1.0*tmp_463 - tmp_628 - tmp_723;
      real_t tmp_771 = 0.5*tmp_473 - tmp_632 - tmp_726;
      real_t tmp_772 = 2*tmp_771;
      real_t tmp_773 = 0.5*tmp_475 - tmp_637 - tmp_730;
      real_t tmp_774 = 2*tmp_773;
      real_t tmp_775 = 1.0*tmp_471 - tmp_641 - tmp_734;
      real_t tmp_776 = 0.5*tmp_480 - tmp_645 - tmp_692;
      real_t tmp_777 = 2*tmp_776;
      real_t tmp_778 = 0.5*tmp_482 - tmp_649 - tmp_696;
      real_t tmp_779 = 2*tmp_778;
      real_t tmp_780 = 1.0*tmp_478 - tmp_653 - tmp_700;
      real_t tmp_781 = 0.5*tmp_487 - tmp_657 - tmp_703;
      real_t tmp_782 = 2*tmp_781;
      real_t tmp_783 = 0.5*tmp_489 - tmp_661 - tmp_707;
      real_t tmp_784 = 2*tmp_783;
      real_t tmp_785 = 1.0*tmp_485 - tmp_665 - tmp_711;
      real_t tmp_786 = 0.5*tmp_494 - tmp_669 - tmp_714;
      real_t tmp_787 = 2*tmp_786;
      real_t tmp_788 = 0.5*tmp_496 - tmp_673 - tmp_718;
      real_t tmp_789 = 2*tmp_788;
      real_t tmp_790 = 1.0*tmp_492 - tmp_677 - tmp_722;
      real_t tmp_791 = 0.5*tmp_501 - tmp_681 - tmp_725;
      real_t tmp_792 = 2*tmp_791;
      real_t tmp_793 = 0.5*tmp_503 - tmp_685 - tmp_729;
      real_t tmp_794 = 2*tmp_793;
      real_t tmp_795 = 1.0*tmp_499 - tmp_689 - tmp_733;
      real_t a_0_0 = tmp_134*(tmp_109*tmp_111 + tmp_121*tmp_123 + tmp_131*tmp_133) + tmp_181*(tmp_156*tmp_158 + tmp_168*tmp_170 + tmp_178*tmp_180) + tmp_228*(tmp_203*tmp_205 + tmp_215*tmp_217 + tmp_225*tmp_227) + tmp_87*(tmp_49*tmp_51 + tmp_61*tmp_63 + tmp_71*tmp_73);
      real_t a_0_1 = tmp_134*(tmp_110*tmp_237 + tmp_122*tmp_238 + tmp_131*tmp_236) + tmp_181*(tmp_157*tmp_242 + tmp_169*tmp_243 + tmp_178*tmp_241) + tmp_228*(tmp_204*tmp_247 + tmp_216*tmp_248 + tmp_225*tmp_246) + tmp_87*(tmp_231*tmp_71 + tmp_232*tmp_50 + tmp_233*tmp_62);
      real_t a_0_2 = tmp_134*(tmp_110*tmp_257 + tmp_122*tmp_258 + tmp_131*tmp_256) + tmp_181*(tmp_157*tmp_262 + tmp_169*tmp_263 + tmp_178*tmp_261) + tmp_228*(tmp_204*tmp_267 + tmp_216*tmp_268 + tmp_225*tmp_266) + tmp_87*(tmp_251*tmp_71 + tmp_252*tmp_50 + tmp_253*tmp_62);
      real_t a_0_3 = tmp_134*(tmp_110*tmp_277 + tmp_122*tmp_278 + tmp_131*tmp_276) + tmp_181*(tmp_157*tmp_282 + tmp_169*tmp_283 + tmp_178*tmp_281) + tmp_228*(tmp_204*tmp_287 + tmp_216*tmp_288 + tmp_225*tmp_286) + tmp_87*(tmp_271*tmp_71 + tmp_272*tmp_50 + tmp_273*tmp_62);
      real_t a_0_4 = tmp_134*(tmp_111*tmp_307 + tmp_123*tmp_310 + tmp_131*tmp_304) + tmp_181*(tmp_158*tmp_318 + tmp_170*tmp_321 + tmp_178*tmp_315) + tmp_228*(tmp_205*tmp_329 + tmp_217*tmp_332 + tmp_225*tmp_326) + tmp_87*(tmp_293*tmp_71 + tmp_296*tmp_51 + tmp_299*tmp_63);
      real_t a_0_5 = tmp_134*(tmp_111*tmp_349 + tmp_123*tmp_352 + tmp_131*tmp_346) + tmp_181*(tmp_158*tmp_359 + tmp_170*tmp_362 + tmp_178*tmp_356) + tmp_228*(tmp_205*tmp_369 + tmp_217*tmp_372 + tmp_225*tmp_366) + tmp_87*(tmp_336*tmp_71 + tmp_339*tmp_51 + tmp_342*tmp_63);
      real_t a_0_6 = tmp_134*(tmp_111*tmp_387 + tmp_123*tmp_390 + tmp_131*tmp_384) + tmp_181*(tmp_158*tmp_396 + tmp_170*tmp_399 + tmp_178*tmp_393) + tmp_228*(tmp_205*tmp_405 + tmp_217*tmp_408 + tmp_225*tmp_402) + tmp_87*(tmp_375*tmp_71 + tmp_378*tmp_51 + tmp_381*tmp_63);
      real_t a_0_7 = tmp_134*(tmp_111*tmp_424 + tmp_123*tmp_426 + tmp_131*tmp_422) + tmp_181*(tmp_158*tmp_433 + tmp_170*tmp_435 + tmp_178*tmp_431) + tmp_228*(tmp_205*tmp_442 + tmp_217*tmp_444 + tmp_225*tmp_440) + tmp_87*(tmp_413*tmp_71 + tmp_415*tmp_51 + tmp_417*tmp_63);
      real_t a_0_8 = tmp_134*(tmp_111*tmp_458 + tmp_123*tmp_460 + tmp_131*tmp_456) + tmp_181*(tmp_158*tmp_466 + tmp_170*tmp_468 + tmp_178*tmp_464) + tmp_228*(tmp_205*tmp_474 + tmp_217*tmp_476 + tmp_225*tmp_472) + tmp_87*(tmp_448*tmp_71 + tmp_450*tmp_51 + tmp_452*tmp_63);
      real_t a_0_9 = tmp_134*(tmp_111*tmp_488 + tmp_123*tmp_490 + tmp_131*tmp_486) + tmp_181*(tmp_158*tmp_495 + tmp_170*tmp_497 + tmp_178*tmp_493) + tmp_228*(tmp_205*tmp_502 + tmp_217*tmp_504 + tmp_225*tmp_500) + tmp_87*(tmp_479*tmp_71 + tmp_481*tmp_51 + tmp_483*tmp_63);
      real_t a_1_0 = tmp_134*(tmp_109*tmp_510 + tmp_121*tmp_511 + tmp_133*tmp_512) + tmp_181*(tmp_156*tmp_514 + tmp_168*tmp_515 + tmp_180*tmp_516) + tmp_228*(tmp_203*tmp_518 + tmp_215*tmp_519 + tmp_227*tmp_520) + tmp_87*(tmp_49*tmp_506 + tmp_507*tmp_61 + tmp_508*tmp_73);
      real_t a_1_1 = tmp_134*((tmp_107*tmp_107)*tmp_524 + (tmp_119*tmp_119)*tmp_524 + 32.0*(tmp_130*tmp_130)*tmp_523) + tmp_181*((tmp_154*tmp_154)*tmp_526 + (tmp_166*tmp_166)*tmp_526 + 32.0*(tmp_177*tmp_177)*tmp_525) + tmp_228*((tmp_201*tmp_201)*tmp_528 + (tmp_213*tmp_213)*tmp_528 + 32.0*(tmp_224*tmp_224)*tmp_527) + tmp_87*((tmp_47*tmp_47)*tmp_522 + 32.0*tmp_521*(tmp_70*tmp_70) + tmp_522*(tmp_59*tmp_59));
      real_t a_1_2 = tmp_529;
      real_t a_1_3 = tmp_542;
      real_t a_1_4 = tmp_134*(tmp_304*tmp_512 + tmp_307*tmp_510 + tmp_310*tmp_511) + tmp_181*(tmp_315*tmp_516 + tmp_318*tmp_514 + tmp_321*tmp_515) + tmp_228*(tmp_326*tmp_520 + tmp_329*tmp_518 + tmp_332*tmp_519) + tmp_87*(tmp_293*tmp_508 + tmp_296*tmp_506 + tmp_299*tmp_507);
      real_t a_1_5 = tmp_134*(tmp_346*tmp_512 + tmp_349*tmp_510 + tmp_352*tmp_511) + tmp_181*(tmp_356*tmp_516 + tmp_359*tmp_514 + tmp_362*tmp_515) + tmp_228*(tmp_366*tmp_520 + tmp_369*tmp_518 + tmp_372*tmp_519) + tmp_87*(tmp_336*tmp_508 + tmp_339*tmp_506 + tmp_342*tmp_507);
      real_t a_1_6 = tmp_134*(tmp_384*tmp_512 + tmp_387*tmp_510 + tmp_390*tmp_511) + tmp_181*(tmp_393*tmp_516 + tmp_396*tmp_514 + tmp_399*tmp_515) + tmp_228*(tmp_402*tmp_520 + tmp_405*tmp_518 + tmp_408*tmp_519) + tmp_87*(tmp_375*tmp_508 + tmp_378*tmp_506 + tmp_381*tmp_507);
      real_t a_1_7 = tmp_134*(tmp_422*tmp_512 + tmp_424*tmp_510 + tmp_426*tmp_511) + tmp_181*(tmp_431*tmp_516 + tmp_433*tmp_514 + tmp_435*tmp_515) + tmp_228*(tmp_440*tmp_520 + tmp_442*tmp_518 + tmp_444*tmp_519) + tmp_87*(tmp_413*tmp_508 + tmp_415*tmp_506 + tmp_417*tmp_507);
      real_t a_1_8 = tmp_134*(tmp_456*tmp_512 + tmp_458*tmp_510 + tmp_460*tmp_511) + tmp_181*(tmp_464*tmp_516 + tmp_466*tmp_514 + tmp_468*tmp_515) + tmp_228*(tmp_472*tmp_520 + tmp_474*tmp_518 + tmp_476*tmp_519) + tmp_87*(tmp_448*tmp_508 + tmp_450*tmp_506 + tmp_452*tmp_507);
      real_t a_1_9 = tmp_134*(tmp_486*tmp_512 + tmp_488*tmp_510 + tmp_490*tmp_511) + tmp_181*(tmp_493*tmp_516 + tmp_495*tmp_514 + tmp_497*tmp_515) + tmp_228*(tmp_500*tmp_520 + tmp_502*tmp_518 + tmp_504*tmp_519) + tmp_87*(tmp_479*tmp_508 + tmp_481*tmp_506 + tmp_483*tmp_507);
      real_t a_2_0 = tmp_134*(tmp_109*tmp_548 + tmp_121*tmp_549 + tmp_133*tmp_550) + tmp_181*(tmp_156*tmp_552 + tmp_168*tmp_553 + tmp_180*tmp_554) + tmp_228*(tmp_203*tmp_556 + tmp_215*tmp_557 + tmp_227*tmp_558) + tmp_87*(tmp_49*tmp_544 + tmp_545*tmp_61 + tmp_546*tmp_73);
      real_t a_2_1 = tmp_529;
      real_t a_2_2 = tmp_134*((tmp_105*tmp_105)*tmp_562 + (tmp_117*tmp_117)*tmp_562 + 32.0*(tmp_129*tmp_129)*tmp_561) + tmp_181*((tmp_152*tmp_152)*tmp_564 + (tmp_164*tmp_164)*tmp_564 + 32.0*(tmp_176*tmp_176)*tmp_563) + tmp_228*((tmp_199*tmp_199)*tmp_566 + (tmp_211*tmp_211)*tmp_566 + 32.0*(tmp_223*tmp_223)*tmp_565) + tmp_87*((tmp_42*tmp_42)*tmp_560 + 32.0*tmp_559*(tmp_69*tmp_69) + tmp_560*(tmp_57*tmp_57));
      real_t a_2_3 = tmp_567;
      real_t a_2_4 = tmp_134*(tmp_304*tmp_550 + tmp_307*tmp_548 + tmp_310*tmp_549) + tmp_181*(tmp_315*tmp_554 + tmp_318*tmp_552 + tmp_321*tmp_553) + tmp_228*(tmp_326*tmp_558 + tmp_329*tmp_556 + tmp_332*tmp_557) + tmp_87*(tmp_293*tmp_546 + tmp_296*tmp_544 + tmp_299*tmp_545);
      real_t a_2_5 = tmp_134*(tmp_346*tmp_550 + tmp_349*tmp_548 + tmp_352*tmp_549) + tmp_181*(tmp_356*tmp_554 + tmp_359*tmp_552 + tmp_362*tmp_553) + tmp_228*(tmp_366*tmp_558 + tmp_369*tmp_556 + tmp_372*tmp_557) + tmp_87*(tmp_336*tmp_546 + tmp_339*tmp_544 + tmp_342*tmp_545);
      real_t a_2_6 = tmp_134*(tmp_384*tmp_550 + tmp_387*tmp_548 + tmp_390*tmp_549) + tmp_181*(tmp_393*tmp_554 + tmp_396*tmp_552 + tmp_399*tmp_553) + tmp_228*(tmp_402*tmp_558 + tmp_405*tmp_556 + tmp_408*tmp_557) + tmp_87*(tmp_375*tmp_546 + tmp_378*tmp_544 + tmp_381*tmp_545);
      real_t a_2_7 = tmp_134*(tmp_422*tmp_550 + tmp_424*tmp_548 + tmp_426*tmp_549) + tmp_181*(tmp_431*tmp_554 + tmp_433*tmp_552 + tmp_435*tmp_553) + tmp_228*(tmp_440*tmp_558 + tmp_442*tmp_556 + tmp_444*tmp_557) + tmp_87*(tmp_413*tmp_546 + tmp_415*tmp_544 + tmp_417*tmp_545);
      real_t a_2_8 = tmp_134*(tmp_456*tmp_550 + tmp_458*tmp_548 + tmp_460*tmp_549) + tmp_181*(tmp_464*tmp_554 + tmp_466*tmp_552 + tmp_468*tmp_553) + tmp_228*(tmp_472*tmp_558 + tmp_474*tmp_556 + tmp_476*tmp_557) + tmp_87*(tmp_448*tmp_546 + tmp_450*tmp_544 + tmp_452*tmp_545);
      real_t a_2_9 = tmp_134*(tmp_486*tmp_550 + tmp_488*tmp_548 + tmp_490*tmp_549) + tmp_181*(tmp_493*tmp_554 + tmp_495*tmp_552 + tmp_497*tmp_553) + tmp_228*(tmp_500*tmp_558 + tmp_502*tmp_556 + tmp_504*tmp_557) + tmp_87*(tmp_479*tmp_546 + tmp_481*tmp_544 + tmp_483*tmp_545);
      real_t a_3_0 = tmp_134*(tmp_109*tmp_573 + tmp_121*tmp_574 + tmp_133*tmp_575) + tmp_181*(tmp_156*tmp_577 + tmp_168*tmp_578 + tmp_180*tmp_579) + tmp_228*(tmp_203*tmp_581 + tmp_215*tmp_582 + tmp_227*tmp_583) + tmp_87*(tmp_49*tmp_569 + tmp_570*tmp_61 + tmp_571*tmp_73);
      real_t a_3_1 = tmp_542;
      real_t a_3_2 = tmp_567;
      real_t a_3_3 = tmp_134*((tmp_103*tmp_103)*tmp_587 + (tmp_115*tmp_115)*tmp_587 + 32.0*(tmp_127*tmp_127)*tmp_586) + tmp_181*((tmp_150*tmp_150)*tmp_589 + (tmp_162*tmp_162)*tmp_589 + 32.0*(tmp_174*tmp_174)*tmp_588) + tmp_228*((tmp_197*tmp_197)*tmp_591 + (tmp_209*tmp_209)*tmp_591 + 32.0*(tmp_221*tmp_221)*tmp_590) + tmp_87*((tmp_37*tmp_37)*tmp_585 + (tmp_55*tmp_55)*tmp_585 + 32.0*tmp_584*(tmp_67*tmp_67));
      real_t a_3_4 = tmp_134*(tmp_304*tmp_575 + tmp_307*tmp_573 + tmp_310*tmp_574) + tmp_181*(tmp_315*tmp_579 + tmp_318*tmp_577 + tmp_321*tmp_578) + tmp_228*(tmp_326*tmp_583 + tmp_329*tmp_581 + tmp_332*tmp_582) + tmp_87*(tmp_293*tmp_571 + tmp_296*tmp_569 + tmp_299*tmp_570);
      real_t a_3_5 = tmp_134*(tmp_346*tmp_575 + tmp_349*tmp_573 + tmp_352*tmp_574) + tmp_181*(tmp_356*tmp_579 + tmp_359*tmp_577 + tmp_362*tmp_578) + tmp_228*(tmp_366*tmp_583 + tmp_369*tmp_581 + tmp_372*tmp_582) + tmp_87*(tmp_336*tmp_571 + tmp_339*tmp_569 + tmp_342*tmp_570);
      real_t a_3_6 = tmp_134*(tmp_384*tmp_575 + tmp_387*tmp_573 + tmp_390*tmp_574) + tmp_181*(tmp_393*tmp_579 + tmp_396*tmp_577 + tmp_399*tmp_578) + tmp_228*(tmp_402*tmp_583 + tmp_405*tmp_581 + tmp_408*tmp_582) + tmp_87*(tmp_375*tmp_571 + tmp_378*tmp_569 + tmp_381*tmp_570);
      real_t a_3_7 = tmp_134*(tmp_422*tmp_575 + tmp_424*tmp_573 + tmp_426*tmp_574) + tmp_181*(tmp_431*tmp_579 + tmp_433*tmp_577 + tmp_435*tmp_578) + tmp_228*(tmp_440*tmp_583 + tmp_442*tmp_581 + tmp_444*tmp_582) + tmp_87*(tmp_413*tmp_571 + tmp_415*tmp_569 + tmp_417*tmp_570);
      real_t a_3_8 = tmp_134*(tmp_456*tmp_575 + tmp_458*tmp_573 + tmp_460*tmp_574) + tmp_181*(tmp_464*tmp_579 + tmp_466*tmp_577 + tmp_468*tmp_578) + tmp_228*(tmp_472*tmp_583 + tmp_474*tmp_581 + tmp_476*tmp_582) + tmp_87*(tmp_448*tmp_571 + tmp_450*tmp_569 + tmp_452*tmp_570);
      real_t a_3_9 = tmp_134*(tmp_486*tmp_575 + tmp_488*tmp_573 + tmp_490*tmp_574) + tmp_181*(tmp_493*tmp_579 + tmp_495*tmp_577 + tmp_497*tmp_578) + tmp_228*(tmp_500*tmp_583 + tmp_502*tmp_581 + tmp_504*tmp_582) + tmp_87*(tmp_479*tmp_571 + tmp_481*tmp_569 + tmp_483*tmp_570);
      real_t a_4_0 = tmp_134*(tmp_109*tmp_610 + tmp_121*tmp_614 + tmp_133*tmp_617) + tmp_181*(tmp_156*tmp_623 + tmp_168*tmp_627 + tmp_180*tmp_630) + tmp_228*(tmp_203*tmp_636 + tmp_215*tmp_640 + tmp_227*tmp_643) + tmp_87*(tmp_49*tmp_597 + tmp_601*tmp_61 + tmp_604*tmp_73);
      real_t a_4_1 = tmp_134*(tmp_236*tmp_617 + tmp_237*tmp_609 + tmp_238*tmp_613) + tmp_181*(tmp_241*tmp_630 + tmp_242*tmp_622 + tmp_243*tmp_626) + tmp_228*(tmp_246*tmp_643 + tmp_247*tmp_635 + tmp_248*tmp_639) + tmp_87*(tmp_231*tmp_604 + tmp_232*tmp_596 + tmp_233*tmp_600);
      real_t a_4_2 = tmp_134*(tmp_256*tmp_617 + tmp_257*tmp_609 + tmp_258*tmp_613) + tmp_181*(tmp_261*tmp_630 + tmp_262*tmp_622 + tmp_263*tmp_626) + tmp_228*(tmp_266*tmp_643 + tmp_267*tmp_635 + tmp_268*tmp_639) + tmp_87*(tmp_251*tmp_604 + tmp_252*tmp_596 + tmp_253*tmp_600);
      real_t a_4_3 = tmp_134*(tmp_276*tmp_617 + tmp_277*tmp_609 + tmp_278*tmp_613) + tmp_181*(tmp_281*tmp_630 + tmp_282*tmp_622 + tmp_283*tmp_626) + tmp_228*(tmp_286*tmp_643 + tmp_287*tmp_635 + tmp_288*tmp_639) + tmp_87*(tmp_271*tmp_604 + tmp_272*tmp_596 + tmp_273*tmp_600);
      real_t a_4_4 = tmp_134*(tmp_304*tmp_617 + tmp_307*tmp_610 + tmp_310*tmp_614) + tmp_181*(tmp_315*tmp_630 + tmp_318*tmp_623 + tmp_321*tmp_627) + tmp_228*(tmp_326*tmp_643 + tmp_329*tmp_636 + tmp_332*tmp_640) + tmp_87*(tmp_293*tmp_604 + tmp_296*tmp_597 + tmp_299*tmp_601);
      real_t a_4_5 = tmp_134*(tmp_346*tmp_617 + tmp_349*tmp_610 + tmp_352*tmp_614) + tmp_181*(tmp_356*tmp_630 + tmp_359*tmp_623 + tmp_362*tmp_627) + tmp_228*(tmp_366*tmp_643 + tmp_369*tmp_636 + tmp_372*tmp_640) + tmp_87*(tmp_336*tmp_604 + tmp_339*tmp_597 + tmp_342*tmp_601);
      real_t a_4_6 = tmp_134*(tmp_384*tmp_617 + tmp_387*tmp_610 + tmp_390*tmp_614) + tmp_181*(tmp_393*tmp_630 + tmp_396*tmp_623 + tmp_399*tmp_627) + tmp_228*(tmp_402*tmp_643 + tmp_405*tmp_636 + tmp_408*tmp_640) + tmp_87*(tmp_375*tmp_604 + tmp_378*tmp_597 + tmp_381*tmp_601);
      real_t a_4_7 = tmp_134*(tmp_422*tmp_617 + tmp_424*tmp_610 + tmp_426*tmp_614) + tmp_181*(tmp_431*tmp_630 + tmp_433*tmp_623 + tmp_435*tmp_627) + tmp_228*(tmp_440*tmp_643 + tmp_442*tmp_636 + tmp_444*tmp_640) + tmp_87*(tmp_413*tmp_604 + tmp_415*tmp_597 + tmp_417*tmp_601);
      real_t a_4_8 = tmp_134*(tmp_456*tmp_617 + tmp_458*tmp_610 + tmp_460*tmp_614) + tmp_181*(tmp_464*tmp_630 + tmp_466*tmp_623 + tmp_468*tmp_627) + tmp_228*(tmp_472*tmp_643 + tmp_474*tmp_636 + tmp_476*tmp_640) + tmp_87*(tmp_448*tmp_604 + tmp_450*tmp_597 + tmp_452*tmp_601);
      real_t a_4_9 = tmp_134*(tmp_486*tmp_617 + tmp_488*tmp_610 + tmp_490*tmp_614) + tmp_181*(tmp_493*tmp_630 + tmp_495*tmp_623 + tmp_497*tmp_627) + tmp_228*(tmp_500*tmp_643 + tmp_502*tmp_636 + tmp_504*tmp_640) + tmp_87*(tmp_479*tmp_604 + tmp_481*tmp_597 + tmp_483*tmp_601);
      real_t a_5_0 = tmp_134*(tmp_109*tmp_660 + tmp_121*tmp_664 + tmp_133*tmp_667) + tmp_181*(tmp_156*tmp_672 + tmp_168*tmp_676 + tmp_180*tmp_679) + tmp_228*(tmp_203*tmp_684 + tmp_215*tmp_688 + tmp_227*tmp_691) + tmp_87*(tmp_49*tmp_648 + tmp_61*tmp_652 + tmp_655*tmp_73);
      real_t a_5_1 = tmp_134*(tmp_236*tmp_667 + tmp_237*tmp_659 + tmp_238*tmp_663) + tmp_181*(tmp_241*tmp_679 + tmp_242*tmp_671 + tmp_243*tmp_675) + tmp_228*(tmp_246*tmp_691 + tmp_247*tmp_683 + tmp_248*tmp_687) + tmp_87*(tmp_231*tmp_655 + tmp_232*tmp_647 + tmp_233*tmp_651);
      real_t a_5_2 = tmp_134*(tmp_256*tmp_667 + tmp_257*tmp_659 + tmp_258*tmp_663) + tmp_181*(tmp_261*tmp_679 + tmp_262*tmp_671 + tmp_263*tmp_675) + tmp_228*(tmp_266*tmp_691 + tmp_267*tmp_683 + tmp_268*tmp_687) + tmp_87*(tmp_251*tmp_655 + tmp_252*tmp_647 + tmp_253*tmp_651);
      real_t a_5_3 = tmp_134*(tmp_276*tmp_667 + tmp_277*tmp_659 + tmp_278*tmp_663) + tmp_181*(tmp_281*tmp_679 + tmp_282*tmp_671 + tmp_283*tmp_675) + tmp_228*(tmp_286*tmp_691 + tmp_287*tmp_683 + tmp_288*tmp_687) + tmp_87*(tmp_271*tmp_655 + tmp_272*tmp_647 + tmp_273*tmp_651);
      real_t a_5_4 = tmp_134*(tmp_304*tmp_667 + tmp_307*tmp_660 + tmp_310*tmp_664) + tmp_181*(tmp_315*tmp_679 + tmp_318*tmp_672 + tmp_321*tmp_676) + tmp_228*(tmp_326*tmp_691 + tmp_329*tmp_684 + tmp_332*tmp_688) + tmp_87*(tmp_293*tmp_655 + tmp_296*tmp_648 + tmp_299*tmp_652);
      real_t a_5_5 = tmp_134*(tmp_346*tmp_667 + tmp_349*tmp_660 + tmp_352*tmp_664) + tmp_181*(tmp_356*tmp_679 + tmp_359*tmp_672 + tmp_362*tmp_676) + tmp_228*(tmp_366*tmp_691 + tmp_369*tmp_684 + tmp_372*tmp_688) + tmp_87*(tmp_336*tmp_655 + tmp_339*tmp_648 + tmp_342*tmp_652);
      real_t a_5_6 = tmp_134*(tmp_384*tmp_667 + tmp_387*tmp_660 + tmp_390*tmp_664) + tmp_181*(tmp_393*tmp_679 + tmp_396*tmp_672 + tmp_399*tmp_676) + tmp_228*(tmp_402*tmp_691 + tmp_405*tmp_684 + tmp_408*tmp_688) + tmp_87*(tmp_375*tmp_655 + tmp_378*tmp_648 + tmp_381*tmp_652);
      real_t a_5_7 = tmp_134*(tmp_422*tmp_667 + tmp_424*tmp_660 + tmp_426*tmp_664) + tmp_181*(tmp_431*tmp_679 + tmp_433*tmp_672 + tmp_435*tmp_676) + tmp_228*(tmp_440*tmp_691 + tmp_442*tmp_684 + tmp_444*tmp_688) + tmp_87*(tmp_413*tmp_655 + tmp_415*tmp_648 + tmp_417*tmp_652);
      real_t a_5_8 = tmp_134*(tmp_456*tmp_667 + tmp_458*tmp_660 + tmp_460*tmp_664) + tmp_181*(tmp_464*tmp_679 + tmp_466*tmp_672 + tmp_468*tmp_676) + tmp_228*(tmp_472*tmp_691 + tmp_474*tmp_684 + tmp_476*tmp_688) + tmp_87*(tmp_448*tmp_655 + tmp_450*tmp_648 + tmp_452*tmp_652);
      real_t a_5_9 = tmp_134*(tmp_486*tmp_667 + tmp_488*tmp_660 + tmp_490*tmp_664) + tmp_181*(tmp_493*tmp_679 + tmp_495*tmp_672 + tmp_497*tmp_676) + tmp_228*(tmp_500*tmp_691 + tmp_502*tmp_684 + tmp_504*tmp_688) + tmp_87*(tmp_479*tmp_655 + tmp_481*tmp_648 + tmp_483*tmp_652);
      real_t a_6_0 = tmp_134*(tmp_109*tmp_706 + tmp_121*tmp_710 + tmp_133*tmp_713) + tmp_181*(tmp_156*tmp_717 + tmp_168*tmp_721 + tmp_180*tmp_724) + tmp_228*(tmp_203*tmp_728 + tmp_215*tmp_732 + tmp_227*tmp_735) + tmp_87*(tmp_49*tmp_695 + tmp_61*tmp_699 + tmp_702*tmp_73);
      real_t a_6_1 = tmp_134*(tmp_236*tmp_713 + tmp_237*tmp_705 + tmp_238*tmp_709) + tmp_181*(tmp_241*tmp_724 + tmp_242*tmp_716 + tmp_243*tmp_720) + tmp_228*(tmp_246*tmp_735 + tmp_247*tmp_727 + tmp_248*tmp_731) + tmp_87*(tmp_231*tmp_702 + tmp_232*tmp_694 + tmp_233*tmp_698);
      real_t a_6_2 = tmp_134*(tmp_256*tmp_713 + tmp_257*tmp_705 + tmp_258*tmp_709) + tmp_181*(tmp_261*tmp_724 + tmp_262*tmp_716 + tmp_263*tmp_720) + tmp_228*(tmp_266*tmp_735 + tmp_267*tmp_727 + tmp_268*tmp_731) + tmp_87*(tmp_251*tmp_702 + tmp_252*tmp_694 + tmp_253*tmp_698);
      real_t a_6_3 = tmp_134*(tmp_276*tmp_713 + tmp_277*tmp_705 + tmp_278*tmp_709) + tmp_181*(tmp_281*tmp_724 + tmp_282*tmp_716 + tmp_283*tmp_720) + tmp_228*(tmp_286*tmp_735 + tmp_287*tmp_727 + tmp_288*tmp_731) + tmp_87*(tmp_271*tmp_702 + tmp_272*tmp_694 + tmp_273*tmp_698);
      real_t a_6_4 = tmp_134*(tmp_304*tmp_713 + tmp_307*tmp_706 + tmp_310*tmp_710) + tmp_181*(tmp_315*tmp_724 + tmp_318*tmp_717 + tmp_321*tmp_721) + tmp_228*(tmp_326*tmp_735 + tmp_329*tmp_728 + tmp_332*tmp_732) + tmp_87*(tmp_293*tmp_702 + tmp_296*tmp_695 + tmp_299*tmp_699);
      real_t a_6_5 = tmp_134*(tmp_346*tmp_713 + tmp_349*tmp_706 + tmp_352*tmp_710) + tmp_181*(tmp_356*tmp_724 + tmp_359*tmp_717 + tmp_362*tmp_721) + tmp_228*(tmp_366*tmp_735 + tmp_369*tmp_728 + tmp_372*tmp_732) + tmp_87*(tmp_336*tmp_702 + tmp_339*tmp_695 + tmp_342*tmp_699);
      real_t a_6_6 = tmp_134*(tmp_384*tmp_713 + tmp_387*tmp_706 + tmp_390*tmp_710) + tmp_181*(tmp_393*tmp_724 + tmp_396*tmp_717 + tmp_399*tmp_721) + tmp_228*(tmp_402*tmp_735 + tmp_405*tmp_728 + tmp_408*tmp_732) + tmp_87*(tmp_375*tmp_702 + tmp_378*tmp_695 + tmp_381*tmp_699);
      real_t a_6_7 = tmp_134*(tmp_422*tmp_713 + tmp_424*tmp_706 + tmp_426*tmp_710) + tmp_181*(tmp_431*tmp_724 + tmp_433*tmp_717 + tmp_435*tmp_721) + tmp_228*(tmp_440*tmp_735 + tmp_442*tmp_728 + tmp_444*tmp_732) + tmp_87*(tmp_413*tmp_702 + tmp_415*tmp_695 + tmp_417*tmp_699);
      real_t a_6_8 = tmp_134*(tmp_456*tmp_713 + tmp_458*tmp_706 + tmp_460*tmp_710) + tmp_181*(tmp_464*tmp_724 + tmp_466*tmp_717 + tmp_468*tmp_721) + tmp_228*(tmp_472*tmp_735 + tmp_474*tmp_728 + tmp_476*tmp_732) + tmp_87*(tmp_448*tmp_702 + tmp_450*tmp_695 + tmp_452*tmp_699);
      real_t a_6_9 = tmp_134*(tmp_486*tmp_713 + tmp_488*tmp_706 + tmp_490*tmp_710) + tmp_181*(tmp_493*tmp_724 + tmp_495*tmp_717 + tmp_497*tmp_721) + tmp_228*(tmp_500*tmp_735 + tmp_502*tmp_728 + tmp_504*tmp_732) + tmp_87*(tmp_479*tmp_702 + tmp_481*tmp_695 + tmp_483*tmp_699);
      real_t a_7_0 = tmp_134*(tmp_109*tmp_742 + tmp_121*tmp_744 + tmp_133*tmp_745) + tmp_181*(tmp_156*tmp_747 + tmp_168*tmp_749 + tmp_180*tmp_750) + tmp_228*(tmp_203*tmp_752 + tmp_215*tmp_754 + tmp_227*tmp_755) + tmp_87*(tmp_49*tmp_737 + tmp_61*tmp_739 + tmp_73*tmp_740);
      real_t a_7_1 = tmp_134*(tmp_236*tmp_745 + tmp_237*tmp_741 + tmp_238*tmp_743) + tmp_181*(tmp_241*tmp_750 + tmp_242*tmp_746 + tmp_243*tmp_748) + tmp_228*(tmp_246*tmp_755 + tmp_247*tmp_751 + tmp_248*tmp_753) + tmp_87*(tmp_231*tmp_740 + tmp_232*tmp_736 + tmp_233*tmp_738);
      real_t a_7_2 = tmp_134*(tmp_256*tmp_745 + tmp_257*tmp_741 + tmp_258*tmp_743) + tmp_181*(tmp_261*tmp_750 + tmp_262*tmp_746 + tmp_263*tmp_748) + tmp_228*(tmp_266*tmp_755 + tmp_267*tmp_751 + tmp_268*tmp_753) + tmp_87*(tmp_251*tmp_740 + tmp_252*tmp_736 + tmp_253*tmp_738);
      real_t a_7_3 = tmp_134*(tmp_276*tmp_745 + tmp_277*tmp_741 + tmp_278*tmp_743) + tmp_181*(tmp_281*tmp_750 + tmp_282*tmp_746 + tmp_283*tmp_748) + tmp_228*(tmp_286*tmp_755 + tmp_287*tmp_751 + tmp_288*tmp_753) + tmp_87*(tmp_271*tmp_740 + tmp_272*tmp_736 + tmp_273*tmp_738);
      real_t a_7_4 = tmp_134*(tmp_304*tmp_745 + tmp_307*tmp_742 + tmp_310*tmp_744) + tmp_181*(tmp_315*tmp_750 + tmp_318*tmp_747 + tmp_321*tmp_749) + tmp_228*(tmp_326*tmp_755 + tmp_329*tmp_752 + tmp_332*tmp_754) + tmp_87*(tmp_293*tmp_740 + tmp_296*tmp_737 + tmp_299*tmp_739);
      real_t a_7_5 = tmp_134*(tmp_346*tmp_745 + tmp_349*tmp_742 + tmp_352*tmp_744) + tmp_181*(tmp_356*tmp_750 + tmp_359*tmp_747 + tmp_362*tmp_749) + tmp_228*(tmp_366*tmp_755 + tmp_369*tmp_752 + tmp_372*tmp_754) + tmp_87*(tmp_336*tmp_740 + tmp_339*tmp_737 + tmp_342*tmp_739);
      real_t a_7_6 = tmp_134*(tmp_384*tmp_745 + tmp_387*tmp_742 + tmp_390*tmp_744) + tmp_181*(tmp_393*tmp_750 + tmp_396*tmp_747 + tmp_399*tmp_749) + tmp_228*(tmp_402*tmp_755 + tmp_405*tmp_752 + tmp_408*tmp_754) + tmp_87*(tmp_375*tmp_740 + tmp_378*tmp_737 + tmp_381*tmp_739);
      real_t a_7_7 = tmp_134*(tmp_422*tmp_745 + tmp_424*tmp_742 + tmp_426*tmp_744) + tmp_181*(tmp_431*tmp_750 + tmp_433*tmp_747 + tmp_435*tmp_749) + tmp_228*(tmp_440*tmp_755 + tmp_442*tmp_752 + tmp_444*tmp_754) + tmp_87*(tmp_413*tmp_740 + tmp_415*tmp_737 + tmp_417*tmp_739);
      real_t a_7_8 = tmp_134*(tmp_456*tmp_745 + tmp_458*tmp_742 + tmp_460*tmp_744) + tmp_181*(tmp_464*tmp_750 + tmp_466*tmp_747 + tmp_468*tmp_749) + tmp_228*(tmp_472*tmp_755 + tmp_474*tmp_752 + tmp_476*tmp_754) + tmp_87*(tmp_448*tmp_740 + tmp_450*tmp_737 + tmp_452*tmp_739);
      real_t a_7_9 = tmp_134*(tmp_486*tmp_745 + tmp_488*tmp_742 + tmp_490*tmp_744) + tmp_181*(tmp_493*tmp_750 + tmp_495*tmp_747 + tmp_497*tmp_749) + tmp_228*(tmp_500*tmp_755 + tmp_502*tmp_752 + tmp_504*tmp_754) + tmp_87*(tmp_479*tmp_740 + tmp_481*tmp_737 + tmp_483*tmp_739);
      real_t a_8_0 = tmp_134*(tmp_109*tmp_762 + tmp_121*tmp_764 + tmp_133*tmp_765) + tmp_181*(tmp_156*tmp_767 + tmp_168*tmp_769 + tmp_180*tmp_770) + tmp_228*(tmp_203*tmp_772 + tmp_215*tmp_774 + tmp_227*tmp_775) + tmp_87*(tmp_49*tmp_757 + tmp_61*tmp_759 + tmp_73*tmp_760);
      real_t a_8_1 = tmp_134*(tmp_236*tmp_765 + tmp_237*tmp_761 + tmp_238*tmp_763) + tmp_181*(tmp_241*tmp_770 + tmp_242*tmp_766 + tmp_243*tmp_768) + tmp_228*(tmp_246*tmp_775 + tmp_247*tmp_771 + tmp_248*tmp_773) + tmp_87*(tmp_231*tmp_760 + tmp_232*tmp_756 + tmp_233*tmp_758);
      real_t a_8_2 = tmp_134*(tmp_256*tmp_765 + tmp_257*tmp_761 + tmp_258*tmp_763) + tmp_181*(tmp_261*tmp_770 + tmp_262*tmp_766 + tmp_263*tmp_768) + tmp_228*(tmp_266*tmp_775 + tmp_267*tmp_771 + tmp_268*tmp_773) + tmp_87*(tmp_251*tmp_760 + tmp_252*tmp_756 + tmp_253*tmp_758);
      real_t a_8_3 = tmp_134*(tmp_276*tmp_765 + tmp_277*tmp_761 + tmp_278*tmp_763) + tmp_181*(tmp_281*tmp_770 + tmp_282*tmp_766 + tmp_283*tmp_768) + tmp_228*(tmp_286*tmp_775 + tmp_287*tmp_771 + tmp_288*tmp_773) + tmp_87*(tmp_271*tmp_760 + tmp_272*tmp_756 + tmp_273*tmp_758);
      real_t a_8_4 = tmp_134*(tmp_304*tmp_765 + tmp_307*tmp_762 + tmp_310*tmp_764) + tmp_181*(tmp_315*tmp_770 + tmp_318*tmp_767 + tmp_321*tmp_769) + tmp_228*(tmp_326*tmp_775 + tmp_329*tmp_772 + tmp_332*tmp_774) + tmp_87*(tmp_293*tmp_760 + tmp_296*tmp_757 + tmp_299*tmp_759);
      real_t a_8_5 = tmp_134*(tmp_346*tmp_765 + tmp_349*tmp_762 + tmp_352*tmp_764) + tmp_181*(tmp_356*tmp_770 + tmp_359*tmp_767 + tmp_362*tmp_769) + tmp_228*(tmp_366*tmp_775 + tmp_369*tmp_772 + tmp_372*tmp_774) + tmp_87*(tmp_336*tmp_760 + tmp_339*tmp_757 + tmp_342*tmp_759);
      real_t a_8_6 = tmp_134*(tmp_384*tmp_765 + tmp_387*tmp_762 + tmp_390*tmp_764) + tmp_181*(tmp_393*tmp_770 + tmp_396*tmp_767 + tmp_399*tmp_769) + tmp_228*(tmp_402*tmp_775 + tmp_405*tmp_772 + tmp_408*tmp_774) + tmp_87*(tmp_375*tmp_760 + tmp_378*tmp_757 + tmp_381*tmp_759);
      real_t a_8_7 = tmp_134*(tmp_422*tmp_765 + tmp_424*tmp_762 + tmp_426*tmp_764) + tmp_181*(tmp_431*tmp_770 + tmp_433*tmp_767 + tmp_435*tmp_769) + tmp_228*(tmp_440*tmp_775 + tmp_442*tmp_772 + tmp_444*tmp_774) + tmp_87*(tmp_413*tmp_760 + tmp_415*tmp_757 + tmp_417*tmp_759);
      real_t a_8_8 = tmp_134*(tmp_456*tmp_765 + tmp_458*tmp_762 + tmp_460*tmp_764) + tmp_181*(tmp_464*tmp_770 + tmp_466*tmp_767 + tmp_468*tmp_769) + tmp_228*(tmp_472*tmp_775 + tmp_474*tmp_772 + tmp_476*tmp_774) + tmp_87*(tmp_448*tmp_760 + tmp_450*tmp_757 + tmp_452*tmp_759);
      real_t a_8_9 = tmp_134*(tmp_486*tmp_765 + tmp_488*tmp_762 + tmp_490*tmp_764) + tmp_181*(tmp_493*tmp_770 + tmp_495*tmp_767 + tmp_497*tmp_769) + tmp_228*(tmp_500*tmp_775 + tmp_502*tmp_772 + tmp_504*tmp_774) + tmp_87*(tmp_479*tmp_760 + tmp_481*tmp_757 + tmp_483*tmp_759);
      real_t a_9_0 = tmp_134*(tmp_109*tmp_782 + tmp_121*tmp_784 + tmp_133*tmp_785) + tmp_181*(tmp_156*tmp_787 + tmp_168*tmp_789 + tmp_180*tmp_790) + tmp_228*(tmp_203*tmp_792 + tmp_215*tmp_794 + tmp_227*tmp_795) + tmp_87*(tmp_49*tmp_777 + tmp_61*tmp_779 + tmp_73*tmp_780);
      real_t a_9_1 = tmp_134*(tmp_236*tmp_785 + tmp_237*tmp_781 + tmp_238*tmp_783) + tmp_181*(tmp_241*tmp_790 + tmp_242*tmp_786 + tmp_243*tmp_788) + tmp_228*(tmp_246*tmp_795 + tmp_247*tmp_791 + tmp_248*tmp_793) + tmp_87*(tmp_231*tmp_780 + tmp_232*tmp_776 + tmp_233*tmp_778);
      real_t a_9_2 = tmp_134*(tmp_256*tmp_785 + tmp_257*tmp_781 + tmp_258*tmp_783) + tmp_181*(tmp_261*tmp_790 + tmp_262*tmp_786 + tmp_263*tmp_788) + tmp_228*(tmp_266*tmp_795 + tmp_267*tmp_791 + tmp_268*tmp_793) + tmp_87*(tmp_251*tmp_780 + tmp_252*tmp_776 + tmp_253*tmp_778);
      real_t a_9_3 = tmp_134*(tmp_276*tmp_785 + tmp_277*tmp_781 + tmp_278*tmp_783) + tmp_181*(tmp_281*tmp_790 + tmp_282*tmp_786 + tmp_283*tmp_788) + tmp_228*(tmp_286*tmp_795 + tmp_287*tmp_791 + tmp_288*tmp_793) + tmp_87*(tmp_271*tmp_780 + tmp_272*tmp_776 + tmp_273*tmp_778);
      real_t a_9_4 = tmp_134*(tmp_304*tmp_785 + tmp_307*tmp_782 + tmp_310*tmp_784) + tmp_181*(tmp_315*tmp_790 + tmp_318*tmp_787 + tmp_321*tmp_789) + tmp_228*(tmp_326*tmp_795 + tmp_329*tmp_792 + tmp_332*tmp_794) + tmp_87*(tmp_293*tmp_780 + tmp_296*tmp_777 + tmp_299*tmp_779);
      real_t a_9_5 = tmp_134*(tmp_346*tmp_785 + tmp_349*tmp_782 + tmp_352*tmp_784) + tmp_181*(tmp_356*tmp_790 + tmp_359*tmp_787 + tmp_362*tmp_789) + tmp_228*(tmp_366*tmp_795 + tmp_369*tmp_792 + tmp_372*tmp_794) + tmp_87*(tmp_336*tmp_780 + tmp_339*tmp_777 + tmp_342*tmp_779);
      real_t a_9_6 = tmp_134*(tmp_384*tmp_785 + tmp_387*tmp_782 + tmp_390*tmp_784) + tmp_181*(tmp_393*tmp_790 + tmp_396*tmp_787 + tmp_399*tmp_789) + tmp_228*(tmp_402*tmp_795 + tmp_405*tmp_792 + tmp_408*tmp_794) + tmp_87*(tmp_375*tmp_780 + tmp_378*tmp_777 + tmp_381*tmp_779);
      real_t a_9_7 = tmp_134*(tmp_422*tmp_785 + tmp_424*tmp_782 + tmp_426*tmp_784) + tmp_181*(tmp_431*tmp_790 + tmp_433*tmp_787 + tmp_435*tmp_789) + tmp_228*(tmp_440*tmp_795 + tmp_442*tmp_792 + tmp_444*tmp_794) + tmp_87*(tmp_413*tmp_780 + tmp_415*tmp_777 + tmp_417*tmp_779);
      real_t a_9_8 = tmp_134*(tmp_456*tmp_785 + tmp_458*tmp_782 + tmp_460*tmp_784) + tmp_181*(tmp_464*tmp_790 + tmp_466*tmp_787 + tmp_468*tmp_789) + tmp_228*(tmp_472*tmp_795 + tmp_474*tmp_792 + tmp_476*tmp_794) + tmp_87*(tmp_448*tmp_780 + tmp_450*tmp_777 + tmp_452*tmp_779);
      real_t a_9_9 = tmp_134*(tmp_486*tmp_785 + tmp_488*tmp_782 + tmp_490*tmp_784) + tmp_181*(tmp_493*tmp_790 + tmp_495*tmp_787 + tmp_497*tmp_789) + tmp_228*(tmp_500*tmp_795 + tmp_502*tmp_792 + tmp_504*tmp_794) + tmp_87*(tmp_479*tmp_780 + tmp_481*tmp_777 + tmp_483*tmp_779);
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(1, 6)) = a_1_6;
      (elMat(1, 7)) = a_1_7;
      (elMat(1, 8)) = a_1_8;
      (elMat(1, 9)) = a_1_9;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(2, 6)) = a_2_6;
      (elMat(2, 7)) = a_2_7;
      (elMat(2, 8)) = a_2_8;
      (elMat(2, 9)) = a_2_9;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(3, 6)) = a_3_6;
      (elMat(3, 7)) = a_3_7;
      (elMat(3, 8)) = a_3_8;
      (elMat(3, 9)) = a_3_9;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(4, 6)) = a_4_6;
      (elMat(4, 7)) = a_4_7;
      (elMat(4, 8)) = a_4_8;
      (elMat(4, 9)) = a_4_9;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
      (elMat(5, 6)) = a_5_6;
      (elMat(5, 7)) = a_5_7;
      (elMat(5, 8)) = a_5_8;
      (elMat(5, 9)) = a_5_9;
      (elMat(6, 0)) = a_6_0;
      (elMat(6, 1)) = a_6_1;
      (elMat(6, 2)) = a_6_2;
      (elMat(6, 3)) = a_6_3;
      (elMat(6, 4)) = a_6_4;
      (elMat(6, 5)) = a_6_5;
      (elMat(6, 6)) = a_6_6;
      (elMat(6, 7)) = a_6_7;
      (elMat(6, 8)) = a_6_8;
      (elMat(6, 9)) = a_6_9;
      (elMat(7, 0)) = a_7_0;
      (elMat(7, 1)) = a_7_1;
      (elMat(7, 2)) = a_7_2;
      (elMat(7, 3)) = a_7_3;
      (elMat(7, 4)) = a_7_4;
      (elMat(7, 5)) = a_7_5;
      (elMat(7, 6)) = a_7_6;
      (elMat(7, 7)) = a_7_7;
      (elMat(7, 8)) = a_7_8;
      (elMat(7, 9)) = a_7_9;
      (elMat(8, 0)) = a_8_0;
      (elMat(8, 1)) = a_8_1;
      (elMat(8, 2)) = a_8_2;
      (elMat(8, 3)) = a_8_3;
      (elMat(8, 4)) = a_8_4;
      (elMat(8, 5)) = a_8_5;
      (elMat(8, 6)) = a_8_6;
      (elMat(8, 7)) = a_8_7;
      (elMat(8, 8)) = a_8_8;
      (elMat(8, 9)) = a_8_9;
      (elMat(9, 0)) = a_9_0;
      (elMat(9, 1)) = a_9_1;
      (elMat(9, 2)) = a_9_2;
      (elMat(9, 3)) = a_9_3;
      (elMat(9, 4)) = a_9_4;
      (elMat(9, 5)) = a_9_5;
      (elMat(9, 6)) = a_9_6;
      (elMat(9, 7)) = a_9_7;
      (elMat(9, 8)) = a_9_8;
      (elMat(9, 9)) = a_9_9;
   }

   void p2_epsiloncc_2_2_blending_q2::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_0_0 = 0;
      real_t Blending_DF_Tetrahedron_0_1 = 0;
      real_t Blending_DF_Tetrahedron_0_2 = 0;
      real_t Blending_DF_Tetrahedron_0_3 = 0;
      real_t Blending_DF_Tetrahedron_0_4 = 0;
      real_t Blending_DF_Tetrahedron_0_5 = 0;
      real_t Blending_DF_Tetrahedron_0_6 = 0;
      real_t Blending_DF_Tetrahedron_0_7 = 0;
      real_t Blending_DF_Tetrahedron_0_8 = 0;
      real_t Blending_DF_Tetrahedron_1_0 = 0;
      real_t Blending_DF_Tetrahedron_1_1 = 0;
      real_t Blending_DF_Tetrahedron_1_2 = 0;
      real_t Blending_DF_Tetrahedron_1_3 = 0;
      real_t Blending_DF_Tetrahedron_1_4 = 0;
      real_t Blending_DF_Tetrahedron_1_5 = 0;
      real_t Blending_DF_Tetrahedron_1_6 = 0;
      real_t Blending_DF_Tetrahedron_1_7 = 0;
      real_t Blending_DF_Tetrahedron_1_8 = 0;
      real_t Blending_DF_Tetrahedron_2_0 = 0;
      real_t Blending_DF_Tetrahedron_2_1 = 0;
      real_t Blending_DF_Tetrahedron_2_2 = 0;
      real_t Blending_DF_Tetrahedron_2_3 = 0;
      real_t Blending_DF_Tetrahedron_2_4 = 0;
      real_t Blending_DF_Tetrahedron_2_5 = 0;
      real_t Blending_DF_Tetrahedron_2_6 = 0;
      real_t Blending_DF_Tetrahedron_2_7 = 0;
      real_t Blending_DF_Tetrahedron_2_8 = 0;
      real_t Blending_DF_Tetrahedron_3_0 = 0;
      real_t Blending_DF_Tetrahedron_3_1 = 0;
      real_t Blending_DF_Tetrahedron_3_2 = 0;
      real_t Blending_DF_Tetrahedron_3_3 = 0;
      real_t Blending_DF_Tetrahedron_3_4 = 0;
      real_t Blending_DF_Tetrahedron_3_5 = 0;
      real_t Blending_DF_Tetrahedron_3_6 = 0;
      real_t Blending_DF_Tetrahedron_3_7 = 0;
      real_t Blending_DF_Tetrahedron_3_8 = 0;
      Blending_DF_Tetrahedron( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_0_0, &Blending_DF_Tetrahedron_0_1, &Blending_DF_Tetrahedron_0_2, &Blending_DF_Tetrahedron_0_3, &Blending_DF_Tetrahedron_0_4, &Blending_DF_Tetrahedron_0_5, &Blending_DF_Tetrahedron_0_6, &Blending_DF_Tetrahedron_0_7, &Blending_DF_Tetrahedron_0_8 );
      Blending_DF_Tetrahedron( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_1_0, &Blending_DF_Tetrahedron_1_1, &Blending_DF_Tetrahedron_1_2, &Blending_DF_Tetrahedron_1_3, &Blending_DF_Tetrahedron_1_4, &Blending_DF_Tetrahedron_1_5, &Blending_DF_Tetrahedron_1_6, &Blending_DF_Tetrahedron_1_7, &Blending_DF_Tetrahedron_1_8 );
      Blending_DF_Tetrahedron( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_2_0, &Blending_DF_Tetrahedron_2_1, &Blending_DF_Tetrahedron_2_2, &Blending_DF_Tetrahedron_2_3, &Blending_DF_Tetrahedron_2_4, &Blending_DF_Tetrahedron_2_5, &Blending_DF_Tetrahedron_2_6, &Blending_DF_Tetrahedron_2_7, &Blending_DF_Tetrahedron_2_8 );
      Blending_DF_Tetrahedron( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_3_0, &Blending_DF_Tetrahedron_3_1, &Blending_DF_Tetrahedron_3_2, &Blending_DF_Tetrahedron_3_3, &Blending_DF_Tetrahedron_3_4, &Blending_DF_Tetrahedron_3_5, &Blending_DF_Tetrahedron_3_6, &Blending_DF_Tetrahedron_3_7, &Blending_DF_Tetrahedron_3_8 );
      real_t tmp_0 = 0.55278640450004235;
      real_t tmp_1 = 0.55278640450004235;
      real_t tmp_2 = 2.3416407864998732;
      real_t tmp_3 = tmp_0 + tmp_1 + tmp_2 - 3.0;
      real_t tmp_4 = -p_affine_0_0;
      real_t tmp_5 = p_affine_1_0 + tmp_4;
      real_t tmp_6 = -p_affine_0_1;
      real_t tmp_7 = p_affine_2_1 + tmp_6;
      real_t tmp_8 = tmp_5*tmp_7;
      real_t tmp_9 = p_affine_2_0 + tmp_4;
      real_t tmp_10 = p_affine_1_1 + tmp_6;
      real_t tmp_11 = tmp_10*tmp_9;
      real_t tmp_12 = -tmp_11 + tmp_8;
      real_t tmp_13 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_4;
      real_t tmp_14 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_5;
      real_t tmp_15 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_3;
      real_t tmp_16 = Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_5;
      real_t tmp_17 = Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_3;
      real_t tmp_18 = Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_4;
      real_t tmp_19 = Blending_DF_Tetrahedron_0_6*tmp_14 - Blending_DF_Tetrahedron_0_6*tmp_18 + Blending_DF_Tetrahedron_0_7*tmp_15 - Blending_DF_Tetrahedron_0_7*tmp_16 + Blending_DF_Tetrahedron_0_8*tmp_13 - Blending_DF_Tetrahedron_0_8*tmp_17;
      real_t tmp_20 = -p_affine_0_2;
      real_t tmp_21 = p_affine_3_2 + tmp_20;
      real_t tmp_22 = p_affine_3_1 + tmp_6;
      real_t tmp_23 = p_affine_1_2 + tmp_20;
      real_t tmp_24 = tmp_23*tmp_9;
      real_t tmp_25 = p_affine_3_0 + tmp_4;
      real_t tmp_26 = p_affine_2_2 + tmp_20;
      real_t tmp_27 = tmp_10*tmp_26;
      real_t tmp_28 = tmp_26*tmp_5;
      real_t tmp_29 = tmp_23*tmp_7;
      real_t tmp_30 = 1.0 / (-tmp_11*tmp_21 + tmp_21*tmp_8 + tmp_22*tmp_24 - tmp_22*tmp_28 + tmp_25*tmp_27 - tmp_25*tmp_29);
      real_t tmp_31 = tmp_30/tmp_19;
      real_t tmp_32 = tmp_31*(-Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_7 + Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_6);
      real_t tmp_33 = tmp_24 - tmp_28;
      real_t tmp_34 = tmp_31*(Blending_DF_Tetrahedron_0_0*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_6);
      real_t tmp_35 = tmp_27 - tmp_29;
      real_t tmp_36 = tmp_31*(-Blending_DF_Tetrahedron_0_1*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_2*Blending_DF_Tetrahedron_0_7);
      real_t tmp_37 = tmp_12*tmp_32 + tmp_33*tmp_34 + tmp_35*tmp_36;
      real_t tmp_38 = tmp_3*tmp_37;
      real_t tmp_39 = tmp_10*tmp_25 - tmp_22*tmp_5;
      real_t tmp_40 = tmp_21*tmp_5 - tmp_23*tmp_25;
      real_t tmp_41 = -tmp_10*tmp_21 + tmp_22*tmp_23;
      real_t tmp_42 = tmp_32*tmp_39 + tmp_34*tmp_40 + tmp_36*tmp_41;
      real_t tmp_43 = tmp_3*tmp_42;
      real_t tmp_44 = tmp_22*tmp_9 - tmp_25*tmp_7;
      real_t tmp_45 = -tmp_21*tmp_9 + tmp_25*tmp_26;
      real_t tmp_46 = tmp_21*tmp_7 - tmp_22*tmp_26;
      real_t tmp_47 = tmp_32*tmp_44 + tmp_34*tmp_45 + tmp_36*tmp_46;
      real_t tmp_48 = tmp_3*tmp_47;
      real_t tmp_49 = 0.5*tmp_38 + 0.5*tmp_43 + 0.5*tmp_48;
      real_t tmp_50 = 2*tmp_49;
      real_t tmp_51 = tmp_31*(Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_7 - Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_6);
      real_t tmp_52 = tmp_31*(-Blending_DF_Tetrahedron_0_3*Blending_DF_Tetrahedron_0_8 + Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_6);
      real_t tmp_53 = tmp_31*(Blending_DF_Tetrahedron_0_4*Blending_DF_Tetrahedron_0_8 - Blending_DF_Tetrahedron_0_5*Blending_DF_Tetrahedron_0_7);
      real_t tmp_54 = tmp_12*tmp_51 + tmp_33*tmp_52 + tmp_35*tmp_53;
      real_t tmp_55 = tmp_3*tmp_54;
      real_t tmp_56 = tmp_39*tmp_51 + tmp_40*tmp_52 + tmp_41*tmp_53;
      real_t tmp_57 = tmp_3*tmp_56;
      real_t tmp_58 = tmp_44*tmp_51 + tmp_45*tmp_52 + tmp_46*tmp_53;
      real_t tmp_59 = tmp_3*tmp_58;
      real_t tmp_60 = 0.5*tmp_55 + 0.5*tmp_57 + 0.5*tmp_59;
      real_t tmp_61 = 2*tmp_60;
      real_t tmp_62 = tmp_31*(tmp_13 - tmp_17);
      real_t tmp_63 = tmp_31*(tmp_15 - tmp_16);
      real_t tmp_64 = tmp_31*(tmp_14 - tmp_18);
      real_t tmp_65 = tmp_12*tmp_62 + tmp_33*tmp_63 + tmp_35*tmp_64;
      real_t tmp_66 = 1.0*tmp_3;
      real_t tmp_67 = tmp_39*tmp_62 + tmp_40*tmp_63 + tmp_41*tmp_64;
      real_t tmp_68 = tmp_44*tmp_62 + tmp_45*tmp_63 + tmp_46*tmp_64;
      real_t tmp_69 = tmp_65*tmp_66 + tmp_66*tmp_67 + tmp_66*tmp_68;
      real_t tmp_70 = 2.0*tmp_3;
      real_t tmp_71 = p_affine_0_0*p_affine_1_1;
      real_t tmp_72 = p_affine_0_0*p_affine_1_2;
      real_t tmp_73 = p_affine_2_1*p_affine_3_2;
      real_t tmp_74 = p_affine_0_1*p_affine_1_0;
      real_t tmp_75 = p_affine_0_1*p_affine_1_2;
      real_t tmp_76 = p_affine_2_2*p_affine_3_0;
      real_t tmp_77 = p_affine_0_2*p_affine_1_0;
      real_t tmp_78 = p_affine_0_2*p_affine_1_1;
      real_t tmp_79 = p_affine_2_0*p_affine_3_1;
      real_t tmp_80 = p_affine_2_2*p_affine_3_1;
      real_t tmp_81 = p_affine_2_0*p_affine_3_2;
      real_t tmp_82 = p_affine_2_1*p_affine_3_0;
      real_t tmp_83 = std::abs(p_affine_0_0*tmp_73 - p_affine_0_0*tmp_80 + p_affine_0_1*tmp_76 - p_affine_0_1*tmp_81 + p_affine_0_2*tmp_79 - p_affine_0_2*tmp_82 - p_affine_1_0*tmp_73 + p_affine_1_0*tmp_80 - p_affine_1_1*tmp_76 + p_affine_1_1*tmp_81 - p_affine_1_2*tmp_79 + p_affine_1_2*tmp_82 + p_affine_2_0*tmp_75 - p_affine_2_0*tmp_78 - p_affine_2_1*tmp_72 + p_affine_2_1*tmp_77 + p_affine_2_2*tmp_71 - p_affine_2_2*tmp_74 - p_affine_3_0*tmp_75 + p_affine_3_0*tmp_78 + p_affine_3_1*tmp_72 - p_affine_3_1*tmp_77 - p_affine_3_2*tmp_71 + p_affine_3_2*tmp_74);
      real_t tmp_84 = 0.041666666666666657*tmp_83*std::abs(tmp_19);
      real_t tmp_85 = 0.55278640450004235;
      real_t tmp_86 = 2.3416407864998732;
      real_t tmp_87 = 0.55278640450004235;
      real_t tmp_88 = tmp_85 + tmp_86 + tmp_87 - 3.0;
      real_t tmp_89 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_4;
      real_t tmp_90 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_5;
      real_t tmp_91 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_3;
      real_t tmp_92 = Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_5;
      real_t tmp_93 = Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_3;
      real_t tmp_94 = Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_4;
      real_t tmp_95 = Blending_DF_Tetrahedron_1_6*tmp_90 - Blending_DF_Tetrahedron_1_6*tmp_94 + Blending_DF_Tetrahedron_1_7*tmp_91 - Blending_DF_Tetrahedron_1_7*tmp_92 + Blending_DF_Tetrahedron_1_8*tmp_89 - Blending_DF_Tetrahedron_1_8*tmp_93;
      real_t tmp_96 = tmp_30/tmp_95;
      real_t tmp_97 = tmp_96*(-Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_7 + Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_6);
      real_t tmp_98 = tmp_96*(Blending_DF_Tetrahedron_1_0*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_6);
      real_t tmp_99 = tmp_96*(-Blending_DF_Tetrahedron_1_1*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_2*Blending_DF_Tetrahedron_1_7);
      real_t tmp_100 = tmp_12*tmp_97 + tmp_33*tmp_98 + tmp_35*tmp_99;
      real_t tmp_101 = tmp_100*tmp_88;
      real_t tmp_102 = tmp_39*tmp_97 + tmp_40*tmp_98 + tmp_41*tmp_99;
      real_t tmp_103 = tmp_102*tmp_88;
      real_t tmp_104 = tmp_44*tmp_97 + tmp_45*tmp_98 + tmp_46*tmp_99;
      real_t tmp_105 = tmp_104*tmp_88;
      real_t tmp_106 = 0.5*tmp_101 + 0.5*tmp_103 + 0.5*tmp_105;
      real_t tmp_107 = 2*tmp_106;
      real_t tmp_108 = tmp_96*(Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_7 - Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_6);
      real_t tmp_109 = tmp_96*(-Blending_DF_Tetrahedron_1_3*Blending_DF_Tetrahedron_1_8 + Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_6);
      real_t tmp_110 = tmp_96*(Blending_DF_Tetrahedron_1_4*Blending_DF_Tetrahedron_1_8 - Blending_DF_Tetrahedron_1_5*Blending_DF_Tetrahedron_1_7);
      real_t tmp_111 = tmp_108*tmp_12 + tmp_109*tmp_33 + tmp_110*tmp_35;
      real_t tmp_112 = tmp_111*tmp_88;
      real_t tmp_113 = tmp_108*tmp_39 + tmp_109*tmp_40 + tmp_110*tmp_41;
      real_t tmp_114 = tmp_113*tmp_88;
      real_t tmp_115 = tmp_108*tmp_44 + tmp_109*tmp_45 + tmp_110*tmp_46;
      real_t tmp_116 = tmp_115*tmp_88;
      real_t tmp_117 = 0.5*tmp_112 + 0.5*tmp_114 + 0.5*tmp_116;
      real_t tmp_118 = 2*tmp_117;
      real_t tmp_119 = tmp_96*(tmp_89 - tmp_93);
      real_t tmp_120 = tmp_96*(tmp_91 - tmp_92);
      real_t tmp_121 = tmp_96*(tmp_90 - tmp_94);
      real_t tmp_122 = tmp_119*tmp_12 + tmp_120*tmp_33 + tmp_121*tmp_35;
      real_t tmp_123 = 1.0*tmp_88;
      real_t tmp_124 = tmp_119*tmp_39 + tmp_120*tmp_40 + tmp_121*tmp_41;
      real_t tmp_125 = tmp_119*tmp_44 + tmp_120*tmp_45 + tmp_121*tmp_46;
      real_t tmp_126 = tmp_122*tmp_123 + tmp_123*tmp_124 + tmp_123*tmp_125;
      real_t tmp_127 = 2.0*tmp_88;
      real_t tmp_128 = 0.041666666666666657*tmp_83*std::abs(tmp_95);
      real_t tmp_129 = 2.3416407864998732;
      real_t tmp_130 = 0.55278640450004235;
      real_t tmp_131 = 0.55278640450004235;
      real_t tmp_132 = tmp_129 + tmp_130 + tmp_131 - 3.0;
      real_t tmp_133 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_4;
      real_t tmp_134 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_5;
      real_t tmp_135 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_3;
      real_t tmp_136 = Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_5;
      real_t tmp_137 = Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_3;
      real_t tmp_138 = Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_4;
      real_t tmp_139 = Blending_DF_Tetrahedron_2_6*tmp_134 - Blending_DF_Tetrahedron_2_6*tmp_138 + Blending_DF_Tetrahedron_2_7*tmp_135 - Blending_DF_Tetrahedron_2_7*tmp_136 + Blending_DF_Tetrahedron_2_8*tmp_133 - Blending_DF_Tetrahedron_2_8*tmp_137;
      real_t tmp_140 = tmp_30/tmp_139;
      real_t tmp_141 = tmp_140*(-Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_7 + Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_6);
      real_t tmp_142 = tmp_140*(Blending_DF_Tetrahedron_2_0*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_6);
      real_t tmp_143 = tmp_140*(-Blending_DF_Tetrahedron_2_1*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_2*Blending_DF_Tetrahedron_2_7);
      real_t tmp_144 = tmp_12*tmp_141 + tmp_142*tmp_33 + tmp_143*tmp_35;
      real_t tmp_145 = tmp_132*tmp_144;
      real_t tmp_146 = tmp_141*tmp_39 + tmp_142*tmp_40 + tmp_143*tmp_41;
      real_t tmp_147 = tmp_132*tmp_146;
      real_t tmp_148 = tmp_141*tmp_44 + tmp_142*tmp_45 + tmp_143*tmp_46;
      real_t tmp_149 = tmp_132*tmp_148;
      real_t tmp_150 = 0.5*tmp_145 + 0.5*tmp_147 + 0.5*tmp_149;
      real_t tmp_151 = 2*tmp_150;
      real_t tmp_152 = tmp_140*(Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_7 - Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_6);
      real_t tmp_153 = tmp_140*(-Blending_DF_Tetrahedron_2_3*Blending_DF_Tetrahedron_2_8 + Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_6);
      real_t tmp_154 = tmp_140*(Blending_DF_Tetrahedron_2_4*Blending_DF_Tetrahedron_2_8 - Blending_DF_Tetrahedron_2_5*Blending_DF_Tetrahedron_2_7);
      real_t tmp_155 = tmp_12*tmp_152 + tmp_153*tmp_33 + tmp_154*tmp_35;
      real_t tmp_156 = tmp_132*tmp_155;
      real_t tmp_157 = tmp_152*tmp_39 + tmp_153*tmp_40 + tmp_154*tmp_41;
      real_t tmp_158 = tmp_132*tmp_157;
      real_t tmp_159 = tmp_152*tmp_44 + tmp_153*tmp_45 + tmp_154*tmp_46;
      real_t tmp_160 = tmp_132*tmp_159;
      real_t tmp_161 = 0.5*tmp_156 + 0.5*tmp_158 + 0.5*tmp_160;
      real_t tmp_162 = 2*tmp_161;
      real_t tmp_163 = tmp_140*(tmp_133 - tmp_137);
      real_t tmp_164 = tmp_140*(tmp_135 - tmp_136);
      real_t tmp_165 = tmp_140*(tmp_134 - tmp_138);
      real_t tmp_166 = tmp_12*tmp_163 + tmp_164*tmp_33 + tmp_165*tmp_35;
      real_t tmp_167 = 1.0*tmp_132;
      real_t tmp_168 = tmp_163*tmp_39 + tmp_164*tmp_40 + tmp_165*tmp_41;
      real_t tmp_169 = tmp_163*tmp_44 + tmp_164*tmp_45 + tmp_165*tmp_46;
      real_t tmp_170 = tmp_166*tmp_167 + tmp_167*tmp_168 + tmp_167*tmp_169;
      real_t tmp_171 = 2.0*tmp_132;
      real_t tmp_172 = 0.041666666666666657*tmp_83*std::abs(tmp_139);
      real_t tmp_173 = 0.55278640450004235;
      real_t tmp_174 = 0.55278640450004235;
      real_t tmp_175 = 0.55278640450004235;
      real_t tmp_176 = tmp_173 + tmp_174 + tmp_175 - 3.0;
      real_t tmp_177 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_4;
      real_t tmp_178 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_5;
      real_t tmp_179 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_3;
      real_t tmp_180 = Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_5;
      real_t tmp_181 = Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_3;
      real_t tmp_182 = Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_4;
      real_t tmp_183 = Blending_DF_Tetrahedron_3_6*tmp_178 - Blending_DF_Tetrahedron_3_6*tmp_182 + Blending_DF_Tetrahedron_3_7*tmp_179 - Blending_DF_Tetrahedron_3_7*tmp_180 + Blending_DF_Tetrahedron_3_8*tmp_177 - Blending_DF_Tetrahedron_3_8*tmp_181;
      real_t tmp_184 = tmp_30/tmp_183;
      real_t tmp_185 = tmp_184*(-Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_7 + Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_6);
      real_t tmp_186 = tmp_184*(Blending_DF_Tetrahedron_3_0*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_6);
      real_t tmp_187 = tmp_184*(-Blending_DF_Tetrahedron_3_1*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_2*Blending_DF_Tetrahedron_3_7);
      real_t tmp_188 = tmp_12*tmp_185 + tmp_186*tmp_33 + tmp_187*tmp_35;
      real_t tmp_189 = tmp_176*tmp_188;
      real_t tmp_190 = tmp_185*tmp_39 + tmp_186*tmp_40 + tmp_187*tmp_41;
      real_t tmp_191 = tmp_176*tmp_190;
      real_t tmp_192 = tmp_185*tmp_44 + tmp_186*tmp_45 + tmp_187*tmp_46;
      real_t tmp_193 = tmp_176*tmp_192;
      real_t tmp_194 = 0.5*tmp_189 + 0.5*tmp_191 + 0.5*tmp_193;
      real_t tmp_195 = 2*tmp_194;
      real_t tmp_196 = tmp_184*(Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_7 - Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_6);
      real_t tmp_197 = tmp_184*(-Blending_DF_Tetrahedron_3_3*Blending_DF_Tetrahedron_3_8 + Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_6);
      real_t tmp_198 = tmp_184*(Blending_DF_Tetrahedron_3_4*Blending_DF_Tetrahedron_3_8 - Blending_DF_Tetrahedron_3_5*Blending_DF_Tetrahedron_3_7);
      real_t tmp_199 = tmp_12*tmp_196 + tmp_197*tmp_33 + tmp_198*tmp_35;
      real_t tmp_200 = tmp_176*tmp_199;
      real_t tmp_201 = tmp_196*tmp_39 + tmp_197*tmp_40 + tmp_198*tmp_41;
      real_t tmp_202 = tmp_176*tmp_201;
      real_t tmp_203 = tmp_196*tmp_44 + tmp_197*tmp_45 + tmp_198*tmp_46;
      real_t tmp_204 = tmp_176*tmp_203;
      real_t tmp_205 = 0.5*tmp_200 + 0.5*tmp_202 + 0.5*tmp_204;
      real_t tmp_206 = 2*tmp_205;
      real_t tmp_207 = tmp_184*(tmp_177 - tmp_181);
      real_t tmp_208 = tmp_184*(tmp_179 - tmp_180);
      real_t tmp_209 = tmp_184*(tmp_178 - tmp_182);
      real_t tmp_210 = tmp_12*tmp_207 + tmp_208*tmp_33 + tmp_209*tmp_35;
      real_t tmp_211 = 1.0*tmp_176;
      real_t tmp_212 = tmp_207*tmp_39 + tmp_208*tmp_40 + tmp_209*tmp_41;
      real_t tmp_213 = tmp_207*tmp_44 + tmp_208*tmp_45 + tmp_209*tmp_46;
      real_t tmp_214 = tmp_210*tmp_211 + tmp_211*tmp_212 + tmp_211*tmp_213;
      real_t tmp_215 = 2.0*tmp_176;
      real_t tmp_216 = 0.041666666666666657*tmp_83*std::abs(tmp_183);
      real_t tmp_217 = tmp_0 - 1.0;
      real_t tmp_218 = 2.0*tmp_68;
      real_t tmp_219 = 2.0*tmp_217;
      real_t tmp_220 = tmp_85 - 1.0;
      real_t tmp_221 = 2.0*tmp_125;
      real_t tmp_222 = 2.0*tmp_220;
      real_t tmp_223 = tmp_129 - 1.0;
      real_t tmp_224 = 2.0*tmp_169;
      real_t tmp_225 = 2.0*tmp_223;
      real_t tmp_226 = tmp_173 - 1.0;
      real_t tmp_227 = 2.0*tmp_213;
      real_t tmp_228 = 2.0*tmp_226;
      real_t tmp_229 = tmp_1 - 1.0;
      real_t tmp_230 = 2.0*tmp_67;
      real_t tmp_231 = 2.0*tmp_229;
      real_t tmp_232 = tmp_86 - 1.0;
      real_t tmp_233 = 2.0*tmp_124;
      real_t tmp_234 = 2.0*tmp_232;
      real_t tmp_235 = tmp_130 - 1.0;
      real_t tmp_236 = 2.0*tmp_168;
      real_t tmp_237 = 2.0*tmp_235;
      real_t tmp_238 = tmp_174 - 1.0;
      real_t tmp_239 = 2.0*tmp_212;
      real_t tmp_240 = 2.0*tmp_238;
      real_t tmp_241 = tmp_2 - 1.0;
      real_t tmp_242 = 2.0*tmp_65;
      real_t tmp_243 = 2.0*tmp_241;
      real_t tmp_244 = tmp_87 - 1.0;
      real_t tmp_245 = 2.0*tmp_122;
      real_t tmp_246 = 2.0*tmp_244;
      real_t tmp_247 = tmp_131 - 1.0;
      real_t tmp_248 = 2.0*tmp_166;
      real_t tmp_249 = 2.0*tmp_247;
      real_t tmp_250 = tmp_175 - 1.0;
      real_t tmp_251 = 2.0*tmp_210;
      real_t tmp_252 = 2.0*tmp_250;
      real_t tmp_253 = 1.1055728090000847;
      real_t tmp_254 = tmp_253*tmp_65;
      real_t tmp_255 = 4.6832815729997463;
      real_t tmp_256 = tmp_255*tmp_67;
      real_t tmp_257 = tmp_1*tmp_37;
      real_t tmp_258 = tmp_2*tmp_42;
      real_t tmp_259 = tmp_1*tmp_54;
      real_t tmp_260 = tmp_2*tmp_56;
      real_t tmp_261 = 4.6832815729997463;
      real_t tmp_262 = tmp_122*tmp_261;
      real_t tmp_263 = 1.1055728090000847;
      real_t tmp_264 = tmp_124*tmp_263;
      real_t tmp_265 = tmp_100*tmp_86;
      real_t tmp_266 = tmp_102*tmp_87;
      real_t tmp_267 = tmp_111*tmp_86;
      real_t tmp_268 = tmp_113*tmp_87;
      real_t tmp_269 = 1.1055728090000847;
      real_t tmp_270 = tmp_166*tmp_269;
      real_t tmp_271 = 1.1055728090000847;
      real_t tmp_272 = tmp_168*tmp_271;
      real_t tmp_273 = tmp_130*tmp_144;
      real_t tmp_274 = tmp_131*tmp_146;
      real_t tmp_275 = tmp_130*tmp_155;
      real_t tmp_276 = tmp_131*tmp_157;
      real_t tmp_277 = 1.1055728090000847;
      real_t tmp_278 = tmp_210*tmp_277;
      real_t tmp_279 = 1.1055728090000847;
      real_t tmp_280 = tmp_212*tmp_279;
      real_t tmp_281 = tmp_174*tmp_188;
      real_t tmp_282 = tmp_175*tmp_190;
      real_t tmp_283 = tmp_174*tmp_199;
      real_t tmp_284 = tmp_175*tmp_201;
      real_t tmp_285 = 1.1055728090000847;
      real_t tmp_286 = tmp_285*tmp_65;
      real_t tmp_287 = tmp_255*tmp_68;
      real_t tmp_288 = tmp_0*tmp_37;
      real_t tmp_289 = tmp_2*tmp_47;
      real_t tmp_290 = tmp_0*tmp_54;
      real_t tmp_291 = tmp_2*tmp_58;
      real_t tmp_292 = 1.1055728090000847;
      real_t tmp_293 = tmp_122*tmp_292;
      real_t tmp_294 = tmp_125*tmp_263;
      real_t tmp_295 = tmp_100*tmp_85;
      real_t tmp_296 = tmp_104*tmp_87;
      real_t tmp_297 = tmp_111*tmp_85;
      real_t tmp_298 = tmp_115*tmp_87;
      real_t tmp_299 = 4.6832815729997463;
      real_t tmp_300 = tmp_166*tmp_299;
      real_t tmp_301 = tmp_169*tmp_271;
      real_t tmp_302 = tmp_129*tmp_144;
      real_t tmp_303 = tmp_131*tmp_148;
      real_t tmp_304 = tmp_129*tmp_155;
      real_t tmp_305 = tmp_131*tmp_159;
      real_t tmp_306 = 1.1055728090000847;
      real_t tmp_307 = tmp_210*tmp_306;
      real_t tmp_308 = tmp_213*tmp_279;
      real_t tmp_309 = tmp_173*tmp_188;
      real_t tmp_310 = tmp_175*tmp_192;
      real_t tmp_311 = tmp_173*tmp_199;
      real_t tmp_312 = tmp_175*tmp_203;
      real_t tmp_313 = tmp_285*tmp_67;
      real_t tmp_314 = tmp_253*tmp_68;
      real_t tmp_315 = tmp_0*tmp_42;
      real_t tmp_316 = tmp_1*tmp_47;
      real_t tmp_317 = tmp_0*tmp_56;
      real_t tmp_318 = tmp_1*tmp_58;
      real_t tmp_319 = tmp_124*tmp_292;
      real_t tmp_320 = tmp_125*tmp_261;
      real_t tmp_321 = tmp_102*tmp_85;
      real_t tmp_322 = tmp_104*tmp_86;
      real_t tmp_323 = tmp_113*tmp_85;
      real_t tmp_324 = tmp_115*tmp_86;
      real_t tmp_325 = tmp_168*tmp_299;
      real_t tmp_326 = tmp_169*tmp_269;
      real_t tmp_327 = tmp_129*tmp_146;
      real_t tmp_328 = tmp_130*tmp_148;
      real_t tmp_329 = tmp_129*tmp_157;
      real_t tmp_330 = tmp_130*tmp_159;
      real_t tmp_331 = tmp_212*tmp_306;
      real_t tmp_332 = tmp_213*tmp_277;
      real_t tmp_333 = tmp_173*tmp_190;
      real_t tmp_334 = tmp_174*tmp_192;
      real_t tmp_335 = tmp_173*tmp_201;
      real_t tmp_336 = tmp_174*tmp_203;
      real_t tmp_337 = -tmp_1;
      real_t tmp_338 = 4.0 - tmp_0;
      real_t tmp_339 = -tmp_255 + tmp_337 + tmp_338;
      real_t tmp_340 = -tmp_86;
      real_t tmp_341 = 4.0 - tmp_85;
      real_t tmp_342 = -tmp_263 + tmp_340 + tmp_341;
      real_t tmp_343 = -tmp_130;
      real_t tmp_344 = 4.0 - tmp_129;
      real_t tmp_345 = -tmp_271 + tmp_343 + tmp_344;
      real_t tmp_346 = -tmp_174;
      real_t tmp_347 = 4.0 - tmp_173;
      real_t tmp_348 = -tmp_279 + tmp_346 + tmp_347;
      real_t tmp_349 = -tmp_2;
      real_t tmp_350 = -tmp_253 + tmp_338 + tmp_349;
      real_t tmp_351 = -tmp_87;
      real_t tmp_352 = -tmp_261 + tmp_341 + tmp_351;
      real_t tmp_353 = -tmp_131;
      real_t tmp_354 = -tmp_269 + tmp_344 + tmp_353;
      real_t tmp_355 = -tmp_175;
      real_t tmp_356 = -tmp_277 + tmp_347 + tmp_355;
      real_t tmp_357 = -tmp_285 + tmp_337 + tmp_349 + 4.0;
      real_t tmp_358 = -tmp_292 + tmp_340 + tmp_351 + 4.0;
      real_t tmp_359 = -tmp_299 + tmp_343 + tmp_353 + 4.0;
      real_t tmp_360 = -tmp_306 + tmp_346 + tmp_355 + 4.0;
      real_t a_0_0 = tmp_128*(tmp_107*(tmp_101 + tmp_103 + tmp_105) + tmp_118*(tmp_112 + tmp_114 + tmp_116) + tmp_126*(tmp_122*tmp_127 + tmp_124*tmp_127 + tmp_125*tmp_127)) + tmp_172*(tmp_151*(tmp_145 + tmp_147 + tmp_149) + tmp_162*(tmp_156 + tmp_158 + tmp_160) + tmp_170*(tmp_166*tmp_171 + tmp_168*tmp_171 + tmp_169*tmp_171)) + tmp_216*(tmp_195*(tmp_189 + tmp_191 + tmp_193) + tmp_206*(tmp_200 + tmp_202 + tmp_204) + tmp_214*(tmp_210*tmp_215 + tmp_212*tmp_215 + tmp_213*tmp_215)) + tmp_84*(tmp_50*(tmp_38 + tmp_43 + tmp_48) + tmp_61*(tmp_55 + tmp_57 + tmp_59) + tmp_69*(tmp_65*tmp_70 + tmp_67*tmp_70 + tmp_68*tmp_70));
      real_t a_0_1 = tmp_128*(tmp_104*tmp_106*tmp_222 + tmp_115*tmp_117*tmp_222 + tmp_126*tmp_220*tmp_221) + tmp_172*(tmp_148*tmp_150*tmp_225 + tmp_159*tmp_161*tmp_225 + tmp_170*tmp_223*tmp_224) + tmp_216*(tmp_192*tmp_194*tmp_228 + tmp_203*tmp_205*tmp_228 + tmp_214*tmp_226*tmp_227) + tmp_84*(tmp_217*tmp_218*tmp_69 + tmp_219*tmp_47*tmp_49 + tmp_219*tmp_58*tmp_60);
      real_t a_0_2 = tmp_128*(tmp_102*tmp_106*tmp_234 + tmp_113*tmp_117*tmp_234 + tmp_126*tmp_232*tmp_233) + tmp_172*(tmp_146*tmp_150*tmp_237 + tmp_157*tmp_161*tmp_237 + tmp_170*tmp_235*tmp_236) + tmp_216*(tmp_190*tmp_194*tmp_240 + tmp_201*tmp_205*tmp_240 + tmp_214*tmp_238*tmp_239) + tmp_84*(tmp_229*tmp_230*tmp_69 + tmp_231*tmp_42*tmp_49 + tmp_231*tmp_56*tmp_60);
      real_t a_0_3 = tmp_128*(tmp_100*tmp_106*tmp_246 + tmp_111*tmp_117*tmp_246 + tmp_126*tmp_244*tmp_245) + tmp_172*(tmp_144*tmp_150*tmp_249 + tmp_155*tmp_161*tmp_249 + tmp_170*tmp_247*tmp_248) + tmp_216*(tmp_188*tmp_194*tmp_252 + tmp_199*tmp_205*tmp_252 + tmp_214*tmp_250*tmp_251) + tmp_84*(tmp_241*tmp_242*tmp_69 + tmp_243*tmp_37*tmp_49 + tmp_243*tmp_54*tmp_60);
      real_t a_0_4 = tmp_128*(tmp_107*(tmp_265 + tmp_266) + tmp_118*(tmp_267 + tmp_268) + tmp_126*(tmp_262 + tmp_264)) + tmp_172*(tmp_151*(tmp_273 + tmp_274) + tmp_162*(tmp_275 + tmp_276) + tmp_170*(tmp_270 + tmp_272)) + tmp_216*(tmp_195*(tmp_281 + tmp_282) + tmp_206*(tmp_283 + tmp_284) + tmp_214*(tmp_278 + tmp_280)) + tmp_84*(tmp_50*(tmp_257 + tmp_258) + tmp_61*(tmp_259 + tmp_260) + tmp_69*(tmp_254 + tmp_256));
      real_t a_0_5 = tmp_128*(tmp_107*(tmp_295 + tmp_296) + tmp_118*(tmp_297 + tmp_298) + tmp_126*(tmp_293 + tmp_294)) + tmp_172*(tmp_151*(tmp_302 + tmp_303) + tmp_162*(tmp_304 + tmp_305) + tmp_170*(tmp_300 + tmp_301)) + tmp_216*(tmp_195*(tmp_309 + tmp_310) + tmp_206*(tmp_311 + tmp_312) + tmp_214*(tmp_307 + tmp_308)) + tmp_84*(tmp_50*(tmp_288 + tmp_289) + tmp_61*(tmp_290 + tmp_291) + tmp_69*(tmp_286 + tmp_287));
      real_t a_0_6 = tmp_128*(tmp_107*(tmp_321 + tmp_322) + tmp_118*(tmp_323 + tmp_324) + tmp_126*(tmp_319 + tmp_320)) + tmp_172*(tmp_151*(tmp_327 + tmp_328) + tmp_162*(tmp_329 + tmp_330) + tmp_170*(tmp_325 + tmp_326)) + tmp_216*(tmp_195*(tmp_333 + tmp_334) + tmp_206*(tmp_335 + tmp_336) + tmp_214*(tmp_331 + tmp_332)) + tmp_84*(tmp_50*(tmp_315 + tmp_316) + tmp_61*(tmp_317 + tmp_318) + tmp_69*(tmp_313 + tmp_314));
      real_t a_0_7 = tmp_128*(tmp_107*(tmp_100*tmp_342 - tmp_266 - tmp_296) + tmp_118*(tmp_111*tmp_342 - tmp_268 - tmp_298) + tmp_126*(tmp_245*tmp_342 - tmp_264 - tmp_294)) + tmp_172*(tmp_151*(tmp_144*tmp_345 - tmp_274 - tmp_303) + tmp_162*(tmp_155*tmp_345 - tmp_276 - tmp_305) + tmp_170*(tmp_248*tmp_345 - tmp_272 - tmp_301)) + tmp_216*(tmp_195*(tmp_188*tmp_348 - tmp_282 - tmp_310) + tmp_206*(tmp_199*tmp_348 - tmp_284 - tmp_312) + tmp_214*(tmp_251*tmp_348 - tmp_280 - tmp_308)) + tmp_84*(tmp_50*(-tmp_258 - tmp_289 + tmp_339*tmp_37) + tmp_61*(-tmp_260 - tmp_291 + tmp_339*tmp_54) + tmp_69*(tmp_242*tmp_339 - tmp_256 - tmp_287));
      real_t a_0_8 = tmp_128*(tmp_107*(tmp_102*tmp_352 - tmp_265 - tmp_322) + tmp_118*(tmp_113*tmp_352 - tmp_267 - tmp_324) + tmp_126*(tmp_233*tmp_352 - tmp_262 - tmp_320)) + tmp_172*(tmp_151*(tmp_146*tmp_354 - tmp_273 - tmp_328) + tmp_162*(tmp_157*tmp_354 - tmp_275 - tmp_330) + tmp_170*(tmp_236*tmp_354 - tmp_270 - tmp_326)) + tmp_216*(tmp_195*(tmp_190*tmp_356 - tmp_281 - tmp_334) + tmp_206*(tmp_201*tmp_356 - tmp_283 - tmp_336) + tmp_214*(tmp_239*tmp_356 - tmp_278 - tmp_332)) + tmp_84*(tmp_50*(-tmp_257 - tmp_316 + tmp_350*tmp_42) + tmp_61*(-tmp_259 - tmp_318 + tmp_350*tmp_56) + tmp_69*(tmp_230*tmp_350 - tmp_254 - tmp_314));
      real_t a_0_9 = tmp_128*(tmp_107*(tmp_104*tmp_358 - tmp_295 - tmp_321) + tmp_118*(tmp_115*tmp_358 - tmp_297 - tmp_323) + tmp_126*(tmp_221*tmp_358 - tmp_293 - tmp_319)) + tmp_172*(tmp_151*(tmp_148*tmp_359 - tmp_302 - tmp_327) + tmp_162*(tmp_159*tmp_359 - tmp_304 - tmp_329) + tmp_170*(tmp_224*tmp_359 - tmp_300 - tmp_325)) + tmp_216*(tmp_195*(tmp_192*tmp_360 - tmp_309 - tmp_333) + tmp_206*(tmp_203*tmp_360 - tmp_311 - tmp_335) + tmp_214*(tmp_227*tmp_360 - tmp_307 - tmp_331)) + tmp_84*(tmp_50*(-tmp_288 - tmp_315 + tmp_357*tmp_47) + tmp_61*(-tmp_290 - tmp_317 + tmp_357*tmp_58) + tmp_69*(tmp_218*tmp_357 - tmp_286 - tmp_313));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(0, 6)) = a_0_6;
      (elMat(0, 7)) = a_0_7;
      (elMat(0, 8)) = a_0_8;
      (elMat(0, 9)) = a_0_9;
   }

   void p2_epsiloncc_2_2_blending_q2::Blending_DF_Tetrahedron( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( in_0, in_1, in_2 );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
