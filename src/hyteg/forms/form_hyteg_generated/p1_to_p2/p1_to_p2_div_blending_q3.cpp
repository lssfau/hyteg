/*
* Copyright (c) 2023 Andreas Burkhart
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

// This file has been generated with the AHFC. If buggy try fixing the generator itself.

#include "p1_to_p2_div_blending_q3.hpp"

namespace hyteg {
namespace forms {

   void p1_to_p2_div_0_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 3 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(1, 0);
      const real_t tmp8 = tmp6*J_B_1(1, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = -tmp10 - tmp9;
      const real_t tmp12 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp13 = tmp12*std::abs(tmp5);
      const real_t tmp14 = 0.0053844320361136127*tmp13;
      const real_t tmp15 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp16 = tmp4/tmp15;
      const real_t tmp17 = tmp16*J_B_2(1, 0);
      const real_t tmp18 = tmp16*J_B_2(1, 1);
      const real_t tmp19 = tmp0*tmp17 - tmp18*tmp2;
      const real_t tmp20 = tmp1*tmp17 - tmp18*tmp3;
      const real_t tmp21 = -tmp19 - tmp20;
      const real_t tmp22 = tmp12*std::abs(tmp15);
      const real_t tmp23 = 0.0094636161207672757*tmp22;
      const real_t tmp24 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp25 = tmp4/tmp24;
      const real_t tmp26 = tmp25*J_B_3(1, 0);
      const real_t tmp27 = tmp25*J_B_3(1, 1);
      const real_t tmp28 = tmp0*tmp26 - tmp2*tmp27;
      const real_t tmp29 = tmp1*tmp26 - tmp27*tmp3;
      const real_t tmp30 = -tmp28 - tmp29;
      const real_t tmp31 = tmp12*std::abs(tmp24);
      const real_t tmp32 = 0.0053844320361136231*tmp31;
      const real_t tmp33 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp34 = std::abs(tmp33);
      const real_t tmp35 = tmp4/tmp33;
      const real_t tmp36 = tmp35*J_B_4(1, 0);
      const real_t tmp37 = tmp35*J_B_4(1, 1);
      const real_t tmp38 = tmp0*tmp36 - tmp2*tmp37;
      const real_t tmp39 = tmp1*tmp36 - tmp3*tmp37;
      const real_t tmp40 = -tmp38 - tmp39;
      const real_t tmp41 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp42 = tmp4/tmp41;
      const real_t tmp43 = tmp42*J_B_5(1, 0);
      const real_t tmp44 = tmp42*J_B_5(1, 1);
      const real_t tmp45 = tmp0*tmp43 - tmp2*tmp44;
      const real_t tmp46 = tmp1*tmp43 - tmp3*tmp44;
      const real_t tmp47 = -tmp45 - tmp46;
      const real_t tmp48 = std::abs(tmp41);
      const real_t tmp49 = tmp12*tmp48;
      const real_t tmp50 = 0.0041124045469858117*tmp49;
      const real_t tmp51 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp52 = tmp4/tmp51;
      const real_t tmp53 = tmp52*J_B_6(1, 0);
      const real_t tmp54 = tmp52*J_B_6(1, 1);
      const real_t tmp55 = tmp0*tmp53 - tmp2*tmp54;
      const real_t tmp56 = tmp1*tmp53 - tmp3*tmp54;
      const real_t tmp57 = -tmp55 - tmp56;
      const real_t tmp58 = std::abs(tmp51);
      const real_t tmp59 = tmp12*tmp58;
      const real_t tmp60 = 0.0041124045469858326*tmp59;
      const real_t tmp61 = 0.0053844320361136223*tmp13;
      const real_t tmp62 = 0.0053844320361136032*tmp22;
      const real_t tmp63 = 0.0094636161207672567*tmp31;
      const real_t tmp64 = tmp12*tmp34;
      const real_t tmp65 = 0.0041124045469858516*tmp64;
      const real_t tmp66 = 0.0041124045469858282*tmp59;
      const real_t tmp67 = 0.0094636161207672688*tmp13;
      const real_t tmp68 = 0.0053844320361136466*tmp22;
      const real_t tmp69 = 0.0053844320361135928*tmp31;
      const real_t tmp70 = 0.0041124045469858204*tmp64;
      const real_t tmp71 = 0.0041124045469858395*tmp49;
      const real_t tmp72 = 0.016449618187943368*tmp49;
      const real_t tmp73 = 0.088847818743091167*tmp22;
      const real_t tmp74 = 0.021537728144454461*tmp31;
      const real_t tmp75 = 0.0018441552587796545*tmp64;
      const real_t tmp76 = 0.016449618187943313*tmp59;
      const real_t tmp77 = 0.021537728144454479*tmp13;
      const real_t tmp78 = tmp11*tmp77 + tmp57*tmp76;
      const real_t tmp79 = tmp55*tmp76 + tmp77*tmp9;
      const real_t tmp80 = tmp10*tmp77 + tmp56*tmp76;
      const real_t tmp81 = 0.088847818743091223*tmp31;
      const real_t tmp82 = 0.016449618187943264*tmp64;
      const real_t tmp83 = 0.021537728144454475*tmp22;
      const real_t tmp84 = 0.0018441552587796499*tmp49;
      const real_t tmp85 = 0.088847818743091181*tmp13;
      const real_t tmp86 = 0.021537728144454499*tmp22;
      const real_t tmp87 = 0.021537728144454441*tmp31;
      const real_t tmp88 = 0.016449618187943424*tmp64;
      const real_t tmp89 = 0.016449618187943289*tmp49;
      const real_t tmp90 = 0.0018441552587796454*tmp59;
      elMat(0,0) = -tmp11*tmp14 + 0.028457289286966149*tmp12*tmp34*tmp40 - tmp21*tmp23 - tmp30*tmp32 - tmp47*tmp50 - tmp57*tmp60;
      elMat(0,1) = 0.028457289286966149*tmp12*tmp34*tmp38 - tmp14*tmp9 - tmp19*tmp23 - tmp28*tmp32 - tmp45*tmp50 - tmp55*tmp60;
      elMat(0,2) = -tmp10*tmp14 + 0.028457289286966149*tmp12*tmp34*tmp39 - tmp20*tmp23 - tmp29*tmp32 - tmp46*tmp50 - tmp56*tmp60;
      elMat(1,0) = -tmp11*tmp61 + 0.028457289286966173*tmp12*tmp47*tmp48 - tmp21*tmp62 - tmp30*tmp63 - tmp40*tmp65 - tmp57*tmp66;
      elMat(1,1) = 0.028457289286966173*tmp12*tmp45*tmp48 - tmp19*tmp62 - tmp28*tmp63 - tmp38*tmp65 - tmp55*tmp66 - tmp61*tmp9;
      elMat(1,2) = -tmp10*tmp61 + 0.028457289286966173*tmp12*tmp46*tmp48 - tmp20*tmp62 - tmp29*tmp63 - tmp39*tmp65 - tmp56*tmp66;
      elMat(2,0) = -tmp11*tmp67 + 0.028457289286966198*tmp12*tmp57*tmp58 - tmp21*tmp68 - tmp30*tmp69 - tmp40*tmp70 - tmp47*tmp71;
      elMat(2,1) = 0.028457289286966198*tmp12*tmp55*tmp58 - tmp19*tmp68 - tmp28*tmp69 - tmp38*tmp70 - tmp45*tmp71 - tmp67*tmp9;
      elMat(2,2) = -tmp10*tmp67 + 0.028457289286966198*tmp12*tmp56*tmp58 - tmp20*tmp68 - tmp29*tmp69 - tmp39*tmp70 - tmp46*tmp71;
      elMat(3,0) = tmp21*tmp73 + tmp30*tmp74 + tmp40*tmp75 + tmp47*tmp72 + tmp78;
      elMat(3,1) = tmp19*tmp73 + tmp28*tmp74 + tmp38*tmp75 + tmp45*tmp72 + tmp79;
      elMat(3,2) = tmp20*tmp73 + tmp29*tmp74 + tmp39*tmp75 + tmp46*tmp72 + tmp80;
      elMat(4,0) = tmp21*tmp83 + tmp30*tmp81 + tmp40*tmp82 + tmp47*tmp84 + tmp78;
      elMat(4,1) = tmp19*tmp83 + tmp28*tmp81 + tmp38*tmp82 + tmp45*tmp84 + tmp79;
      elMat(4,2) = tmp20*tmp83 + tmp29*tmp81 + tmp39*tmp82 + tmp46*tmp84 + tmp80;
      elMat(5,0) = tmp11*tmp85 + tmp21*tmp86 + tmp30*tmp87 + tmp40*tmp88 + tmp47*tmp89 + tmp57*tmp90;
      elMat(5,1) = tmp19*tmp86 + tmp28*tmp87 + tmp38*tmp88 + tmp45*tmp89 + tmp55*tmp90 + tmp85*tmp9;
      elMat(5,2) = tmp10*tmp85 + tmp20*tmp86 + tmp29*tmp87 + tmp39*tmp88 + tmp46*tmp89 + tmp56*tmp90;
   }

   void p1_to_p2_div_0_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(1, 0);
      const real_t tmp8 = tmp6*J_B_1(1, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp12 = 0.0053844320361136127*tmp11*std::abs(tmp5);
      const real_t tmp13 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp14 = tmp4/tmp13;
      const real_t tmp15 = tmp14*J_B_2(1, 0);
      const real_t tmp16 = tmp14*J_B_2(1, 1);
      const real_t tmp17 = tmp0*tmp15 - tmp16*tmp2;
      const real_t tmp18 = tmp1*tmp15 - tmp16*tmp3;
      const real_t tmp19 = 0.0094636161207672757*tmp11*std::abs(tmp13);
      const real_t tmp20 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp21 = tmp4/tmp20;
      const real_t tmp22 = tmp21*J_B_3(1, 0);
      const real_t tmp23 = tmp21*J_B_3(1, 1);
      const real_t tmp24 = tmp0*tmp22 - tmp2*tmp23;
      const real_t tmp25 = tmp1*tmp22 - tmp23*tmp3;
      const real_t tmp26 = 0.0053844320361136231*tmp11*std::abs(tmp20);
      const real_t tmp27 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp28 = std::abs(tmp27);
      const real_t tmp29 = tmp4/tmp27;
      const real_t tmp30 = tmp29*J_B_4(1, 0);
      const real_t tmp31 = tmp29*J_B_4(1, 1);
      const real_t tmp32 = tmp0*tmp30 - tmp2*tmp31;
      const real_t tmp33 = tmp1*tmp30 - tmp3*tmp31;
      const real_t tmp34 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp35 = tmp4/tmp34;
      const real_t tmp36 = tmp35*J_B_5(1, 0);
      const real_t tmp37 = tmp35*J_B_5(1, 1);
      const real_t tmp38 = tmp0*tmp36 - tmp2*tmp37;
      const real_t tmp39 = tmp1*tmp36 - tmp3*tmp37;
      const real_t tmp40 = 0.0041124045469858117*tmp11*std::abs(tmp34);
      const real_t tmp41 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp42 = tmp4/tmp41;
      const real_t tmp43 = tmp42*J_B_6(1, 0);
      const real_t tmp44 = tmp42*J_B_6(1, 1);
      const real_t tmp45 = tmp0*tmp43 - tmp2*tmp44;
      const real_t tmp46 = tmp1*tmp43 - tmp3*tmp44;
      const real_t tmp47 = 0.0041124045469858326*tmp11*std::abs(tmp41);
      elMat(0,0) = 0.028457289286966149*tmp11*tmp28*(-tmp32 - tmp33) - tmp12*(-tmp10 - tmp9) - tmp19*(-tmp17 - tmp18) - tmp26*(-tmp24 - tmp25) - tmp40*(-tmp38 - tmp39) - tmp47*(-tmp45 - tmp46);
      elMat(0,1) = 0.028457289286966149*tmp11*tmp28*tmp32 - tmp12*tmp9 - tmp17*tmp19 - tmp24*tmp26 - tmp38*tmp40 - tmp45*tmp47;
      elMat(0,2) = -tmp10*tmp12 + 0.028457289286966149*tmp11*tmp28*tmp33 - tmp18*tmp19 - tmp25*tmp26 - tmp39*tmp40 - tmp46*tmp47;
   }

   void p1_to_p2_div_0_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 4 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp6 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp20 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp21 = tmp18*J_B_1(0, 0) - tmp19*J_B_1(0, 0) - tmp20*J_B_1(0, 1) + tmp5*J_B_1(0, 2) - tmp6*J_B_1(0, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp20 + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp19);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = tmp28 + tmp32 + tmp36;
      const real_t tmp38 = coords[0][0]*coords[1][1];
      const real_t tmp39 = coords[0][0]*coords[1][2];
      const real_t tmp40 = coords[2][1]*coords[3][2];
      const real_t tmp41 = coords[0][1]*coords[1][0];
      const real_t tmp42 = coords[0][1]*coords[1][2];
      const real_t tmp43 = coords[2][2]*coords[3][0];
      const real_t tmp44 = coords[0][2]*coords[1][0];
      const real_t tmp45 = coords[0][2]*coords[1][1];
      const real_t tmp46 = coords[2][0]*coords[3][1];
      const real_t tmp47 = coords[2][2]*coords[3][1];
      const real_t tmp48 = coords[2][0]*coords[3][2];
      const real_t tmp49 = coords[2][1]*coords[3][0];
      const real_t tmp50 = std::abs(coords[0][0]*tmp40 - coords[0][0]*tmp47 + coords[0][1]*tmp43 - coords[0][1]*tmp48 + coords[0][2]*tmp46 - coords[0][2]*tmp49 - coords[1][0]*tmp40 + coords[1][0]*tmp47 - coords[1][1]*tmp43 + coords[1][1]*tmp48 - coords[1][2]*tmp46 + coords[1][2]*tmp49 + coords[2][0]*tmp42 - coords[2][0]*tmp45 - coords[2][1]*tmp39 + coords[2][1]*tmp44 + coords[2][2]*tmp38 - coords[2][2]*tmp41 - coords[3][0]*tmp42 + coords[3][0]*tmp45 + coords[3][1]*tmp39 - coords[3][1]*tmp44 - coords[3][2]*tmp38 + coords[3][2]*tmp41);
      const real_t tmp51 = tmp50*std::abs(tmp21);
      const real_t tmp52 = 0.0022404676699064132*tmp51;
      const real_t tmp53 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp54 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp55 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp56 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp57 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp58 = tmp53*J_B_2(0, 2) - tmp54*J_B_2(0, 2) + tmp55*J_B_2(0, 0) - tmp56*J_B_2(0, 0) - tmp57*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp59 = tmp17/tmp58;
      const real_t tmp60 = tmp59*(tmp53 - tmp54);
      const real_t tmp61 = tmp59*(-tmp57 + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp62 = tmp59*(tmp55 - tmp56);
      const real_t tmp63 = tmp24*tmp61 + tmp26*tmp62 + tmp4*tmp60;
      const real_t tmp64 = tmp29*tmp60 + tmp30*tmp61 + tmp31*tmp62;
      const real_t tmp65 = tmp33*tmp60 + tmp34*tmp61 + tmp35*tmp62;
      const real_t tmp66 = tmp63 + tmp64 + tmp65;
      const real_t tmp67 = std::abs(tmp58);
      const real_t tmp68 = tmp50*tmp67;
      const real_t tmp69 = 0.0036132788939563306*tmp68;
      const real_t tmp70 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp71 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp72 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp73 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp74 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp75 = tmp70*J_B_3(0, 2) - tmp71*J_B_3(0, 2) + tmp72*J_B_3(0, 0) - tmp73*J_B_3(0, 0) - tmp74*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp76 = tmp17/tmp75;
      const real_t tmp77 = tmp76*(tmp70 - tmp71);
      const real_t tmp78 = tmp76*(-tmp74 + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp79 = tmp76*(tmp72 - tmp73);
      const real_t tmp80 = tmp24*tmp78 + tmp26*tmp79 + tmp4*tmp77;
      const real_t tmp81 = tmp29*tmp77 + tmp30*tmp78 + tmp31*tmp79;
      const real_t tmp82 = tmp33*tmp77 + tmp34*tmp78 + tmp35*tmp79;
      const real_t tmp83 = tmp80 + tmp81 + tmp82;
      const real_t tmp84 = tmp50*std::abs(tmp75);
      const real_t tmp85 = 0.0021313484327818407*tmp84;
      const real_t tmp86 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp87 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp88 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp89 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp90 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp91 = tmp86*J_B_4(0, 2) - tmp87*J_B_4(0, 2) + tmp88*J_B_4(0, 0) - tmp89*J_B_4(0, 0) - tmp90*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp92 = tmp17/tmp91;
      const real_t tmp93 = tmp92*(tmp86 - tmp87);
      const real_t tmp94 = tmp92*(-tmp90 + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp95 = tmp92*(tmp88 - tmp89);
      const real_t tmp96 = tmp24*tmp94 + tmp26*tmp95 + tmp4*tmp93;
      const real_t tmp97 = tmp29*tmp93 + tmp30*tmp94 + tmp31*tmp95;
      const real_t tmp98 = tmp33*tmp93 + tmp34*tmp94 + tmp35*tmp95;
      const real_t tmp99 = tmp96 + tmp97 + tmp98;
      const real_t tmp100 = std::abs(tmp91);
      const real_t tmp101 = tmp100*tmp50;
      const real_t tmp102 = 0.0042405447626545044*tmp101;
      const real_t tmp103 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp104 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp105 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp106 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp107 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp108 = tmp103*J_B_5(0, 0) + tmp104*J_B_5(0, 2) - tmp105*J_B_5(0, 0) - tmp106*J_B_5(0, 1) - tmp107*J_B_5(0, 2) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp109 = std::abs(tmp108);
      const real_t tmp110 = tmp17/tmp108;
      const real_t tmp111 = tmp110*(tmp104 - tmp107);
      const real_t tmp112 = tmp110*(-tmp106 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp113 = tmp110*(tmp103 - tmp105);
      const real_t tmp114 = tmp111*tmp4 + tmp112*tmp24 + tmp113*tmp26;
      const real_t tmp115 = tmp111*tmp29 + tmp112*tmp30 + tmp113*tmp31;
      const real_t tmp116 = tmp111*tmp33 + tmp112*tmp34 + tmp113*tmp35;
      const real_t tmp117 = tmp114 + tmp115 + tmp116;
      const real_t tmp118 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp119 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp120 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp121 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp122 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp123 = tmp118*J_B_6(0, 2) - tmp119*J_B_6(0, 2) + tmp120*J_B_6(0, 0) - tmp121*J_B_6(0, 0) - tmp122*J_B_6(0, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp124 = tmp17/tmp123;
      const real_t tmp125 = tmp124*(tmp118 - tmp119);
      const real_t tmp126 = tmp124*(-tmp122 + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp127 = tmp124*(tmp120 - tmp121);
      const real_t tmp128 = tmp125*tmp4 + tmp126*tmp24 + tmp127*tmp26;
      const real_t tmp129 = tmp125*tmp29 + tmp126*tmp30 + tmp127*tmp31;
      const real_t tmp130 = tmp125*tmp33 + tmp126*tmp34 + tmp127*tmp35;
      const real_t tmp131 = tmp128 + tmp129 + tmp130;
      const real_t tmp132 = std::abs(tmp123);
      const real_t tmp133 = tmp132*tmp50;
      const real_t tmp134 = 0.00025269386627013875*tmp133;
      const real_t tmp135 = -tmp28;
      const real_t tmp136 = -tmp63;
      const real_t tmp137 = -tmp80;
      const real_t tmp138 = -tmp96;
      const real_t tmp139 = -tmp114;
      const real_t tmp140 = -tmp128;
      const real_t tmp141 = -tmp32;
      const real_t tmp142 = -tmp64;
      const real_t tmp143 = -tmp81;
      const real_t tmp144 = -tmp97;
      const real_t tmp145 = -tmp115;
      const real_t tmp146 = -tmp129;
      const real_t tmp147 = -tmp36;
      const real_t tmp148 = -tmp65;
      const real_t tmp149 = -tmp82;
      const real_t tmp150 = -tmp98;
      const real_t tmp151 = -tmp116;
      const real_t tmp152 = -tmp130;
      const real_t tmp153 = 0.0026033720926380141*tmp51;
      const real_t tmp154 = 0.0040515615452833059*tmp68;
      const real_t tmp155 = 0.00022768852606484032*tmp84;
      const real_t tmp156 = tmp109*tmp50;
      const real_t tmp157 = 0.0026357720909823278*tmp156;
      const real_t tmp158 = 0.0022326318989993247*tmp133;
      const real_t tmp159 = 0.0011689663037258728*tmp51;
      const real_t tmp160 = 0.0035028348104554873*tmp68;
      const real_t tmp161 = 0.0022791728946165873*tmp84;
      const real_t tmp162 = 0.0042608838854467819*tmp101;
      const real_t tmp163 = 0.00082038196529565332*tmp156;
      const real_t tmp164 = 0.0002462066126594296*tmp51;
      const real_t tmp165 = 0.0026256282613140542*tmp84;
      const real_t tmp166 = 0.0043575000963585958*tmp101;
      const real_t tmp167 = 0.002486974873195249*tmp156;
      const real_t tmp168 = 0.0023699571574974814*tmp133;
      const real_t tmp169 = 0.00044329479947359041*tmp51;
      const real_t tmp170 = 0.010935536503362953*tmp68;
      const real_t tmp171 = 0.0083030366399583916*tmp84;
      const real_t tmp172 = 0.0034921734127835191*tmp101;
      const real_t tmp173 = 0.00054257326398419006*tmp156;
      const real_t tmp174 = 0.0096167187137706934*tmp133;
      const real_t tmp175 = 0.00019160205543901311*tmp51;
      const real_t tmp176 = 0.01390416498932678*tmp68;
      const real_t tmp177 = 0.00026211581541268848*tmp84;
      const real_t tmp178 = 0.014099389531484405*tmp101;
      const real_t tmp179 = 0.0024472327245663697*tmp156;
      const real_t tmp180 = 0.0024288282171041273*tmp133;
      const real_t tmp181 = 0.007390637873140378*tmp51;
      const real_t tmp182 = 0.002962980367302638*tmp68;
      const real_t tmp183 = 0.00032162955982062511*tmp84;
      const real_t tmp184 = 0.013577744969985461*tmp101;
      const real_t tmp185 = 0.00060647705014558399*tmp156;
      const real_t tmp186 = 0.0084738635129386185*tmp133;
      const real_t tmp187 = 0.00036142199952063125*tmp51;
      const real_t tmp188 = 0.011464969934767404*tmp68;
      const real_t tmp189 = 0.0087040185441412451*tmp84;
      const real_t tmp190 = 0.003464776967145998*tmp101;
      const real_t tmp191 = 0.0091474641436934817*tmp156;
      const real_t tmp192 = 0.0001906817440645623*tmp133;
      const real_t tmp193 = 0.013941077572069804*tmp51;
      const real_t tmp194 = 0.0024431874085576156*tmp68;
      const real_t tmp195 = 0.01068027752776031*tmp84;
      const real_t tmp196 = 0.0033365882921907761*tmp101;
      const real_t tmp197 = 0.0022669389038848914*tmp156;
      const real_t tmp198 = 0.00066526362886985618*tmp133;
      const real_t tmp199 = 0.0060256495700271246*tmp51;
      const real_t tmp200 = 0.0031064301982791655*tmp68;
      const real_t tmp201 = 0.00033716214614184028*tmp84;
      const real_t tmp202 = 0.013471226218485708*tmp101;
      const real_t tmp203 = 0.010224844161029978*tmp156;
      const real_t tmp204 = 0.0001680210393695334*tmp133;
      elMat(0,0) = -tmp102*tmp99 + 0.0041450002922359102*tmp109*tmp117*tmp50 - tmp131*tmp134 - tmp37*tmp52 - tmp66*tmp69 - tmp83*tmp85;
      elMat(0,1) = -tmp102*tmp138 + 0.0041450002922359102*tmp109*tmp139*tmp50 - tmp134*tmp140 - tmp135*tmp52 - tmp136*tmp69 - tmp137*tmp85;
      elMat(0,2) = -tmp102*tmp144 + 0.0041450002922359102*tmp109*tmp145*tmp50 - tmp134*tmp146 - tmp141*tmp52 - tmp142*tmp69 - tmp143*tmp85;
      elMat(0,3) = -tmp102*tmp150 + 0.0041450002922359102*tmp109*tmp151*tmp50 - tmp134*tmp152 - tmp147*tmp52 - tmp148*tmp69 - tmp149*tmp85;
      elMat(1,0) = 0.0034176928206344891*tmp100*tmp50*tmp99 - tmp117*tmp157 - tmp131*tmp158 - tmp153*tmp37 - tmp154*tmp66 - tmp155*tmp83;
      elMat(1,1) = 0.0034176928206344891*tmp100*tmp138*tmp50 - tmp135*tmp153 - tmp136*tmp154 - tmp137*tmp155 - tmp139*tmp157 - tmp140*tmp158;
      elMat(1,2) = 0.0034176928206344891*tmp100*tmp144*tmp50 - tmp141*tmp153 - tmp142*tmp154 - tmp143*tmp155 - tmp145*tmp157 - tmp146*tmp158;
      elMat(1,3) = 0.0034176928206344891*tmp100*tmp150*tmp50 - tmp147*tmp153 - tmp148*tmp154 - tmp149*tmp155 - tmp151*tmp157 - tmp152*tmp158;
      elMat(2,0) = -tmp117*tmp163 + 0.0036989065262070654*tmp131*tmp132*tmp50 - tmp159*tmp37 - tmp160*tmp66 - tmp161*tmp83 - tmp162*tmp99;
      elMat(2,1) = 0.0036989065262070654*tmp132*tmp140*tmp50 - tmp135*tmp159 - tmp136*tmp160 - tmp137*tmp161 - tmp138*tmp162 - tmp139*tmp163;
      elMat(2,2) = 0.0036989065262070654*tmp132*tmp146*tmp50 - tmp141*tmp159 - tmp142*tmp160 - tmp143*tmp161 - tmp144*tmp162 - tmp145*tmp163;
      elMat(2,3) = 0.0036989065262070654*tmp132*tmp152*tmp50 - tmp147*tmp159 - tmp148*tmp160 - tmp149*tmp161 - tmp150*tmp162 - tmp151*tmp163;
      elMat(3,0) = -tmp117*tmp167 - tmp131*tmp168 - tmp164*tmp37 - tmp165*tmp83 - tmp166*tmp99 + 0.0037529336676914667*tmp50*tmp66*tmp67;
      elMat(3,1) = -tmp135*tmp164 + 0.0037529336676914667*tmp136*tmp50*tmp67 - tmp137*tmp165 - tmp138*tmp166 - tmp139*tmp167 - tmp140*tmp168;
      elMat(3,2) = -tmp141*tmp164 + 0.0037529336676914667*tmp142*tmp50*tmp67 - tmp143*tmp165 - tmp144*tmp166 - tmp145*tmp167 - tmp146*tmp168;
      elMat(3,3) = -tmp147*tmp164 + 0.0037529336676914667*tmp148*tmp50*tmp67 - tmp149*tmp165 - tmp150*tmp166 - tmp151*tmp167 - tmp152*tmp168;
      elMat(4,0) = tmp117*tmp173 + tmp131*tmp174 + tmp169*tmp37 + tmp170*tmp66 + tmp171*tmp83 + tmp172*tmp99;
      elMat(4,1) = tmp135*tmp169 + tmp136*tmp170 + tmp137*tmp171 + tmp138*tmp172 + tmp139*tmp173 + tmp140*tmp174;
      elMat(4,2) = tmp141*tmp169 + tmp142*tmp170 + tmp143*tmp171 + tmp144*tmp172 + tmp145*tmp173 + tmp146*tmp174;
      elMat(4,3) = tmp147*tmp169 + tmp148*tmp170 + tmp149*tmp171 + tmp150*tmp172 + tmp151*tmp173 + tmp152*tmp174;
      elMat(5,0) = tmp117*tmp179 + tmp131*tmp180 + tmp175*tmp37 + tmp176*tmp66 + tmp177*tmp83 + tmp178*tmp99;
      elMat(5,1) = tmp135*tmp175 + tmp136*tmp176 + tmp137*tmp177 + tmp138*tmp178 + tmp139*tmp179 + tmp140*tmp180;
      elMat(5,2) = tmp141*tmp175 + tmp142*tmp176 + tmp143*tmp177 + tmp144*tmp178 + tmp145*tmp179 + tmp146*tmp180;
      elMat(5,3) = tmp147*tmp175 + tmp148*tmp176 + tmp149*tmp177 + tmp150*tmp178 + tmp151*tmp179 + tmp152*tmp180;
      elMat(6,0) = tmp117*tmp185 + tmp131*tmp186 + tmp181*tmp37 + tmp182*tmp66 + tmp183*tmp83 + tmp184*tmp99;
      elMat(6,1) = tmp135*tmp181 + tmp136*tmp182 + tmp137*tmp183 + tmp138*tmp184 + tmp139*tmp185 + tmp140*tmp186;
      elMat(6,2) = tmp141*tmp181 + tmp142*tmp182 + tmp143*tmp183 + tmp144*tmp184 + tmp145*tmp185 + tmp146*tmp186;
      elMat(6,3) = tmp147*tmp181 + tmp148*tmp182 + tmp149*tmp183 + tmp150*tmp184 + tmp151*tmp185 + tmp152*tmp186;
      elMat(7,0) = tmp117*tmp191 + tmp131*tmp192 + tmp187*tmp37 + tmp188*tmp66 + tmp189*tmp83 + tmp190*tmp99;
      elMat(7,1) = tmp135*tmp187 + tmp136*tmp188 + tmp137*tmp189 + tmp138*tmp190 + tmp139*tmp191 + tmp140*tmp192;
      elMat(7,2) = tmp141*tmp187 + tmp142*tmp188 + tmp143*tmp189 + tmp144*tmp190 + tmp145*tmp191 + tmp146*tmp192;
      elMat(7,3) = tmp147*tmp187 + tmp148*tmp188 + tmp149*tmp189 + tmp150*tmp190 + tmp151*tmp191 + tmp152*tmp192;
      elMat(8,0) = tmp117*tmp197 + tmp131*tmp198 + tmp193*tmp37 + tmp194*tmp66 + tmp195*tmp83 + tmp196*tmp99;
      elMat(8,1) = tmp135*tmp193 + tmp136*tmp194 + tmp137*tmp195 + tmp138*tmp196 + tmp139*tmp197 + tmp140*tmp198;
      elMat(8,2) = tmp141*tmp193 + tmp142*tmp194 + tmp143*tmp195 + tmp144*tmp196 + tmp145*tmp197 + tmp146*tmp198;
      elMat(8,3) = tmp147*tmp193 + tmp148*tmp194 + tmp149*tmp195 + tmp150*tmp196 + tmp151*tmp197 + tmp152*tmp198;
      elMat(9,0) = tmp117*tmp203 + tmp131*tmp204 + tmp199*tmp37 + tmp200*tmp66 + tmp201*tmp83 + tmp202*tmp99;
      elMat(9,1) = tmp135*tmp199 + tmp136*tmp200 + tmp137*tmp201 + tmp138*tmp202 + tmp139*tmp203 + tmp140*tmp204;
      elMat(9,2) = tmp141*tmp199 + tmp142*tmp200 + tmp143*tmp201 + tmp144*tmp202 + tmp145*tmp203 + tmp146*tmp204;
      elMat(9,3) = tmp147*tmp199 + tmp148*tmp200 + tmp149*tmp201 + tmp150*tmp202 + tmp151*tmp203 + tmp152*tmp204;
   }

   void p1_to_p2_div_0_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp6 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp20 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp21 = tmp18*J_B_1(0, 0) - tmp19*J_B_1(0, 0) - tmp20*J_B_1(0, 1) + tmp5*J_B_1(0, 2) - tmp6*J_B_1(0, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp20 + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp19);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = coords[0][0]*coords[1][1];
      const real_t tmp38 = coords[0][0]*coords[1][2];
      const real_t tmp39 = coords[2][1]*coords[3][2];
      const real_t tmp40 = coords[0][1]*coords[1][0];
      const real_t tmp41 = coords[0][1]*coords[1][2];
      const real_t tmp42 = coords[2][2]*coords[3][0];
      const real_t tmp43 = coords[0][2]*coords[1][0];
      const real_t tmp44 = coords[0][2]*coords[1][1];
      const real_t tmp45 = coords[2][0]*coords[3][1];
      const real_t tmp46 = coords[2][2]*coords[3][1];
      const real_t tmp47 = coords[2][0]*coords[3][2];
      const real_t tmp48 = coords[2][1]*coords[3][0];
      const real_t tmp49 = std::abs(coords[0][0]*tmp39 - coords[0][0]*tmp46 + coords[0][1]*tmp42 - coords[0][1]*tmp47 + coords[0][2]*tmp45 - coords[0][2]*tmp48 - coords[1][0]*tmp39 + coords[1][0]*tmp46 - coords[1][1]*tmp42 + coords[1][1]*tmp47 - coords[1][2]*tmp45 + coords[1][2]*tmp48 + coords[2][0]*tmp41 - coords[2][0]*tmp44 - coords[2][1]*tmp38 + coords[2][1]*tmp43 + coords[2][2]*tmp37 - coords[2][2]*tmp40 - coords[3][0]*tmp41 + coords[3][0]*tmp44 + coords[3][1]*tmp38 - coords[3][1]*tmp43 - coords[3][2]*tmp37 + coords[3][2]*tmp40);
      const real_t tmp50 = 0.0022404676699064132*tmp49*std::abs(tmp21);
      const real_t tmp51 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp52 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp53 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp54 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp55 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp56 = tmp51*J_B_2(0, 2) - tmp52*J_B_2(0, 2) + tmp53*J_B_2(0, 0) - tmp54*J_B_2(0, 0) - tmp55*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp57 = tmp17/tmp56;
      const real_t tmp58 = tmp57*(tmp51 - tmp52);
      const real_t tmp59 = tmp57*(-tmp55 + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp60 = tmp57*(tmp53 - tmp54);
      const real_t tmp61 = tmp24*tmp59 + tmp26*tmp60 + tmp4*tmp58;
      const real_t tmp62 = tmp29*tmp58 + tmp30*tmp59 + tmp31*tmp60;
      const real_t tmp63 = tmp33*tmp58 + tmp34*tmp59 + tmp35*tmp60;
      const real_t tmp64 = 0.0036132788939563306*tmp49*std::abs(tmp56);
      const real_t tmp65 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp66 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp67 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp68 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp69 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp70 = tmp65*J_B_3(0, 2) - tmp66*J_B_3(0, 2) + tmp67*J_B_3(0, 0) - tmp68*J_B_3(0, 0) - tmp69*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp71 = tmp17/tmp70;
      const real_t tmp72 = tmp71*(tmp65 - tmp66);
      const real_t tmp73 = tmp71*(-tmp69 + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp74 = tmp71*(tmp67 - tmp68);
      const real_t tmp75 = tmp24*tmp73 + tmp26*tmp74 + tmp4*tmp72;
      const real_t tmp76 = tmp29*tmp72 + tmp30*tmp73 + tmp31*tmp74;
      const real_t tmp77 = tmp33*tmp72 + tmp34*tmp73 + tmp35*tmp74;
      const real_t tmp78 = 0.0021313484327818407*tmp49*std::abs(tmp70);
      const real_t tmp79 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp80 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp81 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp82 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp83 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp84 = tmp79*J_B_4(0, 2) - tmp80*J_B_4(0, 2) + tmp81*J_B_4(0, 0) - tmp82*J_B_4(0, 0) - tmp83*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp85 = tmp17/tmp84;
      const real_t tmp86 = tmp85*(tmp79 - tmp80);
      const real_t tmp87 = tmp85*(-tmp83 + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp88 = tmp85*(tmp81 - tmp82);
      const real_t tmp89 = tmp24*tmp87 + tmp26*tmp88 + tmp4*tmp86;
      const real_t tmp90 = tmp29*tmp86 + tmp30*tmp87 + tmp31*tmp88;
      const real_t tmp91 = tmp33*tmp86 + tmp34*tmp87 + tmp35*tmp88;
      const real_t tmp92 = 0.0042405447626545044*tmp49*std::abs(tmp84);
      const real_t tmp93 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp94 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp95 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp96 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp97 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp98 = tmp93*J_B_5(0, 0) + tmp94*J_B_5(0, 2) - tmp95*J_B_5(0, 0) - tmp96*J_B_5(0, 1) - tmp97*J_B_5(0, 2) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp99 = std::abs(tmp98);
      const real_t tmp100 = tmp17/tmp98;
      const real_t tmp101 = tmp100*(tmp94 - tmp97);
      const real_t tmp102 = tmp100*(-tmp96 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp103 = tmp100*(tmp93 - tmp95);
      const real_t tmp104 = tmp101*tmp4 + tmp102*tmp24 + tmp103*tmp26;
      const real_t tmp105 = tmp101*tmp29 + tmp102*tmp30 + tmp103*tmp31;
      const real_t tmp106 = tmp101*tmp33 + tmp102*tmp34 + tmp103*tmp35;
      const real_t tmp107 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp108 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp109 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp110 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp111 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp112 = tmp107*J_B_6(0, 2) - tmp108*J_B_6(0, 2) + tmp109*J_B_6(0, 0) - tmp110*J_B_6(0, 0) - tmp111*J_B_6(0, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp113 = tmp17/tmp112;
      const real_t tmp114 = tmp113*(tmp107 - tmp108);
      const real_t tmp115 = tmp113*(-tmp111 + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp116 = tmp113*(tmp109 - tmp110);
      const real_t tmp117 = tmp114*tmp4 + tmp115*tmp24 + tmp116*tmp26;
      const real_t tmp118 = tmp114*tmp29 + tmp115*tmp30 + tmp116*tmp31;
      const real_t tmp119 = tmp114*tmp33 + tmp115*tmp34 + tmp116*tmp35;
      const real_t tmp120 = 0.00025269386627013875*tmp49*std::abs(tmp112);
      elMat(0,0) = -tmp120*(tmp117 + tmp118 + tmp119) + 0.0041450002922359102*tmp49*tmp99*(tmp104 + tmp105 + tmp106) - tmp50*(tmp28 + tmp32 + tmp36) - tmp64*(tmp61 + tmp62 + tmp63) - tmp78*(tmp75 + tmp76 + tmp77) - tmp92*(tmp89 + tmp90 + tmp91);
      elMat(0,1) = -0.0041450002922359102*tmp104*tmp49*tmp99 + tmp117*tmp120 + tmp28*tmp50 + tmp61*tmp64 + tmp75*tmp78 + tmp89*tmp92;
      elMat(0,2) = -0.0041450002922359102*tmp105*tmp49*tmp99 + tmp118*tmp120 + tmp32*tmp50 + tmp62*tmp64 + tmp76*tmp78 + tmp90*tmp92;
      elMat(0,3) = -0.0041450002922359102*tmp106*tmp49*tmp99 + tmp119*tmp120 + tmp36*tmp50 + tmp63*tmp64 + tmp77*tmp78 + tmp91*tmp92;
   }

   void p1_to_p2_div_1_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 3 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(0, 0);
      const real_t tmp8 = tmp6*J_B_1(0, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = tmp10 + tmp9;
      const real_t tmp12 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp13 = tmp12*std::abs(tmp5);
      const real_t tmp14 = 0.0053844320361136127*tmp13;
      const real_t tmp15 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp16 = tmp4/tmp15;
      const real_t tmp17 = tmp16*J_B_2(0, 0);
      const real_t tmp18 = tmp16*J_B_2(0, 1);
      const real_t tmp19 = tmp0*tmp17 - tmp18*tmp2;
      const real_t tmp20 = tmp1*tmp17 - tmp18*tmp3;
      const real_t tmp21 = tmp19 + tmp20;
      const real_t tmp22 = tmp12*std::abs(tmp15);
      const real_t tmp23 = 0.0094636161207672757*tmp22;
      const real_t tmp24 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp25 = tmp4/tmp24;
      const real_t tmp26 = tmp25*J_B_3(0, 0);
      const real_t tmp27 = tmp25*J_B_3(0, 1);
      const real_t tmp28 = tmp0*tmp26 - tmp2*tmp27;
      const real_t tmp29 = tmp1*tmp26 - tmp27*tmp3;
      const real_t tmp30 = tmp28 + tmp29;
      const real_t tmp31 = tmp12*std::abs(tmp24);
      const real_t tmp32 = 0.0053844320361136231*tmp31;
      const real_t tmp33 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp34 = std::abs(tmp33);
      const real_t tmp35 = tmp4/tmp33;
      const real_t tmp36 = tmp35*J_B_4(0, 0);
      const real_t tmp37 = tmp35*J_B_4(0, 1);
      const real_t tmp38 = tmp0*tmp36 - tmp2*tmp37;
      const real_t tmp39 = tmp1*tmp36 - tmp3*tmp37;
      const real_t tmp40 = tmp38 + tmp39;
      const real_t tmp41 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp42 = tmp4/tmp41;
      const real_t tmp43 = tmp42*J_B_5(0, 0);
      const real_t tmp44 = tmp42*J_B_5(0, 1);
      const real_t tmp45 = tmp0*tmp43 - tmp2*tmp44;
      const real_t tmp46 = tmp1*tmp43 - tmp3*tmp44;
      const real_t tmp47 = tmp45 + tmp46;
      const real_t tmp48 = std::abs(tmp41);
      const real_t tmp49 = tmp12*tmp48;
      const real_t tmp50 = 0.0041124045469858117*tmp49;
      const real_t tmp51 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp52 = tmp4/tmp51;
      const real_t tmp53 = tmp52*J_B_6(0, 0);
      const real_t tmp54 = tmp52*J_B_6(0, 1);
      const real_t tmp55 = tmp0*tmp53 - tmp2*tmp54;
      const real_t tmp56 = tmp1*tmp53 - tmp3*tmp54;
      const real_t tmp57 = tmp55 + tmp56;
      const real_t tmp58 = std::abs(tmp51);
      const real_t tmp59 = tmp12*tmp58;
      const real_t tmp60 = 0.0041124045469858326*tmp59;
      const real_t tmp61 = -tmp9;
      const real_t tmp62 = -tmp19;
      const real_t tmp63 = -tmp28;
      const real_t tmp64 = -tmp38;
      const real_t tmp65 = -tmp45;
      const real_t tmp66 = -tmp55;
      const real_t tmp67 = -tmp10;
      const real_t tmp68 = -tmp20;
      const real_t tmp69 = -tmp29;
      const real_t tmp70 = -tmp39;
      const real_t tmp71 = -tmp46;
      const real_t tmp72 = -tmp56;
      const real_t tmp73 = 0.0053844320361136223*tmp13;
      const real_t tmp74 = 0.0053844320361136032*tmp22;
      const real_t tmp75 = 0.0094636161207672567*tmp31;
      const real_t tmp76 = tmp12*tmp34;
      const real_t tmp77 = 0.0041124045469858516*tmp76;
      const real_t tmp78 = 0.0041124045469858282*tmp59;
      const real_t tmp79 = 0.0094636161207672688*tmp13;
      const real_t tmp80 = 0.0053844320361136466*tmp22;
      const real_t tmp81 = 0.0053844320361135928*tmp31;
      const real_t tmp82 = 0.0041124045469858204*tmp76;
      const real_t tmp83 = 0.0041124045469858395*tmp49;
      const real_t tmp84 = 0.016449618187943368*tmp49;
      const real_t tmp85 = 0.088847818743091167*tmp22;
      const real_t tmp86 = 0.021537728144454461*tmp31;
      const real_t tmp87 = 0.0018441552587796545*tmp76;
      const real_t tmp88 = 0.016449618187943313*tmp59;
      const real_t tmp89 = 0.021537728144454479*tmp13;
      const real_t tmp90 = tmp11*tmp89 + tmp57*tmp88;
      const real_t tmp91 = tmp61*tmp89 + tmp66*tmp88;
      const real_t tmp92 = tmp67*tmp89 + tmp72*tmp88;
      const real_t tmp93 = 0.088847818743091223*tmp31;
      const real_t tmp94 = 0.016449618187943264*tmp76;
      const real_t tmp95 = 0.021537728144454475*tmp22;
      const real_t tmp96 = 0.0018441552587796499*tmp49;
      const real_t tmp97 = 0.088847818743091181*tmp13;
      const real_t tmp98 = 0.021537728144454499*tmp22;
      const real_t tmp99 = 0.021537728144454441*tmp31;
      const real_t tmp100 = 0.016449618187943424*tmp76;
      const real_t tmp101 = 0.016449618187943289*tmp49;
      const real_t tmp102 = 0.0018441552587796454*tmp59;
      elMat(0,0) = -tmp11*tmp14 + 0.028457289286966149*tmp12*tmp34*tmp40 - tmp21*tmp23 - tmp30*tmp32 - tmp47*tmp50 - tmp57*tmp60;
      elMat(0,1) = 0.028457289286966149*tmp12*tmp34*tmp64 - tmp14*tmp61 - tmp23*tmp62 - tmp32*tmp63 - tmp50*tmp65 - tmp60*tmp66;
      elMat(0,2) = 0.028457289286966149*tmp12*tmp34*tmp70 - tmp14*tmp67 - tmp23*tmp68 - tmp32*tmp69 - tmp50*tmp71 - tmp60*tmp72;
      elMat(1,0) = -tmp11*tmp73 + 0.028457289286966173*tmp12*tmp47*tmp48 - tmp21*tmp74 - tmp30*tmp75 - tmp40*tmp77 - tmp57*tmp78;
      elMat(1,1) = 0.028457289286966173*tmp12*tmp48*tmp65 - tmp61*tmp73 - tmp62*tmp74 - tmp63*tmp75 - tmp64*tmp77 - tmp66*tmp78;
      elMat(1,2) = 0.028457289286966173*tmp12*tmp48*tmp71 - tmp67*tmp73 - tmp68*tmp74 - tmp69*tmp75 - tmp70*tmp77 - tmp72*tmp78;
      elMat(2,0) = -tmp11*tmp79 + 0.028457289286966198*tmp12*tmp57*tmp58 - tmp21*tmp80 - tmp30*tmp81 - tmp40*tmp82 - tmp47*tmp83;
      elMat(2,1) = 0.028457289286966198*tmp12*tmp58*tmp66 - tmp61*tmp79 - tmp62*tmp80 - tmp63*tmp81 - tmp64*tmp82 - tmp65*tmp83;
      elMat(2,2) = 0.028457289286966198*tmp12*tmp58*tmp72 - tmp67*tmp79 - tmp68*tmp80 - tmp69*tmp81 - tmp70*tmp82 - tmp71*tmp83;
      elMat(3,0) = tmp21*tmp85 + tmp30*tmp86 + tmp40*tmp87 + tmp47*tmp84 + tmp90;
      elMat(3,1) = tmp62*tmp85 + tmp63*tmp86 + tmp64*tmp87 + tmp65*tmp84 + tmp91;
      elMat(3,2) = tmp68*tmp85 + tmp69*tmp86 + tmp70*tmp87 + tmp71*tmp84 + tmp92;
      elMat(4,0) = tmp21*tmp95 + tmp30*tmp93 + tmp40*tmp94 + tmp47*tmp96 + tmp90;
      elMat(4,1) = tmp62*tmp95 + tmp63*tmp93 + tmp64*tmp94 + tmp65*tmp96 + tmp91;
      elMat(4,2) = tmp68*tmp95 + tmp69*tmp93 + tmp70*tmp94 + tmp71*tmp96 + tmp92;
      elMat(5,0) = tmp100*tmp40 + tmp101*tmp47 + tmp102*tmp57 + tmp11*tmp97 + tmp21*tmp98 + tmp30*tmp99;
      elMat(5,1) = tmp100*tmp64 + tmp101*tmp65 + tmp102*tmp66 + tmp61*tmp97 + tmp62*tmp98 + tmp63*tmp99;
      elMat(5,2) = tmp100*tmp70 + tmp101*tmp71 + tmp102*tmp72 + tmp67*tmp97 + tmp68*tmp98 + tmp69*tmp99;
   }

   void p1_to_p2_div_1_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = tmp4/tmp5;
      const real_t tmp7 = tmp6*J_B_1(0, 0);
      const real_t tmp8 = tmp6*J_B_1(0, 1);
      const real_t tmp9 = tmp0*tmp7 - tmp2*tmp8;
      const real_t tmp10 = tmp1*tmp7 - tmp3*tmp8;
      const real_t tmp11 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp12 = 0.0053844320361136127*tmp11*std::abs(tmp5);
      const real_t tmp13 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp14 = tmp4/tmp13;
      const real_t tmp15 = tmp14*J_B_2(0, 0);
      const real_t tmp16 = tmp14*J_B_2(0, 1);
      const real_t tmp17 = tmp0*tmp15 - tmp16*tmp2;
      const real_t tmp18 = tmp1*tmp15 - tmp16*tmp3;
      const real_t tmp19 = 0.0094636161207672757*tmp11*std::abs(tmp13);
      const real_t tmp20 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp21 = tmp4/tmp20;
      const real_t tmp22 = tmp21*J_B_3(0, 0);
      const real_t tmp23 = tmp21*J_B_3(0, 1);
      const real_t tmp24 = tmp0*tmp22 - tmp2*tmp23;
      const real_t tmp25 = tmp1*tmp22 - tmp23*tmp3;
      const real_t tmp26 = 0.0053844320361136231*tmp11*std::abs(tmp20);
      const real_t tmp27 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp28 = std::abs(tmp27);
      const real_t tmp29 = tmp4/tmp27;
      const real_t tmp30 = tmp29*J_B_4(0, 0);
      const real_t tmp31 = tmp29*J_B_4(0, 1);
      const real_t tmp32 = tmp0*tmp30 - tmp2*tmp31;
      const real_t tmp33 = tmp1*tmp30 - tmp3*tmp31;
      const real_t tmp34 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp35 = tmp4/tmp34;
      const real_t tmp36 = tmp35*J_B_5(0, 0);
      const real_t tmp37 = tmp35*J_B_5(0, 1);
      const real_t tmp38 = tmp0*tmp36 - tmp2*tmp37;
      const real_t tmp39 = tmp1*tmp36 - tmp3*tmp37;
      const real_t tmp40 = 0.0041124045469858117*tmp11*std::abs(tmp34);
      const real_t tmp41 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp42 = tmp4/tmp41;
      const real_t tmp43 = tmp42*J_B_6(0, 0);
      const real_t tmp44 = tmp42*J_B_6(0, 1);
      const real_t tmp45 = tmp0*tmp43 - tmp2*tmp44;
      const real_t tmp46 = tmp1*tmp43 - tmp3*tmp44;
      const real_t tmp47 = 0.0041124045469858326*tmp11*std::abs(tmp41);
      elMat(0,0) = 0.028457289286966149*tmp11*tmp28*(tmp32 + tmp33) - tmp12*(tmp10 + tmp9) - tmp19*(tmp17 + tmp18) - tmp26*(tmp24 + tmp25) - tmp40*(tmp38 + tmp39) - tmp47*(tmp45 + tmp46);
      elMat(0,1) = -0.028457289286966149*tmp11*tmp28*tmp32 + tmp12*tmp9 + tmp17*tmp19 + tmp24*tmp26 + tmp38*tmp40 + tmp45*tmp47;
      elMat(0,2) = tmp10*tmp12 - 0.028457289286966149*tmp11*tmp28*tmp33 + tmp18*tmp19 + tmp25*tmp26 + tmp39*tmp40 + tmp46*tmp47;
   }

   void p1_to_p2_div_1_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 4 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp6 = -coords[0][2] + coords[3][2];
      const real_t tmp7 = -coords[0][0] + coords[1][0];
      const real_t tmp8 = tmp3*tmp7;
      const real_t tmp9 = -coords[0][2] + coords[1][2];
      const real_t tmp10 = -coords[0][1] + coords[1][1];
      const real_t tmp11 = -coords[0][2] + coords[2][2];
      const real_t tmp12 = tmp10*tmp11;
      const real_t tmp13 = tmp1*tmp7;
      const real_t tmp14 = tmp0*tmp10;
      const real_t tmp15 = tmp2*tmp9;
      const real_t tmp16 = 1.0 / (tmp0*tmp1*tmp9 - tmp11*tmp13 + tmp12*tmp2 - tmp14*tmp6 - tmp15*tmp3 + tmp6*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp20 = tmp17*J_B_1(1, 1) - tmp18*J_B_1(1, 0) - tmp19*J_B_1(1, 1) - tmp5*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp21 = tmp16/tmp20;
      const real_t tmp22 = tmp21*(-tmp5 + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp23 = -tmp0*tmp6 + tmp11*tmp2;
      const real_t tmp24 = tmp21*(tmp17 - tmp19);
      const real_t tmp25 = -tmp1*tmp11 + tmp3*tmp6;
      const real_t tmp26 = tmp21*(-tmp18 + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp27 = tmp22*tmp4 + tmp23*tmp24 + tmp25*tmp26;
      const real_t tmp28 = tmp10*tmp2 - tmp13;
      const real_t tmp29 = -tmp15 + tmp6*tmp7;
      const real_t tmp30 = tmp1*tmp9 - tmp10*tmp6;
      const real_t tmp31 = tmp22*tmp28 + tmp24*tmp29 + tmp26*tmp30;
      const real_t tmp32 = -tmp14 + tmp8;
      const real_t tmp33 = tmp0*tmp9 - tmp11*tmp7;
      const real_t tmp34 = tmp12 - tmp3*tmp9;
      const real_t tmp35 = tmp22*tmp32 + tmp24*tmp33 + tmp26*tmp34;
      const real_t tmp36 = tmp27 + tmp31 + tmp35;
      const real_t tmp37 = coords[0][0]*coords[1][1];
      const real_t tmp38 = coords[0][0]*coords[1][2];
      const real_t tmp39 = coords[2][1]*coords[3][2];
      const real_t tmp40 = coords[0][1]*coords[1][0];
      const real_t tmp41 = coords[0][1]*coords[1][2];
      const real_t tmp42 = coords[2][2]*coords[3][0];
      const real_t tmp43 = coords[0][2]*coords[1][0];
      const real_t tmp44 = coords[0][2]*coords[1][1];
      const real_t tmp45 = coords[2][0]*coords[3][1];
      const real_t tmp46 = coords[2][2]*coords[3][1];
      const real_t tmp47 = coords[2][0]*coords[3][2];
      const real_t tmp48 = coords[2][1]*coords[3][0];
      const real_t tmp49 = std::abs(coords[0][0]*tmp39 - coords[0][0]*tmp46 + coords[0][1]*tmp42 - coords[0][1]*tmp47 + coords[0][2]*tmp45 - coords[0][2]*tmp48 - coords[1][0]*tmp39 + coords[1][0]*tmp46 - coords[1][1]*tmp42 + coords[1][1]*tmp47 - coords[1][2]*tmp45 + coords[1][2]*tmp48 + coords[2][0]*tmp41 - coords[2][0]*tmp44 - coords[2][1]*tmp38 + coords[2][1]*tmp43 + coords[2][2]*tmp37 - coords[2][2]*tmp40 - coords[3][0]*tmp41 + coords[3][0]*tmp44 + coords[3][1]*tmp38 - coords[3][1]*tmp43 - coords[3][2]*tmp37 + coords[3][2]*tmp40);
      const real_t tmp50 = tmp49*std::abs(tmp20);
      const real_t tmp51 = 0.0022404676699064132*tmp50;
      const real_t tmp52 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp53 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp54 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp55 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp56 = -tmp52*J_B_2(1, 2) + tmp53*J_B_2(1, 1) - tmp54*J_B_2(1, 0) - tmp55*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp57 = tmp16/tmp56;
      const real_t tmp58 = tmp57*(-tmp52 + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp59 = tmp57*(tmp53 - tmp55);
      const real_t tmp60 = tmp57*(-tmp54 + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp61 = tmp23*tmp59 + tmp25*tmp60 + tmp4*tmp58;
      const real_t tmp62 = tmp28*tmp58 + tmp29*tmp59 + tmp30*tmp60;
      const real_t tmp63 = tmp32*tmp58 + tmp33*tmp59 + tmp34*tmp60;
      const real_t tmp64 = tmp61 + tmp62 + tmp63;
      const real_t tmp65 = std::abs(tmp56);
      const real_t tmp66 = tmp49*tmp65;
      const real_t tmp67 = 0.0036132788939563306*tmp66;
      const real_t tmp68 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp69 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp70 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp71 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp72 = -tmp68*J_B_3(1, 2) + tmp69*J_B_3(1, 1) - tmp70*J_B_3(1, 0) - tmp71*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp73 = tmp16/tmp72;
      const real_t tmp74 = tmp73*(-tmp68 + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp75 = tmp73*(tmp69 - tmp71);
      const real_t tmp76 = tmp73*(-tmp70 + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp77 = tmp23*tmp75 + tmp25*tmp76 + tmp4*tmp74;
      const real_t tmp78 = tmp28*tmp74 + tmp29*tmp75 + tmp30*tmp76;
      const real_t tmp79 = tmp32*tmp74 + tmp33*tmp75 + tmp34*tmp76;
      const real_t tmp80 = tmp77 + tmp78 + tmp79;
      const real_t tmp81 = tmp49*std::abs(tmp72);
      const real_t tmp82 = 0.0021313484327818407*tmp81;
      const real_t tmp83 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp84 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp85 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp86 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp87 = -tmp83*J_B_4(1, 2) + tmp84*J_B_4(1, 1) - tmp85*J_B_4(1, 0) - tmp86*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp88 = tmp16/tmp87;
      const real_t tmp89 = tmp88*(-tmp83 + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp90 = tmp88*(tmp84 - tmp86);
      const real_t tmp91 = tmp88*(-tmp85 + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp92 = tmp23*tmp90 + tmp25*tmp91 + tmp4*tmp89;
      const real_t tmp93 = tmp28*tmp89 + tmp29*tmp90 + tmp30*tmp91;
      const real_t tmp94 = tmp32*tmp89 + tmp33*tmp90 + tmp34*tmp91;
      const real_t tmp95 = tmp92 + tmp93 + tmp94;
      const real_t tmp96 = std::abs(tmp87);
      const real_t tmp97 = tmp49*tmp96;
      const real_t tmp98 = 0.0042405447626545044*tmp97;
      const real_t tmp99 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp100 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp101 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp102 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp103 = -tmp100*J_B_5(1, 2) - tmp101*J_B_5(1, 0) - tmp102*J_B_5(1, 1) + tmp99*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp104 = std::abs(tmp103);
      const real_t tmp105 = tmp16/tmp103;
      const real_t tmp106 = tmp105*(-tmp100 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp107 = tmp105*(-tmp102 + tmp99);
      const real_t tmp108 = tmp105*(-tmp101 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp109 = tmp106*tmp4 + tmp107*tmp23 + tmp108*tmp25;
      const real_t tmp110 = tmp106*tmp28 + tmp107*tmp29 + tmp108*tmp30;
      const real_t tmp111 = tmp106*tmp32 + tmp107*tmp33 + tmp108*tmp34;
      const real_t tmp112 = tmp109 + tmp110 + tmp111;
      const real_t tmp113 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp114 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp115 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp116 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp117 = -tmp113*J_B_6(1, 2) + tmp114*J_B_6(1, 1) - tmp115*J_B_6(1, 0) - tmp116*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp118 = tmp16/tmp117;
      const real_t tmp119 = tmp118*(-tmp113 + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp120 = tmp118*(tmp114 - tmp116);
      const real_t tmp121 = tmp118*(-tmp115 + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp122 = tmp119*tmp4 + tmp120*tmp23 + tmp121*tmp25;
      const real_t tmp123 = tmp119*tmp28 + tmp120*tmp29 + tmp121*tmp30;
      const real_t tmp124 = tmp119*tmp32 + tmp120*tmp33 + tmp121*tmp34;
      const real_t tmp125 = tmp122 + tmp123 + tmp124;
      const real_t tmp126 = std::abs(tmp117);
      const real_t tmp127 = tmp126*tmp49;
      const real_t tmp128 = 0.00025269386627013875*tmp127;
      const real_t tmp129 = -tmp27;
      const real_t tmp130 = -tmp61;
      const real_t tmp131 = -tmp77;
      const real_t tmp132 = -tmp92;
      const real_t tmp133 = -tmp109;
      const real_t tmp134 = -tmp122;
      const real_t tmp135 = -tmp31;
      const real_t tmp136 = -tmp62;
      const real_t tmp137 = -tmp78;
      const real_t tmp138 = -tmp93;
      const real_t tmp139 = -tmp110;
      const real_t tmp140 = -tmp123;
      const real_t tmp141 = -tmp35;
      const real_t tmp142 = -tmp63;
      const real_t tmp143 = -tmp79;
      const real_t tmp144 = -tmp94;
      const real_t tmp145 = -tmp111;
      const real_t tmp146 = -tmp124;
      const real_t tmp147 = 0.0026033720926380141*tmp50;
      const real_t tmp148 = 0.0040515615452833059*tmp66;
      const real_t tmp149 = 0.00022768852606484032*tmp81;
      const real_t tmp150 = tmp104*tmp49;
      const real_t tmp151 = 0.0026357720909823278*tmp150;
      const real_t tmp152 = 0.0022326318989993247*tmp127;
      const real_t tmp153 = 0.0011689663037258728*tmp50;
      const real_t tmp154 = 0.0035028348104554873*tmp66;
      const real_t tmp155 = 0.0022791728946165873*tmp81;
      const real_t tmp156 = 0.0042608838854467819*tmp97;
      const real_t tmp157 = 0.00082038196529565332*tmp150;
      const real_t tmp158 = 0.0002462066126594296*tmp50;
      const real_t tmp159 = 0.0026256282613140542*tmp81;
      const real_t tmp160 = 0.0043575000963585958*tmp97;
      const real_t tmp161 = 0.002486974873195249*tmp150;
      const real_t tmp162 = 0.0023699571574974814*tmp127;
      const real_t tmp163 = 0.00044329479947359041*tmp50;
      const real_t tmp164 = 0.010935536503362953*tmp66;
      const real_t tmp165 = 0.0083030366399583916*tmp81;
      const real_t tmp166 = 0.0034921734127835191*tmp97;
      const real_t tmp167 = 0.00054257326398419006*tmp150;
      const real_t tmp168 = 0.0096167187137706934*tmp127;
      const real_t tmp169 = 0.00019160205543901311*tmp50;
      const real_t tmp170 = 0.01390416498932678*tmp66;
      const real_t tmp171 = 0.00026211581541268848*tmp81;
      const real_t tmp172 = 0.014099389531484405*tmp97;
      const real_t tmp173 = 0.0024472327245663697*tmp150;
      const real_t tmp174 = 0.0024288282171041273*tmp127;
      const real_t tmp175 = 0.007390637873140378*tmp50;
      const real_t tmp176 = 0.002962980367302638*tmp66;
      const real_t tmp177 = 0.00032162955982062511*tmp81;
      const real_t tmp178 = 0.013577744969985461*tmp97;
      const real_t tmp179 = 0.00060647705014558399*tmp150;
      const real_t tmp180 = 0.0084738635129386185*tmp127;
      const real_t tmp181 = 0.00036142199952063125*tmp50;
      const real_t tmp182 = 0.011464969934767404*tmp66;
      const real_t tmp183 = 0.0087040185441412451*tmp81;
      const real_t tmp184 = 0.003464776967145998*tmp97;
      const real_t tmp185 = 0.0091474641436934817*tmp150;
      const real_t tmp186 = 0.0001906817440645623*tmp127;
      const real_t tmp187 = 0.013941077572069804*tmp50;
      const real_t tmp188 = 0.0024431874085576156*tmp66;
      const real_t tmp189 = 0.01068027752776031*tmp81;
      const real_t tmp190 = 0.0033365882921907761*tmp97;
      const real_t tmp191 = 0.0022669389038848914*tmp150;
      const real_t tmp192 = 0.00066526362886985618*tmp127;
      const real_t tmp193 = 0.0060256495700271246*tmp50;
      const real_t tmp194 = 0.0031064301982791655*tmp66;
      const real_t tmp195 = 0.00033716214614184028*tmp81;
      const real_t tmp196 = 0.013471226218485708*tmp97;
      const real_t tmp197 = 0.010224844161029978*tmp150;
      const real_t tmp198 = 0.0001680210393695334*tmp127;
      elMat(0,0) = 0.0041450002922359102*tmp104*tmp112*tmp49 - tmp125*tmp128 - tmp36*tmp51 - tmp64*tmp67 - tmp80*tmp82 - tmp95*tmp98;
      elMat(0,1) = 0.0041450002922359102*tmp104*tmp133*tmp49 - tmp128*tmp134 - tmp129*tmp51 - tmp130*tmp67 - tmp131*tmp82 - tmp132*tmp98;
      elMat(0,2) = 0.0041450002922359102*tmp104*tmp139*tmp49 - tmp128*tmp140 - tmp135*tmp51 - tmp136*tmp67 - tmp137*tmp82 - tmp138*tmp98;
      elMat(0,3) = 0.0041450002922359102*tmp104*tmp145*tmp49 - tmp128*tmp146 - tmp141*tmp51 - tmp142*tmp67 - tmp143*tmp82 - tmp144*tmp98;
      elMat(1,0) = -tmp112*tmp151 - tmp125*tmp152 - tmp147*tmp36 - tmp148*tmp64 - tmp149*tmp80 + 0.0034176928206344891*tmp49*tmp95*tmp96;
      elMat(1,1) = -tmp129*tmp147 - tmp130*tmp148 - tmp131*tmp149 + 0.0034176928206344891*tmp132*tmp49*tmp96 - tmp133*tmp151 - tmp134*tmp152;
      elMat(1,2) = -tmp135*tmp147 - tmp136*tmp148 - tmp137*tmp149 + 0.0034176928206344891*tmp138*tmp49*tmp96 - tmp139*tmp151 - tmp140*tmp152;
      elMat(1,3) = -tmp141*tmp147 - tmp142*tmp148 - tmp143*tmp149 + 0.0034176928206344891*tmp144*tmp49*tmp96 - tmp145*tmp151 - tmp146*tmp152;
      elMat(2,0) = -tmp112*tmp157 + 0.0036989065262070654*tmp125*tmp126*tmp49 - tmp153*tmp36 - tmp154*tmp64 - tmp155*tmp80 - tmp156*tmp95;
      elMat(2,1) = 0.0036989065262070654*tmp126*tmp134*tmp49 - tmp129*tmp153 - tmp130*tmp154 - tmp131*tmp155 - tmp132*tmp156 - tmp133*tmp157;
      elMat(2,2) = 0.0036989065262070654*tmp126*tmp140*tmp49 - tmp135*tmp153 - tmp136*tmp154 - tmp137*tmp155 - tmp138*tmp156 - tmp139*tmp157;
      elMat(2,3) = 0.0036989065262070654*tmp126*tmp146*tmp49 - tmp141*tmp153 - tmp142*tmp154 - tmp143*tmp155 - tmp144*tmp156 - tmp145*tmp157;
      elMat(3,0) = -tmp112*tmp161 - tmp125*tmp162 - tmp158*tmp36 - tmp159*tmp80 - tmp160*tmp95 + 0.0037529336676914667*tmp49*tmp64*tmp65;
      elMat(3,1) = -tmp129*tmp158 + 0.0037529336676914667*tmp130*tmp49*tmp65 - tmp131*tmp159 - tmp132*tmp160 - tmp133*tmp161 - tmp134*tmp162;
      elMat(3,2) = -tmp135*tmp158 + 0.0037529336676914667*tmp136*tmp49*tmp65 - tmp137*tmp159 - tmp138*tmp160 - tmp139*tmp161 - tmp140*tmp162;
      elMat(3,3) = -tmp141*tmp158 + 0.0037529336676914667*tmp142*tmp49*tmp65 - tmp143*tmp159 - tmp144*tmp160 - tmp145*tmp161 - tmp146*tmp162;
      elMat(4,0) = tmp112*tmp167 + tmp125*tmp168 + tmp163*tmp36 + tmp164*tmp64 + tmp165*tmp80 + tmp166*tmp95;
      elMat(4,1) = tmp129*tmp163 + tmp130*tmp164 + tmp131*tmp165 + tmp132*tmp166 + tmp133*tmp167 + tmp134*tmp168;
      elMat(4,2) = tmp135*tmp163 + tmp136*tmp164 + tmp137*tmp165 + tmp138*tmp166 + tmp139*tmp167 + tmp140*tmp168;
      elMat(4,3) = tmp141*tmp163 + tmp142*tmp164 + tmp143*tmp165 + tmp144*tmp166 + tmp145*tmp167 + tmp146*tmp168;
      elMat(5,0) = tmp112*tmp173 + tmp125*tmp174 + tmp169*tmp36 + tmp170*tmp64 + tmp171*tmp80 + tmp172*tmp95;
      elMat(5,1) = tmp129*tmp169 + tmp130*tmp170 + tmp131*tmp171 + tmp132*tmp172 + tmp133*tmp173 + tmp134*tmp174;
      elMat(5,2) = tmp135*tmp169 + tmp136*tmp170 + tmp137*tmp171 + tmp138*tmp172 + tmp139*tmp173 + tmp140*tmp174;
      elMat(5,3) = tmp141*tmp169 + tmp142*tmp170 + tmp143*tmp171 + tmp144*tmp172 + tmp145*tmp173 + tmp146*tmp174;
      elMat(6,0) = tmp112*tmp179 + tmp125*tmp180 + tmp175*tmp36 + tmp176*tmp64 + tmp177*tmp80 + tmp178*tmp95;
      elMat(6,1) = tmp129*tmp175 + tmp130*tmp176 + tmp131*tmp177 + tmp132*tmp178 + tmp133*tmp179 + tmp134*tmp180;
      elMat(6,2) = tmp135*tmp175 + tmp136*tmp176 + tmp137*tmp177 + tmp138*tmp178 + tmp139*tmp179 + tmp140*tmp180;
      elMat(6,3) = tmp141*tmp175 + tmp142*tmp176 + tmp143*tmp177 + tmp144*tmp178 + tmp145*tmp179 + tmp146*tmp180;
      elMat(7,0) = tmp112*tmp185 + tmp125*tmp186 + tmp181*tmp36 + tmp182*tmp64 + tmp183*tmp80 + tmp184*tmp95;
      elMat(7,1) = tmp129*tmp181 + tmp130*tmp182 + tmp131*tmp183 + tmp132*tmp184 + tmp133*tmp185 + tmp134*tmp186;
      elMat(7,2) = tmp135*tmp181 + tmp136*tmp182 + tmp137*tmp183 + tmp138*tmp184 + tmp139*tmp185 + tmp140*tmp186;
      elMat(7,3) = tmp141*tmp181 + tmp142*tmp182 + tmp143*tmp183 + tmp144*tmp184 + tmp145*tmp185 + tmp146*tmp186;
      elMat(8,0) = tmp112*tmp191 + tmp125*tmp192 + tmp187*tmp36 + tmp188*tmp64 + tmp189*tmp80 + tmp190*tmp95;
      elMat(8,1) = tmp129*tmp187 + tmp130*tmp188 + tmp131*tmp189 + tmp132*tmp190 + tmp133*tmp191 + tmp134*tmp192;
      elMat(8,2) = tmp135*tmp187 + tmp136*tmp188 + tmp137*tmp189 + tmp138*tmp190 + tmp139*tmp191 + tmp140*tmp192;
      elMat(8,3) = tmp141*tmp187 + tmp142*tmp188 + tmp143*tmp189 + tmp144*tmp190 + tmp145*tmp191 + tmp146*tmp192;
      elMat(9,0) = tmp112*tmp197 + tmp125*tmp198 + tmp193*tmp36 + tmp194*tmp64 + tmp195*tmp80 + tmp196*tmp95;
      elMat(9,1) = tmp129*tmp193 + tmp130*tmp194 + tmp131*tmp195 + tmp132*tmp196 + tmp133*tmp197 + tmp134*tmp198;
      elMat(9,2) = tmp135*tmp193 + tmp136*tmp194 + tmp137*tmp195 + tmp138*tmp196 + tmp139*tmp197 + tmp140*tmp198;
      elMat(9,3) = tmp141*tmp193 + tmp142*tmp194 + tmp143*tmp195 + tmp144*tmp196 + tmp145*tmp197 + tmp146*tmp198;
   }

   void p1_to_p2_div_1_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp6 = -coords[0][2] + coords[3][2];
      const real_t tmp7 = -coords[0][0] + coords[1][0];
      const real_t tmp8 = tmp3*tmp7;
      const real_t tmp9 = -coords[0][2] + coords[1][2];
      const real_t tmp10 = -coords[0][1] + coords[1][1];
      const real_t tmp11 = -coords[0][2] + coords[2][2];
      const real_t tmp12 = tmp10*tmp11;
      const real_t tmp13 = tmp1*tmp7;
      const real_t tmp14 = tmp0*tmp10;
      const real_t tmp15 = tmp2*tmp9;
      const real_t tmp16 = 1.0 / (tmp0*tmp1*tmp9 - tmp11*tmp13 + tmp12*tmp2 - tmp14*tmp6 - tmp15*tmp3 + tmp6*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp20 = tmp17*J_B_1(1, 1) - tmp18*J_B_1(1, 0) - tmp19*J_B_1(1, 1) - tmp5*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp21 = tmp16/tmp20;
      const real_t tmp22 = tmp21*(-tmp5 + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp23 = -tmp0*tmp6 + tmp11*tmp2;
      const real_t tmp24 = tmp21*(tmp17 - tmp19);
      const real_t tmp25 = -tmp1*tmp11 + tmp3*tmp6;
      const real_t tmp26 = tmp21*(-tmp18 + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp27 = tmp22*tmp4 + tmp23*tmp24 + tmp25*tmp26;
      const real_t tmp28 = tmp10*tmp2 - tmp13;
      const real_t tmp29 = -tmp15 + tmp6*tmp7;
      const real_t tmp30 = tmp1*tmp9 - tmp10*tmp6;
      const real_t tmp31 = tmp22*tmp28 + tmp24*tmp29 + tmp26*tmp30;
      const real_t tmp32 = -tmp14 + tmp8;
      const real_t tmp33 = tmp0*tmp9 - tmp11*tmp7;
      const real_t tmp34 = tmp12 - tmp3*tmp9;
      const real_t tmp35 = tmp22*tmp32 + tmp24*tmp33 + tmp26*tmp34;
      const real_t tmp36 = coords[0][0]*coords[1][1];
      const real_t tmp37 = coords[0][0]*coords[1][2];
      const real_t tmp38 = coords[2][1]*coords[3][2];
      const real_t tmp39 = coords[0][1]*coords[1][0];
      const real_t tmp40 = coords[0][1]*coords[1][2];
      const real_t tmp41 = coords[2][2]*coords[3][0];
      const real_t tmp42 = coords[0][2]*coords[1][0];
      const real_t tmp43 = coords[0][2]*coords[1][1];
      const real_t tmp44 = coords[2][0]*coords[3][1];
      const real_t tmp45 = coords[2][2]*coords[3][1];
      const real_t tmp46 = coords[2][0]*coords[3][2];
      const real_t tmp47 = coords[2][1]*coords[3][0];
      const real_t tmp48 = std::abs(coords[0][0]*tmp38 - coords[0][0]*tmp45 + coords[0][1]*tmp41 - coords[0][1]*tmp46 + coords[0][2]*tmp44 - coords[0][2]*tmp47 - coords[1][0]*tmp38 + coords[1][0]*tmp45 - coords[1][1]*tmp41 + coords[1][1]*tmp46 - coords[1][2]*tmp44 + coords[1][2]*tmp47 + coords[2][0]*tmp40 - coords[2][0]*tmp43 - coords[2][1]*tmp37 + coords[2][1]*tmp42 + coords[2][2]*tmp36 - coords[2][2]*tmp39 - coords[3][0]*tmp40 + coords[3][0]*tmp43 + coords[3][1]*tmp37 - coords[3][1]*tmp42 - coords[3][2]*tmp36 + coords[3][2]*tmp39);
      const real_t tmp49 = 0.0022404676699064132*tmp48*std::abs(tmp20);
      const real_t tmp50 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp51 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp52 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp53 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp54 = -tmp50*J_B_2(1, 2) + tmp51*J_B_2(1, 1) - tmp52*J_B_2(1, 0) - tmp53*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp55 = tmp16/tmp54;
      const real_t tmp56 = tmp55*(-tmp50 + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp57 = tmp55*(tmp51 - tmp53);
      const real_t tmp58 = tmp55*(-tmp52 + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp59 = tmp23*tmp57 + tmp25*tmp58 + tmp4*tmp56;
      const real_t tmp60 = tmp28*tmp56 + tmp29*tmp57 + tmp30*tmp58;
      const real_t tmp61 = tmp32*tmp56 + tmp33*tmp57 + tmp34*tmp58;
      const real_t tmp62 = 0.0036132788939563306*tmp48*std::abs(tmp54);
      const real_t tmp63 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp64 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp65 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp66 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp67 = -tmp63*J_B_3(1, 2) + tmp64*J_B_3(1, 1) - tmp65*J_B_3(1, 0) - tmp66*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp68 = tmp16/tmp67;
      const real_t tmp69 = tmp68*(-tmp63 + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp70 = tmp68*(tmp64 - tmp66);
      const real_t tmp71 = tmp68*(-tmp65 + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp72 = tmp23*tmp70 + tmp25*tmp71 + tmp4*tmp69;
      const real_t tmp73 = tmp28*tmp69 + tmp29*tmp70 + tmp30*tmp71;
      const real_t tmp74 = tmp32*tmp69 + tmp33*tmp70 + tmp34*tmp71;
      const real_t tmp75 = 0.0021313484327818407*tmp48*std::abs(tmp67);
      const real_t tmp76 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp77 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp78 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp79 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp80 = -tmp76*J_B_4(1, 2) + tmp77*J_B_4(1, 1) - tmp78*J_B_4(1, 0) - tmp79*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp81 = tmp16/tmp80;
      const real_t tmp82 = tmp81*(-tmp76 + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp83 = tmp81*(tmp77 - tmp79);
      const real_t tmp84 = tmp81*(-tmp78 + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp85 = tmp23*tmp83 + tmp25*tmp84 + tmp4*tmp82;
      const real_t tmp86 = tmp28*tmp82 + tmp29*tmp83 + tmp30*tmp84;
      const real_t tmp87 = tmp32*tmp82 + tmp33*tmp83 + tmp34*tmp84;
      const real_t tmp88 = 0.0042405447626545044*tmp48*std::abs(tmp80);
      const real_t tmp89 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp90 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp91 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp92 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp93 = tmp89*J_B_5(1, 1) - tmp90*J_B_5(1, 2) - tmp91*J_B_5(1, 0) - tmp92*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp94 = std::abs(tmp93);
      const real_t tmp95 = tmp16/tmp93;
      const real_t tmp96 = tmp95*(-tmp90 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp97 = tmp95*(tmp89 - tmp92);
      const real_t tmp98 = tmp95*(-tmp91 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp99 = tmp23*tmp97 + tmp25*tmp98 + tmp4*tmp96;
      const real_t tmp100 = tmp28*tmp96 + tmp29*tmp97 + tmp30*tmp98;
      const real_t tmp101 = tmp32*tmp96 + tmp33*tmp97 + tmp34*tmp98;
      const real_t tmp102 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp103 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp104 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp105 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp106 = -tmp102*J_B_6(1, 2) + tmp103*J_B_6(1, 1) - tmp104*J_B_6(1, 0) - tmp105*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp107 = tmp16/tmp106;
      const real_t tmp108 = tmp107*(-tmp102 + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp109 = tmp107*(tmp103 - tmp105);
      const real_t tmp110 = tmp107*(-tmp104 + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp111 = tmp108*tmp4 + tmp109*tmp23 + tmp110*tmp25;
      const real_t tmp112 = tmp108*tmp28 + tmp109*tmp29 + tmp110*tmp30;
      const real_t tmp113 = tmp108*tmp32 + tmp109*tmp33 + tmp110*tmp34;
      const real_t tmp114 = 0.00025269386627013875*tmp48*std::abs(tmp106);
      elMat(0,0) = -tmp114*(tmp111 + tmp112 + tmp113) + 0.0041450002922359102*tmp48*tmp94*(tmp100 + tmp101 + tmp99) - tmp49*(tmp27 + tmp31 + tmp35) - tmp62*(tmp59 + tmp60 + tmp61) - tmp75*(tmp72 + tmp73 + tmp74) - tmp88*(tmp85 + tmp86 + tmp87);
      elMat(0,1) = tmp111*tmp114 + tmp27*tmp49 - 0.0041450002922359102*tmp48*tmp94*tmp99 + tmp59*tmp62 + tmp72*tmp75 + tmp85*tmp88;
      elMat(0,2) = -0.0041450002922359102*tmp100*tmp48*tmp94 + tmp112*tmp114 + tmp31*tmp49 + tmp60*tmp62 + tmp73*tmp75 + tmp86*tmp88;
      elMat(0,3) = -0.0041450002922359102*tmp101*tmp48*tmp94 + tmp113*tmp114 + tmp35*tmp49 + tmp61*tmp62 + tmp74*tmp75 + tmp87*tmp88;
   }

   void p1_to_p2_div_2_blending_q3::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 3 >& elMat ) const
   {
      (void)(coords);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
   }

   void p1_to_p2_div_2_blending_q3::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 3 >& elMat ) const   {
      (void)(coords);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
   }

   void p1_to_p2_div_2_blending_q3::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 4 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp21 = tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp20);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = tmp28 + tmp32 + tmp36;
      const real_t tmp38 = coords[0][0]*coords[1][1];
      const real_t tmp39 = coords[0][0]*coords[1][2];
      const real_t tmp40 = coords[2][1]*coords[3][2];
      const real_t tmp41 = coords[0][1]*coords[1][0];
      const real_t tmp42 = coords[0][1]*coords[1][2];
      const real_t tmp43 = coords[2][2]*coords[3][0];
      const real_t tmp44 = coords[0][2]*coords[1][0];
      const real_t tmp45 = coords[0][2]*coords[1][1];
      const real_t tmp46 = coords[2][0]*coords[3][1];
      const real_t tmp47 = coords[2][2]*coords[3][1];
      const real_t tmp48 = coords[2][0]*coords[3][2];
      const real_t tmp49 = coords[2][1]*coords[3][0];
      const real_t tmp50 = std::abs(coords[0][0]*tmp40 - coords[0][0]*tmp47 + coords[0][1]*tmp43 - coords[0][1]*tmp48 + coords[0][2]*tmp46 - coords[0][2]*tmp49 - coords[1][0]*tmp40 + coords[1][0]*tmp47 - coords[1][1]*tmp43 + coords[1][1]*tmp48 - coords[1][2]*tmp46 + coords[1][2]*tmp49 + coords[2][0]*tmp42 - coords[2][0]*tmp45 - coords[2][1]*tmp39 + coords[2][1]*tmp44 + coords[2][2]*tmp38 - coords[2][2]*tmp41 - coords[3][0]*tmp42 + coords[3][0]*tmp45 + coords[3][1]*tmp39 - coords[3][1]*tmp44 - coords[3][2]*tmp38 + coords[3][2]*tmp41);
      const real_t tmp51 = tmp50*std::abs(tmp21);
      const real_t tmp52 = 0.0022404676699064132*tmp51;
      const real_t tmp53 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp54 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp55 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp56 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp57 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp58 = tmp53*J_B_2(2, 2) - tmp54*J_B_2(2, 2) + tmp55*J_B_2(2, 0) - tmp56*J_B_2(2, 1) - tmp57*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp59 = tmp17/tmp58;
      const real_t tmp60 = tmp59*(tmp53 - tmp54);
      const real_t tmp61 = tmp59*(-tmp56 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp62 = tmp59*(tmp55 - tmp57);
      const real_t tmp63 = tmp24*tmp61 + tmp26*tmp62 + tmp4*tmp60;
      const real_t tmp64 = tmp29*tmp60 + tmp30*tmp61 + tmp31*tmp62;
      const real_t tmp65 = tmp33*tmp60 + tmp34*tmp61 + tmp35*tmp62;
      const real_t tmp66 = tmp63 + tmp64 + tmp65;
      const real_t tmp67 = std::abs(tmp58);
      const real_t tmp68 = tmp50*tmp67;
      const real_t tmp69 = 0.0036132788939563306*tmp68;
      const real_t tmp70 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp71 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp72 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp73 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp74 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp75 = tmp70*J_B_3(2, 2) - tmp71*J_B_3(2, 2) + tmp72*J_B_3(2, 0) - tmp73*J_B_3(2, 1) - tmp74*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp76 = tmp17/tmp75;
      const real_t tmp77 = tmp76*(tmp70 - tmp71);
      const real_t tmp78 = tmp76*(-tmp73 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp79 = tmp76*(tmp72 - tmp74);
      const real_t tmp80 = tmp24*tmp78 + tmp26*tmp79 + tmp4*tmp77;
      const real_t tmp81 = tmp29*tmp77 + tmp30*tmp78 + tmp31*tmp79;
      const real_t tmp82 = tmp33*tmp77 + tmp34*tmp78 + tmp35*tmp79;
      const real_t tmp83 = tmp80 + tmp81 + tmp82;
      const real_t tmp84 = tmp50*std::abs(tmp75);
      const real_t tmp85 = 0.0021313484327818407*tmp84;
      const real_t tmp86 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp87 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp88 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp89 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp90 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp91 = tmp86*J_B_4(2, 2) - tmp87*J_B_4(2, 2) + tmp88*J_B_4(2, 0) - tmp89*J_B_4(2, 1) - tmp90*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp92 = tmp17/tmp91;
      const real_t tmp93 = tmp92*(tmp86 - tmp87);
      const real_t tmp94 = tmp92*(-tmp89 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp95 = tmp92*(tmp88 - tmp90);
      const real_t tmp96 = tmp24*tmp94 + tmp26*tmp95 + tmp4*tmp93;
      const real_t tmp97 = tmp29*tmp93 + tmp30*tmp94 + tmp31*tmp95;
      const real_t tmp98 = tmp33*tmp93 + tmp34*tmp94 + tmp35*tmp95;
      const real_t tmp99 = tmp96 + tmp97 + tmp98;
      const real_t tmp100 = std::abs(tmp91);
      const real_t tmp101 = tmp100*tmp50;
      const real_t tmp102 = 0.0042405447626545044*tmp101;
      const real_t tmp103 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp104 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp105 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp106 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp107 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp108 = tmp103*J_B_5(2, 2) + tmp104*J_B_5(2, 0) - tmp105*J_B_5(2, 1) - tmp106*J_B_5(2, 2) - tmp107*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp109 = std::abs(tmp108);
      const real_t tmp110 = tmp17/tmp108;
      const real_t tmp111 = tmp110*(tmp103 - tmp106);
      const real_t tmp112 = tmp110*(-tmp105 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp113 = tmp110*(tmp104 - tmp107);
      const real_t tmp114 = tmp111*tmp4 + tmp112*tmp24 + tmp113*tmp26;
      const real_t tmp115 = tmp111*tmp29 + tmp112*tmp30 + tmp113*tmp31;
      const real_t tmp116 = tmp111*tmp33 + tmp112*tmp34 + tmp113*tmp35;
      const real_t tmp117 = tmp114 + tmp115 + tmp116;
      const real_t tmp118 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp119 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp120 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp121 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp122 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp123 = tmp118*J_B_6(2, 2) - tmp119*J_B_6(2, 2) + tmp120*J_B_6(2, 0) - tmp121*J_B_6(2, 1) - tmp122*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp124 = tmp17/tmp123;
      const real_t tmp125 = tmp124*(tmp118 - tmp119);
      const real_t tmp126 = tmp124*(-tmp121 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp127 = tmp124*(tmp120 - tmp122);
      const real_t tmp128 = tmp125*tmp4 + tmp126*tmp24 + tmp127*tmp26;
      const real_t tmp129 = tmp125*tmp29 + tmp126*tmp30 + tmp127*tmp31;
      const real_t tmp130 = tmp125*tmp33 + tmp126*tmp34 + tmp127*tmp35;
      const real_t tmp131 = tmp128 + tmp129 + tmp130;
      const real_t tmp132 = std::abs(tmp123);
      const real_t tmp133 = tmp132*tmp50;
      const real_t tmp134 = 0.00025269386627013875*tmp133;
      const real_t tmp135 = -tmp28;
      const real_t tmp136 = -tmp63;
      const real_t tmp137 = -tmp80;
      const real_t tmp138 = -tmp96;
      const real_t tmp139 = -tmp114;
      const real_t tmp140 = -tmp128;
      const real_t tmp141 = -tmp32;
      const real_t tmp142 = -tmp64;
      const real_t tmp143 = -tmp81;
      const real_t tmp144 = -tmp97;
      const real_t tmp145 = -tmp115;
      const real_t tmp146 = -tmp129;
      const real_t tmp147 = -tmp36;
      const real_t tmp148 = -tmp65;
      const real_t tmp149 = -tmp82;
      const real_t tmp150 = -tmp98;
      const real_t tmp151 = -tmp116;
      const real_t tmp152 = -tmp130;
      const real_t tmp153 = 0.0026033720926380141*tmp51;
      const real_t tmp154 = 0.0040515615452833059*tmp68;
      const real_t tmp155 = 0.00022768852606484032*tmp84;
      const real_t tmp156 = tmp109*tmp50;
      const real_t tmp157 = 0.0026357720909823278*tmp156;
      const real_t tmp158 = 0.0022326318989993247*tmp133;
      const real_t tmp159 = 0.0011689663037258728*tmp51;
      const real_t tmp160 = 0.0035028348104554873*tmp68;
      const real_t tmp161 = 0.0022791728946165873*tmp84;
      const real_t tmp162 = 0.0042608838854467819*tmp101;
      const real_t tmp163 = 0.00082038196529565332*tmp156;
      const real_t tmp164 = 0.0002462066126594296*tmp51;
      const real_t tmp165 = 0.0026256282613140542*tmp84;
      const real_t tmp166 = 0.0043575000963585958*tmp101;
      const real_t tmp167 = 0.002486974873195249*tmp156;
      const real_t tmp168 = 0.0023699571574974814*tmp133;
      const real_t tmp169 = 0.00044329479947359041*tmp51;
      const real_t tmp170 = 0.010935536503362953*tmp68;
      const real_t tmp171 = 0.0083030366399583916*tmp84;
      const real_t tmp172 = 0.0034921734127835191*tmp101;
      const real_t tmp173 = 0.00054257326398419006*tmp156;
      const real_t tmp174 = 0.0096167187137706934*tmp133;
      const real_t tmp175 = 0.00019160205543901311*tmp51;
      const real_t tmp176 = 0.01390416498932678*tmp68;
      const real_t tmp177 = 0.00026211581541268848*tmp84;
      const real_t tmp178 = 0.014099389531484405*tmp101;
      const real_t tmp179 = 0.0024472327245663697*tmp156;
      const real_t tmp180 = 0.0024288282171041273*tmp133;
      const real_t tmp181 = 0.007390637873140378*tmp51;
      const real_t tmp182 = 0.002962980367302638*tmp68;
      const real_t tmp183 = 0.00032162955982062511*tmp84;
      const real_t tmp184 = 0.013577744969985461*tmp101;
      const real_t tmp185 = 0.00060647705014558399*tmp156;
      const real_t tmp186 = 0.0084738635129386185*tmp133;
      const real_t tmp187 = 0.00036142199952063125*tmp51;
      const real_t tmp188 = 0.011464969934767404*tmp68;
      const real_t tmp189 = 0.0087040185441412451*tmp84;
      const real_t tmp190 = 0.003464776967145998*tmp101;
      const real_t tmp191 = 0.0091474641436934817*tmp156;
      const real_t tmp192 = 0.0001906817440645623*tmp133;
      const real_t tmp193 = 0.013941077572069804*tmp51;
      const real_t tmp194 = 0.0024431874085576156*tmp68;
      const real_t tmp195 = 0.01068027752776031*tmp84;
      const real_t tmp196 = 0.0033365882921907761*tmp101;
      const real_t tmp197 = 0.0022669389038848914*tmp156;
      const real_t tmp198 = 0.00066526362886985618*tmp133;
      const real_t tmp199 = 0.0060256495700271246*tmp51;
      const real_t tmp200 = 0.0031064301982791655*tmp68;
      const real_t tmp201 = 0.00033716214614184028*tmp84;
      const real_t tmp202 = 0.013471226218485708*tmp101;
      const real_t tmp203 = 0.010224844161029978*tmp156;
      const real_t tmp204 = 0.0001680210393695334*tmp133;
      elMat(0,0) = -tmp102*tmp99 + 0.0041450002922359102*tmp109*tmp117*tmp50 - tmp131*tmp134 - tmp37*tmp52 - tmp66*tmp69 - tmp83*tmp85;
      elMat(0,1) = -tmp102*tmp138 + 0.0041450002922359102*tmp109*tmp139*tmp50 - tmp134*tmp140 - tmp135*tmp52 - tmp136*tmp69 - tmp137*tmp85;
      elMat(0,2) = -tmp102*tmp144 + 0.0041450002922359102*tmp109*tmp145*tmp50 - tmp134*tmp146 - tmp141*tmp52 - tmp142*tmp69 - tmp143*tmp85;
      elMat(0,3) = -tmp102*tmp150 + 0.0041450002922359102*tmp109*tmp151*tmp50 - tmp134*tmp152 - tmp147*tmp52 - tmp148*tmp69 - tmp149*tmp85;
      elMat(1,0) = 0.0034176928206344891*tmp100*tmp50*tmp99 - tmp117*tmp157 - tmp131*tmp158 - tmp153*tmp37 - tmp154*tmp66 - tmp155*tmp83;
      elMat(1,1) = 0.0034176928206344891*tmp100*tmp138*tmp50 - tmp135*tmp153 - tmp136*tmp154 - tmp137*tmp155 - tmp139*tmp157 - tmp140*tmp158;
      elMat(1,2) = 0.0034176928206344891*tmp100*tmp144*tmp50 - tmp141*tmp153 - tmp142*tmp154 - tmp143*tmp155 - tmp145*tmp157 - tmp146*tmp158;
      elMat(1,3) = 0.0034176928206344891*tmp100*tmp150*tmp50 - tmp147*tmp153 - tmp148*tmp154 - tmp149*tmp155 - tmp151*tmp157 - tmp152*tmp158;
      elMat(2,0) = -tmp117*tmp163 + 0.0036989065262070654*tmp131*tmp132*tmp50 - tmp159*tmp37 - tmp160*tmp66 - tmp161*tmp83 - tmp162*tmp99;
      elMat(2,1) = 0.0036989065262070654*tmp132*tmp140*tmp50 - tmp135*tmp159 - tmp136*tmp160 - tmp137*tmp161 - tmp138*tmp162 - tmp139*tmp163;
      elMat(2,2) = 0.0036989065262070654*tmp132*tmp146*tmp50 - tmp141*tmp159 - tmp142*tmp160 - tmp143*tmp161 - tmp144*tmp162 - tmp145*tmp163;
      elMat(2,3) = 0.0036989065262070654*tmp132*tmp152*tmp50 - tmp147*tmp159 - tmp148*tmp160 - tmp149*tmp161 - tmp150*tmp162 - tmp151*tmp163;
      elMat(3,0) = -tmp117*tmp167 - tmp131*tmp168 - tmp164*tmp37 - tmp165*tmp83 - tmp166*tmp99 + 0.0037529336676914667*tmp50*tmp66*tmp67;
      elMat(3,1) = -tmp135*tmp164 + 0.0037529336676914667*tmp136*tmp50*tmp67 - tmp137*tmp165 - tmp138*tmp166 - tmp139*tmp167 - tmp140*tmp168;
      elMat(3,2) = -tmp141*tmp164 + 0.0037529336676914667*tmp142*tmp50*tmp67 - tmp143*tmp165 - tmp144*tmp166 - tmp145*tmp167 - tmp146*tmp168;
      elMat(3,3) = -tmp147*tmp164 + 0.0037529336676914667*tmp148*tmp50*tmp67 - tmp149*tmp165 - tmp150*tmp166 - tmp151*tmp167 - tmp152*tmp168;
      elMat(4,0) = tmp117*tmp173 + tmp131*tmp174 + tmp169*tmp37 + tmp170*tmp66 + tmp171*tmp83 + tmp172*tmp99;
      elMat(4,1) = tmp135*tmp169 + tmp136*tmp170 + tmp137*tmp171 + tmp138*tmp172 + tmp139*tmp173 + tmp140*tmp174;
      elMat(4,2) = tmp141*tmp169 + tmp142*tmp170 + tmp143*tmp171 + tmp144*tmp172 + tmp145*tmp173 + tmp146*tmp174;
      elMat(4,3) = tmp147*tmp169 + tmp148*tmp170 + tmp149*tmp171 + tmp150*tmp172 + tmp151*tmp173 + tmp152*tmp174;
      elMat(5,0) = tmp117*tmp179 + tmp131*tmp180 + tmp175*tmp37 + tmp176*tmp66 + tmp177*tmp83 + tmp178*tmp99;
      elMat(5,1) = tmp135*tmp175 + tmp136*tmp176 + tmp137*tmp177 + tmp138*tmp178 + tmp139*tmp179 + tmp140*tmp180;
      elMat(5,2) = tmp141*tmp175 + tmp142*tmp176 + tmp143*tmp177 + tmp144*tmp178 + tmp145*tmp179 + tmp146*tmp180;
      elMat(5,3) = tmp147*tmp175 + tmp148*tmp176 + tmp149*tmp177 + tmp150*tmp178 + tmp151*tmp179 + tmp152*tmp180;
      elMat(6,0) = tmp117*tmp185 + tmp131*tmp186 + tmp181*tmp37 + tmp182*tmp66 + tmp183*tmp83 + tmp184*tmp99;
      elMat(6,1) = tmp135*tmp181 + tmp136*tmp182 + tmp137*tmp183 + tmp138*tmp184 + tmp139*tmp185 + tmp140*tmp186;
      elMat(6,2) = tmp141*tmp181 + tmp142*tmp182 + tmp143*tmp183 + tmp144*tmp184 + tmp145*tmp185 + tmp146*tmp186;
      elMat(6,3) = tmp147*tmp181 + tmp148*tmp182 + tmp149*tmp183 + tmp150*tmp184 + tmp151*tmp185 + tmp152*tmp186;
      elMat(7,0) = tmp117*tmp191 + tmp131*tmp192 + tmp187*tmp37 + tmp188*tmp66 + tmp189*tmp83 + tmp190*tmp99;
      elMat(7,1) = tmp135*tmp187 + tmp136*tmp188 + tmp137*tmp189 + tmp138*tmp190 + tmp139*tmp191 + tmp140*tmp192;
      elMat(7,2) = tmp141*tmp187 + tmp142*tmp188 + tmp143*tmp189 + tmp144*tmp190 + tmp145*tmp191 + tmp146*tmp192;
      elMat(7,3) = tmp147*tmp187 + tmp148*tmp188 + tmp149*tmp189 + tmp150*tmp190 + tmp151*tmp191 + tmp152*tmp192;
      elMat(8,0) = tmp117*tmp197 + tmp131*tmp198 + tmp193*tmp37 + tmp194*tmp66 + tmp195*tmp83 + tmp196*tmp99;
      elMat(8,1) = tmp135*tmp193 + tmp136*tmp194 + tmp137*tmp195 + tmp138*tmp196 + tmp139*tmp197 + tmp140*tmp198;
      elMat(8,2) = tmp141*tmp193 + tmp142*tmp194 + tmp143*tmp195 + tmp144*tmp196 + tmp145*tmp197 + tmp146*tmp198;
      elMat(8,3) = tmp147*tmp193 + tmp148*tmp194 + tmp149*tmp195 + tmp150*tmp196 + tmp151*tmp197 + tmp152*tmp198;
      elMat(9,0) = tmp117*tmp203 + tmp131*tmp204 + tmp199*tmp37 + tmp200*tmp66 + tmp201*tmp83 + tmp202*tmp99;
      elMat(9,1) = tmp135*tmp199 + tmp136*tmp200 + tmp137*tmp201 + tmp138*tmp202 + tmp139*tmp203 + tmp140*tmp204;
      elMat(9,2) = tmp141*tmp199 + tmp142*tmp200 + tmp143*tmp201 + tmp144*tmp202 + tmp145*tmp203 + tmp146*tmp204;
      elMat(9,3) = tmp147*tmp199 + tmp148*tmp200 + tmp149*tmp201 + tmp150*tmp202 + tmp151*tmp203 + tmp152*tmp204;
   }

   void p1_to_p2_div_2_blending_q3::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 4 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.35862072046688365*coords[0][0] + 0.19011700243928376*coords[1][0] + 0.43985894764927524*coords[2][0] + 0.011403329444557353*coords[3][0], 0.35862072046688365*coords[0][1] + 0.19011700243928376*coords[1][1] + 0.43985894764927524*coords[2][1] + 0.011403329444557353*coords[3][1], 0.35862072046688365*coords[0][2] + 0.19011700243928376*coords[1][2] + 0.43985894764927524*coords[2][2] + 0.011403329444557353*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.13084716895209636*coords[0][0] + 0.15868516322744058*coords[1][0] + 0.12480486216524722*coords[2][0] + 0.58566280565521578*coords[3][0], 0.13084716895209636*coords[0][1] + 0.15868516322744058*coords[1][1] + 0.12480486216524722*coords[2][1] + 0.58566280565521578*coords[3][1], 0.13084716895209636*coords[0][2] + 0.15868516322744058*coords[1][2] + 0.12480486216524722*coords[2][2] + 0.58566280565521578*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.36212682994553402*coords[0][0] + 0.010905212211189119*coords[1][0] + 0.34544415571973064*coords[2][0] + 0.28152380212354622*coords[3][0], 0.36212682994553402*coords[0][1] + 0.010905212211189119*coords[1][1] + 0.34544415571973064*coords[2][1] + 0.28152380212354622*coords[3][1], 0.36212682994553402*coords[0][2] + 0.010905212211189119*coords[1][2] + 0.34544415571973064*coords[2][2] + 0.28152380212354622*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.14037280579421102*coords[0][0] + 0.57122605214911504*coords[1][0] + 0.14148275196950416*coords[2][0] + 0.14691839008716978*coords[3][0], 0.14037280579421102*coords[0][1] + 0.57122605214911504*coords[1][1] + 0.14148275196950416*coords[2][1] + 0.14691839008716978*coords[3][1], 0.14037280579421102*coords[0][2] + 0.57122605214911504*coords[1][2] + 0.14148275196950416*coords[2][2] + 0.14691839008716978*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.6384932999617271*coords[0][0] + 0.17081692516498903*coords[1][0] + 0.037871631782356752*coords[2][0] + 0.15281814309092712*coords[3][0], 0.6384932999617271*coords[0][1] + 0.17081692516498903*coords[1][1] + 0.037871631782356752*coords[2][1] + 0.15281814309092712*coords[3][1], 0.6384932999617271*coords[0][2] + 0.17081692516498903*coords[1][2] + 0.037871631782356752*coords[2][2] + 0.15281814309092712*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.012718366313681118*coords[0][0] + 0.16200149169852418*coords[1][0] + 0.64142979149569679*coords[2][0] + 0.18385035049209791*coords[3][0], 0.012718366313681118*coords[0][1] + 0.16200149169852418*coords[1][1] + 0.64142979149569679*coords[2][1] + 0.18385035049209791*coords[3][1], 0.012718366313681118*coords[0][2] + 0.16200149169852418*coords[1][2] + 0.64142979149569679*coords[2][2] + 0.18385035049209791*coords[3][2]), J_B_6);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp21 = tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = tmp17/tmp21;
      const real_t tmp23 = tmp22*(tmp5 - tmp6);
      const real_t tmp24 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp25 = tmp22*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp26 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp27 = tmp22*(tmp18 - tmp20);
      const real_t tmp28 = tmp23*tmp4 + tmp24*tmp25 + tmp26*tmp27;
      const real_t tmp29 = tmp11*tmp2 - tmp14;
      const real_t tmp30 = -tmp16 + tmp7*tmp8;
      const real_t tmp31 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp32 = tmp23*tmp29 + tmp25*tmp30 + tmp27*tmp31;
      const real_t tmp33 = -tmp15 + tmp9;
      const real_t tmp34 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp35 = -tmp10*tmp3 + tmp13;
      const real_t tmp36 = tmp23*tmp33 + tmp25*tmp34 + tmp27*tmp35;
      const real_t tmp37 = coords[0][0]*coords[1][1];
      const real_t tmp38 = coords[0][0]*coords[1][2];
      const real_t tmp39 = coords[2][1]*coords[3][2];
      const real_t tmp40 = coords[0][1]*coords[1][0];
      const real_t tmp41 = coords[0][1]*coords[1][2];
      const real_t tmp42 = coords[2][2]*coords[3][0];
      const real_t tmp43 = coords[0][2]*coords[1][0];
      const real_t tmp44 = coords[0][2]*coords[1][1];
      const real_t tmp45 = coords[2][0]*coords[3][1];
      const real_t tmp46 = coords[2][2]*coords[3][1];
      const real_t tmp47 = coords[2][0]*coords[3][2];
      const real_t tmp48 = coords[2][1]*coords[3][0];
      const real_t tmp49 = std::abs(coords[0][0]*tmp39 - coords[0][0]*tmp46 + coords[0][1]*tmp42 - coords[0][1]*tmp47 + coords[0][2]*tmp45 - coords[0][2]*tmp48 - coords[1][0]*tmp39 + coords[1][0]*tmp46 - coords[1][1]*tmp42 + coords[1][1]*tmp47 - coords[1][2]*tmp45 + coords[1][2]*tmp48 + coords[2][0]*tmp41 - coords[2][0]*tmp44 - coords[2][1]*tmp38 + coords[2][1]*tmp43 + coords[2][2]*tmp37 - coords[2][2]*tmp40 - coords[3][0]*tmp41 + coords[3][0]*tmp44 + coords[3][1]*tmp38 - coords[3][1]*tmp43 - coords[3][2]*tmp37 + coords[3][2]*tmp40);
      const real_t tmp50 = 0.0022404676699064132*tmp49*std::abs(tmp21);
      const real_t tmp51 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp52 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp53 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp54 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp55 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp56 = tmp51*J_B_2(2, 2) - tmp52*J_B_2(2, 2) + tmp53*J_B_2(2, 0) - tmp54*J_B_2(2, 1) - tmp55*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp57 = tmp17/tmp56;
      const real_t tmp58 = tmp57*(tmp51 - tmp52);
      const real_t tmp59 = tmp57*(-tmp54 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp60 = tmp57*(tmp53 - tmp55);
      const real_t tmp61 = tmp24*tmp59 + tmp26*tmp60 + tmp4*tmp58;
      const real_t tmp62 = tmp29*tmp58 + tmp30*tmp59 + tmp31*tmp60;
      const real_t tmp63 = tmp33*tmp58 + tmp34*tmp59 + tmp35*tmp60;
      const real_t tmp64 = 0.0036132788939563306*tmp49*std::abs(tmp56);
      const real_t tmp65 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp66 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp67 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp68 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp69 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp70 = tmp65*J_B_3(2, 2) - tmp66*J_B_3(2, 2) + tmp67*J_B_3(2, 0) - tmp68*J_B_3(2, 1) - tmp69*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp71 = tmp17/tmp70;
      const real_t tmp72 = tmp71*(tmp65 - tmp66);
      const real_t tmp73 = tmp71*(-tmp68 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp74 = tmp71*(tmp67 - tmp69);
      const real_t tmp75 = tmp24*tmp73 + tmp26*tmp74 + tmp4*tmp72;
      const real_t tmp76 = tmp29*tmp72 + tmp30*tmp73 + tmp31*tmp74;
      const real_t tmp77 = tmp33*tmp72 + tmp34*tmp73 + tmp35*tmp74;
      const real_t tmp78 = 0.0021313484327818407*tmp49*std::abs(tmp70);
      const real_t tmp79 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp80 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp81 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp82 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp83 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp84 = tmp79*J_B_4(2, 2) - tmp80*J_B_4(2, 2) + tmp81*J_B_4(2, 0) - tmp82*J_B_4(2, 1) - tmp83*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp85 = tmp17/tmp84;
      const real_t tmp86 = tmp85*(tmp79 - tmp80);
      const real_t tmp87 = tmp85*(-tmp82 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp88 = tmp85*(tmp81 - tmp83);
      const real_t tmp89 = tmp24*tmp87 + tmp26*tmp88 + tmp4*tmp86;
      const real_t tmp90 = tmp29*tmp86 + tmp30*tmp87 + tmp31*tmp88;
      const real_t tmp91 = tmp33*tmp86 + tmp34*tmp87 + tmp35*tmp88;
      const real_t tmp92 = 0.0042405447626545044*tmp49*std::abs(tmp84);
      const real_t tmp93 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp94 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp95 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp96 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp97 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp98 = tmp93*J_B_5(2, 2) + tmp94*J_B_5(2, 0) - tmp95*J_B_5(2, 1) - tmp96*J_B_5(2, 2) - tmp97*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp99 = std::abs(tmp98);
      const real_t tmp100 = tmp17/tmp98;
      const real_t tmp101 = tmp100*(tmp93 - tmp96);
      const real_t tmp102 = tmp100*(-tmp95 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp103 = tmp100*(tmp94 - tmp97);
      const real_t tmp104 = tmp101*tmp4 + tmp102*tmp24 + tmp103*tmp26;
      const real_t tmp105 = tmp101*tmp29 + tmp102*tmp30 + tmp103*tmp31;
      const real_t tmp106 = tmp101*tmp33 + tmp102*tmp34 + tmp103*tmp35;
      const real_t tmp107 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp108 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp109 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp110 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp111 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp112 = tmp107*J_B_6(2, 2) - tmp108*J_B_6(2, 2) + tmp109*J_B_6(2, 0) - tmp110*J_B_6(2, 1) - tmp111*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp113 = tmp17/tmp112;
      const real_t tmp114 = tmp113*(tmp107 - tmp108);
      const real_t tmp115 = tmp113*(-tmp110 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp116 = tmp113*(tmp109 - tmp111);
      const real_t tmp117 = tmp114*tmp4 + tmp115*tmp24 + tmp116*tmp26;
      const real_t tmp118 = tmp114*tmp29 + tmp115*tmp30 + tmp116*tmp31;
      const real_t tmp119 = tmp114*tmp33 + tmp115*tmp34 + tmp116*tmp35;
      const real_t tmp120 = 0.00025269386627013875*tmp49*std::abs(tmp112);
      elMat(0,0) = -tmp120*(tmp117 + tmp118 + tmp119) + 0.0041450002922359102*tmp49*tmp99*(tmp104 + tmp105 + tmp106) - tmp50*(tmp28 + tmp32 + tmp36) - tmp64*(tmp61 + tmp62 + tmp63) - tmp78*(tmp75 + tmp76 + tmp77) - tmp92*(tmp89 + tmp90 + tmp91);
      elMat(0,1) = -0.0041450002922359102*tmp104*tmp49*tmp99 + tmp117*tmp120 + tmp28*tmp50 + tmp61*tmp64 + tmp75*tmp78 + tmp89*tmp92;
      elMat(0,2) = -0.0041450002922359102*tmp105*tmp49*tmp99 + tmp118*tmp120 + tmp32*tmp50 + tmp62*tmp64 + tmp76*tmp78 + tmp90*tmp92;
      elMat(0,3) = -0.0041450002922359102*tmp106*tmp49*tmp99 + tmp119*tmp120 + tmp36*tmp50 + tmp63*tmp64 + tmp77*tmp78 + tmp91*tmp92;
   }

} // namespace forms
} // namespace hyteg