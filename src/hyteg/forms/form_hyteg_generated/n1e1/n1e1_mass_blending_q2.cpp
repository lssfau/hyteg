/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "n1e1_mass_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void n1e1_mass_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, const std::array< int, 6 >& edgeDirections, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_blend_out0_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id3 = 0;
      Blending_DF_Tetrahedron_blend( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id0, &Blending_DF_Tetrahedron_blend_out1_id0, &Blending_DF_Tetrahedron_blend_out2_id0, &Blending_DF_Tetrahedron_blend_out3_id0, &Blending_DF_Tetrahedron_blend_out4_id0, &Blending_DF_Tetrahedron_blend_out5_id0, &Blending_DF_Tetrahedron_blend_out6_id0, &Blending_DF_Tetrahedron_blend_out7_id0, &Blending_DF_Tetrahedron_blend_out8_id0 );
      Blending_DF_Tetrahedron_blend( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id1, &Blending_DF_Tetrahedron_blend_out1_id1, &Blending_DF_Tetrahedron_blend_out2_id1, &Blending_DF_Tetrahedron_blend_out3_id1, &Blending_DF_Tetrahedron_blend_out4_id1, &Blending_DF_Tetrahedron_blend_out5_id1, &Blending_DF_Tetrahedron_blend_out6_id1, &Blending_DF_Tetrahedron_blend_out7_id1, &Blending_DF_Tetrahedron_blend_out8_id1 );
      Blending_DF_Tetrahedron_blend( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id2, &Blending_DF_Tetrahedron_blend_out1_id2, &Blending_DF_Tetrahedron_blend_out2_id2, &Blending_DF_Tetrahedron_blend_out3_id2, &Blending_DF_Tetrahedron_blend_out4_id2, &Blending_DF_Tetrahedron_blend_out5_id2, &Blending_DF_Tetrahedron_blend_out6_id2, &Blending_DF_Tetrahedron_blend_out7_id2, &Blending_DF_Tetrahedron_blend_out8_id2 );
      Blending_DF_Tetrahedron_blend( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id3, &Blending_DF_Tetrahedron_blend_out1_id3, &Blending_DF_Tetrahedron_blend_out2_id3, &Blending_DF_Tetrahedron_blend_out3_id3, &Blending_DF_Tetrahedron_blend_out4_id3, &Blending_DF_Tetrahedron_blend_out5_id3, &Blending_DF_Tetrahedron_blend_out6_id3, &Blending_DF_Tetrahedron_blend_out7_id3, &Blending_DF_Tetrahedron_blend_out8_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out4_id0;
      real_t tmp_10 = Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out3_id0;
      real_t tmp_11 = Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out5_id0;
      real_t tmp_12 = Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out3_id0;
      real_t tmp_13 = Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out5_id0;
      real_t tmp_14 = Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out4_id0;
      real_t tmp_15 = Blending_DF_Tetrahedron_blend_out6_id0*tmp_11 - Blending_DF_Tetrahedron_blend_out6_id0*tmp_14 + Blending_DF_Tetrahedron_blend_out7_id0*tmp_12 - Blending_DF_Tetrahedron_blend_out7_id0*tmp_13 - Blending_DF_Tetrahedron_blend_out8_id0*tmp_10 + Blending_DF_Tetrahedron_blend_out8_id0*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_3_1 + tmp_2;
      real_t tmp_19 = p_affine_1_2 + tmp_16;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_0 + tmp_0;
      real_t tmp_22 = p_affine_2_2 + tmp_16;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_22;
      real_t tmp_25 = tmp_19*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_24 + tmp_21*tmp_23 - tmp_21*tmp_25);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*(-tmp_10 + tmp_9);
      real_t tmp_29 = tmp_20 - tmp_24;
      real_t tmp_30 = tmp_27*(tmp_12 - tmp_13);
      real_t tmp_31 = tmp_23 - tmp_25;
      real_t tmp_32 = tmp_27*(tmp_11 - tmp_14);
      real_t tmp_33 = tmp_28*tmp_8 + tmp_29*tmp_30 + tmp_31*tmp_32;
      real_t tmp_34 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_35 = -tmp_1*tmp_18 + tmp_21*tmp_6;
      real_t tmp_36 = tmp_1*tmp_17 - tmp_19*tmp_21;
      real_t tmp_37 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_38 = tmp_28*tmp_35 + tmp_30*tmp_36 + tmp_32*tmp_37;
      real_t tmp_39 = 0.58541019662496829*walberla::real_c(edgeDirections[0]);
      real_t tmp_40 = tmp_33*tmp_34 - tmp_38*tmp_39;
      real_t tmp_41 = tmp_27*(-Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out7_id0 + Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_42 = tmp_27*(Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out8_id0 - Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_43 = tmp_27*(-Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out8_id0 + Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out7_id0);
      real_t tmp_44 = tmp_29*tmp_42 + tmp_31*tmp_43 + tmp_41*tmp_8;
      real_t tmp_45 = tmp_35*tmp_41 + tmp_36*tmp_42 + tmp_37*tmp_43;
      real_t tmp_46 = tmp_34*tmp_44 - tmp_39*tmp_45;
      real_t tmp_47 = tmp_27*(Blending_DF_Tetrahedron_blend_out3_id0*Blending_DF_Tetrahedron_blend_out7_id0 - Blending_DF_Tetrahedron_blend_out4_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_48 = tmp_27*(-Blending_DF_Tetrahedron_blend_out3_id0*Blending_DF_Tetrahedron_blend_out8_id0 + Blending_DF_Tetrahedron_blend_out5_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_49 = tmp_27*(Blending_DF_Tetrahedron_blend_out4_id0*Blending_DF_Tetrahedron_blend_out8_id0 - Blending_DF_Tetrahedron_blend_out5_id0*Blending_DF_Tetrahedron_blend_out7_id0);
      real_t tmp_50 = tmp_29*tmp_48 + tmp_31*tmp_49 + tmp_47*tmp_8;
      real_t tmp_51 = tmp_35*tmp_47 + tmp_36*tmp_48 + tmp_37*tmp_49;
      real_t tmp_52 = tmp_34*tmp_50 - tmp_39*tmp_51;
      real_t tmp_53 = p_affine_0_0*p_affine_1_1;
      real_t tmp_54 = p_affine_0_0*p_affine_1_2;
      real_t tmp_55 = p_affine_2_1*p_affine_3_2;
      real_t tmp_56 = p_affine_0_1*p_affine_1_0;
      real_t tmp_57 = p_affine_0_1*p_affine_1_2;
      real_t tmp_58 = p_affine_2_2*p_affine_3_0;
      real_t tmp_59 = p_affine_0_2*p_affine_1_0;
      real_t tmp_60 = p_affine_0_2*p_affine_1_1;
      real_t tmp_61 = p_affine_2_0*p_affine_3_1;
      real_t tmp_62 = p_affine_2_2*p_affine_3_1;
      real_t tmp_63 = p_affine_2_0*p_affine_3_2;
      real_t tmp_64 = p_affine_2_1*p_affine_3_0;
      real_t tmp_65 = std::abs(p_affine_0_0*tmp_55 - p_affine_0_0*tmp_62 + p_affine_0_1*tmp_58 - p_affine_0_1*tmp_63 + p_affine_0_2*tmp_61 - p_affine_0_2*tmp_64 - p_affine_1_0*tmp_55 + p_affine_1_0*tmp_62 - p_affine_1_1*tmp_58 + p_affine_1_1*tmp_63 - p_affine_1_2*tmp_61 + p_affine_1_2*tmp_64 + p_affine_2_0*tmp_57 - p_affine_2_0*tmp_60 - p_affine_2_1*tmp_54 + p_affine_2_1*tmp_59 + p_affine_2_2*tmp_53 - p_affine_2_2*tmp_56 - p_affine_3_0*tmp_57 + p_affine_3_0*tmp_60 + p_affine_3_1*tmp_54 - p_affine_3_1*tmp_59 - p_affine_3_2*tmp_53 + p_affine_3_2*tmp_56);
      real_t tmp_66 = 0.041666666666666657*tmp_65*std::abs(tmp_15);
      real_t tmp_67 = Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out4_id1;
      real_t tmp_68 = Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out3_id1;
      real_t tmp_69 = Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out5_id1;
      real_t tmp_70 = Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out3_id1;
      real_t tmp_71 = Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out5_id1;
      real_t tmp_72 = Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out4_id1;
      real_t tmp_73 = Blending_DF_Tetrahedron_blend_out6_id1*tmp_69 - Blending_DF_Tetrahedron_blend_out6_id1*tmp_72 + Blending_DF_Tetrahedron_blend_out7_id1*tmp_70 - Blending_DF_Tetrahedron_blend_out7_id1*tmp_71 + Blending_DF_Tetrahedron_blend_out8_id1*tmp_67 - Blending_DF_Tetrahedron_blend_out8_id1*tmp_68;
      real_t tmp_74 = tmp_26/tmp_73;
      real_t tmp_75 = tmp_74*(tmp_67 - tmp_68);
      real_t tmp_76 = tmp_74*(tmp_70 - tmp_71);
      real_t tmp_77 = tmp_74*(tmp_69 - tmp_72);
      real_t tmp_78 = tmp_29*tmp_76 + tmp_31*tmp_77 + tmp_75*tmp_8;
      real_t tmp_79 = 0.58541019662496829*walberla::real_c(edgeDirections[0]);
      real_t tmp_80 = tmp_35*tmp_75 + tmp_36*tmp_76 + tmp_37*tmp_77;
      real_t tmp_81 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_82 = tmp_78*tmp_79 - tmp_80*tmp_81;
      real_t tmp_83 = tmp_74*(-Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out7_id1 + Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_84 = tmp_74*(Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out8_id1 - Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_85 = tmp_74*(-Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out8_id1 + Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out7_id1);
      real_t tmp_86 = tmp_29*tmp_84 + tmp_31*tmp_85 + tmp_8*tmp_83;
      real_t tmp_87 = tmp_35*tmp_83 + tmp_36*tmp_84 + tmp_37*tmp_85;
      real_t tmp_88 = tmp_79*tmp_86 - tmp_81*tmp_87;
      real_t tmp_89 = tmp_74*(Blending_DF_Tetrahedron_blend_out3_id1*Blending_DF_Tetrahedron_blend_out7_id1 - Blending_DF_Tetrahedron_blend_out4_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_90 = tmp_74*(-Blending_DF_Tetrahedron_blend_out3_id1*Blending_DF_Tetrahedron_blend_out8_id1 + Blending_DF_Tetrahedron_blend_out5_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_91 = tmp_74*(Blending_DF_Tetrahedron_blend_out4_id1*Blending_DF_Tetrahedron_blend_out8_id1 - Blending_DF_Tetrahedron_blend_out5_id1*Blending_DF_Tetrahedron_blend_out7_id1);
      real_t tmp_92 = tmp_29*tmp_90 + tmp_31*tmp_91 + tmp_8*tmp_89;
      real_t tmp_93 = tmp_35*tmp_89 + tmp_36*tmp_90 + tmp_37*tmp_91;
      real_t tmp_94 = tmp_79*tmp_92 - tmp_81*tmp_93;
      real_t tmp_95 = 0.041666666666666657*tmp_65*std::abs(tmp_73);
      real_t tmp_96 = Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out4_id2;
      real_t tmp_97 = Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out3_id2;
      real_t tmp_98 = Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out5_id2;
      real_t tmp_99 = Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out3_id2;
      real_t tmp_100 = Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out5_id2;
      real_t tmp_101 = Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out4_id2;
      real_t tmp_102 = -Blending_DF_Tetrahedron_blend_out6_id2*tmp_101 + Blending_DF_Tetrahedron_blend_out6_id2*tmp_98 - Blending_DF_Tetrahedron_blend_out7_id2*tmp_100 + Blending_DF_Tetrahedron_blend_out7_id2*tmp_99 + Blending_DF_Tetrahedron_blend_out8_id2*tmp_96 - Blending_DF_Tetrahedron_blend_out8_id2*tmp_97;
      real_t tmp_103 = tmp_26/tmp_102;
      real_t tmp_104 = tmp_103*(tmp_96 - tmp_97);
      real_t tmp_105 = tmp_103*(-tmp_100 + tmp_99);
      real_t tmp_106 = tmp_103*(-tmp_101 + tmp_98);
      real_t tmp_107 = tmp_104*tmp_8 + tmp_105*tmp_29 + tmp_106*tmp_31;
      real_t tmp_108 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_109 = tmp_104*tmp_35 + tmp_105*tmp_36 + tmp_106*tmp_37;
      real_t tmp_110 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_111 = tmp_107*tmp_108 - tmp_109*tmp_110;
      real_t tmp_112 = tmp_103*(-Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out7_id2 + Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_113 = tmp_103*(Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out8_id2 - Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_114 = tmp_103*(-Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out8_id2 + Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out7_id2);
      real_t tmp_115 = tmp_112*tmp_8 + tmp_113*tmp_29 + tmp_114*tmp_31;
      real_t tmp_116 = tmp_112*tmp_35 + tmp_113*tmp_36 + tmp_114*tmp_37;
      real_t tmp_117 = tmp_108*tmp_115 - tmp_110*tmp_116;
      real_t tmp_118 = tmp_103*(Blending_DF_Tetrahedron_blend_out3_id2*Blending_DF_Tetrahedron_blend_out7_id2 - Blending_DF_Tetrahedron_blend_out4_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_119 = tmp_103*(-Blending_DF_Tetrahedron_blend_out3_id2*Blending_DF_Tetrahedron_blend_out8_id2 + Blending_DF_Tetrahedron_blend_out5_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_120 = tmp_103*(Blending_DF_Tetrahedron_blend_out4_id2*Blending_DF_Tetrahedron_blend_out8_id2 - Blending_DF_Tetrahedron_blend_out5_id2*Blending_DF_Tetrahedron_blend_out7_id2);
      real_t tmp_121 = tmp_118*tmp_8 + tmp_119*tmp_29 + tmp_120*tmp_31;
      real_t tmp_122 = tmp_118*tmp_35 + tmp_119*tmp_36 + tmp_120*tmp_37;
      real_t tmp_123 = tmp_108*tmp_121 - tmp_110*tmp_122;
      real_t tmp_124 = 0.041666666666666657*tmp_65*std::abs(tmp_102);
      real_t tmp_125 = Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out4_id3;
      real_t tmp_126 = Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out3_id3;
      real_t tmp_127 = Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out5_id3;
      real_t tmp_128 = Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out3_id3;
      real_t tmp_129 = Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out5_id3;
      real_t tmp_130 = Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out4_id3;
      real_t tmp_131 = Blending_DF_Tetrahedron_blend_out6_id3*tmp_127 - Blending_DF_Tetrahedron_blend_out6_id3*tmp_130 + Blending_DF_Tetrahedron_blend_out7_id3*tmp_128 - Blending_DF_Tetrahedron_blend_out7_id3*tmp_129 + Blending_DF_Tetrahedron_blend_out8_id3*tmp_125 - Blending_DF_Tetrahedron_blend_out8_id3*tmp_126;
      real_t tmp_132 = tmp_26/tmp_131;
      real_t tmp_133 = tmp_132*(tmp_125 - tmp_126);
      real_t tmp_134 = tmp_132*(tmp_128 - tmp_129);
      real_t tmp_135 = tmp_132*(tmp_127 - tmp_130);
      real_t tmp_136 = tmp_133*tmp_8 + tmp_134*tmp_29 + tmp_135*tmp_31;
      real_t tmp_137 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_138 = tmp_133*tmp_35 + tmp_134*tmp_36 + tmp_135*tmp_37;
      real_t tmp_139 = 0.13819660112501059*walberla::real_c(edgeDirections[0]);
      real_t tmp_140 = tmp_136*tmp_137 - tmp_138*tmp_139;
      real_t tmp_141 = tmp_132*(-Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out7_id3 + Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_142 = tmp_132*(Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out8_id3 - Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_143 = tmp_132*(-Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out8_id3 + Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out7_id3);
      real_t tmp_144 = tmp_141*tmp_8 + tmp_142*tmp_29 + tmp_143*tmp_31;
      real_t tmp_145 = tmp_141*tmp_35 + tmp_142*tmp_36 + tmp_143*tmp_37;
      real_t tmp_146 = tmp_137*tmp_144 - tmp_139*tmp_145;
      real_t tmp_147 = tmp_132*(Blending_DF_Tetrahedron_blend_out3_id3*Blending_DF_Tetrahedron_blend_out7_id3 - Blending_DF_Tetrahedron_blend_out4_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_148 = tmp_132*(-Blending_DF_Tetrahedron_blend_out3_id3*Blending_DF_Tetrahedron_blend_out8_id3 + Blending_DF_Tetrahedron_blend_out5_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_149 = tmp_132*(Blending_DF_Tetrahedron_blend_out4_id3*Blending_DF_Tetrahedron_blend_out8_id3 - Blending_DF_Tetrahedron_blend_out5_id3*Blending_DF_Tetrahedron_blend_out7_id3);
      real_t tmp_150 = tmp_147*tmp_8 + tmp_148*tmp_29 + tmp_149*tmp_31;
      real_t tmp_151 = tmp_147*tmp_35 + tmp_148*tmp_36 + tmp_149*tmp_37;
      real_t tmp_152 = tmp_137*tmp_150 - tmp_139*tmp_151;
      real_t tmp_153 = 0.041666666666666657*tmp_65*std::abs(tmp_131);
      real_t tmp_154 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_155 = tmp_18*tmp_5 - tmp_21*tmp_3;
      real_t tmp_156 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_157 = tmp_17*tmp_3 - tmp_18*tmp_22;
      real_t tmp_158 = tmp_155*tmp_28 + tmp_156*tmp_30 + tmp_157*tmp_32;
      real_t tmp_159 = 0.58541019662496829*walberla::real_c(edgeDirections[1]);
      real_t tmp_160 = tmp_154*tmp_33 - tmp_158*tmp_159;
      real_t tmp_161 = tmp_155*tmp_41 + tmp_156*tmp_42 + tmp_157*tmp_43;
      real_t tmp_162 = tmp_154*tmp_44 - tmp_159*tmp_161;
      real_t tmp_163 = tmp_155*tmp_47 + tmp_156*tmp_48 + tmp_157*tmp_49;
      real_t tmp_164 = tmp_154*tmp_50 - tmp_159*tmp_163;
      real_t tmp_165 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_166 = tmp_155*tmp_75 + tmp_156*tmp_76 + tmp_157*tmp_77;
      real_t tmp_167 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_168 = tmp_165*tmp_78 - tmp_166*tmp_167;
      real_t tmp_169 = tmp_155*tmp_83 + tmp_156*tmp_84 + tmp_157*tmp_85;
      real_t tmp_170 = tmp_165*tmp_86 - tmp_167*tmp_169;
      real_t tmp_171 = tmp_155*tmp_89 + tmp_156*tmp_90 + tmp_157*tmp_91;
      real_t tmp_172 = tmp_165*tmp_92 - tmp_167*tmp_171;
      real_t tmp_173 = 0.58541019662496829*walberla::real_c(edgeDirections[1]);
      real_t tmp_174 = tmp_104*tmp_155 + tmp_105*tmp_156 + tmp_106*tmp_157;
      real_t tmp_175 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_176 = tmp_107*tmp_173 - tmp_174*tmp_175;
      real_t tmp_177 = tmp_112*tmp_155 + tmp_113*tmp_156 + tmp_114*tmp_157;
      real_t tmp_178 = tmp_115*tmp_173 - tmp_175*tmp_177;
      real_t tmp_179 = tmp_118*tmp_155 + tmp_119*tmp_156 + tmp_120*tmp_157;
      real_t tmp_180 = tmp_121*tmp_173 - tmp_175*tmp_179;
      real_t tmp_181 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_182 = tmp_133*tmp_155 + tmp_134*tmp_156 + tmp_135*tmp_157;
      real_t tmp_183 = 0.13819660112501059*walberla::real_c(edgeDirections[1]);
      real_t tmp_184 = tmp_136*tmp_181 - tmp_182*tmp_183;
      real_t tmp_185 = tmp_141*tmp_155 + tmp_142*tmp_156 + tmp_143*tmp_157;
      real_t tmp_186 = tmp_144*tmp_181 - tmp_183*tmp_185;
      real_t tmp_187 = tmp_147*tmp_155 + tmp_148*tmp_156 + tmp_149*tmp_157;
      real_t tmp_188 = tmp_150*tmp_181 - tmp_183*tmp_187;
      real_t tmp_189 = tmp_124*(tmp_111*tmp_176 + tmp_117*tmp_178 + tmp_123*tmp_180) + tmp_153*(tmp_140*tmp_184 + tmp_146*tmp_186 + tmp_152*tmp_188) + tmp_66*(tmp_160*tmp_40 + tmp_162*tmp_46 + tmp_164*tmp_52) + tmp_95*(tmp_168*tmp_82 + tmp_170*tmp_88 + tmp_172*tmp_94);
      real_t tmp_190 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_191 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_192 = -tmp_158*tmp_191 + tmp_190*tmp_38;
      real_t tmp_193 = -tmp_161*tmp_191 + tmp_190*tmp_45;
      real_t tmp_194 = -tmp_163*tmp_191 + tmp_190*tmp_51;
      real_t tmp_195 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_196 = 0.58541019662496829*walberla::real_c(edgeDirections[2]);
      real_t tmp_197 = -tmp_166*tmp_196 + tmp_195*tmp_80;
      real_t tmp_198 = -tmp_169*tmp_196 + tmp_195*tmp_87;
      real_t tmp_199 = -tmp_171*tmp_196 + tmp_195*tmp_93;
      real_t tmp_200 = 0.58541019662496829*walberla::real_c(edgeDirections[2]);
      real_t tmp_201 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_202 = tmp_109*tmp_200 - tmp_174*tmp_201;
      real_t tmp_203 = tmp_116*tmp_200 - tmp_177*tmp_201;
      real_t tmp_204 = tmp_122*tmp_200 - tmp_179*tmp_201;
      real_t tmp_205 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_206 = 0.13819660112501059*walberla::real_c(edgeDirections[2]);
      real_t tmp_207 = tmp_138*tmp_205 - tmp_182*tmp_206;
      real_t tmp_208 = tmp_145*tmp_205 - tmp_185*tmp_206;
      real_t tmp_209 = tmp_151*tmp_205 - tmp_187*tmp_206;
      real_t tmp_210 = tmp_124*(tmp_111*tmp_202 + tmp_117*tmp_203 + tmp_123*tmp_204) + tmp_153*(tmp_140*tmp_207 + tmp_146*tmp_208 + tmp_152*tmp_209) + tmp_66*(tmp_192*tmp_40 + tmp_193*tmp_46 + tmp_194*tmp_52) + tmp_95*(tmp_197*tmp_82 + tmp_198*tmp_88 + tmp_199*tmp_94);
      real_t tmp_211 = 0.58541019662496829*walberla::real_c(edgeDirections[3]);
      real_t tmp_212 = -0.13819660112501059;
      real_t tmp_213 = 0.86180339887498936;
      real_t tmp_214 = walberla::real_c(edgeDirections[3])*(tmp_212 + tmp_213);
      real_t tmp_215 = tmp_158*tmp_211 + tmp_211*tmp_38 + tmp_214*tmp_33;
      real_t tmp_216 = tmp_161*tmp_211 + tmp_211*tmp_45 + tmp_214*tmp_44;
      real_t tmp_217 = tmp_163*tmp_211 + tmp_211*tmp_51 + tmp_214*tmp_50;
      real_t tmp_218 = 0.13819660112501059*walberla::real_c(edgeDirections[3]);
      real_t tmp_219 = -0.58541019662496829;
      real_t tmp_220 = 0.86180339887498936;
      real_t tmp_221 = walberla::real_c(edgeDirections[3])*(tmp_219 + tmp_220);
      real_t tmp_222 = tmp_166*tmp_218 + tmp_218*tmp_80 + tmp_221*tmp_78;
      real_t tmp_223 = tmp_169*tmp_218 + tmp_218*tmp_87 + tmp_221*tmp_86;
      real_t tmp_224 = tmp_171*tmp_218 + tmp_218*tmp_93 + tmp_221*tmp_92;
      real_t tmp_225 = 0.13819660112501059*walberla::real_c(edgeDirections[3]);
      real_t tmp_226 = -0.13819660112501059;
      real_t tmp_227 = 0.41458980337503171;
      real_t tmp_228 = walberla::real_c(edgeDirections[3])*(tmp_226 + tmp_227);
      real_t tmp_229 = tmp_107*tmp_228 + tmp_109*tmp_225 + tmp_174*tmp_225;
      real_t tmp_230 = tmp_115*tmp_228 + tmp_116*tmp_225 + tmp_177*tmp_225;
      real_t tmp_231 = tmp_121*tmp_228 + tmp_122*tmp_225 + tmp_179*tmp_225;
      real_t tmp_232 = 0.13819660112501059*walberla::real_c(edgeDirections[3]);
      real_t tmp_233 = -0.13819660112501059;
      real_t tmp_234 = 0.86180339887498936;
      real_t tmp_235 = walberla::real_c(edgeDirections[3])*(tmp_233 + tmp_234);
      real_t tmp_236 = tmp_136*tmp_235 + tmp_138*tmp_232 + tmp_182*tmp_232;
      real_t tmp_237 = tmp_144*tmp_235 + tmp_145*tmp_232 + tmp_185*tmp_232;
      real_t tmp_238 = tmp_150*tmp_235 + tmp_151*tmp_232 + tmp_187*tmp_232;
      real_t tmp_239 = tmp_124*(tmp_111*tmp_229 + tmp_117*tmp_230 + tmp_123*tmp_231) + tmp_153*(tmp_140*tmp_236 + tmp_146*tmp_237 + tmp_152*tmp_238) + tmp_66*(tmp_215*tmp_40 + tmp_216*tmp_46 + tmp_217*tmp_52) + tmp_95*(tmp_222*tmp_82 + tmp_223*tmp_88 + tmp_224*tmp_94);
      real_t tmp_240 = 0.13819660112501059*walberla::real_c(edgeDirections[4]);
      real_t tmp_241 = -0.58541019662496829;
      real_t tmp_242 = walberla::real_c(edgeDirections[4])*(tmp_213 + tmp_241);
      real_t tmp_243 = tmp_158*tmp_240 + tmp_240*tmp_33 + tmp_242*tmp_38;
      real_t tmp_244 = tmp_161*tmp_240 + tmp_240*tmp_44 + tmp_242*tmp_45;
      real_t tmp_245 = tmp_163*tmp_240 + tmp_240*tmp_50 + tmp_242*tmp_51;
      real_t tmp_246 = 0.58541019662496829*walberla::real_c(edgeDirections[4]);
      real_t tmp_247 = -0.13819660112501059;
      real_t tmp_248 = walberla::real_c(edgeDirections[4])*(tmp_220 + tmp_247);
      real_t tmp_249 = tmp_166*tmp_246 + tmp_246*tmp_78 + tmp_248*tmp_80;
      real_t tmp_250 = tmp_169*tmp_246 + tmp_246*tmp_86 + tmp_248*tmp_87;
      real_t tmp_251 = tmp_171*tmp_246 + tmp_246*tmp_92 + tmp_248*tmp_93;
      real_t tmp_252 = 0.13819660112501059*walberla::real_c(edgeDirections[4]);
      real_t tmp_253 = -0.13819660112501059;
      real_t tmp_254 = walberla::real_c(edgeDirections[4])*(tmp_227 + tmp_253);
      real_t tmp_255 = tmp_107*tmp_252 + tmp_109*tmp_254 + tmp_174*tmp_252;
      real_t tmp_256 = tmp_115*tmp_252 + tmp_116*tmp_254 + tmp_177*tmp_252;
      real_t tmp_257 = tmp_121*tmp_252 + tmp_122*tmp_254 + tmp_179*tmp_252;
      real_t tmp_258 = 0.13819660112501059*walberla::real_c(edgeDirections[4]);
      real_t tmp_259 = -0.13819660112501059;
      real_t tmp_260 = walberla::real_c(edgeDirections[4])*(tmp_234 + tmp_259);
      real_t tmp_261 = tmp_136*tmp_258 + tmp_138*tmp_260 + tmp_182*tmp_258;
      real_t tmp_262 = tmp_144*tmp_258 + tmp_145*tmp_260 + tmp_185*tmp_258;
      real_t tmp_263 = tmp_150*tmp_258 + tmp_151*tmp_260 + tmp_187*tmp_258;
      real_t tmp_264 = tmp_124*(tmp_111*tmp_255 + tmp_117*tmp_256 + tmp_123*tmp_257) + tmp_153*(tmp_140*tmp_261 + tmp_146*tmp_262 + tmp_152*tmp_263) + tmp_66*(tmp_243*tmp_40 + tmp_244*tmp_46 + tmp_245*tmp_52) + tmp_95*(tmp_249*tmp_82 + tmp_250*tmp_88 + tmp_251*tmp_94);
      real_t tmp_265 = 0.13819660112501059*walberla::real_c(edgeDirections[5]);
      real_t tmp_266 = walberla::real_c(edgeDirections[5])*(tmp_212 + tmp_241 + 1);
      real_t tmp_267 = tmp_158*tmp_266 + tmp_265*tmp_33 + tmp_265*tmp_38;
      real_t tmp_268 = tmp_161*tmp_266 + tmp_265*tmp_44 + tmp_265*tmp_45;
      real_t tmp_269 = tmp_163*tmp_266 + tmp_265*tmp_50 + tmp_265*tmp_51;
      real_t tmp_270 = 0.13819660112501059*walberla::real_c(edgeDirections[5]);
      real_t tmp_271 = walberla::real_c(edgeDirections[5])*(tmp_219 + tmp_247 + 1);
      real_t tmp_272 = tmp_166*tmp_271 + tmp_270*tmp_78 + tmp_270*tmp_80;
      real_t tmp_273 = tmp_169*tmp_271 + tmp_270*tmp_86 + tmp_270*tmp_87;
      real_t tmp_274 = tmp_171*tmp_271 + tmp_270*tmp_92 + tmp_270*tmp_93;
      real_t tmp_275 = 0.58541019662496829*walberla::real_c(edgeDirections[5]);
      real_t tmp_276 = walberla::real_c(edgeDirections[5])*(tmp_226 + tmp_253 + 1);
      real_t tmp_277 = tmp_107*tmp_275 + tmp_109*tmp_275 + tmp_174*tmp_276;
      real_t tmp_278 = tmp_115*tmp_275 + tmp_116*tmp_275 + tmp_177*tmp_276;
      real_t tmp_279 = tmp_121*tmp_275 + tmp_122*tmp_275 + tmp_179*tmp_276;
      real_t tmp_280 = 0.13819660112501059*walberla::real_c(edgeDirections[5]);
      real_t tmp_281 = walberla::real_c(edgeDirections[5])*(tmp_233 + tmp_259 + 1);
      real_t tmp_282 = tmp_136*tmp_280 + tmp_138*tmp_280 + tmp_182*tmp_281;
      real_t tmp_283 = tmp_144*tmp_280 + tmp_145*tmp_280 + tmp_185*tmp_281;
      real_t tmp_284 = tmp_150*tmp_280 + tmp_151*tmp_280 + tmp_187*tmp_281;
      real_t tmp_285 = tmp_124*(tmp_111*tmp_277 + tmp_117*tmp_278 + tmp_123*tmp_279) + tmp_153*(tmp_140*tmp_282 + tmp_146*tmp_283 + tmp_152*tmp_284) + tmp_66*(tmp_267*tmp_40 + tmp_268*tmp_46 + tmp_269*tmp_52) + tmp_95*(tmp_272*tmp_82 + tmp_273*tmp_88 + tmp_274*tmp_94);
      real_t tmp_286 = tmp_124*(tmp_176*tmp_202 + tmp_178*tmp_203 + tmp_180*tmp_204) + tmp_153*(tmp_184*tmp_207 + tmp_186*tmp_208 + tmp_188*tmp_209) + tmp_66*(tmp_160*tmp_192 + tmp_162*tmp_193 + tmp_164*tmp_194) + tmp_95*(tmp_168*tmp_197 + tmp_170*tmp_198 + tmp_172*tmp_199);
      real_t tmp_287 = tmp_124*(tmp_176*tmp_229 + tmp_178*tmp_230 + tmp_180*tmp_231) + tmp_153*(tmp_184*tmp_236 + tmp_186*tmp_237 + tmp_188*tmp_238) + tmp_66*(tmp_160*tmp_215 + tmp_162*tmp_216 + tmp_164*tmp_217) + tmp_95*(tmp_168*tmp_222 + tmp_170*tmp_223 + tmp_172*tmp_224);
      real_t tmp_288 = tmp_124*(tmp_176*tmp_255 + tmp_178*tmp_256 + tmp_180*tmp_257) + tmp_153*(tmp_184*tmp_261 + tmp_186*tmp_262 + tmp_188*tmp_263) + tmp_66*(tmp_160*tmp_243 + tmp_162*tmp_244 + tmp_164*tmp_245) + tmp_95*(tmp_168*tmp_249 + tmp_170*tmp_250 + tmp_172*tmp_251);
      real_t tmp_289 = tmp_124*(tmp_176*tmp_277 + tmp_178*tmp_278 + tmp_180*tmp_279) + tmp_153*(tmp_184*tmp_282 + tmp_186*tmp_283 + tmp_188*tmp_284) + tmp_66*(tmp_160*tmp_267 + tmp_162*tmp_268 + tmp_164*tmp_269) + tmp_95*(tmp_168*tmp_272 + tmp_170*tmp_273 + tmp_172*tmp_274);
      real_t tmp_290 = tmp_124*(tmp_202*tmp_229 + tmp_203*tmp_230 + tmp_204*tmp_231) + tmp_153*(tmp_207*tmp_236 + tmp_208*tmp_237 + tmp_209*tmp_238) + tmp_66*(tmp_192*tmp_215 + tmp_193*tmp_216 + tmp_194*tmp_217) + tmp_95*(tmp_197*tmp_222 + tmp_198*tmp_223 + tmp_199*tmp_224);
      real_t tmp_291 = tmp_124*(tmp_202*tmp_255 + tmp_203*tmp_256 + tmp_204*tmp_257) + tmp_153*(tmp_207*tmp_261 + tmp_208*tmp_262 + tmp_209*tmp_263) + tmp_66*(tmp_192*tmp_243 + tmp_193*tmp_244 + tmp_194*tmp_245) + tmp_95*(tmp_197*tmp_249 + tmp_198*tmp_250 + tmp_199*tmp_251);
      real_t tmp_292 = tmp_124*(tmp_202*tmp_277 + tmp_203*tmp_278 + tmp_204*tmp_279) + tmp_153*(tmp_207*tmp_282 + tmp_208*tmp_283 + tmp_209*tmp_284) + tmp_66*(tmp_192*tmp_267 + tmp_193*tmp_268 + tmp_194*tmp_269) + tmp_95*(tmp_197*tmp_272 + tmp_198*tmp_273 + tmp_199*tmp_274);
      real_t tmp_293 = tmp_124*(tmp_229*tmp_255 + tmp_230*tmp_256 + tmp_231*tmp_257) + tmp_153*(tmp_236*tmp_261 + tmp_237*tmp_262 + tmp_238*tmp_263) + tmp_66*(tmp_215*tmp_243 + tmp_216*tmp_244 + tmp_217*tmp_245) + tmp_95*(tmp_222*tmp_249 + tmp_223*tmp_250 + tmp_224*tmp_251);
      real_t tmp_294 = tmp_124*(tmp_229*tmp_277 + tmp_230*tmp_278 + tmp_231*tmp_279) + tmp_153*(tmp_236*tmp_282 + tmp_237*tmp_283 + tmp_238*tmp_284) + tmp_66*(tmp_215*tmp_267 + tmp_216*tmp_268 + tmp_217*tmp_269) + tmp_95*(tmp_222*tmp_272 + tmp_223*tmp_273 + tmp_224*tmp_274);
      real_t tmp_295 = tmp_124*(tmp_255*tmp_277 + tmp_256*tmp_278 + tmp_257*tmp_279) + tmp_153*(tmp_261*tmp_282 + tmp_262*tmp_283 + tmp_263*tmp_284) + tmp_66*(tmp_243*tmp_267 + tmp_244*tmp_268 + tmp_245*tmp_269) + tmp_95*(tmp_249*tmp_272 + tmp_250*tmp_273 + tmp_251*tmp_274);
      real_t a_0_0 = tmp_124*((tmp_111*tmp_111) + (tmp_117*tmp_117) + (tmp_123*tmp_123)) + tmp_153*((tmp_140*tmp_140) + (tmp_146*tmp_146) + (tmp_152*tmp_152)) + tmp_66*((tmp_40*tmp_40) + (tmp_46*tmp_46) + (tmp_52*tmp_52)) + tmp_95*((tmp_82*tmp_82) + (tmp_88*tmp_88) + (tmp_94*tmp_94));
      real_t a_0_1 = tmp_189;
      real_t a_0_2 = tmp_210;
      real_t a_0_3 = tmp_239;
      real_t a_0_4 = tmp_264;
      real_t a_0_5 = tmp_285;
      real_t a_1_0 = tmp_189;
      real_t a_1_1 = tmp_124*((tmp_176*tmp_176) + (tmp_178*tmp_178) + (tmp_180*tmp_180)) + tmp_153*((tmp_184*tmp_184) + (tmp_186*tmp_186) + (tmp_188*tmp_188)) + tmp_66*((tmp_160*tmp_160) + (tmp_162*tmp_162) + (tmp_164*tmp_164)) + tmp_95*((tmp_168*tmp_168) + (tmp_170*tmp_170) + (tmp_172*tmp_172));
      real_t a_1_2 = tmp_286;
      real_t a_1_3 = tmp_287;
      real_t a_1_4 = tmp_288;
      real_t a_1_5 = tmp_289;
      real_t a_2_0 = tmp_210;
      real_t a_2_1 = tmp_286;
      real_t a_2_2 = tmp_124*((tmp_202*tmp_202) + (tmp_203*tmp_203) + (tmp_204*tmp_204)) + tmp_153*((tmp_207*tmp_207) + (tmp_208*tmp_208) + (tmp_209*tmp_209)) + tmp_66*((tmp_192*tmp_192) + (tmp_193*tmp_193) + (tmp_194*tmp_194)) + tmp_95*((tmp_197*tmp_197) + (tmp_198*tmp_198) + (tmp_199*tmp_199));
      real_t a_2_3 = tmp_290;
      real_t a_2_4 = tmp_291;
      real_t a_2_5 = tmp_292;
      real_t a_3_0 = tmp_239;
      real_t a_3_1 = tmp_287;
      real_t a_3_2 = tmp_290;
      real_t a_3_3 = tmp_124*((tmp_229*tmp_229) + (tmp_230*tmp_230) + (tmp_231*tmp_231)) + tmp_153*((tmp_236*tmp_236) + (tmp_237*tmp_237) + (tmp_238*tmp_238)) + tmp_66*((tmp_215*tmp_215) + (tmp_216*tmp_216) + (tmp_217*tmp_217)) + tmp_95*((tmp_222*tmp_222) + (tmp_223*tmp_223) + (tmp_224*tmp_224));
      real_t a_3_4 = tmp_293;
      real_t a_3_5 = tmp_294;
      real_t a_4_0 = tmp_264;
      real_t a_4_1 = tmp_288;
      real_t a_4_2 = tmp_291;
      real_t a_4_3 = tmp_293;
      real_t a_4_4 = tmp_124*((tmp_255*tmp_255) + (tmp_256*tmp_256) + (tmp_257*tmp_257)) + tmp_153*((tmp_261*tmp_261) + (tmp_262*tmp_262) + (tmp_263*tmp_263)) + tmp_66*((tmp_243*tmp_243) + (tmp_244*tmp_244) + (tmp_245*tmp_245)) + tmp_95*((tmp_249*tmp_249) + (tmp_250*tmp_250) + (tmp_251*tmp_251));
      real_t a_4_5 = tmp_295;
      real_t a_5_0 = tmp_285;
      real_t a_5_1 = tmp_289;
      real_t a_5_2 = tmp_292;
      real_t a_5_3 = tmp_294;
      real_t a_5_4 = tmp_295;
      real_t a_5_5 = tmp_124*((tmp_277*tmp_277) + (tmp_278*tmp_278) + (tmp_279*tmp_279)) + tmp_153*((tmp_282*tmp_282) + (tmp_283*tmp_283) + (tmp_284*tmp_284)) + tmp_66*((tmp_267*tmp_267) + (tmp_268*tmp_268) + (tmp_269*tmp_269)) + tmp_95*((tmp_272*tmp_272) + (tmp_273*tmp_273) + (tmp_274*tmp_274));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void n1e1_mass_blending_q2::Blending_DF_Tetrahedron_blend( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
