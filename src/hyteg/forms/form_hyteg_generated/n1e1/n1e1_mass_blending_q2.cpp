/*
 * Copyright (c) 2017-2022 Nils Kohl.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The entire file was generated with the HyTeG form generator.
 *
 * Avoid modifying this file. If buggy, consider fixing the generator itself.
 */

#include "n1e1_mass_blending_q2.hpp"

namespace hyteg {
namespace forms {

   void n1e1_mass_blending_q2::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      real_t p_affine_0_0 = coords[0][0];
      real_t p_affine_0_1 = coords[0][1];
      real_t p_affine_0_2 = coords[0][2];
      real_t p_affine_1_0 = coords[1][0];
      real_t p_affine_1_1 = coords[1][1];
      real_t p_affine_1_2 = coords[1][2];
      real_t p_affine_2_0 = coords[2][0];
      real_t p_affine_2_1 = coords[2][1];
      real_t p_affine_2_2 = coords[2][2];
      real_t p_affine_3_0 = coords[3][0];
      real_t p_affine_3_1 = coords[3][1];
      real_t p_affine_3_2 = coords[3][2];
      real_t Blending_DF_Tetrahedron_blend_out0_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id0 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id1 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id2 = 0;
      real_t Blending_DF_Tetrahedron_blend_out0_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out1_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out2_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out3_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out4_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out5_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out6_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out7_id3 = 0;
      real_t Blending_DF_Tetrahedron_blend_out8_id3 = 0;
      Blending_DF_Tetrahedron_blend( 0.13819660112501042*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.58541019662496829*p_affine_3_0, 0.13819660112501042*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.58541019662496829*p_affine_3_1, 0.13819660112501042*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.58541019662496829*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id0, &Blending_DF_Tetrahedron_blend_out1_id0, &Blending_DF_Tetrahedron_blend_out2_id0, &Blending_DF_Tetrahedron_blend_out3_id0, &Blending_DF_Tetrahedron_blend_out4_id0, &Blending_DF_Tetrahedron_blend_out5_id0, &Blending_DF_Tetrahedron_blend_out6_id0, &Blending_DF_Tetrahedron_blend_out7_id0, &Blending_DF_Tetrahedron_blend_out8_id0 );
      Blending_DF_Tetrahedron_blend( 0.13819660112501048*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.58541019662496829*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501048*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.58541019662496829*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501048*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.58541019662496829*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id1, &Blending_DF_Tetrahedron_blend_out1_id1, &Blending_DF_Tetrahedron_blend_out2_id1, &Blending_DF_Tetrahedron_blend_out3_id1, &Blending_DF_Tetrahedron_blend_out4_id1, &Blending_DF_Tetrahedron_blend_out5_id1, &Blending_DF_Tetrahedron_blend_out6_id1, &Blending_DF_Tetrahedron_blend_out7_id1, &Blending_DF_Tetrahedron_blend_out8_id1 );
      Blending_DF_Tetrahedron_blend( 0.13819660112501053*p_affine_0_0 + 0.58541019662496829*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.13819660112501053*p_affine_0_1 + 0.58541019662496829*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.13819660112501053*p_affine_0_2 + 0.58541019662496829*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id2, &Blending_DF_Tetrahedron_blend_out1_id2, &Blending_DF_Tetrahedron_blend_out2_id2, &Blending_DF_Tetrahedron_blend_out3_id2, &Blending_DF_Tetrahedron_blend_out4_id2, &Blending_DF_Tetrahedron_blend_out5_id2, &Blending_DF_Tetrahedron_blend_out6_id2, &Blending_DF_Tetrahedron_blend_out7_id2, &Blending_DF_Tetrahedron_blend_out8_id2 );
      Blending_DF_Tetrahedron_blend( 0.58541019662496807*p_affine_0_0 + 0.13819660112501059*p_affine_1_0 + 0.13819660112501059*p_affine_2_0 + 0.13819660112501059*p_affine_3_0, 0.58541019662496807*p_affine_0_1 + 0.13819660112501059*p_affine_1_1 + 0.13819660112501059*p_affine_2_1 + 0.13819660112501059*p_affine_3_1, 0.58541019662496807*p_affine_0_2 + 0.13819660112501059*p_affine_1_2 + 0.13819660112501059*p_affine_2_2 + 0.13819660112501059*p_affine_3_2, &Blending_DF_Tetrahedron_blend_out0_id3, &Blending_DF_Tetrahedron_blend_out1_id3, &Blending_DF_Tetrahedron_blend_out2_id3, &Blending_DF_Tetrahedron_blend_out3_id3, &Blending_DF_Tetrahedron_blend_out4_id3, &Blending_DF_Tetrahedron_blend_out5_id3, &Blending_DF_Tetrahedron_blend_out6_id3, &Blending_DF_Tetrahedron_blend_out7_id3, &Blending_DF_Tetrahedron_blend_out8_id3 );
      real_t tmp_0 = -p_affine_0_0;
      real_t tmp_1 = p_affine_1_0 + tmp_0;
      real_t tmp_2 = -p_affine_0_1;
      real_t tmp_3 = p_affine_2_1 + tmp_2;
      real_t tmp_4 = tmp_1*tmp_3;
      real_t tmp_5 = p_affine_2_0 + tmp_0;
      real_t tmp_6 = p_affine_1_1 + tmp_2;
      real_t tmp_7 = tmp_5*tmp_6;
      real_t tmp_8 = tmp_4 - tmp_7;
      real_t tmp_9 = Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out4_id0;
      real_t tmp_10 = Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out3_id0;
      real_t tmp_11 = Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out5_id0;
      real_t tmp_12 = Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out3_id0;
      real_t tmp_13 = Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out5_id0;
      real_t tmp_14 = Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out4_id0;
      real_t tmp_15 = Blending_DF_Tetrahedron_blend_out6_id0*tmp_11 - Blending_DF_Tetrahedron_blend_out6_id0*tmp_14 + Blending_DF_Tetrahedron_blend_out7_id0*tmp_12 - Blending_DF_Tetrahedron_blend_out7_id0*tmp_13 - Blending_DF_Tetrahedron_blend_out8_id0*tmp_10 + Blending_DF_Tetrahedron_blend_out8_id0*tmp_9;
      real_t tmp_16 = -p_affine_0_2;
      real_t tmp_17 = p_affine_3_2 + tmp_16;
      real_t tmp_18 = p_affine_3_1 + tmp_2;
      real_t tmp_19 = p_affine_1_2 + tmp_16;
      real_t tmp_20 = tmp_19*tmp_5;
      real_t tmp_21 = p_affine_3_0 + tmp_0;
      real_t tmp_22 = p_affine_2_2 + tmp_16;
      real_t tmp_23 = tmp_22*tmp_6;
      real_t tmp_24 = tmp_1*tmp_22;
      real_t tmp_25 = tmp_19*tmp_3;
      real_t tmp_26 = 1.0 / (tmp_17*tmp_4 - tmp_17*tmp_7 + tmp_18*tmp_20 - tmp_18*tmp_24 + tmp_21*tmp_23 - tmp_21*tmp_25);
      real_t tmp_27 = tmp_26/tmp_15;
      real_t tmp_28 = tmp_27*(-tmp_10 + tmp_9);
      real_t tmp_29 = tmp_20 - tmp_24;
      real_t tmp_30 = tmp_27*(tmp_12 - tmp_13);
      real_t tmp_31 = tmp_23 - tmp_25;
      real_t tmp_32 = tmp_27*(tmp_11 - tmp_14);
      real_t tmp_33 = tmp_28*tmp_8 + tmp_29*tmp_30 + tmp_31*tmp_32;
      real_t tmp_34 = 0.13819660112501059*tmp_33;
      real_t tmp_35 = -tmp_1*tmp_18 + tmp_21*tmp_6;
      real_t tmp_36 = tmp_1*tmp_17 - tmp_19*tmp_21;
      real_t tmp_37 = -tmp_17*tmp_6 + tmp_18*tmp_19;
      real_t tmp_38 = tmp_28*tmp_35 + tmp_30*tmp_36 + tmp_32*tmp_37;
      real_t tmp_39 = 0.58541019662496829*tmp_38;
      real_t tmp_40 = tmp_34 - tmp_39;
      real_t tmp_41 = tmp_27*(-Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out7_id0 + Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_42 = tmp_27*(Blending_DF_Tetrahedron_blend_out0_id0*Blending_DF_Tetrahedron_blend_out8_id0 - Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_43 = tmp_27*(-Blending_DF_Tetrahedron_blend_out1_id0*Blending_DF_Tetrahedron_blend_out8_id0 + Blending_DF_Tetrahedron_blend_out2_id0*Blending_DF_Tetrahedron_blend_out7_id0);
      real_t tmp_44 = tmp_29*tmp_42 + tmp_31*tmp_43 + tmp_41*tmp_8;
      real_t tmp_45 = 0.13819660112501059*tmp_44;
      real_t tmp_46 = tmp_35*tmp_41 + tmp_36*tmp_42 + tmp_37*tmp_43;
      real_t tmp_47 = 0.58541019662496829*tmp_46;
      real_t tmp_48 = tmp_45 - tmp_47;
      real_t tmp_49 = tmp_27*(Blending_DF_Tetrahedron_blend_out3_id0*Blending_DF_Tetrahedron_blend_out7_id0 - Blending_DF_Tetrahedron_blend_out4_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_50 = tmp_27*(-Blending_DF_Tetrahedron_blend_out3_id0*Blending_DF_Tetrahedron_blend_out8_id0 + Blending_DF_Tetrahedron_blend_out5_id0*Blending_DF_Tetrahedron_blend_out6_id0);
      real_t tmp_51 = tmp_27*(Blending_DF_Tetrahedron_blend_out4_id0*Blending_DF_Tetrahedron_blend_out8_id0 - Blending_DF_Tetrahedron_blend_out5_id0*Blending_DF_Tetrahedron_blend_out7_id0);
      real_t tmp_52 = tmp_29*tmp_50 + tmp_31*tmp_51 + tmp_49*tmp_8;
      real_t tmp_53 = 0.13819660112501059*tmp_52;
      real_t tmp_54 = tmp_35*tmp_49 + tmp_36*tmp_50 + tmp_37*tmp_51;
      real_t tmp_55 = 0.58541019662496829*tmp_54;
      real_t tmp_56 = tmp_53 - tmp_55;
      real_t tmp_57 = p_affine_0_0*p_affine_1_1;
      real_t tmp_58 = p_affine_0_0*p_affine_1_2;
      real_t tmp_59 = p_affine_2_1*p_affine_3_2;
      real_t tmp_60 = p_affine_0_1*p_affine_1_0;
      real_t tmp_61 = p_affine_0_1*p_affine_1_2;
      real_t tmp_62 = p_affine_2_2*p_affine_3_0;
      real_t tmp_63 = p_affine_0_2*p_affine_1_0;
      real_t tmp_64 = p_affine_0_2*p_affine_1_1;
      real_t tmp_65 = p_affine_2_0*p_affine_3_1;
      real_t tmp_66 = p_affine_2_2*p_affine_3_1;
      real_t tmp_67 = p_affine_2_0*p_affine_3_2;
      real_t tmp_68 = p_affine_2_1*p_affine_3_0;
      real_t tmp_69 = std::abs(p_affine_0_0*tmp_59 - p_affine_0_0*tmp_66 + p_affine_0_1*tmp_62 - p_affine_0_1*tmp_67 + p_affine_0_2*tmp_65 - p_affine_0_2*tmp_68 - p_affine_1_0*tmp_59 + p_affine_1_0*tmp_66 - p_affine_1_1*tmp_62 + p_affine_1_1*tmp_67 - p_affine_1_2*tmp_65 + p_affine_1_2*tmp_68 + p_affine_2_0*tmp_61 - p_affine_2_0*tmp_64 - p_affine_2_1*tmp_58 + p_affine_2_1*tmp_63 + p_affine_2_2*tmp_57 - p_affine_2_2*tmp_60 - p_affine_3_0*tmp_61 + p_affine_3_0*tmp_64 + p_affine_3_1*tmp_58 - p_affine_3_1*tmp_63 - p_affine_3_2*tmp_57 + p_affine_3_2*tmp_60);
      real_t tmp_70 = 0.041666666666666657*tmp_69*std::abs(tmp_15);
      real_t tmp_71 = Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out4_id1;
      real_t tmp_72 = Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out3_id1;
      real_t tmp_73 = Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out5_id1;
      real_t tmp_74 = Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out3_id1;
      real_t tmp_75 = Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out5_id1;
      real_t tmp_76 = Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out4_id1;
      real_t tmp_77 = Blending_DF_Tetrahedron_blend_out6_id1*tmp_73 - Blending_DF_Tetrahedron_blend_out6_id1*tmp_76 + Blending_DF_Tetrahedron_blend_out7_id1*tmp_74 - Blending_DF_Tetrahedron_blend_out7_id1*tmp_75 + Blending_DF_Tetrahedron_blend_out8_id1*tmp_71 - Blending_DF_Tetrahedron_blend_out8_id1*tmp_72;
      real_t tmp_78 = tmp_26/tmp_77;
      real_t tmp_79 = tmp_78*(tmp_71 - tmp_72);
      real_t tmp_80 = tmp_78*(tmp_74 - tmp_75);
      real_t tmp_81 = tmp_78*(tmp_73 - tmp_76);
      real_t tmp_82 = tmp_29*tmp_80 + tmp_31*tmp_81 + tmp_79*tmp_8;
      real_t tmp_83 = 0.58541019662496829*tmp_82;
      real_t tmp_84 = tmp_35*tmp_79 + tmp_36*tmp_80 + tmp_37*tmp_81;
      real_t tmp_85 = 0.13819660112501059*tmp_84;
      real_t tmp_86 = tmp_83 - tmp_85;
      real_t tmp_87 = tmp_78*(-Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out7_id1 + Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_88 = tmp_78*(Blending_DF_Tetrahedron_blend_out0_id1*Blending_DF_Tetrahedron_blend_out8_id1 - Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_89 = tmp_78*(-Blending_DF_Tetrahedron_blend_out1_id1*Blending_DF_Tetrahedron_blend_out8_id1 + Blending_DF_Tetrahedron_blend_out2_id1*Blending_DF_Tetrahedron_blend_out7_id1);
      real_t tmp_90 = tmp_29*tmp_88 + tmp_31*tmp_89 + tmp_8*tmp_87;
      real_t tmp_91 = 0.58541019662496829*tmp_90;
      real_t tmp_92 = tmp_35*tmp_87 + tmp_36*tmp_88 + tmp_37*tmp_89;
      real_t tmp_93 = 0.13819660112501059*tmp_92;
      real_t tmp_94 = tmp_91 - tmp_93;
      real_t tmp_95 = tmp_78*(Blending_DF_Tetrahedron_blend_out3_id1*Blending_DF_Tetrahedron_blend_out7_id1 - Blending_DF_Tetrahedron_blend_out4_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_96 = tmp_78*(-Blending_DF_Tetrahedron_blend_out3_id1*Blending_DF_Tetrahedron_blend_out8_id1 + Blending_DF_Tetrahedron_blend_out5_id1*Blending_DF_Tetrahedron_blend_out6_id1);
      real_t tmp_97 = tmp_78*(Blending_DF_Tetrahedron_blend_out4_id1*Blending_DF_Tetrahedron_blend_out8_id1 - Blending_DF_Tetrahedron_blend_out5_id1*Blending_DF_Tetrahedron_blend_out7_id1);
      real_t tmp_98 = tmp_29*tmp_96 + tmp_31*tmp_97 + tmp_8*tmp_95;
      real_t tmp_99 = 0.58541019662496829*tmp_98;
      real_t tmp_100 = tmp_35*tmp_95 + tmp_36*tmp_96 + tmp_37*tmp_97;
      real_t tmp_101 = 0.13819660112501059*tmp_100;
      real_t tmp_102 = -tmp_101 + tmp_99;
      real_t tmp_103 = 0.041666666666666657*tmp_69*std::abs(tmp_77);
      real_t tmp_104 = Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out4_id2;
      real_t tmp_105 = Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out3_id2;
      real_t tmp_106 = Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out5_id2;
      real_t tmp_107 = Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out3_id2;
      real_t tmp_108 = Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out5_id2;
      real_t tmp_109 = Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out4_id2;
      real_t tmp_110 = Blending_DF_Tetrahedron_blend_out6_id2*tmp_106 - Blending_DF_Tetrahedron_blend_out6_id2*tmp_109 + Blending_DF_Tetrahedron_blend_out7_id2*tmp_107 - Blending_DF_Tetrahedron_blend_out7_id2*tmp_108 + Blending_DF_Tetrahedron_blend_out8_id2*tmp_104 - Blending_DF_Tetrahedron_blend_out8_id2*tmp_105;
      real_t tmp_111 = tmp_26/tmp_110;
      real_t tmp_112 = tmp_111*(tmp_104 - tmp_105);
      real_t tmp_113 = tmp_111*(tmp_107 - tmp_108);
      real_t tmp_114 = tmp_111*(tmp_106 - tmp_109);
      real_t tmp_115 = tmp_112*tmp_8 + tmp_113*tmp_29 + tmp_114*tmp_31;
      real_t tmp_116 = 0.13819660112501059*tmp_115;
      real_t tmp_117 = tmp_112*tmp_35 + tmp_113*tmp_36 + tmp_114*tmp_37;
      real_t tmp_118 = 0.13819660112501059*tmp_117;
      real_t tmp_119 = tmp_116 - tmp_118;
      real_t tmp_120 = tmp_111*(-Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out7_id2 + Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_121 = tmp_111*(Blending_DF_Tetrahedron_blend_out0_id2*Blending_DF_Tetrahedron_blend_out8_id2 - Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_122 = tmp_111*(-Blending_DF_Tetrahedron_blend_out1_id2*Blending_DF_Tetrahedron_blend_out8_id2 + Blending_DF_Tetrahedron_blend_out2_id2*Blending_DF_Tetrahedron_blend_out7_id2);
      real_t tmp_123 = tmp_120*tmp_8 + tmp_121*tmp_29 + tmp_122*tmp_31;
      real_t tmp_124 = 0.13819660112501059*tmp_123;
      real_t tmp_125 = tmp_120*tmp_35 + tmp_121*tmp_36 + tmp_122*tmp_37;
      real_t tmp_126 = 0.13819660112501059*tmp_125;
      real_t tmp_127 = tmp_124 - tmp_126;
      real_t tmp_128 = tmp_111*(Blending_DF_Tetrahedron_blend_out3_id2*Blending_DF_Tetrahedron_blend_out7_id2 - Blending_DF_Tetrahedron_blend_out4_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_129 = tmp_111*(-Blending_DF_Tetrahedron_blend_out3_id2*Blending_DF_Tetrahedron_blend_out8_id2 + Blending_DF_Tetrahedron_blend_out5_id2*Blending_DF_Tetrahedron_blend_out6_id2);
      real_t tmp_130 = tmp_111*(Blending_DF_Tetrahedron_blend_out4_id2*Blending_DF_Tetrahedron_blend_out8_id2 - Blending_DF_Tetrahedron_blend_out5_id2*Blending_DF_Tetrahedron_blend_out7_id2);
      real_t tmp_131 = tmp_128*tmp_8 + tmp_129*tmp_29 + tmp_130*tmp_31;
      real_t tmp_132 = 0.13819660112501059*tmp_131;
      real_t tmp_133 = tmp_128*tmp_35 + tmp_129*tmp_36 + tmp_130*tmp_37;
      real_t tmp_134 = 0.13819660112501059*tmp_133;
      real_t tmp_135 = tmp_132 - tmp_134;
      real_t tmp_136 = 0.041666666666666657*tmp_69*std::abs(tmp_110);
      real_t tmp_137 = Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out4_id3;
      real_t tmp_138 = Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out3_id3;
      real_t tmp_139 = Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out5_id3;
      real_t tmp_140 = Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out3_id3;
      real_t tmp_141 = Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out5_id3;
      real_t tmp_142 = Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out4_id3;
      real_t tmp_143 = Blending_DF_Tetrahedron_blend_out6_id3*tmp_139 - Blending_DF_Tetrahedron_blend_out6_id3*tmp_142 + Blending_DF_Tetrahedron_blend_out7_id3*tmp_140 - Blending_DF_Tetrahedron_blend_out7_id3*tmp_141 + Blending_DF_Tetrahedron_blend_out8_id3*tmp_137 - Blending_DF_Tetrahedron_blend_out8_id3*tmp_138;
      real_t tmp_144 = tmp_26/tmp_143;
      real_t tmp_145 = tmp_144*(tmp_137 - tmp_138);
      real_t tmp_146 = tmp_144*(tmp_140 - tmp_141);
      real_t tmp_147 = tmp_144*(tmp_139 - tmp_142);
      real_t tmp_148 = tmp_145*tmp_8 + tmp_146*tmp_29 + tmp_147*tmp_31;
      real_t tmp_149 = 0.13819660112501059*tmp_148;
      real_t tmp_150 = tmp_145*tmp_35 + tmp_146*tmp_36 + tmp_147*tmp_37;
      real_t tmp_151 = 0.13819660112501059*tmp_150;
      real_t tmp_152 = tmp_149 - tmp_151;
      real_t tmp_153 = tmp_144*(-Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out7_id3 + Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_154 = tmp_144*(Blending_DF_Tetrahedron_blend_out0_id3*Blending_DF_Tetrahedron_blend_out8_id3 - Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_155 = tmp_144*(-Blending_DF_Tetrahedron_blend_out1_id3*Blending_DF_Tetrahedron_blend_out8_id3 + Blending_DF_Tetrahedron_blend_out2_id3*Blending_DF_Tetrahedron_blend_out7_id3);
      real_t tmp_156 = tmp_153*tmp_8 + tmp_154*tmp_29 + tmp_155*tmp_31;
      real_t tmp_157 = 0.13819660112501059*tmp_156;
      real_t tmp_158 = tmp_153*tmp_35 + tmp_154*tmp_36 + tmp_155*tmp_37;
      real_t tmp_159 = 0.13819660112501059*tmp_158;
      real_t tmp_160 = tmp_157 - tmp_159;
      real_t tmp_161 = tmp_144*(Blending_DF_Tetrahedron_blend_out3_id3*Blending_DF_Tetrahedron_blend_out7_id3 - Blending_DF_Tetrahedron_blend_out4_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_162 = tmp_144*(-Blending_DF_Tetrahedron_blend_out3_id3*Blending_DF_Tetrahedron_blend_out8_id3 + Blending_DF_Tetrahedron_blend_out5_id3*Blending_DF_Tetrahedron_blend_out6_id3);
      real_t tmp_163 = tmp_144*(Blending_DF_Tetrahedron_blend_out4_id3*Blending_DF_Tetrahedron_blend_out8_id3 - Blending_DF_Tetrahedron_blend_out5_id3*Blending_DF_Tetrahedron_blend_out7_id3);
      real_t tmp_164 = tmp_161*tmp_8 + tmp_162*tmp_29 + tmp_163*tmp_31;
      real_t tmp_165 = 0.13819660112501059*tmp_164;
      real_t tmp_166 = tmp_161*tmp_35 + tmp_162*tmp_36 + tmp_163*tmp_37;
      real_t tmp_167 = 0.13819660112501059*tmp_166;
      real_t tmp_168 = tmp_165 - tmp_167;
      real_t tmp_169 = 0.041666666666666657*tmp_69*std::abs(tmp_143);
      real_t tmp_170 = 0.13819660112501059*tmp_33;
      real_t tmp_171 = tmp_18*tmp_5 - tmp_21*tmp_3;
      real_t tmp_172 = -tmp_17*tmp_5 + tmp_21*tmp_22;
      real_t tmp_173 = tmp_17*tmp_3 - tmp_18*tmp_22;
      real_t tmp_174 = tmp_171*tmp_28 + tmp_172*tmp_30 + tmp_173*tmp_32;
      real_t tmp_175 = 0.58541019662496829*tmp_174;
      real_t tmp_176 = tmp_170 - tmp_175;
      real_t tmp_177 = 0.13819660112501059*tmp_44;
      real_t tmp_178 = tmp_171*tmp_41 + tmp_172*tmp_42 + tmp_173*tmp_43;
      real_t tmp_179 = 0.58541019662496829*tmp_178;
      real_t tmp_180 = tmp_177 - tmp_179;
      real_t tmp_181 = 0.13819660112501059*tmp_52;
      real_t tmp_182 = tmp_171*tmp_49 + tmp_172*tmp_50 + tmp_173*tmp_51;
      real_t tmp_183 = 0.58541019662496829*tmp_182;
      real_t tmp_184 = tmp_181 - tmp_183;
      real_t tmp_185 = 0.13819660112501059*tmp_82;
      real_t tmp_186 = tmp_171*tmp_79 + tmp_172*tmp_80 + tmp_173*tmp_81;
      real_t tmp_187 = 0.13819660112501059*tmp_186;
      real_t tmp_188 = tmp_185 - tmp_187;
      real_t tmp_189 = 0.13819660112501059*tmp_90;
      real_t tmp_190 = tmp_171*tmp_87 + tmp_172*tmp_88 + tmp_173*tmp_89;
      real_t tmp_191 = 0.13819660112501059*tmp_190;
      real_t tmp_192 = tmp_189 - tmp_191;
      real_t tmp_193 = 0.13819660112501059*tmp_98;
      real_t tmp_194 = tmp_171*tmp_95 + tmp_172*tmp_96 + tmp_173*tmp_97;
      real_t tmp_195 = 0.13819660112501059*tmp_194;
      real_t tmp_196 = tmp_193 - tmp_195;
      real_t tmp_197 = 0.58541019662496829*tmp_115;
      real_t tmp_198 = tmp_112*tmp_171 + tmp_113*tmp_172 + tmp_114*tmp_173;
      real_t tmp_199 = 0.13819660112501059*tmp_198;
      real_t tmp_200 = tmp_197 - tmp_199;
      real_t tmp_201 = 0.58541019662496829*tmp_123;
      real_t tmp_202 = tmp_120*tmp_171 + tmp_121*tmp_172 + tmp_122*tmp_173;
      real_t tmp_203 = 0.13819660112501059*tmp_202;
      real_t tmp_204 = tmp_201 - tmp_203;
      real_t tmp_205 = 0.58541019662496829*tmp_131;
      real_t tmp_206 = tmp_128*tmp_171 + tmp_129*tmp_172 + tmp_130*tmp_173;
      real_t tmp_207 = 0.13819660112501059*tmp_206;
      real_t tmp_208 = tmp_205 - tmp_207;
      real_t tmp_209 = 0.13819660112501059*tmp_148;
      real_t tmp_210 = tmp_145*tmp_171 + tmp_146*tmp_172 + tmp_147*tmp_173;
      real_t tmp_211 = 0.13819660112501059*tmp_210;
      real_t tmp_212 = tmp_209 - tmp_211;
      real_t tmp_213 = 0.13819660112501059*tmp_156;
      real_t tmp_214 = tmp_153*tmp_171 + tmp_154*tmp_172 + tmp_155*tmp_173;
      real_t tmp_215 = 0.13819660112501059*tmp_214;
      real_t tmp_216 = tmp_213 - tmp_215;
      real_t tmp_217 = 0.13819660112501059*tmp_164;
      real_t tmp_218 = tmp_161*tmp_171 + tmp_162*tmp_172 + tmp_163*tmp_173;
      real_t tmp_219 = 0.13819660112501059*tmp_218;
      real_t tmp_220 = tmp_217 - tmp_219;
      real_t tmp_221 = tmp_103*(tmp_102*tmp_196 + tmp_188*tmp_86 + tmp_192*tmp_94) + tmp_136*(tmp_119*tmp_200 + tmp_127*tmp_204 + tmp_135*tmp_208) + tmp_169*(tmp_152*tmp_212 + tmp_160*tmp_216 + tmp_168*tmp_220) + tmp_70*(tmp_176*tmp_40 + tmp_180*tmp_48 + tmp_184*tmp_56);
      real_t tmp_222 = 0.13819660112501059*tmp_38;
      real_t tmp_223 = 0.13819660112501059*tmp_174;
      real_t tmp_224 = tmp_222 - tmp_223;
      real_t tmp_225 = 0.13819660112501059*tmp_46;
      real_t tmp_226 = 0.13819660112501059*tmp_178;
      real_t tmp_227 = tmp_225 - tmp_226;
      real_t tmp_228 = 0.13819660112501059*tmp_54;
      real_t tmp_229 = 0.13819660112501059*tmp_182;
      real_t tmp_230 = tmp_228 - tmp_229;
      real_t tmp_231 = 0.13819660112501059*tmp_84;
      real_t tmp_232 = 0.58541019662496829*tmp_186;
      real_t tmp_233 = tmp_231 - tmp_232;
      real_t tmp_234 = 0.13819660112501059*tmp_92;
      real_t tmp_235 = 0.58541019662496829*tmp_190;
      real_t tmp_236 = tmp_234 - tmp_235;
      real_t tmp_237 = 0.13819660112501059*tmp_100;
      real_t tmp_238 = 0.58541019662496829*tmp_194;
      real_t tmp_239 = tmp_237 - tmp_238;
      real_t tmp_240 = 0.58541019662496829*tmp_117;
      real_t tmp_241 = 0.13819660112501059*tmp_198;
      real_t tmp_242 = tmp_240 - tmp_241;
      real_t tmp_243 = 0.58541019662496829*tmp_125;
      real_t tmp_244 = 0.13819660112501059*tmp_202;
      real_t tmp_245 = tmp_243 - tmp_244;
      real_t tmp_246 = 0.58541019662496829*tmp_133;
      real_t tmp_247 = 0.13819660112501059*tmp_206;
      real_t tmp_248 = tmp_246 - tmp_247;
      real_t tmp_249 = 0.13819660112501059*tmp_150;
      real_t tmp_250 = 0.13819660112501059*tmp_210;
      real_t tmp_251 = tmp_249 - tmp_250;
      real_t tmp_252 = 0.13819660112501059*tmp_158;
      real_t tmp_253 = 0.13819660112501059*tmp_214;
      real_t tmp_254 = tmp_252 - tmp_253;
      real_t tmp_255 = 0.13819660112501059*tmp_166;
      real_t tmp_256 = 0.13819660112501059*tmp_218;
      real_t tmp_257 = tmp_255 - tmp_256;
      real_t tmp_258 = tmp_103*(tmp_102*tmp_239 + tmp_233*tmp_86 + tmp_236*tmp_94) + tmp_136*(tmp_119*tmp_242 + tmp_127*tmp_245 + tmp_135*tmp_248) + tmp_169*(tmp_152*tmp_251 + tmp_160*tmp_254 + tmp_168*tmp_257) + tmp_70*(tmp_224*tmp_40 + tmp_227*tmp_48 + tmp_230*tmp_56);
      real_t tmp_259 = -0.13819660112501059;
      real_t tmp_260 = 0.86180339887498936;
      real_t tmp_261 = tmp_259 + tmp_260;
      real_t tmp_262 = tmp_175 + tmp_261*tmp_33 + tmp_39;
      real_t tmp_263 = tmp_179 + tmp_261*tmp_44 + tmp_47;
      real_t tmp_264 = tmp_183 + tmp_261*tmp_52 + tmp_55;
      real_t tmp_265 = -0.58541019662496829;
      real_t tmp_266 = 0.86180339887498936;
      real_t tmp_267 = tmp_265 + tmp_266;
      real_t tmp_268 = tmp_187 + tmp_267*tmp_82 + tmp_85;
      real_t tmp_269 = tmp_191 + tmp_267*tmp_90 + tmp_93;
      real_t tmp_270 = tmp_101 + tmp_195 + tmp_267*tmp_98;
      real_t tmp_271 = -0.13819660112501059;
      real_t tmp_272 = 0.41458980337503171;
      real_t tmp_273 = tmp_271 + tmp_272;
      real_t tmp_274 = tmp_115*tmp_273 + tmp_118 + tmp_199;
      real_t tmp_275 = tmp_123*tmp_273 + tmp_126 + tmp_203;
      real_t tmp_276 = tmp_131*tmp_273 + tmp_134 + tmp_207;
      real_t tmp_277 = -0.13819660112501059;
      real_t tmp_278 = 0.86180339887498936;
      real_t tmp_279 = tmp_277 + tmp_278;
      real_t tmp_280 = tmp_148*tmp_279 + tmp_151 + tmp_211;
      real_t tmp_281 = tmp_156*tmp_279 + tmp_159 + tmp_215;
      real_t tmp_282 = tmp_164*tmp_279 + tmp_167 + tmp_219;
      real_t tmp_283 = tmp_103*(tmp_102*tmp_270 + tmp_268*tmp_86 + tmp_269*tmp_94) + tmp_136*(tmp_119*tmp_274 + tmp_127*tmp_275 + tmp_135*tmp_276) + tmp_169*(tmp_152*tmp_280 + tmp_160*tmp_281 + tmp_168*tmp_282) + tmp_70*(tmp_262*tmp_40 + tmp_263*tmp_48 + tmp_264*tmp_56);
      real_t tmp_284 = -0.58541019662496829;
      real_t tmp_285 = tmp_260 + tmp_284;
      real_t tmp_286 = tmp_223 + tmp_285*tmp_38 + tmp_34;
      real_t tmp_287 = tmp_226 + tmp_285*tmp_46 + tmp_45;
      real_t tmp_288 = tmp_229 + tmp_285*tmp_54 + tmp_53;
      real_t tmp_289 = -0.13819660112501059;
      real_t tmp_290 = tmp_266 + tmp_289;
      real_t tmp_291 = tmp_232 + tmp_290*tmp_84 + tmp_83;
      real_t tmp_292 = tmp_235 + tmp_290*tmp_92 + tmp_91;
      real_t tmp_293 = tmp_100*tmp_290 + tmp_238 + tmp_99;
      real_t tmp_294 = -0.13819660112501059;
      real_t tmp_295 = tmp_272 + tmp_294;
      real_t tmp_296 = tmp_116 + tmp_117*tmp_295 + tmp_241;
      real_t tmp_297 = tmp_124 + tmp_125*tmp_295 + tmp_244;
      real_t tmp_298 = tmp_132 + tmp_133*tmp_295 + tmp_247;
      real_t tmp_299 = -0.13819660112501059;
      real_t tmp_300 = tmp_278 + tmp_299;
      real_t tmp_301 = tmp_149 + tmp_150*tmp_300 + tmp_250;
      real_t tmp_302 = tmp_157 + tmp_158*tmp_300 + tmp_253;
      real_t tmp_303 = tmp_165 + tmp_166*tmp_300 + tmp_256;
      real_t tmp_304 = tmp_103*(tmp_102*tmp_293 + tmp_291*tmp_86 + tmp_292*tmp_94) + tmp_136*(tmp_119*tmp_296 + tmp_127*tmp_297 + tmp_135*tmp_298) + tmp_169*(tmp_152*tmp_301 + tmp_160*tmp_302 + tmp_168*tmp_303) + tmp_70*(tmp_286*tmp_40 + tmp_287*tmp_48 + tmp_288*tmp_56);
      real_t tmp_305 = tmp_259 + tmp_284 + 1;
      real_t tmp_306 = tmp_170 + tmp_174*tmp_305 + tmp_222;
      real_t tmp_307 = tmp_177 + tmp_178*tmp_305 + tmp_225;
      real_t tmp_308 = tmp_181 + tmp_182*tmp_305 + tmp_228;
      real_t tmp_309 = tmp_265 + tmp_289 + 1;
      real_t tmp_310 = tmp_185 + tmp_186*tmp_309 + tmp_231;
      real_t tmp_311 = tmp_189 + tmp_190*tmp_309 + tmp_234;
      real_t tmp_312 = tmp_193 + tmp_194*tmp_309 + tmp_237;
      real_t tmp_313 = tmp_271 + tmp_294 + 1;
      real_t tmp_314 = tmp_197 + tmp_198*tmp_313 + tmp_240;
      real_t tmp_315 = tmp_201 + tmp_202*tmp_313 + tmp_243;
      real_t tmp_316 = tmp_205 + tmp_206*tmp_313 + tmp_246;
      real_t tmp_317 = tmp_277 + tmp_299 + 1;
      real_t tmp_318 = tmp_209 + tmp_210*tmp_317 + tmp_249;
      real_t tmp_319 = tmp_213 + tmp_214*tmp_317 + tmp_252;
      real_t tmp_320 = tmp_217 + tmp_218*tmp_317 + tmp_255;
      real_t tmp_321 = tmp_103*(tmp_102*tmp_312 + tmp_310*tmp_86 + tmp_311*tmp_94) + tmp_136*(tmp_119*tmp_314 + tmp_127*tmp_315 + tmp_135*tmp_316) + tmp_169*(tmp_152*tmp_318 + tmp_160*tmp_319 + tmp_168*tmp_320) + tmp_70*(tmp_306*tmp_40 + tmp_307*tmp_48 + tmp_308*tmp_56);
      real_t tmp_322 = tmp_103*(tmp_188*tmp_233 + tmp_192*tmp_236 + tmp_196*tmp_239) + tmp_136*(tmp_200*tmp_242 + tmp_204*tmp_245 + tmp_208*tmp_248) + tmp_169*(tmp_212*tmp_251 + tmp_216*tmp_254 + tmp_220*tmp_257) + tmp_70*(tmp_176*tmp_224 + tmp_180*tmp_227 + tmp_184*tmp_230);
      real_t tmp_323 = tmp_103*(tmp_188*tmp_268 + tmp_192*tmp_269 + tmp_196*tmp_270) + tmp_136*(tmp_200*tmp_274 + tmp_204*tmp_275 + tmp_208*tmp_276) + tmp_169*(tmp_212*tmp_280 + tmp_216*tmp_281 + tmp_220*tmp_282) + tmp_70*(tmp_176*tmp_262 + tmp_180*tmp_263 + tmp_184*tmp_264);
      real_t tmp_324 = tmp_103*(tmp_188*tmp_291 + tmp_192*tmp_292 + tmp_196*tmp_293) + tmp_136*(tmp_200*tmp_296 + tmp_204*tmp_297 + tmp_208*tmp_298) + tmp_169*(tmp_212*tmp_301 + tmp_216*tmp_302 + tmp_220*tmp_303) + tmp_70*(tmp_176*tmp_286 + tmp_180*tmp_287 + tmp_184*tmp_288);
      real_t tmp_325 = tmp_103*(tmp_188*tmp_310 + tmp_192*tmp_311 + tmp_196*tmp_312) + tmp_136*(tmp_200*tmp_314 + tmp_204*tmp_315 + tmp_208*tmp_316) + tmp_169*(tmp_212*tmp_318 + tmp_216*tmp_319 + tmp_220*tmp_320) + tmp_70*(tmp_176*tmp_306 + tmp_180*tmp_307 + tmp_184*tmp_308);
      real_t tmp_326 = tmp_103*(tmp_233*tmp_268 + tmp_236*tmp_269 + tmp_239*tmp_270) + tmp_136*(tmp_242*tmp_274 + tmp_245*tmp_275 + tmp_248*tmp_276) + tmp_169*(tmp_251*tmp_280 + tmp_254*tmp_281 + tmp_257*tmp_282) + tmp_70*(tmp_224*tmp_262 + tmp_227*tmp_263 + tmp_230*tmp_264);
      real_t tmp_327 = tmp_103*(tmp_233*tmp_291 + tmp_236*tmp_292 + tmp_239*tmp_293) + tmp_136*(tmp_242*tmp_296 + tmp_245*tmp_297 + tmp_248*tmp_298) + tmp_169*(tmp_251*tmp_301 + tmp_254*tmp_302 + tmp_257*tmp_303) + tmp_70*(tmp_224*tmp_286 + tmp_227*tmp_287 + tmp_230*tmp_288);
      real_t tmp_328 = tmp_103*(tmp_233*tmp_310 + tmp_236*tmp_311 + tmp_239*tmp_312) + tmp_136*(tmp_242*tmp_314 + tmp_245*tmp_315 + tmp_248*tmp_316) + tmp_169*(tmp_251*tmp_318 + tmp_254*tmp_319 + tmp_257*tmp_320) + tmp_70*(tmp_224*tmp_306 + tmp_227*tmp_307 + tmp_230*tmp_308);
      real_t tmp_329 = tmp_103*(tmp_268*tmp_291 + tmp_269*tmp_292 + tmp_270*tmp_293) + tmp_136*(tmp_274*tmp_296 + tmp_275*tmp_297 + tmp_276*tmp_298) + tmp_169*(tmp_280*tmp_301 + tmp_281*tmp_302 + tmp_282*tmp_303) + tmp_70*(tmp_262*tmp_286 + tmp_263*tmp_287 + tmp_264*tmp_288);
      real_t tmp_330 = tmp_103*(tmp_268*tmp_310 + tmp_269*tmp_311 + tmp_270*tmp_312) + tmp_136*(tmp_274*tmp_314 + tmp_275*tmp_315 + tmp_276*tmp_316) + tmp_169*(tmp_280*tmp_318 + tmp_281*tmp_319 + tmp_282*tmp_320) + tmp_70*(tmp_262*tmp_306 + tmp_263*tmp_307 + tmp_264*tmp_308);
      real_t tmp_331 = tmp_103*(tmp_291*tmp_310 + tmp_292*tmp_311 + tmp_293*tmp_312) + tmp_136*(tmp_296*tmp_314 + tmp_297*tmp_315 + tmp_298*tmp_316) + tmp_169*(tmp_301*tmp_318 + tmp_302*tmp_319 + tmp_303*tmp_320) + tmp_70*(tmp_286*tmp_306 + tmp_287*tmp_307 + tmp_288*tmp_308);
      real_t a_0_0 = tmp_103*((tmp_102*tmp_102) + (tmp_86*tmp_86) + (tmp_94*tmp_94)) + tmp_136*((tmp_119*tmp_119) + (tmp_127*tmp_127) + (tmp_135*tmp_135)) + tmp_169*((tmp_152*tmp_152) + (tmp_160*tmp_160) + (tmp_168*tmp_168)) + tmp_70*((tmp_40*tmp_40) + (tmp_48*tmp_48) + (tmp_56*tmp_56));
      real_t a_0_1 = tmp_221;
      real_t a_0_2 = tmp_258;
      real_t a_0_3 = tmp_283;
      real_t a_0_4 = tmp_304;
      real_t a_0_5 = tmp_321;
      real_t a_1_0 = tmp_221;
      real_t a_1_1 = tmp_103*((tmp_188*tmp_188) + (tmp_192*tmp_192) + (tmp_196*tmp_196)) + tmp_136*((tmp_200*tmp_200) + (tmp_204*tmp_204) + (tmp_208*tmp_208)) + tmp_169*((tmp_212*tmp_212) + (tmp_216*tmp_216) + (tmp_220*tmp_220)) + tmp_70*((tmp_176*tmp_176) + (tmp_180*tmp_180) + (tmp_184*tmp_184));
      real_t a_1_2 = tmp_322;
      real_t a_1_3 = tmp_323;
      real_t a_1_4 = tmp_324;
      real_t a_1_5 = tmp_325;
      real_t a_2_0 = tmp_258;
      real_t a_2_1 = tmp_322;
      real_t a_2_2 = tmp_103*((tmp_233*tmp_233) + (tmp_236*tmp_236) + (tmp_239*tmp_239)) + tmp_136*((tmp_242*tmp_242) + (tmp_245*tmp_245) + (tmp_248*tmp_248)) + tmp_169*((tmp_251*tmp_251) + (tmp_254*tmp_254) + (tmp_257*tmp_257)) + tmp_70*((tmp_224*tmp_224) + (tmp_227*tmp_227) + (tmp_230*tmp_230));
      real_t a_2_3 = tmp_326;
      real_t a_2_4 = tmp_327;
      real_t a_2_5 = tmp_328;
      real_t a_3_0 = tmp_283;
      real_t a_3_1 = tmp_323;
      real_t a_3_2 = tmp_326;
      real_t a_3_3 = tmp_103*((tmp_268*tmp_268) + (tmp_269*tmp_269) + (tmp_270*tmp_270)) + tmp_136*((tmp_274*tmp_274) + (tmp_275*tmp_275) + (tmp_276*tmp_276)) + tmp_169*((tmp_280*tmp_280) + (tmp_281*tmp_281) + (tmp_282*tmp_282)) + tmp_70*((tmp_262*tmp_262) + (tmp_263*tmp_263) + (tmp_264*tmp_264));
      real_t a_3_4 = tmp_329;
      real_t a_3_5 = tmp_330;
      real_t a_4_0 = tmp_304;
      real_t a_4_1 = tmp_324;
      real_t a_4_2 = tmp_327;
      real_t a_4_3 = tmp_329;
      real_t a_4_4 = tmp_103*((tmp_291*tmp_291) + (tmp_292*tmp_292) + (tmp_293*tmp_293)) + tmp_136*((tmp_296*tmp_296) + (tmp_297*tmp_297) + (tmp_298*tmp_298)) + tmp_169*((tmp_301*tmp_301) + (tmp_302*tmp_302) + (tmp_303*tmp_303)) + tmp_70*((tmp_286*tmp_286) + (tmp_287*tmp_287) + (tmp_288*tmp_288));
      real_t a_4_5 = tmp_331;
      real_t a_5_0 = tmp_321;
      real_t a_5_1 = tmp_325;
      real_t a_5_2 = tmp_328;
      real_t a_5_3 = tmp_330;
      real_t a_5_4 = tmp_331;
      real_t a_5_5 = tmp_103*((tmp_310*tmp_310) + (tmp_311*tmp_311) + (tmp_312*tmp_312)) + tmp_136*((tmp_314*tmp_314) + (tmp_315*tmp_315) + (tmp_316*tmp_316)) + tmp_169*((tmp_318*tmp_318) + (tmp_319*tmp_319) + (tmp_320*tmp_320)) + tmp_70*((tmp_306*tmp_306) + (tmp_307*tmp_307) + (tmp_308*tmp_308));
      (elMat(0, 0)) = a_0_0;
      (elMat(0, 1)) = a_0_1;
      (elMat(0, 2)) = a_0_2;
      (elMat(0, 3)) = a_0_3;
      (elMat(0, 4)) = a_0_4;
      (elMat(0, 5)) = a_0_5;
      (elMat(1, 0)) = a_1_0;
      (elMat(1, 1)) = a_1_1;
      (elMat(1, 2)) = a_1_2;
      (elMat(1, 3)) = a_1_3;
      (elMat(1, 4)) = a_1_4;
      (elMat(1, 5)) = a_1_5;
      (elMat(2, 0)) = a_2_0;
      (elMat(2, 1)) = a_2_1;
      (elMat(2, 2)) = a_2_2;
      (elMat(2, 3)) = a_2_3;
      (elMat(2, 4)) = a_2_4;
      (elMat(2, 5)) = a_2_5;
      (elMat(3, 0)) = a_3_0;
      (elMat(3, 1)) = a_3_1;
      (elMat(3, 2)) = a_3_2;
      (elMat(3, 3)) = a_3_3;
      (elMat(3, 4)) = a_3_4;
      (elMat(3, 5)) = a_3_5;
      (elMat(4, 0)) = a_4_0;
      (elMat(4, 1)) = a_4_1;
      (elMat(4, 2)) = a_4_2;
      (elMat(4, 3)) = a_4_3;
      (elMat(4, 4)) = a_4_4;
      (elMat(4, 5)) = a_4_5;
      (elMat(5, 0)) = a_5_0;
      (elMat(5, 1)) = a_5_1;
      (elMat(5, 2)) = a_5_2;
      (elMat(5, 3)) = a_5_3;
      (elMat(5, 4)) = a_5_4;
      (elMat(5, 5)) = a_5_5;
   }

   void n1e1_mass_blending_q2::Blending_DF_Tetrahedron_blend( real_t in_0, real_t in_1, real_t in_2, real_t * out_0, real_t * out_1, real_t * out_2, real_t * out_3, real_t * out_4, real_t * out_5, real_t * out_6, real_t * out_7, real_t * out_8 ) const
   {
      Point3D  mappedPt( {in_0, in_1, in_2} );
      Matrix3r DPsi;
      geometryMap_->evalDF( mappedPt, DPsi );
      *out_0 = DPsi( 0, 0 );
      *out_1 = DPsi( 0, 1 );
      *out_2 = DPsi( 0, 2 );
      *out_3 = DPsi( 1, 0 );
      *out_4 = DPsi( 1, 1 );
      *out_5 = DPsi( 1, 2 );
      *out_6 = DPsi( 2, 0 );
      *out_7 = DPsi( 2, 1 );
      *out_8 = DPsi( 2, 2 );
   }

} // namespace forms
} // namespace hyteg
