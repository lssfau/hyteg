/*
* Copyright (c) 2023-2024 Andreas Burkhart
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

// This file has been generated with the AHFC. If buggy try fixing the generator itself.

#include "p2_divdiv_stokes_T_p2_dep_eta_centroid_blending_q4_ElementwiseOperator.hpp"

namespace hyteg {
   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(1, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp7*J_B_1(1, 1);
      const real_t tmp11 = tmp10*tmp2;
      const real_t tmp12 = -tmp11 + tmp9;
      const real_t tmp13 = tmp1*tmp8;
      const real_t tmp14 = tmp10*tmp3;
      const real_t tmp15 = tmp13 - tmp14;
      const real_t tmp16 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp17 = tmp16*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp18 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp19 = 1.0 / (tmp18);
      const real_t tmp20 = tmp19*tmp4;
      const real_t tmp21 = tmp20*J_B_2(1, 0);
      const real_t tmp22 = tmp0*tmp21;
      const real_t tmp23 = tmp20*J_B_2(1, 1);
      const real_t tmp24 = tmp2*tmp23;
      const real_t tmp25 = tmp22 - tmp24;
      const real_t tmp26 = tmp1*tmp21;
      const real_t tmp27 = tmp23*tmp3;
      const real_t tmp28 = tmp26 - tmp27;
      const real_t tmp29 = tmp16*std::abs(tmp18)*ScalarCoeff0_2;
      const real_t tmp30 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp31 = 1.0 / (tmp30);
      const real_t tmp32 = tmp31*tmp4;
      const real_t tmp33 = tmp32*J_B_3(1, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp32*J_B_3(1, 1);
      const real_t tmp36 = tmp2*tmp35;
      const real_t tmp37 = tmp34 - tmp36;
      const real_t tmp38 = tmp1*tmp33;
      const real_t tmp39 = tmp3*tmp35;
      const real_t tmp40 = tmp38 - tmp39;
      const real_t tmp41 = std::abs(tmp30);
      const real_t tmp42 = tmp16*tmp41*ScalarCoeff0_3;
      const real_t tmp43 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp44 = 1.0 / (tmp43);
      const real_t tmp45 = tmp4*tmp44;
      const real_t tmp46 = tmp45*J_B_4(1, 0);
      const real_t tmp47 = tmp0*tmp46;
      const real_t tmp48 = tmp45*J_B_4(1, 1);
      const real_t tmp49 = tmp2*tmp48;
      const real_t tmp50 = tmp47 - tmp49;
      const real_t tmp51 = tmp1*tmp46;
      const real_t tmp52 = tmp3*tmp48;
      const real_t tmp53 = tmp51 - tmp52;
      const real_t tmp54 = std::abs(tmp43);
      const real_t tmp55 = tmp16*tmp54*ScalarCoeff0_4;
      const real_t tmp56 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp57 = 1.0 / (tmp56);
      const real_t tmp58 = tmp4*tmp57;
      const real_t tmp59 = tmp58*J_B_5(1, 0);
      const real_t tmp60 = tmp0*tmp59;
      const real_t tmp61 = tmp58*J_B_5(1, 1);
      const real_t tmp62 = tmp2*tmp61;
      const real_t tmp63 = tmp60 - tmp62;
      const real_t tmp64 = tmp1*tmp59;
      const real_t tmp65 = tmp3*tmp61;
      const real_t tmp66 = tmp64 - tmp65;
      const real_t tmp67 = tmp16*std::abs(tmp56)*ScalarCoeff0_5;
      const real_t tmp68 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp69 = 1.0 / (tmp68);
      const real_t tmp70 = tmp4*tmp69;
      const real_t tmp71 = tmp70*J_B_6(1, 0);
      const real_t tmp72 = tmp0*tmp71;
      const real_t tmp73 = tmp70*J_B_6(1, 1);
      const real_t tmp74 = tmp2*tmp73;
      const real_t tmp75 = tmp72 - tmp74;
      const real_t tmp76 = tmp1*tmp71;
      const real_t tmp77 = -tmp3*tmp4*tmp69*J_B_6(1, 1) + tmp76;
      const real_t tmp78 = std::abs(tmp68);
      const real_t tmp79 = tmp16*tmp78*ScalarCoeff0_6;
      const real_t tmp80 = 0.022076635451774192*tmp79;
      const real_t tmp81 = tmp17*(-0.78379396366386*tmp11 + 0.78379396366386*tmp13 - 0.78379396366386*tmp14 + 0.78379396366386*tmp9);
      const real_t tmp82 = -tmp12;
      const real_t tmp83 = 0.087542570791631205*tmp82;
      const real_t tmp84 = tmp29*(0.56758792732771934*tmp19*tmp2*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp19*tmp3*tmp4*J_B_2(1, 1) - 0.56758792732771934*tmp22 - 0.56758792732771934*tmp26);
      const real_t tmp85 = -tmp25;
      const real_t tmp86 = 0.087542570791631302*tmp85;
      const real_t tmp87 = -tmp37;
      const real_t tmp88 = 0.78379396366385934*tmp34 - 0.78379396366385934*tmp36 + 0.78379396366385934*tmp38 - 0.78379396366385934*tmp39;
      const real_t tmp89 = -tmp50;
      const real_t tmp90 = 2.2673902919218332*tmp47 - 2.2673902919218332*tmp49 + 2.2673902919218332*tmp51 - 2.2673902919218332*tmp52;
      const real_t tmp91 = tmp67*(0.63369514596091792*tmp2*tmp4*tmp57*J_B_5(1, 1) + 0.63369514596091792*tmp3*tmp4*tmp57*J_B_5(1, 1) - 0.63369514596091792*tmp60 - 0.63369514596091792*tmp64);
      const real_t tmp92 = -tmp63;
      const real_t tmp93 = 0.12465175807197719*tmp92;
      const real_t tmp94 = -tmp75;
      const real_t tmp95 = 0.63369514596091747*tmp2*tmp4*tmp69*J_B_6(1, 1) + 0.63369514596091747*tmp3*tmp4*tmp69*J_B_6(1, 1) - 0.63369514596091747*tmp72 - 0.63369514596091747*tmp76;
      const real_t tmp96 = 0.063394346744256869*tmp16*tmp41*tmp87*tmp88*ScalarCoeff0_3 + 0.034837943122158065*tmp16*tmp54*tmp89*tmp90*ScalarCoeff0_4 + 0.03483794312215821*tmp16*tmp78*tmp94*tmp95*ScalarCoeff0_6 - tmp81*tmp83 - tmp84*tmp86 - tmp91*tmp93;
      const real_t tmp97 = -tmp15;
      const real_t tmp98 = 0.063394346744256799*tmp97;
      const real_t tmp99 = -tmp28;
      const real_t tmp100 = 0.08754257079163108*tmp99;
      const real_t tmp101 = tmp42*tmp88;
      const real_t tmp102 = -tmp40;
      const real_t tmp103 = 0.087542570791631358*tmp102;
      const real_t tmp104 = tmp55*tmp90;
      const real_t tmp105 = -tmp53;
      const real_t tmp106 = 0.034837943122158259*tmp105;
      const real_t tmp107 = -tmp66;
      const real_t tmp108 = 0.034837943122158141*tmp107;
      const real_t tmp109 = tmp79*tmp95;
      const real_t tmp110 = -tmp77;
      const real_t tmp111 = 0.12465175807197725*tmp110;
      const real_t tmp112 = -tmp100*tmp84 - tmp101*tmp103 + tmp104*tmp106 + tmp108*tmp91 - tmp109*tmp111 + tmp81*tmp98;
      const real_t tmp113 = 0.43241207267228021*tmp9;
      const real_t tmp114 = 0.43241207267228021*tmp11;
      const real_t tmp115 = 1.7837939636638598*tmp13 - 1.7837939636638598*tmp14;
      const real_t tmp116 = -tmp113 + tmp114 - tmp115;
      const real_t tmp117 = 0.11169079483900564*tmp81;
      const real_t tmp118 = 1.7837939636638587*tmp22 - 1.7837939636638587*tmp24;
      const real_t tmp119 = 1.7837939636638607*tmp26 - 1.7837939636638607*tmp27;
      const real_t tmp120 = -tmp118 - tmp119;
      const real_t tmp121 = 0.11169079483900564*tmp84;
      const real_t tmp122 = 1.7837939636638611*tmp34 - 1.7837939636638611*tmp36;
      const real_t tmp123 = 0.43241207267227955*tmp38 - 0.43241207267227955*tmp39;
      const real_t tmp124 = -tmp122 - tmp123;
      const real_t tmp125 = 0.11169079483900564*tmp101;
      const real_t tmp126 = 0.36630485403908164*tmp47;
      const real_t tmp127 = 0.36630485403908164*tmp49;
      const real_t tmp128 = 0.36630485403908519*tmp51 - 0.36630485403908519*tmp52;
      const real_t tmp129 = -tmp126 + tmp127 - tmp128;
      const real_t tmp130 = 0.054975871827660817*tmp104;
      const real_t tmp131 = 0.36630485403908386*tmp60 - 0.36630485403908386*tmp62;
      const real_t tmp132 = 3.2673902919218341*tmp64 - 3.2673902919218341*tmp65;
      const real_t tmp133 = -tmp131 - tmp132;
      const real_t tmp134 = 0.054975871827660817*tmp91;
      const real_t tmp135 = tmp3*tmp73;
      const real_t tmp136 = -0.36630485403908253*tmp135 + 0.36630485403908253*tmp76;
      const real_t tmp137 = 3.2673902919218349*tmp72 - 3.2673902919218349*tmp74;
      const real_t tmp138 = -tmp136 - tmp137;
      const real_t tmp139 = 0.054975871827660817*tmp109;
      const real_t tmp140 = -tmp116*tmp117 - tmp120*tmp121 - tmp124*tmp125 - tmp129*tmp130 - tmp133*tmp134 - tmp138*tmp139;
      const real_t tmp141 = tmp113 - tmp114 - 1.3513818909915796*tmp13 + 1.3513818909915796*tmp3*tmp4*tmp6*J_B_1(1, 1);
      const real_t tmp142 = tmp118 + 1.3513818909915782*tmp26 - 1.3513818909915782*tmp27;
      const real_t tmp143 = tmp122 + 1.7763568394002505e-15*tmp38 - 1.7763568394002505e-15*tmp39;
      const real_t tmp144 = tmp126 - tmp127 + 2.9010854378827515*tmp3*tmp4*tmp44*J_B_4(1, 1) - 2.9010854378827515*tmp51;
      const real_t tmp145 = tmp131 + 1.7763568394002505e-15*tmp64 - 1.7763568394002505e-15*tmp65;
      const real_t tmp146 = -2.9010854378827524*tmp135 + tmp137 + 2.9010854378827524*tmp76;
      const real_t tmp147 = -tmp117*tmp141 - tmp121*tmp142 - tmp125*tmp143 - tmp130*tmp144 - tmp134*tmp145 - tmp139*tmp146;
      const real_t tmp148 = 2.2204460492503131e-16*tmp11 + tmp115 - 2.2204460492503131e-16*tmp9;
      const real_t tmp149 = tmp119 + 1.35138189099158*tmp22 - 1.35138189099158*tmp24;
      const real_t tmp150 = tmp123 - 1.3513818909915798*tmp34 + 1.3513818909915798*tmp36;
      const real_t tmp151 = tmp128 - 2.901085437882748*tmp47 + 2.901085437882748*tmp49;
      const real_t tmp152 = tmp132 + 2.901085437882752*tmp60 - 2.901085437882752*tmp62;
      const real_t tmp153 = -tmp117*tmp148 - tmp121*tmp149 - tmp125*tmp150 - tmp130*tmp151 - tmp134*tmp152 - tmp136*tmp139;
      const real_t tmp154 = 0.049688106308562283*tmp102*tmp42*tmp87 - 0.022076635451774126*tmp105*tmp55*tmp89 + 0.078991214025706399*tmp107*tmp67*tmp92 + 0.078991214025706594*tmp110*tmp79*tmp94 + 0.049688106308562137*tmp17*tmp82*tmp97 - 0.068615338550096633*tmp29*tmp85*tmp99;
      const real_t tmp155 = tmp17*tmp83;
      const real_t tmp156 = tmp29*tmp86;
      const real_t tmp157 = tmp67*tmp93;
      const real_t tmp158 = -tmp116*tmp155 - tmp120*tmp156 + 0.063394346744256869*tmp124*tmp16*tmp41*tmp87*ScalarCoeff0_3 + 0.034837943122158065*tmp129*tmp16*tmp54*tmp89*ScalarCoeff0_4 - tmp133*tmp157 + 0.03483794312215821*tmp138*tmp16*tmp78*tmp94*ScalarCoeff0_6;
      const real_t tmp159 = -tmp141*tmp155 - tmp142*tmp156 + 0.063394346744256869*tmp143*tmp16*tmp41*tmp87*ScalarCoeff0_3 + 0.034837943122158065*tmp144*tmp16*tmp54*tmp89*ScalarCoeff0_4 - tmp145*tmp157 + 0.03483794312215821*tmp146*tmp16*tmp78*tmp94*ScalarCoeff0_6;
      const real_t tmp160 = 0.03483794312215821*tmp136*tmp79*tmp94 - tmp148*tmp155 - tmp149*tmp156 + 0.063394346744256869*tmp150*tmp42*tmp87 + 0.034837943122158065*tmp151*tmp55*tmp89 - tmp152*tmp157;
      const real_t tmp161 = tmp17*tmp98;
      const real_t tmp162 = tmp100*tmp29;
      const real_t tmp163 = tmp103*tmp42;
      const real_t tmp164 = tmp106*tmp55;
      const real_t tmp165 = tmp108*tmp67;
      const real_t tmp166 = tmp111*tmp79;
      const real_t tmp167 = tmp116*tmp161 - tmp120*tmp162 - tmp124*tmp163 + tmp129*tmp164 + tmp133*tmp165 - tmp138*tmp166;
      const real_t tmp168 = tmp141*tmp161 - tmp142*tmp162 - tmp143*tmp163 + tmp144*tmp164 + tmp145*tmp165 - tmp146*tmp166;
      const real_t tmp169 = -tmp136*tmp166 + tmp148*tmp161 - tmp149*tmp162 - tmp150*tmp163 + tmp151*tmp164 + tmp152*tmp165;
      const real_t tmp170 = 0.35539127497236472*tmp17;
      const real_t tmp171 = 0.35539127497236506*tmp29;
      const real_t tmp172 = 0.35539127497236522*tmp42;
      const real_t tmp173 = 0.58691357409500544*tmp67;
      const real_t tmp174 = 0.58691357409500566*tmp79;
      const real_t tmp175 = 0.11169079483900564*tmp116*tmp17;
      const real_t tmp176 = 0.11169079483900564*tmp120*tmp29;
      const real_t tmp177 = 0.11169079483900564*tmp124*tmp42;
      const real_t tmp178 = 0.054975871827660817*tmp129*tmp55;
      const real_t tmp179 = 0.054975871827660817*tmp133*tmp67;
      const real_t tmp180 = 0.054975871827660817*tmp138*tmp79;
      const real_t tmp181 = -tmp141*tmp175 - tmp142*tmp176 - tmp143*tmp177 - tmp144*tmp178 - tmp145*tmp179 - tmp146*tmp180;
      const real_t tmp182 = -tmp136*tmp180 - tmp148*tmp175 - tmp149*tmp176 - tmp150*tmp177 - tmp151*tmp178 - tmp152*tmp179;
      const real_t tmp183 = -0.054975871827660817*tmp136*tmp146*tmp79 - 0.11169079483900564*tmp141*tmp148*tmp17 - 0.11169079483900564*tmp142*tmp149*tmp29 - 0.11169079483900564*tmp143*tmp150*tmp42 - 0.054975871827660817*tmp144*tmp151*tmp55 - 0.054975871827660817*tmp145*tmp152*tmp67;
      elMat(0,0) = -0.068615338550096702*tmp17*((tmp12 + tmp15)*(tmp12 + tmp15)) - 0.03598186587286744*tmp29*((-tmp25 - tmp28)*(-tmp25 - tmp28)) - 0.068615338550096577*tmp42*((tmp37 + tmp40)*(tmp37 + tmp40)) - 0.28263418612338997*tmp55*((tmp50 + tmp53)*(tmp50 + tmp53)) - 0.022076635451774219*tmp67*((-tmp63 - tmp66)*(-tmp63 - tmp66)) - tmp80*((-tmp75 - tmp77)*(-tmp75 - tmp77));
      elMat(0,1) = tmp96;
      elMat(0,2) = tmp112;
      elMat(0,3) = tmp140;
      elMat(0,4) = tmp147;
      elMat(0,5) = tmp153;
      elMat(1,0) = tmp96;
      elMat(1,1) = -0.068615338550096661*tmp17*(tmp82*tmp82) - 0.068615338550096813*tmp29*(tmp85*tmp85) - 0.035981865872867579*tmp42*(tmp87*tmp87) - 0.022076635451774004*tmp55*(tmp89*tmp89) - 0.2826341861233902*tmp67*(tmp92*tmp92) - tmp80*(tmp94*tmp94);
      elMat(1,2) = tmp154;
      elMat(1,3) = tmp158;
      elMat(1,4) = tmp159;
      elMat(1,5) = tmp160;
      elMat(2,0) = tmp112;
      elMat(2,1) = tmp154;
      elMat(2,2) = -0.068615338550096883*(tmp102*tmp102)*tmp42 - 0.022076635451774251*(tmp105*tmp105)*tmp55 - 0.022076635451774095*(tmp107*tmp107)*tmp67 - 0.28263418612339042*(tmp110*tmp110)*tmp79 - 0.035981865872867495*tmp17*(tmp97*tmp97) - 0.068615338550096466*tmp29*(tmp99*tmp99);
      elMat(2,3) = tmp167;
      elMat(2,4) = tmp168;
      elMat(2,5) = tmp169;
      elMat(3,0) = tmp140;
      elMat(3,1) = tmp158;
      elMat(3,2) = tmp167;
      elMat(3,3) = -tmp170*((-tmp15 + 0.24241144520083399*tmp2*tmp4*tmp6*J_B_1(1, 1) - 0.24241144520083399*tmp9)*(-tmp15 + 0.24241144520083399*tmp2*tmp4*tmp6*J_B_1(1, 1) - 0.24241144520083399*tmp9)) - tmp171*((0.99999999999999889*tmp19*tmp2*tmp4*J_B_2(1, 1) - 0.99999999999999889*tmp22 - tmp28)*(0.99999999999999889*tmp19*tmp2*tmp4*J_B_2(1, 1) - 0.99999999999999889*tmp22 - tmp28)) - tmp172*((0.24241144520083344*tmp3*tmp31*tmp4*J_B_3(1, 1) - tmp37 - 0.24241144520083344*tmp38)*(0.24241144520083344*tmp3*tmp31*tmp4*J_B_3(1, 1) - tmp37 - 0.24241144520083344*tmp38)) - tmp173*((0.11210930476984075*tmp2*tmp4*tmp57*J_B_5(1, 1) - 0.11210930476984075*tmp60 - tmp66)*(0.11210930476984075*tmp2*tmp4*tmp57*J_B_5(1, 1) - 0.11210930476984075*tmp60 - tmp66)) - tmp174*((0.11210930476984032*tmp3*tmp4*tmp69*J_B_6(1, 1) - tmp75 - 0.11210930476984032*tmp76)*(0.11210930476984032*tmp3*tmp4*tmp69*J_B_6(1, 1) - tmp75 - 0.11210930476984032*tmp76)) - 0.0073766210351186899*tmp55*((0.99999999999999034*tmp2*tmp4*tmp44*J_B_4(1, 1) - 0.99999999999999034*tmp47 - tmp53)*(0.99999999999999034*tmp2*tmp4*tmp44*J_B_4(1, 1) - 0.99999999999999034*tmp47 - tmp53));
      elMat(3,4) = tmp181;
      elMat(3,5) = tmp182;
      elMat(4,0) = tmp147;
      elMat(4,1) = tmp159;
      elMat(4,2) = tmp168;
      elMat(4,3) = tmp181;
      elMat(4,4) = -0.20397341704008842*tmp17*((0.31997770249459007*tmp0*tmp4*tmp6*J_B_1(1, 0) - 0.31997770249459007*tmp11 - tmp15)*(0.31997770249459007*tmp0*tmp4*tmp6*J_B_1(1, 0) - 0.31997770249459007*tmp11 - tmp15)) - tmp172*((tmp37 + 9.9583072685797463e-16*tmp38 - 9.9583072685797463e-16*tmp39)*(tmp37 + 9.9583072685797463e-16*tmp38 - 9.9583072685797463e-16*tmp39)) - tmp174*((-0.88789069523015973*tmp135 + tmp75 + 0.88789069523015973*tmp76)*(-0.88789069523015973*tmp135 + tmp75 + 0.88789069523015973*tmp76)) - 0.35539127497236422*tmp29*((tmp25 + 0.75758855479916576*tmp26 - 0.75758855479916576*tmp27)*(tmp25 + 0.75758855479916576*tmp26 - 0.75758855479916576*tmp27)) - 0.46269324962657754*tmp55*((0.12626475913319379*tmp0*tmp4*tmp44*J_B_4(1, 0) - 0.12626475913319379*tmp49 - tmp53)*(0.12626475913319379*tmp0*tmp4*tmp44*J_B_4(1, 0) - 0.12626475913319379*tmp49 - tmp53)) - 0.0073766210351186362*tmp67*((tmp63 + 4.8493947590733192e-15*tmp64 - 4.8493947590733192e-15*tmp65)*(tmp63 + 4.8493947590733192e-15*tmp64 - 4.8493947590733192e-15*tmp65));
      elMat(4,5) = tmp183;
      elMat(5,0) = tmp153;
      elMat(5,1) = tmp160;
      elMat(5,2) = tmp169;
      elMat(5,3) = tmp182;
      elMat(5,4) = tmp183;
      elMat(5,5) = -tmp170*((1.2447884085724693e-16*tmp11 + tmp15 - 1.2447884085724693e-16*tmp9)*(1.2447884085724693e-16*tmp11 + tmp15 - 1.2447884085724693e-16*tmp9)) - tmp171*((0.75758855479916576*tmp22 - 0.75758855479916576*tmp24 + tmp28)*(0.75758855479916576*tmp22 - 0.75758855479916576*tmp24 + tmp28)) - tmp173*((0.88789069523015984*tmp60 - 0.88789069523015984*tmp62 + tmp66)*(0.88789069523015984*tmp60 - 0.88789069523015984*tmp62 + tmp66)) - 0.20397341704008848*tmp42*((-tmp34 + tmp36 + 0.31997770249458951*tmp38 - 0.31997770249458951*tmp39)*(-tmp34 + tmp36 + 0.31997770249458951*tmp38 - 0.31997770249458951*tmp39)) - 0.46269324962657638*tmp55*((-tmp47 + tmp49 + 0.12626475913319515*tmp51 - 0.12626475913319515*tmp52)*(-tmp47 + tmp49 + 0.12626475913319515*tmp51 - 0.12626475913319515*tmp52)) - 0.0073766210351185815*(tmp77*tmp77)*tmp79;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(1, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp7*J_B_1(1, 1);
      const real_t tmp11 = tmp10*tmp2;
      const real_t tmp12 = -tmp11 + tmp9;
      const real_t tmp13 = tmp1*tmp8;
      const real_t tmp14 = tmp10*tmp3;
      const real_t tmp15 = tmp13 - tmp14;
      const real_t tmp16 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp17 = tmp16*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp18 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp19 = 1.0 / (tmp18);
      const real_t tmp20 = tmp19*tmp4;
      const real_t tmp21 = tmp20*J_B_2(1, 0);
      const real_t tmp22 = tmp0*tmp21;
      const real_t tmp23 = -tmp19*tmp2*tmp4*J_B_2(1, 1) + tmp22;
      const real_t tmp24 = tmp1*tmp21;
      const real_t tmp25 = -tmp19*tmp3*tmp4*J_B_2(1, 1) + tmp24;
      const real_t tmp26 = tmp16*std::abs(tmp18)*ScalarCoeff0_2;
      const real_t tmp27 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp28 = tmp4/tmp27;
      const real_t tmp29 = tmp28*J_B_3(1, 0);
      const real_t tmp30 = tmp0*tmp29;
      const real_t tmp31 = tmp28*J_B_3(1, 1);
      const real_t tmp32 = tmp2*tmp31;
      const real_t tmp33 = tmp30 - tmp32;
      const real_t tmp34 = tmp1*tmp29;
      const real_t tmp35 = tmp3*tmp31;
      const real_t tmp36 = tmp34 - tmp35;
      const real_t tmp37 = std::abs(tmp27);
      const real_t tmp38 = tmp16*tmp37*ScalarCoeff0_3;
      const real_t tmp39 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp40 = 1.0 / (tmp39);
      const real_t tmp41 = tmp4*tmp40;
      const real_t tmp42 = tmp41*J_B_4(1, 0);
      const real_t tmp43 = tmp0*tmp42;
      const real_t tmp44 = tmp41*J_B_4(1, 1);
      const real_t tmp45 = tmp2*tmp44;
      const real_t tmp46 = tmp43 - tmp45;
      const real_t tmp47 = tmp1*tmp42;
      const real_t tmp48 = tmp3*tmp44;
      const real_t tmp49 = tmp47 - tmp48;
      const real_t tmp50 = std::abs(tmp39);
      const real_t tmp51 = tmp16*tmp50*ScalarCoeff0_4;
      const real_t tmp52 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp53 = 1.0 / (tmp52);
      const real_t tmp54 = tmp4*tmp53;
      const real_t tmp55 = tmp54*J_B_5(1, 0);
      const real_t tmp56 = tmp0*tmp55;
      const real_t tmp57 = -tmp2*tmp4*tmp53*J_B_5(1, 1) + tmp56;
      const real_t tmp58 = tmp1*tmp55;
      const real_t tmp59 = -tmp3*tmp4*tmp53*J_B_5(1, 1) + tmp58;
      const real_t tmp60 = tmp16*std::abs(tmp52)*ScalarCoeff0_5;
      const real_t tmp61 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp62 = 1.0 / (tmp61);
      const real_t tmp63 = tmp4*tmp62;
      const real_t tmp64 = tmp63*J_B_6(1, 0);
      const real_t tmp65 = tmp0*tmp64;
      const real_t tmp66 = -tmp2*tmp4*tmp62*J_B_6(1, 1) + tmp65;
      const real_t tmp67 = tmp1*tmp64;
      const real_t tmp68 = -tmp3*tmp4*tmp62*J_B_6(1, 1) + tmp67;
      const real_t tmp69 = std::abs(tmp61);
      const real_t tmp70 = tmp16*tmp69*ScalarCoeff0_6;
      const real_t tmp71 = tmp17*(-0.78379396366386*tmp11 + 0.78379396366386*tmp13 - 0.78379396366386*tmp14 + 0.78379396366386*tmp9);
      const real_t tmp72 = tmp26*(0.56758792732771934*tmp19*tmp2*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp19*tmp3*tmp4*J_B_2(1, 1) - 0.56758792732771934*tmp22 - 0.56758792732771934*tmp24);
      const real_t tmp73 = 0.78379396366385934*tmp30 - 0.78379396366385934*tmp32 + 0.78379396366385934*tmp34 - 0.78379396366385934*tmp35;
      const real_t tmp74 = 2.2673902919218332*tmp43 - 2.2673902919218332*tmp45 + 2.2673902919218332*tmp47 - 2.2673902919218332*tmp48;
      const real_t tmp75 = tmp60*(0.63369514596091792*tmp2*tmp4*tmp53*J_B_5(1, 1) + 0.63369514596091792*tmp3*tmp4*tmp53*J_B_5(1, 1) - 0.63369514596091792*tmp56 - 0.63369514596091792*tmp58);
      const real_t tmp76 = 0.63369514596091747*tmp2*tmp4*tmp62*J_B_6(1, 1) + 0.63369514596091747*tmp3*tmp4*tmp62*J_B_6(1, 1) - 0.63369514596091747*tmp65 - 0.63369514596091747*tmp67;
      const real_t tmp77 = tmp38*tmp73;
      const real_t tmp78 = tmp51*tmp74;
      const real_t tmp79 = tmp70*tmp76;
      const real_t tmp80 = 0.43241207267228021*tmp9;
      const real_t tmp81 = 0.43241207267228021*tmp11;
      const real_t tmp82 = 1.7837939636638598*tmp13 - 1.7837939636638598*tmp14;
      const real_t tmp83 = 0.11169079483900564*tmp71;
      const real_t tmp84 = tmp20*J_B_2(1, 1);
      const real_t tmp85 = tmp2*tmp84;
      const real_t tmp86 = 1.7837939636638587*tmp22 - 1.7837939636638587*tmp85;
      const real_t tmp87 = tmp3*tmp84;
      const real_t tmp88 = 1.7837939636638607*tmp24 - 1.7837939636638607*tmp87;
      const real_t tmp89 = 0.11169079483900564*tmp72;
      const real_t tmp90 = 1.7837939636638611*tmp30 - 1.7837939636638611*tmp32;
      const real_t tmp91 = 0.43241207267227955*tmp34 - 0.43241207267227955*tmp35;
      const real_t tmp92 = 0.11169079483900564*tmp77;
      const real_t tmp93 = 0.36630485403908164*tmp43;
      const real_t tmp94 = 0.36630485403908164*tmp45;
      const real_t tmp95 = 0.36630485403908519*tmp47 - 0.36630485403908519*tmp48;
      const real_t tmp96 = 0.054975871827660817*tmp78;
      const real_t tmp97 = tmp54*J_B_5(1, 1);
      const real_t tmp98 = tmp2*tmp97;
      const real_t tmp99 = 0.36630485403908386*tmp56 - 0.36630485403908386*tmp98;
      const real_t tmp100 = tmp3*tmp97;
      const real_t tmp101 = -3.2673902919218341*tmp100 + 3.2673902919218341*tmp58;
      const real_t tmp102 = 0.054975871827660817*tmp75;
      const real_t tmp103 = tmp63*J_B_6(1, 1);
      const real_t tmp104 = tmp103*tmp3;
      const real_t tmp105 = -0.36630485403908253*tmp104 + 0.36630485403908253*tmp67;
      const real_t tmp106 = -3.2673902919218349*tmp103*tmp2 + 3.2673902919218349*tmp65;
      const real_t tmp107 = 0.054975871827660817*tmp79;
      elMat(0,0) = -0.068615338550096702*tmp17*((tmp12 + tmp15)*(tmp12 + tmp15)) - 0.03598186587286744*tmp26*((-tmp23 - tmp25)*(-tmp23 - tmp25)) - 0.068615338550096577*tmp38*((tmp33 + tmp36)*(tmp33 + tmp36)) - 0.28263418612338997*tmp51*((tmp46 + tmp49)*(tmp46 + tmp49)) - 0.022076635451774219*tmp60*((-tmp57 - tmp59)*(-tmp57 - tmp59)) - 0.022076635451774192*tmp70*((-tmp66 - tmp68)*(-tmp66 - tmp68));
      elMat(0,1) = 0.087542570791631205*tmp12*tmp71 - 0.063394346744256869*tmp16*tmp33*tmp37*tmp73*ScalarCoeff0_3 - 0.034837943122158065*tmp16*tmp46*tmp50*tmp74*ScalarCoeff0_4 - 0.03483794312215821*tmp16*tmp66*tmp69*tmp76*ScalarCoeff0_6 + 0.087542570791631302*tmp23*tmp72 + 0.12465175807197719*tmp57*tmp75;
      elMat(0,2) = -0.063394346744256799*tmp15*tmp71 + 0.08754257079163108*tmp25*tmp72 + 0.087542570791631358*tmp36*tmp77 - 0.034837943122158259*tmp49*tmp78 - 0.034837943122158141*tmp59*tmp75 + 0.12465175807197725*tmp68*tmp79;
      elMat(0,3) = -tmp102*(-tmp101 - tmp99) - tmp107*(-tmp105 - tmp106) - tmp83*(-tmp80 + tmp81 - tmp82) - tmp89*(-tmp86 - tmp88) - tmp92*(-tmp90 - tmp91) - tmp96*(-tmp93 + tmp94 - tmp95);
      elMat(0,4) = -tmp102*(-1.7763568394002505e-15*tmp100 + 1.7763568394002505e-15*tmp58 + tmp99) - tmp107*(-2.9010854378827524*tmp104 + tmp106 + 2.9010854378827524*tmp67) - tmp83*(-1.3513818909915796*tmp13 + 1.3513818909915796*tmp3*tmp4*tmp6*J_B_1(1, 1) + tmp80 - tmp81) - tmp89*(1.3513818909915782*tmp24 + tmp86 - 1.3513818909915782*tmp87) - tmp92*(1.7763568394002505e-15*tmp34 - 1.7763568394002505e-15*tmp35 + tmp90) - tmp96*(2.9010854378827515*tmp3*tmp4*tmp40*J_B_4(1, 1) - 2.9010854378827515*tmp47 + tmp93 - tmp94);
      elMat(0,5) = -tmp102*(tmp101 + 2.901085437882752*tmp56 - 2.901085437882752*tmp98) - tmp105*tmp107 - tmp83*(2.2204460492503131e-16*tmp11 + tmp82 - 2.2204460492503131e-16*tmp9) - tmp89*(1.35138189099158*tmp22 - 1.35138189099158*tmp85 + tmp88) - tmp92*(-1.3513818909915798*tmp30 + 1.3513818909915798*tmp32 + tmp91) - tmp96*(-2.901085437882748*tmp43 + 2.901085437882748*tmp45 + tmp95);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp8 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp21 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp22 = tmp19*J_B_1(0, 0) - tmp20*J_B_1(0, 0) - tmp21*J_B_1(0, 1) + tmp7*J_B_1(0, 2) - tmp8*J_B_1(0, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp28 = -tmp21 + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp29 = tmp24*tmp28;
      const real_t tmp30 = tmp27*tmp29;
      const real_t tmp31 = -tmp1*tmp12 + tmp15;
      const real_t tmp32 = tmp19 - tmp20;
      const real_t tmp33 = tmp24*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp26 + tmp30 + tmp34;
      const real_t tmp36 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp37 = tmp25*tmp36;
      const real_t tmp38 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp39 = tmp29*tmp38;
      const real_t tmp40 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp41 = tmp33*tmp40;
      const real_t tmp42 = tmp37 + tmp39 + tmp41;
      const real_t tmp43 = tmp13*tmp4 - tmp16;
      const real_t tmp44 = tmp25*tmp43;
      const real_t tmp45 = tmp0*tmp10 - tmp17;
      const real_t tmp46 = tmp29*tmp45;
      const real_t tmp47 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp48 = tmp33*tmp47;
      const real_t tmp49 = tmp44 + tmp46 + tmp48;
      const real_t tmp50 = tmp42 + tmp49;
      const real_t tmp51 = coords[0][0]*coords[1][1];
      const real_t tmp52 = coords[0][0]*coords[1][2];
      const real_t tmp53 = coords[2][1]*coords[3][2];
      const real_t tmp54 = coords[0][1]*coords[1][0];
      const real_t tmp55 = coords[0][1]*coords[1][2];
      const real_t tmp56 = coords[2][2]*coords[3][0];
      const real_t tmp57 = coords[0][2]*coords[1][0];
      const real_t tmp58 = coords[0][2]*coords[1][1];
      const real_t tmp59 = coords[2][0]*coords[3][1];
      const real_t tmp60 = coords[2][2]*coords[3][1];
      const real_t tmp61 = coords[2][0]*coords[3][2];
      const real_t tmp62 = coords[2][1]*coords[3][0];
      const real_t tmp63 = std::abs(coords[0][0]*tmp53 - coords[0][0]*tmp60 + coords[0][1]*tmp56 - coords[0][1]*tmp61 + coords[0][2]*tmp59 - coords[0][2]*tmp62 - coords[1][0]*tmp53 + coords[1][0]*tmp60 - coords[1][1]*tmp56 + coords[1][1]*tmp61 - coords[1][2]*tmp59 + coords[1][2]*tmp62 + coords[2][0]*tmp55 - coords[2][0]*tmp58 - coords[2][1]*tmp52 + coords[2][1]*tmp57 + coords[2][2]*tmp51 - coords[2][2]*tmp54 - coords[3][0]*tmp55 + coords[3][0]*tmp58 + coords[3][1]*tmp52 - coords[3][1]*tmp57 - coords[3][2]*tmp51 + coords[3][2]*tmp54);
      const real_t tmp64 = tmp63*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp66 = J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp67 = tmp65 - tmp66;
      const real_t tmp68 = J_B_10(1, 1)*J_B_10(2, 2);
      const real_t tmp69 = J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp70 = J_B_10(1, 0)*J_B_10(2, 2);
      const real_t tmp71 = tmp65*J_B_10(0, 2) - tmp66*J_B_10(0, 2) + tmp68*J_B_10(0, 0) - tmp69*J_B_10(0, 0) - tmp70*J_B_10(0, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp72 = 1.0 / (tmp71);
      const real_t tmp73 = tmp18*tmp72;
      const real_t tmp74 = tmp67*tmp73;
      const real_t tmp75 = tmp6*tmp74;
      const real_t tmp76 = -tmp70 + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp77 = tmp73*tmp76;
      const real_t tmp78 = tmp27*tmp77;
      const real_t tmp79 = tmp68 - tmp69;
      const real_t tmp80 = tmp73*tmp79;
      const real_t tmp81 = tmp31*tmp80;
      const real_t tmp82 = tmp75 + tmp78 + tmp81;
      const real_t tmp83 = tmp36*tmp74;
      const real_t tmp84 = tmp38*tmp77;
      const real_t tmp85 = tmp40*tmp80;
      const real_t tmp86 = tmp83 + tmp84 + tmp85;
      const real_t tmp87 = tmp43*tmp74;
      const real_t tmp88 = tmp45*tmp77;
      const real_t tmp89 = tmp47*tmp80;
      const real_t tmp90 = tmp87 + tmp88 + tmp89;
      const real_t tmp91 = tmp86 + tmp90;
      const real_t tmp92 = tmp63*std::abs(tmp71)*ScalarCoeff0_10;
      const real_t tmp93 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp94 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp95 = tmp93 - tmp94;
      const real_t tmp96 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp97 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp98 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp99 = tmp93*J_B_3(0, 2) - tmp94*J_B_3(0, 2) + tmp96*J_B_3(0, 0) - tmp97*J_B_3(0, 0) - tmp98*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp100 = 1.0 / (tmp99);
      const real_t tmp101 = tmp100*tmp18;
      const real_t tmp102 = tmp101*tmp95;
      const real_t tmp103 = tmp102*tmp6;
      const real_t tmp104 = -tmp98 + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp105 = tmp101*tmp104;
      const real_t tmp106 = tmp105*tmp27;
      const real_t tmp107 = tmp96 - tmp97;
      const real_t tmp108 = tmp101*tmp107;
      const real_t tmp109 = tmp108*tmp31;
      const real_t tmp110 = tmp103 + tmp106 + tmp109;
      const real_t tmp111 = tmp102*tmp36;
      const real_t tmp112 = tmp105*tmp38;
      const real_t tmp113 = tmp108*tmp40;
      const real_t tmp114 = tmp111 + tmp112 + tmp113;
      const real_t tmp115 = tmp102*tmp43;
      const real_t tmp116 = tmp105*tmp45;
      const real_t tmp117 = tmp108*tmp47;
      const real_t tmp118 = tmp115 + tmp116 + tmp117;
      const real_t tmp119 = tmp114 + tmp118;
      const real_t tmp120 = tmp63*std::abs(tmp99)*ScalarCoeff0_3;
      const real_t tmp121 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp122 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp123 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp124 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp125 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp126 = tmp121*J_B_5(0, 2) - tmp122*J_B_5(0, 2) + tmp123*J_B_5(0, 0) - tmp124*J_B_5(0, 0) - tmp125*J_B_5(0, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp127 = tmp18/tmp126;
      const real_t tmp128 = tmp127*(tmp121 - tmp122);
      const real_t tmp129 = tmp128*tmp6;
      const real_t tmp130 = tmp127*(-tmp125 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp131 = tmp130*tmp27;
      const real_t tmp132 = tmp127*(tmp123 - tmp124);
      const real_t tmp133 = tmp132*tmp31;
      const real_t tmp134 = tmp129 + tmp131 + tmp133;
      const real_t tmp135 = tmp128*tmp36;
      const real_t tmp136 = tmp130*tmp38;
      const real_t tmp137 = tmp132*tmp40;
      const real_t tmp138 = tmp135 + tmp136 + tmp137;
      const real_t tmp139 = tmp128*tmp43;
      const real_t tmp140 = tmp130*tmp45;
      const real_t tmp141 = tmp132*tmp47;
      const real_t tmp142 = tmp139 + tmp140 + tmp141;
      const real_t tmp143 = tmp138 + tmp142;
      const real_t tmp144 = tmp63*std::abs(tmp126)*ScalarCoeff0_5;
      const real_t tmp145 = J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp146 = J_B_7(1, 1)*J_B_7(2, 0);
      const real_t tmp147 = J_B_7(1, 1)*J_B_7(2, 2);
      const real_t tmp148 = J_B_7(1, 2)*J_B_7(2, 1);
      const real_t tmp149 = J_B_7(1, 0)*J_B_7(2, 2);
      const real_t tmp150 = tmp145*J_B_7(0, 2) - tmp146*J_B_7(0, 2) + tmp147*J_B_7(0, 0) - tmp148*J_B_7(0, 0) - tmp149*J_B_7(0, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0);
      const real_t tmp151 = tmp18/tmp150;
      const real_t tmp152 = tmp151*(tmp145 - tmp146);
      const real_t tmp153 = tmp152*tmp6;
      const real_t tmp154 = tmp151*(-tmp149 + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp155 = tmp154*tmp27;
      const real_t tmp156 = tmp151*(tmp147 - tmp148);
      const real_t tmp157 = tmp156*tmp31;
      const real_t tmp158 = tmp153 + tmp155 + tmp157;
      const real_t tmp159 = tmp152*tmp36;
      const real_t tmp160 = tmp154*tmp38;
      const real_t tmp161 = tmp156*tmp40;
      const real_t tmp162 = tmp159 + tmp160 + tmp161;
      const real_t tmp163 = tmp152*tmp43;
      const real_t tmp164 = tmp154*tmp45;
      const real_t tmp165 = tmp156*tmp47;
      const real_t tmp166 = tmp163 + tmp164 + tmp165;
      const real_t tmp167 = tmp162 + tmp166;
      const real_t tmp168 = tmp63*std::abs(tmp150)*ScalarCoeff0_7;
      const real_t tmp169 = J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp170 = J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp171 = tmp169 - tmp170;
      const real_t tmp172 = J_B_9(1, 1)*J_B_9(2, 2);
      const real_t tmp173 = J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp174 = J_B_9(1, 0)*J_B_9(2, 2);
      const real_t tmp175 = tmp169*J_B_9(0, 2) - tmp170*J_B_9(0, 2) + tmp172*J_B_9(0, 0) - tmp173*J_B_9(0, 0) - tmp174*J_B_9(0, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp176 = 1.0 / (tmp175);
      const real_t tmp177 = tmp176*tmp18;
      const real_t tmp178 = tmp171*tmp177;
      const real_t tmp179 = tmp178*tmp43;
      const real_t tmp180 = -tmp174 + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp181 = tmp177*tmp180;
      const real_t tmp182 = tmp181*tmp45;
      const real_t tmp183 = tmp172 - tmp173;
      const real_t tmp184 = tmp177*tmp183;
      const real_t tmp185 = tmp184*tmp47;
      const real_t tmp186 = tmp179 + tmp182 + tmp185;
      const real_t tmp187 = tmp178*tmp36;
      const real_t tmp188 = tmp181*tmp38;
      const real_t tmp189 = tmp184*tmp40;
      const real_t tmp190 = tmp187 + tmp188 + tmp189;
      const real_t tmp191 = tmp178*tmp6;
      const real_t tmp192 = tmp181*tmp27;
      const real_t tmp193 = tmp184*tmp31;
      const real_t tmp194 = tmp191 + tmp192 + tmp193;
      const real_t tmp195 = tmp190 + tmp194;
      const real_t tmp196 = tmp63*std::abs(tmp175)*ScalarCoeff0_9;
      const real_t tmp197 = J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp198 = J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp199 = tmp197 - tmp198;
      const real_t tmp200 = J_B_11(1, 1)*J_B_11(2, 2);
      const real_t tmp201 = J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp202 = J_B_11(1, 0)*J_B_11(2, 2);
      const real_t tmp203 = tmp197*J_B_11(0, 2) - tmp198*J_B_11(0, 2) + tmp200*J_B_11(0, 0) - tmp201*J_B_11(0, 0) - tmp202*J_B_11(0, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp204 = 1.0 / (tmp203);
      const real_t tmp205 = tmp18*tmp204;
      const real_t tmp206 = tmp199*tmp205;
      const real_t tmp207 = tmp206*tmp36;
      const real_t tmp208 = -tmp202 + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp209 = tmp205*tmp208;
      const real_t tmp210 = tmp209*tmp38;
      const real_t tmp211 = tmp200 - tmp201;
      const real_t tmp212 = tmp205*tmp211;
      const real_t tmp213 = tmp212*tmp40;
      const real_t tmp214 = tmp207 + tmp210 + tmp213;
      const real_t tmp215 = tmp206*tmp43;
      const real_t tmp216 = tmp209*tmp45;
      const real_t tmp217 = tmp212*tmp47;
      const real_t tmp218 = tmp215 + tmp216 + tmp217;
      const real_t tmp219 = tmp206*tmp6;
      const real_t tmp220 = tmp209*tmp27;
      const real_t tmp221 = tmp212*tmp31;
      const real_t tmp222 = tmp219 + tmp220 + tmp221;
      const real_t tmp223 = tmp63*std::abs(tmp203)*ScalarCoeff0_11;
      const real_t tmp224 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp225 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp226 = tmp224 - tmp225;
      const real_t tmp227 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp228 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp229 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp230 = tmp224*J_B_2(0, 2) - tmp225*J_B_2(0, 2) + tmp227*J_B_2(0, 0) - tmp228*J_B_2(0, 0) - tmp229*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp231 = 1.0 / (tmp230);
      const real_t tmp232 = tmp18*tmp231;
      const real_t tmp233 = tmp226*tmp232;
      const real_t tmp234 = tmp233*tmp6;
      const real_t tmp235 = -tmp229 + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp236 = tmp232*tmp235;
      const real_t tmp237 = tmp236*tmp27;
      const real_t tmp238 = tmp227 - tmp228;
      const real_t tmp239 = tmp232*tmp238;
      const real_t tmp240 = tmp239*tmp31;
      const real_t tmp241 = tmp234 + tmp237 + tmp240;
      const real_t tmp242 = tmp233*tmp36;
      const real_t tmp243 = tmp236*tmp38;
      const real_t tmp244 = tmp239*tmp40;
      const real_t tmp245 = tmp242 + tmp243 + tmp244;
      const real_t tmp246 = tmp233*tmp43;
      const real_t tmp247 = tmp236*tmp45;
      const real_t tmp248 = tmp239*tmp47;
      const real_t tmp249 = tmp246 + tmp247 + tmp248;
      const real_t tmp250 = tmp245 + tmp249;
      const real_t tmp251 = tmp63*std::abs(tmp230)*ScalarCoeff0_2;
      const real_t tmp252 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp253 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp254 = tmp252 - tmp253;
      const real_t tmp255 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp256 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp257 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp258 = tmp252*J_B_4(0, 2) - tmp253*J_B_4(0, 2) + tmp255*J_B_4(0, 0) - tmp256*J_B_4(0, 0) - tmp257*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp259 = 1.0 / (tmp258);
      const real_t tmp260 = tmp18*tmp259;
      const real_t tmp261 = tmp254*tmp260;
      const real_t tmp262 = tmp261*tmp43;
      const real_t tmp263 = -tmp257 + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp264 = tmp260*tmp263;
      const real_t tmp265 = tmp264*tmp45;
      const real_t tmp266 = tmp255 - tmp256;
      const real_t tmp267 = tmp260*tmp266;
      const real_t tmp268 = tmp267*tmp47;
      const real_t tmp269 = tmp262 + tmp265 + tmp268;
      const real_t tmp270 = tmp261*tmp36;
      const real_t tmp271 = tmp264*tmp38;
      const real_t tmp272 = tmp267*tmp40;
      const real_t tmp273 = tmp270 + tmp271 + tmp272;
      const real_t tmp274 = tmp261*tmp6;
      const real_t tmp275 = tmp264*tmp27;
      const real_t tmp276 = tmp267*tmp31;
      const real_t tmp277 = tmp274 + tmp275 + tmp276;
      const real_t tmp278 = tmp273 + tmp277;
      const real_t tmp279 = tmp63*std::abs(tmp258)*ScalarCoeff0_4;
      const real_t tmp280 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp281 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp282 = tmp280 - tmp281;
      const real_t tmp283 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp284 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp285 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp286 = tmp280*J_B_6(0, 2) - tmp281*J_B_6(0, 2) + tmp283*J_B_6(0, 0) - tmp284*J_B_6(0, 0) - tmp285*J_B_6(0, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp287 = 1.0 / (tmp286);
      const real_t tmp288 = tmp18*tmp287;
      const real_t tmp289 = tmp282*tmp288;
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = -tmp285 + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp292 = tmp288*tmp291;
      const real_t tmp293 = tmp27*tmp292;
      const real_t tmp294 = tmp283 - tmp284;
      const real_t tmp295 = tmp288*tmp294;
      const real_t tmp296 = tmp295*tmp31;
      const real_t tmp297 = tmp290 + tmp293 + tmp296;
      const real_t tmp298 = tmp289*tmp36;
      const real_t tmp299 = tmp292*tmp38;
      const real_t tmp300 = tmp295*tmp40;
      const real_t tmp301 = tmp298 + tmp299 + tmp300;
      const real_t tmp302 = tmp289*tmp43;
      const real_t tmp303 = tmp292*tmp45;
      const real_t tmp304 = tmp295*tmp47;
      const real_t tmp305 = tmp302 + tmp303 + tmp304;
      const real_t tmp306 = tmp301 + tmp305;
      const real_t tmp307 = tmp63*std::abs(tmp286)*ScalarCoeff0_6;
      const real_t tmp308 = J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp309 = J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp310 = tmp308 - tmp309;
      const real_t tmp311 = J_B_8(1, 1)*J_B_8(2, 2);
      const real_t tmp312 = J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp313 = J_B_8(1, 0)*J_B_8(2, 2);
      const real_t tmp314 = tmp308*J_B_8(0, 2) - tmp309*J_B_8(0, 2) + tmp311*J_B_8(0, 0) - tmp312*J_B_8(0, 0) - tmp313*J_B_8(0, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp315 = 1.0 / (tmp314);
      const real_t tmp316 = tmp18*tmp315;
      const real_t tmp317 = tmp310*tmp316;
      const real_t tmp318 = tmp317*tmp36;
      const real_t tmp319 = -tmp313 + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp320 = tmp316*tmp319;
      const real_t tmp321 = tmp320*tmp38;
      const real_t tmp322 = tmp311 - tmp312;
      const real_t tmp323 = tmp316*tmp322;
      const real_t tmp324 = tmp323*tmp40;
      const real_t tmp325 = tmp318 + tmp321 + tmp324;
      const real_t tmp326 = tmp317*tmp43;
      const real_t tmp327 = tmp320*tmp45;
      const real_t tmp328 = tmp323*tmp47;
      const real_t tmp329 = tmp326 + tmp327 + tmp328;
      const real_t tmp330 = tmp317*tmp6;
      const real_t tmp331 = tmp27*tmp320;
      const real_t tmp332 = tmp31*tmp323;
      const real_t tmp333 = tmp330 + tmp331 + tmp332;
      const real_t tmp334 = tmp329 + tmp333;
      const real_t tmp335 = tmp63*std::abs(tmp314)*ScalarCoeff0_8;
      const real_t tmp336 = tmp64*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp39 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46 + 0.55279693041046674*tmp48);
      const real_t tmp337 = 0.0072301427194886381*tmp42;
      const real_t tmp338 = tmp92*(0.60805118540288361*tmp75 + 0.60805118540288361*tmp78 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88 + 0.60805118540288361*tmp89);
      const real_t tmp339 = 0.012344594760863713*tmp86;
      const real_t tmp340 = tmp223*(-2.0850189307815055*tmp207 - 2.0850189307815055*tmp210 - 2.0850189307815055*tmp213 - 2.0850189307815055*tmp215 - 2.0850189307815055*tmp216 - 2.0850189307815055*tmp217 - 2.0850189307815055*tmp219 - 2.0850189307815055*tmp220 - 2.0850189307815055*tmp221);
      const real_t tmp341 = 0.0036548782978011126*tmp214;
      const real_t tmp342 = tmp251*(-0.29317593934991559*tmp234 - 0.29317593934991559*tmp237 - 0.29317593934991559*tmp240 - 0.29317593934991559*tmp242 - 0.29317593934991559*tmp243 - 0.29317593934991559*tmp244 - 0.29317593934991559*tmp246 - 0.29317593934991559*tmp247 - 0.29317593934991559*tmp248);
      const real_t tmp343 = 0.010799549999884401*tmp245;
      const real_t tmp344 = tmp120*(0.56151037867223397*tmp103 + 0.56151037867223397*tmp106 + 0.56151037867223397*tmp109 + 0.56151037867223397*tmp111 + 0.56151037867223397*tmp112 + 0.56151037867223397*tmp113 + 0.56151037867223397*tmp115 + 0.56151037867223397*tmp116 + 0.56151037867223397*tmp117);
      const real_t tmp345 = 0.012584765868454714*tmp114;
      const real_t tmp346 = tmp279*(-0.31389282688815401*tmp262 - 0.31389282688815401*tmp265 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp270 - 0.31389282688815401*tmp271 - 0.31389282688815401*tmp272 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp275 - 0.31389282688815401*tmp276);
      const real_t tmp347 = 0.00083582139204094858*tmp273;
      const real_t tmp348 = tmp144*(0.99043597017024343*tmp129 + 0.99043597017024343*tmp131 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp135 + 0.99043597017024343*tmp136 + 0.99043597017024343*tmp137 + 0.99043597017024343*tmp139 + 0.99043597017024343*tmp140 + 0.99043597017024343*tmp141);
      const real_t tmp349 = 0.0040819365333192512*tmp138;
      const real_t tmp350 = tmp307*(-1.2518910405721839*tmp290 - 1.2518910405721839*tmp293 - 1.2518910405721839*tmp296 - 1.2518910405721839*tmp298 - 1.2518910405721839*tmp299 - 1.2518910405721839*tmp300 - 1.2518910405721839*tmp302 - 1.2518910405721839*tmp303 - 1.2518910405721839*tmp304);
      const real_t tmp351 = 0.0045346636251092122*tmp301;
      const real_t tmp352 = tmp168*(0.77270393148826533*tmp153 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp157 + 0.77270393148826533*tmp159 + 0.77270393148826533*tmp160 + 0.77270393148826533*tmp161 + 0.77270393148826533*tmp163 + 0.77270393148826533*tmp164 + 0.77270393148826533*tmp165);
      const real_t tmp353 = 0.0061987549215557864*tmp162;
      const real_t tmp354 = tmp335*(-0.9184440441026207*tmp318 - 0.9184440441026207*tmp321 - 0.9184440441026207*tmp324 - 0.9184440441026207*tmp326 - 0.9184440441026207*tmp327 - 0.9184440441026207*tmp328 - 0.9184440441026207*tmp330 - 0.9184440441026207*tmp331 - 0.9184440441026207*tmp332);
      const real_t tmp355 = 0.0045087419239184514*tmp325;
      const real_t tmp356 = tmp196*(0.37454442704241986*tmp179 + 0.37454442704241986*tmp182 + 0.37454442704241986*tmp185 + 0.37454442704241986*tmp187 + 0.37454442704241986*tmp188 + 0.37454442704241986*tmp189 + 0.37454442704241986*tmp191 + 0.37454442704241986*tmp192 + 0.37454442704241986*tmp193);
      const real_t tmp357 = 0.0044998649071490461*tmp190;
      const real_t tmp358 = tmp336*tmp337 - tmp338*tmp339 + tmp340*tmp341 + tmp342*tmp343 - tmp344*tmp345 + tmp346*tmp347 + tmp348*tmp349 + tmp350*tmp351 - tmp352*tmp353 - tmp354*tmp355 + tmp356*tmp357;
      const real_t tmp359 = 0.0067853652681886352*tmp49;
      const real_t tmp360 = 0.0041416969702195786*tmp90;
      const real_t tmp361 = 0.0013137068218914037*tmp218;
      const real_t tmp362 = 0.0038818597778972029*tmp249;
      const real_t tmp363 = 0.010066964965131993*tmp118;
      const real_t tmp364 = 0.0046804043242939224*tmp269;
      const real_t tmp365 = 0.0097490714046835261*tmp142;
      const real_t tmp366 = 0.0085077884791842431*tmp305;
      const real_t tmp367 = 0.0056487878897383461*tmp166;
      const real_t tmp368 = 0.005238393734043144*tmp329;
      const real_t tmp369 = 0.012093792842045984*tmp186;
      const real_t tmp370 = tmp336*tmp359 + tmp338*tmp360 + tmp340*tmp361 - tmp342*tmp362 + tmp344*tmp363 - tmp346*tmp364 - tmp348*tmp365 + tmp350*tmp366 - tmp352*tmp367 + tmp354*tmp368 - tmp356*tmp369;
      const real_t tmp371 = 0.020554974928565235*tmp35;
      const real_t tmp372 = 0.0044685602754798454*tmp82;
      const real_t tmp373 = 0.0041246668394316508*tmp222;
      const real_t tmp374 = 0.0033267985952381263*tmp241;
      const real_t tmp375 = 0.0071511654955033511*tmp110;
      const real_t tmp376 = 0.010590168103918869*tmp277;
      const real_t tmp377 = 0.0027144532136395704*tmp134;
      const real_t tmp378 = 0.0019942799754541058*tmp297;
      const real_t tmp379 = 0.005883129944586717*tmp158;
      const real_t tmp380 = 0.0053864900723149976*tmp333;
      const real_t tmp381 = 0.0052886569726683132*tmp194;
      const real_t tmp382 = -tmp336*tmp371 + tmp338*tmp372 + tmp340*tmp373 - tmp342*tmp374 - tmp344*tmp375 + tmp346*tmp376 - tmp348*tmp377 - tmp350*tmp378 + tmp352*tmp379 + tmp354*tmp380 + tmp356*tmp381;
      const real_t tmp383 = 2.7375616618121592*tmp44 + 2.7375616618121592*tmp46 + 2.7375616618121592*tmp48;
      const real_t tmp384 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp30 + 0.42641669024797446*tmp34;
      const real_t tmp385 = tmp383 + tmp384;
      const real_t tmp386 = 0.011829781572832234*tmp336;
      const real_t tmp387 = 0.2723974837528258*tmp87 + 0.2723974837528258*tmp88 + 0.2723974837528258*tmp89;
      const real_t tmp388 = 0.3256196736114374*tmp75 + 0.3256196736114374*tmp78 + 0.3256196736114374*tmp81;
      const real_t tmp389 = tmp387 + tmp388;
      const real_t tmp390 = 0.0061414854617707626*tmp338;
      const real_t tmp391 = 0.054242807519210512*tmp215 + 0.054242807519210512*tmp216 + 0.054242807519210512*tmp217;
      const real_t tmp392 = 0.69877623478892303*tmp219 + 0.69877623478892303*tmp220 + 0.69877623478892303*tmp221;
      const real_t tmp393 = tmp391 + tmp392;
      const real_t tmp394 = 0.0043612323249822204*tmp340;
      const real_t tmp395 = 1.2716142408535775*tmp246 + 1.2716142408535775*tmp247 + 1.2716142408535775*tmp248;
      const real_t tmp396 = 1.3169318389705873*tmp234 + 1.3169318389705873*tmp237 + 1.3169318389705873*tmp240;
      const real_t tmp397 = tmp395 + tmp396;
      const real_t tmp398 = 0.012248248047610821*tmp342;
      const real_t tmp399 = 1.4152929568371884*tmp115 + 1.4152929568371884*tmp116 + 1.4152929568371884*tmp117;
      const real_t tmp400 = 0.41537646564397157*tmp103 + 0.41537646564397157*tmp106 + 0.41537646564397157*tmp109;
      const real_t tmp401 = tmp399 + tmp400;
      const real_t tmp402 = 0.017219568446249611*tmp344;
      const real_t tmp403 = 0.50720690366156718*tmp262 + 0.50720690366156718*tmp265 + 0.50720690366156718*tmp268;
      const real_t tmp404 = 1.2177936097379878*tmp274 + 1.2177936097379878*tmp275 + 1.2177936097379878*tmp276;
      const real_t tmp405 = tmp403 + tmp404;
      const real_t tmp406 = 0.021490090227737114*tmp346;
      const real_t tmp407 = 1.3207616593498592*tmp139 + 1.3207616593498592*tmp140 + 1.3207616593498592*tmp141;
      const real_t tmp408 = 2.1520288156647434*tmp129 + 2.1520288156647434*tmp131 + 2.1520288156647434*tmp133;
      const real_t tmp409 = tmp407 + tmp408;
      const real_t tmp410 = 0.0084625239161731543*tmp348;
      const real_t tmp411 = 1.2259759537187613*tmp302 + 1.2259759537187613*tmp303 + 1.2259759537187613*tmp304;
      const real_t tmp412 = 0.035965040373342916*tmp290 + 0.035965040373342916*tmp293 + 0.035965040373342916*tmp296;
      const real_t tmp413 = tmp411 + tmp412;
      const real_t tmp414 = 0.0088251866742250357*tmp350;
      const real_t tmp415 = 0.23782646519773576*tmp163 + 0.23782646519773576*tmp164 + 0.23782646519773576*tmp165;
      const real_t tmp416 = 1.7318139619254227*tmp153 + 1.7318139619254227*tmp155 + 1.7318139619254227*tmp157;
      const real_t tmp417 = tmp415 + tmp416;
      const real_t tmp418 = 0.0077188851041817101*tmp352;
      const real_t tmp419 = 0.19112574223634571*tmp326 + 0.19112574223634571*tmp327 + 0.19112574223634571*tmp328;
      const real_t tmp420 = 0.21336495814298084*tmp330 + 0.21336495814298084*tmp331 + 0.21336495814298084*tmp332;
      const real_t tmp421 = tmp419 + tmp420;
      const real_t tmp422 = 0.006659242794062166*tmp354;
      const real_t tmp423 = 0.14073571909439453*tmp179 + 0.14073571909439453*tmp182 + 0.14073571909439453*tmp185;
      const real_t tmp424 = 2.9649155283744921*tmp191 + 2.9649155283744921*tmp192 + 2.9649155283744921*tmp193;
      const real_t tmp425 = tmp423 + tmp424;
      const real_t tmp426 = 0.0061548665412862651*tmp356;
      const real_t tmp427 = -tmp385*tmp386 - tmp389*tmp390 - tmp393*tmp394 - tmp397*tmp398 - tmp401*tmp402 - tmp405*tmp406 - tmp409*tmp410 - tmp413*tmp414 - tmp417*tmp418 - tmp421*tmp422 - tmp425*tmp426;
      const real_t tmp428 = 2.7375616618121592*tmp37 + 2.7375616618121592*tmp39 + 2.7375616618121592*tmp41;
      const real_t tmp429 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp30 + 0.38881857835033307*tmp34;
      const real_t tmp430 = tmp428 + tmp429;
      const real_t tmp431 = 0.2723974837528258*tmp83 + 0.2723974837528258*tmp84 + 0.2723974837528258*tmp85;
      const real_t tmp432 = 3.0100340280386204*tmp75 + 3.0100340280386204*tmp78 + 3.0100340280386204*tmp81;
      const real_t tmp433 = tmp431 + tmp432;
      const real_t tmp434 = 0.054242807519210512*tmp207 + 0.054242807519210512*tmp210 + 0.054242807519210512*tmp213;
      const real_t tmp435 = 0.16196202691036121*tmp219 + 0.16196202691036121*tmp220 + 0.16196202691036121*tmp221;
      const real_t tmp436 = tmp434 + tmp435;
      const real_t tmp437 = 1.2716142408535775*tmp242 + 1.2716142408535775*tmp243 + 1.2716142408535775*tmp244;
      const real_t tmp438 = 0.11827798082591956*tmp234 + 0.11827798082591956*tmp237 + 0.11827798082591956*tmp240;
      const real_t tmp439 = tmp437 + tmp438;
      const real_t tmp440 = 1.4152929568371884*tmp111 + 1.4152929568371884*tmp112 + 1.4152929568371884*tmp113;
      const real_t tmp441 = 1.730840956191074*tmp103 + 1.730840956191074*tmp106 + 1.730840956191074*tmp109;
      const real_t tmp442 = tmp440 + tmp441;
      const real_t tmp443 = 0.50720690366156718*tmp270 + 0.50720690366156718*tmp271 + 0.50720690366156718*tmp272;
      const real_t tmp444 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp275 + 0.96110665971229103*tmp276;
      const real_t tmp445 = tmp443 + tmp444;
      const real_t tmp446 = 1.3207616593498592*tmp135 + 1.3207616593498592*tmp136 + 1.3207616593498592*tmp137;
      const real_t tmp447 = 0.51764549515564062*tmp129 + 0.51764549515564062*tmp131 + 0.51764549515564062*tmp133;
      const real_t tmp448 = tmp446 + tmp447;
      const real_t tmp449 = 1.2259759537187613*tmp298 + 1.2259759537187613*tmp299 + 1.2259759537187613*tmp300;
      const real_t tmp450 = 0.48616796533571183*tmp290 + 0.48616796533571183*tmp293 + 0.48616796533571183*tmp296;
      const real_t tmp451 = tmp449 + tmp450;
      const real_t tmp452 = 0.23782646519773576*tmp159 + 0.23782646519773576*tmp160 + 0.23782646519773576*tmp161;
      const real_t tmp453 = 1.8030635043651069*tmp153 + 1.8030635043651069*tmp155 + 1.8030635043651069*tmp157;
      const real_t tmp454 = tmp452 + tmp453;
      const real_t tmp455 = 0.19112574223634571*tmp318 + 0.19112574223634571*tmp321 + 0.19112574223634571*tmp324;
      const real_t tmp456 = 1.6770652555180527*tmp330 + 1.6770652555180527*tmp331 + 1.6770652555180527*tmp332;
      const real_t tmp457 = tmp455 + tmp456;
      const real_t tmp458 = 0.14073571909439453*tmp187 + 0.14073571909439453*tmp188 + 0.14073571909439453*tmp189;
      const real_t tmp459 = 0.2688931795735332*tmp191 + 0.2688931795735332*tmp192 + 0.2688931795735332*tmp193;
      const real_t tmp460 = tmp458 + tmp459;
      const real_t tmp461 = -tmp386*tmp430 - tmp390*tmp433 - tmp394*tmp436 - tmp398*tmp439 - tmp402*tmp442 - tmp406*tmp445 - tmp410*tmp448 - tmp414*tmp451 - tmp418*tmp454 - tmp422*tmp457 - tmp426*tmp460;
      const real_t tmp462 = 0.42641669024797446*tmp37 + 0.42641669024797446*tmp39 + 0.42641669024797446*tmp41;
      const real_t tmp463 = 0.38881857835033307*tmp44 + 0.38881857835033307*tmp46 + 0.38881857835033307*tmp48;
      const real_t tmp464 = tmp462 + tmp463;
      const real_t tmp465 = 0.3256196736114374*tmp83 + 0.3256196736114374*tmp84 + 0.3256196736114374*tmp85;
      const real_t tmp466 = 3.0100340280386204*tmp87 + 3.0100340280386204*tmp88 + 3.0100340280386204*tmp89;
      const real_t tmp467 = tmp465 + tmp466;
      const real_t tmp468 = 0.69877623478892303*tmp207 + 0.69877623478892303*tmp210 + 0.69877623478892303*tmp213;
      const real_t tmp469 = 0.16196202691036121*tmp215 + 0.16196202691036121*tmp216 + 0.16196202691036121*tmp217;
      const real_t tmp470 = tmp468 + tmp469;
      const real_t tmp471 = 1.3169318389705873*tmp242 + 1.3169318389705873*tmp243 + 1.3169318389705873*tmp244;
      const real_t tmp472 = 0.11827798082591956*tmp246 + 0.11827798082591956*tmp247 + 0.11827798082591956*tmp248;
      const real_t tmp473 = tmp471 + tmp472;
      const real_t tmp474 = 0.41537646564397157*tmp111 + 0.41537646564397157*tmp112 + 0.41537646564397157*tmp113;
      const real_t tmp475 = 1.730840956191074*tmp115 + 1.730840956191074*tmp116 + 1.730840956191074*tmp117;
      const real_t tmp476 = tmp474 + tmp475;
      const real_t tmp477 = 1.2177936097379878*tmp270 + 1.2177936097379878*tmp271 + 1.2177936097379878*tmp272;
      const real_t tmp478 = 0.96110665971229103*tmp262 + 0.96110665971229103*tmp265 + 0.96110665971229103*tmp268;
      const real_t tmp479 = tmp477 + tmp478;
      const real_t tmp480 = 2.1520288156647434*tmp135 + 2.1520288156647434*tmp136 + 2.1520288156647434*tmp137;
      const real_t tmp481 = 0.51764549515564062*tmp139 + 0.51764549515564062*tmp140 + 0.51764549515564062*tmp141;
      const real_t tmp482 = tmp480 + tmp481;
      const real_t tmp483 = 0.035965040373342916*tmp298 + 0.035965040373342916*tmp299 + 0.035965040373342916*tmp300;
      const real_t tmp484 = 0.48616796533571183*tmp302 + 0.48616796533571183*tmp303 + 0.48616796533571183*tmp304;
      const real_t tmp485 = tmp483 + tmp484;
      const real_t tmp486 = 1.7318139619254227*tmp159 + 1.7318139619254227*tmp160 + 1.7318139619254227*tmp161;
      const real_t tmp487 = 1.8030635043651069*tmp163 + 1.8030635043651069*tmp164 + 1.8030635043651069*tmp165;
      const real_t tmp488 = tmp486 + tmp487;
      const real_t tmp489 = 0.21336495814298084*tmp318 + 0.21336495814298084*tmp321 + 0.21336495814298084*tmp324;
      const real_t tmp490 = 1.6770652555180527*tmp326 + 1.6770652555180527*tmp327 + 1.6770652555180527*tmp328;
      const real_t tmp491 = tmp489 + tmp490;
      const real_t tmp492 = 2.9649155283744921*tmp187 + 2.9649155283744921*tmp188 + 2.9649155283744921*tmp189;
      const real_t tmp493 = 0.2688931795735332*tmp179 + 0.2688931795735332*tmp182 + 0.2688931795735332*tmp185;
      const real_t tmp494 = tmp492 + tmp493;
      const real_t tmp495 = -tmp386*tmp464 - tmp390*tmp467 - tmp394*tmp470 - tmp398*tmp473 - tmp402*tmp476 - tmp406*tmp479 - tmp410*tmp482 - tmp414*tmp485 - tmp418*tmp488 - tmp422*tmp491 - tmp426*tmp494;
      const real_t tmp496 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp30 - 2.2903585922226259*tmp34 - tmp383 - tmp428;
      const real_t tmp497 = 0.11955133084429059*tmp18*tmp27*tmp72*tmp76 + 0.11955133084429059*tmp18*tmp31*tmp72*tmp79 + 0.11955133084429059*tmp18*tmp6*tmp67*tmp72 - tmp387 - tmp431;
      const real_t tmp498 = 3.030776123262295*tmp18*tmp199*tmp204*tmp6 + 3.030776123262295*tmp18*tmp204*tmp208*tmp27 + 3.030776123262295*tmp18*tmp204*tmp211*tmp31 - tmp391 - tmp434;
      const real_t tmp499 = 0.021561698496338266*tmp18*tmp226*tmp231*tmp6 + 0.021561698496338266*tmp18*tmp231*tmp235*tmp27 + 0.021561698496338266*tmp18*tmp231*tmp238*tmp31 - tmp395 - tmp437;
      const real_t tmp500 = -0.97680333550942233*tmp103 - 0.97680333550942233*tmp106 - 0.97680333550942233*tmp109 - tmp399 - tmp440;
      const real_t tmp501 = 0.80668592322658683*tmp18*tmp254*tmp259*tmp6 + 0.80668592322658683*tmp18*tmp259*tmp263*tmp27 + 0.80668592322658683*tmp18*tmp259*tmp266*tmp31 - tmp403 - tmp443;
      const real_t tmp502 = -1.3111976295201027*tmp129 - 1.3111976295201027*tmp131 - 1.3111976295201027*tmp133 - tmp407 - tmp446;
      const real_t tmp503 = 1.0259150868534226*tmp18*tmp27*tmp287*tmp291 + 1.0259150868534226*tmp18*tmp282*tmp287*tmp6 + 1.0259150868534226*tmp18*tmp287*tmp294*tmp31 - tmp411 - tmp449;
      const real_t tmp504 = -0.010530396686001087*tmp153 - 0.010530396686001087*tmp155 - 0.010530396686001087*tmp157 - tmp415 - tmp452;
      const real_t tmp505 = 1.727318301866275*tmp18*tmp27*tmp315*tmp319 + 1.727318301866275*tmp18*tmp31*tmp315*tmp322 + 1.727318301866275*tmp18*tmp310*tmp315*tmp6 - tmp419 - tmp455;
      const real_t tmp506 = 0.48471985386318561*tmp171*tmp176*tmp18*tmp6 + 0.48471985386318561*tmp176*tmp18*tmp180*tmp27 + 0.48471985386318561*tmp176*tmp18*tmp183*tmp31 - tmp423 - tmp458;
      const real_t tmp507 = -tmp386*tmp496 - tmp390*tmp497 - tmp394*tmp498 - tmp398*tmp499 - tmp402*tmp500 - tmp406*tmp501 - tmp410*tmp502 - tmp414*tmp503 - tmp418*tmp504 - tmp422*tmp505 - tmp426*tmp506;
      const real_t tmp508 = 0.020786379341558803*tmp18*tmp23*tmp28*tmp45 + 0.020786379341558803*tmp18*tmp23*tmp32*tmp47 + 0.020786379341558803*tmp18*tmp23*tmp43*tmp9 - tmp384 - tmp462;
      const real_t tmp509 = 0.066329140985678992*tmp18*tmp43*tmp67*tmp72 + 0.066329140985678992*tmp18*tmp45*tmp72*tmp76 + 0.066329140985678992*tmp18*tmp47*tmp72*tmp79 - tmp388 - tmp465;
      const real_t tmp510 = 2.3862426959925824*tmp18*tmp199*tmp204*tmp43 + 2.3862426959925824*tmp18*tmp204*tmp208*tmp45 + 2.3862426959925824*tmp18*tmp204*tmp211*tmp47 - tmp392 - tmp468;
      const real_t tmp511 = -0.023755899620671705*tmp246 - 0.023755899620671705*tmp247 - 0.023755899620671705*tmp248 - tmp396 - tmp471;
      const real_t tmp512 = 0.023113155683794462*tmp100*tmp104*tmp18*tmp45 + 0.023113155683794462*tmp100*tmp107*tmp18*tmp47 + 0.023113155683794462*tmp100*tmp18*tmp43*tmp95 - tmp400 - tmp474;
      const real_t tmp513 = 0.096099217150166227*tmp18*tmp254*tmp259*tmp43 + 0.096099217150166227*tmp18*tmp259*tmp263*tmp45 + 0.096099217150166227*tmp18*tmp259*tmp266*tmp47 - tmp404 - tmp477;
      const real_t tmp514 = -2.1424647858349868*tmp139 - 2.1424647858349868*tmp140 - 2.1424647858349868*tmp141 - tmp408 - tmp480;
      const real_t tmp515 = 2.215926000198841*tmp18*tmp282*tmp287*tmp43 + 2.215926000198841*tmp18*tmp287*tmp291*tmp45 + 2.215926000198841*tmp18*tmp287*tmp294*tmp47 - tmp412 - tmp483;
      const real_t tmp516 = -1.504517893413688*tmp163 - 1.504517893413688*tmp164 - 1.504517893413688*tmp165 - tmp416 - tmp486;
      const real_t tmp517 = 1.7050790859596399*tmp18*tmp310*tmp315*tmp43 + 1.7050790859596399*tmp18*tmp315*tmp319*tmp45 + 1.7050790859596399*tmp18*tmp315*tmp322*tmp47 - tmp420 - tmp489;
      const real_t tmp518 = -2.339459955416912*tmp179 - 2.339459955416912*tmp182 - 2.339459955416912*tmp185 - tmp424 - tmp492;
      const real_t tmp519 = -tmp386*tmp508 - tmp390*tmp509 - tmp394*tmp510 - tmp398*tmp511 - tmp402*tmp512 - tmp406*tmp513 - tmp410*tmp514 - tmp414*tmp515 - tmp418*tmp516 - tmp422*tmp517 - tmp426*tmp518;
      const real_t tmp520 = 0.058384491239200198*tmp18*tmp23*tmp28*tmp38 + 0.058384491239200198*tmp18*tmp23*tmp32*tmp40 + 0.058384491239200198*tmp18*tmp23*tmp36*tmp9 - tmp429 - tmp463;
      const real_t tmp521 = -tmp432 - tmp466 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp84 - 2.6180852134415042*tmp85;
      const real_t tmp522 = 2.923056903871144*tmp18*tmp199*tmp204*tmp36 + 2.923056903871144*tmp18*tmp204*tmp208*tmp38 + 2.923056903871144*tmp18*tmp204*tmp211*tmp40 - tmp435 - tmp469;
      const real_t tmp523 = 1.1748979585239958*tmp18*tmp226*tmp231*tmp36 + 1.1748979585239958*tmp18*tmp231*tmp235*tmp38 + 1.1748979585239958*tmp18*tmp231*tmp238*tmp40 - tmp438 - tmp472;
      const real_t tmp524 = -1.292351334863308*tmp111 - 1.292351334863308*tmp112 - 1.292351334863308*tmp113 - tmp441 - tmp475;
      const real_t tmp525 = 0.35278616717586297*tmp18*tmp254*tmp259*tmp36 + 0.35278616717586297*tmp18*tmp259*tmp263*tmp38 + 0.35278616717586297*tmp18*tmp259*tmp266*tmp40 - tmp444 - tmp478;
      const real_t tmp526 = -0.50808146532588383*tmp135 - 0.50808146532588383*tmp136 - 0.50808146532588383*tmp137 - tmp447 - tmp481;
      const real_t tmp527 = 1.7657230752364721*tmp18*tmp282*tmp287*tmp36 + 1.7657230752364721*tmp18*tmp287*tmp291*tmp38 + 1.7657230752364721*tmp18*tmp287*tmp294*tmp40 - tmp450 - tmp484;
      const real_t tmp528 = -1.5757674358533722*tmp159 - 1.5757674358533722*tmp160 - 1.5757674358533722*tmp161 - tmp453 - tmp487;
      const real_t tmp529 = 0.24137878858456796*tmp18*tmp310*tmp315*tmp36 + 0.24137878858456796*tmp18*tmp315*tmp319*tmp38 + 0.24137878858456796*tmp18*tmp315*tmp322*tmp40 - tmp456 - tmp490;
      const real_t tmp530 = 0.35656239338404694*tmp171*tmp176*tmp18*tmp36 + 0.35656239338404694*tmp176*tmp18*tmp180*tmp38 + 0.35656239338404694*tmp176*tmp18*tmp183*tmp40 - tmp459 - tmp493;
      const real_t tmp531 = -tmp386*tmp520 - tmp390*tmp521 - tmp394*tmp522 - tmp398*tmp523 - tmp402*tmp524 - tmp406*tmp525 - tmp410*tmp526 - tmp414*tmp527 - tmp418*tmp528 - tmp422*tmp529 - tmp426*tmp530;
      const real_t tmp532 = tmp42*tmp64;
      const real_t tmp533 = tmp86*tmp92;
      const real_t tmp534 = tmp214*tmp223;
      const real_t tmp535 = tmp245*tmp251;
      const real_t tmp536 = tmp114*tmp120;
      const real_t tmp537 = tmp273*tmp279;
      const real_t tmp538 = tmp138*tmp144;
      const real_t tmp539 = tmp301*tmp307;
      const real_t tmp540 = tmp162*tmp168;
      const real_t tmp541 = tmp325*tmp335;
      const real_t tmp542 = tmp190*tmp196;
      const real_t tmp543 = 0.0073573503010591077*tmp118*tmp536 + 0.0047025085100984255*tmp142*tmp538 - 0.0045363353981484533*tmp166*tmp540 + 0.0088418544316446034*tmp186*tmp542 - 0.001100936202251903*tmp218*tmp534 + 0.0034227212415181688*tmp249*tmp535 + 0.00018203655806882805*tmp269*tmp537 - 0.00437157426475263*tmp305*tmp539 + 0.0035467343920440879*tmp329*tmp541 - 0.0041470891910238041*tmp49*tmp532 + 0.008324951843965811*tmp533*tmp90;
      const real_t tmp544 = -0.0052263646286142846*tmp110*tmp536 + 0.0013093287357882949*tmp134*tmp538 + 0.0047245269499351069*tmp158*tmp540 - 0.0038665731836137946*tmp194*tmp542 - 0.003456627437787347*tmp222*tmp534 + 0.0029333115747788548*tmp241*tmp535 - 0.00041188701176975823*tmp277*tmp537 + 0.0010247249374778298*tmp297*tmp539 + 0.0036470052771574082*tmp333*tmp541 + 0.012562818798813762*tmp35*tmp532 + 0.00898195821005612*tmp533*tmp82;
      const real_t tmp545 = tmp337*tmp64;
      const real_t tmp546 = tmp339*tmp92;
      const real_t tmp547 = tmp223*tmp341;
      const real_t tmp548 = tmp251*tmp343;
      const real_t tmp549 = tmp120*tmp345;
      const real_t tmp550 = tmp279*tmp347;
      const real_t tmp551 = tmp144*tmp349;
      const real_t tmp552 = tmp307*tmp351;
      const real_t tmp553 = tmp168*tmp353;
      const real_t tmp554 = tmp335*tmp355;
      const real_t tmp555 = tmp196*tmp357;
      const real_t tmp556 = tmp385*tmp545 - tmp389*tmp546 + tmp393*tmp547 + tmp397*tmp548 - tmp401*tmp549 + tmp405*tmp550 + tmp409*tmp551 + tmp413*tmp552 - tmp417*tmp553 - tmp421*tmp554 + tmp425*tmp555;
      const real_t tmp557 = tmp430*tmp545 - tmp433*tmp546 + tmp436*tmp547 + tmp439*tmp548 - tmp442*tmp549 + tmp445*tmp550 + tmp448*tmp551 + tmp451*tmp552 - tmp454*tmp553 - tmp457*tmp554 + tmp460*tmp555;
      const real_t tmp558 = tmp464*tmp545 - tmp467*tmp546 + tmp470*tmp547 + tmp473*tmp548 - tmp476*tmp549 + tmp479*tmp550 + tmp482*tmp551 + tmp485*tmp552 - tmp488*tmp553 - tmp491*tmp554 + tmp494*tmp555;
      const real_t tmp559 = tmp496*tmp545 - tmp497*tmp546 + tmp498*tmp547 + tmp499*tmp548 - tmp500*tmp549 + tmp501*tmp550 + tmp502*tmp551 + tmp503*tmp552 - tmp504*tmp553 - tmp505*tmp554 + tmp506*tmp555;
      const real_t tmp560 = tmp508*tmp545 - tmp509*tmp546 + tmp510*tmp547 + tmp511*tmp548 - tmp512*tmp549 + tmp513*tmp550 + tmp514*tmp551 + tmp515*tmp552 - tmp516*tmp553 - tmp517*tmp554 + tmp518*tmp555;
      const real_t tmp561 = tmp520*tmp545 - tmp521*tmp546 + tmp522*tmp547 + tmp523*tmp548 - tmp524*tmp549 + tmp525*tmp550 + tmp526*tmp551 + tmp527*tmp552 - tmp528*tmp553 - tmp529*tmp554 + tmp530*tmp555;
      const real_t tmp562 = 0.0041807396467460484*tmp110*tmp118*tmp120 - 0.0031271283208865507*tmp134*tmp142*tmp144 + 0.0043053566332700976*tmp158*tmp166*tmp168 + 0.010391764209842001*tmp186*tmp194*tmp196 - 0.0012424476756148744*tmp218*tmp222*tmp223 - 0.0010543683966735859*tmp241*tmp249*tmp251 + 0.0023064709390845928*tmp269*tmp277*tmp279 + 0.0019225556156211496*tmp297*tmp305*tmp307 - 0.0042372018434979264*tmp329*tmp333*tmp335 + 0.011789990551396352*tmp35*tmp49*tmp64 - 0.003013509137065063*tmp82*tmp90*tmp92;
      const real_t tmp563 = tmp359*tmp64;
      const real_t tmp564 = tmp360*tmp92;
      const real_t tmp565 = tmp223*tmp361;
      const real_t tmp566 = tmp251*tmp362;
      const real_t tmp567 = tmp120*tmp363;
      const real_t tmp568 = tmp279*tmp364;
      const real_t tmp569 = tmp144*tmp365;
      const real_t tmp570 = tmp307*tmp366;
      const real_t tmp571 = tmp168*tmp367;
      const real_t tmp572 = tmp335*tmp368;
      const real_t tmp573 = tmp196*tmp369;
      const real_t tmp574 = tmp385*tmp563 + tmp389*tmp564 + tmp393*tmp565 - tmp397*tmp566 + tmp401*tmp567 - tmp405*tmp568 - tmp409*tmp569 + tmp413*tmp570 - tmp417*tmp571 + tmp421*tmp572 - tmp425*tmp573;
      const real_t tmp575 = tmp430*tmp563 + tmp433*tmp564 + tmp436*tmp565 - tmp439*tmp566 + tmp442*tmp567 - tmp445*tmp568 - tmp448*tmp569 + tmp451*tmp570 - tmp454*tmp571 + tmp457*tmp572 - tmp460*tmp573;
      const real_t tmp576 = tmp464*tmp563 + tmp467*tmp564 + tmp470*tmp565 - tmp473*tmp566 + tmp476*tmp567 - tmp479*tmp568 - tmp482*tmp569 + tmp485*tmp570 - tmp488*tmp571 + tmp491*tmp572 - tmp494*tmp573;
      const real_t tmp577 = tmp496*tmp563 + tmp497*tmp564 + tmp498*tmp565 - tmp499*tmp566 + tmp500*tmp567 - tmp501*tmp568 - tmp502*tmp569 + tmp503*tmp570 - tmp504*tmp571 + tmp505*tmp572 - tmp506*tmp573;
      const real_t tmp578 = tmp508*tmp563 + tmp509*tmp564 + tmp510*tmp565 - tmp511*tmp566 + tmp512*tmp567 - tmp513*tmp568 - tmp514*tmp569 + tmp515*tmp570 - tmp516*tmp571 + tmp517*tmp572 - tmp518*tmp573;
      const real_t tmp579 = tmp520*tmp563 + tmp521*tmp564 + tmp522*tmp565 - tmp523*tmp566 + tmp524*tmp567 - tmp525*tmp568 - tmp526*tmp569 + tmp527*tmp570 - tmp528*tmp571 + tmp529*tmp572 - tmp530*tmp573;
      const real_t tmp580 = tmp371*tmp64;
      const real_t tmp581 = tmp372*tmp92;
      const real_t tmp582 = tmp223*tmp373;
      const real_t tmp583 = tmp251*tmp374;
      const real_t tmp584 = tmp120*tmp375;
      const real_t tmp585 = tmp279*tmp376;
      const real_t tmp586 = tmp144*tmp377;
      const real_t tmp587 = tmp307*tmp378;
      const real_t tmp588 = tmp168*tmp379;
      const real_t tmp589 = tmp335*tmp380;
      const real_t tmp590 = tmp196*tmp381;
      const real_t tmp591 = -tmp385*tmp580 + tmp389*tmp581 + tmp393*tmp582 - tmp397*tmp583 - tmp401*tmp584 + tmp405*tmp585 - tmp409*tmp586 - tmp413*tmp587 + tmp417*tmp588 + tmp421*tmp589 + tmp425*tmp590;
      const real_t tmp592 = -tmp430*tmp580 + tmp433*tmp581 + tmp436*tmp582 - tmp439*tmp583 - tmp442*tmp584 + tmp445*tmp585 - tmp448*tmp586 - tmp451*tmp587 + tmp454*tmp588 + tmp457*tmp589 + tmp460*tmp590;
      const real_t tmp593 = -tmp464*tmp580 + tmp467*tmp581 + tmp470*tmp582 - tmp473*tmp583 - tmp476*tmp584 + tmp479*tmp585 - tmp482*tmp586 - tmp485*tmp587 + tmp488*tmp588 + tmp491*tmp589 + tmp494*tmp590;
      const real_t tmp594 = -tmp496*tmp580 + tmp497*tmp581 + tmp498*tmp582 - tmp499*tmp583 - tmp500*tmp584 + tmp501*tmp585 - tmp502*tmp586 - tmp503*tmp587 + tmp504*tmp588 + tmp505*tmp589 + tmp506*tmp590;
      const real_t tmp595 = -tmp508*tmp580 + tmp509*tmp581 + tmp510*tmp582 - tmp511*tmp583 - tmp512*tmp584 + tmp513*tmp585 - tmp514*tmp586 - tmp515*tmp587 + tmp516*tmp588 + tmp517*tmp589 + tmp518*tmp590;
      const real_t tmp596 = -tmp520*tmp580 + tmp521*tmp581 + tmp522*tmp582 - tmp523*tmp583 - tmp524*tmp584 + tmp525*tmp585 - tmp526*tmp586 - tmp527*tmp587 + tmp528*tmp588 + tmp529*tmp589 + tmp530*tmp590;
      const real_t tmp597 = 0.088655267825347786*tmp64;
      const real_t tmp598 = 0.00065117047591080519*tmp92;
      const real_t tmp599 = 0.0021295383964730196*tmp223;
      const real_t tmp600 = 0.021242252561440141*tmp251;
      const real_t tmp601 = 0.034491728100715977*tmp120;
      const real_t tmp602 = 0.031870261029146217*tmp279;
      const real_t tmp603 = 0.039191877909708787*tmp144;
      const real_t tmp604 = 0.013264405944568717*tmp307;
      const real_t tmp605 = 0.023150322729324171*tmp168;
      const real_t tmp606 = 0.054105733577658674*tmp196;
      const real_t tmp607 = 0.011829781572832234*tmp64;
      const real_t tmp608 = tmp385*tmp607;
      const real_t tmp609 = 0.0061414854617707626*tmp92;
      const real_t tmp610 = tmp389*tmp609;
      const real_t tmp611 = 0.0043612323249822204*tmp223;
      const real_t tmp612 = tmp393*tmp611;
      const real_t tmp613 = 0.012248248047610821*tmp251;
      const real_t tmp614 = tmp397*tmp613;
      const real_t tmp615 = 0.017219568446249611*tmp120;
      const real_t tmp616 = tmp401*tmp615;
      const real_t tmp617 = 0.021490090227737114*tmp279;
      const real_t tmp618 = tmp405*tmp617;
      const real_t tmp619 = 0.0084625239161731543*tmp144;
      const real_t tmp620 = tmp409*tmp619;
      const real_t tmp621 = 0.0088251866742250357*tmp307;
      const real_t tmp622 = tmp413*tmp621;
      const real_t tmp623 = 0.0077188851041817101*tmp168;
      const real_t tmp624 = tmp417*tmp623;
      const real_t tmp625 = 0.006659242794062166*tmp335;
      const real_t tmp626 = tmp421*tmp625;
      const real_t tmp627 = 0.0061548665412862651*tmp196;
      const real_t tmp628 = tmp425*tmp627;
      const real_t tmp629 = -tmp430*tmp608 - tmp433*tmp610 - tmp436*tmp612 - tmp439*tmp614 - tmp442*tmp616 - tmp445*tmp618 - tmp448*tmp620 - tmp451*tmp622 - tmp454*tmp624 - tmp457*tmp626 - tmp460*tmp628;
      const real_t tmp630 = -tmp464*tmp608 - tmp467*tmp610 - tmp470*tmp612 - tmp473*tmp614 - tmp476*tmp616 - tmp479*tmp618 - tmp482*tmp620 - tmp485*tmp622 - tmp488*tmp624 - tmp491*tmp626 - tmp494*tmp628;
      const real_t tmp631 = -tmp496*tmp608 - tmp497*tmp610 - tmp498*tmp612 - tmp499*tmp614 - tmp500*tmp616 - tmp501*tmp618 - tmp502*tmp620 - tmp503*tmp622 - tmp504*tmp624 - tmp505*tmp626 - tmp506*tmp628;
      const real_t tmp632 = -tmp508*tmp608 - tmp509*tmp610 - tmp510*tmp612 - tmp511*tmp614 - tmp512*tmp616 - tmp513*tmp618 - tmp514*tmp620 - tmp515*tmp622 - tmp516*tmp624 - tmp517*tmp626 - tmp518*tmp628;
      const real_t tmp633 = -tmp520*tmp608 - tmp521*tmp610 - tmp522*tmp612 - tmp523*tmp614 - tmp524*tmp616 - tmp525*tmp618 - tmp526*tmp620 - tmp527*tmp622 - tmp528*tmp624 - tmp529*tmp626 - tmp530*tmp628;
      const real_t tmp634 = 0.055643730515181525*tmp92;
      const real_t tmp635 = 0.019805451113005423*tmp251;
      const real_t tmp636 = 0.051586562503901277*tmp120;
      const real_t tmp637 = 0.01985095532947561*tmp279;
      const real_t tmp638 = 0.014762122860486882*tmp144;
      const real_t tmp639 = 0.025094388797298327*tmp168;
      const real_t tmp640 = 0.018729439144681871*tmp335;
      const real_t tmp641 = tmp430*tmp607;
      const real_t tmp642 = tmp433*tmp609;
      const real_t tmp643 = tmp436*tmp611;
      const real_t tmp644 = tmp439*tmp613;
      const real_t tmp645 = tmp442*tmp615;
      const real_t tmp646 = tmp445*tmp617;
      const real_t tmp647 = tmp448*tmp619;
      const real_t tmp648 = tmp451*tmp621;
      const real_t tmp649 = tmp454*tmp623;
      const real_t tmp650 = tmp457*tmp625;
      const real_t tmp651 = tmp460*tmp627;
      const real_t tmp652 = -tmp464*tmp641 - tmp467*tmp642 - tmp470*tmp643 - tmp473*tmp644 - tmp476*tmp645 - tmp479*tmp646 - tmp482*tmp647 - tmp485*tmp648 - tmp488*tmp649 - tmp491*tmp650 - tmp494*tmp651;
      const real_t tmp653 = -tmp496*tmp641 - tmp497*tmp642 - tmp498*tmp643 - tmp499*tmp644 - tmp500*tmp645 - tmp501*tmp646 - tmp502*tmp647 - tmp503*tmp648 - tmp504*tmp649 - tmp505*tmp650 - tmp506*tmp651;
      const real_t tmp654 = -tmp508*tmp641 - tmp509*tmp642 - tmp510*tmp643 - tmp511*tmp644 - tmp512*tmp645 - tmp513*tmp646 - tmp514*tmp647 - tmp515*tmp648 - tmp516*tmp649 - tmp517*tmp650 - tmp518*tmp651;
      const real_t tmp655 = -tmp520*tmp641 - tmp521*tmp642 - tmp522*tmp643 - tmp523*tmp644 - tmp524*tmp645 - tmp525*tmp646 - tmp526*tmp647 - tmp527*tmp648 - tmp528*tmp649 - tmp529*tmp650 - tmp530*tmp651;
      const real_t tmp656 = 0.0021510233048590414*tmp64;
      const real_t tmp657 = tmp464*tmp607;
      const real_t tmp658 = tmp467*tmp609;
      const real_t tmp659 = tmp470*tmp611;
      const real_t tmp660 = tmp473*tmp613;
      const real_t tmp661 = tmp476*tmp615;
      const real_t tmp662 = tmp479*tmp617;
      const real_t tmp663 = tmp482*tmp619;
      const real_t tmp664 = tmp485*tmp621;
      const real_t tmp665 = tmp488*tmp623;
      const real_t tmp666 = tmp491*tmp625;
      const real_t tmp667 = tmp494*tmp627;
      const real_t tmp668 = -tmp496*tmp657 - tmp497*tmp658 - tmp498*tmp659 - tmp499*tmp660 - tmp500*tmp661 - tmp501*tmp662 - tmp502*tmp663 - tmp503*tmp664 - tmp504*tmp665 - tmp505*tmp666 - tmp506*tmp667;
      const real_t tmp669 = -tmp508*tmp657 - tmp509*tmp658 - tmp510*tmp659 - tmp511*tmp660 - tmp512*tmp661 - tmp513*tmp662 - tmp514*tmp663 - tmp515*tmp664 - tmp516*tmp665 - tmp517*tmp666 - tmp518*tmp667;
      const real_t tmp670 = -tmp520*tmp657 - tmp521*tmp658 - tmp522*tmp659 - tmp523*tmp660 - tmp524*tmp661 - tmp525*tmp662 - tmp526*tmp663 - tmp527*tmp664 - tmp528*tmp665 - tmp529*tmp666 - tmp530*tmp667;
      const real_t tmp671 = tmp496*tmp607;
      const real_t tmp672 = tmp497*tmp609;
      const real_t tmp673 = tmp498*tmp611;
      const real_t tmp674 = tmp499*tmp613;
      const real_t tmp675 = tmp500*tmp615;
      const real_t tmp676 = tmp501*tmp617;
      const real_t tmp677 = tmp502*tmp619;
      const real_t tmp678 = tmp503*tmp621;
      const real_t tmp679 = tmp504*tmp623;
      const real_t tmp680 = tmp505*tmp625;
      const real_t tmp681 = tmp506*tmp627;
      const real_t tmp682 = -tmp508*tmp671 - tmp509*tmp672 - tmp510*tmp673 - tmp511*tmp674 - tmp512*tmp675 - tmp513*tmp676 - tmp514*tmp677 - tmp515*tmp678 - tmp516*tmp679 - tmp517*tmp680 - tmp518*tmp681;
      const real_t tmp683 = -tmp520*tmp671 - tmp521*tmp672 - tmp522*tmp673 - tmp523*tmp674 - tmp524*tmp675 - tmp525*tmp676 - tmp526*tmp677 - tmp527*tmp678 - tmp528*tmp679 - tmp529*tmp680 - tmp530*tmp681;
      const real_t tmp684 = -tmp508*tmp520*tmp607 - tmp509*tmp521*tmp609 - tmp510*tmp522*tmp611 - tmp511*tmp523*tmp613 - tmp512*tmp524*tmp615 - tmp513*tmp525*tmp617 - tmp514*tmp526*tmp619 - tmp515*tmp527*tmp621 - tmp516*tmp528*tmp623 - tmp517*tmp529*tmp625 - tmp518*tmp530*tmp627;
      elMat(0,0) = -0.0054292249839739343*tmp120*((tmp110 + tmp119)*(tmp110 + tmp119)) - 0.0083014263265381374*tmp144*((tmp134 + tmp143)*(tmp134 + tmp143)) - 0.0046087252711240149*tmp168*((tmp158 + tmp167)*(tmp158 + tmp167)) - 0.00086342639172544801*tmp196*((tmp186 + tmp195)*(tmp186 + tmp195)) - 0.0189596024771399*tmp223*((-tmp214 - tmp218 - tmp222)*(-tmp214 - tmp218 - tmp222)) - 0.0010527630257759059*tmp251*((-tmp241 - tmp250)*(-tmp241 - tmp250)) - 0.0021173907985490219*tmp279*((-tmp269 - tmp278)*(-tmp269 - tmp278)) - 0.013831107702793295*tmp307*((-tmp297 - tmp306)*(-tmp297 - tmp306)) - 0.0056173340848133255*tmp335*((-tmp325 - tmp334)*(-tmp325 - tmp334)) - 0.0036149972514435908*tmp64*((tmp35 + tmp50)*(tmp35 + tmp50)) - 0.0022706683527901044*tmp92*((tmp82 + tmp91)*(tmp82 + tmp91));
      elMat(0,1) = tmp358;
      elMat(0,2) = tmp370;
      elMat(0,3) = tmp382;
      elMat(0,4) = tmp427;
      elMat(0,5) = tmp461;
      elMat(0,6) = tmp495;
      elMat(0,7) = tmp507;
      elMat(0,8) = tmp519;
      elMat(0,9) = tmp531;
      elMat(1,0) = tmp358;
      elMat(1,1) = -0.0091974623207422349*(tmp114*tmp114)*tmp120 - 0.0019689404753353082*(tmp138*tmp138)*tmp144 - 0.0049779938500050438*(tmp162*tmp162)*tmp168 - 0.0032898819246143778*(tmp190*tmp190)*tmp196 - 0.0030629268005785541*(tmp214*tmp214)*tmp223 - 0.0095222010320695129*(tmp245*tmp245)*tmp251 - 3.2507885820395218e-5*(tmp273*tmp273)*tmp279 - 0.0023300554370080033*(tmp301*tmp301)*tmp307 - 0.0030527125027828036*(tmp325*tmp325)*tmp335 - 0.0044189289060270545*(tmp42*tmp42)*tmp64 - 0.024813055531683337*(tmp86*tmp86)*tmp92;
      elMat(1,2) = tmp543;
      elMat(1,3) = tmp544;
      elMat(1,4) = tmp556;
      elMat(1,5) = tmp557;
      elMat(1,6) = tmp558;
      elMat(1,7) = tmp559;
      elMat(1,8) = tmp560;
      elMat(1,9) = tmp561;
      elMat(2,0) = tmp370;
      elMat(2,1) = tmp543;
      elMat(2,2) = -0.0058853846381537785*(tmp118*tmp118)*tmp120 - 0.011231211184168578*(tmp142*tmp142)*tmp144 - 0.0041338618456657665*(tmp166*tmp166)*tmp168 - 0.023763281352280435*(tmp186*tmp186)*tmp196 - 0.00039571971527360629*(tmp218*tmp218)*tmp223 - 0.001230284958034916*(tmp249*tmp249)*tmp251 - 0.0010193621528212606*(tmp269*tmp269)*tmp279 - 0.0082018055230425203*(tmp305*tmp305)*tmp307 - 0.0041207040742425758*(tmp329*tmp329)*tmp335 - 0.0038919722684040777*(tmp49*tmp49)*tmp64 - 0.0027930789545792005*(tmp90*tmp90)*tmp92;
      elMat(2,3) = tmp562;
      elMat(2,4) = tmp574;
      elMat(2,5) = tmp575;
      elMat(2,6) = tmp576;
      elMat(2,7) = tmp577;
      elMat(2,8) = tmp578;
      elMat(2,9) = tmp579;
      elMat(3,0) = tmp382;
      elMat(3,1) = tmp544;
      elMat(3,2) = tmp562;
      elMat(3,3) = -0.0029698286634596638*(tmp110*tmp110)*tmp120 - 0.00087069251703458632*(tmp134*tmp134)*tmp144 - 0.0044839659455667077*(tmp158*tmp158)*tmp168 - 0.0045443540305762555*(tmp194*tmp194)*tmp196 - 0.0039009333299794896*(tmp222*tmp222)*tmp223 - 0.00090360587491835199*(tmp241*tmp241)*tmp251 - 0.0052187617306746906*(tmp277*tmp277)*tmp279 - 0.00045065931943546946*(tmp297*tmp297)*tmp307 - 0.0043569931591950859*(tmp333*tmp333)*tmp335 - 0.035715536395385078*(tmp35*tmp35)*tmp64 - 0.0032513357004413015*(tmp82*tmp82)*tmp92;
      elMat(3,4) = tmp591;
      elMat(3,5) = tmp592;
      elMat(3,6) = tmp593;
      elMat(3,7) = tmp594;
      elMat(3,8) = tmp595;
      elMat(3,9) = tmp596;
      elMat(4,0) = tmp427;
      elMat(4,1) = tmp556;
      elMat(4,2) = tmp574;
      elMat(4,3) = tmp591;
      elMat(4,4) = -0.00030315940021845202*tmp335*((0.89576912675729947*tmp326 + 0.89576912675729947*tmp327 + 0.89576912675729947*tmp328 + tmp333)*(0.89576912675729947*tmp326 + 0.89576912675729947*tmp327 + 0.89576912675729947*tmp328 + tmp333)) - tmp597*((0.15576514538332015*tmp26 + 0.15576514538332015*tmp30 + 0.15576514538332015*tmp34 + tmp49)*(0.15576514538332015*tmp26 + 0.15576514538332015*tmp30 + 0.15576514538332015*tmp34 + tmp49)) - tmp598*((tmp82 + 0.83655106195419338*tmp87 + 0.83655106195419338*tmp88 + 0.83655106195419338*tmp89)*(tmp82 + 0.83655106195419338*tmp87 + 0.83655106195419338*tmp88 + 0.83655106195419338*tmp89)) - tmp599*((0.077625432604466651*tmp215 + 0.077625432604466651*tmp216 + 0.077625432604466651*tmp217 + tmp222)*(0.077625432604466651*tmp215 + 0.077625432604466651*tmp216 + 0.077625432604466651*tmp217 + tmp222)) - tmp600*((tmp241 + 0.96558850141216623*tmp246 + 0.96558850141216623*tmp247 + 0.96558850141216623*tmp248)*(tmp241 + 0.96558850141216623*tmp246 + 0.96558850141216623*tmp247 + 0.96558850141216623*tmp248)) - tmp601*((0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + 0.29349150904575255*tmp109 + tmp118)*(0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + 0.29349150904575255*tmp109 + tmp118)) - tmp602*((0.41649660468385474*tmp262 + 0.41649660468385474*tmp265 + 0.41649660468385474*tmp268 + tmp277)*(0.41649660468385474*tmp262 + 0.41649660468385474*tmp265 + 0.41649660468385474*tmp268 + tmp277)) - tmp603*((tmp134 + 0.61372861261706069*tmp139 + 0.61372861261706069*tmp140 + 0.61372861261706069*tmp141)*(tmp134 + 0.61372861261706069*tmp139 + 0.61372861261706069*tmp140 + 0.61372861261706069*tmp141)) - tmp604*((0.029335844854256651*tmp290 + 0.029335844854256651*tmp293 + 0.029335844854256651*tmp296 + tmp305)*(0.029335844854256651*tmp290 + 0.029335844854256651*tmp293 + 0.029335844854256651*tmp296 + tmp305)) - tmp605*((tmp158 + 0.13732795232423314*tmp163 + 0.13732795232423314*tmp164 + 0.13732795232423314*tmp165)*(tmp158 + 0.13732795232423314*tmp163 + 0.13732795232423314*tmp164 + 0.13732795232423314*tmp165)) - tmp606*((0.047467024860419059*tmp179 + 0.047467024860419059*tmp182 + 0.047467024860419059*tmp185 + tmp194)*(0.047467024860419059*tmp179 + 0.047467024860419059*tmp182 + 0.047467024860419059*tmp185 + tmp194));
      elMat(4,5) = tmp629;
      elMat(4,6) = tmp630;
      elMat(4,7) = tmp631;
      elMat(4,8) = tmp632;
      elMat(4,9) = tmp633;
      elMat(5,0) = tmp461;
      elMat(5,1) = tmp557;
      elMat(5,2) = tmp575;
      elMat(5,3) = tmp592;
      elMat(5,4) = tmp629;
      elMat(5,5) = -0.00044501865160255012*tmp196*((0.52338895065171431*tmp187 + 0.52338895065171431*tmp188 + 0.52338895065171431*tmp189 + tmp194)*(0.52338895065171431*tmp187 + 0.52338895065171431*tmp188 + 0.52338895065171431*tmp189 + tmp194)) - 0.00011440252995854856*tmp223*((0.3349106488351834*tmp207 + 0.3349106488351834*tmp210 + 0.3349106488351834*tmp213 + tmp222)*(0.3349106488351834*tmp207 + 0.3349106488351834*tmp210 + 0.3349106488351834*tmp213 + tmp222)) - tmp597*((0.14203098464381267*tmp26 + 0.14203098464381267*tmp30 + 0.14203098464381267*tmp34 + tmp42)*(0.14203098464381267*tmp26 + 0.14203098464381267*tmp30 + 0.14203098464381267*tmp34 + tmp42)) - tmp604*((0.39655587359688027*tmp290 + 0.39655587359688027*tmp293 + 0.39655587359688027*tmp296 + tmp301)*(0.39655587359688027*tmp290 + 0.39655587359688027*tmp293 + 0.39655587359688027*tmp296 + tmp301)) - tmp634*((tmp82 + 0.090496479845553021*tmp83 + 0.090496479845553021*tmp84 + 0.090496479845553021*tmp85)*(tmp82 + 0.090496479845553021*tmp83 + 0.090496479845553021*tmp84 + 0.090496479845553021*tmp85)) - tmp635*((0.09301404232979088*tmp234 + 0.09301404232979088*tmp237 + 0.09301404232979088*tmp240 + tmp245)*(0.09301404232979088*tmp234 + 0.09301404232979088*tmp237 + 0.09301404232979088*tmp240 + tmp245)) - tmp636*((tmp110 + 0.81769093328581299*tmp111 + 0.81769093328581299*tmp112 + 0.81769093328581299*tmp113)*(tmp110 + 0.81769093328581299*tmp111 + 0.81769093328581299*tmp112 + 0.81769093328581299*tmp113)) - tmp637*((0.52773217055160193*tmp270 + 0.52773217055160193*tmp271 + 0.52773217055160193*tmp272 + tmp277)*(0.52773217055160193*tmp270 + 0.52773217055160193*tmp271 + 0.52773217055160193*tmp272 + tmp277)) - tmp638*((0.3919295290646535*tmp129 + 0.3919295290646535*tmp131 + 0.3919295290646535*tmp133 + tmp138)*(0.3919295290646535*tmp129 + 0.3919295290646535*tmp131 + 0.3919295290646535*tmp133 + tmp138)) - tmp639*((tmp158 + 0.13190132495165721*tmp159 + 0.13190132495165721*tmp160 + 0.13190132495165721*tmp161)*(tmp158 + 0.13190132495165721*tmp159 + 0.13190132495165721*tmp160 + 0.13190132495165721*tmp161)) - tmp640*((0.11396440395356359*tmp318 + 0.11396440395356359*tmp321 + 0.11396440395356359*tmp324 + tmp333)*(0.11396440395356359*tmp318 + 0.11396440395356359*tmp321 + 0.11396440395356359*tmp324 + tmp333));
      elMat(5,6) = tmp652;
      elMat(5,7) = tmp653;
      elMat(5,8) = tmp654;
      elMat(5,9) = tmp655;
      elMat(6,0) = tmp495;
      elMat(6,1) = tmp558;
      elMat(6,2) = tmp576;
      elMat(6,3) = tmp593;
      elMat(6,4) = tmp630;
      elMat(6,5) = tmp652;
      elMat(6,6) = -0.0020859148610146137*tmp307*((0.073976573813348864*tmp298 + 0.073976573813348864*tmp299 + 0.073976573813348864*tmp300 + tmp305)*(0.073976573813348864*tmp298 + 0.073976573813348864*tmp299 + 0.073976573813348864*tmp300 + tmp305)) - tmp599*((tmp214 + 0.23177952947882455*tmp215 + 0.23177952947882455*tmp216 + 0.23177952947882455*tmp217)*(tmp214 + 0.23177952947882455*tmp215 + 0.23177952947882455*tmp216 + 0.23177952947882455*tmp217)) - tmp600*((tmp245 + 0.089813289743510563*tmp246 + 0.089813289743510563*tmp247 + 0.089813289743510563*tmp248)*(tmp245 + 0.089813289743510563*tmp246 + 0.089813289743510563*tmp247 + 0.089813289743510563*tmp248)) - tmp602*((0.78921966089071216*tmp262 + 0.78921966089071216*tmp265 + 0.78921966089071216*tmp268 + tmp273)*(0.78921966089071216*tmp262 + 0.78921966089071216*tmp265 + 0.78921966089071216*tmp268 + tmp273)) - tmp603*((tmp138 + 0.24053836611650775*tmp139 + 0.24053836611650775*tmp140 + 0.24053836611650775*tmp141)*(tmp138 + 0.24053836611650775*tmp139 + 0.24053836611650775*tmp140 + 0.24053836611650775*tmp141)) - tmp606*((0.090691683118862151*tmp179 + 0.090691683118862151*tmp182 + 0.090691683118862151*tmp185 + tmp190)*(0.090691683118862151*tmp179 + 0.090691683118862151*tmp182 + 0.090691683118862151*tmp185 + tmp190)) - tmp634*((0.10817807060593786*tmp83 + 0.10817807060593786*tmp84 + 0.10817807060593786*tmp85 + tmp90)*(0.10817807060593786*tmp83 + 0.10817807060593786*tmp84 + 0.10817807060593786*tmp85 + tmp90)) - tmp636*((0.23998534594308307*tmp111 + 0.23998534594308307*tmp112 + 0.23998534594308307*tmp113 + tmp118)*(0.23998534594308307*tmp111 + 0.23998534594308307*tmp112 + 0.23998534594308307*tmp113 + tmp118)) - tmp639*((0.96048417470200387*tmp159 + 0.96048417470200387*tmp160 + 0.96048417470200387*tmp161 + tmp166)*(0.96048417470200387*tmp159 + 0.96048417470200387*tmp160 + 0.96048417470200387*tmp161 + tmp166)) - tmp640*((0.12722519737436899*tmp318 + 0.12722519737436899*tmp321 + 0.12722519737436899*tmp324 + tmp329)*(0.12722519737436899*tmp318 + 0.12722519737436899*tmp321 + 0.12722519737436899*tmp324 + tmp329)) - tmp656*((tmp42 + 0.91182776669511478*tmp44 + 0.91182776669511478*tmp46 + 0.91182776669511478*tmp48)*(tmp42 + 0.91182776669511478*tmp44 + 0.91182776669511478*tmp46 + 0.91182776669511478*tmp48));
      elMat(6,7) = tmp668;
      elMat(6,8) = tmp669;
      elMat(6,9) = tmp670;
      elMat(7,0) = tmp507;
      elMat(7,1) = tmp559;
      elMat(7,2) = tmp577;
      elMat(7,3) = tmp594;
      elMat(7,4) = tmp631;
      elMat(7,5) = tmp653;
      elMat(7,6) = tmp668;
      elMat(7,7) = -0.0004365911605749823*tmp168*((-0.044277648735374389*tmp153 - 0.044277648735374389*tmp155 - 0.044277648735374389*tmp157 - tmp167)*(-0.044277648735374389*tmp153 - 0.044277648735374389*tmp155 - 0.044277648735374389*tmp157 - tmp167)) - 0.0014461064309977984*tmp196*((-0.29034444942318749*tmp179 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp185 - 0.29034444942318749*tmp187 - 0.29034444942318749*tmp188 - 0.29034444942318749*tmp189 + tmp191 + tmp192 + tmp193)*(-0.29034444942318749*tmp179 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp185 - 0.29034444942318749*tmp187 - 0.29034444942318749*tmp188 - 0.29034444942318749*tmp189 + tmp191 + tmp192 + tmp193)) - 0.040060552693882812*tmp223*((-0.017897332337706334*tmp207 - 0.017897332337706334*tmp210 - 0.017897332337706334*tmp213 - 0.017897332337706334*tmp215 - 0.017897332337706334*tmp216 - 0.017897332337706334*tmp217 + tmp219 + tmp220 + tmp221)*(-0.017897332337706334*tmp207 - 0.017897332337706334*tmp210 - 0.017897332337706334*tmp213 - 0.017897332337706334*tmp215 - 0.017897332337706334*tmp216 - 0.017897332337706334*tmp217 + tmp219 + tmp220 + tmp221)) - 0.013984508135943425*tmp279*((-0.62875387936960425*tmp262 - 0.62875387936960425*tmp265 - 0.62875387936960425*tmp268 - 0.62875387936960425*tmp270 - 0.62875387936960425*tmp271 - 0.62875387936960425*tmp272 + tmp274 + tmp275 + tmp276)*(-0.62875387936960425*tmp262 - 0.62875387936960425*tmp265 - 0.62875387936960425*tmp268 - 0.62875387936960425*tmp270 - 0.62875387936960425*tmp271 - 0.62875387936960425*tmp272 + tmp274 + tmp275 + tmp276)) - 0.019868706695079622*tmp335*((-0.11064882600377972*tmp318 - 0.11064882600377972*tmp321 - 0.11064882600377972*tmp324 - 0.11064882600377972*tmp326 - 0.11064882600377972*tmp327 - 0.11064882600377972*tmp328 + tmp330 + tmp331 + tmp332)*(-0.11064882600377972*tmp318 - 0.11064882600377972*tmp321 - 0.11064882600377972*tmp324 - 0.11064882600377972*tmp326 - 0.11064882600377972*tmp327 - 0.11064882600377972*tmp328 + tmp330 + tmp331 + tmp332)) - tmp597*((-0.83664182771558016*tmp26 - 0.83664182771558016*tmp30 - 0.83664182771558016*tmp34 - tmp50)*(-0.83664182771558016*tmp26 - 0.83664182771558016*tmp30 - 0.83664182771558016*tmp34 - tmp50)) - tmp601*((-0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - 0.69017748642819765*tmp109 - tmp119)*(-0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - 0.69017748642819765*tmp109 - tmp119)) - tmp604*((0.83681501561389293*tmp18*tmp27*tmp287*tmp291 + 0.83681501561389293*tmp18*tmp282*tmp287*tmp6 + 0.83681501561389293*tmp18*tmp287*tmp294*tmp31 - tmp306)*(0.83681501561389293*tmp18*tmp27*tmp287*tmp291 + 0.83681501561389293*tmp18*tmp282*tmp287*tmp6 + 0.83681501561389293*tmp18*tmp287*tmp294*tmp31 - tmp306)) - tmp635*((0.01695616312213118*tmp18*tmp226*tmp231*tmp6 + 0.01695616312213118*tmp18*tmp231*tmp235*tmp27 + 0.01695616312213118*tmp18*tmp231*tmp238*tmp31 - tmp250)*(0.01695616312213118*tmp18*tmp226*tmp231*tmp6 + 0.01695616312213118*tmp18*tmp231*tmp235*tmp27 + 0.01695616312213118*tmp18*tmp231*tmp238*tmp31 - tmp250)) - tmp638*((-0.99275870119180742*tmp129 - 0.99275870119180742*tmp131 - 0.99275870119180742*tmp133 - tmp143)*(-0.99275870119180742*tmp129 - 0.99275870119180742*tmp131 - 0.99275870119180742*tmp133 - tmp143)) - 0.00045570061125237317*tmp92*((0.43888559173612551*tmp18*tmp27*tmp72*tmp76 + 0.43888559173612551*tmp18*tmp31*tmp72*tmp79 + 0.43888559173612551*tmp18*tmp6*tmp67*tmp72 - tmp91)*(0.43888559173612551*tmp18*tmp27*tmp72*tmp76 + 0.43888559173612551*tmp18*tmp31*tmp72*tmp79 + 0.43888559173612551*tmp18*tmp6*tmp67*tmp72 - tmp91));
      elMat(7,8) = tmp682;
      elMat(7,9) = tmp683;
      elMat(8,0) = tmp519;
      elMat(8,1) = tmp560;
      elMat(8,2) = tmp578;
      elMat(8,3) = tmp595;
      elMat(8,4) = tmp632;
      elMat(8,5) = tmp654;
      elMat(8,6) = tmp669;
      elMat(8,7) = tmp682;
      elMat(8,8) = -0.0029710231541394041*tmp120*((0.055643873920399871*tmp100*tmp104*tmp18*tmp45 + 0.055643873920399871*tmp100*tmp107*tmp18*tmp47 + 0.055643873920399871*tmp100*tmp18*tmp43*tmp95 - tmp110 - tmp114)*(0.055643873920399871*tmp100*tmp104*tmp18*tmp45 + 0.055643873920399871*tmp100*tmp107*tmp18*tmp47 + 0.055643873920399871*tmp100*tmp18*tmp43*tmp95 - tmp110 - tmp114)) - 0.024833529378694281*tmp223*((-0.29283535826529156*tmp207 - 0.29283535826529156*tmp210 - 0.29283535826529156*tmp213 + tmp215 + tmp216 + tmp217 - 0.29283535826529156*tmp219 - 0.29283535826529156*tmp220 - 0.29283535826529156*tmp221)*(-0.29283535826529156*tmp207 - 0.29283535826529156*tmp210 - 0.29283535826529156*tmp213 + tmp215 + tmp216 + tmp217 - 0.29283535826529156*tmp219 - 0.29283535826529156*tmp220 - 0.29283535826529156*tmp221)) - 0.043334561570183817*tmp307*((-0.016230253343349765*tmp290 - 0.016230253343349765*tmp293 - 0.016230253343349765*tmp296 - 0.016230253343349765*tmp298 - 0.016230253343349765*tmp299 - 0.016230253343349765*tmp300 + tmp302 + tmp303 + tmp304)*(-0.016230253343349765*tmp290 - 0.016230253343349765*tmp293 - 0.016230253343349765*tmp296 - 0.016230253343349765*tmp298 - 0.016230253343349765*tmp299 - 0.016230253343349765*tmp300 + tmp302 + tmp303 + tmp304)) - 0.019360381210448731*tmp335*((-0.12513493356403252*tmp318 - 0.12513493356403252*tmp321 - 0.12513493356403252*tmp324 + tmp326 + tmp327 + tmp328 - 0.12513493356403252*tmp330 - 0.12513493356403252*tmp331 - 0.12513493356403252*tmp332)*(-0.12513493356403252*tmp318 - 0.12513493356403252*tmp321 - 0.12513493356403252*tmp324 + tmp326 + tmp327 + tmp328 - 0.12513493356403252*tmp330 - 0.12513493356403252*tmp331 - 0.12513493356403252*tmp332)) - tmp598*((0.20370126979744377*tmp18*tmp43*tmp67*tmp72 + 0.20370126979744377*tmp18*tmp45*tmp72*tmp76 + 0.20370126979744377*tmp18*tmp47*tmp72*tmp79 - tmp82 - tmp86)*(0.20370126979744377*tmp18*tmp43*tmp67*tmp72 + 0.20370126979744377*tmp18*tmp45*tmp72*tmp76 + 0.20370126979744377*tmp18*tmp47*tmp72*tmp79 - tmp82 - tmp86)) - tmp600*((-tmp241 - tmp245 - 0.018038822449035097*tmp246 - 0.018038822449035097*tmp247 - 0.018038822449035097*tmp248)*(-tmp241 - tmp245 - 0.018038822449035097*tmp246 - 0.018038822449035097*tmp247 - 0.018038822449035097*tmp248)) - tmp602*((0.078912564807136973*tmp18*tmp254*tmp259*tmp43 + 0.078912564807136973*tmp18*tmp259*tmp263*tmp45 + 0.078912564807136973*tmp18*tmp259*tmp266*tmp47 - tmp278)*(0.078912564807136973*tmp18*tmp254*tmp259*tmp43 + 0.078912564807136973*tmp18*tmp259*tmp263*tmp45 + 0.078912564807136973*tmp18*tmp259*tmp266*tmp47 - tmp278)) - tmp603*((-tmp134 - tmp138 - 0.9955558077289024*tmp139 - 0.9955558077289024*tmp140 - 0.9955558077289024*tmp141)*(-tmp134 - tmp138 - 0.9955558077289024*tmp139 - 0.9955558077289024*tmp140 - 0.9955558077289024*tmp141)) - tmp605*((-tmp158 - tmp162 - 0.86875260651032749*tmp163 - 0.86875260651032749*tmp164 - 0.86875260651032749*tmp165)*(-tmp158 - tmp162 - 0.86875260651032749*tmp163 - 0.86875260651032749*tmp164 - 0.86875260651032749*tmp165)) - tmp606*((-0.78904775971796914*tmp179 - 0.78904775971796914*tmp182 - 0.78904775971796914*tmp185 - tmp195)*(-0.78904775971796914*tmp179 - 0.78904775971796914*tmp182 - 0.78904775971796914*tmp185 - tmp195)) - tmp656*((0.04874663636986367*tmp18*tmp23*tmp28*tmp45 + 0.04874663636986367*tmp18*tmp23*tmp32*tmp47 + 0.04874663636986367*tmp18*tmp23*tmp43*tmp9 - tmp35 - tmp42)*(0.04874663636986367*tmp18*tmp23*tmp28*tmp45 + 0.04874663636986367*tmp18*tmp23*tmp32*tmp47 + 0.04874663636986367*tmp18*tmp23*tmp43*tmp9 - tmp35 - tmp42));
      elMat(8,9) = tmp684;
      elMat(9,0) = tmp531;
      elMat(9,1) = tmp561;
      elMat(9,2) = tmp579;
      elMat(9,3) = tmp596;
      elMat(9,4) = tmp633;
      elMat(9,5) = tmp655;
      elMat(9,6) = tmp670;
      elMat(9,7) = tmp683;
      elMat(9,8) = tmp684;
      elMat(9,9) = -0.002267591324869961*tmp144*((-tmp134 - 0.98152397747249553*tmp135 - 0.98152397747249553*tmp136 - 0.98152397747249553*tmp137 - tmp142)*(-tmp134 - 0.98152397747249553*tmp135 - 0.98152397747249553*tmp136 - 0.98152397747249553*tmp137 - tmp142)) - 0.00078250966950696281*tmp196*((-0.75412658362967966*tmp179 - 0.75412658362967966*tmp182 - 0.75412658362967966*tmp185 + tmp187 + tmp188 + tmp189 - 0.75412658362967966*tmp191 - 0.75412658362967966*tmp192 - 0.75412658362967966*tmp193)*(-0.75412658362967966*tmp179 - 0.75412658362967966*tmp182 - 0.75412658362967966*tmp185 + tmp187 + tmp188 + tmp189 - 0.75412658362967966*tmp191 - 0.75412658362967966*tmp192 - 0.75412658362967966*tmp193)) - 0.037263510158954058*tmp223*((tmp207 + tmp210 + tmp213 - 0.055408441312198596*tmp215 - 0.055408441312198596*tmp216 - 0.055408441312198596*tmp217 - 0.055408441312198596*tmp219 - 0.055408441312198596*tmp220 - 0.055408441312198596*tmp221)*(tmp207 + tmp210 + tmp213 - 0.055408441312198596*tmp215 - 0.055408441312198596*tmp216 - 0.055408441312198596*tmp217 - 0.055408441312198596*tmp219 - 0.055408441312198596*tmp220 - 0.055408441312198596*tmp221)) - 0.016907300489390396*tmp251*((-0.10067085398165995*tmp234 - 0.10067085398165995*tmp237 - 0.10067085398165995*tmp240 + tmp242 + tmp243 + tmp244 - 0.10067085398165995*tmp246 - 0.10067085398165995*tmp247 - 0.10067085398165995*tmp248)*(-0.10067085398165995*tmp234 - 0.10067085398165995*tmp237 - 0.10067085398165995*tmp240 + tmp242 + tmp243 + tmp244 - 0.10067085398165995*tmp246 - 0.10067085398165995*tmp247 - 0.10067085398165995*tmp248)) - 0.027514972668366906*tmp307*((-0.27533647385256177*tmp290 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp296 + tmp298 + tmp299 + tmp300 - 0.27533647385256177*tmp302 - 0.27533647385256177*tmp303 - 0.27533647385256177*tmp304)*(-0.27533647385256177*tmp290 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp296 + tmp298 + tmp299 + tmp300 - 0.27533647385256177*tmp302 - 0.27533647385256177*tmp303 - 0.27533647385256177*tmp304)) - tmp634*((-tmp82 - 0.86978591904739511*tmp83 - 0.86978591904739511*tmp84 - 0.86978591904739511*tmp85 - tmp90)*(-tmp82 - 0.86978591904739511*tmp83 - 0.86978591904739511*tmp84 - 0.86978591904739511*tmp85 - tmp90)) - tmp636*((-tmp110 - 0.74666093972451641*tmp111 - 0.74666093972451641*tmp112 - 0.74666093972451641*tmp113 - tmp118)*(-tmp110 - 0.74666093972451641*tmp111 - 0.74666093972451641*tmp112 - 0.74666093972451641*tmp113 - tmp118)) - tmp637*((0.36706245202948667*tmp18*tmp254*tmp259*tmp36 + 0.36706245202948667*tmp18*tmp259*tmp263*tmp38 + 0.36706245202948667*tmp18*tmp259*tmp266*tmp40 - tmp269 - tmp277)*(0.36706245202948667*tmp18*tmp254*tmp259*tmp36 + 0.36706245202948667*tmp18*tmp259*tmp263*tmp38 + 0.36706245202948667*tmp18*tmp259*tmp266*tmp40 - tmp269 - tmp277)) - tmp639*((-tmp158 - 0.87393895558228274*tmp159 - 0.87393895558228274*tmp160 - 0.87393895558228274*tmp161 - tmp166)*(-tmp158 - 0.87393895558228274*tmp159 - 0.87393895558228274*tmp160 - 0.87393895558228274*tmp161 - tmp166)) - 0.0017884250398820132*tmp64*((0.15015869737220899*tmp18*tmp23*tmp28*tmp38 + 0.15015869737220899*tmp18*tmp23*tmp32*tmp40 + 0.15015869737220899*tmp18*tmp23*tmp36*tmp9 - tmp35 - tmp49)*(0.15015869737220899*tmp18*tmp23*tmp28*tmp38 + 0.15015869737220899*tmp18*tmp23*tmp32*tmp40 + 0.15015869737220899*tmp18*tmp23*tmp36*tmp9 - tmp35 - tmp49)) - tmp640*((0.1439292763298021*tmp18*tmp310*tmp315*tmp36 + 0.1439292763298021*tmp18*tmp315*tmp319*tmp38 + 0.1439292763298021*tmp18*tmp315*tmp322*tmp40 - tmp334)*(0.1439292763298021*tmp18*tmp310*tmp315*tmp36 + 0.1439292763298021*tmp18*tmp315*tmp319*tmp38 + 0.1439292763298021*tmp18*tmp315*tmp322*tmp40 - tmp334));
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp6 = J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp7 = tmp5 - tmp6;
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][0] + coords[1][0];
      const real_t tmp10 = tmp3*tmp9;
      const real_t tmp11 = -coords[0][2] + coords[1][2];
      const real_t tmp12 = -coords[0][1] + coords[1][1];
      const real_t tmp13 = -coords[0][2] + coords[2][2];
      const real_t tmp14 = tmp12*tmp13;
      const real_t tmp15 = tmp1*tmp9;
      const real_t tmp16 = tmp0*tmp12;
      const real_t tmp17 = tmp11*tmp2;
      const real_t tmp18 = 1.0 / (tmp0*tmp1*tmp11 + tmp10*tmp8 - tmp13*tmp15 + tmp14*tmp2 - tmp16*tmp8 - tmp17*tmp3);
      const real_t tmp19 = J_B_1(1, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp21 = J_B_1(1, 0)*J_B_1(2, 2);
      const real_t tmp22 = tmp19*J_B_1(0, 0) - tmp20*J_B_1(0, 0) - tmp21*J_B_1(0, 1) + tmp5*J_B_1(0, 2) - tmp6*J_B_1(0, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp4;
      const real_t tmp27 = -tmp0*tmp8 + tmp13*tmp2;
      const real_t tmp28 = -tmp21 + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp29 = tmp24*tmp28;
      const real_t tmp30 = tmp27*tmp29;
      const real_t tmp31 = -tmp1*tmp13 + tmp3*tmp8;
      const real_t tmp32 = tmp19 - tmp20;
      const real_t tmp33 = tmp24*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp26 + tmp30 + tmp34;
      const real_t tmp36 = tmp12*tmp2 - tmp15;
      const real_t tmp37 = tmp25*tmp36;
      const real_t tmp38 = -tmp17 + tmp8*tmp9;
      const real_t tmp39 = tmp29*tmp38;
      const real_t tmp40 = tmp1*tmp11 - tmp12*tmp8;
      const real_t tmp41 = tmp33*tmp40;
      const real_t tmp42 = tmp37 + tmp39 + tmp41;
      const real_t tmp43 = tmp10 - tmp16;
      const real_t tmp44 = tmp25*tmp43;
      const real_t tmp45 = tmp0*tmp11 - tmp13*tmp9;
      const real_t tmp46 = tmp29*tmp45;
      const real_t tmp47 = -tmp11*tmp3 + tmp14;
      const real_t tmp48 = tmp33*tmp47;
      const real_t tmp49 = tmp44 + tmp46 + tmp48;
      const real_t tmp50 = coords[0][0]*coords[1][1];
      const real_t tmp51 = coords[0][0]*coords[1][2];
      const real_t tmp52 = coords[2][1]*coords[3][2];
      const real_t tmp53 = coords[0][1]*coords[1][0];
      const real_t tmp54 = coords[0][1]*coords[1][2];
      const real_t tmp55 = coords[2][2]*coords[3][0];
      const real_t tmp56 = coords[0][2]*coords[1][0];
      const real_t tmp57 = coords[0][2]*coords[1][1];
      const real_t tmp58 = coords[2][0]*coords[3][1];
      const real_t tmp59 = coords[2][2]*coords[3][1];
      const real_t tmp60 = coords[2][0]*coords[3][2];
      const real_t tmp61 = coords[2][1]*coords[3][0];
      const real_t tmp62 = std::abs(coords[0][0]*tmp52 - coords[0][0]*tmp59 + coords[0][1]*tmp55 - coords[0][1]*tmp60 + coords[0][2]*tmp58 - coords[0][2]*tmp61 - coords[1][0]*tmp52 + coords[1][0]*tmp59 - coords[1][1]*tmp55 + coords[1][1]*tmp60 - coords[1][2]*tmp58 + coords[1][2]*tmp61 + coords[2][0]*tmp54 - coords[2][0]*tmp57 - coords[2][1]*tmp51 + coords[2][1]*tmp56 + coords[2][2]*tmp50 - coords[2][2]*tmp53 - coords[3][0]*tmp54 + coords[3][0]*tmp57 + coords[3][1]*tmp51 - coords[3][1]*tmp56 - coords[3][2]*tmp50 + coords[3][2]*tmp53);
      const real_t tmp63 = tmp62*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp64 = J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp65 = J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp66 = tmp64 - tmp65;
      const real_t tmp67 = J_B_10(1, 1)*J_B_10(2, 2);
      const real_t tmp68 = J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp69 = J_B_10(1, 0)*J_B_10(2, 2);
      const real_t tmp70 = tmp64*J_B_10(0, 2) - tmp65*J_B_10(0, 2) + tmp67*J_B_10(0, 0) - tmp68*J_B_10(0, 0) - tmp69*J_B_10(0, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp71 = 1.0 / (tmp70);
      const real_t tmp72 = tmp18*tmp71;
      const real_t tmp73 = tmp66*tmp72;
      const real_t tmp74 = tmp4*tmp73;
      const real_t tmp75 = -tmp69 + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp76 = tmp72*tmp75;
      const real_t tmp77 = tmp27*tmp76;
      const real_t tmp78 = tmp67 - tmp68;
      const real_t tmp79 = tmp72*tmp78;
      const real_t tmp80 = tmp31*tmp79;
      const real_t tmp81 = tmp74 + tmp77 + tmp80;
      const real_t tmp82 = tmp36*tmp73;
      const real_t tmp83 = tmp38*tmp76;
      const real_t tmp84 = tmp40*tmp79;
      const real_t tmp85 = tmp82 + tmp83 + tmp84;
      const real_t tmp86 = tmp43*tmp73;
      const real_t tmp87 = tmp45*tmp76;
      const real_t tmp88 = tmp47*tmp79;
      const real_t tmp89 = tmp86 + tmp87 + tmp88;
      const real_t tmp90 = tmp62*std::abs(tmp70)*ScalarCoeff0_10;
      const real_t tmp91 = J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp92 = J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp93 = tmp91 - tmp92;
      const real_t tmp94 = J_B_3(1, 1)*J_B_3(2, 2);
      const real_t tmp95 = J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp96 = J_B_3(1, 0)*J_B_3(2, 2);
      const real_t tmp97 = tmp91*J_B_3(0, 2) - tmp92*J_B_3(0, 2) + tmp94*J_B_3(0, 0) - tmp95*J_B_3(0, 0) - tmp96*J_B_3(0, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp98 = 1.0 / (tmp97);
      const real_t tmp99 = tmp18*tmp98;
      const real_t tmp100 = tmp93*tmp99;
      const real_t tmp101 = tmp100*tmp4;
      const real_t tmp102 = -tmp96 + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp103 = tmp102*tmp99;
      const real_t tmp104 = tmp103*tmp27;
      const real_t tmp105 = tmp94 - tmp95;
      const real_t tmp106 = tmp105*tmp99;
      const real_t tmp107 = tmp106*tmp31;
      const real_t tmp108 = tmp101 + tmp104 + tmp107;
      const real_t tmp109 = tmp100*tmp36;
      const real_t tmp110 = tmp103*tmp38;
      const real_t tmp111 = tmp106*tmp40;
      const real_t tmp112 = tmp109 + tmp110 + tmp111;
      const real_t tmp113 = tmp100*tmp43;
      const real_t tmp114 = tmp103*tmp45;
      const real_t tmp115 = tmp106*tmp47;
      const real_t tmp116 = tmp113 + tmp114 + tmp115;
      const real_t tmp117 = tmp62*std::abs(tmp97)*ScalarCoeff0_3;
      const real_t tmp118 = J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp119 = J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp120 = J_B_5(1, 1)*J_B_5(2, 2);
      const real_t tmp121 = J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp122 = J_B_5(1, 0)*J_B_5(2, 2);
      const real_t tmp123 = tmp118*J_B_5(0, 2) - tmp119*J_B_5(0, 2) + tmp120*J_B_5(0, 0) - tmp121*J_B_5(0, 0) - tmp122*J_B_5(0, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp124 = tmp18/tmp123;
      const real_t tmp125 = tmp124*(tmp118 - tmp119);
      const real_t tmp126 = tmp125*tmp4;
      const real_t tmp127 = tmp124*(-tmp122 + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp128 = tmp127*tmp27;
      const real_t tmp129 = tmp124*(tmp120 - tmp121);
      const real_t tmp130 = tmp129*tmp31;
      const real_t tmp131 = tmp126 + tmp128 + tmp130;
      const real_t tmp132 = tmp125*tmp36;
      const real_t tmp133 = tmp127*tmp38;
      const real_t tmp134 = tmp129*tmp40;
      const real_t tmp135 = tmp132 + tmp133 + tmp134;
      const real_t tmp136 = tmp125*tmp43;
      const real_t tmp137 = tmp127*tmp45;
      const real_t tmp138 = tmp129*tmp47;
      const real_t tmp139 = tmp136 + tmp137 + tmp138;
      const real_t tmp140 = tmp62*std::abs(tmp123)*ScalarCoeff0_5;
      const real_t tmp141 = J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp142 = J_B_7(1, 1)*J_B_7(2, 0);
      const real_t tmp143 = J_B_7(1, 1)*J_B_7(2, 2);
      const real_t tmp144 = J_B_7(1, 2)*J_B_7(2, 1);
      const real_t tmp145 = J_B_7(1, 0)*J_B_7(2, 2);
      const real_t tmp146 = tmp141*J_B_7(0, 2) - tmp142*J_B_7(0, 2) + tmp143*J_B_7(0, 0) - tmp144*J_B_7(0, 0) - tmp145*J_B_7(0, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0);
      const real_t tmp147 = tmp18/tmp146;
      const real_t tmp148 = tmp147*(tmp141 - tmp142);
      const real_t tmp149 = tmp148*tmp4;
      const real_t tmp150 = tmp147*(-tmp145 + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp151 = tmp150*tmp27;
      const real_t tmp152 = tmp147*(tmp143 - tmp144);
      const real_t tmp153 = tmp152*tmp31;
      const real_t tmp154 = tmp149 + tmp151 + tmp153;
      const real_t tmp155 = tmp148*tmp36;
      const real_t tmp156 = tmp150*tmp38;
      const real_t tmp157 = tmp152*tmp40;
      const real_t tmp158 = tmp155 + tmp156 + tmp157;
      const real_t tmp159 = tmp148*tmp43;
      const real_t tmp160 = tmp150*tmp45;
      const real_t tmp161 = tmp152*tmp47;
      const real_t tmp162 = tmp159 + tmp160 + tmp161;
      const real_t tmp163 = tmp62*std::abs(tmp146)*ScalarCoeff0_7;
      const real_t tmp164 = J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp165 = J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp166 = tmp164 - tmp165;
      const real_t tmp167 = J_B_9(1, 1)*J_B_9(2, 2);
      const real_t tmp168 = J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp169 = J_B_9(1, 0)*J_B_9(2, 2);
      const real_t tmp170 = tmp164*J_B_9(0, 2) - tmp165*J_B_9(0, 2) + tmp167*J_B_9(0, 0) - tmp168*J_B_9(0, 0) - tmp169*J_B_9(0, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp171 = 1.0 / (tmp170);
      const real_t tmp172 = tmp171*tmp18;
      const real_t tmp173 = tmp166*tmp172;
      const real_t tmp174 = tmp173*tmp4;
      const real_t tmp175 = -tmp169 + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp176 = tmp172*tmp175;
      const real_t tmp177 = tmp176*tmp27;
      const real_t tmp178 = tmp167 - tmp168;
      const real_t tmp179 = tmp172*tmp178;
      const real_t tmp180 = tmp179*tmp31;
      const real_t tmp181 = tmp174 + tmp177 + tmp180;
      const real_t tmp182 = tmp173*tmp36;
      const real_t tmp183 = tmp176*tmp38;
      const real_t tmp184 = tmp179*tmp40;
      const real_t tmp185 = tmp182 + tmp183 + tmp184;
      const real_t tmp186 = tmp173*tmp43;
      const real_t tmp187 = tmp176*tmp45;
      const real_t tmp188 = tmp179*tmp47;
      const real_t tmp189 = tmp186 + tmp187 + tmp188;
      const real_t tmp190 = tmp62*std::abs(tmp170)*ScalarCoeff0_9;
      const real_t tmp191 = J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp192 = J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp193 = tmp191 - tmp192;
      const real_t tmp194 = J_B_11(1, 1)*J_B_11(2, 2);
      const real_t tmp195 = J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp196 = J_B_11(1, 0)*J_B_11(2, 2);
      const real_t tmp197 = tmp191*J_B_11(0, 2) - tmp192*J_B_11(0, 2) + tmp194*J_B_11(0, 0) - tmp195*J_B_11(0, 0) - tmp196*J_B_11(0, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp198 = 1.0 / (tmp197);
      const real_t tmp199 = tmp18*tmp198;
      const real_t tmp200 = tmp193*tmp199;
      const real_t tmp201 = tmp200*tmp4;
      const real_t tmp202 = -tmp196 + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp203 = tmp199*tmp202;
      const real_t tmp204 = tmp203*tmp27;
      const real_t tmp205 = tmp194 - tmp195;
      const real_t tmp206 = tmp199*tmp205;
      const real_t tmp207 = tmp206*tmp31;
      const real_t tmp208 = tmp201 + tmp204 + tmp207;
      const real_t tmp209 = tmp200*tmp36;
      const real_t tmp210 = tmp203*tmp38;
      const real_t tmp211 = tmp206*tmp40;
      const real_t tmp212 = tmp209 + tmp210 + tmp211;
      const real_t tmp213 = tmp200*tmp43;
      const real_t tmp214 = tmp203*tmp45;
      const real_t tmp215 = tmp206*tmp47;
      const real_t tmp216 = tmp213 + tmp214 + tmp215;
      const real_t tmp217 = tmp62*std::abs(tmp197)*ScalarCoeff0_11;
      const real_t tmp218 = J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp219 = J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp220 = tmp218 - tmp219;
      const real_t tmp221 = J_B_2(1, 1)*J_B_2(2, 2);
      const real_t tmp222 = J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp223 = J_B_2(1, 0)*J_B_2(2, 2);
      const real_t tmp224 = tmp218*J_B_2(0, 2) - tmp219*J_B_2(0, 2) + tmp221*J_B_2(0, 0) - tmp222*J_B_2(0, 0) - tmp223*J_B_2(0, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp225 = 1.0 / (tmp224);
      const real_t tmp226 = tmp18*tmp225;
      const real_t tmp227 = tmp220*tmp226;
      const real_t tmp228 = tmp227*tmp4;
      const real_t tmp229 = -tmp223 + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp230 = tmp226*tmp229;
      const real_t tmp231 = tmp230*tmp27;
      const real_t tmp232 = tmp221 - tmp222;
      const real_t tmp233 = tmp226*tmp232;
      const real_t tmp234 = tmp233*tmp31;
      const real_t tmp235 = tmp228 + tmp231 + tmp234;
      const real_t tmp236 = tmp227*tmp36;
      const real_t tmp237 = tmp230*tmp38;
      const real_t tmp238 = tmp233*tmp40;
      const real_t tmp239 = tmp236 + tmp237 + tmp238;
      const real_t tmp240 = tmp227*tmp43;
      const real_t tmp241 = tmp230*tmp45;
      const real_t tmp242 = tmp233*tmp47;
      const real_t tmp243 = tmp240 + tmp241 + tmp242;
      const real_t tmp244 = tmp62*std::abs(tmp224)*ScalarCoeff0_2;
      const real_t tmp245 = J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp246 = J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp247 = tmp245 - tmp246;
      const real_t tmp248 = J_B_4(1, 1)*J_B_4(2, 2);
      const real_t tmp249 = J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp250 = J_B_4(1, 0)*J_B_4(2, 2);
      const real_t tmp251 = tmp245*J_B_4(0, 2) - tmp246*J_B_4(0, 2) + tmp248*J_B_4(0, 0) - tmp249*J_B_4(0, 0) - tmp250*J_B_4(0, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp252 = 1.0 / (tmp251);
      const real_t tmp253 = tmp18*tmp252;
      const real_t tmp254 = tmp247*tmp253;
      const real_t tmp255 = tmp254*tmp4;
      const real_t tmp256 = -tmp250 + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp257 = tmp253*tmp256;
      const real_t tmp258 = tmp257*tmp27;
      const real_t tmp259 = tmp248 - tmp249;
      const real_t tmp260 = tmp253*tmp259;
      const real_t tmp261 = tmp260*tmp31;
      const real_t tmp262 = tmp255 + tmp258 + tmp261;
      const real_t tmp263 = tmp254*tmp36;
      const real_t tmp264 = tmp257*tmp38;
      const real_t tmp265 = tmp260*tmp40;
      const real_t tmp266 = tmp263 + tmp264 + tmp265;
      const real_t tmp267 = tmp254*tmp43;
      const real_t tmp268 = tmp257*tmp45;
      const real_t tmp269 = tmp260*tmp47;
      const real_t tmp270 = tmp267 + tmp268 + tmp269;
      const real_t tmp271 = tmp62*std::abs(tmp251)*ScalarCoeff0_4;
      const real_t tmp272 = J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp273 = J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp274 = tmp272 - tmp273;
      const real_t tmp275 = J_B_6(1, 1)*J_B_6(2, 2);
      const real_t tmp276 = J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp277 = J_B_6(1, 0)*J_B_6(2, 2);
      const real_t tmp278 = tmp272*J_B_6(0, 2) - tmp273*J_B_6(0, 2) + tmp275*J_B_6(0, 0) - tmp276*J_B_6(0, 0) - tmp277*J_B_6(0, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp279 = 1.0 / (tmp278);
      const real_t tmp280 = tmp18*tmp279;
      const real_t tmp281 = tmp274*tmp280;
      const real_t tmp282 = tmp281*tmp4;
      const real_t tmp283 = -tmp277 + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp284 = tmp280*tmp283;
      const real_t tmp285 = tmp27*tmp284;
      const real_t tmp286 = tmp275 - tmp276;
      const real_t tmp287 = tmp280*tmp286;
      const real_t tmp288 = tmp287*tmp31;
      const real_t tmp289 = tmp282 + tmp285 + tmp288;
      const real_t tmp290 = tmp281*tmp36;
      const real_t tmp291 = tmp284*tmp38;
      const real_t tmp292 = tmp287*tmp40;
      const real_t tmp293 = tmp290 + tmp291 + tmp292;
      const real_t tmp294 = tmp281*tmp43;
      const real_t tmp295 = tmp284*tmp45;
      const real_t tmp296 = tmp287*tmp47;
      const real_t tmp297 = tmp294 + tmp295 + tmp296;
      const real_t tmp298 = tmp62*std::abs(tmp278)*ScalarCoeff0_6;
      const real_t tmp299 = J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp300 = J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp301 = tmp299 - tmp300;
      const real_t tmp302 = J_B_8(1, 1)*J_B_8(2, 2);
      const real_t tmp303 = J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp304 = J_B_8(1, 0)*J_B_8(2, 2);
      const real_t tmp305 = tmp299*J_B_8(0, 2) - tmp300*J_B_8(0, 2) + tmp302*J_B_8(0, 0) - tmp303*J_B_8(0, 0) - tmp304*J_B_8(0, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp306 = 1.0 / (tmp305);
      const real_t tmp307 = tmp18*tmp306;
      const real_t tmp308 = tmp301*tmp307;
      const real_t tmp309 = tmp308*tmp4;
      const real_t tmp310 = -tmp304 + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp311 = tmp307*tmp310;
      const real_t tmp312 = tmp27*tmp311;
      const real_t tmp313 = tmp302 - tmp303;
      const real_t tmp314 = tmp307*tmp313;
      const real_t tmp315 = tmp31*tmp314;
      const real_t tmp316 = tmp309 + tmp312 + tmp315;
      const real_t tmp317 = tmp308*tmp36;
      const real_t tmp318 = tmp311*tmp38;
      const real_t tmp319 = tmp314*tmp40;
      const real_t tmp320 = tmp317 + tmp318 + tmp319;
      const real_t tmp321 = tmp308*tmp43;
      const real_t tmp322 = tmp311*tmp45;
      const real_t tmp323 = tmp314*tmp47;
      const real_t tmp324 = tmp321 + tmp322 + tmp323;
      const real_t tmp325 = tmp62*std::abs(tmp305)*ScalarCoeff0_8;
      const real_t tmp326 = tmp63*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp39 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46 + 0.55279693041046674*tmp48);
      const real_t tmp327 = tmp90*(0.60805118540288361*tmp74 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      const real_t tmp328 = tmp217*(-2.0850189307815055*tmp201 - 2.0850189307815055*tmp204 - 2.0850189307815055*tmp207 - 2.0850189307815055*tmp209 - 2.0850189307815055*tmp210 - 2.0850189307815055*tmp211 - 2.0850189307815055*tmp213 - 2.0850189307815055*tmp214 - 2.0850189307815055*tmp215);
      const real_t tmp329 = tmp244*(-0.29317593934991559*tmp228 - 0.29317593934991559*tmp231 - 0.29317593934991559*tmp234 - 0.29317593934991559*tmp236 - 0.29317593934991559*tmp237 - 0.29317593934991559*tmp238 - 0.29317593934991559*tmp240 - 0.29317593934991559*tmp241 - 0.29317593934991559*tmp242);
      const real_t tmp330 = tmp117*(0.56151037867223397*tmp101 + 0.56151037867223397*tmp104 + 0.56151037867223397*tmp107 + 0.56151037867223397*tmp109 + 0.56151037867223397*tmp110 + 0.56151037867223397*tmp111 + 0.56151037867223397*tmp113 + 0.56151037867223397*tmp114 + 0.56151037867223397*tmp115);
      const real_t tmp331 = tmp271*(-0.31389282688815401*tmp255 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp265 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269);
      const real_t tmp332 = tmp140*(0.99043597017024343*tmp126 + 0.99043597017024343*tmp128 + 0.99043597017024343*tmp130 + 0.99043597017024343*tmp132 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp134 + 0.99043597017024343*tmp136 + 0.99043597017024343*tmp137 + 0.99043597017024343*tmp138);
      const real_t tmp333 = tmp298*(-1.2518910405721839*tmp282 - 1.2518910405721839*tmp285 - 1.2518910405721839*tmp288 - 1.2518910405721839*tmp290 - 1.2518910405721839*tmp291 - 1.2518910405721839*tmp292 - 1.2518910405721839*tmp294 - 1.2518910405721839*tmp295 - 1.2518910405721839*tmp296);
      const real_t tmp334 = tmp163*(0.77270393148826533*tmp149 + 0.77270393148826533*tmp151 + 0.77270393148826533*tmp153 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp156 + 0.77270393148826533*tmp157 + 0.77270393148826533*tmp159 + 0.77270393148826533*tmp160 + 0.77270393148826533*tmp161);
      const real_t tmp335 = tmp325*(-0.9184440441026207*tmp309 - 0.9184440441026207*tmp312 - 0.9184440441026207*tmp315 - 0.9184440441026207*tmp317 - 0.9184440441026207*tmp318 - 0.9184440441026207*tmp319 - 0.9184440441026207*tmp321 - 0.9184440441026207*tmp322 - 0.9184440441026207*tmp323);
      const real_t tmp336 = tmp190*(0.37454442704241986*tmp174 + 0.37454442704241986*tmp177 + 0.37454442704241986*tmp180 + 0.37454442704241986*tmp182 + 0.37454442704241986*tmp183 + 0.37454442704241986*tmp184 + 0.37454442704241986*tmp186 + 0.37454442704241986*tmp187 + 0.37454442704241986*tmp188);
      const real_t tmp337 = 2.7375616618121592*tmp37 + 2.7375616618121592*tmp39 + 2.7375616618121592*tmp41;
      const real_t tmp338 = 0.42641669024797446*tmp44 + 0.42641669024797446*tmp46 + 0.42641669024797446*tmp48;
      const real_t tmp339 = 0.011829781572832234*tmp326;
      const real_t tmp340 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp84;
      const real_t tmp341 = 0.3256196736114374*tmp86 + 0.3256196736114374*tmp87 + 0.3256196736114374*tmp88;
      const real_t tmp342 = 0.0061414854617707626*tmp327;
      const real_t tmp343 = 0.054242807519210512*tmp209 + 0.054242807519210512*tmp210 + 0.054242807519210512*tmp211;
      const real_t tmp344 = 0.69877623478892303*tmp213 + 0.69877623478892303*tmp214 + 0.69877623478892303*tmp215;
      const real_t tmp345 = 0.0043612323249822204*tmp328;
      const real_t tmp346 = 1.2716142408535775*tmp236 + 1.2716142408535775*tmp237 + 1.2716142408535775*tmp238;
      const real_t tmp347 = 1.3169318389705873*tmp240 + 1.3169318389705873*tmp241 + 1.3169318389705873*tmp242;
      const real_t tmp348 = 0.012248248047610821*tmp329;
      const real_t tmp349 = 1.4152929568371884*tmp109 + 1.4152929568371884*tmp110 + 1.4152929568371884*tmp111;
      const real_t tmp350 = 0.41537646564397157*tmp113 + 0.41537646564397157*tmp114 + 0.41537646564397157*tmp115;
      const real_t tmp351 = 0.017219568446249611*tmp330;
      const real_t tmp352 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp265;
      const real_t tmp353 = 1.2177936097379878*tmp267 + 1.2177936097379878*tmp268 + 1.2177936097379878*tmp269;
      const real_t tmp354 = 0.021490090227737114*tmp331;
      const real_t tmp355 = 1.3207616593498592*tmp132 + 1.3207616593498592*tmp133 + 1.3207616593498592*tmp134;
      const real_t tmp356 = 2.1520288156647434*tmp136 + 2.1520288156647434*tmp137 + 2.1520288156647434*tmp138;
      const real_t tmp357 = 0.0084625239161731543*tmp332;
      const real_t tmp358 = 1.2259759537187613*tmp290 + 1.2259759537187613*tmp291 + 1.2259759537187613*tmp292;
      const real_t tmp359 = 0.035965040373342916*tmp294 + 0.035965040373342916*tmp295 + 0.035965040373342916*tmp296;
      const real_t tmp360 = 0.0088251866742250357*tmp333;
      const real_t tmp361 = 0.23782646519773576*tmp155 + 0.23782646519773576*tmp156 + 0.23782646519773576*tmp157;
      const real_t tmp362 = 1.7318139619254227*tmp159 + 1.7318139619254227*tmp160 + 1.7318139619254227*tmp161;
      const real_t tmp363 = 0.0077188851041817101*tmp334;
      const real_t tmp364 = 0.19112574223634571*tmp317 + 0.19112574223634571*tmp318 + 0.19112574223634571*tmp319;
      const real_t tmp365 = 0.21336495814298084*tmp321 + 0.21336495814298084*tmp322 + 0.21336495814298084*tmp323;
      const real_t tmp366 = 0.006659242794062166*tmp335;
      const real_t tmp367 = 0.14073571909439453*tmp182 + 0.14073571909439453*tmp183 + 0.14073571909439453*tmp184;
      const real_t tmp368 = 2.9649155283744921*tmp186 + 2.9649155283744921*tmp187 + 2.9649155283744921*tmp188;
      const real_t tmp369 = 0.0061548665412862651*tmp336;
      const real_t tmp370 = 2.7375616618121592*tmp26 + 2.7375616618121592*tmp30 + 2.7375616618121592*tmp34;
      const real_t tmp371 = 0.38881857835033307*tmp44 + 0.38881857835033307*tmp46 + 0.38881857835033307*tmp48;
      const real_t tmp372 = 0.2723974837528258*tmp74 + 0.2723974837528258*tmp77 + 0.2723974837528258*tmp80;
      const real_t tmp373 = 3.0100340280386204*tmp86 + 3.0100340280386204*tmp87 + 3.0100340280386204*tmp88;
      const real_t tmp374 = 0.054242807519210512*tmp201 + 0.054242807519210512*tmp204 + 0.054242807519210512*tmp207;
      const real_t tmp375 = 0.16196202691036121*tmp213 + 0.16196202691036121*tmp214 + 0.16196202691036121*tmp215;
      const real_t tmp376 = 1.2716142408535775*tmp228 + 1.2716142408535775*tmp231 + 1.2716142408535775*tmp234;
      const real_t tmp377 = 0.11827798082591956*tmp240 + 0.11827798082591956*tmp241 + 0.11827798082591956*tmp242;
      const real_t tmp378 = 1.4152929568371884*tmp101 + 1.4152929568371884*tmp104 + 1.4152929568371884*tmp107;
      const real_t tmp379 = 1.730840956191074*tmp113 + 1.730840956191074*tmp114 + 1.730840956191074*tmp115;
      const real_t tmp380 = 0.50720690366156718*tmp255 + 0.50720690366156718*tmp258 + 0.50720690366156718*tmp261;
      const real_t tmp381 = 0.96110665971229103*tmp267 + 0.96110665971229103*tmp268 + 0.96110665971229103*tmp269;
      const real_t tmp382 = 1.3207616593498592*tmp126 + 1.3207616593498592*tmp128 + 1.3207616593498592*tmp130;
      const real_t tmp383 = 0.51764549515564062*tmp136 + 0.51764549515564062*tmp137 + 0.51764549515564062*tmp138;
      const real_t tmp384 = 1.2259759537187613*tmp282 + 1.2259759537187613*tmp285 + 1.2259759537187613*tmp288;
      const real_t tmp385 = 0.48616796533571183*tmp294 + 0.48616796533571183*tmp295 + 0.48616796533571183*tmp296;
      const real_t tmp386 = 0.23782646519773576*tmp149 + 0.23782646519773576*tmp151 + 0.23782646519773576*tmp153;
      const real_t tmp387 = 1.8030635043651069*tmp159 + 1.8030635043651069*tmp160 + 1.8030635043651069*tmp161;
      const real_t tmp388 = 0.19112574223634571*tmp309 + 0.19112574223634571*tmp312 + 0.19112574223634571*tmp315;
      const real_t tmp389 = 1.6770652555180527*tmp321 + 1.6770652555180527*tmp322 + 1.6770652555180527*tmp323;
      const real_t tmp390 = 0.14073571909439453*tmp174 + 0.14073571909439453*tmp177 + 0.14073571909439453*tmp180;
      const real_t tmp391 = 0.2688931795735332*tmp186 + 0.2688931795735332*tmp187 + 0.2688931795735332*tmp188;
      const real_t tmp392 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp30 + 0.42641669024797446*tmp34;
      const real_t tmp393 = 0.38881857835033307*tmp37 + 0.38881857835033307*tmp39 + 0.38881857835033307*tmp41;
      const real_t tmp394 = 0.3256196736114374*tmp74 + 0.3256196736114374*tmp77 + 0.3256196736114374*tmp80;
      const real_t tmp395 = 3.0100340280386204*tmp82 + 3.0100340280386204*tmp83 + 3.0100340280386204*tmp84;
      const real_t tmp396 = 0.69877623478892303*tmp201 + 0.69877623478892303*tmp204 + 0.69877623478892303*tmp207;
      const real_t tmp397 = 0.16196202691036121*tmp209 + 0.16196202691036121*tmp210 + 0.16196202691036121*tmp211;
      const real_t tmp398 = 1.3169318389705873*tmp228 + 1.3169318389705873*tmp231 + 1.3169318389705873*tmp234;
      const real_t tmp399 = 0.11827798082591956*tmp236 + 0.11827798082591956*tmp237 + 0.11827798082591956*tmp238;
      const real_t tmp400 = 0.41537646564397157*tmp101 + 0.41537646564397157*tmp104 + 0.41537646564397157*tmp107;
      const real_t tmp401 = 1.730840956191074*tmp109 + 1.730840956191074*tmp110 + 1.730840956191074*tmp111;
      const real_t tmp402 = 1.2177936097379878*tmp255 + 1.2177936097379878*tmp258 + 1.2177936097379878*tmp261;
      const real_t tmp403 = 0.96110665971229103*tmp263 + 0.96110665971229103*tmp264 + 0.96110665971229103*tmp265;
      const real_t tmp404 = 2.1520288156647434*tmp126 + 2.1520288156647434*tmp128 + 2.1520288156647434*tmp130;
      const real_t tmp405 = 0.51764549515564062*tmp132 + 0.51764549515564062*tmp133 + 0.51764549515564062*tmp134;
      const real_t tmp406 = 0.035965040373342916*tmp282 + 0.035965040373342916*tmp285 + 0.035965040373342916*tmp288;
      const real_t tmp407 = 0.48616796533571183*tmp290 + 0.48616796533571183*tmp291 + 0.48616796533571183*tmp292;
      const real_t tmp408 = 1.7318139619254227*tmp149 + 1.7318139619254227*tmp151 + 1.7318139619254227*tmp153;
      const real_t tmp409 = 1.8030635043651069*tmp155 + 1.8030635043651069*tmp156 + 1.8030635043651069*tmp157;
      const real_t tmp410 = 0.21336495814298084*tmp309 + 0.21336495814298084*tmp312 + 0.21336495814298084*tmp315;
      const real_t tmp411 = 1.6770652555180527*tmp317 + 1.6770652555180527*tmp318 + 1.6770652555180527*tmp319;
      const real_t tmp412 = 2.9649155283744921*tmp174 + 2.9649155283744921*tmp177 + 2.9649155283744921*tmp180;
      const real_t tmp413 = 0.2688931795735332*tmp182 + 0.2688931795735332*tmp183 + 0.2688931795735332*tmp184;
      elMat(0,0) = -0.0054292249839739343*tmp117*((tmp108 + tmp112 + tmp116)*(tmp108 + tmp112 + tmp116)) - 0.0083014263265381374*tmp140*((tmp131 + tmp135 + tmp139)*(tmp131 + tmp135 + tmp139)) - 0.0046087252711240149*tmp163*((tmp154 + tmp158 + tmp162)*(tmp154 + tmp158 + tmp162)) - 0.00086342639172544801*tmp190*((tmp181 + tmp185 + tmp189)*(tmp181 + tmp185 + tmp189)) - 0.0189596024771399*tmp217*((-tmp208 - tmp212 - tmp216)*(-tmp208 - tmp212 - tmp216)) - 0.0010527630257759059*tmp244*((-tmp235 - tmp239 - tmp243)*(-tmp235 - tmp239 - tmp243)) - 0.0021173907985490219*tmp271*((-tmp262 - tmp266 - tmp270)*(-tmp262 - tmp266 - tmp270)) - 0.013831107702793295*tmp298*((-tmp289 - tmp293 - tmp297)*(-tmp289 - tmp293 - tmp297)) - 0.0056173340848133255*tmp325*((-tmp316 - tmp320 - tmp324)*(-tmp316 - tmp320 - tmp324)) - 0.0036149972514435908*tmp63*((tmp35 + tmp42 + tmp49)*(tmp35 + tmp42 + tmp49)) - 0.0022706683527901044*tmp90*((tmp81 + tmp85 + tmp89)*(tmp81 + tmp85 + tmp89));
      elMat(0,1) = -0.012584765868454714*tmp108*tmp330 + 0.0040819365333192512*tmp131*tmp332 - 0.0061987549215557864*tmp154*tmp334 + 0.0044998649071490461*tmp181*tmp336 + 0.0036548782978011126*tmp208*tmp328 + 0.010799549999884401*tmp235*tmp329 + 0.00083582139204094858*tmp262*tmp331 + 0.0045346636251092122*tmp289*tmp333 - 0.0045087419239184514*tmp316*tmp335 + 0.0072301427194886381*tmp326*tmp35 - 0.012344594760863713*tmp327*tmp81;
      elMat(0,2) = 0.010066964965131993*tmp112*tmp330 - 0.0097490714046835261*tmp135*tmp332 - 0.0056487878897383461*tmp158*tmp334 - 0.012093792842045984*tmp185*tmp336 + 0.0013137068218914037*tmp212*tmp328 - 0.0038818597778972029*tmp239*tmp329 - 0.0046804043242939224*tmp266*tmp331 + 0.0085077884791842431*tmp293*tmp333 + 0.005238393734043144*tmp320*tmp335 + 0.0067853652681886352*tmp326*tmp42 + 0.0041416969702195786*tmp327*tmp85;
      elMat(0,3) = -0.0071511654955033511*tmp116*tmp330 - 0.0027144532136395704*tmp139*tmp332 + 0.005883129944586717*tmp162*tmp334 + 0.0052886569726683132*tmp189*tmp336 + 0.0041246668394316508*tmp216*tmp328 - 0.0033267985952381263*tmp243*tmp329 + 0.010590168103918869*tmp270*tmp331 - 0.0019942799754541058*tmp297*tmp333 + 0.0053864900723149976*tmp324*tmp335 - 0.020554974928565235*tmp326*tmp49 + 0.0044685602754798454*tmp327*tmp89;
      elMat(0,4) = -tmp339*(tmp337 + tmp338) - tmp342*(tmp340 + tmp341) - tmp345*(tmp343 + tmp344) - tmp348*(tmp346 + tmp347) - tmp351*(tmp349 + tmp350) - tmp354*(tmp352 + tmp353) - tmp357*(tmp355 + tmp356) - tmp360*(tmp358 + tmp359) - tmp363*(tmp361 + tmp362) - tmp366*(tmp364 + tmp365) - tmp369*(tmp367 + tmp368);
      elMat(0,5) = -tmp339*(tmp370 + tmp371) - tmp342*(tmp372 + tmp373) - tmp345*(tmp374 + tmp375) - tmp348*(tmp376 + tmp377) - tmp351*(tmp378 + tmp379) - tmp354*(tmp380 + tmp381) - tmp357*(tmp382 + tmp383) - tmp360*(tmp384 + tmp385) - tmp363*(tmp386 + tmp387) - tmp366*(tmp388 + tmp389) - tmp369*(tmp390 + tmp391);
      elMat(0,6) = -tmp339*(tmp392 + tmp393) - tmp342*(tmp394 + tmp395) - tmp345*(tmp396 + tmp397) - tmp348*(tmp398 + tmp399) - tmp351*(tmp400 + tmp401) - tmp354*(tmp402 + tmp403) - tmp357*(tmp404 + tmp405) - tmp360*(tmp406 + tmp407) - tmp363*(tmp408 + tmp409) - tmp366*(tmp410 + tmp411) - tmp369*(tmp412 + tmp413);
      elMat(0,7) = -tmp339*(-tmp337 - tmp370 - 2.2903585922226259*tmp44 - 2.2903585922226259*tmp46 - 2.2903585922226259*tmp48) - tmp342*(0.11955133084429059*tmp18*tmp43*tmp66*tmp71 + 0.11955133084429059*tmp18*tmp45*tmp71*tmp75 + 0.11955133084429059*tmp18*tmp47*tmp71*tmp78 - tmp340 - tmp372) - tmp345*(3.030776123262295*tmp18*tmp193*tmp198*tmp43 + 3.030776123262295*tmp18*tmp198*tmp202*tmp45 + 3.030776123262295*tmp18*tmp198*tmp205*tmp47 - tmp343 - tmp374) - tmp348*(0.021561698496338266*tmp18*tmp220*tmp225*tmp43 + 0.021561698496338266*tmp18*tmp225*tmp229*tmp45 + 0.021561698496338266*tmp18*tmp225*tmp232*tmp47 - tmp346 - tmp376) - tmp351*(-0.97680333550942233*tmp113 - 0.97680333550942233*tmp114 - 0.97680333550942233*tmp115 - tmp349 - tmp378) - tmp354*(0.80668592322658683*tmp18*tmp247*tmp252*tmp43 + 0.80668592322658683*tmp18*tmp252*tmp256*tmp45 + 0.80668592322658683*tmp18*tmp252*tmp259*tmp47 - tmp352 - tmp380) - tmp357*(-1.3111976295201027*tmp136 - 1.3111976295201027*tmp137 - 1.3111976295201027*tmp138 - tmp355 - tmp382) - tmp360*(1.0259150868534226*tmp18*tmp274*tmp279*tmp43 + 1.0259150868534226*tmp18*tmp279*tmp283*tmp45 + 1.0259150868534226*tmp18*tmp279*tmp286*tmp47 - tmp358 - tmp384) - tmp363*(-0.010530396686001087*tmp159 - 0.010530396686001087*tmp160 - 0.010530396686001087*tmp161 - tmp361 - tmp386) - tmp366*(1.727318301866275*tmp18*tmp301*tmp306*tmp43 + 1.727318301866275*tmp18*tmp306*tmp310*tmp45 + 1.727318301866275*tmp18*tmp306*tmp313*tmp47 - tmp364 - tmp388) - tmp369*(0.48471985386318561*tmp166*tmp171*tmp18*tmp43 + 0.48471985386318561*tmp171*tmp175*tmp18*tmp45 + 0.48471985386318561*tmp171*tmp178*tmp18*tmp47 - tmp367 - tmp390);
      elMat(0,8) = -tmp339*(0.020786379341558803*tmp18*tmp23*tmp28*tmp38 + 0.020786379341558803*tmp18*tmp23*tmp32*tmp40 + 0.020786379341558803*tmp18*tmp23*tmp36*tmp7 - tmp338 - tmp392) - tmp342*(0.066329140985678992*tmp18*tmp36*tmp66*tmp71 + 0.066329140985678992*tmp18*tmp38*tmp71*tmp75 + 0.066329140985678992*tmp18*tmp40*tmp71*tmp78 - tmp341 - tmp394) - tmp345*(2.3862426959925824*tmp18*tmp193*tmp198*tmp36 + 2.3862426959925824*tmp18*tmp198*tmp202*tmp38 + 2.3862426959925824*tmp18*tmp198*tmp205*tmp40 - tmp344 - tmp396) - tmp348*(-0.023755899620671705*tmp236 - 0.023755899620671705*tmp237 - 0.023755899620671705*tmp238 - tmp347 - tmp398) - tmp351*(0.023113155683794462*tmp102*tmp18*tmp38*tmp98 + 0.023113155683794462*tmp105*tmp18*tmp40*tmp98 + 0.023113155683794462*tmp18*tmp36*tmp93*tmp98 - tmp350 - tmp400) - tmp354*(0.096099217150166227*tmp18*tmp247*tmp252*tmp36 + 0.096099217150166227*tmp18*tmp252*tmp256*tmp38 + 0.096099217150166227*tmp18*tmp252*tmp259*tmp40 - tmp353 - tmp402) - tmp357*(-2.1424647858349868*tmp132 - 2.1424647858349868*tmp133 - 2.1424647858349868*tmp134 - tmp356 - tmp404) - tmp360*(2.215926000198841*tmp18*tmp274*tmp279*tmp36 + 2.215926000198841*tmp18*tmp279*tmp283*tmp38 + 2.215926000198841*tmp18*tmp279*tmp286*tmp40 - tmp359 - tmp406) - tmp363*(-1.504517893413688*tmp155 - 1.504517893413688*tmp156 - 1.504517893413688*tmp157 - tmp362 - tmp408) - tmp366*(1.7050790859596399*tmp18*tmp301*tmp306*tmp36 + 1.7050790859596399*tmp18*tmp306*tmp310*tmp38 + 1.7050790859596399*tmp18*tmp306*tmp313*tmp40 - tmp365 - tmp410) - tmp369*(-2.339459955416912*tmp182 - 2.339459955416912*tmp183 - 2.339459955416912*tmp184 - tmp368 - tmp412);
      elMat(0,9) = -tmp339*(0.058384491239200198*tmp18*tmp23*tmp27*tmp28 + 0.058384491239200198*tmp18*tmp23*tmp31*tmp32 + 0.058384491239200198*tmp18*tmp23*tmp4*tmp7 - tmp371 - tmp393) - tmp342*(-tmp373 - tmp395 - 2.6180852134415042*tmp74 - 2.6180852134415042*tmp77 - 2.6180852134415042*tmp80) - tmp345*(2.923056903871144*tmp18*tmp193*tmp198*tmp4 + 2.923056903871144*tmp18*tmp198*tmp202*tmp27 + 2.923056903871144*tmp18*tmp198*tmp205*tmp31 - tmp375 - tmp397) - tmp348*(1.1748979585239958*tmp18*tmp220*tmp225*tmp4 + 1.1748979585239958*tmp18*tmp225*tmp229*tmp27 + 1.1748979585239958*tmp18*tmp225*tmp232*tmp31 - tmp377 - tmp399) - tmp351*(-1.292351334863308*tmp101 - 1.292351334863308*tmp104 - 1.292351334863308*tmp107 - tmp379 - tmp401) - tmp354*(0.35278616717586297*tmp18*tmp247*tmp252*tmp4 + 0.35278616717586297*tmp18*tmp252*tmp256*tmp27 + 0.35278616717586297*tmp18*tmp252*tmp259*tmp31 - tmp381 - tmp403) - tmp357*(-0.50808146532588383*tmp126 - 0.50808146532588383*tmp128 - 0.50808146532588383*tmp130 - tmp383 - tmp405) - tmp360*(1.7657230752364721*tmp18*tmp27*tmp279*tmp283 + 1.7657230752364721*tmp18*tmp274*tmp279*tmp4 + 1.7657230752364721*tmp18*tmp279*tmp286*tmp31 - tmp385 - tmp407) - tmp363*(-1.5757674358533722*tmp149 - 1.5757674358533722*tmp151 - 1.5757674358533722*tmp153 - tmp387 - tmp409) - tmp366*(0.24137878858456796*tmp18*tmp27*tmp306*tmp310 + 0.24137878858456796*tmp18*tmp301*tmp306*tmp4 + 0.24137878858456796*tmp18*tmp306*tmp31*tmp313 - tmp389 - tmp411) - tmp369*(0.35656239338404694*tmp166*tmp171*tmp18*tmp4 + 0.35656239338404694*tmp171*tmp175*tmp18*tmp27 + 0.35656239338404694*tmp171*tmp178*tmp18*tmp31 - tmp391 - tmp413);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = coords[0][0] - coords[2][0];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (tmp0*tmp1 - tmp2*tmp3);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(0, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp2*tmp8;
      const real_t tmp11 = 0.78379396366386*tmp1*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp10 + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp9;
      const real_t tmp12 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp13 = 0.11169079483900564*tmp12;
      const real_t tmp14 = tmp7*J_B_1(1, 0);
      const real_t tmp15 = tmp0*tmp14;
      const real_t tmp16 = tmp14*tmp2;
      const real_t tmp17 = tmp7*J_B_1(1, 1);
      const real_t tmp18 = tmp1*tmp17;
      const real_t tmp19 = tmp17*tmp3;
      const real_t tmp20 = std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp21 = tmp20*(0.78379396366386*tmp15 + 0.78379396366386*tmp16 - 0.78379396366386*tmp18 - 0.78379396366386*tmp19);
      const real_t tmp22 = tmp13*tmp21;
      const real_t tmp23 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp24 = 1.0 / (tmp23);
      const real_t tmp25 = tmp24*tmp4;
      const real_t tmp26 = tmp25*J_B_2(0, 0);
      const real_t tmp27 = tmp0*tmp26;
      const real_t tmp28 = tmp2*tmp26;
      const real_t tmp29 = tmp25*J_B_2(0, 1);
      const real_t tmp30 = tmp1*tmp29;
      const real_t tmp31 = tmp29*tmp3;
      const real_t tmp32 = 0.56758792732771934*tmp27 + 0.56758792732771934*tmp28 - 0.56758792732771934*tmp30 - 0.56758792732771934*tmp31;
      const real_t tmp33 = tmp25*J_B_2(1, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp2*tmp33;
      const real_t tmp36 = std::abs(tmp23)*ScalarCoeff0_2;
      const real_t tmp37 = tmp36*(0.56758792732771934*tmp1*tmp24*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp24*tmp3*tmp4*J_B_2(1, 1) - 0.56758792732771934*tmp34 - 0.56758792732771934*tmp35);
      const real_t tmp38 = tmp13*tmp37;
      const real_t tmp39 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp40 = 1.0 / (tmp39);
      const real_t tmp41 = tmp4*tmp40;
      const real_t tmp42 = tmp41*J_B_3(0, 0);
      const real_t tmp43 = tmp0*tmp42;
      const real_t tmp44 = tmp2*tmp42;
      const real_t tmp45 = 0.78379396366385934*tmp1*tmp4*tmp40*J_B_3(0, 1) + 0.78379396366385934*tmp3*tmp4*tmp40*J_B_3(0, 1) - 0.78379396366385934*tmp43 - 0.78379396366385934*tmp44;
      const real_t tmp46 = tmp41*J_B_3(1, 0);
      const real_t tmp47 = tmp0*tmp46;
      const real_t tmp48 = tmp2*tmp46;
      const real_t tmp49 = tmp41*J_B_3(1, 1);
      const real_t tmp50 = tmp1*tmp49;
      const real_t tmp51 = tmp3*tmp49;
      const real_t tmp52 = 0.78379396366385934*tmp47 + 0.78379396366385934*tmp48 - 0.78379396366385934*tmp50 - 0.78379396366385934*tmp51;
      const real_t tmp53 = std::abs(tmp39);
      const real_t tmp54 = tmp53*ScalarCoeff0_3;
      const real_t tmp55 = tmp52*tmp54;
      const real_t tmp56 = tmp13*tmp55;
      const real_t tmp57 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp58 = 1.0 / (tmp57);
      const real_t tmp59 = tmp4*tmp58;
      const real_t tmp60 = tmp59*J_B_4(0, 0);
      const real_t tmp61 = tmp0*tmp60;
      const real_t tmp62 = tmp2*tmp60;
      const real_t tmp63 = 2.2673902919218332*tmp1*tmp4*tmp58*J_B_4(0, 1) + 2.2673902919218332*tmp3*tmp4*tmp58*J_B_4(0, 1) - 2.2673902919218332*tmp61 - 2.2673902919218332*tmp62;
      const real_t tmp64 = 0.054975871827660817*tmp12;
      const real_t tmp65 = tmp59*J_B_4(1, 0);
      const real_t tmp66 = tmp0*tmp65;
      const real_t tmp67 = tmp2*tmp65;
      const real_t tmp68 = tmp59*J_B_4(1, 1);
      const real_t tmp69 = tmp1*tmp68;
      const real_t tmp70 = tmp3*tmp68;
      const real_t tmp71 = 2.2673902919218332*tmp66 + 2.2673902919218332*tmp67 - 2.2673902919218332*tmp69 - 2.2673902919218332*tmp70;
      const real_t tmp72 = std::abs(tmp57);
      const real_t tmp73 = tmp72*ScalarCoeff0_4;
      const real_t tmp74 = tmp71*tmp73;
      const real_t tmp75 = tmp64*tmp74;
      const real_t tmp76 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp77 = 1.0 / (tmp76);
      const real_t tmp78 = tmp4*tmp77;
      const real_t tmp79 = tmp78*J_B_5(0, 0);
      const real_t tmp80 = tmp0*tmp79;
      const real_t tmp81 = tmp2*tmp79;
      const real_t tmp82 = tmp78*J_B_5(0, 1);
      const real_t tmp83 = tmp1*tmp82;
      const real_t tmp84 = tmp3*tmp82;
      const real_t tmp85 = 0.63369514596091792*tmp80 + 0.63369514596091792*tmp81 - 0.63369514596091792*tmp83 - 0.63369514596091792*tmp84;
      const real_t tmp86 = tmp78*J_B_5(1, 0);
      const real_t tmp87 = tmp0*tmp86;
      const real_t tmp88 = tmp2*tmp86;
      const real_t tmp89 = std::abs(tmp76)*ScalarCoeff0_5;
      const real_t tmp90 = tmp89*(0.63369514596091792*tmp1*tmp4*tmp77*J_B_5(1, 1) + 0.63369514596091792*tmp3*tmp4*tmp77*J_B_5(1, 1) - 0.63369514596091792*tmp87 - 0.63369514596091792*tmp88);
      const real_t tmp91 = tmp64*tmp90;
      const real_t tmp92 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp93 = 1.0 / (tmp92);
      const real_t tmp94 = tmp4*tmp93;
      const real_t tmp95 = tmp94*J_B_6(0, 0);
      const real_t tmp96 = tmp0*tmp95;
      const real_t tmp97 = tmp2*tmp95;
      const real_t tmp98 = tmp94*J_B_6(0, 1);
      const real_t tmp99 = tmp1*tmp98;
      const real_t tmp100 = tmp3*tmp98;
      const real_t tmp101 = -0.63369514596091747*tmp100 + 0.63369514596091747*tmp96 + 0.63369514596091747*tmp97 - 0.63369514596091747*tmp99;
      const real_t tmp102 = tmp94*J_B_6(1, 0);
      const real_t tmp103 = tmp0*tmp102;
      const real_t tmp104 = tmp102*tmp2;
      const real_t tmp105 = 0.63369514596091747*tmp1*tmp4*tmp93*J_B_6(1, 1) - 0.63369514596091747*tmp103 - 0.63369514596091747*tmp104 + 0.63369514596091747*tmp3*tmp4*tmp93*J_B_6(1, 1);
      const real_t tmp106 = std::abs(tmp92);
      const real_t tmp107 = tmp106*ScalarCoeff0_6;
      const real_t tmp108 = tmp105*tmp107;
      const real_t tmp109 = tmp108*tmp64;
      const real_t tmp110 = tmp12*tmp21;
      const real_t tmp111 = tmp7*J_B_1(0, 1);
      const real_t tmp112 = tmp1*tmp111;
      const real_t tmp113 = tmp10 - tmp112;
      const real_t tmp114 = 0.087542570791631205*tmp113;
      const real_t tmp115 = tmp12*tmp37;
      const real_t tmp116 = tmp28 - tmp30;
      const real_t tmp117 = 0.087542570791631302*tmp116;
      const real_t tmp118 = tmp41*J_B_3(0, 1);
      const real_t tmp119 = tmp1*tmp118;
      const real_t tmp120 = -tmp119 + tmp44;
      const real_t tmp121 = tmp59*J_B_4(0, 1);
      const real_t tmp122 = tmp1*tmp121;
      const real_t tmp123 = -tmp122 + tmp62;
      const real_t tmp124 = tmp12*tmp90;
      const real_t tmp125 = tmp81 - tmp83;
      const real_t tmp126 = 0.12465175807197719*tmp125;
      const real_t tmp127 = tmp97 - tmp99;
      const real_t tmp128 = tmp111*tmp3;
      const real_t tmp129 = -tmp128 + tmp9;
      const real_t tmp130 = 0.063394346744256799*tmp129;
      const real_t tmp131 = tmp27 - tmp31;
      const real_t tmp132 = 0.08754257079163108*tmp131;
      const real_t tmp133 = tmp118*tmp3;
      const real_t tmp134 = -tmp133 + tmp43;
      const real_t tmp135 = 0.087542570791631358*tmp134;
      const real_t tmp136 = tmp121*tmp3;
      const real_t tmp137 = -tmp136 + tmp61;
      const real_t tmp138 = 0.034837943122158259*tmp137;
      const real_t tmp139 = tmp80 - tmp84;
      const real_t tmp140 = 0.034837943122158141*tmp139;
      const real_t tmp141 = -tmp100 + tmp96;
      const real_t tmp142 = 0.12465175807197725*tmp141;
      const real_t tmp143 = 0.43241207267228021*tmp10;
      const real_t tmp144 = 0.43241207267228021*tmp112;
      const real_t tmp145 = -1.7837939636638598*tmp128 + 1.7837939636638598*tmp9;
      const real_t tmp146 = tmp143 - tmp144 + tmp145;
      const real_t tmp147 = 1.7837939636638587*tmp28 - 1.7837939636638587*tmp30;
      const real_t tmp148 = 1.7837939636638607*tmp27 - 1.7837939636638607*tmp31;
      const real_t tmp149 = tmp147 + tmp148;
      const real_t tmp150 = -1.7837939636638611*tmp119 + 1.7837939636638611*tmp44;
      const real_t tmp151 = -0.43241207267227955*tmp133 + 0.43241207267227955*tmp43;
      const real_t tmp152 = tmp150 + tmp151;
      const real_t tmp153 = 0.36630485403908164*tmp62;
      const real_t tmp154 = 0.36630485403908164*tmp122;
      const real_t tmp155 = -0.36630485403908519*tmp136 + 0.36630485403908519*tmp61;
      const real_t tmp156 = tmp153 - tmp154 + tmp155;
      const real_t tmp157 = 0.36630485403908386*tmp81 - 0.36630485403908386*tmp83;
      const real_t tmp158 = 3.2673902919218341*tmp80 - 3.2673902919218341*tmp84;
      const real_t tmp159 = tmp157 + tmp158;
      const real_t tmp160 = -0.36630485403908253*tmp100 + 0.36630485403908253*tmp96;
      const real_t tmp161 = 3.2673902919218349*tmp97 - 3.2673902919218349*tmp99;
      const real_t tmp162 = tmp160 + tmp161;
      const real_t tmp163 = -1.3513818909915796*tmp128 - tmp143 + tmp144 + 1.3513818909915796*tmp9;
      const real_t tmp164 = -tmp147 + 1.3513818909915782*tmp24*tmp3*tmp4*J_B_2(0, 1) - 1.3513818909915782*tmp27;
      const real_t tmp165 = -tmp150 + 1.7763568394002505e-15*tmp3*tmp4*tmp40*J_B_3(0, 1) - 1.7763568394002505e-15*tmp43;
      const real_t tmp166 = -2.9010854378827515*tmp136 - tmp153 + tmp154 + 2.9010854378827515*tmp61;
      const real_t tmp167 = -tmp157 + 1.7763568394002505e-15*tmp3*tmp4*tmp77*J_B_5(0, 1) - 1.7763568394002505e-15*tmp80;
      const real_t tmp168 = -tmp161 + 2.9010854378827524*tmp3*tmp4*tmp93*J_B_6(0, 1) - 2.9010854378827524*tmp96;
      const real_t tmp169 = -tmp160;
      const real_t tmp170 = -2.2204460492503131e-16*tmp112 - tmp145 + 2.2204460492503131e-16*tmp2*tmp4*tmp6*J_B_1(0, 0);
      const real_t tmp171 = 1.35138189099158*tmp1*tmp24*tmp4*J_B_2(0, 1) - tmp148 - 1.35138189099158*tmp28;
      const real_t tmp172 = -1.3513818909915798*tmp119 - tmp151 + 1.3513818909915798*tmp2*tmp4*tmp40*J_B_3(0, 0);
      const real_t tmp173 = -2.901085437882748*tmp122 - tmp155 + 2.901085437882748*tmp2*tmp4*tmp58*J_B_4(0, 0);
      const real_t tmp174 = 2.901085437882752*tmp1*tmp4*tmp77*J_B_5(0, 1) - tmp158 - 2.901085437882752*tmp81;
      const real_t tmp175 = tmp12*tmp20;
      const real_t tmp176 = tmp175*(tmp1*tmp4*tmp6*J_B_1(1, 1) - tmp16);
      const real_t tmp177 = 0.087542570791631205*tmp176;
      const real_t tmp178 = tmp12*tmp36;
      const real_t tmp179 = tmp178*(tmp1*tmp24*tmp4*J_B_2(1, 1) - tmp35);
      const real_t tmp180 = 0.087542570791631302*tmp179;
      const real_t tmp181 = tmp1*tmp4*tmp40*J_B_3(1, 1) - tmp48;
      const real_t tmp182 = tmp1*tmp4*tmp58*J_B_4(1, 1) - tmp67;
      const real_t tmp183 = tmp12*tmp89;
      const real_t tmp184 = tmp183*(tmp1*tmp4*tmp77*J_B_5(1, 1) - tmp88);
      const real_t tmp185 = 0.12465175807197719*tmp184;
      const real_t tmp186 = tmp1*tmp4*tmp93*J_B_6(1, 1) - tmp104;
      const real_t tmp187 = tmp12*tmp54;
      const real_t tmp188 = tmp181*tmp187;
      const real_t tmp189 = tmp12*tmp73;
      const real_t tmp190 = tmp182*tmp189;
      const real_t tmp191 = tmp107*tmp12;
      const real_t tmp192 = tmp186*tmp191;
      const real_t tmp193 = tmp175*(-tmp15 + tmp3*tmp4*tmp6*J_B_1(1, 1));
      const real_t tmp194 = 0.063394346744256799*tmp193;
      const real_t tmp195 = tmp178*(tmp24*tmp3*tmp4*J_B_2(1, 1) - tmp34);
      const real_t tmp196 = 0.08754257079163108*tmp195;
      const real_t tmp197 = tmp187*(tmp3*tmp4*tmp40*J_B_3(1, 1) - tmp47);
      const real_t tmp198 = 0.087542570791631358*tmp197;
      const real_t tmp199 = tmp189*(tmp3*tmp4*tmp58*J_B_4(1, 1) - tmp66);
      const real_t tmp200 = 0.034837943122158259*tmp199;
      const real_t tmp201 = tmp183*(tmp3*tmp4*tmp77*J_B_5(1, 1) - tmp87);
      const real_t tmp202 = 0.034837943122158141*tmp201;
      const real_t tmp203 = tmp191*(-tmp103 + tmp3*tmp4*tmp93*J_B_6(1, 1));
      const real_t tmp204 = 0.12465175807197725*tmp203;
      const real_t tmp205 = 0.43241207267228021*tmp16;
      const real_t tmp206 = 0.43241207267228021*tmp18;
      const real_t tmp207 = 1.7837939636638598*tmp15 - 1.7837939636638598*tmp19;
      const real_t tmp208 = -tmp205 + tmp206 - tmp207;
      const real_t tmp209 = tmp13*tmp20;
      const real_t tmp210 = tmp208*tmp209;
      const real_t tmp211 = tmp25*J_B_2(1, 1);
      const real_t tmp212 = tmp1*tmp211;
      const real_t tmp213 = -1.7837939636638587*tmp212 + 1.7837939636638587*tmp35;
      const real_t tmp214 = tmp211*tmp3;
      const real_t tmp215 = -1.7837939636638607*tmp214 + 1.7837939636638607*tmp34;
      const real_t tmp216 = -tmp213 - tmp215;
      const real_t tmp217 = tmp13*tmp36;
      const real_t tmp218 = tmp216*tmp217;
      const real_t tmp219 = 1.7837939636638611*tmp48 - 1.7837939636638611*tmp50;
      const real_t tmp220 = 0.43241207267227955*tmp47 - 0.43241207267227955*tmp51;
      const real_t tmp221 = -tmp219 - tmp220;
      const real_t tmp222 = tmp13*tmp54;
      const real_t tmp223 = tmp221*tmp222;
      const real_t tmp224 = 0.36630485403908164*tmp67;
      const real_t tmp225 = 0.36630485403908164*tmp69;
      const real_t tmp226 = 0.36630485403908519*tmp66 - 0.36630485403908519*tmp70;
      const real_t tmp227 = -tmp224 + tmp225 - tmp226;
      const real_t tmp228 = tmp64*tmp73;
      const real_t tmp229 = tmp227*tmp228;
      const real_t tmp230 = tmp78*J_B_5(1, 1);
      const real_t tmp231 = tmp1*tmp230;
      const real_t tmp232 = -0.36630485403908386*tmp231 + 0.36630485403908386*tmp88;
      const real_t tmp233 = tmp230*tmp3;
      const real_t tmp234 = -3.2673902919218341*tmp233 + 3.2673902919218341*tmp87;
      const real_t tmp235 = -tmp232 - tmp234;
      const real_t tmp236 = tmp64*tmp89;
      const real_t tmp237 = tmp235*tmp236;
      const real_t tmp238 = tmp94*J_B_6(1, 1);
      const real_t tmp239 = tmp238*tmp3;
      const real_t tmp240 = 0.36630485403908253*tmp103 - 0.36630485403908253*tmp239;
      const real_t tmp241 = -3.2673902919218349*tmp1*tmp238 + 3.2673902919218349*tmp104;
      const real_t tmp242 = -tmp240 - tmp241;
      const real_t tmp243 = tmp107*tmp64;
      const real_t tmp244 = tmp242*tmp243;
      const real_t tmp245 = tmp175*tmp208;
      const real_t tmp246 = tmp178*tmp216;
      const real_t tmp247 = tmp183*tmp235;
      const real_t tmp248 = -1.3513818909915796*tmp15 + tmp205 - tmp206 + 1.3513818909915796*tmp3*tmp4*tmp6*J_B_1(1, 1);
      const real_t tmp249 = tmp209*tmp248;
      const real_t tmp250 = tmp213 - 1.3513818909915782*tmp214 + 1.3513818909915782*tmp34;
      const real_t tmp251 = tmp217*tmp250;
      const real_t tmp252 = tmp219 + 1.7763568394002505e-15*tmp47 - 1.7763568394002505e-15*tmp51;
      const real_t tmp253 = tmp222*tmp252;
      const real_t tmp254 = tmp224 - tmp225 + 2.9010854378827515*tmp3*tmp4*tmp58*J_B_4(1, 1) - 2.9010854378827515*tmp66;
      const real_t tmp255 = tmp228*tmp254;
      const real_t tmp256 = tmp232 - 1.7763568394002505e-15*tmp233 + 1.7763568394002505e-15*tmp87;
      const real_t tmp257 = tmp236*tmp256;
      const real_t tmp258 = 2.9010854378827524*tmp103 - 2.9010854378827524*tmp239 + tmp241;
      const real_t tmp259 = tmp243*tmp258;
      const real_t tmp260 = tmp175*tmp248;
      const real_t tmp261 = tmp178*tmp250;
      const real_t tmp262 = tmp183*tmp256;
      const real_t tmp263 = tmp240*tmp243;
      const real_t tmp264 = -2.2204460492503131e-16*tmp16 + 2.2204460492503131e-16*tmp18 + tmp207;
      const real_t tmp265 = tmp209*tmp264;
      const real_t tmp266 = -1.35138189099158*tmp212 + tmp215 + 1.35138189099158*tmp35;
      const real_t tmp267 = tmp217*tmp266;
      const real_t tmp268 = tmp220 - 1.3513818909915798*tmp48 + 1.3513818909915798*tmp50;
      const real_t tmp269 = tmp222*tmp268;
      const real_t tmp270 = tmp226 - 2.901085437882748*tmp67 + 2.901085437882748*tmp69;
      const real_t tmp271 = tmp228*tmp270;
      const real_t tmp272 = -2.901085437882752*tmp231 + tmp234 + 2.901085437882752*tmp88;
      const real_t tmp273 = tmp236*tmp272;
      const real_t tmp274 = tmp191*tmp240;
      const real_t tmp275 = tmp175*tmp264;
      const real_t tmp276 = tmp178*tmp266;
      const real_t tmp277 = tmp187*tmp268;
      const real_t tmp278 = tmp189*tmp270;
      const real_t tmp279 = tmp183*tmp272;
      elMat(0,0) = -tmp101*tmp109 - tmp11*tmp22 - tmp32*tmp38 - tmp45*tmp56 - tmp63*tmp75 - tmp85*tmp91;
      elMat(0,1) = 0.03483794312215821*tmp105*tmp106*tmp12*tmp127*ScalarCoeff0_6 - tmp110*tmp114 - tmp115*tmp117 + 0.063394346744256869*tmp12*tmp120*tmp52*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp123*tmp71*tmp72*ScalarCoeff0_4 - tmp124*tmp126;
      elMat(0,2) = -tmp108*tmp12*tmp142 + tmp110*tmp130 - tmp115*tmp132 - tmp12*tmp135*tmp55 + tmp12*tmp138*tmp74 + tmp124*tmp140;
      elMat(0,3) = -tmp109*tmp162 - tmp146*tmp22 - tmp149*tmp38 - tmp152*tmp56 - tmp156*tmp75 - tmp159*tmp91;
      elMat(0,4) = -tmp109*tmp168 - tmp163*tmp22 - tmp164*tmp38 - tmp165*tmp56 - tmp166*tmp75 - tmp167*tmp91;
      elMat(0,5) = -tmp109*tmp169 - tmp170*tmp22 - tmp171*tmp38 - tmp172*tmp56 - tmp173*tmp75 - tmp174*tmp91;
      elMat(1,0) = 0.03483794312215821*tmp101*tmp106*tmp12*tmp186*ScalarCoeff0_6 - tmp11*tmp177 + 0.063394346744256869*tmp12*tmp181*tmp45*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp182*tmp63*tmp72*ScalarCoeff0_4 - tmp180*tmp32 - tmp185*tmp85;
      elMat(1,1) = -0.068615338550096661*tmp113*tmp176 - 0.068615338550096813*tmp116*tmp179 - 0.035981865872867579*tmp120*tmp188 - 0.022076635451774004*tmp123*tmp190 - 0.2826341861233902*tmp125*tmp184 - 0.022076635451774192*tmp127*tmp192;
      elMat(1,2) = 0.049688106308562137*tmp129*tmp176 - 0.068615338550096633*tmp131*tmp179 + 0.049688106308562283*tmp134*tmp188 - 0.022076635451774126*tmp137*tmp190 + 0.078991214025706399*tmp139*tmp184 + 0.078991214025706594*tmp141*tmp192;
      elMat(1,3) = 0.03483794312215821*tmp106*tmp12*tmp162*tmp186*ScalarCoeff0_6 + 0.063394346744256869*tmp12*tmp152*tmp181*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp156*tmp182*tmp72*ScalarCoeff0_4 - tmp146*tmp177 - tmp149*tmp180 - tmp159*tmp185;
      elMat(1,4) = 0.03483794312215821*tmp106*tmp12*tmp168*tmp186*ScalarCoeff0_6 + 0.063394346744256869*tmp12*tmp165*tmp181*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp166*tmp182*tmp72*ScalarCoeff0_4 - tmp163*tmp177 - tmp164*tmp180 - tmp167*tmp185;
      elMat(1,5) = 0.03483794312215821*tmp169*tmp192 - tmp170*tmp177 - tmp171*tmp180 + 0.063394346744256869*tmp172*tmp188 + 0.034837943122158065*tmp173*tmp190 - tmp174*tmp185;
      elMat(2,0) = -tmp101*tmp204 + tmp11*tmp194 - tmp196*tmp32 - tmp198*tmp45 + tmp200*tmp63 + tmp202*tmp85;
      elMat(2,1) = 0.049688106308562137*tmp113*tmp193 - 0.068615338550096633*tmp116*tmp195 + 0.049688106308562283*tmp120*tmp197 - 0.022076635451774126*tmp123*tmp199 + 0.078991214025706399*tmp125*tmp201 + 0.078991214025706594*tmp127*tmp203;
      elMat(2,2) = -0.035981865872867495*tmp129*tmp193 - 0.068615338550096466*tmp131*tmp195 - 0.068615338550096883*tmp134*tmp197 - 0.022076635451774251*tmp137*tmp199 - 0.022076635451774095*tmp139*tmp201 - 0.28263418612339042*tmp141*tmp203;
      elMat(2,3) = tmp146*tmp194 - tmp149*tmp196 - tmp152*tmp198 + tmp156*tmp200 + tmp159*tmp202 - tmp162*tmp204;
      elMat(2,4) = tmp163*tmp194 - tmp164*tmp196 - tmp165*tmp198 + tmp166*tmp200 + tmp167*tmp202 - tmp168*tmp204;
      elMat(2,5) = -tmp169*tmp204 + tmp170*tmp194 - tmp171*tmp196 - tmp172*tmp198 + tmp173*tmp200 + tmp174*tmp202;
      elMat(3,0) = -tmp101*tmp244 - tmp11*tmp210 - tmp218*tmp32 - tmp223*tmp45 - tmp229*tmp63 - tmp237*tmp85;
      elMat(3,1) = 0.03483794312215821*tmp106*tmp12*tmp127*tmp242*ScalarCoeff0_6 - tmp114*tmp245 - tmp117*tmp246 + 0.063394346744256869*tmp12*tmp120*tmp221*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp123*tmp227*tmp72*ScalarCoeff0_4 - tmp126*tmp247;
      elMat(3,2) = tmp130*tmp245 - tmp132*tmp246 - tmp135*tmp187*tmp221 + tmp138*tmp189*tmp227 + tmp140*tmp247 - tmp142*tmp191*tmp242;
      elMat(3,3) = -tmp146*tmp210 - tmp149*tmp218 - tmp152*tmp223 - tmp156*tmp229 - tmp159*tmp237 - tmp162*tmp244;
      elMat(3,4) = -tmp163*tmp210 - tmp164*tmp218 - tmp165*tmp223 - tmp166*tmp229 - tmp167*tmp237 - tmp168*tmp244;
      elMat(3,5) = -tmp169*tmp244 - tmp170*tmp210 - tmp171*tmp218 - tmp172*tmp223 - tmp173*tmp229 - tmp174*tmp237;
      elMat(4,0) = -tmp101*tmp259 - tmp11*tmp249 - tmp251*tmp32 - tmp253*tmp45 - tmp255*tmp63 - tmp257*tmp85;
      elMat(4,1) = 0.03483794312215821*tmp106*tmp12*tmp127*tmp258*ScalarCoeff0_6 - tmp114*tmp260 - tmp117*tmp261 + 0.063394346744256869*tmp12*tmp120*tmp252*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp12*tmp123*tmp254*tmp72*ScalarCoeff0_4 - tmp126*tmp262;
      elMat(4,2) = tmp130*tmp260 - tmp132*tmp261 - tmp135*tmp187*tmp252 + tmp138*tmp189*tmp254 + tmp140*tmp262 - tmp142*tmp191*tmp258;
      elMat(4,3) = -tmp146*tmp249 - tmp149*tmp251 - tmp152*tmp253 - tmp156*tmp255 - tmp159*tmp257 - tmp162*tmp259;
      elMat(4,4) = -tmp163*tmp249 - tmp164*tmp251 - tmp165*tmp253 - tmp166*tmp255 - tmp167*tmp257 - tmp168*tmp259;
      elMat(4,5) = -tmp169*tmp259 - tmp170*tmp249 - tmp171*tmp251 - tmp172*tmp253 - tmp173*tmp255 - tmp174*tmp257;
      elMat(5,0) = -tmp101*tmp263 - tmp11*tmp265 - tmp267*tmp32 - tmp269*tmp45 - tmp271*tmp63 - tmp273*tmp85;
      elMat(5,1) = -tmp114*tmp275 - tmp117*tmp276 + 0.063394346744256869*tmp120*tmp277 + 0.034837943122158065*tmp123*tmp278 - tmp126*tmp279 + 0.03483794312215821*tmp127*tmp274;
      elMat(5,2) = tmp130*tmp275 - tmp132*tmp276 - tmp135*tmp277 + tmp138*tmp278 + tmp140*tmp279 - tmp142*tmp274;
      elMat(5,3) = -tmp146*tmp265 - tmp149*tmp267 - tmp152*tmp269 - tmp156*tmp271 - tmp159*tmp273 - tmp162*tmp263;
      elMat(5,4) = -tmp163*tmp265 - tmp164*tmp267 - tmp165*tmp269 - tmp166*tmp271 - tmp167*tmp273 - tmp168*tmp263;
      elMat(5,5) = -tmp169*tmp263 - tmp170*tmp265 - tmp171*tmp267 - tmp172*tmp269 - tmp173*tmp271 - tmp174*tmp273;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = coords[0][0] - coords[2][0];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (tmp0*tmp1 - tmp2*tmp3);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(0, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp2*tmp8;
      const real_t tmp11 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp12 = 0.11169079483900564*tmp11;
      const real_t tmp13 = 0.78379396366386*tmp7;
      const real_t tmp14 = tmp13*J_B_1(1, 0);
      const real_t tmp15 = tmp13*J_B_1(1, 1);
      const real_t tmp16 = (tmp0*tmp14 - tmp1*tmp15 + tmp14*tmp2 - tmp15*tmp3)*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp17 = tmp12*tmp16;
      const real_t tmp18 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp19 = 1.0 / (tmp18);
      const real_t tmp20 = tmp19*tmp4;
      const real_t tmp21 = tmp20*J_B_2(0, 0);
      const real_t tmp22 = tmp0*tmp21;
      const real_t tmp23 = tmp2*tmp21;
      const real_t tmp24 = tmp20*J_B_2(0, 1);
      const real_t tmp25 = tmp1*tmp24;
      const real_t tmp26 = tmp24*tmp3;
      const real_t tmp27 = 0.56758792732771934*tmp20*J_B_2(1, 0);
      const real_t tmp28 = (-tmp0*tmp27 + 0.56758792732771934*tmp1*tmp19*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp19*tmp3*tmp4*J_B_2(1, 1) - tmp2*tmp27)*std::abs(tmp18)*ScalarCoeff0_2;
      const real_t tmp29 = tmp12*tmp28;
      const real_t tmp30 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp31 = 1.0 / (tmp30);
      const real_t tmp32 = tmp31*tmp4;
      const real_t tmp33 = tmp32*J_B_3(0, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp2*tmp33;
      const real_t tmp36 = 0.78379396366385934*tmp32;
      const real_t tmp37 = tmp36*J_B_3(1, 0);
      const real_t tmp38 = tmp36*J_B_3(1, 1);
      const real_t tmp39 = tmp0*tmp37 - tmp1*tmp38 + tmp2*tmp37 - tmp3*tmp38;
      const real_t tmp40 = std::abs(tmp30);
      const real_t tmp41 = tmp39*tmp40*ScalarCoeff0_3;
      const real_t tmp42 = tmp12*tmp41;
      const real_t tmp43 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp44 = 1.0 / (tmp43);
      const real_t tmp45 = tmp4*tmp44;
      const real_t tmp46 = tmp45*J_B_4(0, 0);
      const real_t tmp47 = tmp0*tmp46;
      const real_t tmp48 = tmp2*tmp46;
      const real_t tmp49 = 0.054975871827660817*tmp11;
      const real_t tmp50 = 2.2673902919218332*tmp45;
      const real_t tmp51 = tmp50*J_B_4(1, 0);
      const real_t tmp52 = tmp50*J_B_4(1, 1);
      const real_t tmp53 = tmp0*tmp51 - tmp1*tmp52 + tmp2*tmp51 - tmp3*tmp52;
      const real_t tmp54 = std::abs(tmp43);
      const real_t tmp55 = tmp53*tmp54*ScalarCoeff0_4;
      const real_t tmp56 = tmp49*tmp55;
      const real_t tmp57 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp58 = 1.0 / (tmp57);
      const real_t tmp59 = tmp4*tmp58;
      const real_t tmp60 = tmp59*J_B_5(0, 0);
      const real_t tmp61 = tmp0*tmp60;
      const real_t tmp62 = tmp2*tmp60;
      const real_t tmp63 = tmp59*J_B_5(0, 1);
      const real_t tmp64 = tmp1*tmp63;
      const real_t tmp65 = tmp3*tmp63;
      const real_t tmp66 = 0.63369514596091792*tmp59*J_B_5(1, 0);
      const real_t tmp67 = (-tmp0*tmp66 + 0.63369514596091792*tmp1*tmp4*tmp58*J_B_5(1, 1) - tmp2*tmp66 + 0.63369514596091792*tmp3*tmp4*tmp58*J_B_5(1, 1))*std::abs(tmp57)*ScalarCoeff0_5;
      const real_t tmp68 = tmp49*tmp67;
      const real_t tmp69 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp70 = 1.0 / (tmp69);
      const real_t tmp71 = tmp4*tmp70;
      const real_t tmp72 = tmp71*J_B_6(0, 0);
      const real_t tmp73 = tmp0*tmp72;
      const real_t tmp74 = tmp2*tmp72;
      const real_t tmp75 = tmp71*J_B_6(0, 1);
      const real_t tmp76 = tmp1*tmp75;
      const real_t tmp77 = tmp3*tmp75;
      const real_t tmp78 = 0.63369514596091747*tmp71*J_B_6(1, 0);
      const real_t tmp79 = -tmp0*tmp78 + 0.63369514596091747*tmp1*tmp4*tmp70*J_B_6(1, 1) - tmp2*tmp78 + 0.63369514596091747*tmp3*tmp4*tmp70*J_B_6(1, 1);
      const real_t tmp80 = std::abs(tmp69);
      const real_t tmp81 = tmp79*tmp80*ScalarCoeff0_6;
      const real_t tmp82 = tmp49*tmp81;
      const real_t tmp83 = tmp7*J_B_1(0, 1);
      const real_t tmp84 = tmp1*tmp83;
      const real_t tmp85 = tmp11*tmp16;
      const real_t tmp86 = tmp11*tmp28;
      const real_t tmp87 = tmp32*J_B_3(0, 1);
      const real_t tmp88 = tmp1*tmp87;
      const real_t tmp89 = tmp45*J_B_4(0, 1);
      const real_t tmp90 = tmp1*tmp89;
      const real_t tmp91 = tmp11*tmp67;
      const real_t tmp92 = tmp3*tmp83;
      const real_t tmp93 = tmp3*tmp87;
      const real_t tmp94 = tmp3*tmp89;
      const real_t tmp95 = 0.43241207267228021*tmp10;
      const real_t tmp96 = 0.43241207267228021*tmp84;
      const real_t tmp97 = 1.7837939636638598*tmp9 - 1.7837939636638598*tmp92;
      const real_t tmp98 = 1.7837939636638587*tmp23 - 1.7837939636638587*tmp25;
      const real_t tmp99 = 1.7837939636638607*tmp22 - 1.7837939636638607*tmp26;
      const real_t tmp100 = 1.7837939636638611*tmp35 - 1.7837939636638611*tmp88;
      const real_t tmp101 = 0.43241207267227955*tmp34 - 0.43241207267227955*tmp93;
      const real_t tmp102 = 0.36630485403908164*tmp48;
      const real_t tmp103 = 0.36630485403908164*tmp90;
      const real_t tmp104 = 0.36630485403908519*tmp47 - 0.36630485403908519*tmp94;
      const real_t tmp105 = 0.36630485403908386*tmp62 - 0.36630485403908386*tmp64;
      const real_t tmp106 = 3.2673902919218341*tmp61 - 3.2673902919218341*tmp65;
      const real_t tmp107 = 0.36630485403908253*tmp73 - 0.36630485403908253*tmp77;
      const real_t tmp108 = 3.2673902919218349*tmp74 - 3.2673902919218349*tmp76;
      elMat(0,0) = -tmp17*(0.78379396366386*tmp1*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp10 + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp9) - tmp29*(0.56758792732771934*tmp22 + 0.56758792732771934*tmp23 - 0.56758792732771934*tmp25 - 0.56758792732771934*tmp26) - tmp42*(0.78379396366385934*tmp1*tmp31*tmp4*J_B_3(0, 1) + 0.78379396366385934*tmp3*tmp31*tmp4*J_B_3(0, 1) - 0.78379396366385934*tmp34 - 0.78379396366385934*tmp35) - tmp56*(2.2673902919218332*tmp1*tmp4*tmp44*J_B_4(0, 1) + 2.2673902919218332*tmp3*tmp4*tmp44*J_B_4(0, 1) - 2.2673902919218332*tmp47 - 2.2673902919218332*tmp48) - tmp68*(0.63369514596091792*tmp61 + 0.63369514596091792*tmp62 - 0.63369514596091792*tmp64 - 0.63369514596091792*tmp65) - tmp82*(0.63369514596091747*tmp73 + 0.63369514596091747*tmp74 - 0.63369514596091747*tmp76 - 0.63369514596091747*tmp77);
      elMat(0,1) = 0.063394346744256869*tmp11*tmp39*tmp40*(tmp35 - tmp88)*ScalarCoeff0_3 + 0.034837943122158065*tmp11*tmp53*tmp54*(tmp48 - tmp90)*ScalarCoeff0_4 + 0.03483794312215821*tmp11*tmp79*tmp80*(tmp74 - tmp76)*ScalarCoeff0_6 - 0.087542570791631205*tmp85*(tmp10 - tmp84) - 0.087542570791631302*tmp86*(tmp23 - tmp25) - 0.12465175807197719*tmp91*(tmp62 - tmp64);
      elMat(0,2) = -0.087542570791631358*tmp11*tmp41*(tmp34 - tmp93) + 0.034837943122158259*tmp11*tmp55*(tmp47 - tmp94) - 0.12465175807197725*tmp11*tmp81*(tmp73 - tmp77) + 0.063394346744256799*tmp85*(tmp9 - tmp92) - 0.08754257079163108*tmp86*(tmp22 - tmp26) + 0.034837943122158141*tmp91*(tmp61 - tmp65);
      elMat(0,3) = -tmp17*(tmp95 - tmp96 + tmp97) - tmp29*(tmp98 + tmp99) - tmp42*(tmp100 + tmp101) - tmp56*(tmp102 - tmp103 + tmp104) - tmp68*(tmp105 + tmp106) - tmp82*(tmp107 + tmp108);
      elMat(0,4) = -tmp17*(1.3513818909915796*tmp9 - 1.3513818909915796*tmp92 - tmp95 + tmp96) - tmp29*(1.3513818909915782*tmp19*tmp3*tmp4*J_B_2(0, 1) - 1.3513818909915782*tmp22 - tmp98) - tmp42*(-tmp100 + 1.7763568394002505e-15*tmp3*tmp31*tmp4*J_B_3(0, 1) - 1.7763568394002505e-15*tmp34) - tmp56*(-tmp102 + tmp103 + 2.9010854378827515*tmp47 - 2.9010854378827515*tmp94) - tmp68*(-tmp105 + 1.7763568394002505e-15*tmp3*tmp4*tmp58*J_B_5(0, 1) - 1.7763568394002505e-15*tmp61) - tmp82*(-tmp108 + 2.9010854378827524*tmp3*tmp4*tmp70*J_B_6(0, 1) - 2.9010854378827524*tmp73);
      elMat(0,5) = tmp107*tmp82 - tmp17*(2.2204460492503131e-16*tmp2*tmp4*tmp6*J_B_1(0, 0) - 2.2204460492503131e-16*tmp84 - tmp97) - tmp29*(1.35138189099158*tmp1*tmp19*tmp4*J_B_2(0, 1) - 1.35138189099158*tmp23 - tmp99) - tmp42*(-tmp101 + 1.3513818909915798*tmp2*tmp31*tmp4*J_B_3(0, 0) - 1.3513818909915798*tmp88) - tmp56*(-tmp104 + 2.901085437882748*tmp2*tmp4*tmp44*J_B_4(0, 0) - 2.901085437882748*tmp90) - tmp68*(2.901085437882752*tmp1*tmp4*tmp58*J_B_5(0, 1) - tmp106 - 2.901085437882752*tmp62);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp8 = -tmp7 + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp9 = -coords[0][2] + coords[3][2];
      const real_t tmp10 = -coords[0][1] + coords[3][1];
      const real_t tmp11 = -coords[0][2] + coords[1][2];
      const real_t tmp12 = -coords[0][0] + coords[3][0];
      const real_t tmp13 = -coords[0][2] + coords[2][2];
      const real_t tmp14 = tmp13*tmp4;
      const real_t tmp15 = tmp0*tmp10;
      const real_t tmp16 = tmp11*tmp12;
      const real_t tmp17 = 1.0 / (-tmp1*tmp16 + tmp10*tmp11*tmp3 + tmp12*tmp14 - tmp13*tmp15 + tmp2*tmp9 - tmp5*tmp9);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp18*J_B_1(1, 1) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) - tmp7*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp17*tmp22;
      const real_t tmp24 = tmp23*tmp8;
      const real_t tmp25 = tmp24*tmp6;
      const real_t tmp26 = tmp12*tmp4 - tmp15;
      const real_t tmp27 = tmp24*tmp26;
      const real_t tmp28 = -tmp0*tmp13 + tmp11*tmp3;
      const real_t tmp29 = tmp18 - tmp20;
      const real_t tmp30 = tmp23*tmp29;
      const real_t tmp31 = tmp28*tmp30;
      const real_t tmp32 = tmp0*tmp9 - tmp16;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = -tmp1*tmp12 + tmp10*tmp3;
      const real_t tmp35 = tmp24*tmp34;
      const real_t tmp36 = tmp12*tmp13 - tmp3*tmp9;
      const real_t tmp37 = tmp30*tmp36;
      const real_t tmp38 = -tmp1*tmp11 + tmp14;
      const real_t tmp39 = -tmp19 + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp40 = tmp23*tmp39;
      const real_t tmp41 = tmp38*tmp40;
      const real_t tmp42 = tmp10*tmp11 - tmp4*tmp9;
      const real_t tmp43 = tmp40*tmp42;
      const real_t tmp44 = tmp1*tmp9 - tmp10*tmp13;
      const real_t tmp45 = tmp40*tmp44;
      const real_t tmp46 = 0.55279693041046674*tmp25 + 0.55279693041046674*tmp27 + 0.55279693041046674*tmp31 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp35 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45;
      const real_t tmp47 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp48 = tmp23*tmp47;
      const real_t tmp49 = tmp48*tmp6;
      const real_t tmp50 = tmp26*tmp48;
      const real_t tmp51 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp52 = tmp23*tmp51;
      const real_t tmp53 = tmp28*tmp52;
      const real_t tmp54 = tmp32*tmp52;
      const real_t tmp55 = tmp34*tmp48;
      const real_t tmp56 = tmp36*tmp52;
      const real_t tmp57 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp58 = tmp23*tmp57;
      const real_t tmp59 = tmp38*tmp58;
      const real_t tmp60 = tmp42*tmp58;
      const real_t tmp61 = tmp44*tmp58;
      const real_t tmp62 = coords[0][0]*coords[1][1];
      const real_t tmp63 = coords[0][0]*coords[1][2];
      const real_t tmp64 = coords[2][1]*coords[3][2];
      const real_t tmp65 = coords[0][1]*coords[1][0];
      const real_t tmp66 = coords[0][1]*coords[1][2];
      const real_t tmp67 = coords[2][2]*coords[3][0];
      const real_t tmp68 = coords[0][2]*coords[1][0];
      const real_t tmp69 = coords[0][2]*coords[1][1];
      const real_t tmp70 = coords[2][0]*coords[3][1];
      const real_t tmp71 = coords[2][2]*coords[3][1];
      const real_t tmp72 = coords[2][0]*coords[3][2];
      const real_t tmp73 = coords[2][1]*coords[3][0];
      const real_t tmp74 = std::abs(coords[0][0]*tmp64 - coords[0][0]*tmp71 + coords[0][1]*tmp67 - coords[0][1]*tmp72 + coords[0][2]*tmp70 - coords[0][2]*tmp73 - coords[1][0]*tmp64 + coords[1][0]*tmp71 - coords[1][1]*tmp67 + coords[1][1]*tmp72 - coords[1][2]*tmp70 + coords[1][2]*tmp73 + coords[2][0]*tmp66 - coords[2][0]*tmp69 - coords[2][1]*tmp63 + coords[2][1]*tmp68 + coords[2][2]*tmp62 - coords[2][2]*tmp65 - coords[3][0]*tmp66 + coords[3][0]*tmp69 + coords[3][1]*tmp63 - coords[3][1]*tmp68 - coords[3][2]*tmp62 + coords[3][2]*tmp65);
      const real_t tmp75 = tmp74*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp76 = tmp75*(0.55279693041046674*tmp49 + 0.55279693041046674*tmp50 + 0.55279693041046674*tmp53 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp59 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61);
      const real_t tmp77 = 0.011829781572832234*tmp76;
      const real_t tmp78 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp79 = -tmp78 + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp80 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp81 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp82 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp83 = -tmp78*J_B_10(1, 2) + tmp80*J_B_10(1, 1) - tmp81*J_B_10(1, 0) - tmp82*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp84 = 1.0 / (tmp83);
      const real_t tmp85 = tmp17*tmp84;
      const real_t tmp86 = tmp79*tmp85;
      const real_t tmp87 = tmp6*tmp86;
      const real_t tmp88 = tmp26*tmp86;
      const real_t tmp89 = tmp80 - tmp82;
      const real_t tmp90 = tmp85*tmp89;
      const real_t tmp91 = tmp28*tmp90;
      const real_t tmp92 = tmp32*tmp90;
      const real_t tmp93 = tmp34*tmp86;
      const real_t tmp94 = tmp36*tmp90;
      const real_t tmp95 = -tmp81 + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp96 = tmp85*tmp95;
      const real_t tmp97 = tmp38*tmp96;
      const real_t tmp98 = tmp42*tmp96;
      const real_t tmp99 = tmp44*tmp96;
      const real_t tmp100 = 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88 + 0.60805118540288361*tmp91 + 0.60805118540288361*tmp92 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp97 + 0.60805118540288361*tmp98 + 0.60805118540288361*tmp99;
      const real_t tmp101 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp102 = tmp101*tmp85;
      const real_t tmp103 = tmp102*tmp6;
      const real_t tmp104 = tmp102*tmp26;
      const real_t tmp105 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp106 = tmp105*tmp85;
      const real_t tmp107 = tmp106*tmp28;
      const real_t tmp108 = tmp106*tmp32;
      const real_t tmp109 = tmp102*tmp34;
      const real_t tmp110 = tmp106*tmp36;
      const real_t tmp111 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp112 = tmp111*tmp85;
      const real_t tmp113 = tmp112*tmp38;
      const real_t tmp114 = tmp112*tmp42;
      const real_t tmp115 = tmp112*tmp44;
      const real_t tmp116 = tmp74*std::abs(tmp83)*ScalarCoeff0_10;
      const real_t tmp117 = tmp116*(0.60805118540288361*tmp103 + 0.60805118540288361*tmp104 + 0.60805118540288361*tmp107 + 0.60805118540288361*tmp108 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp113 + 0.60805118540288361*tmp114 + 0.60805118540288361*tmp115);
      const real_t tmp118 = 0.0061414854617707626*tmp117;
      const real_t tmp119 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp120 = -tmp119 + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp121 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp122 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp123 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp124 = -tmp119*J_B_11(1, 2) + tmp121*J_B_11(1, 1) - tmp122*J_B_11(1, 0) - tmp123*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp125 = 1.0 / (tmp124);
      const real_t tmp126 = tmp125*tmp17;
      const real_t tmp127 = tmp120*tmp126;
      const real_t tmp128 = tmp127*tmp6;
      const real_t tmp129 = tmp127*tmp26;
      const real_t tmp130 = tmp121 - tmp123;
      const real_t tmp131 = tmp126*tmp130;
      const real_t tmp132 = tmp131*tmp28;
      const real_t tmp133 = tmp131*tmp32;
      const real_t tmp134 = tmp127*tmp34;
      const real_t tmp135 = tmp131*tmp36;
      const real_t tmp136 = -tmp122 + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp137 = tmp126*tmp136;
      const real_t tmp138 = tmp137*tmp38;
      const real_t tmp139 = tmp137*tmp42;
      const real_t tmp140 = tmp137*tmp44;
      const real_t tmp141 = -2.0850189307815055*tmp128 - 2.0850189307815055*tmp129 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp133 - 2.0850189307815055*tmp134 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp139 - 2.0850189307815055*tmp140;
      const real_t tmp142 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp143 = tmp126*tmp142;
      const real_t tmp144 = tmp143*tmp6;
      const real_t tmp145 = tmp143*tmp26;
      const real_t tmp146 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp147 = tmp126*tmp146;
      const real_t tmp148 = tmp147*tmp28;
      const real_t tmp149 = tmp147*tmp32;
      const real_t tmp150 = tmp143*tmp34;
      const real_t tmp151 = tmp147*tmp36;
      const real_t tmp152 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp153 = tmp126*tmp152;
      const real_t tmp154 = tmp153*tmp38;
      const real_t tmp155 = tmp153*tmp42;
      const real_t tmp156 = tmp153*tmp44;
      const real_t tmp157 = tmp74*std::abs(tmp124)*ScalarCoeff0_11;
      const real_t tmp158 = tmp157*(-2.0850189307815055*tmp144 - 2.0850189307815055*tmp145 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp149 - 2.0850189307815055*tmp150 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp155 - 2.0850189307815055*tmp156);
      const real_t tmp159 = 0.0043612323249822204*tmp158;
      const real_t tmp160 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp161 = -tmp160 + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp162 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp163 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp164 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp165 = -tmp160*J_B_2(1, 2) + tmp162*J_B_2(1, 1) - tmp163*J_B_2(1, 0) - tmp164*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp166 = 1.0 / (tmp165);
      const real_t tmp167 = tmp166*tmp17;
      const real_t tmp168 = tmp161*tmp167;
      const real_t tmp169 = tmp168*tmp6;
      const real_t tmp170 = tmp168*tmp26;
      const real_t tmp171 = tmp162 - tmp164;
      const real_t tmp172 = tmp167*tmp171;
      const real_t tmp173 = tmp172*tmp28;
      const real_t tmp174 = tmp172*tmp32;
      const real_t tmp175 = tmp168*tmp34;
      const real_t tmp176 = tmp172*tmp36;
      const real_t tmp177 = -tmp163 + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp178 = tmp167*tmp177;
      const real_t tmp179 = tmp178*tmp38;
      const real_t tmp180 = tmp178*tmp42;
      const real_t tmp181 = tmp178*tmp44;
      const real_t tmp182 = -0.29317593934991559*tmp169 - 0.29317593934991559*tmp170 - 0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp175 - 0.29317593934991559*tmp176 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp181;
      const real_t tmp183 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp184 = tmp167*tmp183;
      const real_t tmp185 = tmp184*tmp6;
      const real_t tmp186 = tmp184*tmp26;
      const real_t tmp187 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp188 = tmp167*tmp187;
      const real_t tmp189 = tmp188*tmp28;
      const real_t tmp190 = tmp188*tmp32;
      const real_t tmp191 = tmp184*tmp34;
      const real_t tmp192 = tmp188*tmp36;
      const real_t tmp193 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp194 = tmp167*tmp193;
      const real_t tmp195 = tmp194*tmp38;
      const real_t tmp196 = tmp194*tmp42;
      const real_t tmp197 = tmp194*tmp44;
      const real_t tmp198 = tmp74*std::abs(tmp165)*ScalarCoeff0_2;
      const real_t tmp199 = tmp198*(-0.29317593934991559*tmp185 - 0.29317593934991559*tmp186 - 0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp191 - 0.29317593934991559*tmp192 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp197);
      const real_t tmp200 = 0.012248248047610821*tmp199;
      const real_t tmp201 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp202 = -tmp201 + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp203 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp204 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp205 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp206 = -tmp201*J_B_3(1, 2) + tmp203*J_B_3(1, 1) - tmp204*J_B_3(1, 0) - tmp205*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp207 = 1.0 / (tmp206);
      const real_t tmp208 = tmp17*tmp207;
      const real_t tmp209 = tmp202*tmp208;
      const real_t tmp210 = tmp209*tmp6;
      const real_t tmp211 = tmp209*tmp26;
      const real_t tmp212 = tmp203 - tmp205;
      const real_t tmp213 = tmp208*tmp212;
      const real_t tmp214 = tmp213*tmp28;
      const real_t tmp215 = tmp213*tmp32;
      const real_t tmp216 = tmp209*tmp34;
      const real_t tmp217 = tmp213*tmp36;
      const real_t tmp218 = -tmp204 + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp219 = tmp208*tmp218;
      const real_t tmp220 = tmp219*tmp38;
      const real_t tmp221 = tmp219*tmp42;
      const real_t tmp222 = tmp219*tmp44;
      const real_t tmp223 = 0.56151037867223397*tmp210 + 0.56151037867223397*tmp211 + 0.56151037867223397*tmp214 + 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp217 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222;
      const real_t tmp224 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp225 = tmp208*tmp224;
      const real_t tmp226 = tmp225*tmp6;
      const real_t tmp227 = tmp225*tmp26;
      const real_t tmp228 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp229 = tmp208*tmp228;
      const real_t tmp230 = tmp229*tmp28;
      const real_t tmp231 = tmp229*tmp32;
      const real_t tmp232 = tmp225*tmp34;
      const real_t tmp233 = tmp229*tmp36;
      const real_t tmp234 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp235 = tmp208*tmp234;
      const real_t tmp236 = tmp235*tmp38;
      const real_t tmp237 = tmp235*tmp42;
      const real_t tmp238 = tmp235*tmp44;
      const real_t tmp239 = tmp74*std::abs(tmp206)*ScalarCoeff0_3;
      const real_t tmp240 = tmp239*(0.56151037867223397*tmp226 + 0.56151037867223397*tmp227 + 0.56151037867223397*tmp230 + 0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp233 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238);
      const real_t tmp241 = 0.017219568446249611*tmp240;
      const real_t tmp242 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp243 = -tmp242 + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp244 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp245 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp246 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp247 = -tmp242*J_B_4(1, 2) + tmp244*J_B_4(1, 1) - tmp245*J_B_4(1, 0) - tmp246*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp248 = 1.0 / (tmp247);
      const real_t tmp249 = tmp17*tmp248;
      const real_t tmp250 = tmp243*tmp249;
      const real_t tmp251 = tmp250*tmp6;
      const real_t tmp252 = tmp250*tmp26;
      const real_t tmp253 = tmp244 - tmp246;
      const real_t tmp254 = tmp249*tmp253;
      const real_t tmp255 = tmp254*tmp28;
      const real_t tmp256 = tmp254*tmp32;
      const real_t tmp257 = tmp250*tmp34;
      const real_t tmp258 = tmp254*tmp36;
      const real_t tmp259 = -tmp245 + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp260 = tmp249*tmp259;
      const real_t tmp261 = tmp260*tmp38;
      const real_t tmp262 = tmp260*tmp42;
      const real_t tmp263 = tmp260*tmp44;
      const real_t tmp264 = -0.31389282688815401*tmp251 - 0.31389282688815401*tmp252 - 0.31389282688815401*tmp255 - 0.31389282688815401*tmp256 - 0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263;
      const real_t tmp265 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp266 = tmp249*tmp265;
      const real_t tmp267 = tmp266*tmp6;
      const real_t tmp268 = tmp26*tmp266;
      const real_t tmp269 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp270 = tmp249*tmp269;
      const real_t tmp271 = tmp270*tmp28;
      const real_t tmp272 = tmp270*tmp32;
      const real_t tmp273 = tmp266*tmp34;
      const real_t tmp274 = tmp270*tmp36;
      const real_t tmp275 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp276 = tmp249*tmp275;
      const real_t tmp277 = tmp276*tmp38;
      const real_t tmp278 = tmp276*tmp42;
      const real_t tmp279 = tmp276*tmp44;
      const real_t tmp280 = tmp74*std::abs(tmp247)*ScalarCoeff0_4;
      const real_t tmp281 = tmp280*(-0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp271 - 0.31389282688815401*tmp272 - 0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279);
      const real_t tmp282 = 0.021490090227737114*tmp281;
      const real_t tmp283 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp284 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp285 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp286 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp287 = -tmp283*J_B_5(1, 2) + tmp284*J_B_5(1, 1) - tmp285*J_B_5(1, 0) - tmp286*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp288 = tmp17/tmp287;
      const real_t tmp289 = tmp288*(-tmp283 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = tmp26*tmp289;
      const real_t tmp292 = tmp288*(tmp284 - tmp286);
      const real_t tmp293 = tmp28*tmp292;
      const real_t tmp294 = tmp292*tmp32;
      const real_t tmp295 = tmp289*tmp34;
      const real_t tmp296 = tmp292*tmp36;
      const real_t tmp297 = tmp288*(-tmp285 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp298 = tmp297*tmp38;
      const real_t tmp299 = tmp297*tmp42;
      const real_t tmp300 = tmp297*tmp44;
      const real_t tmp301 = 0.99043597017024343*tmp290 + 0.99043597017024343*tmp291 + 0.99043597017024343*tmp293 + 0.99043597017024343*tmp294 + 0.99043597017024343*tmp295 + 0.99043597017024343*tmp296 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp299 + 0.99043597017024343*tmp300;
      const real_t tmp302 = tmp288*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp303 = tmp302*tmp6;
      const real_t tmp304 = tmp26*tmp302;
      const real_t tmp305 = tmp288*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp306 = tmp28*tmp305;
      const real_t tmp307 = tmp305*tmp32;
      const real_t tmp308 = tmp302*tmp34;
      const real_t tmp309 = tmp305*tmp36;
      const real_t tmp310 = tmp288*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp311 = tmp310*tmp38;
      const real_t tmp312 = tmp310*tmp42;
      const real_t tmp313 = tmp310*tmp44;
      const real_t tmp314 = tmp74*std::abs(tmp287)*ScalarCoeff0_5;
      const real_t tmp315 = tmp314*(0.99043597017024343*tmp303 + 0.99043597017024343*tmp304 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307 + 0.99043597017024343*tmp308 + 0.99043597017024343*tmp309 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp312 + 0.99043597017024343*tmp313);
      const real_t tmp316 = 0.0084625239161731543*tmp315;
      const real_t tmp317 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp318 = -tmp317 + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp319 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp320 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp321 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp322 = -tmp317*J_B_6(1, 2) + tmp319*J_B_6(1, 1) - tmp320*J_B_6(1, 0) - tmp321*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp323 = 1.0 / (tmp322);
      const real_t tmp324 = tmp17*tmp323;
      const real_t tmp325 = tmp318*tmp324;
      const real_t tmp326 = tmp325*tmp6;
      const real_t tmp327 = tmp26*tmp325;
      const real_t tmp328 = tmp319 - tmp321;
      const real_t tmp329 = tmp324*tmp328;
      const real_t tmp330 = tmp28*tmp329;
      const real_t tmp331 = tmp32*tmp329;
      const real_t tmp332 = tmp325*tmp34;
      const real_t tmp333 = tmp329*tmp36;
      const real_t tmp334 = -tmp320 + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp335 = tmp324*tmp334;
      const real_t tmp336 = tmp335*tmp38;
      const real_t tmp337 = tmp335*tmp42;
      const real_t tmp338 = tmp335*tmp44;
      const real_t tmp339 = -1.2518910405721839*tmp326 - 1.2518910405721839*tmp327 - 1.2518910405721839*tmp330 - 1.2518910405721839*tmp331 - 1.2518910405721839*tmp332 - 1.2518910405721839*tmp333 - 1.2518910405721839*tmp336 - 1.2518910405721839*tmp337 - 1.2518910405721839*tmp338;
      const real_t tmp340 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp341 = tmp324*tmp340;
      const real_t tmp342 = tmp341*tmp6;
      const real_t tmp343 = tmp26*tmp341;
      const real_t tmp344 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp345 = tmp324*tmp344;
      const real_t tmp346 = tmp28*tmp345;
      const real_t tmp347 = tmp32*tmp345;
      const real_t tmp348 = tmp34*tmp341;
      const real_t tmp349 = tmp345*tmp36;
      const real_t tmp350 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp351 = tmp324*tmp350;
      const real_t tmp352 = tmp351*tmp38;
      const real_t tmp353 = tmp351*tmp42;
      const real_t tmp354 = tmp351*tmp44;
      const real_t tmp355 = tmp74*std::abs(tmp322)*ScalarCoeff0_6;
      const real_t tmp356 = tmp355*(-1.2518910405721839*tmp342 - 1.2518910405721839*tmp343 - 1.2518910405721839*tmp346 - 1.2518910405721839*tmp347 - 1.2518910405721839*tmp348 - 1.2518910405721839*tmp349 - 1.2518910405721839*tmp352 - 1.2518910405721839*tmp353 - 1.2518910405721839*tmp354);
      const real_t tmp357 = 0.0088251866742250357*tmp356;
      const real_t tmp358 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp359 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp360 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp361 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp362 = -tmp358*J_B_7(1, 2) + tmp359*J_B_7(1, 1) - tmp360*J_B_7(1, 0) - tmp361*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp363 = tmp17/tmp362;
      const real_t tmp364 = tmp363*(-tmp358 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp365 = tmp364*tmp6;
      const real_t tmp366 = tmp26*tmp364;
      const real_t tmp367 = tmp363*(tmp359 - tmp361);
      const real_t tmp368 = tmp28*tmp367;
      const real_t tmp369 = tmp32*tmp367;
      const real_t tmp370 = tmp34*tmp364;
      const real_t tmp371 = tmp36*tmp367;
      const real_t tmp372 = tmp363*(-tmp360 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp373 = tmp372*tmp38;
      const real_t tmp374 = tmp372*tmp42;
      const real_t tmp375 = tmp372*tmp44;
      const real_t tmp376 = 0.77270393148826533*tmp365 + 0.77270393148826533*tmp366 + 0.77270393148826533*tmp368 + 0.77270393148826533*tmp369 + 0.77270393148826533*tmp370 + 0.77270393148826533*tmp371 + 0.77270393148826533*tmp373 + 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375;
      const real_t tmp377 = tmp363*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp378 = tmp377*tmp6;
      const real_t tmp379 = tmp26*tmp377;
      const real_t tmp380 = tmp363*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp381 = tmp28*tmp380;
      const real_t tmp382 = tmp32*tmp380;
      const real_t tmp383 = tmp34*tmp377;
      const real_t tmp384 = tmp36*tmp380;
      const real_t tmp385 = tmp363*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp386 = tmp38*tmp385;
      const real_t tmp387 = tmp385*tmp42;
      const real_t tmp388 = tmp385*tmp44;
      const real_t tmp389 = tmp74*std::abs(tmp362)*ScalarCoeff0_7;
      const real_t tmp390 = tmp389*(0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp381 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384 + 0.77270393148826533*tmp386 + 0.77270393148826533*tmp387 + 0.77270393148826533*tmp388);
      const real_t tmp391 = 0.0077188851041817101*tmp390;
      const real_t tmp392 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp393 = -tmp392 + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp394 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp395 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp396 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp397 = -tmp392*J_B_8(1, 2) + tmp394*J_B_8(1, 1) - tmp395*J_B_8(1, 0) - tmp396*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp398 = 1.0 / (tmp397);
      const real_t tmp399 = tmp17*tmp398;
      const real_t tmp400 = tmp393*tmp399;
      const real_t tmp401 = tmp400*tmp6;
      const real_t tmp402 = tmp26*tmp400;
      const real_t tmp403 = tmp394 - tmp396;
      const real_t tmp404 = tmp399*tmp403;
      const real_t tmp405 = tmp28*tmp404;
      const real_t tmp406 = tmp32*tmp404;
      const real_t tmp407 = tmp34*tmp400;
      const real_t tmp408 = tmp36*tmp404;
      const real_t tmp409 = -tmp395 + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp410 = tmp399*tmp409;
      const real_t tmp411 = tmp38*tmp410;
      const real_t tmp412 = tmp410*tmp42;
      const real_t tmp413 = tmp410*tmp44;
      const real_t tmp414 = -0.9184440441026207*tmp401 - 0.9184440441026207*tmp402 - 0.9184440441026207*tmp405 - 0.9184440441026207*tmp406 - 0.9184440441026207*tmp407 - 0.9184440441026207*tmp408 - 0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp413;
      const real_t tmp415 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp416 = tmp399*tmp415;
      const real_t tmp417 = tmp416*tmp6;
      const real_t tmp418 = tmp26*tmp416;
      const real_t tmp419 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp420 = tmp399*tmp419;
      const real_t tmp421 = tmp28*tmp420;
      const real_t tmp422 = tmp32*tmp420;
      const real_t tmp423 = tmp34*tmp416;
      const real_t tmp424 = tmp36*tmp420;
      const real_t tmp425 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp426 = tmp399*tmp425;
      const real_t tmp427 = tmp38*tmp426;
      const real_t tmp428 = tmp42*tmp426;
      const real_t tmp429 = tmp426*tmp44;
      const real_t tmp430 = tmp74*std::abs(tmp397)*ScalarCoeff0_8;
      const real_t tmp431 = tmp430*(-0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423 - 0.9184440441026207*tmp424 - 0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp429);
      const real_t tmp432 = 0.006659242794062166*tmp431;
      const real_t tmp433 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp434 = -tmp433 + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp435 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp436 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp437 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp438 = -tmp433*J_B_9(1, 2) + tmp435*J_B_9(1, 1) - tmp436*J_B_9(1, 0) - tmp437*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp439 = 1.0 / (tmp438);
      const real_t tmp440 = tmp17*tmp439;
      const real_t tmp441 = tmp434*tmp440;
      const real_t tmp442 = tmp441*tmp6;
      const real_t tmp443 = tmp26*tmp441;
      const real_t tmp444 = tmp435 - tmp437;
      const real_t tmp445 = tmp440*tmp444;
      const real_t tmp446 = tmp28*tmp445;
      const real_t tmp447 = tmp32*tmp445;
      const real_t tmp448 = tmp34*tmp441;
      const real_t tmp449 = tmp36*tmp445;
      const real_t tmp450 = -tmp436 + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp451 = tmp440*tmp450;
      const real_t tmp452 = tmp38*tmp451;
      const real_t tmp453 = tmp42*tmp451;
      const real_t tmp454 = tmp44*tmp451;
      const real_t tmp455 = 0.37454442704241986*tmp442 + 0.37454442704241986*tmp443 + 0.37454442704241986*tmp446 + 0.37454442704241986*tmp447 + 0.37454442704241986*tmp448 + 0.37454442704241986*tmp449 + 0.37454442704241986*tmp452 + 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454;
      const real_t tmp456 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp457 = tmp440*tmp456;
      const real_t tmp458 = tmp457*tmp6;
      const real_t tmp459 = tmp26*tmp457;
      const real_t tmp460 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp461 = tmp440*tmp460;
      const real_t tmp462 = tmp28*tmp461;
      const real_t tmp463 = tmp32*tmp461;
      const real_t tmp464 = tmp34*tmp457;
      const real_t tmp465 = tmp36*tmp461;
      const real_t tmp466 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp467 = tmp440*tmp466;
      const real_t tmp468 = tmp38*tmp467;
      const real_t tmp469 = tmp42*tmp467;
      const real_t tmp470 = tmp44*tmp467;
      const real_t tmp471 = tmp74*std::abs(tmp438)*ScalarCoeff0_9;
      const real_t tmp472 = tmp471*(0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp462 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465 + 0.37454442704241986*tmp468 + 0.37454442704241986*tmp469 + 0.37454442704241986*tmp470);
      const real_t tmp473 = 0.0061548665412862651*tmp472;
      const real_t tmp474 = tmp35 + tmp37 + tmp45;
      const real_t tmp475 = 0.0072301427194886381*tmp474;
      const real_t tmp476 = tmp93 + tmp94 + tmp99;
      const real_t tmp477 = 0.012344594760863713*tmp476;
      const real_t tmp478 = tmp134 + tmp135 + tmp140;
      const real_t tmp479 = 0.0036548782978011126*tmp478;
      const real_t tmp480 = tmp175 + tmp176 + tmp181;
      const real_t tmp481 = 0.010799549999884401*tmp480;
      const real_t tmp482 = tmp216 + tmp217 + tmp222;
      const real_t tmp483 = 0.012584765868454714*tmp482;
      const real_t tmp484 = tmp257 + tmp258 + tmp263;
      const real_t tmp485 = 0.00083582139204094858*tmp484;
      const real_t tmp486 = tmp295 + tmp296 + tmp300;
      const real_t tmp487 = 0.0040819365333192512*tmp486;
      const real_t tmp488 = tmp332 + tmp333 + tmp338;
      const real_t tmp489 = 0.0045346636251092122*tmp488;
      const real_t tmp490 = tmp370 + tmp371 + tmp375;
      const real_t tmp491 = 0.0061987549215557864*tmp490;
      const real_t tmp492 = tmp407 + tmp408 + tmp413;
      const real_t tmp493 = 0.0045087419239184514*tmp492;
      const real_t tmp494 = tmp448 + tmp449 + tmp454;
      const real_t tmp495 = 0.0044998649071490461*tmp494;
      const real_t tmp496 = tmp27 + tmp33 + tmp43;
      const real_t tmp497 = 0.0067853652681886352*tmp496;
      const real_t tmp498 = tmp88 + tmp92 + tmp98;
      const real_t tmp499 = 0.0041416969702195786*tmp498;
      const real_t tmp500 = tmp129 + tmp133 + tmp139;
      const real_t tmp501 = 0.0013137068218914037*tmp500;
      const real_t tmp502 = tmp170 + tmp174 + tmp180;
      const real_t tmp503 = 0.0038818597778972029*tmp502;
      const real_t tmp504 = tmp211 + tmp215 + tmp221;
      const real_t tmp505 = 0.010066964965131993*tmp504;
      const real_t tmp506 = tmp252 + tmp256 + tmp262;
      const real_t tmp507 = 0.0046804043242939224*tmp506;
      const real_t tmp508 = tmp291 + tmp294 + tmp299;
      const real_t tmp509 = 0.0097490714046835261*tmp508;
      const real_t tmp510 = tmp327 + tmp331 + tmp337;
      const real_t tmp511 = 0.0085077884791842431*tmp510;
      const real_t tmp512 = tmp366 + tmp369 + tmp374;
      const real_t tmp513 = 0.0056487878897383461*tmp512;
      const real_t tmp514 = tmp402 + tmp406 + tmp412;
      const real_t tmp515 = 0.005238393734043144*tmp514;
      const real_t tmp516 = tmp443 + tmp447 + tmp453;
      const real_t tmp517 = 0.012093792842045984*tmp516;
      const real_t tmp518 = tmp25 + tmp31 + tmp41;
      const real_t tmp519 = 0.020554974928565235*tmp518;
      const real_t tmp520 = tmp87 + tmp91 + tmp97;
      const real_t tmp521 = 0.0044685602754798454*tmp520;
      const real_t tmp522 = tmp128 + tmp132 + tmp138;
      const real_t tmp523 = 0.0041246668394316508*tmp522;
      const real_t tmp524 = tmp169 + tmp173 + tmp179;
      const real_t tmp525 = 0.0033267985952381263*tmp524;
      const real_t tmp526 = tmp210 + tmp214 + tmp220;
      const real_t tmp527 = 0.0071511654955033511*tmp526;
      const real_t tmp528 = tmp251 + tmp255 + tmp261;
      const real_t tmp529 = 0.010590168103918869*tmp528;
      const real_t tmp530 = tmp290 + tmp293 + tmp298;
      const real_t tmp531 = 0.0027144532136395704*tmp530;
      const real_t tmp532 = tmp326 + tmp330 + tmp336;
      const real_t tmp533 = 0.0019942799754541058*tmp532;
      const real_t tmp534 = tmp365 + tmp368 + tmp373;
      const real_t tmp535 = 0.005883129944586717*tmp534;
      const real_t tmp536 = tmp401 + tmp405 + tmp411;
      const real_t tmp537 = 0.0053864900723149976*tmp536;
      const real_t tmp538 = tmp442 + tmp446 + tmp452;
      const real_t tmp539 = 0.0052886569726683132*tmp538;
      const real_t tmp540 = 2.7375616618121592*tmp27 + 2.7375616618121592*tmp33 + 2.7375616618121592*tmp43;
      const real_t tmp541 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp31 + 0.42641669024797446*tmp41;
      const real_t tmp542 = tmp540 + tmp541;
      const real_t tmp543 = 0.2723974837528258*tmp88 + 0.2723974837528258*tmp92 + 0.2723974837528258*tmp98;
      const real_t tmp544 = 0.3256196736114374*tmp87 + 0.3256196736114374*tmp91 + 0.3256196736114374*tmp97;
      const real_t tmp545 = tmp543 + tmp544;
      const real_t tmp546 = 0.054242807519210512*tmp129 + 0.054242807519210512*tmp133 + 0.054242807519210512*tmp139;
      const real_t tmp547 = 0.69877623478892303*tmp128 + 0.69877623478892303*tmp132 + 0.69877623478892303*tmp138;
      const real_t tmp548 = tmp546 + tmp547;
      const real_t tmp549 = 1.2716142408535775*tmp170 + 1.2716142408535775*tmp174 + 1.2716142408535775*tmp180;
      const real_t tmp550 = 1.3169318389705873*tmp169 + 1.3169318389705873*tmp173 + 1.3169318389705873*tmp179;
      const real_t tmp551 = tmp549 + tmp550;
      const real_t tmp552 = 1.4152929568371884*tmp211 + 1.4152929568371884*tmp215 + 1.4152929568371884*tmp221;
      const real_t tmp553 = 0.41537646564397157*tmp210 + 0.41537646564397157*tmp214 + 0.41537646564397157*tmp220;
      const real_t tmp554 = tmp552 + tmp553;
      const real_t tmp555 = 0.50720690366156718*tmp252 + 0.50720690366156718*tmp256 + 0.50720690366156718*tmp262;
      const real_t tmp556 = 1.2177936097379878*tmp251 + 1.2177936097379878*tmp255 + 1.2177936097379878*tmp261;
      const real_t tmp557 = tmp555 + tmp556;
      const real_t tmp558 = 1.3207616593498592*tmp291 + 1.3207616593498592*tmp294 + 1.3207616593498592*tmp299;
      const real_t tmp559 = 2.1520288156647434*tmp290 + 2.1520288156647434*tmp293 + 2.1520288156647434*tmp298;
      const real_t tmp560 = tmp558 + tmp559;
      const real_t tmp561 = 1.2259759537187613*tmp327 + 1.2259759537187613*tmp331 + 1.2259759537187613*tmp337;
      const real_t tmp562 = 0.035965040373342916*tmp326 + 0.035965040373342916*tmp330 + 0.035965040373342916*tmp336;
      const real_t tmp563 = tmp561 + tmp562;
      const real_t tmp564 = 0.23782646519773576*tmp366 + 0.23782646519773576*tmp369 + 0.23782646519773576*tmp374;
      const real_t tmp565 = 1.7318139619254227*tmp365 + 1.7318139619254227*tmp368 + 1.7318139619254227*tmp373;
      const real_t tmp566 = tmp564 + tmp565;
      const real_t tmp567 = 0.19112574223634571*tmp402 + 0.19112574223634571*tmp406 + 0.19112574223634571*tmp412;
      const real_t tmp568 = 0.21336495814298084*tmp401 + 0.21336495814298084*tmp405 + 0.21336495814298084*tmp411;
      const real_t tmp569 = tmp567 + tmp568;
      const real_t tmp570 = 0.14073571909439453*tmp443 + 0.14073571909439453*tmp447 + 0.14073571909439453*tmp453;
      const real_t tmp571 = 2.9649155283744921*tmp442 + 2.9649155283744921*tmp446 + 2.9649155283744921*tmp452;
      const real_t tmp572 = tmp570 + tmp571;
      const real_t tmp573 = 2.7375616618121592*tmp35 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp45;
      const real_t tmp574 = 0.38881857835033307*tmp25 + 0.38881857835033307*tmp31 + 0.38881857835033307*tmp41;
      const real_t tmp575 = tmp573 + tmp574;
      const real_t tmp576 = 0.2723974837528258*tmp93 + 0.2723974837528258*tmp94 + 0.2723974837528258*tmp99;
      const real_t tmp577 = 3.0100340280386204*tmp87 + 3.0100340280386204*tmp91 + 3.0100340280386204*tmp97;
      const real_t tmp578 = tmp576 + tmp577;
      const real_t tmp579 = 0.054242807519210512*tmp134 + 0.054242807519210512*tmp135 + 0.054242807519210512*tmp140;
      const real_t tmp580 = 0.16196202691036121*tmp128 + 0.16196202691036121*tmp132 + 0.16196202691036121*tmp138;
      const real_t tmp581 = tmp579 + tmp580;
      const real_t tmp582 = 1.2716142408535775*tmp175 + 1.2716142408535775*tmp176 + 1.2716142408535775*tmp181;
      const real_t tmp583 = 0.11827798082591956*tmp169 + 0.11827798082591956*tmp173 + 0.11827798082591956*tmp179;
      const real_t tmp584 = tmp582 + tmp583;
      const real_t tmp585 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp217 + 1.4152929568371884*tmp222;
      const real_t tmp586 = 1.730840956191074*tmp210 + 1.730840956191074*tmp214 + 1.730840956191074*tmp220;
      const real_t tmp587 = tmp585 + tmp586;
      const real_t tmp588 = 0.50720690366156718*tmp257 + 0.50720690366156718*tmp258 + 0.50720690366156718*tmp263;
      const real_t tmp589 = 0.96110665971229103*tmp251 + 0.96110665971229103*tmp255 + 0.96110665971229103*tmp261;
      const real_t tmp590 = tmp588 + tmp589;
      const real_t tmp591 = 1.3207616593498592*tmp295 + 1.3207616593498592*tmp296 + 1.3207616593498592*tmp300;
      const real_t tmp592 = 0.51764549515564062*tmp290 + 0.51764549515564062*tmp293 + 0.51764549515564062*tmp298;
      const real_t tmp593 = tmp591 + tmp592;
      const real_t tmp594 = 1.2259759537187613*tmp332 + 1.2259759537187613*tmp333 + 1.2259759537187613*tmp338;
      const real_t tmp595 = 0.48616796533571183*tmp326 + 0.48616796533571183*tmp330 + 0.48616796533571183*tmp336;
      const real_t tmp596 = tmp594 + tmp595;
      const real_t tmp597 = 0.23782646519773576*tmp370 + 0.23782646519773576*tmp371 + 0.23782646519773576*tmp375;
      const real_t tmp598 = 1.8030635043651069*tmp365 + 1.8030635043651069*tmp368 + 1.8030635043651069*tmp373;
      const real_t tmp599 = tmp597 + tmp598;
      const real_t tmp600 = 0.19112574223634571*tmp407 + 0.19112574223634571*tmp408 + 0.19112574223634571*tmp413;
      const real_t tmp601 = 1.6770652555180527*tmp401 + 1.6770652555180527*tmp405 + 1.6770652555180527*tmp411;
      const real_t tmp602 = tmp600 + tmp601;
      const real_t tmp603 = 0.14073571909439453*tmp448 + 0.14073571909439453*tmp449 + 0.14073571909439453*tmp454;
      const real_t tmp604 = 0.2688931795735332*tmp442 + 0.2688931795735332*tmp446 + 0.2688931795735332*tmp452;
      const real_t tmp605 = tmp603 + tmp604;
      const real_t tmp606 = 0.42641669024797446*tmp35 + 0.42641669024797446*tmp37 + 0.42641669024797446*tmp45;
      const real_t tmp607 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp33 + 0.38881857835033307*tmp43;
      const real_t tmp608 = tmp606 + tmp607;
      const real_t tmp609 = 0.3256196736114374*tmp93 + 0.3256196736114374*tmp94 + 0.3256196736114374*tmp99;
      const real_t tmp610 = 3.0100340280386204*tmp88 + 3.0100340280386204*tmp92 + 3.0100340280386204*tmp98;
      const real_t tmp611 = tmp609 + tmp610;
      const real_t tmp612 = 0.69877623478892303*tmp134 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp140;
      const real_t tmp613 = 0.16196202691036121*tmp129 + 0.16196202691036121*tmp133 + 0.16196202691036121*tmp139;
      const real_t tmp614 = tmp612 + tmp613;
      const real_t tmp615 = 1.3169318389705873*tmp175 + 1.3169318389705873*tmp176 + 1.3169318389705873*tmp181;
      const real_t tmp616 = 0.11827798082591956*tmp170 + 0.11827798082591956*tmp174 + 0.11827798082591956*tmp180;
      const real_t tmp617 = tmp615 + tmp616;
      const real_t tmp618 = 0.41537646564397157*tmp216 + 0.41537646564397157*tmp217 + 0.41537646564397157*tmp222;
      const real_t tmp619 = 1.730840956191074*tmp211 + 1.730840956191074*tmp215 + 1.730840956191074*tmp221;
      const real_t tmp620 = tmp618 + tmp619;
      const real_t tmp621 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp258 + 1.2177936097379878*tmp263;
      const real_t tmp622 = 0.96110665971229103*tmp252 + 0.96110665971229103*tmp256 + 0.96110665971229103*tmp262;
      const real_t tmp623 = tmp621 + tmp622;
      const real_t tmp624 = 2.1520288156647434*tmp295 + 2.1520288156647434*tmp296 + 2.1520288156647434*tmp300;
      const real_t tmp625 = 0.51764549515564062*tmp291 + 0.51764549515564062*tmp294 + 0.51764549515564062*tmp299;
      const real_t tmp626 = tmp624 + tmp625;
      const real_t tmp627 = 0.035965040373342916*tmp332 + 0.035965040373342916*tmp333 + 0.035965040373342916*tmp338;
      const real_t tmp628 = 0.48616796533571183*tmp327 + 0.48616796533571183*tmp331 + 0.48616796533571183*tmp337;
      const real_t tmp629 = tmp627 + tmp628;
      const real_t tmp630 = 1.7318139619254227*tmp370 + 1.7318139619254227*tmp371 + 1.7318139619254227*tmp375;
      const real_t tmp631 = 1.8030635043651069*tmp366 + 1.8030635043651069*tmp369 + 1.8030635043651069*tmp374;
      const real_t tmp632 = tmp630 + tmp631;
      const real_t tmp633 = 0.21336495814298084*tmp407 + 0.21336495814298084*tmp408 + 0.21336495814298084*tmp413;
      const real_t tmp634 = 1.6770652555180527*tmp402 + 1.6770652555180527*tmp406 + 1.6770652555180527*tmp412;
      const real_t tmp635 = tmp633 + tmp634;
      const real_t tmp636 = 2.9649155283744921*tmp448 + 2.9649155283744921*tmp449 + 2.9649155283744921*tmp454;
      const real_t tmp637 = 0.2688931795735332*tmp443 + 0.2688931795735332*tmp447 + 0.2688931795735332*tmp453;
      const real_t tmp638 = tmp636 + tmp637;
      const real_t tmp639 = -2.2903585922226259*tmp25 - 2.2903585922226259*tmp31 - 2.2903585922226259*tmp41 - tmp540 - tmp573;
      const real_t tmp640 = 0.11955133084429059*tmp17*tmp28*tmp84*tmp89 + 0.11955133084429059*tmp17*tmp38*tmp84*tmp95 + 0.11955133084429059*tmp17*tmp6*tmp79*tmp84 - tmp543 - tmp576;
      const real_t tmp641 = 3.030776123262295*tmp120*tmp125*tmp17*tmp6 + 3.030776123262295*tmp125*tmp130*tmp17*tmp28 + 3.030776123262295*tmp125*tmp136*tmp17*tmp38 - tmp546 - tmp579;
      const real_t tmp642 = 0.021561698496338266*tmp161*tmp166*tmp17*tmp6 + 0.021561698496338266*tmp166*tmp17*tmp171*tmp28 + 0.021561698496338266*tmp166*tmp17*tmp177*tmp38 - tmp549 - tmp582;
      const real_t tmp643 = -0.97680333550942233*tmp210 - 0.97680333550942233*tmp214 - 0.97680333550942233*tmp220 - tmp552 - tmp585;
      const real_t tmp644 = 0.80668592322658683*tmp17*tmp243*tmp248*tmp6 + 0.80668592322658683*tmp17*tmp248*tmp253*tmp28 + 0.80668592322658683*tmp17*tmp248*tmp259*tmp38 - tmp555 - tmp588;
      const real_t tmp645 = -1.3111976295201027*tmp290 - 1.3111976295201027*tmp293 - 1.3111976295201027*tmp298 - tmp558 - tmp591;
      const real_t tmp646 = 1.0259150868534226*tmp17*tmp28*tmp323*tmp328 + 1.0259150868534226*tmp17*tmp318*tmp323*tmp6 + 1.0259150868534226*tmp17*tmp323*tmp334*tmp38 - tmp561 - tmp594;
      const real_t tmp647 = -0.010530396686001087*tmp365 - 0.010530396686001087*tmp368 - 0.010530396686001087*tmp373 - tmp564 - tmp597;
      const real_t tmp648 = 1.727318301866275*tmp17*tmp28*tmp398*tmp403 + 1.727318301866275*tmp17*tmp38*tmp398*tmp409 + 1.727318301866275*tmp17*tmp393*tmp398*tmp6 - tmp567 - tmp600;
      const real_t tmp649 = 0.48471985386318561*tmp17*tmp28*tmp439*tmp444 + 0.48471985386318561*tmp17*tmp38*tmp439*tmp450 + 0.48471985386318561*tmp17*tmp434*tmp439*tmp6 - tmp570 - tmp603;
      const real_t tmp650 = 0.020786379341558803*tmp17*tmp22*tmp26*tmp8 + 0.020786379341558803*tmp17*tmp22*tmp29*tmp32 + 0.020786379341558803*tmp17*tmp22*tmp39*tmp42 - tmp541 - tmp606;
      const real_t tmp651 = 0.066329140985678992*tmp17*tmp26*tmp79*tmp84 + 0.066329140985678992*tmp17*tmp32*tmp84*tmp89 + 0.066329140985678992*tmp17*tmp42*tmp84*tmp95 - tmp544 - tmp609;
      const real_t tmp652 = 2.3862426959925824*tmp120*tmp125*tmp17*tmp26 + 2.3862426959925824*tmp125*tmp130*tmp17*tmp32 + 2.3862426959925824*tmp125*tmp136*tmp17*tmp42 - tmp547 - tmp612;
      const real_t tmp653 = -0.023755899620671705*tmp170 - 0.023755899620671705*tmp174 - 0.023755899620671705*tmp180 - tmp550 - tmp615;
      const real_t tmp654 = 0.023113155683794462*tmp17*tmp202*tmp207*tmp26 + 0.023113155683794462*tmp17*tmp207*tmp212*tmp32 + 0.023113155683794462*tmp17*tmp207*tmp218*tmp42 - tmp553 - tmp618;
      const real_t tmp655 = 0.096099217150166227*tmp17*tmp243*tmp248*tmp26 + 0.096099217150166227*tmp17*tmp248*tmp253*tmp32 + 0.096099217150166227*tmp17*tmp248*tmp259*tmp42 - tmp556 - tmp621;
      const real_t tmp656 = -2.1424647858349868*tmp291 - 2.1424647858349868*tmp294 - 2.1424647858349868*tmp299 - tmp559 - tmp624;
      const real_t tmp657 = 2.215926000198841*tmp17*tmp26*tmp318*tmp323 + 2.215926000198841*tmp17*tmp32*tmp323*tmp328 + 2.215926000198841*tmp17*tmp323*tmp334*tmp42 - tmp562 - tmp627;
      const real_t tmp658 = -1.504517893413688*tmp366 - 1.504517893413688*tmp369 - 1.504517893413688*tmp374 - tmp565 - tmp630;
      const real_t tmp659 = 1.7050790859596399*tmp17*tmp26*tmp393*tmp398 + 1.7050790859596399*tmp17*tmp32*tmp398*tmp403 + 1.7050790859596399*tmp17*tmp398*tmp409*tmp42 - tmp568 - tmp633;
      const real_t tmp660 = -2.339459955416912*tmp443 - 2.339459955416912*tmp447 - 2.339459955416912*tmp453 - tmp571 - tmp636;
      const real_t tmp661 = 0.058384491239200198*tmp17*tmp22*tmp29*tmp36 + 0.058384491239200198*tmp17*tmp22*tmp34*tmp8 + 0.058384491239200198*tmp17*tmp22*tmp39*tmp44 - tmp574 - tmp607;
      const real_t tmp662 = -tmp577 - tmp610 - 2.6180852134415042*tmp93 - 2.6180852134415042*tmp94 - 2.6180852134415042*tmp99;
      const real_t tmp663 = 2.923056903871144*tmp120*tmp125*tmp17*tmp34 + 2.923056903871144*tmp125*tmp130*tmp17*tmp36 + 2.923056903871144*tmp125*tmp136*tmp17*tmp44 - tmp580 - tmp613;
      const real_t tmp664 = 1.1748979585239958*tmp161*tmp166*tmp17*tmp34 + 1.1748979585239958*tmp166*tmp17*tmp171*tmp36 + 1.1748979585239958*tmp166*tmp17*tmp177*tmp44 - tmp583 - tmp616;
      const real_t tmp665 = -1.292351334863308*tmp216 - 1.292351334863308*tmp217 - 1.292351334863308*tmp222 - tmp586 - tmp619;
      const real_t tmp666 = 0.35278616717586297*tmp17*tmp243*tmp248*tmp34 + 0.35278616717586297*tmp17*tmp248*tmp253*tmp36 + 0.35278616717586297*tmp17*tmp248*tmp259*tmp44 - tmp589 - tmp622;
      const real_t tmp667 = -0.50808146532588383*tmp295 - 0.50808146532588383*tmp296 - 0.50808146532588383*tmp300 - tmp592 - tmp625;
      const real_t tmp668 = 1.7657230752364721*tmp17*tmp318*tmp323*tmp34 + 1.7657230752364721*tmp17*tmp323*tmp328*tmp36 + 1.7657230752364721*tmp17*tmp323*tmp334*tmp44 - tmp595 - tmp628;
      const real_t tmp669 = -1.5757674358533722*tmp370 - 1.5757674358533722*tmp371 - 1.5757674358533722*tmp375 - tmp598 - tmp631;
      const real_t tmp670 = 0.24137878858456796*tmp17*tmp34*tmp393*tmp398 + 0.24137878858456796*tmp17*tmp36*tmp398*tmp403 + 0.24137878858456796*tmp17*tmp398*tmp409*tmp44 - tmp601 - tmp634;
      const real_t tmp671 = 0.35656239338404694*tmp17*tmp34*tmp434*tmp439 + 0.35656239338404694*tmp17*tmp36*tmp439*tmp444 + 0.35656239338404694*tmp17*tmp439*tmp44*tmp450 - tmp604 - tmp637;
      const real_t tmp672 = tmp75*(tmp55 + tmp56 + tmp61);
      const real_t tmp673 = 0.0072301427194886381*tmp672;
      const real_t tmp674 = tmp116*(tmp109 + tmp110 + tmp115);
      const real_t tmp675 = 0.012344594760863713*tmp674;
      const real_t tmp676 = tmp157*(tmp150 + tmp151 + tmp156);
      const real_t tmp677 = 0.0036548782978011126*tmp676;
      const real_t tmp678 = tmp198*(tmp191 + tmp192 + tmp197);
      const real_t tmp679 = 0.010799549999884401*tmp678;
      const real_t tmp680 = tmp239*(tmp232 + tmp233 + tmp238);
      const real_t tmp681 = 0.012584765868454714*tmp680;
      const real_t tmp682 = tmp280*(tmp273 + tmp274 + tmp279);
      const real_t tmp683 = 0.00083582139204094858*tmp682;
      const real_t tmp684 = tmp314*(tmp308 + tmp309 + tmp313);
      const real_t tmp685 = 0.0040819365333192512*tmp684;
      const real_t tmp686 = tmp355*(tmp348 + tmp349 + tmp354);
      const real_t tmp687 = 0.0045346636251092122*tmp686;
      const real_t tmp688 = tmp389*(tmp383 + tmp384 + tmp388);
      const real_t tmp689 = 0.0061987549215557864*tmp688;
      const real_t tmp690 = tmp430*(tmp423 + tmp424 + tmp429);
      const real_t tmp691 = 0.0045087419239184514*tmp690;
      const real_t tmp692 = tmp471*(tmp464 + tmp465 + tmp470);
      const real_t tmp693 = 0.0044998649071490461*tmp692;
      const real_t tmp694 = tmp75*(tmp50 + tmp54 + tmp60);
      const real_t tmp695 = 0.0067853652681886352*tmp694;
      const real_t tmp696 = tmp116*(tmp104 + tmp108 + tmp114);
      const real_t tmp697 = 0.0041416969702195786*tmp696;
      const real_t tmp698 = tmp157*(tmp145 + tmp149 + tmp155);
      const real_t tmp699 = 0.0013137068218914037*tmp698;
      const real_t tmp700 = tmp198*(tmp186 + tmp190 + tmp196);
      const real_t tmp701 = 0.0038818597778972029*tmp700;
      const real_t tmp702 = tmp239*(tmp227 + tmp231 + tmp237);
      const real_t tmp703 = 0.010066964965131993*tmp702;
      const real_t tmp704 = tmp280*(tmp268 + tmp272 + tmp278);
      const real_t tmp705 = 0.0046804043242939224*tmp704;
      const real_t tmp706 = tmp314*(tmp304 + tmp307 + tmp312);
      const real_t tmp707 = 0.0097490714046835261*tmp706;
      const real_t tmp708 = tmp355*(tmp343 + tmp347 + tmp353);
      const real_t tmp709 = 0.0085077884791842431*tmp708;
      const real_t tmp710 = tmp389*(tmp379 + tmp382 + tmp387);
      const real_t tmp711 = 0.0056487878897383461*tmp710;
      const real_t tmp712 = tmp430*(tmp418 + tmp422 + tmp428);
      const real_t tmp713 = 0.005238393734043144*tmp712;
      const real_t tmp714 = tmp471*(tmp459 + tmp463 + tmp469);
      const real_t tmp715 = 0.012093792842045984*tmp714;
      const real_t tmp716 = tmp75*(tmp49 + tmp53 + tmp59);
      const real_t tmp717 = 0.020554974928565235*tmp716;
      const real_t tmp718 = tmp116*(tmp103 + tmp107 + tmp113);
      const real_t tmp719 = 0.0044685602754798454*tmp718;
      const real_t tmp720 = tmp157*(tmp144 + tmp148 + tmp154);
      const real_t tmp721 = 0.0041246668394316508*tmp720;
      const real_t tmp722 = tmp198*(tmp185 + tmp189 + tmp195);
      const real_t tmp723 = 0.0033267985952381263*tmp722;
      const real_t tmp724 = tmp239*(tmp226 + tmp230 + tmp236);
      const real_t tmp725 = 0.0071511654955033511*tmp724;
      const real_t tmp726 = tmp280*(tmp267 + tmp271 + tmp277);
      const real_t tmp727 = 0.010590168103918869*tmp726;
      const real_t tmp728 = tmp314*(tmp303 + tmp306 + tmp311);
      const real_t tmp729 = 0.0027144532136395704*tmp728;
      const real_t tmp730 = tmp355*(tmp342 + tmp346 + tmp352);
      const real_t tmp731 = 0.0019942799754541058*tmp730;
      const real_t tmp732 = tmp389*(tmp378 + tmp381 + tmp386);
      const real_t tmp733 = 0.005883129944586717*tmp732;
      const real_t tmp734 = tmp430*(tmp417 + tmp421 + tmp427);
      const real_t tmp735 = 0.0053864900723149976*tmp734;
      const real_t tmp736 = tmp471*(tmp458 + tmp462 + tmp468);
      const real_t tmp737 = 0.0052886569726683132*tmp736;
      const real_t tmp738 = 2.7375616618121592*tmp50 + 2.7375616618121592*tmp54 + 2.7375616618121592*tmp60;
      const real_t tmp739 = 0.42641669024797446*tmp49 + 0.42641669024797446*tmp53 + 0.42641669024797446*tmp59;
      const real_t tmp740 = tmp75*(tmp738 + tmp739);
      const real_t tmp741 = 0.011829781572832234*tmp740;
      const real_t tmp742 = 0.2723974837528258*tmp104 + 0.2723974837528258*tmp108 + 0.2723974837528258*tmp114;
      const real_t tmp743 = 0.3256196736114374*tmp103 + 0.3256196736114374*tmp107 + 0.3256196736114374*tmp113;
      const real_t tmp744 = tmp116*(tmp742 + tmp743);
      const real_t tmp745 = 0.0061414854617707626*tmp744;
      const real_t tmp746 = 0.054242807519210512*tmp145 + 0.054242807519210512*tmp149 + 0.054242807519210512*tmp155;
      const real_t tmp747 = 0.69877623478892303*tmp144 + 0.69877623478892303*tmp148 + 0.69877623478892303*tmp154;
      const real_t tmp748 = tmp157*(tmp746 + tmp747);
      const real_t tmp749 = 0.0043612323249822204*tmp748;
      const real_t tmp750 = 1.2716142408535775*tmp186 + 1.2716142408535775*tmp190 + 1.2716142408535775*tmp196;
      const real_t tmp751 = 1.3169318389705873*tmp185 + 1.3169318389705873*tmp189 + 1.3169318389705873*tmp195;
      const real_t tmp752 = tmp198*(tmp750 + tmp751);
      const real_t tmp753 = 0.012248248047610821*tmp752;
      const real_t tmp754 = 1.4152929568371884*tmp227 + 1.4152929568371884*tmp231 + 1.4152929568371884*tmp237;
      const real_t tmp755 = 0.41537646564397157*tmp226 + 0.41537646564397157*tmp230 + 0.41537646564397157*tmp236;
      const real_t tmp756 = tmp239*(tmp754 + tmp755);
      const real_t tmp757 = 0.017219568446249611*tmp756;
      const real_t tmp758 = 0.50720690366156718*tmp268 + 0.50720690366156718*tmp272 + 0.50720690366156718*tmp278;
      const real_t tmp759 = 1.2177936097379878*tmp267 + 1.2177936097379878*tmp271 + 1.2177936097379878*tmp277;
      const real_t tmp760 = tmp280*(tmp758 + tmp759);
      const real_t tmp761 = 0.021490090227737114*tmp760;
      const real_t tmp762 = 1.3207616593498592*tmp304 + 1.3207616593498592*tmp307 + 1.3207616593498592*tmp312;
      const real_t tmp763 = 2.1520288156647434*tmp303 + 2.1520288156647434*tmp306 + 2.1520288156647434*tmp311;
      const real_t tmp764 = tmp314*(tmp762 + tmp763);
      const real_t tmp765 = 0.0084625239161731543*tmp764;
      const real_t tmp766 = 1.2259759537187613*tmp343 + 1.2259759537187613*tmp347 + 1.2259759537187613*tmp353;
      const real_t tmp767 = 0.035965040373342916*tmp342 + 0.035965040373342916*tmp346 + 0.035965040373342916*tmp352;
      const real_t tmp768 = tmp355*(tmp766 + tmp767);
      const real_t tmp769 = 0.0088251866742250357*tmp768;
      const real_t tmp770 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp382 + 0.23782646519773576*tmp387;
      const real_t tmp771 = 1.7318139619254227*tmp378 + 1.7318139619254227*tmp381 + 1.7318139619254227*tmp386;
      const real_t tmp772 = tmp389*(tmp770 + tmp771);
      const real_t tmp773 = 0.0077188851041817101*tmp772;
      const real_t tmp774 = 0.19112574223634571*tmp418 + 0.19112574223634571*tmp422 + 0.19112574223634571*tmp428;
      const real_t tmp775 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp421 + 0.21336495814298084*tmp427;
      const real_t tmp776 = tmp430*(tmp774 + tmp775);
      const real_t tmp777 = 0.006659242794062166*tmp776;
      const real_t tmp778 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp463 + 0.14073571909439453*tmp469;
      const real_t tmp779 = 2.9649155283744921*tmp458 + 2.9649155283744921*tmp462 + 2.9649155283744921*tmp468;
      const real_t tmp780 = tmp471*(tmp778 + tmp779);
      const real_t tmp781 = 0.0061548665412862651*tmp780;
      const real_t tmp782 = 2.7375616618121592*tmp55 + 2.7375616618121592*tmp56 + 2.7375616618121592*tmp61;
      const real_t tmp783 = 0.38881857835033307*tmp49 + 0.38881857835033307*tmp53 + 0.38881857835033307*tmp59;
      const real_t tmp784 = tmp75*(tmp782 + tmp783);
      const real_t tmp785 = 0.011829781572832234*tmp784;
      const real_t tmp786 = 0.2723974837528258*tmp109 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp115;
      const real_t tmp787 = 3.0100340280386204*tmp103 + 3.0100340280386204*tmp107 + 3.0100340280386204*tmp113;
      const real_t tmp788 = tmp116*(tmp786 + tmp787);
      const real_t tmp789 = 0.0061414854617707626*tmp788;
      const real_t tmp790 = 0.054242807519210512*tmp150 + 0.054242807519210512*tmp151 + 0.054242807519210512*tmp156;
      const real_t tmp791 = 0.16196202691036121*tmp144 + 0.16196202691036121*tmp148 + 0.16196202691036121*tmp154;
      const real_t tmp792 = tmp157*(tmp790 + tmp791);
      const real_t tmp793 = 0.0043612323249822204*tmp792;
      const real_t tmp794 = 1.2716142408535775*tmp191 + 1.2716142408535775*tmp192 + 1.2716142408535775*tmp197;
      const real_t tmp795 = 0.11827798082591956*tmp185 + 0.11827798082591956*tmp189 + 0.11827798082591956*tmp195;
      const real_t tmp796 = tmp198*(tmp794 + tmp795);
      const real_t tmp797 = 0.012248248047610821*tmp796;
      const real_t tmp798 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp233 + 1.4152929568371884*tmp238;
      const real_t tmp799 = 1.730840956191074*tmp226 + 1.730840956191074*tmp230 + 1.730840956191074*tmp236;
      const real_t tmp800 = tmp239*(tmp798 + tmp799);
      const real_t tmp801 = 0.017219568446249611*tmp800;
      const real_t tmp802 = 0.50720690366156718*tmp273 + 0.50720690366156718*tmp274 + 0.50720690366156718*tmp279;
      const real_t tmp803 = 0.96110665971229103*tmp267 + 0.96110665971229103*tmp271 + 0.96110665971229103*tmp277;
      const real_t tmp804 = tmp280*(tmp802 + tmp803);
      const real_t tmp805 = 0.021490090227737114*tmp804;
      const real_t tmp806 = 1.3207616593498592*tmp308 + 1.3207616593498592*tmp309 + 1.3207616593498592*tmp313;
      const real_t tmp807 = 0.51764549515564062*tmp303 + 0.51764549515564062*tmp306 + 0.51764549515564062*tmp311;
      const real_t tmp808 = tmp314*(tmp806 + tmp807);
      const real_t tmp809 = 0.0084625239161731543*tmp808;
      const real_t tmp810 = 1.2259759537187613*tmp348 + 1.2259759537187613*tmp349 + 1.2259759537187613*tmp354;
      const real_t tmp811 = 0.48616796533571183*tmp342 + 0.48616796533571183*tmp346 + 0.48616796533571183*tmp352;
      const real_t tmp812 = tmp355*(tmp810 + tmp811);
      const real_t tmp813 = 0.0088251866742250357*tmp812;
      const real_t tmp814 = 0.23782646519773576*tmp383 + 0.23782646519773576*tmp384 + 0.23782646519773576*tmp388;
      const real_t tmp815 = 1.8030635043651069*tmp378 + 1.8030635043651069*tmp381 + 1.8030635043651069*tmp386;
      const real_t tmp816 = tmp389*(tmp814 + tmp815);
      const real_t tmp817 = 0.0077188851041817101*tmp816;
      const real_t tmp818 = 0.19112574223634571*tmp423 + 0.19112574223634571*tmp424 + 0.19112574223634571*tmp429;
      const real_t tmp819 = 1.6770652555180527*tmp417 + 1.6770652555180527*tmp421 + 1.6770652555180527*tmp427;
      const real_t tmp820 = tmp430*(tmp818 + tmp819);
      const real_t tmp821 = 0.006659242794062166*tmp820;
      const real_t tmp822 = 0.14073571909439453*tmp464 + 0.14073571909439453*tmp465 + 0.14073571909439453*tmp470;
      const real_t tmp823 = 0.2688931795735332*tmp458 + 0.2688931795735332*tmp462 + 0.2688931795735332*tmp468;
      const real_t tmp824 = tmp471*(tmp822 + tmp823);
      const real_t tmp825 = 0.0061548665412862651*tmp824;
      const real_t tmp826 = 0.42641669024797446*tmp55 + 0.42641669024797446*tmp56 + 0.42641669024797446*tmp61;
      const real_t tmp827 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp828 = tmp75*(tmp826 + tmp827);
      const real_t tmp829 = 0.011829781572832234*tmp828;
      const real_t tmp830 = 0.3256196736114374*tmp109 + 0.3256196736114374*tmp110 + 0.3256196736114374*tmp115;
      const real_t tmp831 = 3.0100340280386204*tmp104 + 3.0100340280386204*tmp108 + 3.0100340280386204*tmp114;
      const real_t tmp832 = tmp116*(tmp830 + tmp831);
      const real_t tmp833 = 0.0061414854617707626*tmp832;
      const real_t tmp834 = 0.69877623478892303*tmp150 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp156;
      const real_t tmp835 = 0.16196202691036121*tmp145 + 0.16196202691036121*tmp149 + 0.16196202691036121*tmp155;
      const real_t tmp836 = tmp157*(tmp834 + tmp835);
      const real_t tmp837 = 0.0043612323249822204*tmp836;
      const real_t tmp838 = 1.3169318389705873*tmp191 + 1.3169318389705873*tmp192 + 1.3169318389705873*tmp197;
      const real_t tmp839 = 0.11827798082591956*tmp186 + 0.11827798082591956*tmp190 + 0.11827798082591956*tmp196;
      const real_t tmp840 = tmp198*(tmp838 + tmp839);
      const real_t tmp841 = 0.012248248047610821*tmp840;
      const real_t tmp842 = 0.41537646564397157*tmp232 + 0.41537646564397157*tmp233 + 0.41537646564397157*tmp238;
      const real_t tmp843 = 1.730840956191074*tmp227 + 1.730840956191074*tmp231 + 1.730840956191074*tmp237;
      const real_t tmp844 = tmp239*(tmp842 + tmp843);
      const real_t tmp845 = 0.017219568446249611*tmp844;
      const real_t tmp846 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp274 + 1.2177936097379878*tmp279;
      const real_t tmp847 = 0.96110665971229103*tmp268 + 0.96110665971229103*tmp272 + 0.96110665971229103*tmp278;
      const real_t tmp848 = tmp280*(tmp846 + tmp847);
      const real_t tmp849 = 0.021490090227737114*tmp848;
      const real_t tmp850 = 2.1520288156647434*tmp308 + 2.1520288156647434*tmp309 + 2.1520288156647434*tmp313;
      const real_t tmp851 = 0.51764549515564062*tmp304 + 0.51764549515564062*tmp307 + 0.51764549515564062*tmp312;
      const real_t tmp852 = tmp314*(tmp850 + tmp851);
      const real_t tmp853 = 0.0084625239161731543*tmp852;
      const real_t tmp854 = 0.035965040373342916*tmp348 + 0.035965040373342916*tmp349 + 0.035965040373342916*tmp354;
      const real_t tmp855 = 0.48616796533571183*tmp343 + 0.48616796533571183*tmp347 + 0.48616796533571183*tmp353;
      const real_t tmp856 = tmp355*(tmp854 + tmp855);
      const real_t tmp857 = 0.0088251866742250357*tmp856;
      const real_t tmp858 = 1.7318139619254227*tmp383 + 1.7318139619254227*tmp384 + 1.7318139619254227*tmp388;
      const real_t tmp859 = 1.8030635043651069*tmp379 + 1.8030635043651069*tmp382 + 1.8030635043651069*tmp387;
      const real_t tmp860 = tmp389*(tmp858 + tmp859);
      const real_t tmp861 = 0.0077188851041817101*tmp860;
      const real_t tmp862 = 0.21336495814298084*tmp423 + 0.21336495814298084*tmp424 + 0.21336495814298084*tmp429;
      const real_t tmp863 = 1.6770652555180527*tmp418 + 1.6770652555180527*tmp422 + 1.6770652555180527*tmp428;
      const real_t tmp864 = tmp430*(tmp862 + tmp863);
      const real_t tmp865 = 0.006659242794062166*tmp864;
      const real_t tmp866 = 2.9649155283744921*tmp464 + 2.9649155283744921*tmp465 + 2.9649155283744921*tmp470;
      const real_t tmp867 = 0.2688931795735332*tmp459 + 0.2688931795735332*tmp463 + 0.2688931795735332*tmp469;
      const real_t tmp868 = tmp471*(tmp866 + tmp867);
      const real_t tmp869 = 0.0061548665412862651*tmp868;
      const real_t tmp870 = tmp75*(-2.2903585922226259*tmp49 - 2.2903585922226259*tmp53 - 2.2903585922226259*tmp59 - tmp738 - tmp782);
      const real_t tmp871 = 0.011829781572832234*tmp870;
      const real_t tmp872 = tmp116*(0.11955133084429059*tmp101*tmp17*tmp6*tmp84 + 0.11955133084429059*tmp105*tmp17*tmp28*tmp84 + 0.11955133084429059*tmp111*tmp17*tmp38*tmp84 - tmp742 - tmp786);
      const real_t tmp873 = 0.0061414854617707626*tmp872;
      const real_t tmp874 = tmp157*(3.030776123262295*tmp125*tmp142*tmp17*tmp6 + 3.030776123262295*tmp125*tmp146*tmp17*tmp28 + 3.030776123262295*tmp125*tmp152*tmp17*tmp38 - tmp746 - tmp790);
      const real_t tmp875 = 0.0043612323249822204*tmp874;
      const real_t tmp876 = tmp198*(0.021561698496338266*tmp166*tmp17*tmp183*tmp6 + 0.021561698496338266*tmp166*tmp17*tmp187*tmp28 + 0.021561698496338266*tmp166*tmp17*tmp193*tmp38 - tmp750 - tmp794);
      const real_t tmp877 = 0.012248248047610821*tmp876;
      const real_t tmp878 = tmp239*(-0.97680333550942233*tmp226 - 0.97680333550942233*tmp230 - 0.97680333550942233*tmp236 - tmp754 - tmp798);
      const real_t tmp879 = 0.017219568446249611*tmp878;
      const real_t tmp880 = tmp280*(0.80668592322658683*tmp17*tmp248*tmp265*tmp6 + 0.80668592322658683*tmp17*tmp248*tmp269*tmp28 + 0.80668592322658683*tmp17*tmp248*tmp275*tmp38 - tmp758 - tmp802);
      const real_t tmp881 = 0.021490090227737114*tmp880;
      const real_t tmp882 = tmp314*(-1.3111976295201027*tmp303 - 1.3111976295201027*tmp306 - 1.3111976295201027*tmp311 - tmp762 - tmp806);
      const real_t tmp883 = 0.0084625239161731543*tmp882;
      const real_t tmp884 = tmp355*(1.0259150868534226*tmp17*tmp28*tmp323*tmp344 + 1.0259150868534226*tmp17*tmp323*tmp340*tmp6 + 1.0259150868534226*tmp17*tmp323*tmp350*tmp38 - tmp766 - tmp810);
      const real_t tmp885 = 0.0088251866742250357*tmp884;
      const real_t tmp886 = tmp389*(-0.010530396686001087*tmp378 - 0.010530396686001087*tmp381 - 0.010530396686001087*tmp386 - tmp770 - tmp814);
      const real_t tmp887 = 0.0077188851041817101*tmp886;
      const real_t tmp888 = tmp430*(1.727318301866275*tmp17*tmp28*tmp398*tmp419 + 1.727318301866275*tmp17*tmp38*tmp398*tmp425 + 1.727318301866275*tmp17*tmp398*tmp415*tmp6 - tmp774 - tmp818);
      const real_t tmp889 = 0.006659242794062166*tmp888;
      const real_t tmp890 = tmp471*(0.48471985386318561*tmp17*tmp28*tmp439*tmp460 + 0.48471985386318561*tmp17*tmp38*tmp439*tmp466 + 0.48471985386318561*tmp17*tmp439*tmp456*tmp6 - tmp778 - tmp822);
      const real_t tmp891 = 0.0061548665412862651*tmp890;
      const real_t tmp892 = tmp75*(0.020786379341558803*tmp17*tmp22*tmp26*tmp47 + 0.020786379341558803*tmp17*tmp22*tmp32*tmp51 + 0.020786379341558803*tmp17*tmp22*tmp42*tmp57 - tmp739 - tmp826);
      const real_t tmp893 = 0.011829781572832234*tmp892;
      const real_t tmp894 = tmp116*(0.066329140985678992*tmp101*tmp17*tmp26*tmp84 + 0.066329140985678992*tmp105*tmp17*tmp32*tmp84 + 0.066329140985678992*tmp111*tmp17*tmp42*tmp84 - tmp743 - tmp830);
      const real_t tmp895 = 0.0061414854617707626*tmp894;
      const real_t tmp896 = tmp157*(2.3862426959925824*tmp125*tmp142*tmp17*tmp26 + 2.3862426959925824*tmp125*tmp146*tmp17*tmp32 + 2.3862426959925824*tmp125*tmp152*tmp17*tmp42 - tmp747 - tmp834);
      const real_t tmp897 = 0.0043612323249822204*tmp896;
      const real_t tmp898 = tmp198*(-0.023755899620671705*tmp186 - 0.023755899620671705*tmp190 - 0.023755899620671705*tmp196 - tmp751 - tmp838);
      const real_t tmp899 = 0.012248248047610821*tmp898;
      const real_t tmp900 = tmp239*(0.023113155683794462*tmp17*tmp207*tmp224*tmp26 + 0.023113155683794462*tmp17*tmp207*tmp228*tmp32 + 0.023113155683794462*tmp17*tmp207*tmp234*tmp42 - tmp755 - tmp842);
      const real_t tmp901 = 0.017219568446249611*tmp900;
      const real_t tmp902 = tmp280*(0.096099217150166227*tmp17*tmp248*tmp26*tmp265 + 0.096099217150166227*tmp17*tmp248*tmp269*tmp32 + 0.096099217150166227*tmp17*tmp248*tmp275*tmp42 - tmp759 - tmp846);
      const real_t tmp903 = 0.021490090227737114*tmp902;
      const real_t tmp904 = tmp314*(-2.1424647858349868*tmp304 - 2.1424647858349868*tmp307 - 2.1424647858349868*tmp312 - tmp763 - tmp850);
      const real_t tmp905 = 0.0084625239161731543*tmp904;
      const real_t tmp906 = tmp355*(2.215926000198841*tmp17*tmp26*tmp323*tmp340 + 2.215926000198841*tmp17*tmp32*tmp323*tmp344 + 2.215926000198841*tmp17*tmp323*tmp350*tmp42 - tmp767 - tmp854);
      const real_t tmp907 = 0.0088251866742250357*tmp906;
      const real_t tmp908 = tmp389*(-1.504517893413688*tmp379 - 1.504517893413688*tmp382 - 1.504517893413688*tmp387 - tmp771 - tmp858);
      const real_t tmp909 = 0.0077188851041817101*tmp908;
      const real_t tmp910 = tmp430*(1.7050790859596399*tmp17*tmp26*tmp398*tmp415 + 1.7050790859596399*tmp17*tmp32*tmp398*tmp419 + 1.7050790859596399*tmp17*tmp398*tmp42*tmp425 - tmp775 - tmp862);
      const real_t tmp911 = 0.006659242794062166*tmp910;
      const real_t tmp912 = tmp471*(-2.339459955416912*tmp459 - 2.339459955416912*tmp463 - 2.339459955416912*tmp469 - tmp779 - tmp866);
      const real_t tmp913 = 0.0061548665412862651*tmp912;
      const real_t tmp914 = tmp75*(0.058384491239200198*tmp17*tmp22*tmp34*tmp47 + 0.058384491239200198*tmp17*tmp22*tmp36*tmp51 + 0.058384491239200198*tmp17*tmp22*tmp44*tmp57 - tmp783 - tmp827);
      const real_t tmp915 = 0.011829781572832234*tmp914;
      const real_t tmp916 = tmp116*(-2.6180852134415042*tmp109 - 2.6180852134415042*tmp110 - 2.6180852134415042*tmp115 - tmp787 - tmp831);
      const real_t tmp917 = 0.0061414854617707626*tmp916;
      const real_t tmp918 = tmp157*(2.923056903871144*tmp125*tmp142*tmp17*tmp34 + 2.923056903871144*tmp125*tmp146*tmp17*tmp36 + 2.923056903871144*tmp125*tmp152*tmp17*tmp44 - tmp791 - tmp835);
      const real_t tmp919 = 0.0043612323249822204*tmp918;
      const real_t tmp920 = tmp198*(1.1748979585239958*tmp166*tmp17*tmp183*tmp34 + 1.1748979585239958*tmp166*tmp17*tmp187*tmp36 + 1.1748979585239958*tmp166*tmp17*tmp193*tmp44 - tmp795 - tmp839);
      const real_t tmp921 = 0.012248248047610821*tmp920;
      const real_t tmp922 = tmp239*(-1.292351334863308*tmp232 - 1.292351334863308*tmp233 - 1.292351334863308*tmp238 - tmp799 - tmp843);
      const real_t tmp923 = 0.017219568446249611*tmp922;
      const real_t tmp924 = tmp280*(0.35278616717586297*tmp17*tmp248*tmp265*tmp34 + 0.35278616717586297*tmp17*tmp248*tmp269*tmp36 + 0.35278616717586297*tmp17*tmp248*tmp275*tmp44 - tmp803 - tmp847);
      const real_t tmp925 = 0.021490090227737114*tmp924;
      const real_t tmp926 = tmp314*(-0.50808146532588383*tmp308 - 0.50808146532588383*tmp309 - 0.50808146532588383*tmp313 - tmp807 - tmp851);
      const real_t tmp927 = 0.0084625239161731543*tmp926;
      const real_t tmp928 = tmp355*(1.7657230752364721*tmp17*tmp323*tmp34*tmp340 + 1.7657230752364721*tmp17*tmp323*tmp344*tmp36 + 1.7657230752364721*tmp17*tmp323*tmp350*tmp44 - tmp811 - tmp855);
      const real_t tmp929 = 0.0088251866742250357*tmp928;
      const real_t tmp930 = tmp389*(-1.5757674358533722*tmp383 - 1.5757674358533722*tmp384 - 1.5757674358533722*tmp388 - tmp815 - tmp859);
      const real_t tmp931 = 0.0077188851041817101*tmp930;
      const real_t tmp932 = tmp430*(0.24137878858456796*tmp17*tmp34*tmp398*tmp415 + 0.24137878858456796*tmp17*tmp36*tmp398*tmp419 + 0.24137878858456796*tmp17*tmp398*tmp425*tmp44 - tmp819 - tmp863);
      const real_t tmp933 = 0.006659242794062166*tmp932;
      const real_t tmp934 = tmp471*(0.35656239338404694*tmp17*tmp34*tmp439*tmp456 + 0.35656239338404694*tmp17*tmp36*tmp439*tmp460 + 0.35656239338404694*tmp17*tmp439*tmp44*tmp466 - tmp823 - tmp867);
      const real_t tmp935 = 0.0061548665412862651*tmp934;
      elMat(0,0) = -tmp100*tmp118 - tmp141*tmp159 - tmp182*tmp200 - tmp223*tmp241 - tmp264*tmp282 - tmp301*tmp316 - tmp339*tmp357 - tmp376*tmp391 - tmp414*tmp432 - tmp455*tmp473 - tmp46*tmp77;
      elMat(0,1) = -tmp117*tmp477 + tmp158*tmp479 + tmp199*tmp481 - tmp240*tmp483 + tmp281*tmp485 + tmp315*tmp487 + tmp356*tmp489 - tmp390*tmp491 - tmp431*tmp493 + tmp472*tmp495 + tmp475*tmp76;
      elMat(0,2) = tmp117*tmp499 + tmp158*tmp501 - tmp199*tmp503 + tmp240*tmp505 - tmp281*tmp507 - tmp315*tmp509 + tmp356*tmp511 - tmp390*tmp513 + tmp431*tmp515 - tmp472*tmp517 + tmp497*tmp76;
      elMat(0,3) = tmp117*tmp521 + tmp158*tmp523 - tmp199*tmp525 - tmp240*tmp527 + tmp281*tmp529 - tmp315*tmp531 - tmp356*tmp533 + tmp390*tmp535 + tmp431*tmp537 + tmp472*tmp539 - tmp519*tmp76;
      elMat(0,4) = -tmp118*tmp545 - tmp159*tmp548 - tmp200*tmp551 - tmp241*tmp554 - tmp282*tmp557 - tmp316*tmp560 - tmp357*tmp563 - tmp391*tmp566 - tmp432*tmp569 - tmp473*tmp572 - tmp542*tmp77;
      elMat(0,5) = -tmp118*tmp578 - tmp159*tmp581 - tmp200*tmp584 - tmp241*tmp587 - tmp282*tmp590 - tmp316*tmp593 - tmp357*tmp596 - tmp391*tmp599 - tmp432*tmp602 - tmp473*tmp605 - tmp575*tmp77;
      elMat(0,6) = -tmp118*tmp611 - tmp159*tmp614 - tmp200*tmp617 - tmp241*tmp620 - tmp282*tmp623 - tmp316*tmp626 - tmp357*tmp629 - tmp391*tmp632 - tmp432*tmp635 - tmp473*tmp638 - tmp608*tmp77;
      elMat(0,7) = -tmp118*tmp640 - tmp159*tmp641 - tmp200*tmp642 - tmp241*tmp643 - tmp282*tmp644 - tmp316*tmp645 - tmp357*tmp646 - tmp391*tmp647 - tmp432*tmp648 - tmp473*tmp649 - tmp639*tmp77;
      elMat(0,8) = -tmp118*tmp651 - tmp159*tmp652 - tmp200*tmp653 - tmp241*tmp654 - tmp282*tmp655 - tmp316*tmp656 - tmp357*tmp657 - tmp391*tmp658 - tmp432*tmp659 - tmp473*tmp660 - tmp650*tmp77;
      elMat(0,9) = -tmp118*tmp662 - tmp159*tmp663 - tmp200*tmp664 - tmp241*tmp665 - tmp282*tmp666 - tmp316*tmp667 - tmp357*tmp668 - tmp391*tmp669 - tmp432*tmp670 - tmp473*tmp671 - tmp661*tmp77;
      elMat(1,0) = -tmp100*tmp675 + tmp141*tmp677 + tmp182*tmp679 - tmp223*tmp681 + tmp264*tmp683 + tmp301*tmp685 + tmp339*tmp687 - tmp376*tmp689 - tmp414*tmp691 + tmp455*tmp693 + tmp46*tmp673;
      elMat(1,1) = -0.0044189289060270545*tmp474*tmp672 - 0.024813055531683337*tmp476*tmp674 - 0.0030629268005785541*tmp478*tmp676 - 0.0095222010320695129*tmp480*tmp678 - 0.0091974623207422349*tmp482*tmp680 - 3.2507885820395218e-5*tmp484*tmp682 - 0.0019689404753353082*tmp486*tmp684 - 0.0023300554370080033*tmp488*tmp686 - 0.0049779938500050438*tmp490*tmp688 - 0.0030527125027828036*tmp492*tmp690 - 0.0032898819246143778*tmp494*tmp692;
      elMat(1,2) = -0.0041470891910238041*tmp496*tmp672 + 0.008324951843965811*tmp498*tmp674 - 0.001100936202251903*tmp500*tmp676 + 0.0034227212415181688*tmp502*tmp678 + 0.0073573503010591077*tmp504*tmp680 + 0.00018203655806882805*tmp506*tmp682 + 0.0047025085100984255*tmp508*tmp684 - 0.00437157426475263*tmp510*tmp686 - 0.0045363353981484533*tmp512*tmp688 + 0.0035467343920440879*tmp514*tmp690 + 0.0088418544316446034*tmp516*tmp692;
      elMat(1,3) = 0.012562818798813762*tmp518*tmp672 + 0.00898195821005612*tmp520*tmp674 - 0.003456627437787347*tmp522*tmp676 + 0.0029333115747788548*tmp524*tmp678 - 0.0052263646286142846*tmp526*tmp680 - 0.00041188701176975823*tmp528*tmp682 + 0.0013093287357882949*tmp530*tmp684 + 0.0010247249374778298*tmp532*tmp686 + 0.0047245269499351069*tmp534*tmp688 + 0.0036470052771574082*tmp536*tmp690 - 0.0038665731836137946*tmp538*tmp692;
      elMat(1,4) = tmp542*tmp673 - tmp545*tmp675 + tmp548*tmp677 + tmp551*tmp679 - tmp554*tmp681 + tmp557*tmp683 + tmp560*tmp685 + tmp563*tmp687 - tmp566*tmp689 - tmp569*tmp691 + tmp572*tmp693;
      elMat(1,5) = tmp575*tmp673 - tmp578*tmp675 + tmp581*tmp677 + tmp584*tmp679 - tmp587*tmp681 + tmp590*tmp683 + tmp593*tmp685 + tmp596*tmp687 - tmp599*tmp689 - tmp602*tmp691 + tmp605*tmp693;
      elMat(1,6) = tmp608*tmp673 - tmp611*tmp675 + tmp614*tmp677 + tmp617*tmp679 - tmp620*tmp681 + tmp623*tmp683 + tmp626*tmp685 + tmp629*tmp687 - tmp632*tmp689 - tmp635*tmp691 + tmp638*tmp693;
      elMat(1,7) = tmp639*tmp673 - tmp640*tmp675 + tmp641*tmp677 + tmp642*tmp679 - tmp643*tmp681 + tmp644*tmp683 + tmp645*tmp685 + tmp646*tmp687 - tmp647*tmp689 - tmp648*tmp691 + tmp649*tmp693;
      elMat(1,8) = tmp650*tmp673 - tmp651*tmp675 + tmp652*tmp677 + tmp653*tmp679 - tmp654*tmp681 + tmp655*tmp683 + tmp656*tmp685 + tmp657*tmp687 - tmp658*tmp689 - tmp659*tmp691 + tmp660*tmp693;
      elMat(1,9) = tmp661*tmp673 - tmp662*tmp675 + tmp663*tmp677 + tmp664*tmp679 - tmp665*tmp681 + tmp666*tmp683 + tmp667*tmp685 + tmp668*tmp687 - tmp669*tmp689 - tmp670*tmp691 + tmp671*tmp693;
      elMat(2,0) = tmp100*tmp697 + tmp141*tmp699 - tmp182*tmp701 + tmp223*tmp703 - tmp264*tmp705 - tmp301*tmp707 + tmp339*tmp709 - tmp376*tmp711 + tmp414*tmp713 - tmp455*tmp715 + tmp46*tmp695;
      elMat(2,1) = -0.0041470891910238041*tmp474*tmp694 + 0.008324951843965811*tmp476*tmp696 - 0.001100936202251903*tmp478*tmp698 + 0.0034227212415181688*tmp480*tmp700 + 0.0073573503010591077*tmp482*tmp702 + 0.00018203655806882805*tmp484*tmp704 + 0.0047025085100984255*tmp486*tmp706 - 0.00437157426475263*tmp488*tmp708 - 0.0045363353981484533*tmp490*tmp710 + 0.0035467343920440879*tmp492*tmp712 + 0.0088418544316446034*tmp494*tmp714;
      elMat(2,2) = -0.0038919722684040777*tmp496*tmp694 - 0.0027930789545792005*tmp498*tmp696 - 0.00039571971527360629*tmp500*tmp698 - 0.001230284958034916*tmp502*tmp700 - 0.0058853846381537785*tmp504*tmp702 - 0.0010193621528212606*tmp506*tmp704 - 0.011231211184168578*tmp508*tmp706 - 0.0082018055230425203*tmp510*tmp708 - 0.0041338618456657665*tmp512*tmp710 - 0.0041207040742425758*tmp514*tmp712 - 0.023763281352280435*tmp516*tmp714;
      elMat(2,3) = 0.011789990551396352*tmp518*tmp694 - 0.003013509137065063*tmp520*tmp696 - 0.0012424476756148744*tmp522*tmp698 - 0.0010543683966735859*tmp524*tmp700 + 0.0041807396467460484*tmp526*tmp702 + 0.0023064709390845928*tmp528*tmp704 - 0.0031271283208865507*tmp530*tmp706 + 0.0019225556156211496*tmp532*tmp708 + 0.0043053566332700976*tmp534*tmp710 - 0.0042372018434979264*tmp536*tmp712 + 0.010391764209842001*tmp538*tmp714;
      elMat(2,4) = tmp542*tmp695 + tmp545*tmp697 + tmp548*tmp699 - tmp551*tmp701 + tmp554*tmp703 - tmp557*tmp705 - tmp560*tmp707 + tmp563*tmp709 - tmp566*tmp711 + tmp569*tmp713 - tmp572*tmp715;
      elMat(2,5) = tmp575*tmp695 + tmp578*tmp697 + tmp581*tmp699 - tmp584*tmp701 + tmp587*tmp703 - tmp590*tmp705 - tmp593*tmp707 + tmp596*tmp709 - tmp599*tmp711 + tmp602*tmp713 - tmp605*tmp715;
      elMat(2,6) = tmp608*tmp695 + tmp611*tmp697 + tmp614*tmp699 - tmp617*tmp701 + tmp620*tmp703 - tmp623*tmp705 - tmp626*tmp707 + tmp629*tmp709 - tmp632*tmp711 + tmp635*tmp713 - tmp638*tmp715;
      elMat(2,7) = tmp639*tmp695 + tmp640*tmp697 + tmp641*tmp699 - tmp642*tmp701 + tmp643*tmp703 - tmp644*tmp705 - tmp645*tmp707 + tmp646*tmp709 - tmp647*tmp711 + tmp648*tmp713 - tmp649*tmp715;
      elMat(2,8) = tmp650*tmp695 + tmp651*tmp697 + tmp652*tmp699 - tmp653*tmp701 + tmp654*tmp703 - tmp655*tmp705 - tmp656*tmp707 + tmp657*tmp709 - tmp658*tmp711 + tmp659*tmp713 - tmp660*tmp715;
      elMat(2,9) = tmp661*tmp695 + tmp662*tmp697 + tmp663*tmp699 - tmp664*tmp701 + tmp665*tmp703 - tmp666*tmp705 - tmp667*tmp707 + tmp668*tmp709 - tmp669*tmp711 + tmp670*tmp713 - tmp671*tmp715;
      elMat(3,0) = tmp100*tmp719 + tmp141*tmp721 - tmp182*tmp723 - tmp223*tmp725 + tmp264*tmp727 - tmp301*tmp729 - tmp339*tmp731 + tmp376*tmp733 + tmp414*tmp735 + tmp455*tmp737 - tmp46*tmp717;
      elMat(3,1) = 0.012562818798813762*tmp474*tmp716 + 0.00898195821005612*tmp476*tmp718 - 0.003456627437787347*tmp478*tmp720 + 0.0029333115747788548*tmp480*tmp722 - 0.0052263646286142846*tmp482*tmp724 - 0.00041188701176975823*tmp484*tmp726 + 0.0013093287357882949*tmp486*tmp728 + 0.0010247249374778298*tmp488*tmp730 + 0.0047245269499351069*tmp490*tmp732 + 0.0036470052771574082*tmp492*tmp734 - 0.0038665731836137946*tmp494*tmp736;
      elMat(3,2) = 0.011789990551396352*tmp496*tmp716 - 0.003013509137065063*tmp498*tmp718 - 0.0012424476756148744*tmp500*tmp720 - 0.0010543683966735859*tmp502*tmp722 + 0.0041807396467460484*tmp504*tmp724 + 0.0023064709390845928*tmp506*tmp726 - 0.0031271283208865507*tmp508*tmp728 + 0.0019225556156211496*tmp510*tmp730 + 0.0043053566332700976*tmp512*tmp732 - 0.0042372018434979264*tmp514*tmp734 + 0.010391764209842001*tmp516*tmp736;
      elMat(3,3) = -0.035715536395385078*tmp518*tmp716 - 0.0032513357004413015*tmp520*tmp718 - 0.0039009333299794896*tmp522*tmp720 - 0.00090360587491835199*tmp524*tmp722 - 0.0029698286634596638*tmp526*tmp724 - 0.0052187617306746906*tmp528*tmp726 - 0.00087069251703458632*tmp530*tmp728 - 0.00045065931943546946*tmp532*tmp730 - 0.0044839659455667077*tmp534*tmp732 - 0.0043569931591950859*tmp536*tmp734 - 0.0045443540305762555*tmp538*tmp736;
      elMat(3,4) = -tmp542*tmp717 + tmp545*tmp719 + tmp548*tmp721 - tmp551*tmp723 - tmp554*tmp725 + tmp557*tmp727 - tmp560*tmp729 - tmp563*tmp731 + tmp566*tmp733 + tmp569*tmp735 + tmp572*tmp737;
      elMat(3,5) = -tmp575*tmp717 + tmp578*tmp719 + tmp581*tmp721 - tmp584*tmp723 - tmp587*tmp725 + tmp590*tmp727 - tmp593*tmp729 - tmp596*tmp731 + tmp599*tmp733 + tmp602*tmp735 + tmp605*tmp737;
      elMat(3,6) = -tmp608*tmp717 + tmp611*tmp719 + tmp614*tmp721 - tmp617*tmp723 - tmp620*tmp725 + tmp623*tmp727 - tmp626*tmp729 - tmp629*tmp731 + tmp632*tmp733 + tmp635*tmp735 + tmp638*tmp737;
      elMat(3,7) = -tmp639*tmp717 + tmp640*tmp719 + tmp641*tmp721 - tmp642*tmp723 - tmp643*tmp725 + tmp644*tmp727 - tmp645*tmp729 - tmp646*tmp731 + tmp647*tmp733 + tmp648*tmp735 + tmp649*tmp737;
      elMat(3,8) = -tmp650*tmp717 + tmp651*tmp719 + tmp652*tmp721 - tmp653*tmp723 - tmp654*tmp725 + tmp655*tmp727 - tmp656*tmp729 - tmp657*tmp731 + tmp658*tmp733 + tmp659*tmp735 + tmp660*tmp737;
      elMat(3,9) = -tmp661*tmp717 + tmp662*tmp719 + tmp663*tmp721 - tmp664*tmp723 - tmp665*tmp725 + tmp666*tmp727 - tmp667*tmp729 - tmp668*tmp731 + tmp669*tmp733 + tmp670*tmp735 + tmp671*tmp737;
      elMat(4,0) = -tmp100*tmp745 - tmp141*tmp749 - tmp182*tmp753 - tmp223*tmp757 - tmp264*tmp761 - tmp301*tmp765 - tmp339*tmp769 - tmp376*tmp773 - tmp414*tmp777 - tmp455*tmp781 - tmp46*tmp741;
      elMat(4,1) = tmp475*tmp740 - tmp477*tmp744 + tmp479*tmp748 + tmp481*tmp752 - tmp483*tmp756 + tmp485*tmp760 + tmp487*tmp764 + tmp489*tmp768 - tmp491*tmp772 - tmp493*tmp776 + tmp495*tmp780;
      elMat(4,2) = tmp497*tmp740 + tmp499*tmp744 + tmp501*tmp748 - tmp503*tmp752 + tmp505*tmp756 - tmp507*tmp760 - tmp509*tmp764 + tmp511*tmp768 - tmp513*tmp772 + tmp515*tmp776 - tmp517*tmp780;
      elMat(4,3) = -tmp519*tmp740 + tmp521*tmp744 + tmp523*tmp748 - tmp525*tmp752 - tmp527*tmp756 + tmp529*tmp760 - tmp531*tmp764 - tmp533*tmp768 + tmp535*tmp772 + tmp537*tmp776 + tmp539*tmp780;
      elMat(4,4) = -tmp542*tmp741 - tmp545*tmp745 - tmp548*tmp749 - tmp551*tmp753 - tmp554*tmp757 - tmp557*tmp761 - tmp560*tmp765 - tmp563*tmp769 - tmp566*tmp773 - tmp569*tmp777 - tmp572*tmp781;
      elMat(4,5) = -tmp575*tmp741 - tmp578*tmp745 - tmp581*tmp749 - tmp584*tmp753 - tmp587*tmp757 - tmp590*tmp761 - tmp593*tmp765 - tmp596*tmp769 - tmp599*tmp773 - tmp602*tmp777 - tmp605*tmp781;
      elMat(4,6) = -tmp608*tmp741 - tmp611*tmp745 - tmp614*tmp749 - tmp617*tmp753 - tmp620*tmp757 - tmp623*tmp761 - tmp626*tmp765 - tmp629*tmp769 - tmp632*tmp773 - tmp635*tmp777 - tmp638*tmp781;
      elMat(4,7) = -tmp639*tmp741 - tmp640*tmp745 - tmp641*tmp749 - tmp642*tmp753 - tmp643*tmp757 - tmp644*tmp761 - tmp645*tmp765 - tmp646*tmp769 - tmp647*tmp773 - tmp648*tmp777 - tmp649*tmp781;
      elMat(4,8) = -tmp650*tmp741 - tmp651*tmp745 - tmp652*tmp749 - tmp653*tmp753 - tmp654*tmp757 - tmp655*tmp761 - tmp656*tmp765 - tmp657*tmp769 - tmp658*tmp773 - tmp659*tmp777 - tmp660*tmp781;
      elMat(4,9) = -tmp661*tmp741 - tmp662*tmp745 - tmp663*tmp749 - tmp664*tmp753 - tmp665*tmp757 - tmp666*tmp761 - tmp667*tmp765 - tmp668*tmp769 - tmp669*tmp773 - tmp670*tmp777 - tmp671*tmp781;
      elMat(5,0) = -tmp100*tmp789 - tmp141*tmp793 - tmp182*tmp797 - tmp223*tmp801 - tmp264*tmp805 - tmp301*tmp809 - tmp339*tmp813 - tmp376*tmp817 - tmp414*tmp821 - tmp455*tmp825 - tmp46*tmp785;
      elMat(5,1) = tmp475*tmp784 - tmp477*tmp788 + tmp479*tmp792 + tmp481*tmp796 - tmp483*tmp800 + tmp485*tmp804 + tmp487*tmp808 + tmp489*tmp812 - tmp491*tmp816 - tmp493*tmp820 + tmp495*tmp824;
      elMat(5,2) = tmp497*tmp784 + tmp499*tmp788 + tmp501*tmp792 - tmp503*tmp796 + tmp505*tmp800 - tmp507*tmp804 - tmp509*tmp808 + tmp511*tmp812 - tmp513*tmp816 + tmp515*tmp820 - tmp517*tmp824;
      elMat(5,3) = -tmp519*tmp784 + tmp521*tmp788 + tmp523*tmp792 - tmp525*tmp796 - tmp527*tmp800 + tmp529*tmp804 - tmp531*tmp808 - tmp533*tmp812 + tmp535*tmp816 + tmp537*tmp820 + tmp539*tmp824;
      elMat(5,4) = -tmp542*tmp785 - tmp545*tmp789 - tmp548*tmp793 - tmp551*tmp797 - tmp554*tmp801 - tmp557*tmp805 - tmp560*tmp809 - tmp563*tmp813 - tmp566*tmp817 - tmp569*tmp821 - tmp572*tmp825;
      elMat(5,5) = -tmp575*tmp785 - tmp578*tmp789 - tmp581*tmp793 - tmp584*tmp797 - tmp587*tmp801 - tmp590*tmp805 - tmp593*tmp809 - tmp596*tmp813 - tmp599*tmp817 - tmp602*tmp821 - tmp605*tmp825;
      elMat(5,6) = -tmp608*tmp785 - tmp611*tmp789 - tmp614*tmp793 - tmp617*tmp797 - tmp620*tmp801 - tmp623*tmp805 - tmp626*tmp809 - tmp629*tmp813 - tmp632*tmp817 - tmp635*tmp821 - tmp638*tmp825;
      elMat(5,7) = -tmp639*tmp785 - tmp640*tmp789 - tmp641*tmp793 - tmp642*tmp797 - tmp643*tmp801 - tmp644*tmp805 - tmp645*tmp809 - tmp646*tmp813 - tmp647*tmp817 - tmp648*tmp821 - tmp649*tmp825;
      elMat(5,8) = -tmp650*tmp785 - tmp651*tmp789 - tmp652*tmp793 - tmp653*tmp797 - tmp654*tmp801 - tmp655*tmp805 - tmp656*tmp809 - tmp657*tmp813 - tmp658*tmp817 - tmp659*tmp821 - tmp660*tmp825;
      elMat(5,9) = -tmp661*tmp785 - tmp662*tmp789 - tmp663*tmp793 - tmp664*tmp797 - tmp665*tmp801 - tmp666*tmp805 - tmp667*tmp809 - tmp668*tmp813 - tmp669*tmp817 - tmp670*tmp821 - tmp671*tmp825;
      elMat(6,0) = -tmp100*tmp833 - tmp141*tmp837 - tmp182*tmp841 - tmp223*tmp845 - tmp264*tmp849 - tmp301*tmp853 - tmp339*tmp857 - tmp376*tmp861 - tmp414*tmp865 - tmp455*tmp869 - tmp46*tmp829;
      elMat(6,1) = tmp475*tmp828 - tmp477*tmp832 + tmp479*tmp836 + tmp481*tmp840 - tmp483*tmp844 + tmp485*tmp848 + tmp487*tmp852 + tmp489*tmp856 - tmp491*tmp860 - tmp493*tmp864 + tmp495*tmp868;
      elMat(6,2) = tmp497*tmp828 + tmp499*tmp832 + tmp501*tmp836 - tmp503*tmp840 + tmp505*tmp844 - tmp507*tmp848 - tmp509*tmp852 + tmp511*tmp856 - tmp513*tmp860 + tmp515*tmp864 - tmp517*tmp868;
      elMat(6,3) = -tmp519*tmp828 + tmp521*tmp832 + tmp523*tmp836 - tmp525*tmp840 - tmp527*tmp844 + tmp529*tmp848 - tmp531*tmp852 - tmp533*tmp856 + tmp535*tmp860 + tmp537*tmp864 + tmp539*tmp868;
      elMat(6,4) = -tmp542*tmp829 - tmp545*tmp833 - tmp548*tmp837 - tmp551*tmp841 - tmp554*tmp845 - tmp557*tmp849 - tmp560*tmp853 - tmp563*tmp857 - tmp566*tmp861 - tmp569*tmp865 - tmp572*tmp869;
      elMat(6,5) = -tmp575*tmp829 - tmp578*tmp833 - tmp581*tmp837 - tmp584*tmp841 - tmp587*tmp845 - tmp590*tmp849 - tmp593*tmp853 - tmp596*tmp857 - tmp599*tmp861 - tmp602*tmp865 - tmp605*tmp869;
      elMat(6,6) = -tmp608*tmp829 - tmp611*tmp833 - tmp614*tmp837 - tmp617*tmp841 - tmp620*tmp845 - tmp623*tmp849 - tmp626*tmp853 - tmp629*tmp857 - tmp632*tmp861 - tmp635*tmp865 - tmp638*tmp869;
      elMat(6,7) = -tmp639*tmp829 - tmp640*tmp833 - tmp641*tmp837 - tmp642*tmp841 - tmp643*tmp845 - tmp644*tmp849 - tmp645*tmp853 - tmp646*tmp857 - tmp647*tmp861 - tmp648*tmp865 - tmp649*tmp869;
      elMat(6,8) = -tmp650*tmp829 - tmp651*tmp833 - tmp652*tmp837 - tmp653*tmp841 - tmp654*tmp845 - tmp655*tmp849 - tmp656*tmp853 - tmp657*tmp857 - tmp658*tmp861 - tmp659*tmp865 - tmp660*tmp869;
      elMat(6,9) = -tmp661*tmp829 - tmp662*tmp833 - tmp663*tmp837 - tmp664*tmp841 - tmp665*tmp845 - tmp666*tmp849 - tmp667*tmp853 - tmp668*tmp857 - tmp669*tmp861 - tmp670*tmp865 - tmp671*tmp869;
      elMat(7,0) = -tmp100*tmp873 - tmp141*tmp875 - tmp182*tmp877 - tmp223*tmp879 - tmp264*tmp881 - tmp301*tmp883 - tmp339*tmp885 - tmp376*tmp887 - tmp414*tmp889 - tmp455*tmp891 - tmp46*tmp871;
      elMat(7,1) = tmp475*tmp870 - tmp477*tmp872 + tmp479*tmp874 + tmp481*tmp876 - tmp483*tmp878 + tmp485*tmp880 + tmp487*tmp882 + tmp489*tmp884 - tmp491*tmp886 - tmp493*tmp888 + tmp495*tmp890;
      elMat(7,2) = tmp497*tmp870 + tmp499*tmp872 + tmp501*tmp874 - tmp503*tmp876 + tmp505*tmp878 - tmp507*tmp880 - tmp509*tmp882 + tmp511*tmp884 - tmp513*tmp886 + tmp515*tmp888 - tmp517*tmp890;
      elMat(7,3) = -tmp519*tmp870 + tmp521*tmp872 + tmp523*tmp874 - tmp525*tmp876 - tmp527*tmp878 + tmp529*tmp880 - tmp531*tmp882 - tmp533*tmp884 + tmp535*tmp886 + tmp537*tmp888 + tmp539*tmp890;
      elMat(7,4) = -tmp542*tmp871 - tmp545*tmp873 - tmp548*tmp875 - tmp551*tmp877 - tmp554*tmp879 - tmp557*tmp881 - tmp560*tmp883 - tmp563*tmp885 - tmp566*tmp887 - tmp569*tmp889 - tmp572*tmp891;
      elMat(7,5) = -tmp575*tmp871 - tmp578*tmp873 - tmp581*tmp875 - tmp584*tmp877 - tmp587*tmp879 - tmp590*tmp881 - tmp593*tmp883 - tmp596*tmp885 - tmp599*tmp887 - tmp602*tmp889 - tmp605*tmp891;
      elMat(7,6) = -tmp608*tmp871 - tmp611*tmp873 - tmp614*tmp875 - tmp617*tmp877 - tmp620*tmp879 - tmp623*tmp881 - tmp626*tmp883 - tmp629*tmp885 - tmp632*tmp887 - tmp635*tmp889 - tmp638*tmp891;
      elMat(7,7) = -tmp639*tmp871 - tmp640*tmp873 - tmp641*tmp875 - tmp642*tmp877 - tmp643*tmp879 - tmp644*tmp881 - tmp645*tmp883 - tmp646*tmp885 - tmp647*tmp887 - tmp648*tmp889 - tmp649*tmp891;
      elMat(7,8) = -tmp650*tmp871 - tmp651*tmp873 - tmp652*tmp875 - tmp653*tmp877 - tmp654*tmp879 - tmp655*tmp881 - tmp656*tmp883 - tmp657*tmp885 - tmp658*tmp887 - tmp659*tmp889 - tmp660*tmp891;
      elMat(7,9) = -tmp661*tmp871 - tmp662*tmp873 - tmp663*tmp875 - tmp664*tmp877 - tmp665*tmp879 - tmp666*tmp881 - tmp667*tmp883 - tmp668*tmp885 - tmp669*tmp887 - tmp670*tmp889 - tmp671*tmp891;
      elMat(8,0) = -tmp100*tmp895 - tmp141*tmp897 - tmp182*tmp899 - tmp223*tmp901 - tmp264*tmp903 - tmp301*tmp905 - tmp339*tmp907 - tmp376*tmp909 - tmp414*tmp911 - tmp455*tmp913 - tmp46*tmp893;
      elMat(8,1) = tmp475*tmp892 - tmp477*tmp894 + tmp479*tmp896 + tmp481*tmp898 - tmp483*tmp900 + tmp485*tmp902 + tmp487*tmp904 + tmp489*tmp906 - tmp491*tmp908 - tmp493*tmp910 + tmp495*tmp912;
      elMat(8,2) = tmp497*tmp892 + tmp499*tmp894 + tmp501*tmp896 - tmp503*tmp898 + tmp505*tmp900 - tmp507*tmp902 - tmp509*tmp904 + tmp511*tmp906 - tmp513*tmp908 + tmp515*tmp910 - tmp517*tmp912;
      elMat(8,3) = -tmp519*tmp892 + tmp521*tmp894 + tmp523*tmp896 - tmp525*tmp898 - tmp527*tmp900 + tmp529*tmp902 - tmp531*tmp904 - tmp533*tmp906 + tmp535*tmp908 + tmp537*tmp910 + tmp539*tmp912;
      elMat(8,4) = -tmp542*tmp893 - tmp545*tmp895 - tmp548*tmp897 - tmp551*tmp899 - tmp554*tmp901 - tmp557*tmp903 - tmp560*tmp905 - tmp563*tmp907 - tmp566*tmp909 - tmp569*tmp911 - tmp572*tmp913;
      elMat(8,5) = -tmp575*tmp893 - tmp578*tmp895 - tmp581*tmp897 - tmp584*tmp899 - tmp587*tmp901 - tmp590*tmp903 - tmp593*tmp905 - tmp596*tmp907 - tmp599*tmp909 - tmp602*tmp911 - tmp605*tmp913;
      elMat(8,6) = -tmp608*tmp893 - tmp611*tmp895 - tmp614*tmp897 - tmp617*tmp899 - tmp620*tmp901 - tmp623*tmp903 - tmp626*tmp905 - tmp629*tmp907 - tmp632*tmp909 - tmp635*tmp911 - tmp638*tmp913;
      elMat(8,7) = -tmp639*tmp893 - tmp640*tmp895 - tmp641*tmp897 - tmp642*tmp899 - tmp643*tmp901 - tmp644*tmp903 - tmp645*tmp905 - tmp646*tmp907 - tmp647*tmp909 - tmp648*tmp911 - tmp649*tmp913;
      elMat(8,8) = -tmp650*tmp893 - tmp651*tmp895 - tmp652*tmp897 - tmp653*tmp899 - tmp654*tmp901 - tmp655*tmp903 - tmp656*tmp905 - tmp657*tmp907 - tmp658*tmp909 - tmp659*tmp911 - tmp660*tmp913;
      elMat(8,9) = -tmp661*tmp893 - tmp662*tmp895 - tmp663*tmp897 - tmp664*tmp899 - tmp665*tmp901 - tmp666*tmp903 - tmp667*tmp905 - tmp668*tmp907 - tmp669*tmp909 - tmp670*tmp911 - tmp671*tmp913;
      elMat(9,0) = -tmp100*tmp917 - tmp141*tmp919 - tmp182*tmp921 - tmp223*tmp923 - tmp264*tmp925 - tmp301*tmp927 - tmp339*tmp929 - tmp376*tmp931 - tmp414*tmp933 - tmp455*tmp935 - tmp46*tmp915;
      elMat(9,1) = tmp475*tmp914 - tmp477*tmp916 + tmp479*tmp918 + tmp481*tmp920 - tmp483*tmp922 + tmp485*tmp924 + tmp487*tmp926 + tmp489*tmp928 - tmp491*tmp930 - tmp493*tmp932 + tmp495*tmp934;
      elMat(9,2) = tmp497*tmp914 + tmp499*tmp916 + tmp501*tmp918 - tmp503*tmp920 + tmp505*tmp922 - tmp507*tmp924 - tmp509*tmp926 + tmp511*tmp928 - tmp513*tmp930 + tmp515*tmp932 - tmp517*tmp934;
      elMat(9,3) = -tmp519*tmp914 + tmp521*tmp916 + tmp523*tmp918 - tmp525*tmp920 - tmp527*tmp922 + tmp529*tmp924 - tmp531*tmp926 - tmp533*tmp928 + tmp535*tmp930 + tmp537*tmp932 + tmp539*tmp934;
      elMat(9,4) = -tmp542*tmp915 - tmp545*tmp917 - tmp548*tmp919 - tmp551*tmp921 - tmp554*tmp923 - tmp557*tmp925 - tmp560*tmp927 - tmp563*tmp929 - tmp566*tmp931 - tmp569*tmp933 - tmp572*tmp935;
      elMat(9,5) = -tmp575*tmp915 - tmp578*tmp917 - tmp581*tmp919 - tmp584*tmp921 - tmp587*tmp923 - tmp590*tmp925 - tmp593*tmp927 - tmp596*tmp929 - tmp599*tmp931 - tmp602*tmp933 - tmp605*tmp935;
      elMat(9,6) = -tmp608*tmp915 - tmp611*tmp917 - tmp614*tmp919 - tmp617*tmp921 - tmp620*tmp923 - tmp623*tmp925 - tmp626*tmp927 - tmp629*tmp929 - tmp632*tmp931 - tmp635*tmp933 - tmp638*tmp935;
      elMat(9,7) = -tmp639*tmp915 - tmp640*tmp917 - tmp641*tmp919 - tmp642*tmp921 - tmp643*tmp923 - tmp644*tmp925 - tmp645*tmp927 - tmp646*tmp929 - tmp647*tmp931 - tmp648*tmp933 - tmp649*tmp935;
      elMat(9,8) = -tmp650*tmp915 - tmp651*tmp917 - tmp652*tmp919 - tmp653*tmp921 - tmp654*tmp923 - tmp655*tmp925 - tmp656*tmp927 - tmp657*tmp929 - tmp658*tmp931 - tmp659*tmp933 - tmp660*tmp935;
      elMat(9,9) = -tmp661*tmp915 - tmp662*tmp917 - tmp663*tmp919 - tmp664*tmp921 - tmp665*tmp923 - tmp666*tmp925 - tmp667*tmp927 - tmp668*tmp929 - tmp669*tmp931 - tmp670*tmp933 - tmp671*tmp935;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp8 = -tmp7 + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp9 = -coords[0][2] + coords[3][2];
      const real_t tmp10 = -coords[0][1] + coords[3][1];
      const real_t tmp11 = -coords[0][2] + coords[1][2];
      const real_t tmp12 = -coords[0][0] + coords[3][0];
      const real_t tmp13 = -coords[0][2] + coords[2][2];
      const real_t tmp14 = tmp13*tmp4;
      const real_t tmp15 = tmp0*tmp10;
      const real_t tmp16 = tmp11*tmp12;
      const real_t tmp17 = 1.0 / (-tmp1*tmp16 + tmp10*tmp11*tmp3 + tmp12*tmp14 - tmp13*tmp15 + tmp2*tmp9 - tmp5*tmp9);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp18*J_B_1(1, 1) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) - tmp7*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp17*tmp22;
      const real_t tmp24 = tmp23*tmp8;
      const real_t tmp25 = tmp24*tmp6;
      const real_t tmp26 = tmp12*tmp4 - tmp15;
      const real_t tmp27 = tmp24*tmp26;
      const real_t tmp28 = -tmp0*tmp13 + tmp11*tmp3;
      const real_t tmp29 = tmp18 - tmp20;
      const real_t tmp30 = tmp23*tmp29;
      const real_t tmp31 = tmp28*tmp30;
      const real_t tmp32 = tmp0*tmp9 - tmp16;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = -tmp1*tmp12 + tmp10*tmp3;
      const real_t tmp35 = tmp24*tmp34;
      const real_t tmp36 = tmp12*tmp13 - tmp3*tmp9;
      const real_t tmp37 = tmp30*tmp36;
      const real_t tmp38 = -tmp1*tmp11 + tmp14;
      const real_t tmp39 = -tmp19 + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp40 = tmp23*tmp39;
      const real_t tmp41 = tmp38*tmp40;
      const real_t tmp42 = tmp10*tmp11 - tmp4*tmp9;
      const real_t tmp43 = tmp40*tmp42;
      const real_t tmp44 = tmp1*tmp9 - tmp10*tmp13;
      const real_t tmp45 = tmp40*tmp44;
      const real_t tmp46 = coords[0][0]*coords[1][1];
      const real_t tmp47 = coords[0][0]*coords[1][2];
      const real_t tmp48 = coords[2][1]*coords[3][2];
      const real_t tmp49 = coords[0][1]*coords[1][0];
      const real_t tmp50 = coords[0][1]*coords[1][2];
      const real_t tmp51 = coords[2][2]*coords[3][0];
      const real_t tmp52 = coords[0][2]*coords[1][0];
      const real_t tmp53 = coords[0][2]*coords[1][1];
      const real_t tmp54 = coords[2][0]*coords[3][1];
      const real_t tmp55 = coords[2][2]*coords[3][1];
      const real_t tmp56 = coords[2][0]*coords[3][2];
      const real_t tmp57 = coords[2][1]*coords[3][0];
      const real_t tmp58 = std::abs(coords[0][0]*tmp48 - coords[0][0]*tmp55 + coords[0][1]*tmp51 - coords[0][1]*tmp56 + coords[0][2]*tmp54 - coords[0][2]*tmp57 - coords[1][0]*tmp48 + coords[1][0]*tmp55 - coords[1][1]*tmp51 + coords[1][1]*tmp56 - coords[1][2]*tmp54 + coords[1][2]*tmp57 + coords[2][0]*tmp50 - coords[2][0]*tmp53 - coords[2][1]*tmp47 + coords[2][1]*tmp52 + coords[2][2]*tmp46 - coords[2][2]*tmp49 - coords[3][0]*tmp50 + coords[3][0]*tmp53 + coords[3][1]*tmp47 - coords[3][1]*tmp52 - coords[3][2]*tmp46 + coords[3][2]*tmp49);
      const real_t tmp59 = 0.55279693041046674*tmp23;
      const real_t tmp60 = tmp59*(J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0));
      const real_t tmp61 = tmp59*(-J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp62 = tmp59*(J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1));
      const real_t tmp63 = tmp58*(tmp26*tmp60 + tmp28*tmp61 + tmp32*tmp61 + tmp34*tmp60 + tmp36*tmp61 + tmp38*tmp62 + tmp42*tmp62 + tmp44*tmp62 + tmp6*tmp60)*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp64 = 0.011829781572832234*tmp63;
      const real_t tmp65 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp66 = -tmp65 + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp67 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp68 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp69 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp70 = -tmp65*J_B_10(1, 2) + tmp67*J_B_10(1, 1) - tmp68*J_B_10(1, 0) - tmp69*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp71 = 1.0 / (tmp70);
      const real_t tmp72 = tmp17*tmp71;
      const real_t tmp73 = tmp66*tmp72;
      const real_t tmp74 = tmp6*tmp73;
      const real_t tmp75 = tmp26*tmp73;
      const real_t tmp76 = tmp67 - tmp69;
      const real_t tmp77 = tmp72*tmp76;
      const real_t tmp78 = tmp28*tmp77;
      const real_t tmp79 = tmp32*tmp77;
      const real_t tmp80 = tmp34*tmp73;
      const real_t tmp81 = tmp36*tmp77;
      const real_t tmp82 = -tmp68 + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp83 = tmp72*tmp82;
      const real_t tmp84 = tmp38*tmp83;
      const real_t tmp85 = tmp42*tmp83;
      const real_t tmp86 = tmp44*tmp83;
      const real_t tmp87 = 0.60805118540288361*tmp72;
      const real_t tmp88 = tmp87*(J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0));
      const real_t tmp89 = tmp87*(-J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0));
      const real_t tmp90 = tmp87*(J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1));
      const real_t tmp91 = tmp58*(tmp26*tmp88 + tmp28*tmp89 + tmp32*tmp89 + tmp34*tmp88 + tmp36*tmp89 + tmp38*tmp90 + tmp42*tmp90 + tmp44*tmp90 + tmp6*tmp88)*std::abs(tmp70)*ScalarCoeff0_10;
      const real_t tmp92 = 0.0061414854617707626*tmp91;
      const real_t tmp93 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp94 = -tmp93 + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp95 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp96 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp97 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp98 = -tmp93*J_B_11(1, 2) + tmp95*J_B_11(1, 1) - tmp96*J_B_11(1, 0) - tmp97*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp99 = 1.0 / (tmp98);
      const real_t tmp100 = tmp17*tmp99;
      const real_t tmp101 = tmp100*tmp94;
      const real_t tmp102 = tmp101*tmp6;
      const real_t tmp103 = tmp101*tmp26;
      const real_t tmp104 = tmp95 - tmp97;
      const real_t tmp105 = tmp100*tmp104;
      const real_t tmp106 = tmp105*tmp28;
      const real_t tmp107 = tmp105*tmp32;
      const real_t tmp108 = tmp101*tmp34;
      const real_t tmp109 = tmp105*tmp36;
      const real_t tmp110 = -tmp96 + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp111 = tmp100*tmp110;
      const real_t tmp112 = tmp111*tmp38;
      const real_t tmp113 = tmp111*tmp42;
      const real_t tmp114 = tmp111*tmp44;
      const real_t tmp115 = 2.0850189307815055*tmp100;
      const real_t tmp116 = tmp115*(J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0));
      const real_t tmp117 = tmp115*(-J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0));
      const real_t tmp118 = tmp115*(J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1));
      const real_t tmp119 = tmp58*(-tmp116*tmp26 - tmp116*tmp34 - tmp116*tmp6 - tmp117*tmp28 - tmp117*tmp32 - tmp117*tmp36 - tmp118*tmp38 - tmp118*tmp42 - tmp118*tmp44)*std::abs(tmp98)*ScalarCoeff0_11;
      const real_t tmp120 = 0.0043612323249822204*tmp119;
      const real_t tmp121 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp122 = -tmp121 + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp123 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp124 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp125 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp126 = -tmp121*J_B_2(1, 2) + tmp123*J_B_2(1, 1) - tmp124*J_B_2(1, 0) - tmp125*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp127 = 1.0 / (tmp126);
      const real_t tmp128 = tmp127*tmp17;
      const real_t tmp129 = tmp122*tmp128;
      const real_t tmp130 = tmp129*tmp6;
      const real_t tmp131 = tmp129*tmp26;
      const real_t tmp132 = tmp123 - tmp125;
      const real_t tmp133 = tmp128*tmp132;
      const real_t tmp134 = tmp133*tmp28;
      const real_t tmp135 = tmp133*tmp32;
      const real_t tmp136 = tmp129*tmp34;
      const real_t tmp137 = tmp133*tmp36;
      const real_t tmp138 = -tmp124 + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp139 = tmp128*tmp138;
      const real_t tmp140 = tmp139*tmp38;
      const real_t tmp141 = tmp139*tmp42;
      const real_t tmp142 = tmp139*tmp44;
      const real_t tmp143 = 0.29317593934991559*tmp128;
      const real_t tmp144 = tmp143*(J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0));
      const real_t tmp145 = tmp143*(-J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp146 = tmp143*(J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1));
      const real_t tmp147 = tmp58*(-tmp144*tmp26 - tmp144*tmp34 - tmp144*tmp6 - tmp145*tmp28 - tmp145*tmp32 - tmp145*tmp36 - tmp146*tmp38 - tmp146*tmp42 - tmp146*tmp44)*std::abs(tmp126)*ScalarCoeff0_2;
      const real_t tmp148 = 0.012248248047610821*tmp147;
      const real_t tmp149 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp150 = -tmp149 + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp151 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp152 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp153 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp154 = -tmp149*J_B_3(1, 2) + tmp151*J_B_3(1, 1) - tmp152*J_B_3(1, 0) - tmp153*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp155 = 1.0 / (tmp154);
      const real_t tmp156 = tmp155*tmp17;
      const real_t tmp157 = tmp150*tmp156;
      const real_t tmp158 = tmp157*tmp6;
      const real_t tmp159 = tmp157*tmp26;
      const real_t tmp160 = tmp151 - tmp153;
      const real_t tmp161 = tmp156*tmp160;
      const real_t tmp162 = tmp161*tmp28;
      const real_t tmp163 = tmp161*tmp32;
      const real_t tmp164 = tmp157*tmp34;
      const real_t tmp165 = tmp161*tmp36;
      const real_t tmp166 = -tmp152 + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp167 = tmp156*tmp166;
      const real_t tmp168 = tmp167*tmp38;
      const real_t tmp169 = tmp167*tmp42;
      const real_t tmp170 = tmp167*tmp44;
      const real_t tmp171 = 0.56151037867223397*tmp156;
      const real_t tmp172 = tmp171*(J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0));
      const real_t tmp173 = tmp171*(-J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp174 = tmp171*(J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1));
      const real_t tmp175 = tmp58*(tmp172*tmp26 + tmp172*tmp34 + tmp172*tmp6 + tmp173*tmp28 + tmp173*tmp32 + tmp173*tmp36 + tmp174*tmp38 + tmp174*tmp42 + tmp174*tmp44)*std::abs(tmp154)*ScalarCoeff0_3;
      const real_t tmp176 = 0.017219568446249611*tmp175;
      const real_t tmp177 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp178 = -tmp177 + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp179 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp180 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp181 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp182 = -tmp177*J_B_4(1, 2) + tmp179*J_B_4(1, 1) - tmp180*J_B_4(1, 0) - tmp181*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp183 = 1.0 / (tmp182);
      const real_t tmp184 = tmp17*tmp183;
      const real_t tmp185 = tmp178*tmp184;
      const real_t tmp186 = tmp185*tmp6;
      const real_t tmp187 = tmp185*tmp26;
      const real_t tmp188 = tmp179 - tmp181;
      const real_t tmp189 = tmp184*tmp188;
      const real_t tmp190 = tmp189*tmp28;
      const real_t tmp191 = tmp189*tmp32;
      const real_t tmp192 = tmp185*tmp34;
      const real_t tmp193 = tmp189*tmp36;
      const real_t tmp194 = -tmp180 + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp195 = tmp184*tmp194;
      const real_t tmp196 = tmp195*tmp38;
      const real_t tmp197 = tmp195*tmp42;
      const real_t tmp198 = tmp195*tmp44;
      const real_t tmp199 = 0.31389282688815401*tmp184;
      const real_t tmp200 = tmp199*(J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0));
      const real_t tmp201 = tmp199*(-J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp202 = tmp199*(J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1));
      const real_t tmp203 = tmp58*(-tmp200*tmp26 - tmp200*tmp34 - tmp200*tmp6 - tmp201*tmp28 - tmp201*tmp32 - tmp201*tmp36 - tmp202*tmp38 - tmp202*tmp42 - tmp202*tmp44)*std::abs(tmp182)*ScalarCoeff0_4;
      const real_t tmp204 = 0.021490090227737114*tmp203;
      const real_t tmp205 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp206 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp207 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp208 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp209 = -tmp205*J_B_5(1, 2) + tmp206*J_B_5(1, 1) - tmp207*J_B_5(1, 0) - tmp208*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp210 = tmp17/tmp209;
      const real_t tmp211 = tmp210*(-tmp205 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp212 = tmp211*tmp6;
      const real_t tmp213 = tmp211*tmp26;
      const real_t tmp214 = tmp210*(tmp206 - tmp208);
      const real_t tmp215 = tmp214*tmp28;
      const real_t tmp216 = tmp214*tmp32;
      const real_t tmp217 = tmp211*tmp34;
      const real_t tmp218 = tmp214*tmp36;
      const real_t tmp219 = tmp210*(-tmp207 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp220 = tmp219*tmp38;
      const real_t tmp221 = tmp219*tmp42;
      const real_t tmp222 = tmp219*tmp44;
      const real_t tmp223 = 0.99043597017024343*tmp210;
      const real_t tmp224 = tmp223*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp225 = tmp223*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp226 = tmp223*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp227 = tmp58*(tmp224*tmp26 + tmp224*tmp34 + tmp224*tmp6 + tmp225*tmp28 + tmp225*tmp32 + tmp225*tmp36 + tmp226*tmp38 + tmp226*tmp42 + tmp226*tmp44)*std::abs(tmp209)*ScalarCoeff0_5;
      const real_t tmp228 = 0.0084625239161731543*tmp227;
      const real_t tmp229 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp230 = -tmp229 + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp231 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp232 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp233 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp234 = -tmp229*J_B_6(1, 2) + tmp231*J_B_6(1, 1) - tmp232*J_B_6(1, 0) - tmp233*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp235 = 1.0 / (tmp234);
      const real_t tmp236 = tmp17*tmp235;
      const real_t tmp237 = tmp230*tmp236;
      const real_t tmp238 = tmp237*tmp6;
      const real_t tmp239 = tmp237*tmp26;
      const real_t tmp240 = tmp231 - tmp233;
      const real_t tmp241 = tmp236*tmp240;
      const real_t tmp242 = tmp241*tmp28;
      const real_t tmp243 = tmp241*tmp32;
      const real_t tmp244 = tmp237*tmp34;
      const real_t tmp245 = tmp241*tmp36;
      const real_t tmp246 = -tmp232 + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp247 = tmp236*tmp246;
      const real_t tmp248 = tmp247*tmp38;
      const real_t tmp249 = tmp247*tmp42;
      const real_t tmp250 = tmp247*tmp44;
      const real_t tmp251 = 1.2518910405721839*tmp236;
      const real_t tmp252 = tmp251*(J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0));
      const real_t tmp253 = tmp251*(-J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp254 = tmp251*(J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1));
      const real_t tmp255 = tmp58*(-tmp252*tmp26 - tmp252*tmp34 - tmp252*tmp6 - tmp253*tmp28 - tmp253*tmp32 - tmp253*tmp36 - tmp254*tmp38 - tmp254*tmp42 - tmp254*tmp44)*std::abs(tmp234)*ScalarCoeff0_6;
      const real_t tmp256 = 0.0088251866742250357*tmp255;
      const real_t tmp257 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp258 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp259 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp260 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp261 = -tmp257*J_B_7(1, 2) + tmp258*J_B_7(1, 1) - tmp259*J_B_7(1, 0) - tmp260*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp262 = tmp17/tmp261;
      const real_t tmp263 = tmp262*(-tmp257 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp264 = tmp263*tmp6;
      const real_t tmp265 = tmp26*tmp263;
      const real_t tmp266 = tmp262*(tmp258 - tmp260);
      const real_t tmp267 = tmp266*tmp28;
      const real_t tmp268 = tmp266*tmp32;
      const real_t tmp269 = tmp263*tmp34;
      const real_t tmp270 = tmp266*tmp36;
      const real_t tmp271 = tmp262*(-tmp259 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp272 = tmp271*tmp38;
      const real_t tmp273 = tmp271*tmp42;
      const real_t tmp274 = tmp271*tmp44;
      const real_t tmp275 = 0.77270393148826533*tmp262;
      const real_t tmp276 = tmp275*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp277 = tmp275*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp278 = tmp275*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp279 = tmp58*(tmp26*tmp276 + tmp276*tmp34 + tmp276*tmp6 + tmp277*tmp28 + tmp277*tmp32 + tmp277*tmp36 + tmp278*tmp38 + tmp278*tmp42 + tmp278*tmp44)*std::abs(tmp261)*ScalarCoeff0_7;
      const real_t tmp280 = 0.0077188851041817101*tmp279;
      const real_t tmp281 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp282 = -tmp281 + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp283 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp284 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp285 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp286 = -tmp281*J_B_8(1, 2) + tmp283*J_B_8(1, 1) - tmp284*J_B_8(1, 0) - tmp285*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp287 = 1.0 / (tmp286);
      const real_t tmp288 = tmp17*tmp287;
      const real_t tmp289 = tmp282*tmp288;
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = tmp26*tmp289;
      const real_t tmp292 = tmp283 - tmp285;
      const real_t tmp293 = tmp288*tmp292;
      const real_t tmp294 = tmp28*tmp293;
      const real_t tmp295 = tmp293*tmp32;
      const real_t tmp296 = tmp289*tmp34;
      const real_t tmp297 = tmp293*tmp36;
      const real_t tmp298 = -tmp284 + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp299 = tmp288*tmp298;
      const real_t tmp300 = tmp299*tmp38;
      const real_t tmp301 = tmp299*tmp42;
      const real_t tmp302 = tmp299*tmp44;
      const real_t tmp303 = 0.9184440441026207*tmp288;
      const real_t tmp304 = tmp303*(J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0));
      const real_t tmp305 = tmp303*(-J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0));
      const real_t tmp306 = tmp303*(J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1));
      const real_t tmp307 = tmp58*(-tmp26*tmp304 - tmp28*tmp305 - tmp304*tmp34 - tmp304*tmp6 - tmp305*tmp32 - tmp305*tmp36 - tmp306*tmp38 - tmp306*tmp42 - tmp306*tmp44)*std::abs(tmp286)*ScalarCoeff0_8;
      const real_t tmp308 = 0.006659242794062166*tmp307;
      const real_t tmp309 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp310 = -tmp309 + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp311 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp312 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp313 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp314 = -tmp309*J_B_9(1, 2) + tmp311*J_B_9(1, 1) - tmp312*J_B_9(1, 0) - tmp313*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp315 = 1.0 / (tmp314);
      const real_t tmp316 = tmp17*tmp315;
      const real_t tmp317 = tmp310*tmp316;
      const real_t tmp318 = tmp317*tmp6;
      const real_t tmp319 = tmp26*tmp317;
      const real_t tmp320 = tmp311 - tmp313;
      const real_t tmp321 = tmp316*tmp320;
      const real_t tmp322 = tmp28*tmp321;
      const real_t tmp323 = tmp32*tmp321;
      const real_t tmp324 = tmp317*tmp34;
      const real_t tmp325 = tmp321*tmp36;
      const real_t tmp326 = -tmp312 + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp327 = tmp316*tmp326;
      const real_t tmp328 = tmp327*tmp38;
      const real_t tmp329 = tmp327*tmp42;
      const real_t tmp330 = tmp327*tmp44;
      const real_t tmp331 = 0.37454442704241986*tmp316;
      const real_t tmp332 = tmp331*(J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0));
      const real_t tmp333 = tmp331*(-J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0));
      const real_t tmp334 = tmp331*(J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1));
      const real_t tmp335 = tmp58*(tmp26*tmp332 + tmp28*tmp333 + tmp32*tmp333 + tmp332*tmp34 + tmp332*tmp6 + tmp333*tmp36 + tmp334*tmp38 + tmp334*tmp42 + tmp334*tmp44)*std::abs(tmp314)*ScalarCoeff0_9;
      const real_t tmp336 = 0.0061548665412862651*tmp335;
      const real_t tmp337 = 2.7375616618121592*tmp27 + 2.7375616618121592*tmp33 + 2.7375616618121592*tmp43;
      const real_t tmp338 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp31 + 0.42641669024797446*tmp41;
      const real_t tmp339 = 0.2723974837528258*tmp75 + 0.2723974837528258*tmp79 + 0.2723974837528258*tmp85;
      const real_t tmp340 = 0.3256196736114374*tmp74 + 0.3256196736114374*tmp78 + 0.3256196736114374*tmp84;
      const real_t tmp341 = 0.054242807519210512*tmp103 + 0.054242807519210512*tmp107 + 0.054242807519210512*tmp113;
      const real_t tmp342 = 0.69877623478892303*tmp102 + 0.69877623478892303*tmp106 + 0.69877623478892303*tmp112;
      const real_t tmp343 = 1.2716142408535775*tmp131 + 1.2716142408535775*tmp135 + 1.2716142408535775*tmp141;
      const real_t tmp344 = 1.3169318389705873*tmp130 + 1.3169318389705873*tmp134 + 1.3169318389705873*tmp140;
      const real_t tmp345 = 1.4152929568371884*tmp159 + 1.4152929568371884*tmp163 + 1.4152929568371884*tmp169;
      const real_t tmp346 = 0.41537646564397157*tmp158 + 0.41537646564397157*tmp162 + 0.41537646564397157*tmp168;
      const real_t tmp347 = 0.50720690366156718*tmp187 + 0.50720690366156718*tmp191 + 0.50720690366156718*tmp197;
      const real_t tmp348 = 1.2177936097379878*tmp186 + 1.2177936097379878*tmp190 + 1.2177936097379878*tmp196;
      const real_t tmp349 = 1.3207616593498592*tmp213 + 1.3207616593498592*tmp216 + 1.3207616593498592*tmp221;
      const real_t tmp350 = 2.1520288156647434*tmp212 + 2.1520288156647434*tmp215 + 2.1520288156647434*tmp220;
      const real_t tmp351 = 1.2259759537187613*tmp239 + 1.2259759537187613*tmp243 + 1.2259759537187613*tmp249;
      const real_t tmp352 = 0.035965040373342916*tmp238 + 0.035965040373342916*tmp242 + 0.035965040373342916*tmp248;
      const real_t tmp353 = 0.23782646519773576*tmp265 + 0.23782646519773576*tmp268 + 0.23782646519773576*tmp273;
      const real_t tmp354 = 1.7318139619254227*tmp264 + 1.7318139619254227*tmp267 + 1.7318139619254227*tmp272;
      const real_t tmp355 = 0.19112574223634571*tmp291 + 0.19112574223634571*tmp295 + 0.19112574223634571*tmp301;
      const real_t tmp356 = 0.21336495814298084*tmp290 + 0.21336495814298084*tmp294 + 0.21336495814298084*tmp300;
      const real_t tmp357 = 0.14073571909439453*tmp319 + 0.14073571909439453*tmp323 + 0.14073571909439453*tmp329;
      const real_t tmp358 = 2.9649155283744921*tmp318 + 2.9649155283744921*tmp322 + 2.9649155283744921*tmp328;
      const real_t tmp359 = 2.7375616618121592*tmp35 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp45;
      const real_t tmp360 = 0.38881857835033307*tmp25 + 0.38881857835033307*tmp31 + 0.38881857835033307*tmp41;
      const real_t tmp361 = 0.2723974837528258*tmp80 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp86;
      const real_t tmp362 = 3.0100340280386204*tmp74 + 3.0100340280386204*tmp78 + 3.0100340280386204*tmp84;
      const real_t tmp363 = 0.054242807519210512*tmp108 + 0.054242807519210512*tmp109 + 0.054242807519210512*tmp114;
      const real_t tmp364 = 0.16196202691036121*tmp102 + 0.16196202691036121*tmp106 + 0.16196202691036121*tmp112;
      const real_t tmp365 = 1.2716142408535775*tmp136 + 1.2716142408535775*tmp137 + 1.2716142408535775*tmp142;
      const real_t tmp366 = 0.11827798082591956*tmp130 + 0.11827798082591956*tmp134 + 0.11827798082591956*tmp140;
      const real_t tmp367 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp165 + 1.4152929568371884*tmp170;
      const real_t tmp368 = 1.730840956191074*tmp158 + 1.730840956191074*tmp162 + 1.730840956191074*tmp168;
      const real_t tmp369 = 0.50720690366156718*tmp192 + 0.50720690366156718*tmp193 + 0.50720690366156718*tmp198;
      const real_t tmp370 = 0.96110665971229103*tmp186 + 0.96110665971229103*tmp190 + 0.96110665971229103*tmp196;
      const real_t tmp371 = 1.3207616593498592*tmp217 + 1.3207616593498592*tmp218 + 1.3207616593498592*tmp222;
      const real_t tmp372 = 0.51764549515564062*tmp212 + 0.51764549515564062*tmp215 + 0.51764549515564062*tmp220;
      const real_t tmp373 = 1.2259759537187613*tmp244 + 1.2259759537187613*tmp245 + 1.2259759537187613*tmp250;
      const real_t tmp374 = 0.48616796533571183*tmp238 + 0.48616796533571183*tmp242 + 0.48616796533571183*tmp248;
      const real_t tmp375 = 0.23782646519773576*tmp269 + 0.23782646519773576*tmp270 + 0.23782646519773576*tmp274;
      const real_t tmp376 = 1.8030635043651069*tmp264 + 1.8030635043651069*tmp267 + 1.8030635043651069*tmp272;
      const real_t tmp377 = 0.19112574223634571*tmp296 + 0.19112574223634571*tmp297 + 0.19112574223634571*tmp302;
      const real_t tmp378 = 1.6770652555180527*tmp290 + 1.6770652555180527*tmp294 + 1.6770652555180527*tmp300;
      const real_t tmp379 = 0.14073571909439453*tmp324 + 0.14073571909439453*tmp325 + 0.14073571909439453*tmp330;
      const real_t tmp380 = 0.2688931795735332*tmp318 + 0.2688931795735332*tmp322 + 0.2688931795735332*tmp328;
      const real_t tmp381 = 0.42641669024797446*tmp35 + 0.42641669024797446*tmp37 + 0.42641669024797446*tmp45;
      const real_t tmp382 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp33 + 0.38881857835033307*tmp43;
      const real_t tmp383 = 0.3256196736114374*tmp80 + 0.3256196736114374*tmp81 + 0.3256196736114374*tmp86;
      const real_t tmp384 = 3.0100340280386204*tmp75 + 3.0100340280386204*tmp79 + 3.0100340280386204*tmp85;
      const real_t tmp385 = 0.69877623478892303*tmp108 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp114;
      const real_t tmp386 = 0.16196202691036121*tmp103 + 0.16196202691036121*tmp107 + 0.16196202691036121*tmp113;
      const real_t tmp387 = 1.3169318389705873*tmp136 + 1.3169318389705873*tmp137 + 1.3169318389705873*tmp142;
      const real_t tmp388 = 0.11827798082591956*tmp131 + 0.11827798082591956*tmp135 + 0.11827798082591956*tmp141;
      const real_t tmp389 = 0.41537646564397157*tmp164 + 0.41537646564397157*tmp165 + 0.41537646564397157*tmp170;
      const real_t tmp390 = 1.730840956191074*tmp159 + 1.730840956191074*tmp163 + 1.730840956191074*tmp169;
      const real_t tmp391 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp193 + 1.2177936097379878*tmp198;
      const real_t tmp392 = 0.96110665971229103*tmp187 + 0.96110665971229103*tmp191 + 0.96110665971229103*tmp197;
      const real_t tmp393 = 2.1520288156647434*tmp217 + 2.1520288156647434*tmp218 + 2.1520288156647434*tmp222;
      const real_t tmp394 = 0.51764549515564062*tmp213 + 0.51764549515564062*tmp216 + 0.51764549515564062*tmp221;
      const real_t tmp395 = 0.035965040373342916*tmp244 + 0.035965040373342916*tmp245 + 0.035965040373342916*tmp250;
      const real_t tmp396 = 0.48616796533571183*tmp239 + 0.48616796533571183*tmp243 + 0.48616796533571183*tmp249;
      const real_t tmp397 = 1.7318139619254227*tmp269 + 1.7318139619254227*tmp270 + 1.7318139619254227*tmp274;
      const real_t tmp398 = 1.8030635043651069*tmp265 + 1.8030635043651069*tmp268 + 1.8030635043651069*tmp273;
      const real_t tmp399 = 0.21336495814298084*tmp296 + 0.21336495814298084*tmp297 + 0.21336495814298084*tmp302;
      const real_t tmp400 = 1.6770652555180527*tmp291 + 1.6770652555180527*tmp295 + 1.6770652555180527*tmp301;
      const real_t tmp401 = 2.9649155283744921*tmp324 + 2.9649155283744921*tmp325 + 2.9649155283744921*tmp330;
      const real_t tmp402 = 0.2688931795735332*tmp319 + 0.2688931795735332*tmp323 + 0.2688931795735332*tmp329;
      elMat(0,0) = -tmp120*(-2.0850189307815055*tmp102 - 2.0850189307815055*tmp103 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp107 - 2.0850189307815055*tmp108 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp113 - 2.0850189307815055*tmp114) - tmp148*(-0.29317593934991559*tmp130 - 0.29317593934991559*tmp131 - 0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp136 - 0.29317593934991559*tmp137 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp142) - tmp176*(0.56151037867223397*tmp158 + 0.56151037867223397*tmp159 + 0.56151037867223397*tmp162 + 0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp165 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170) - tmp204*(-0.31389282688815401*tmp186 - 0.31389282688815401*tmp187 - 0.31389282688815401*tmp190 - 0.31389282688815401*tmp191 - 0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198) - tmp228*(0.99043597017024343*tmp212 + 0.99043597017024343*tmp213 + 0.99043597017024343*tmp215 + 0.99043597017024343*tmp216 + 0.99043597017024343*tmp217 + 0.99043597017024343*tmp218 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp221 + 0.99043597017024343*tmp222) - tmp256*(-1.2518910405721839*tmp238 - 1.2518910405721839*tmp239 - 1.2518910405721839*tmp242 - 1.2518910405721839*tmp243 - 1.2518910405721839*tmp244 - 1.2518910405721839*tmp245 - 1.2518910405721839*tmp248 - 1.2518910405721839*tmp249 - 1.2518910405721839*tmp250) - tmp280*(0.77270393148826533*tmp264 + 0.77270393148826533*tmp265 + 0.77270393148826533*tmp267 + 0.77270393148826533*tmp268 + 0.77270393148826533*tmp269 + 0.77270393148826533*tmp270 + 0.77270393148826533*tmp272 + 0.77270393148826533*tmp273 + 0.77270393148826533*tmp274) - tmp308*(-0.9184440441026207*tmp290 - 0.9184440441026207*tmp291 - 0.9184440441026207*tmp294 - 0.9184440441026207*tmp295 - 0.9184440441026207*tmp296 - 0.9184440441026207*tmp297 - 0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp302) - tmp336*(0.37454442704241986*tmp318 + 0.37454442704241986*tmp319 + 0.37454442704241986*tmp322 + 0.37454442704241986*tmp323 + 0.37454442704241986*tmp324 + 0.37454442704241986*tmp325 + 0.37454442704241986*tmp328 + 0.37454442704241986*tmp329 + 0.37454442704241986*tmp330) - tmp64*(0.55279693041046674*tmp25 + 0.55279693041046674*tmp27 + 0.55279693041046674*tmp31 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp35 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45) - tmp92*(0.60805118540288361*tmp74 + 0.60805118540288361*tmp75 + 0.60805118540288361*tmp78 + 0.60805118540288361*tmp79 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp86);
      elMat(0,1) = 0.0036548782978011126*tmp119*(tmp108 + tmp109 + tmp114) + 0.010799549999884401*tmp147*(tmp136 + tmp137 + tmp142) - 0.012584765868454714*tmp175*(tmp164 + tmp165 + tmp170) + 0.00083582139204094858*tmp203*(tmp192 + tmp193 + tmp198) + 0.0040819365333192512*tmp227*(tmp217 + tmp218 + tmp222) + 0.0045346636251092122*tmp255*(tmp244 + tmp245 + tmp250) - 0.0061987549215557864*tmp279*(tmp269 + tmp270 + tmp274) - 0.0045087419239184514*tmp307*(tmp296 + tmp297 + tmp302) + 0.0044998649071490461*tmp335*(tmp324 + tmp325 + tmp330) + 0.0072301427194886381*tmp63*(tmp35 + tmp37 + tmp45) - 0.012344594760863713*tmp91*(tmp80 + tmp81 + tmp86);
      elMat(0,2) = 0.0013137068218914037*tmp119*(tmp103 + tmp107 + tmp113) - 0.0038818597778972029*tmp147*(tmp131 + tmp135 + tmp141) + 0.010066964965131993*tmp175*(tmp159 + tmp163 + tmp169) - 0.0046804043242939224*tmp203*(tmp187 + tmp191 + tmp197) - 0.0097490714046835261*tmp227*(tmp213 + tmp216 + tmp221) + 0.0085077884791842431*tmp255*(tmp239 + tmp243 + tmp249) - 0.0056487878897383461*tmp279*(tmp265 + tmp268 + tmp273) + 0.005238393734043144*tmp307*(tmp291 + tmp295 + tmp301) - 0.012093792842045984*tmp335*(tmp319 + tmp323 + tmp329) + 0.0067853652681886352*tmp63*(tmp27 + tmp33 + tmp43) + 0.0041416969702195786*tmp91*(tmp75 + tmp79 + tmp85);
      elMat(0,3) = 0.0041246668394316508*tmp119*(tmp102 + tmp106 + tmp112) - 0.0033267985952381263*tmp147*(tmp130 + tmp134 + tmp140) - 0.0071511654955033511*tmp175*(tmp158 + tmp162 + tmp168) + 0.010590168103918869*tmp203*(tmp186 + tmp190 + tmp196) - 0.0027144532136395704*tmp227*(tmp212 + tmp215 + tmp220) - 0.0019942799754541058*tmp255*(tmp238 + tmp242 + tmp248) + 0.005883129944586717*tmp279*(tmp264 + tmp267 + tmp272) + 0.0053864900723149976*tmp307*(tmp290 + tmp294 + tmp300) + 0.0052886569726683132*tmp335*(tmp318 + tmp322 + tmp328) - 0.020554974928565235*tmp63*(tmp25 + tmp31 + tmp41) + 0.0044685602754798454*tmp91*(tmp74 + tmp78 + tmp84);
      elMat(0,4) = -tmp120*(tmp341 + tmp342) - tmp148*(tmp343 + tmp344) - tmp176*(tmp345 + tmp346) - tmp204*(tmp347 + tmp348) - tmp228*(tmp349 + tmp350) - tmp256*(tmp351 + tmp352) - tmp280*(tmp353 + tmp354) - tmp308*(tmp355 + tmp356) - tmp336*(tmp357 + tmp358) - tmp64*(tmp337 + tmp338) - tmp92*(tmp339 + tmp340);
      elMat(0,5) = -tmp120*(tmp363 + tmp364) - tmp148*(tmp365 + tmp366) - tmp176*(tmp367 + tmp368) - tmp204*(tmp369 + tmp370) - tmp228*(tmp371 + tmp372) - tmp256*(tmp373 + tmp374) - tmp280*(tmp375 + tmp376) - tmp308*(tmp377 + tmp378) - tmp336*(tmp379 + tmp380) - tmp64*(tmp359 + tmp360) - tmp92*(tmp361 + tmp362);
      elMat(0,6) = -tmp120*(tmp385 + tmp386) - tmp148*(tmp387 + tmp388) - tmp176*(tmp389 + tmp390) - tmp204*(tmp391 + tmp392) - tmp228*(tmp393 + tmp394) - tmp256*(tmp395 + tmp396) - tmp280*(tmp397 + tmp398) - tmp308*(tmp399 + tmp400) - tmp336*(tmp401 + tmp402) - tmp64*(tmp381 + tmp382) - tmp92*(tmp383 + tmp384);
      elMat(0,7) = -tmp120*(3.030776123262295*tmp104*tmp17*tmp28*tmp99 + 3.030776123262295*tmp110*tmp17*tmp38*tmp99 + 3.030776123262295*tmp17*tmp6*tmp94*tmp99 - tmp341 - tmp363) - tmp148*(0.021561698496338266*tmp122*tmp127*tmp17*tmp6 + 0.021561698496338266*tmp127*tmp132*tmp17*tmp28 + 0.021561698496338266*tmp127*tmp138*tmp17*tmp38 - tmp343 - tmp365) - tmp176*(-0.97680333550942233*tmp158 - 0.97680333550942233*tmp162 - 0.97680333550942233*tmp168 - tmp345 - tmp367) - tmp204*(0.80668592322658683*tmp17*tmp178*tmp183*tmp6 + 0.80668592322658683*tmp17*tmp183*tmp188*tmp28 + 0.80668592322658683*tmp17*tmp183*tmp194*tmp38 - tmp347 - tmp369) - tmp228*(-1.3111976295201027*tmp212 - 1.3111976295201027*tmp215 - 1.3111976295201027*tmp220 - tmp349 - tmp371) - tmp256*(1.0259150868534226*tmp17*tmp230*tmp235*tmp6 + 1.0259150868534226*tmp17*tmp235*tmp240*tmp28 + 1.0259150868534226*tmp17*tmp235*tmp246*tmp38 - tmp351 - tmp373) - tmp280*(-0.010530396686001087*tmp264 - 0.010530396686001087*tmp267 - 0.010530396686001087*tmp272 - tmp353 - tmp375) - tmp308*(1.727318301866275*tmp17*tmp28*tmp287*tmp292 + 1.727318301866275*tmp17*tmp282*tmp287*tmp6 + 1.727318301866275*tmp17*tmp287*tmp298*tmp38 - tmp355 - tmp377) - tmp336*(0.48471985386318561*tmp17*tmp28*tmp315*tmp320 + 0.48471985386318561*tmp17*tmp310*tmp315*tmp6 + 0.48471985386318561*tmp17*tmp315*tmp326*tmp38 - tmp357 - tmp379) - tmp64*(-2.2903585922226259*tmp25 - 2.2903585922226259*tmp31 - tmp337 - tmp359 - 2.2903585922226259*tmp41) - tmp92*(0.11955133084429059*tmp17*tmp28*tmp71*tmp76 + 0.11955133084429059*tmp17*tmp38*tmp71*tmp82 + 0.11955133084429059*tmp17*tmp6*tmp66*tmp71 - tmp339 - tmp361);
      elMat(0,8) = -tmp120*(2.3862426959925824*tmp104*tmp17*tmp32*tmp99 + 2.3862426959925824*tmp110*tmp17*tmp42*tmp99 + 2.3862426959925824*tmp17*tmp26*tmp94*tmp99 - tmp342 - tmp385) - tmp148*(-0.023755899620671705*tmp131 - 0.023755899620671705*tmp135 - 0.023755899620671705*tmp141 - tmp344 - tmp387) - tmp176*(0.023113155683794462*tmp150*tmp155*tmp17*tmp26 + 0.023113155683794462*tmp155*tmp160*tmp17*tmp32 + 0.023113155683794462*tmp155*tmp166*tmp17*tmp42 - tmp346 - tmp389) - tmp204*(0.096099217150166227*tmp17*tmp178*tmp183*tmp26 + 0.096099217150166227*tmp17*tmp183*tmp188*tmp32 + 0.096099217150166227*tmp17*tmp183*tmp194*tmp42 - tmp348 - tmp391) - tmp228*(-2.1424647858349868*tmp213 - 2.1424647858349868*tmp216 - 2.1424647858349868*tmp221 - tmp350 - tmp393) - tmp256*(2.215926000198841*tmp17*tmp230*tmp235*tmp26 + 2.215926000198841*tmp17*tmp235*tmp240*tmp32 + 2.215926000198841*tmp17*tmp235*tmp246*tmp42 - tmp352 - tmp395) - tmp280*(-1.504517893413688*tmp265 - 1.504517893413688*tmp268 - 1.504517893413688*tmp273 - tmp354 - tmp397) - tmp308*(1.7050790859596399*tmp17*tmp26*tmp282*tmp287 + 1.7050790859596399*tmp17*tmp287*tmp292*tmp32 + 1.7050790859596399*tmp17*tmp287*tmp298*tmp42 - tmp356 - tmp399) - tmp336*(-2.339459955416912*tmp319 - 2.339459955416912*tmp323 - 2.339459955416912*tmp329 - tmp358 - tmp401) - tmp64*(0.020786379341558803*tmp17*tmp22*tmp26*tmp8 + 0.020786379341558803*tmp17*tmp22*tmp29*tmp32 + 0.020786379341558803*tmp17*tmp22*tmp39*tmp42 - tmp338 - tmp381) - tmp92*(0.066329140985678992*tmp17*tmp26*tmp66*tmp71 + 0.066329140985678992*tmp17*tmp32*tmp71*tmp76 + 0.066329140985678992*tmp17*tmp42*tmp71*tmp82 - tmp340 - tmp383);
      elMat(0,9) = -tmp120*(2.923056903871144*tmp104*tmp17*tmp36*tmp99 + 2.923056903871144*tmp110*tmp17*tmp44*tmp99 + 2.923056903871144*tmp17*tmp34*tmp94*tmp99 - tmp364 - tmp386) - tmp148*(1.1748979585239958*tmp122*tmp127*tmp17*tmp34 + 1.1748979585239958*tmp127*tmp132*tmp17*tmp36 + 1.1748979585239958*tmp127*tmp138*tmp17*tmp44 - tmp366 - tmp388) - tmp176*(-1.292351334863308*tmp164 - 1.292351334863308*tmp165 - 1.292351334863308*tmp170 - tmp368 - tmp390) - tmp204*(0.35278616717586297*tmp17*tmp178*tmp183*tmp34 + 0.35278616717586297*tmp17*tmp183*tmp188*tmp36 + 0.35278616717586297*tmp17*tmp183*tmp194*tmp44 - tmp370 - tmp392) - tmp228*(-0.50808146532588383*tmp217 - 0.50808146532588383*tmp218 - 0.50808146532588383*tmp222 - tmp372 - tmp394) - tmp256*(1.7657230752364721*tmp17*tmp230*tmp235*tmp34 + 1.7657230752364721*tmp17*tmp235*tmp240*tmp36 + 1.7657230752364721*tmp17*tmp235*tmp246*tmp44 - tmp374 - tmp396) - tmp280*(-1.5757674358533722*tmp269 - 1.5757674358533722*tmp270 - 1.5757674358533722*tmp274 - tmp376 - tmp398) - tmp308*(0.24137878858456796*tmp17*tmp282*tmp287*tmp34 + 0.24137878858456796*tmp17*tmp287*tmp292*tmp36 + 0.24137878858456796*tmp17*tmp287*tmp298*tmp44 - tmp378 - tmp400) - tmp336*(0.35656239338404694*tmp17*tmp310*tmp315*tmp34 + 0.35656239338404694*tmp17*tmp315*tmp320*tmp36 + 0.35656239338404694*tmp17*tmp315*tmp326*tmp44 - tmp380 - tmp402) - tmp64*(0.058384491239200198*tmp17*tmp22*tmp29*tmp36 + 0.058384491239200198*tmp17*tmp22*tmp34*tmp8 + 0.058384491239200198*tmp17*tmp22*tmp39*tmp44 - tmp360 - tmp382) - tmp92*(-tmp362 - tmp384 - 2.6180852134415042*tmp80 - 2.6180852134415042*tmp81 - 2.6180852134415042*tmp86);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(3,3) = 0;
      elMat(3,4) = 0;
      elMat(3,5) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(4,3) = 0;
      elMat(4,4) = 0;
      elMat(4,5) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
      elMat(5,3) = 0;
      elMat(5,4) = 0;
      elMat(5,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp8 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp7*J_B_1(2, 2) - tmp8*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp13*tmp4 - tmp16;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp30 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp10 - tmp17;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp12 + tmp15;
      const real_t tmp40 = tmp19 - tmp21;
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = 0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46;
      const real_t tmp48 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp49 = tmp24*tmp48;
      const real_t tmp50 = tmp49*tmp6;
      const real_t tmp51 = tmp27*tmp49;
      const real_t tmp52 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp53 = tmp24*tmp52;
      const real_t tmp54 = tmp29*tmp53;
      const real_t tmp55 = tmp33*tmp53;
      const real_t tmp56 = tmp35*tmp49;
      const real_t tmp57 = tmp37*tmp53;
      const real_t tmp58 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp59 = tmp24*tmp58;
      const real_t tmp60 = tmp39*tmp59;
      const real_t tmp61 = tmp43*tmp59;
      const real_t tmp62 = tmp45*tmp59;
      const real_t tmp63 = coords[0][0]*coords[1][1];
      const real_t tmp64 = coords[0][0]*coords[1][2];
      const real_t tmp65 = coords[2][1]*coords[3][2];
      const real_t tmp66 = coords[0][1]*coords[1][0];
      const real_t tmp67 = coords[0][1]*coords[1][2];
      const real_t tmp68 = coords[2][2]*coords[3][0];
      const real_t tmp69 = coords[0][2]*coords[1][0];
      const real_t tmp70 = coords[0][2]*coords[1][1];
      const real_t tmp71 = coords[2][0]*coords[3][1];
      const real_t tmp72 = coords[2][2]*coords[3][1];
      const real_t tmp73 = coords[2][0]*coords[3][2];
      const real_t tmp74 = coords[2][1]*coords[3][0];
      const real_t tmp75 = std::abs(coords[0][0]*tmp65 - coords[0][0]*tmp72 + coords[0][1]*tmp68 - coords[0][1]*tmp73 + coords[0][2]*tmp71 - coords[0][2]*tmp74 - coords[1][0]*tmp65 + coords[1][0]*tmp72 - coords[1][1]*tmp68 + coords[1][1]*tmp73 - coords[1][2]*tmp71 + coords[1][2]*tmp74 + coords[2][0]*tmp67 - coords[2][0]*tmp70 - coords[2][1]*tmp64 + coords[2][1]*tmp69 + coords[2][2]*tmp63 - coords[2][2]*tmp66 - coords[3][0]*tmp67 + coords[3][0]*tmp70 + coords[3][1]*tmp64 - coords[3][1]*tmp69 - coords[3][2]*tmp63 + coords[3][2]*tmp66);
      const real_t tmp76 = tmp75*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp77 = tmp76*(0.55279693041046674*tmp50 + 0.55279693041046674*tmp51 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62);
      const real_t tmp78 = 0.011829781572832234*tmp77;
      const real_t tmp79 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp80 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp81 = tmp79 - tmp80;
      const real_t tmp82 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp83 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp84 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp85 = tmp79*J_B_10(2, 2) - tmp80*J_B_10(2, 2) + tmp82*J_B_10(2, 0) - tmp83*J_B_10(2, 1) - tmp84*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp86 = 1.0 / (tmp85);
      const real_t tmp87 = tmp18*tmp86;
      const real_t tmp88 = tmp81*tmp87;
      const real_t tmp89 = tmp6*tmp88;
      const real_t tmp90 = tmp27*tmp88;
      const real_t tmp91 = -tmp83 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp92 = tmp87*tmp91;
      const real_t tmp93 = tmp29*tmp92;
      const real_t tmp94 = tmp33*tmp92;
      const real_t tmp95 = tmp35*tmp88;
      const real_t tmp96 = tmp37*tmp92;
      const real_t tmp97 = tmp82 - tmp84;
      const real_t tmp98 = tmp87*tmp97;
      const real_t tmp99 = tmp39*tmp98;
      const real_t tmp100 = tmp43*tmp98;
      const real_t tmp101 = tmp45*tmp98;
      const real_t tmp102 = 0.60805118540288361*tmp100 + 0.60805118540288361*tmp101 + 0.60805118540288361*tmp89 + 0.60805118540288361*tmp90 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp95 + 0.60805118540288361*tmp96 + 0.60805118540288361*tmp99;
      const real_t tmp103 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp104 = tmp103*tmp87;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp108 = tmp107*tmp87;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp114 = tmp113*tmp87;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = tmp75*std::abs(tmp85)*ScalarCoeff0_10;
      const real_t tmp119 = tmp118*(0.60805118540288361*tmp105 + 0.60805118540288361*tmp106 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp111 + 0.60805118540288361*tmp112 + 0.60805118540288361*tmp115 + 0.60805118540288361*tmp116 + 0.60805118540288361*tmp117);
      const real_t tmp120 = 0.0061414854617707626*tmp119;
      const real_t tmp121 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp122 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp123 = tmp121 - tmp122;
      const real_t tmp124 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp125 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp126 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp127 = tmp121*J_B_11(2, 2) - tmp122*J_B_11(2, 2) + tmp124*J_B_11(2, 0) - tmp125*J_B_11(2, 1) - tmp126*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp128 = 1.0 / (tmp127);
      const real_t tmp129 = tmp128*tmp18;
      const real_t tmp130 = tmp123*tmp129;
      const real_t tmp131 = tmp130*tmp6;
      const real_t tmp132 = tmp130*tmp27;
      const real_t tmp133 = -tmp125 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp134 = tmp129*tmp133;
      const real_t tmp135 = tmp134*tmp29;
      const real_t tmp136 = tmp134*tmp33;
      const real_t tmp137 = tmp130*tmp35;
      const real_t tmp138 = tmp134*tmp37;
      const real_t tmp139 = tmp124 - tmp126;
      const real_t tmp140 = tmp129*tmp139;
      const real_t tmp141 = tmp140*tmp39;
      const real_t tmp142 = tmp140*tmp43;
      const real_t tmp143 = tmp140*tmp45;
      const real_t tmp144 = -2.0850189307815055*tmp131 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp136 - 2.0850189307815055*tmp137 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp141 - 2.0850189307815055*tmp142 - 2.0850189307815055*tmp143;
      const real_t tmp145 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp146 = tmp129*tmp145;
      const real_t tmp147 = tmp146*tmp6;
      const real_t tmp148 = tmp146*tmp27;
      const real_t tmp149 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp150 = tmp129*tmp149;
      const real_t tmp151 = tmp150*tmp29;
      const real_t tmp152 = tmp150*tmp33;
      const real_t tmp153 = tmp146*tmp35;
      const real_t tmp154 = tmp150*tmp37;
      const real_t tmp155 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp156 = tmp129*tmp155;
      const real_t tmp157 = tmp156*tmp39;
      const real_t tmp158 = tmp156*tmp43;
      const real_t tmp159 = tmp156*tmp45;
      const real_t tmp160 = tmp75*std::abs(tmp127)*ScalarCoeff0_11;
      const real_t tmp161 = tmp160*(-2.0850189307815055*tmp147 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp152 - 2.0850189307815055*tmp153 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp157 - 2.0850189307815055*tmp158 - 2.0850189307815055*tmp159);
      const real_t tmp162 = 0.0043612323249822204*tmp161;
      const real_t tmp163 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp164 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp165 = tmp163 - tmp164;
      const real_t tmp166 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp167 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp168 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp169 = tmp163*J_B_2(2, 2) - tmp164*J_B_2(2, 2) + tmp166*J_B_2(2, 0) - tmp167*J_B_2(2, 1) - tmp168*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp170 = 1.0 / (tmp169);
      const real_t tmp171 = tmp170*tmp18;
      const real_t tmp172 = tmp165*tmp171;
      const real_t tmp173 = tmp172*tmp6;
      const real_t tmp174 = tmp172*tmp27;
      const real_t tmp175 = -tmp167 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp176 = tmp171*tmp175;
      const real_t tmp177 = tmp176*tmp29;
      const real_t tmp178 = tmp176*tmp33;
      const real_t tmp179 = tmp172*tmp35;
      const real_t tmp180 = tmp176*tmp37;
      const real_t tmp181 = tmp166 - tmp168;
      const real_t tmp182 = tmp171*tmp181;
      const real_t tmp183 = tmp182*tmp39;
      const real_t tmp184 = tmp182*tmp43;
      const real_t tmp185 = tmp182*tmp45;
      const real_t tmp186 = -0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp177 - 0.29317593934991559*tmp178 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp183 - 0.29317593934991559*tmp184 - 0.29317593934991559*tmp185;
      const real_t tmp187 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp188 = tmp171*tmp187;
      const real_t tmp189 = tmp188*tmp6;
      const real_t tmp190 = tmp188*tmp27;
      const real_t tmp191 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp192 = tmp171*tmp191;
      const real_t tmp193 = tmp192*tmp29;
      const real_t tmp194 = tmp192*tmp33;
      const real_t tmp195 = tmp188*tmp35;
      const real_t tmp196 = tmp192*tmp37;
      const real_t tmp197 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp198 = tmp171*tmp197;
      const real_t tmp199 = tmp198*tmp39;
      const real_t tmp200 = tmp198*tmp43;
      const real_t tmp201 = tmp198*tmp45;
      const real_t tmp202 = tmp75*std::abs(tmp169)*ScalarCoeff0_2;
      const real_t tmp203 = tmp202*(-0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp193 - 0.29317593934991559*tmp194 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp199 - 0.29317593934991559*tmp200 - 0.29317593934991559*tmp201);
      const real_t tmp204 = 0.012248248047610821*tmp203;
      const real_t tmp205 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp206 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp207 = tmp205 - tmp206;
      const real_t tmp208 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp209 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp210 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp211 = tmp205*J_B_3(2, 2) - tmp206*J_B_3(2, 2) + tmp208*J_B_3(2, 0) - tmp209*J_B_3(2, 1) - tmp210*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp212 = 1.0 / (tmp211);
      const real_t tmp213 = tmp18*tmp212;
      const real_t tmp214 = tmp207*tmp213;
      const real_t tmp215 = tmp214*tmp6;
      const real_t tmp216 = tmp214*tmp27;
      const real_t tmp217 = -tmp209 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp218 = tmp213*tmp217;
      const real_t tmp219 = tmp218*tmp29;
      const real_t tmp220 = tmp218*tmp33;
      const real_t tmp221 = tmp214*tmp35;
      const real_t tmp222 = tmp218*tmp37;
      const real_t tmp223 = tmp208 - tmp210;
      const real_t tmp224 = tmp213*tmp223;
      const real_t tmp225 = tmp224*tmp39;
      const real_t tmp226 = tmp224*tmp43;
      const real_t tmp227 = tmp224*tmp45;
      const real_t tmp228 = 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp219 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222 + 0.56151037867223397*tmp225 + 0.56151037867223397*tmp226 + 0.56151037867223397*tmp227;
      const real_t tmp229 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp230 = tmp213*tmp229;
      const real_t tmp231 = tmp230*tmp6;
      const real_t tmp232 = tmp230*tmp27;
      const real_t tmp233 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp234 = tmp213*tmp233;
      const real_t tmp235 = tmp234*tmp29;
      const real_t tmp236 = tmp234*tmp33;
      const real_t tmp237 = tmp230*tmp35;
      const real_t tmp238 = tmp234*tmp37;
      const real_t tmp239 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp240 = tmp213*tmp239;
      const real_t tmp241 = tmp240*tmp39;
      const real_t tmp242 = tmp240*tmp43;
      const real_t tmp243 = tmp240*tmp45;
      const real_t tmp244 = tmp75*std::abs(tmp211)*ScalarCoeff0_3;
      const real_t tmp245 = tmp244*(0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp235 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238 + 0.56151037867223397*tmp241 + 0.56151037867223397*tmp242 + 0.56151037867223397*tmp243);
      const real_t tmp246 = 0.017219568446249611*tmp245;
      const real_t tmp247 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp248 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp249 = tmp247 - tmp248;
      const real_t tmp250 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp251 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp252 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp253 = tmp247*J_B_4(2, 2) - tmp248*J_B_4(2, 2) + tmp250*J_B_4(2, 0) - tmp251*J_B_4(2, 1) - tmp252*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp254 = 1.0 / (tmp253);
      const real_t tmp255 = tmp18*tmp254;
      const real_t tmp256 = tmp249*tmp255;
      const real_t tmp257 = tmp256*tmp6;
      const real_t tmp258 = tmp256*tmp27;
      const real_t tmp259 = -tmp251 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp260 = tmp255*tmp259;
      const real_t tmp261 = tmp260*tmp29;
      const real_t tmp262 = tmp260*tmp33;
      const real_t tmp263 = tmp256*tmp35;
      const real_t tmp264 = tmp260*tmp37;
      const real_t tmp265 = tmp250 - tmp252;
      const real_t tmp266 = tmp255*tmp265;
      const real_t tmp267 = tmp266*tmp39;
      const real_t tmp268 = tmp266*tmp43;
      const real_t tmp269 = tmp266*tmp45;
      const real_t tmp270 = -0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269;
      const real_t tmp271 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp272 = tmp255*tmp271;
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp276 = tmp255*tmp275;
      const real_t tmp277 = tmp276*tmp29;
      const real_t tmp278 = tmp276*tmp33;
      const real_t tmp279 = tmp272*tmp35;
      const real_t tmp280 = tmp276*tmp37;
      const real_t tmp281 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp282 = tmp255*tmp281;
      const real_t tmp283 = tmp282*tmp39;
      const real_t tmp284 = tmp282*tmp43;
      const real_t tmp285 = tmp282*tmp45;
      const real_t tmp286 = tmp75*std::abs(tmp253)*ScalarCoeff0_4;
      const real_t tmp287 = tmp286*(-0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279 - 0.31389282688815401*tmp280 - 0.31389282688815401*tmp283 - 0.31389282688815401*tmp284 - 0.31389282688815401*tmp285);
      const real_t tmp288 = 0.021490090227737114*tmp287;
      const real_t tmp289 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp290 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp291 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp292 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp293 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp294 = tmp289*J_B_5(2, 2) - tmp290*J_B_5(2, 2) + tmp291*J_B_5(2, 0) - tmp292*J_B_5(2, 1) - tmp293*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp295 = tmp18/tmp294;
      const real_t tmp296 = tmp295*(tmp289 - tmp290);
      const real_t tmp297 = tmp296*tmp6;
      const real_t tmp298 = tmp27*tmp296;
      const real_t tmp299 = tmp295*(-tmp292 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp300 = tmp29*tmp299;
      const real_t tmp301 = tmp299*tmp33;
      const real_t tmp302 = tmp296*tmp35;
      const real_t tmp303 = tmp299*tmp37;
      const real_t tmp304 = tmp295*(tmp291 - tmp293);
      const real_t tmp305 = tmp304*tmp39;
      const real_t tmp306 = tmp304*tmp43;
      const real_t tmp307 = tmp304*tmp45;
      const real_t tmp308 = 0.99043597017024343*tmp297 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp300 + 0.99043597017024343*tmp301 + 0.99043597017024343*tmp302 + 0.99043597017024343*tmp303 + 0.99043597017024343*tmp305 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307;
      const real_t tmp309 = tmp295*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp310 = tmp309*tmp6;
      const real_t tmp311 = tmp27*tmp309;
      const real_t tmp312 = tmp295*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp313 = tmp29*tmp312;
      const real_t tmp314 = tmp312*tmp33;
      const real_t tmp315 = tmp309*tmp35;
      const real_t tmp316 = tmp312*tmp37;
      const real_t tmp317 = tmp295*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp318 = tmp317*tmp39;
      const real_t tmp319 = tmp317*tmp43;
      const real_t tmp320 = tmp317*tmp45;
      const real_t tmp321 = tmp75*std::abs(tmp294)*ScalarCoeff0_5;
      const real_t tmp322 = tmp321*(0.99043597017024343*tmp310 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp313 + 0.99043597017024343*tmp314 + 0.99043597017024343*tmp315 + 0.99043597017024343*tmp316 + 0.99043597017024343*tmp318 + 0.99043597017024343*tmp319 + 0.99043597017024343*tmp320);
      const real_t tmp323 = 0.0084625239161731543*tmp322;
      const real_t tmp324 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp325 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp326 = tmp324 - tmp325;
      const real_t tmp327 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp328 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp329 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp330 = tmp324*J_B_6(2, 2) - tmp325*J_B_6(2, 2) + tmp327*J_B_6(2, 0) - tmp328*J_B_6(2, 1) - tmp329*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp331 = 1.0 / (tmp330);
      const real_t tmp332 = tmp18*tmp331;
      const real_t tmp333 = tmp326*tmp332;
      const real_t tmp334 = tmp333*tmp6;
      const real_t tmp335 = tmp27*tmp333;
      const real_t tmp336 = -tmp328 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp337 = tmp332*tmp336;
      const real_t tmp338 = tmp29*tmp337;
      const real_t tmp339 = tmp33*tmp337;
      const real_t tmp340 = tmp333*tmp35;
      const real_t tmp341 = tmp337*tmp37;
      const real_t tmp342 = tmp327 - tmp329;
      const real_t tmp343 = tmp332*tmp342;
      const real_t tmp344 = tmp343*tmp39;
      const real_t tmp345 = tmp343*tmp43;
      const real_t tmp346 = tmp343*tmp45;
      const real_t tmp347 = -1.2518910405721839*tmp334 - 1.2518910405721839*tmp335 - 1.2518910405721839*tmp338 - 1.2518910405721839*tmp339 - 1.2518910405721839*tmp340 - 1.2518910405721839*tmp341 - 1.2518910405721839*tmp344 - 1.2518910405721839*tmp345 - 1.2518910405721839*tmp346;
      const real_t tmp348 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp349 = tmp332*tmp348;
      const real_t tmp350 = tmp349*tmp6;
      const real_t tmp351 = tmp27*tmp349;
      const real_t tmp352 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp353 = tmp332*tmp352;
      const real_t tmp354 = tmp29*tmp353;
      const real_t tmp355 = tmp33*tmp353;
      const real_t tmp356 = tmp349*tmp35;
      const real_t tmp357 = tmp353*tmp37;
      const real_t tmp358 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp359 = tmp332*tmp358;
      const real_t tmp360 = tmp359*tmp39;
      const real_t tmp361 = tmp359*tmp43;
      const real_t tmp362 = tmp359*tmp45;
      const real_t tmp363 = tmp75*std::abs(tmp330)*ScalarCoeff0_6;
      const real_t tmp364 = tmp363*(-1.2518910405721839*tmp350 - 1.2518910405721839*tmp351 - 1.2518910405721839*tmp354 - 1.2518910405721839*tmp355 - 1.2518910405721839*tmp356 - 1.2518910405721839*tmp357 - 1.2518910405721839*tmp360 - 1.2518910405721839*tmp361 - 1.2518910405721839*tmp362);
      const real_t tmp365 = 0.0088251866742250357*tmp364;
      const real_t tmp366 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp367 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp368 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp369 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp370 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp371 = tmp366*J_B_7(2, 2) - tmp367*J_B_7(2, 2) + tmp368*J_B_7(2, 0) - tmp369*J_B_7(2, 1) - tmp370*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp372 = tmp18/tmp371;
      const real_t tmp373 = tmp372*(tmp366 - tmp367);
      const real_t tmp374 = tmp373*tmp6;
      const real_t tmp375 = tmp27*tmp373;
      const real_t tmp376 = tmp372*(-tmp369 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp377 = tmp29*tmp376;
      const real_t tmp378 = tmp33*tmp376;
      const real_t tmp379 = tmp35*tmp373;
      const real_t tmp380 = tmp37*tmp376;
      const real_t tmp381 = tmp372*(tmp368 - tmp370);
      const real_t tmp382 = tmp381*tmp39;
      const real_t tmp383 = tmp381*tmp43;
      const real_t tmp384 = tmp381*tmp45;
      const real_t tmp385 = 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375 + 0.77270393148826533*tmp377 + 0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp380 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384;
      const real_t tmp386 = tmp372*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp387 = tmp386*tmp6;
      const real_t tmp388 = tmp27*tmp386;
      const real_t tmp389 = tmp372*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp390 = tmp29*tmp389;
      const real_t tmp391 = tmp33*tmp389;
      const real_t tmp392 = tmp35*tmp386;
      const real_t tmp393 = tmp37*tmp389;
      const real_t tmp394 = tmp372*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp395 = tmp39*tmp394;
      const real_t tmp396 = tmp394*tmp43;
      const real_t tmp397 = tmp394*tmp45;
      const real_t tmp398 = tmp75*std::abs(tmp371)*ScalarCoeff0_7;
      const real_t tmp399 = tmp398*(0.77270393148826533*tmp387 + 0.77270393148826533*tmp388 + 0.77270393148826533*tmp390 + 0.77270393148826533*tmp391 + 0.77270393148826533*tmp392 + 0.77270393148826533*tmp393 + 0.77270393148826533*tmp395 + 0.77270393148826533*tmp396 + 0.77270393148826533*tmp397);
      const real_t tmp400 = 0.0077188851041817101*tmp399;
      const real_t tmp401 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp402 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp403 = tmp401 - tmp402;
      const real_t tmp404 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp405 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp406 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp407 = tmp401*J_B_8(2, 2) - tmp402*J_B_8(2, 2) + tmp404*J_B_8(2, 0) - tmp405*J_B_8(2, 1) - tmp406*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp408 = 1.0 / (tmp407);
      const real_t tmp409 = tmp18*tmp408;
      const real_t tmp410 = tmp403*tmp409;
      const real_t tmp411 = tmp410*tmp6;
      const real_t tmp412 = tmp27*tmp410;
      const real_t tmp413 = -tmp405 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp414 = tmp409*tmp413;
      const real_t tmp415 = tmp29*tmp414;
      const real_t tmp416 = tmp33*tmp414;
      const real_t tmp417 = tmp35*tmp410;
      const real_t tmp418 = tmp37*tmp414;
      const real_t tmp419 = tmp404 - tmp406;
      const real_t tmp420 = tmp409*tmp419;
      const real_t tmp421 = tmp39*tmp420;
      const real_t tmp422 = tmp420*tmp43;
      const real_t tmp423 = tmp420*tmp45;
      const real_t tmp424 = -0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp415 - 0.9184440441026207*tmp416 - 0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423;
      const real_t tmp425 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp426 = tmp409*tmp425;
      const real_t tmp427 = tmp426*tmp6;
      const real_t tmp428 = tmp27*tmp426;
      const real_t tmp429 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp430 = tmp409*tmp429;
      const real_t tmp431 = tmp29*tmp430;
      const real_t tmp432 = tmp33*tmp430;
      const real_t tmp433 = tmp35*tmp426;
      const real_t tmp434 = tmp37*tmp430;
      const real_t tmp435 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp436 = tmp409*tmp435;
      const real_t tmp437 = tmp39*tmp436;
      const real_t tmp438 = tmp43*tmp436;
      const real_t tmp439 = tmp436*tmp45;
      const real_t tmp440 = tmp75*std::abs(tmp407)*ScalarCoeff0_8;
      const real_t tmp441 = tmp440*(-0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp431 - 0.9184440441026207*tmp432 - 0.9184440441026207*tmp433 - 0.9184440441026207*tmp434 - 0.9184440441026207*tmp437 - 0.9184440441026207*tmp438 - 0.9184440441026207*tmp439);
      const real_t tmp442 = 0.006659242794062166*tmp441;
      const real_t tmp443 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp444 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp445 = tmp443 - tmp444;
      const real_t tmp446 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp447 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp448 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp449 = tmp443*J_B_9(2, 2) - tmp444*J_B_9(2, 2) + tmp446*J_B_9(2, 0) - tmp447*J_B_9(2, 1) - tmp448*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp450 = 1.0 / (tmp449);
      const real_t tmp451 = tmp18*tmp450;
      const real_t tmp452 = tmp445*tmp451;
      const real_t tmp453 = tmp452*tmp6;
      const real_t tmp454 = tmp27*tmp452;
      const real_t tmp455 = -tmp447 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp456 = tmp451*tmp455;
      const real_t tmp457 = tmp29*tmp456;
      const real_t tmp458 = tmp33*tmp456;
      const real_t tmp459 = tmp35*tmp452;
      const real_t tmp460 = tmp37*tmp456;
      const real_t tmp461 = tmp446 - tmp448;
      const real_t tmp462 = tmp451*tmp461;
      const real_t tmp463 = tmp39*tmp462;
      const real_t tmp464 = tmp43*tmp462;
      const real_t tmp465 = tmp45*tmp462;
      const real_t tmp466 = 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454 + 0.37454442704241986*tmp457 + 0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp460 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465;
      const real_t tmp467 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp468 = tmp451*tmp467;
      const real_t tmp469 = tmp468*tmp6;
      const real_t tmp470 = tmp27*tmp468;
      const real_t tmp471 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp472 = tmp451*tmp471;
      const real_t tmp473 = tmp29*tmp472;
      const real_t tmp474 = tmp33*tmp472;
      const real_t tmp475 = tmp35*tmp468;
      const real_t tmp476 = tmp37*tmp472;
      const real_t tmp477 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp478 = tmp451*tmp477;
      const real_t tmp479 = tmp39*tmp478;
      const real_t tmp480 = tmp43*tmp478;
      const real_t tmp481 = tmp45*tmp478;
      const real_t tmp482 = tmp75*std::abs(tmp449)*ScalarCoeff0_9;
      const real_t tmp483 = tmp482*(0.37454442704241986*tmp469 + 0.37454442704241986*tmp470 + 0.37454442704241986*tmp473 + 0.37454442704241986*tmp474 + 0.37454442704241986*tmp475 + 0.37454442704241986*tmp476 + 0.37454442704241986*tmp479 + 0.37454442704241986*tmp480 + 0.37454442704241986*tmp481);
      const real_t tmp484 = 0.0061548665412862651*tmp483;
      const real_t tmp485 = tmp36 + tmp38 + tmp46;
      const real_t tmp486 = 0.0072301427194886381*tmp485;
      const real_t tmp487 = tmp101 + tmp95 + tmp96;
      const real_t tmp488 = 0.012344594760863713*tmp487;
      const real_t tmp489 = tmp137 + tmp138 + tmp143;
      const real_t tmp490 = 0.0036548782978011126*tmp489;
      const real_t tmp491 = tmp179 + tmp180 + tmp185;
      const real_t tmp492 = 0.010799549999884401*tmp491;
      const real_t tmp493 = tmp221 + tmp222 + tmp227;
      const real_t tmp494 = 0.012584765868454714*tmp493;
      const real_t tmp495 = tmp263 + tmp264 + tmp269;
      const real_t tmp496 = 0.00083582139204094858*tmp495;
      const real_t tmp497 = tmp302 + tmp303 + tmp307;
      const real_t tmp498 = 0.0040819365333192512*tmp497;
      const real_t tmp499 = tmp340 + tmp341 + tmp346;
      const real_t tmp500 = 0.0045346636251092122*tmp499;
      const real_t tmp501 = tmp379 + tmp380 + tmp384;
      const real_t tmp502 = 0.0061987549215557864*tmp501;
      const real_t tmp503 = tmp417 + tmp418 + tmp423;
      const real_t tmp504 = 0.0045087419239184514*tmp503;
      const real_t tmp505 = tmp459 + tmp460 + tmp465;
      const real_t tmp506 = 0.0044998649071490461*tmp505;
      const real_t tmp507 = tmp28 + tmp34 + tmp44;
      const real_t tmp508 = 0.0067853652681886352*tmp507;
      const real_t tmp509 = tmp100 + tmp90 + tmp94;
      const real_t tmp510 = 0.0041416969702195786*tmp509;
      const real_t tmp511 = tmp132 + tmp136 + tmp142;
      const real_t tmp512 = 0.0013137068218914037*tmp511;
      const real_t tmp513 = tmp174 + tmp178 + tmp184;
      const real_t tmp514 = 0.0038818597778972029*tmp513;
      const real_t tmp515 = tmp216 + tmp220 + tmp226;
      const real_t tmp516 = 0.010066964965131993*tmp515;
      const real_t tmp517 = tmp258 + tmp262 + tmp268;
      const real_t tmp518 = 0.0046804043242939224*tmp517;
      const real_t tmp519 = tmp298 + tmp301 + tmp306;
      const real_t tmp520 = 0.0097490714046835261*tmp519;
      const real_t tmp521 = tmp335 + tmp339 + tmp345;
      const real_t tmp522 = 0.0085077884791842431*tmp521;
      const real_t tmp523 = tmp375 + tmp378 + tmp383;
      const real_t tmp524 = 0.0056487878897383461*tmp523;
      const real_t tmp525 = tmp412 + tmp416 + tmp422;
      const real_t tmp526 = 0.005238393734043144*tmp525;
      const real_t tmp527 = tmp454 + tmp458 + tmp464;
      const real_t tmp528 = 0.012093792842045984*tmp527;
      const real_t tmp529 = tmp26 + tmp32 + tmp42;
      const real_t tmp530 = 0.020554974928565235*tmp529;
      const real_t tmp531 = tmp89 + tmp93 + tmp99;
      const real_t tmp532 = 0.0044685602754798454*tmp531;
      const real_t tmp533 = tmp131 + tmp135 + tmp141;
      const real_t tmp534 = 0.0041246668394316508*tmp533;
      const real_t tmp535 = tmp173 + tmp177 + tmp183;
      const real_t tmp536 = 0.0033267985952381263*tmp535;
      const real_t tmp537 = tmp215 + tmp219 + tmp225;
      const real_t tmp538 = 0.0071511654955033511*tmp537;
      const real_t tmp539 = tmp257 + tmp261 + tmp267;
      const real_t tmp540 = 0.010590168103918869*tmp539;
      const real_t tmp541 = tmp297 + tmp300 + tmp305;
      const real_t tmp542 = 0.0027144532136395704*tmp541;
      const real_t tmp543 = tmp334 + tmp338 + tmp344;
      const real_t tmp544 = 0.0019942799754541058*tmp543;
      const real_t tmp545 = tmp374 + tmp377 + tmp382;
      const real_t tmp546 = 0.005883129944586717*tmp545;
      const real_t tmp547 = tmp411 + tmp415 + tmp421;
      const real_t tmp548 = 0.0053864900723149976*tmp547;
      const real_t tmp549 = tmp453 + tmp457 + tmp463;
      const real_t tmp550 = 0.0052886569726683132*tmp549;
      const real_t tmp551 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp552 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp553 = tmp551 + tmp552;
      const real_t tmp554 = 0.2723974837528258*tmp100 + 0.2723974837528258*tmp90 + 0.2723974837528258*tmp94;
      const real_t tmp555 = 0.3256196736114374*tmp89 + 0.3256196736114374*tmp93 + 0.3256196736114374*tmp99;
      const real_t tmp556 = tmp554 + tmp555;
      const real_t tmp557 = 0.054242807519210512*tmp132 + 0.054242807519210512*tmp136 + 0.054242807519210512*tmp142;
      const real_t tmp558 = 0.69877623478892303*tmp131 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp141;
      const real_t tmp559 = tmp557 + tmp558;
      const real_t tmp560 = 1.2716142408535775*tmp174 + 1.2716142408535775*tmp178 + 1.2716142408535775*tmp184;
      const real_t tmp561 = 1.3169318389705873*tmp173 + 1.3169318389705873*tmp177 + 1.3169318389705873*tmp183;
      const real_t tmp562 = tmp560 + tmp561;
      const real_t tmp563 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp220 + 1.4152929568371884*tmp226;
      const real_t tmp564 = 0.41537646564397157*tmp215 + 0.41537646564397157*tmp219 + 0.41537646564397157*tmp225;
      const real_t tmp565 = tmp563 + tmp564;
      const real_t tmp566 = 0.50720690366156718*tmp258 + 0.50720690366156718*tmp262 + 0.50720690366156718*tmp268;
      const real_t tmp567 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp261 + 1.2177936097379878*tmp267;
      const real_t tmp568 = tmp566 + tmp567;
      const real_t tmp569 = 1.3207616593498592*tmp298 + 1.3207616593498592*tmp301 + 1.3207616593498592*tmp306;
      const real_t tmp570 = 2.1520288156647434*tmp297 + 2.1520288156647434*tmp300 + 2.1520288156647434*tmp305;
      const real_t tmp571 = tmp569 + tmp570;
      const real_t tmp572 = 1.2259759537187613*tmp335 + 1.2259759537187613*tmp339 + 1.2259759537187613*tmp345;
      const real_t tmp573 = 0.035965040373342916*tmp334 + 0.035965040373342916*tmp338 + 0.035965040373342916*tmp344;
      const real_t tmp574 = tmp572 + tmp573;
      const real_t tmp575 = 0.23782646519773576*tmp375 + 0.23782646519773576*tmp378 + 0.23782646519773576*tmp383;
      const real_t tmp576 = 1.7318139619254227*tmp374 + 1.7318139619254227*tmp377 + 1.7318139619254227*tmp382;
      const real_t tmp577 = tmp575 + tmp576;
      const real_t tmp578 = 0.19112574223634571*tmp412 + 0.19112574223634571*tmp416 + 0.19112574223634571*tmp422;
      const real_t tmp579 = 0.21336495814298084*tmp411 + 0.21336495814298084*tmp415 + 0.21336495814298084*tmp421;
      const real_t tmp580 = tmp578 + tmp579;
      const real_t tmp581 = 0.14073571909439453*tmp454 + 0.14073571909439453*tmp458 + 0.14073571909439453*tmp464;
      const real_t tmp582 = 2.9649155283744921*tmp453 + 2.9649155283744921*tmp457 + 2.9649155283744921*tmp463;
      const real_t tmp583 = tmp581 + tmp582;
      const real_t tmp584 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp585 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp586 = tmp584 + tmp585;
      const real_t tmp587 = 0.2723974837528258*tmp101 + 0.2723974837528258*tmp95 + 0.2723974837528258*tmp96;
      const real_t tmp588 = 3.0100340280386204*tmp89 + 3.0100340280386204*tmp93 + 3.0100340280386204*tmp99;
      const real_t tmp589 = tmp587 + tmp588;
      const real_t tmp590 = 0.054242807519210512*tmp137 + 0.054242807519210512*tmp138 + 0.054242807519210512*tmp143;
      const real_t tmp591 = 0.16196202691036121*tmp131 + 0.16196202691036121*tmp135 + 0.16196202691036121*tmp141;
      const real_t tmp592 = tmp590 + tmp591;
      const real_t tmp593 = 1.2716142408535775*tmp179 + 1.2716142408535775*tmp180 + 1.2716142408535775*tmp185;
      const real_t tmp594 = 0.11827798082591956*tmp173 + 0.11827798082591956*tmp177 + 0.11827798082591956*tmp183;
      const real_t tmp595 = tmp593 + tmp594;
      const real_t tmp596 = 1.4152929568371884*tmp221 + 1.4152929568371884*tmp222 + 1.4152929568371884*tmp227;
      const real_t tmp597 = 1.730840956191074*tmp215 + 1.730840956191074*tmp219 + 1.730840956191074*tmp225;
      const real_t tmp598 = tmp596 + tmp597;
      const real_t tmp599 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp269;
      const real_t tmp600 = 0.96110665971229103*tmp257 + 0.96110665971229103*tmp261 + 0.96110665971229103*tmp267;
      const real_t tmp601 = tmp599 + tmp600;
      const real_t tmp602 = 1.3207616593498592*tmp302 + 1.3207616593498592*tmp303 + 1.3207616593498592*tmp307;
      const real_t tmp603 = 0.51764549515564062*tmp297 + 0.51764549515564062*tmp300 + 0.51764549515564062*tmp305;
      const real_t tmp604 = tmp602 + tmp603;
      const real_t tmp605 = 1.2259759537187613*tmp340 + 1.2259759537187613*tmp341 + 1.2259759537187613*tmp346;
      const real_t tmp606 = 0.48616796533571183*tmp334 + 0.48616796533571183*tmp338 + 0.48616796533571183*tmp344;
      const real_t tmp607 = tmp605 + tmp606;
      const real_t tmp608 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp380 + 0.23782646519773576*tmp384;
      const real_t tmp609 = 1.8030635043651069*tmp374 + 1.8030635043651069*tmp377 + 1.8030635043651069*tmp382;
      const real_t tmp610 = tmp608 + tmp609;
      const real_t tmp611 = 0.19112574223634571*tmp417 + 0.19112574223634571*tmp418 + 0.19112574223634571*tmp423;
      const real_t tmp612 = 1.6770652555180527*tmp411 + 1.6770652555180527*tmp415 + 1.6770652555180527*tmp421;
      const real_t tmp613 = tmp611 + tmp612;
      const real_t tmp614 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp460 + 0.14073571909439453*tmp465;
      const real_t tmp615 = 0.2688931795735332*tmp453 + 0.2688931795735332*tmp457 + 0.2688931795735332*tmp463;
      const real_t tmp616 = tmp614 + tmp615;
      const real_t tmp617 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp618 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp619 = tmp617 + tmp618;
      const real_t tmp620 = 0.3256196736114374*tmp101 + 0.3256196736114374*tmp95 + 0.3256196736114374*tmp96;
      const real_t tmp621 = 3.0100340280386204*tmp100 + 3.0100340280386204*tmp90 + 3.0100340280386204*tmp94;
      const real_t tmp622 = tmp620 + tmp621;
      const real_t tmp623 = 0.69877623478892303*tmp137 + 0.69877623478892303*tmp138 + 0.69877623478892303*tmp143;
      const real_t tmp624 = 0.16196202691036121*tmp132 + 0.16196202691036121*tmp136 + 0.16196202691036121*tmp142;
      const real_t tmp625 = tmp623 + tmp624;
      const real_t tmp626 = 1.3169318389705873*tmp179 + 1.3169318389705873*tmp180 + 1.3169318389705873*tmp185;
      const real_t tmp627 = 0.11827798082591956*tmp174 + 0.11827798082591956*tmp178 + 0.11827798082591956*tmp184;
      const real_t tmp628 = tmp626 + tmp627;
      const real_t tmp629 = 0.41537646564397157*tmp221 + 0.41537646564397157*tmp222 + 0.41537646564397157*tmp227;
      const real_t tmp630 = 1.730840956191074*tmp216 + 1.730840956191074*tmp220 + 1.730840956191074*tmp226;
      const real_t tmp631 = tmp629 + tmp630;
      const real_t tmp632 = 1.2177936097379878*tmp263 + 1.2177936097379878*tmp264 + 1.2177936097379878*tmp269;
      const real_t tmp633 = 0.96110665971229103*tmp258 + 0.96110665971229103*tmp262 + 0.96110665971229103*tmp268;
      const real_t tmp634 = tmp632 + tmp633;
      const real_t tmp635 = 2.1520288156647434*tmp302 + 2.1520288156647434*tmp303 + 2.1520288156647434*tmp307;
      const real_t tmp636 = 0.51764549515564062*tmp298 + 0.51764549515564062*tmp301 + 0.51764549515564062*tmp306;
      const real_t tmp637 = tmp635 + tmp636;
      const real_t tmp638 = 0.035965040373342916*tmp340 + 0.035965040373342916*tmp341 + 0.035965040373342916*tmp346;
      const real_t tmp639 = 0.48616796533571183*tmp335 + 0.48616796533571183*tmp339 + 0.48616796533571183*tmp345;
      const real_t tmp640 = tmp638 + tmp639;
      const real_t tmp641 = 1.7318139619254227*tmp379 + 1.7318139619254227*tmp380 + 1.7318139619254227*tmp384;
      const real_t tmp642 = 1.8030635043651069*tmp375 + 1.8030635043651069*tmp378 + 1.8030635043651069*tmp383;
      const real_t tmp643 = tmp641 + tmp642;
      const real_t tmp644 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp418 + 0.21336495814298084*tmp423;
      const real_t tmp645 = 1.6770652555180527*tmp412 + 1.6770652555180527*tmp416 + 1.6770652555180527*tmp422;
      const real_t tmp646 = tmp644 + tmp645;
      const real_t tmp647 = 2.9649155283744921*tmp459 + 2.9649155283744921*tmp460 + 2.9649155283744921*tmp465;
      const real_t tmp648 = 0.2688931795735332*tmp454 + 0.2688931795735332*tmp458 + 0.2688931795735332*tmp464;
      const real_t tmp649 = tmp647 + tmp648;
      const real_t tmp650 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - 2.2903585922226259*tmp42 - tmp551 - tmp584;
      const real_t tmp651 = 0.11955133084429059*tmp18*tmp29*tmp86*tmp91 + 0.11955133084429059*tmp18*tmp39*tmp86*tmp97 + 0.11955133084429059*tmp18*tmp6*tmp81*tmp86 - tmp554 - tmp587;
      const real_t tmp652 = 3.030776123262295*tmp123*tmp128*tmp18*tmp6 + 3.030776123262295*tmp128*tmp133*tmp18*tmp29 + 3.030776123262295*tmp128*tmp139*tmp18*tmp39 - tmp557 - tmp590;
      const real_t tmp653 = 0.021561698496338266*tmp165*tmp170*tmp18*tmp6 + 0.021561698496338266*tmp170*tmp175*tmp18*tmp29 + 0.021561698496338266*tmp170*tmp18*tmp181*tmp39 - tmp560 - tmp593;
      const real_t tmp654 = -0.97680333550942233*tmp215 - 0.97680333550942233*tmp219 - 0.97680333550942233*tmp225 - tmp563 - tmp596;
      const real_t tmp655 = 0.80668592322658683*tmp18*tmp249*tmp254*tmp6 + 0.80668592322658683*tmp18*tmp254*tmp259*tmp29 + 0.80668592322658683*tmp18*tmp254*tmp265*tmp39 - tmp566 - tmp599;
      const real_t tmp656 = -1.3111976295201027*tmp297 - 1.3111976295201027*tmp300 - 1.3111976295201027*tmp305 - tmp569 - tmp602;
      const real_t tmp657 = 1.0259150868534226*tmp18*tmp29*tmp331*tmp336 + 1.0259150868534226*tmp18*tmp326*tmp331*tmp6 + 1.0259150868534226*tmp18*tmp331*tmp342*tmp39 - tmp572 - tmp605;
      const real_t tmp658 = -0.010530396686001087*tmp374 - 0.010530396686001087*tmp377 - 0.010530396686001087*tmp382 - tmp575 - tmp608;
      const real_t tmp659 = 1.727318301866275*tmp18*tmp29*tmp408*tmp413 + 1.727318301866275*tmp18*tmp39*tmp408*tmp419 + 1.727318301866275*tmp18*tmp403*tmp408*tmp6 - tmp578 - tmp611;
      const real_t tmp660 = 0.48471985386318561*tmp18*tmp29*tmp450*tmp455 + 0.48471985386318561*tmp18*tmp39*tmp450*tmp461 + 0.48471985386318561*tmp18*tmp445*tmp450*tmp6 - tmp581 - tmp614;
      const real_t tmp661 = 0.020786379341558803*tmp18*tmp23*tmp27*tmp9 + 0.020786379341558803*tmp18*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp18*tmp23*tmp40*tmp43 - tmp552 - tmp617;
      const real_t tmp662 = 0.066329140985678992*tmp18*tmp27*tmp81*tmp86 + 0.066329140985678992*tmp18*tmp33*tmp86*tmp91 + 0.066329140985678992*tmp18*tmp43*tmp86*tmp97 - tmp555 - tmp620;
      const real_t tmp663 = 2.3862426959925824*tmp123*tmp128*tmp18*tmp27 + 2.3862426959925824*tmp128*tmp133*tmp18*tmp33 + 2.3862426959925824*tmp128*tmp139*tmp18*tmp43 - tmp558 - tmp623;
      const real_t tmp664 = -0.023755899620671705*tmp174 - 0.023755899620671705*tmp178 - 0.023755899620671705*tmp184 - tmp561 - tmp626;
      const real_t tmp665 = 0.023113155683794462*tmp18*tmp207*tmp212*tmp27 + 0.023113155683794462*tmp18*tmp212*tmp217*tmp33 + 0.023113155683794462*tmp18*tmp212*tmp223*tmp43 - tmp564 - tmp629;
      const real_t tmp666 = 0.096099217150166227*tmp18*tmp249*tmp254*tmp27 + 0.096099217150166227*tmp18*tmp254*tmp259*tmp33 + 0.096099217150166227*tmp18*tmp254*tmp265*tmp43 - tmp567 - tmp632;
      const real_t tmp667 = -2.1424647858349868*tmp298 - 2.1424647858349868*tmp301 - 2.1424647858349868*tmp306 - tmp570 - tmp635;
      const real_t tmp668 = 2.215926000198841*tmp18*tmp27*tmp326*tmp331 + 2.215926000198841*tmp18*tmp33*tmp331*tmp336 + 2.215926000198841*tmp18*tmp331*tmp342*tmp43 - tmp573 - tmp638;
      const real_t tmp669 = -1.504517893413688*tmp375 - 1.504517893413688*tmp378 - 1.504517893413688*tmp383 - tmp576 - tmp641;
      const real_t tmp670 = 1.7050790859596399*tmp18*tmp27*tmp403*tmp408 + 1.7050790859596399*tmp18*tmp33*tmp408*tmp413 + 1.7050790859596399*tmp18*tmp408*tmp419*tmp43 - tmp579 - tmp644;
      const real_t tmp671 = -2.339459955416912*tmp454 - 2.339459955416912*tmp458 - 2.339459955416912*tmp464 - tmp582 - tmp647;
      const real_t tmp672 = 0.058384491239200198*tmp18*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp18*tmp23*tmp35*tmp9 + 0.058384491239200198*tmp18*tmp23*tmp40*tmp45 - tmp585 - tmp618;
      const real_t tmp673 = -2.6180852134415042*tmp101 - tmp588 - tmp621 - 2.6180852134415042*tmp95 - 2.6180852134415042*tmp96;
      const real_t tmp674 = 2.923056903871144*tmp123*tmp128*tmp18*tmp35 + 2.923056903871144*tmp128*tmp133*tmp18*tmp37 + 2.923056903871144*tmp128*tmp139*tmp18*tmp45 - tmp591 - tmp624;
      const real_t tmp675 = 1.1748979585239958*tmp165*tmp170*tmp18*tmp35 + 1.1748979585239958*tmp170*tmp175*tmp18*tmp37 + 1.1748979585239958*tmp170*tmp18*tmp181*tmp45 - tmp594 - tmp627;
      const real_t tmp676 = -1.292351334863308*tmp221 - 1.292351334863308*tmp222 - 1.292351334863308*tmp227 - tmp597 - tmp630;
      const real_t tmp677 = 0.35278616717586297*tmp18*tmp249*tmp254*tmp35 + 0.35278616717586297*tmp18*tmp254*tmp259*tmp37 + 0.35278616717586297*tmp18*tmp254*tmp265*tmp45 - tmp600 - tmp633;
      const real_t tmp678 = -0.50808146532588383*tmp302 - 0.50808146532588383*tmp303 - 0.50808146532588383*tmp307 - tmp603 - tmp636;
      const real_t tmp679 = 1.7657230752364721*tmp18*tmp326*tmp331*tmp35 + 1.7657230752364721*tmp18*tmp331*tmp336*tmp37 + 1.7657230752364721*tmp18*tmp331*tmp342*tmp45 - tmp606 - tmp639;
      const real_t tmp680 = -1.5757674358533722*tmp379 - 1.5757674358533722*tmp380 - 1.5757674358533722*tmp384 - tmp609 - tmp642;
      const real_t tmp681 = 0.24137878858456796*tmp18*tmp35*tmp403*tmp408 + 0.24137878858456796*tmp18*tmp37*tmp408*tmp413 + 0.24137878858456796*tmp18*tmp408*tmp419*tmp45 - tmp612 - tmp645;
      const real_t tmp682 = 0.35656239338404694*tmp18*tmp35*tmp445*tmp450 + 0.35656239338404694*tmp18*tmp37*tmp450*tmp455 + 0.35656239338404694*tmp18*tmp45*tmp450*tmp461 - tmp615 - tmp648;
      const real_t tmp683 = tmp76*(tmp56 + tmp57 + tmp62);
      const real_t tmp684 = 0.0072301427194886381*tmp683;
      const real_t tmp685 = tmp118*(tmp111 + tmp112 + tmp117);
      const real_t tmp686 = 0.012344594760863713*tmp685;
      const real_t tmp687 = tmp160*(tmp153 + tmp154 + tmp159);
      const real_t tmp688 = 0.0036548782978011126*tmp687;
      const real_t tmp689 = tmp202*(tmp195 + tmp196 + tmp201);
      const real_t tmp690 = 0.010799549999884401*tmp689;
      const real_t tmp691 = tmp244*(tmp237 + tmp238 + tmp243);
      const real_t tmp692 = 0.012584765868454714*tmp691;
      const real_t tmp693 = tmp286*(tmp279 + tmp280 + tmp285);
      const real_t tmp694 = 0.00083582139204094858*tmp693;
      const real_t tmp695 = tmp321*(tmp315 + tmp316 + tmp320);
      const real_t tmp696 = 0.0040819365333192512*tmp695;
      const real_t tmp697 = tmp363*(tmp356 + tmp357 + tmp362);
      const real_t tmp698 = 0.0045346636251092122*tmp697;
      const real_t tmp699 = tmp398*(tmp392 + tmp393 + tmp397);
      const real_t tmp700 = 0.0061987549215557864*tmp699;
      const real_t tmp701 = tmp440*(tmp433 + tmp434 + tmp439);
      const real_t tmp702 = 0.0045087419239184514*tmp701;
      const real_t tmp703 = tmp482*(tmp475 + tmp476 + tmp481);
      const real_t tmp704 = 0.0044998649071490461*tmp703;
      const real_t tmp705 = tmp76*(tmp51 + tmp55 + tmp61);
      const real_t tmp706 = 0.0067853652681886352*tmp705;
      const real_t tmp707 = tmp118*(tmp106 + tmp110 + tmp116);
      const real_t tmp708 = 0.0041416969702195786*tmp707;
      const real_t tmp709 = tmp160*(tmp148 + tmp152 + tmp158);
      const real_t tmp710 = 0.0013137068218914037*tmp709;
      const real_t tmp711 = tmp202*(tmp190 + tmp194 + tmp200);
      const real_t tmp712 = 0.0038818597778972029*tmp711;
      const real_t tmp713 = tmp244*(tmp232 + tmp236 + tmp242);
      const real_t tmp714 = 0.010066964965131993*tmp713;
      const real_t tmp715 = tmp286*(tmp274 + tmp278 + tmp284);
      const real_t tmp716 = 0.0046804043242939224*tmp715;
      const real_t tmp717 = tmp321*(tmp311 + tmp314 + tmp319);
      const real_t tmp718 = 0.0097490714046835261*tmp717;
      const real_t tmp719 = tmp363*(tmp351 + tmp355 + tmp361);
      const real_t tmp720 = 0.0085077884791842431*tmp719;
      const real_t tmp721 = tmp398*(tmp388 + tmp391 + tmp396);
      const real_t tmp722 = 0.0056487878897383461*tmp721;
      const real_t tmp723 = tmp440*(tmp428 + tmp432 + tmp438);
      const real_t tmp724 = 0.005238393734043144*tmp723;
      const real_t tmp725 = tmp482*(tmp470 + tmp474 + tmp480);
      const real_t tmp726 = 0.012093792842045984*tmp725;
      const real_t tmp727 = tmp76*(tmp50 + tmp54 + tmp60);
      const real_t tmp728 = 0.020554974928565235*tmp727;
      const real_t tmp729 = tmp118*(tmp105 + tmp109 + tmp115);
      const real_t tmp730 = 0.0044685602754798454*tmp729;
      const real_t tmp731 = tmp160*(tmp147 + tmp151 + tmp157);
      const real_t tmp732 = 0.0041246668394316508*tmp731;
      const real_t tmp733 = tmp202*(tmp189 + tmp193 + tmp199);
      const real_t tmp734 = 0.0033267985952381263*tmp733;
      const real_t tmp735 = tmp244*(tmp231 + tmp235 + tmp241);
      const real_t tmp736 = 0.0071511654955033511*tmp735;
      const real_t tmp737 = tmp286*(tmp273 + tmp277 + tmp283);
      const real_t tmp738 = 0.010590168103918869*tmp737;
      const real_t tmp739 = tmp321*(tmp310 + tmp313 + tmp318);
      const real_t tmp740 = 0.0027144532136395704*tmp739;
      const real_t tmp741 = tmp363*(tmp350 + tmp354 + tmp360);
      const real_t tmp742 = 0.0019942799754541058*tmp741;
      const real_t tmp743 = tmp398*(tmp387 + tmp390 + tmp395);
      const real_t tmp744 = 0.005883129944586717*tmp743;
      const real_t tmp745 = tmp440*(tmp427 + tmp431 + tmp437);
      const real_t tmp746 = 0.0053864900723149976*tmp745;
      const real_t tmp747 = tmp482*(tmp469 + tmp473 + tmp479);
      const real_t tmp748 = 0.0052886569726683132*tmp747;
      const real_t tmp749 = 2.7375616618121592*tmp51 + 2.7375616618121592*tmp55 + 2.7375616618121592*tmp61;
      const real_t tmp750 = 0.42641669024797446*tmp50 + 0.42641669024797446*tmp54 + 0.42641669024797446*tmp60;
      const real_t tmp751 = tmp76*(tmp749 + tmp750);
      const real_t tmp752 = 0.011829781572832234*tmp751;
      const real_t tmp753 = 0.2723974837528258*tmp106 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp116;
      const real_t tmp754 = 0.3256196736114374*tmp105 + 0.3256196736114374*tmp109 + 0.3256196736114374*tmp115;
      const real_t tmp755 = tmp118*(tmp753 + tmp754);
      const real_t tmp756 = 0.0061414854617707626*tmp755;
      const real_t tmp757 = 0.054242807519210512*tmp148 + 0.054242807519210512*tmp152 + 0.054242807519210512*tmp158;
      const real_t tmp758 = 0.69877623478892303*tmp147 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp157;
      const real_t tmp759 = tmp160*(tmp757 + tmp758);
      const real_t tmp760 = 0.0043612323249822204*tmp759;
      const real_t tmp761 = 1.2716142408535775*tmp190 + 1.2716142408535775*tmp194 + 1.2716142408535775*tmp200;
      const real_t tmp762 = 1.3169318389705873*tmp189 + 1.3169318389705873*tmp193 + 1.3169318389705873*tmp199;
      const real_t tmp763 = tmp202*(tmp761 + tmp762);
      const real_t tmp764 = 0.012248248047610821*tmp763;
      const real_t tmp765 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp236 + 1.4152929568371884*tmp242;
      const real_t tmp766 = 0.41537646564397157*tmp231 + 0.41537646564397157*tmp235 + 0.41537646564397157*tmp241;
      const real_t tmp767 = tmp244*(tmp765 + tmp766);
      const real_t tmp768 = 0.017219568446249611*tmp767;
      const real_t tmp769 = 0.50720690366156718*tmp274 + 0.50720690366156718*tmp278 + 0.50720690366156718*tmp284;
      const real_t tmp770 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp277 + 1.2177936097379878*tmp283;
      const real_t tmp771 = tmp286*(tmp769 + tmp770);
      const real_t tmp772 = 0.021490090227737114*tmp771;
      const real_t tmp773 = 1.3207616593498592*tmp311 + 1.3207616593498592*tmp314 + 1.3207616593498592*tmp319;
      const real_t tmp774 = 2.1520288156647434*tmp310 + 2.1520288156647434*tmp313 + 2.1520288156647434*tmp318;
      const real_t tmp775 = tmp321*(tmp773 + tmp774);
      const real_t tmp776 = 0.0084625239161731543*tmp775;
      const real_t tmp777 = 1.2259759537187613*tmp351 + 1.2259759537187613*tmp355 + 1.2259759537187613*tmp361;
      const real_t tmp778 = 0.035965040373342916*tmp350 + 0.035965040373342916*tmp354 + 0.035965040373342916*tmp360;
      const real_t tmp779 = tmp363*(tmp777 + tmp778);
      const real_t tmp780 = 0.0088251866742250357*tmp779;
      const real_t tmp781 = 0.23782646519773576*tmp388 + 0.23782646519773576*tmp391 + 0.23782646519773576*tmp396;
      const real_t tmp782 = 1.7318139619254227*tmp387 + 1.7318139619254227*tmp390 + 1.7318139619254227*tmp395;
      const real_t tmp783 = tmp398*(tmp781 + tmp782);
      const real_t tmp784 = 0.0077188851041817101*tmp783;
      const real_t tmp785 = 0.19112574223634571*tmp428 + 0.19112574223634571*tmp432 + 0.19112574223634571*tmp438;
      const real_t tmp786 = 0.21336495814298084*tmp427 + 0.21336495814298084*tmp431 + 0.21336495814298084*tmp437;
      const real_t tmp787 = tmp440*(tmp785 + tmp786);
      const real_t tmp788 = 0.006659242794062166*tmp787;
      const real_t tmp789 = 0.14073571909439453*tmp470 + 0.14073571909439453*tmp474 + 0.14073571909439453*tmp480;
      const real_t tmp790 = 2.9649155283744921*tmp469 + 2.9649155283744921*tmp473 + 2.9649155283744921*tmp479;
      const real_t tmp791 = tmp482*(tmp789 + tmp790);
      const real_t tmp792 = 0.0061548665412862651*tmp791;
      const real_t tmp793 = 2.7375616618121592*tmp56 + 2.7375616618121592*tmp57 + 2.7375616618121592*tmp62;
      const real_t tmp794 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp795 = tmp76*(tmp793 + tmp794);
      const real_t tmp796 = 0.011829781572832234*tmp795;
      const real_t tmp797 = 0.2723974837528258*tmp111 + 0.2723974837528258*tmp112 + 0.2723974837528258*tmp117;
      const real_t tmp798 = 3.0100340280386204*tmp105 + 3.0100340280386204*tmp109 + 3.0100340280386204*tmp115;
      const real_t tmp799 = tmp118*(tmp797 + tmp798);
      const real_t tmp800 = 0.0061414854617707626*tmp799;
      const real_t tmp801 = 0.054242807519210512*tmp153 + 0.054242807519210512*tmp154 + 0.054242807519210512*tmp159;
      const real_t tmp802 = 0.16196202691036121*tmp147 + 0.16196202691036121*tmp151 + 0.16196202691036121*tmp157;
      const real_t tmp803 = tmp160*(tmp801 + tmp802);
      const real_t tmp804 = 0.0043612323249822204*tmp803;
      const real_t tmp805 = 1.2716142408535775*tmp195 + 1.2716142408535775*tmp196 + 1.2716142408535775*tmp201;
      const real_t tmp806 = 0.11827798082591956*tmp189 + 0.11827798082591956*tmp193 + 0.11827798082591956*tmp199;
      const real_t tmp807 = tmp202*(tmp805 + tmp806);
      const real_t tmp808 = 0.012248248047610821*tmp807;
      const real_t tmp809 = 1.4152929568371884*tmp237 + 1.4152929568371884*tmp238 + 1.4152929568371884*tmp243;
      const real_t tmp810 = 1.730840956191074*tmp231 + 1.730840956191074*tmp235 + 1.730840956191074*tmp241;
      const real_t tmp811 = tmp244*(tmp809 + tmp810);
      const real_t tmp812 = 0.017219568446249611*tmp811;
      const real_t tmp813 = 0.50720690366156718*tmp279 + 0.50720690366156718*tmp280 + 0.50720690366156718*tmp285;
      const real_t tmp814 = 0.96110665971229103*tmp273 + 0.96110665971229103*tmp277 + 0.96110665971229103*tmp283;
      const real_t tmp815 = tmp286*(tmp813 + tmp814);
      const real_t tmp816 = 0.021490090227737114*tmp815;
      const real_t tmp817 = 1.3207616593498592*tmp315 + 1.3207616593498592*tmp316 + 1.3207616593498592*tmp320;
      const real_t tmp818 = 0.51764549515564062*tmp310 + 0.51764549515564062*tmp313 + 0.51764549515564062*tmp318;
      const real_t tmp819 = tmp321*(tmp817 + tmp818);
      const real_t tmp820 = 0.0084625239161731543*tmp819;
      const real_t tmp821 = 1.2259759537187613*tmp356 + 1.2259759537187613*tmp357 + 1.2259759537187613*tmp362;
      const real_t tmp822 = 0.48616796533571183*tmp350 + 0.48616796533571183*tmp354 + 0.48616796533571183*tmp360;
      const real_t tmp823 = tmp363*(tmp821 + tmp822);
      const real_t tmp824 = 0.0088251866742250357*tmp823;
      const real_t tmp825 = 0.23782646519773576*tmp392 + 0.23782646519773576*tmp393 + 0.23782646519773576*tmp397;
      const real_t tmp826 = 1.8030635043651069*tmp387 + 1.8030635043651069*tmp390 + 1.8030635043651069*tmp395;
      const real_t tmp827 = tmp398*(tmp825 + tmp826);
      const real_t tmp828 = 0.0077188851041817101*tmp827;
      const real_t tmp829 = 0.19112574223634571*tmp433 + 0.19112574223634571*tmp434 + 0.19112574223634571*tmp439;
      const real_t tmp830 = 1.6770652555180527*tmp427 + 1.6770652555180527*tmp431 + 1.6770652555180527*tmp437;
      const real_t tmp831 = tmp440*(tmp829 + tmp830);
      const real_t tmp832 = 0.006659242794062166*tmp831;
      const real_t tmp833 = 0.14073571909439453*tmp475 + 0.14073571909439453*tmp476 + 0.14073571909439453*tmp481;
      const real_t tmp834 = 0.2688931795735332*tmp469 + 0.2688931795735332*tmp473 + 0.2688931795735332*tmp479;
      const real_t tmp835 = tmp482*(tmp833 + tmp834);
      const real_t tmp836 = 0.0061548665412862651*tmp835;
      const real_t tmp837 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp57 + 0.42641669024797446*tmp62;
      const real_t tmp838 = 0.38881857835033307*tmp51 + 0.38881857835033307*tmp55 + 0.38881857835033307*tmp61;
      const real_t tmp839 = tmp76*(tmp837 + tmp838);
      const real_t tmp840 = 0.011829781572832234*tmp839;
      const real_t tmp841 = 0.3256196736114374*tmp111 + 0.3256196736114374*tmp112 + 0.3256196736114374*tmp117;
      const real_t tmp842 = 3.0100340280386204*tmp106 + 3.0100340280386204*tmp110 + 3.0100340280386204*tmp116;
      const real_t tmp843 = tmp118*(tmp841 + tmp842);
      const real_t tmp844 = 0.0061414854617707626*tmp843;
      const real_t tmp845 = 0.69877623478892303*tmp153 + 0.69877623478892303*tmp154 + 0.69877623478892303*tmp159;
      const real_t tmp846 = 0.16196202691036121*tmp148 + 0.16196202691036121*tmp152 + 0.16196202691036121*tmp158;
      const real_t tmp847 = tmp160*(tmp845 + tmp846);
      const real_t tmp848 = 0.0043612323249822204*tmp847;
      const real_t tmp849 = 1.3169318389705873*tmp195 + 1.3169318389705873*tmp196 + 1.3169318389705873*tmp201;
      const real_t tmp850 = 0.11827798082591956*tmp190 + 0.11827798082591956*tmp194 + 0.11827798082591956*tmp200;
      const real_t tmp851 = tmp202*(tmp849 + tmp850);
      const real_t tmp852 = 0.012248248047610821*tmp851;
      const real_t tmp853 = 0.41537646564397157*tmp237 + 0.41537646564397157*tmp238 + 0.41537646564397157*tmp243;
      const real_t tmp854 = 1.730840956191074*tmp232 + 1.730840956191074*tmp236 + 1.730840956191074*tmp242;
      const real_t tmp855 = tmp244*(tmp853 + tmp854);
      const real_t tmp856 = 0.017219568446249611*tmp855;
      const real_t tmp857 = 1.2177936097379878*tmp279 + 1.2177936097379878*tmp280 + 1.2177936097379878*tmp285;
      const real_t tmp858 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp278 + 0.96110665971229103*tmp284;
      const real_t tmp859 = tmp286*(tmp857 + tmp858);
      const real_t tmp860 = 0.021490090227737114*tmp859;
      const real_t tmp861 = 2.1520288156647434*tmp315 + 2.1520288156647434*tmp316 + 2.1520288156647434*tmp320;
      const real_t tmp862 = 0.51764549515564062*tmp311 + 0.51764549515564062*tmp314 + 0.51764549515564062*tmp319;
      const real_t tmp863 = tmp321*(tmp861 + tmp862);
      const real_t tmp864 = 0.0084625239161731543*tmp863;
      const real_t tmp865 = 0.035965040373342916*tmp356 + 0.035965040373342916*tmp357 + 0.035965040373342916*tmp362;
      const real_t tmp866 = 0.48616796533571183*tmp351 + 0.48616796533571183*tmp355 + 0.48616796533571183*tmp361;
      const real_t tmp867 = tmp363*(tmp865 + tmp866);
      const real_t tmp868 = 0.0088251866742250357*tmp867;
      const real_t tmp869 = 1.7318139619254227*tmp392 + 1.7318139619254227*tmp393 + 1.7318139619254227*tmp397;
      const real_t tmp870 = 1.8030635043651069*tmp388 + 1.8030635043651069*tmp391 + 1.8030635043651069*tmp396;
      const real_t tmp871 = tmp398*(tmp869 + tmp870);
      const real_t tmp872 = 0.0077188851041817101*tmp871;
      const real_t tmp873 = 0.21336495814298084*tmp433 + 0.21336495814298084*tmp434 + 0.21336495814298084*tmp439;
      const real_t tmp874 = 1.6770652555180527*tmp428 + 1.6770652555180527*tmp432 + 1.6770652555180527*tmp438;
      const real_t tmp875 = tmp440*(tmp873 + tmp874);
      const real_t tmp876 = 0.006659242794062166*tmp875;
      const real_t tmp877 = 2.9649155283744921*tmp475 + 2.9649155283744921*tmp476 + 2.9649155283744921*tmp481;
      const real_t tmp878 = 0.2688931795735332*tmp470 + 0.2688931795735332*tmp474 + 0.2688931795735332*tmp480;
      const real_t tmp879 = tmp482*(tmp877 + tmp878);
      const real_t tmp880 = 0.0061548665412862651*tmp879;
      const real_t tmp881 = tmp76*(-2.2903585922226259*tmp50 - 2.2903585922226259*tmp54 - 2.2903585922226259*tmp60 - tmp749 - tmp793);
      const real_t tmp882 = 0.011829781572832234*tmp881;
      const real_t tmp883 = tmp118*(0.11955133084429059*tmp103*tmp18*tmp6*tmp86 + 0.11955133084429059*tmp107*tmp18*tmp29*tmp86 + 0.11955133084429059*tmp113*tmp18*tmp39*tmp86 - tmp753 - tmp797);
      const real_t tmp884 = 0.0061414854617707626*tmp883;
      const real_t tmp885 = tmp160*(3.030776123262295*tmp128*tmp145*tmp18*tmp6 + 3.030776123262295*tmp128*tmp149*tmp18*tmp29 + 3.030776123262295*tmp128*tmp155*tmp18*tmp39 - tmp757 - tmp801);
      const real_t tmp886 = 0.0043612323249822204*tmp885;
      const real_t tmp887 = tmp202*(0.021561698496338266*tmp170*tmp18*tmp187*tmp6 + 0.021561698496338266*tmp170*tmp18*tmp191*tmp29 + 0.021561698496338266*tmp170*tmp18*tmp197*tmp39 - tmp761 - tmp805);
      const real_t tmp888 = 0.012248248047610821*tmp887;
      const real_t tmp889 = tmp244*(-0.97680333550942233*tmp231 - 0.97680333550942233*tmp235 - 0.97680333550942233*tmp241 - tmp765 - tmp809);
      const real_t tmp890 = 0.017219568446249611*tmp889;
      const real_t tmp891 = tmp286*(0.80668592322658683*tmp18*tmp254*tmp271*tmp6 + 0.80668592322658683*tmp18*tmp254*tmp275*tmp29 + 0.80668592322658683*tmp18*tmp254*tmp281*tmp39 - tmp769 - tmp813);
      const real_t tmp892 = 0.021490090227737114*tmp891;
      const real_t tmp893 = tmp321*(-1.3111976295201027*tmp310 - 1.3111976295201027*tmp313 - 1.3111976295201027*tmp318 - tmp773 - tmp817);
      const real_t tmp894 = 0.0084625239161731543*tmp893;
      const real_t tmp895 = tmp363*(1.0259150868534226*tmp18*tmp29*tmp331*tmp352 + 1.0259150868534226*tmp18*tmp331*tmp348*tmp6 + 1.0259150868534226*tmp18*tmp331*tmp358*tmp39 - tmp777 - tmp821);
      const real_t tmp896 = 0.0088251866742250357*tmp895;
      const real_t tmp897 = tmp398*(-0.010530396686001087*tmp387 - 0.010530396686001087*tmp390 - 0.010530396686001087*tmp395 - tmp781 - tmp825);
      const real_t tmp898 = 0.0077188851041817101*tmp897;
      const real_t tmp899 = tmp440*(1.727318301866275*tmp18*tmp29*tmp408*tmp429 + 1.727318301866275*tmp18*tmp39*tmp408*tmp435 + 1.727318301866275*tmp18*tmp408*tmp425*tmp6 - tmp785 - tmp829);
      const real_t tmp900 = 0.006659242794062166*tmp899;
      const real_t tmp901 = tmp482*(0.48471985386318561*tmp18*tmp29*tmp450*tmp471 + 0.48471985386318561*tmp18*tmp39*tmp450*tmp477 + 0.48471985386318561*tmp18*tmp450*tmp467*tmp6 - tmp789 - tmp833);
      const real_t tmp902 = 0.0061548665412862651*tmp901;
      const real_t tmp903 = tmp76*(0.020786379341558803*tmp18*tmp23*tmp27*tmp48 + 0.020786379341558803*tmp18*tmp23*tmp33*tmp52 + 0.020786379341558803*tmp18*tmp23*tmp43*tmp58 - tmp750 - tmp837);
      const real_t tmp904 = 0.011829781572832234*tmp903;
      const real_t tmp905 = tmp118*(0.066329140985678992*tmp103*tmp18*tmp27*tmp86 + 0.066329140985678992*tmp107*tmp18*tmp33*tmp86 + 0.066329140985678992*tmp113*tmp18*tmp43*tmp86 - tmp754 - tmp841);
      const real_t tmp906 = 0.0061414854617707626*tmp905;
      const real_t tmp907 = tmp160*(2.3862426959925824*tmp128*tmp145*tmp18*tmp27 + 2.3862426959925824*tmp128*tmp149*tmp18*tmp33 + 2.3862426959925824*tmp128*tmp155*tmp18*tmp43 - tmp758 - tmp845);
      const real_t tmp908 = 0.0043612323249822204*tmp907;
      const real_t tmp909 = tmp202*(-0.023755899620671705*tmp190 - 0.023755899620671705*tmp194 - 0.023755899620671705*tmp200 - tmp762 - tmp849);
      const real_t tmp910 = 0.012248248047610821*tmp909;
      const real_t tmp911 = tmp244*(0.023113155683794462*tmp18*tmp212*tmp229*tmp27 + 0.023113155683794462*tmp18*tmp212*tmp233*tmp33 + 0.023113155683794462*tmp18*tmp212*tmp239*tmp43 - tmp766 - tmp853);
      const real_t tmp912 = 0.017219568446249611*tmp911;
      const real_t tmp913 = tmp286*(0.096099217150166227*tmp18*tmp254*tmp27*tmp271 + 0.096099217150166227*tmp18*tmp254*tmp275*tmp33 + 0.096099217150166227*tmp18*tmp254*tmp281*tmp43 - tmp770 - tmp857);
      const real_t tmp914 = 0.021490090227737114*tmp913;
      const real_t tmp915 = tmp321*(-2.1424647858349868*tmp311 - 2.1424647858349868*tmp314 - 2.1424647858349868*tmp319 - tmp774 - tmp861);
      const real_t tmp916 = 0.0084625239161731543*tmp915;
      const real_t tmp917 = tmp363*(2.215926000198841*tmp18*tmp27*tmp331*tmp348 + 2.215926000198841*tmp18*tmp33*tmp331*tmp352 + 2.215926000198841*tmp18*tmp331*tmp358*tmp43 - tmp778 - tmp865);
      const real_t tmp918 = 0.0088251866742250357*tmp917;
      const real_t tmp919 = tmp398*(-1.504517893413688*tmp388 - 1.504517893413688*tmp391 - 1.504517893413688*tmp396 - tmp782 - tmp869);
      const real_t tmp920 = 0.0077188851041817101*tmp919;
      const real_t tmp921 = tmp440*(1.7050790859596399*tmp18*tmp27*tmp408*tmp425 + 1.7050790859596399*tmp18*tmp33*tmp408*tmp429 + 1.7050790859596399*tmp18*tmp408*tmp43*tmp435 - tmp786 - tmp873);
      const real_t tmp922 = 0.006659242794062166*tmp921;
      const real_t tmp923 = tmp482*(-2.339459955416912*tmp470 - 2.339459955416912*tmp474 - 2.339459955416912*tmp480 - tmp790 - tmp877);
      const real_t tmp924 = 0.0061548665412862651*tmp923;
      const real_t tmp925 = tmp76*(0.058384491239200198*tmp18*tmp23*tmp35*tmp48 + 0.058384491239200198*tmp18*tmp23*tmp37*tmp52 + 0.058384491239200198*tmp18*tmp23*tmp45*tmp58 - tmp794 - tmp838);
      const real_t tmp926 = 0.011829781572832234*tmp925;
      const real_t tmp927 = tmp118*(-2.6180852134415042*tmp111 - 2.6180852134415042*tmp112 - 2.6180852134415042*tmp117 - tmp798 - tmp842);
      const real_t tmp928 = 0.0061414854617707626*tmp927;
      const real_t tmp929 = tmp160*(2.923056903871144*tmp128*tmp145*tmp18*tmp35 + 2.923056903871144*tmp128*tmp149*tmp18*tmp37 + 2.923056903871144*tmp128*tmp155*tmp18*tmp45 - tmp802 - tmp846);
      const real_t tmp930 = 0.0043612323249822204*tmp929;
      const real_t tmp931 = tmp202*(1.1748979585239958*tmp170*tmp18*tmp187*tmp35 + 1.1748979585239958*tmp170*tmp18*tmp191*tmp37 + 1.1748979585239958*tmp170*tmp18*tmp197*tmp45 - tmp806 - tmp850);
      const real_t tmp932 = 0.012248248047610821*tmp931;
      const real_t tmp933 = tmp244*(-1.292351334863308*tmp237 - 1.292351334863308*tmp238 - 1.292351334863308*tmp243 - tmp810 - tmp854);
      const real_t tmp934 = 0.017219568446249611*tmp933;
      const real_t tmp935 = tmp286*(0.35278616717586297*tmp18*tmp254*tmp271*tmp35 + 0.35278616717586297*tmp18*tmp254*tmp275*tmp37 + 0.35278616717586297*tmp18*tmp254*tmp281*tmp45 - tmp814 - tmp858);
      const real_t tmp936 = 0.021490090227737114*tmp935;
      const real_t tmp937 = tmp321*(-0.50808146532588383*tmp315 - 0.50808146532588383*tmp316 - 0.50808146532588383*tmp320 - tmp818 - tmp862);
      const real_t tmp938 = 0.0084625239161731543*tmp937;
      const real_t tmp939 = tmp363*(1.7657230752364721*tmp18*tmp331*tmp348*tmp35 + 1.7657230752364721*tmp18*tmp331*tmp352*tmp37 + 1.7657230752364721*tmp18*tmp331*tmp358*tmp45 - tmp822 - tmp866);
      const real_t tmp940 = 0.0088251866742250357*tmp939;
      const real_t tmp941 = tmp398*(-1.5757674358533722*tmp392 - 1.5757674358533722*tmp393 - 1.5757674358533722*tmp397 - tmp826 - tmp870);
      const real_t tmp942 = 0.0077188851041817101*tmp941;
      const real_t tmp943 = tmp440*(0.24137878858456796*tmp18*tmp35*tmp408*tmp425 + 0.24137878858456796*tmp18*tmp37*tmp408*tmp429 + 0.24137878858456796*tmp18*tmp408*tmp435*tmp45 - tmp830 - tmp874);
      const real_t tmp944 = 0.006659242794062166*tmp943;
      const real_t tmp945 = tmp482*(0.35656239338404694*tmp18*tmp35*tmp450*tmp467 + 0.35656239338404694*tmp18*tmp37*tmp450*tmp471 + 0.35656239338404694*tmp18*tmp45*tmp450*tmp477 - tmp834 - tmp878);
      const real_t tmp946 = 0.0061548665412862651*tmp945;
      elMat(0,0) = -tmp102*tmp120 - tmp144*tmp162 - tmp186*tmp204 - tmp228*tmp246 - tmp270*tmp288 - tmp308*tmp323 - tmp347*tmp365 - tmp385*tmp400 - tmp424*tmp442 - tmp466*tmp484 - tmp47*tmp78;
      elMat(0,1) = -tmp119*tmp488 + tmp161*tmp490 + tmp203*tmp492 - tmp245*tmp494 + tmp287*tmp496 + tmp322*tmp498 + tmp364*tmp500 - tmp399*tmp502 - tmp441*tmp504 + tmp483*tmp506 + tmp486*tmp77;
      elMat(0,2) = tmp119*tmp510 + tmp161*tmp512 - tmp203*tmp514 + tmp245*tmp516 - tmp287*tmp518 - tmp322*tmp520 + tmp364*tmp522 - tmp399*tmp524 + tmp441*tmp526 - tmp483*tmp528 + tmp508*tmp77;
      elMat(0,3) = tmp119*tmp532 + tmp161*tmp534 - tmp203*tmp536 - tmp245*tmp538 + tmp287*tmp540 - tmp322*tmp542 - tmp364*tmp544 + tmp399*tmp546 + tmp441*tmp548 + tmp483*tmp550 - tmp530*tmp77;
      elMat(0,4) = -tmp120*tmp556 - tmp162*tmp559 - tmp204*tmp562 - tmp246*tmp565 - tmp288*tmp568 - tmp323*tmp571 - tmp365*tmp574 - tmp400*tmp577 - tmp442*tmp580 - tmp484*tmp583 - tmp553*tmp78;
      elMat(0,5) = -tmp120*tmp589 - tmp162*tmp592 - tmp204*tmp595 - tmp246*tmp598 - tmp288*tmp601 - tmp323*tmp604 - tmp365*tmp607 - tmp400*tmp610 - tmp442*tmp613 - tmp484*tmp616 - tmp586*tmp78;
      elMat(0,6) = -tmp120*tmp622 - tmp162*tmp625 - tmp204*tmp628 - tmp246*tmp631 - tmp288*tmp634 - tmp323*tmp637 - tmp365*tmp640 - tmp400*tmp643 - tmp442*tmp646 - tmp484*tmp649 - tmp619*tmp78;
      elMat(0,7) = -tmp120*tmp651 - tmp162*tmp652 - tmp204*tmp653 - tmp246*tmp654 - tmp288*tmp655 - tmp323*tmp656 - tmp365*tmp657 - tmp400*tmp658 - tmp442*tmp659 - tmp484*tmp660 - tmp650*tmp78;
      elMat(0,8) = -tmp120*tmp662 - tmp162*tmp663 - tmp204*tmp664 - tmp246*tmp665 - tmp288*tmp666 - tmp323*tmp667 - tmp365*tmp668 - tmp400*tmp669 - tmp442*tmp670 - tmp484*tmp671 - tmp661*tmp78;
      elMat(0,9) = -tmp120*tmp673 - tmp162*tmp674 - tmp204*tmp675 - tmp246*tmp676 - tmp288*tmp677 - tmp323*tmp678 - tmp365*tmp679 - tmp400*tmp680 - tmp442*tmp681 - tmp484*tmp682 - tmp672*tmp78;
      elMat(1,0) = -tmp102*tmp686 + tmp144*tmp688 + tmp186*tmp690 - tmp228*tmp692 + tmp270*tmp694 + tmp308*tmp696 + tmp347*tmp698 - tmp385*tmp700 - tmp424*tmp702 + tmp466*tmp704 + tmp47*tmp684;
      elMat(1,1) = -0.0044189289060270545*tmp485*tmp683 - 0.024813055531683337*tmp487*tmp685 - 0.0030629268005785541*tmp489*tmp687 - 0.0095222010320695129*tmp491*tmp689 - 0.0091974623207422349*tmp493*tmp691 - 3.2507885820395218e-5*tmp495*tmp693 - 0.0019689404753353082*tmp497*tmp695 - 0.0023300554370080033*tmp499*tmp697 - 0.0049779938500050438*tmp501*tmp699 - 0.0030527125027828036*tmp503*tmp701 - 0.0032898819246143778*tmp505*tmp703;
      elMat(1,2) = -0.0041470891910238041*tmp507*tmp683 + 0.008324951843965811*tmp509*tmp685 - 0.001100936202251903*tmp511*tmp687 + 0.0034227212415181688*tmp513*tmp689 + 0.0073573503010591077*tmp515*tmp691 + 0.00018203655806882805*tmp517*tmp693 + 0.0047025085100984255*tmp519*tmp695 - 0.00437157426475263*tmp521*tmp697 - 0.0045363353981484533*tmp523*tmp699 + 0.0035467343920440879*tmp525*tmp701 + 0.0088418544316446034*tmp527*tmp703;
      elMat(1,3) = 0.012562818798813762*tmp529*tmp683 + 0.00898195821005612*tmp531*tmp685 - 0.003456627437787347*tmp533*tmp687 + 0.0029333115747788548*tmp535*tmp689 - 0.0052263646286142846*tmp537*tmp691 - 0.00041188701176975823*tmp539*tmp693 + 0.0013093287357882949*tmp541*tmp695 + 0.0010247249374778298*tmp543*tmp697 + 0.0047245269499351069*tmp545*tmp699 + 0.0036470052771574082*tmp547*tmp701 - 0.0038665731836137946*tmp549*tmp703;
      elMat(1,4) = tmp553*tmp684 - tmp556*tmp686 + tmp559*tmp688 + tmp562*tmp690 - tmp565*tmp692 + tmp568*tmp694 + tmp571*tmp696 + tmp574*tmp698 - tmp577*tmp700 - tmp580*tmp702 + tmp583*tmp704;
      elMat(1,5) = tmp586*tmp684 - tmp589*tmp686 + tmp592*tmp688 + tmp595*tmp690 - tmp598*tmp692 + tmp601*tmp694 + tmp604*tmp696 + tmp607*tmp698 - tmp610*tmp700 - tmp613*tmp702 + tmp616*tmp704;
      elMat(1,6) = tmp619*tmp684 - tmp622*tmp686 + tmp625*tmp688 + tmp628*tmp690 - tmp631*tmp692 + tmp634*tmp694 + tmp637*tmp696 + tmp640*tmp698 - tmp643*tmp700 - tmp646*tmp702 + tmp649*tmp704;
      elMat(1,7) = tmp650*tmp684 - tmp651*tmp686 + tmp652*tmp688 + tmp653*tmp690 - tmp654*tmp692 + tmp655*tmp694 + tmp656*tmp696 + tmp657*tmp698 - tmp658*tmp700 - tmp659*tmp702 + tmp660*tmp704;
      elMat(1,8) = tmp661*tmp684 - tmp662*tmp686 + tmp663*tmp688 + tmp664*tmp690 - tmp665*tmp692 + tmp666*tmp694 + tmp667*tmp696 + tmp668*tmp698 - tmp669*tmp700 - tmp670*tmp702 + tmp671*tmp704;
      elMat(1,9) = tmp672*tmp684 - tmp673*tmp686 + tmp674*tmp688 + tmp675*tmp690 - tmp676*tmp692 + tmp677*tmp694 + tmp678*tmp696 + tmp679*tmp698 - tmp680*tmp700 - tmp681*tmp702 + tmp682*tmp704;
      elMat(2,0) = tmp102*tmp708 + tmp144*tmp710 - tmp186*tmp712 + tmp228*tmp714 - tmp270*tmp716 - tmp308*tmp718 + tmp347*tmp720 - tmp385*tmp722 + tmp424*tmp724 - tmp466*tmp726 + tmp47*tmp706;
      elMat(2,1) = -0.0041470891910238041*tmp485*tmp705 + 0.008324951843965811*tmp487*tmp707 - 0.001100936202251903*tmp489*tmp709 + 0.0034227212415181688*tmp491*tmp711 + 0.0073573503010591077*tmp493*tmp713 + 0.00018203655806882805*tmp495*tmp715 + 0.0047025085100984255*tmp497*tmp717 - 0.00437157426475263*tmp499*tmp719 - 0.0045363353981484533*tmp501*tmp721 + 0.0035467343920440879*tmp503*tmp723 + 0.0088418544316446034*tmp505*tmp725;
      elMat(2,2) = -0.0038919722684040777*tmp507*tmp705 - 0.0027930789545792005*tmp509*tmp707 - 0.00039571971527360629*tmp511*tmp709 - 0.001230284958034916*tmp513*tmp711 - 0.0058853846381537785*tmp515*tmp713 - 0.0010193621528212606*tmp517*tmp715 - 0.011231211184168578*tmp519*tmp717 - 0.0082018055230425203*tmp521*tmp719 - 0.0041338618456657665*tmp523*tmp721 - 0.0041207040742425758*tmp525*tmp723 - 0.023763281352280435*tmp527*tmp725;
      elMat(2,3) = 0.011789990551396352*tmp529*tmp705 - 0.003013509137065063*tmp531*tmp707 - 0.0012424476756148744*tmp533*tmp709 - 0.0010543683966735859*tmp535*tmp711 + 0.0041807396467460484*tmp537*tmp713 + 0.0023064709390845928*tmp539*tmp715 - 0.0031271283208865507*tmp541*tmp717 + 0.0019225556156211496*tmp543*tmp719 + 0.0043053566332700976*tmp545*tmp721 - 0.0042372018434979264*tmp547*tmp723 + 0.010391764209842001*tmp549*tmp725;
      elMat(2,4) = tmp553*tmp706 + tmp556*tmp708 + tmp559*tmp710 - tmp562*tmp712 + tmp565*tmp714 - tmp568*tmp716 - tmp571*tmp718 + tmp574*tmp720 - tmp577*tmp722 + tmp580*tmp724 - tmp583*tmp726;
      elMat(2,5) = tmp586*tmp706 + tmp589*tmp708 + tmp592*tmp710 - tmp595*tmp712 + tmp598*tmp714 - tmp601*tmp716 - tmp604*tmp718 + tmp607*tmp720 - tmp610*tmp722 + tmp613*tmp724 - tmp616*tmp726;
      elMat(2,6) = tmp619*tmp706 + tmp622*tmp708 + tmp625*tmp710 - tmp628*tmp712 + tmp631*tmp714 - tmp634*tmp716 - tmp637*tmp718 + tmp640*tmp720 - tmp643*tmp722 + tmp646*tmp724 - tmp649*tmp726;
      elMat(2,7) = tmp650*tmp706 + tmp651*tmp708 + tmp652*tmp710 - tmp653*tmp712 + tmp654*tmp714 - tmp655*tmp716 - tmp656*tmp718 + tmp657*tmp720 - tmp658*tmp722 + tmp659*tmp724 - tmp660*tmp726;
      elMat(2,8) = tmp661*tmp706 + tmp662*tmp708 + tmp663*tmp710 - tmp664*tmp712 + tmp665*tmp714 - tmp666*tmp716 - tmp667*tmp718 + tmp668*tmp720 - tmp669*tmp722 + tmp670*tmp724 - tmp671*tmp726;
      elMat(2,9) = tmp672*tmp706 + tmp673*tmp708 + tmp674*tmp710 - tmp675*tmp712 + tmp676*tmp714 - tmp677*tmp716 - tmp678*tmp718 + tmp679*tmp720 - tmp680*tmp722 + tmp681*tmp724 - tmp682*tmp726;
      elMat(3,0) = tmp102*tmp730 + tmp144*tmp732 - tmp186*tmp734 - tmp228*tmp736 + tmp270*tmp738 - tmp308*tmp740 - tmp347*tmp742 + tmp385*tmp744 + tmp424*tmp746 + tmp466*tmp748 - tmp47*tmp728;
      elMat(3,1) = 0.012562818798813762*tmp485*tmp727 + 0.00898195821005612*tmp487*tmp729 - 0.003456627437787347*tmp489*tmp731 + 0.0029333115747788548*tmp491*tmp733 - 0.0052263646286142846*tmp493*tmp735 - 0.00041188701176975823*tmp495*tmp737 + 0.0013093287357882949*tmp497*tmp739 + 0.0010247249374778298*tmp499*tmp741 + 0.0047245269499351069*tmp501*tmp743 + 0.0036470052771574082*tmp503*tmp745 - 0.0038665731836137946*tmp505*tmp747;
      elMat(3,2) = 0.011789990551396352*tmp507*tmp727 - 0.003013509137065063*tmp509*tmp729 - 0.0012424476756148744*tmp511*tmp731 - 0.0010543683966735859*tmp513*tmp733 + 0.0041807396467460484*tmp515*tmp735 + 0.0023064709390845928*tmp517*tmp737 - 0.0031271283208865507*tmp519*tmp739 + 0.0019225556156211496*tmp521*tmp741 + 0.0043053566332700976*tmp523*tmp743 - 0.0042372018434979264*tmp525*tmp745 + 0.010391764209842001*tmp527*tmp747;
      elMat(3,3) = -0.035715536395385078*tmp529*tmp727 - 0.0032513357004413015*tmp531*tmp729 - 0.0039009333299794896*tmp533*tmp731 - 0.00090360587491835199*tmp535*tmp733 - 0.0029698286634596638*tmp537*tmp735 - 0.0052187617306746906*tmp539*tmp737 - 0.00087069251703458632*tmp541*tmp739 - 0.00045065931943546946*tmp543*tmp741 - 0.0044839659455667077*tmp545*tmp743 - 0.0043569931591950859*tmp547*tmp745 - 0.0045443540305762555*tmp549*tmp747;
      elMat(3,4) = -tmp553*tmp728 + tmp556*tmp730 + tmp559*tmp732 - tmp562*tmp734 - tmp565*tmp736 + tmp568*tmp738 - tmp571*tmp740 - tmp574*tmp742 + tmp577*tmp744 + tmp580*tmp746 + tmp583*tmp748;
      elMat(3,5) = -tmp586*tmp728 + tmp589*tmp730 + tmp592*tmp732 - tmp595*tmp734 - tmp598*tmp736 + tmp601*tmp738 - tmp604*tmp740 - tmp607*tmp742 + tmp610*tmp744 + tmp613*tmp746 + tmp616*tmp748;
      elMat(3,6) = -tmp619*tmp728 + tmp622*tmp730 + tmp625*tmp732 - tmp628*tmp734 - tmp631*tmp736 + tmp634*tmp738 - tmp637*tmp740 - tmp640*tmp742 + tmp643*tmp744 + tmp646*tmp746 + tmp649*tmp748;
      elMat(3,7) = -tmp650*tmp728 + tmp651*tmp730 + tmp652*tmp732 - tmp653*tmp734 - tmp654*tmp736 + tmp655*tmp738 - tmp656*tmp740 - tmp657*tmp742 + tmp658*tmp744 + tmp659*tmp746 + tmp660*tmp748;
      elMat(3,8) = -tmp661*tmp728 + tmp662*tmp730 + tmp663*tmp732 - tmp664*tmp734 - tmp665*tmp736 + tmp666*tmp738 - tmp667*tmp740 - tmp668*tmp742 + tmp669*tmp744 + tmp670*tmp746 + tmp671*tmp748;
      elMat(3,9) = -tmp672*tmp728 + tmp673*tmp730 + tmp674*tmp732 - tmp675*tmp734 - tmp676*tmp736 + tmp677*tmp738 - tmp678*tmp740 - tmp679*tmp742 + tmp680*tmp744 + tmp681*tmp746 + tmp682*tmp748;
      elMat(4,0) = -tmp102*tmp756 - tmp144*tmp760 - tmp186*tmp764 - tmp228*tmp768 - tmp270*tmp772 - tmp308*tmp776 - tmp347*tmp780 - tmp385*tmp784 - tmp424*tmp788 - tmp466*tmp792 - tmp47*tmp752;
      elMat(4,1) = tmp486*tmp751 - tmp488*tmp755 + tmp490*tmp759 + tmp492*tmp763 - tmp494*tmp767 + tmp496*tmp771 + tmp498*tmp775 + tmp500*tmp779 - tmp502*tmp783 - tmp504*tmp787 + tmp506*tmp791;
      elMat(4,2) = tmp508*tmp751 + tmp510*tmp755 + tmp512*tmp759 - tmp514*tmp763 + tmp516*tmp767 - tmp518*tmp771 - tmp520*tmp775 + tmp522*tmp779 - tmp524*tmp783 + tmp526*tmp787 - tmp528*tmp791;
      elMat(4,3) = -tmp530*tmp751 + tmp532*tmp755 + tmp534*tmp759 - tmp536*tmp763 - tmp538*tmp767 + tmp540*tmp771 - tmp542*tmp775 - tmp544*tmp779 + tmp546*tmp783 + tmp548*tmp787 + tmp550*tmp791;
      elMat(4,4) = -tmp553*tmp752 - tmp556*tmp756 - tmp559*tmp760 - tmp562*tmp764 - tmp565*tmp768 - tmp568*tmp772 - tmp571*tmp776 - tmp574*tmp780 - tmp577*tmp784 - tmp580*tmp788 - tmp583*tmp792;
      elMat(4,5) = -tmp586*tmp752 - tmp589*tmp756 - tmp592*tmp760 - tmp595*tmp764 - tmp598*tmp768 - tmp601*tmp772 - tmp604*tmp776 - tmp607*tmp780 - tmp610*tmp784 - tmp613*tmp788 - tmp616*tmp792;
      elMat(4,6) = -tmp619*tmp752 - tmp622*tmp756 - tmp625*tmp760 - tmp628*tmp764 - tmp631*tmp768 - tmp634*tmp772 - tmp637*tmp776 - tmp640*tmp780 - tmp643*tmp784 - tmp646*tmp788 - tmp649*tmp792;
      elMat(4,7) = -tmp650*tmp752 - tmp651*tmp756 - tmp652*tmp760 - tmp653*tmp764 - tmp654*tmp768 - tmp655*tmp772 - tmp656*tmp776 - tmp657*tmp780 - tmp658*tmp784 - tmp659*tmp788 - tmp660*tmp792;
      elMat(4,8) = -tmp661*tmp752 - tmp662*tmp756 - tmp663*tmp760 - tmp664*tmp764 - tmp665*tmp768 - tmp666*tmp772 - tmp667*tmp776 - tmp668*tmp780 - tmp669*tmp784 - tmp670*tmp788 - tmp671*tmp792;
      elMat(4,9) = -tmp672*tmp752 - tmp673*tmp756 - tmp674*tmp760 - tmp675*tmp764 - tmp676*tmp768 - tmp677*tmp772 - tmp678*tmp776 - tmp679*tmp780 - tmp680*tmp784 - tmp681*tmp788 - tmp682*tmp792;
      elMat(5,0) = -tmp102*tmp800 - tmp144*tmp804 - tmp186*tmp808 - tmp228*tmp812 - tmp270*tmp816 - tmp308*tmp820 - tmp347*tmp824 - tmp385*tmp828 - tmp424*tmp832 - tmp466*tmp836 - tmp47*tmp796;
      elMat(5,1) = tmp486*tmp795 - tmp488*tmp799 + tmp490*tmp803 + tmp492*tmp807 - tmp494*tmp811 + tmp496*tmp815 + tmp498*tmp819 + tmp500*tmp823 - tmp502*tmp827 - tmp504*tmp831 + tmp506*tmp835;
      elMat(5,2) = tmp508*tmp795 + tmp510*tmp799 + tmp512*tmp803 - tmp514*tmp807 + tmp516*tmp811 - tmp518*tmp815 - tmp520*tmp819 + tmp522*tmp823 - tmp524*tmp827 + tmp526*tmp831 - tmp528*tmp835;
      elMat(5,3) = -tmp530*tmp795 + tmp532*tmp799 + tmp534*tmp803 - tmp536*tmp807 - tmp538*tmp811 + tmp540*tmp815 - tmp542*tmp819 - tmp544*tmp823 + tmp546*tmp827 + tmp548*tmp831 + tmp550*tmp835;
      elMat(5,4) = -tmp553*tmp796 - tmp556*tmp800 - tmp559*tmp804 - tmp562*tmp808 - tmp565*tmp812 - tmp568*tmp816 - tmp571*tmp820 - tmp574*tmp824 - tmp577*tmp828 - tmp580*tmp832 - tmp583*tmp836;
      elMat(5,5) = -tmp586*tmp796 - tmp589*tmp800 - tmp592*tmp804 - tmp595*tmp808 - tmp598*tmp812 - tmp601*tmp816 - tmp604*tmp820 - tmp607*tmp824 - tmp610*tmp828 - tmp613*tmp832 - tmp616*tmp836;
      elMat(5,6) = -tmp619*tmp796 - tmp622*tmp800 - tmp625*tmp804 - tmp628*tmp808 - tmp631*tmp812 - tmp634*tmp816 - tmp637*tmp820 - tmp640*tmp824 - tmp643*tmp828 - tmp646*tmp832 - tmp649*tmp836;
      elMat(5,7) = -tmp650*tmp796 - tmp651*tmp800 - tmp652*tmp804 - tmp653*tmp808 - tmp654*tmp812 - tmp655*tmp816 - tmp656*tmp820 - tmp657*tmp824 - tmp658*tmp828 - tmp659*tmp832 - tmp660*tmp836;
      elMat(5,8) = -tmp661*tmp796 - tmp662*tmp800 - tmp663*tmp804 - tmp664*tmp808 - tmp665*tmp812 - tmp666*tmp816 - tmp667*tmp820 - tmp668*tmp824 - tmp669*tmp828 - tmp670*tmp832 - tmp671*tmp836;
      elMat(5,9) = -tmp672*tmp796 - tmp673*tmp800 - tmp674*tmp804 - tmp675*tmp808 - tmp676*tmp812 - tmp677*tmp816 - tmp678*tmp820 - tmp679*tmp824 - tmp680*tmp828 - tmp681*tmp832 - tmp682*tmp836;
      elMat(6,0) = -tmp102*tmp844 - tmp144*tmp848 - tmp186*tmp852 - tmp228*tmp856 - tmp270*tmp860 - tmp308*tmp864 - tmp347*tmp868 - tmp385*tmp872 - tmp424*tmp876 - tmp466*tmp880 - tmp47*tmp840;
      elMat(6,1) = tmp486*tmp839 - tmp488*tmp843 + tmp490*tmp847 + tmp492*tmp851 - tmp494*tmp855 + tmp496*tmp859 + tmp498*tmp863 + tmp500*tmp867 - tmp502*tmp871 - tmp504*tmp875 + tmp506*tmp879;
      elMat(6,2) = tmp508*tmp839 + tmp510*tmp843 + tmp512*tmp847 - tmp514*tmp851 + tmp516*tmp855 - tmp518*tmp859 - tmp520*tmp863 + tmp522*tmp867 - tmp524*tmp871 + tmp526*tmp875 - tmp528*tmp879;
      elMat(6,3) = -tmp530*tmp839 + tmp532*tmp843 + tmp534*tmp847 - tmp536*tmp851 - tmp538*tmp855 + tmp540*tmp859 - tmp542*tmp863 - tmp544*tmp867 + tmp546*tmp871 + tmp548*tmp875 + tmp550*tmp879;
      elMat(6,4) = -tmp553*tmp840 - tmp556*tmp844 - tmp559*tmp848 - tmp562*tmp852 - tmp565*tmp856 - tmp568*tmp860 - tmp571*tmp864 - tmp574*tmp868 - tmp577*tmp872 - tmp580*tmp876 - tmp583*tmp880;
      elMat(6,5) = -tmp586*tmp840 - tmp589*tmp844 - tmp592*tmp848 - tmp595*tmp852 - tmp598*tmp856 - tmp601*tmp860 - tmp604*tmp864 - tmp607*tmp868 - tmp610*tmp872 - tmp613*tmp876 - tmp616*tmp880;
      elMat(6,6) = -tmp619*tmp840 - tmp622*tmp844 - tmp625*tmp848 - tmp628*tmp852 - tmp631*tmp856 - tmp634*tmp860 - tmp637*tmp864 - tmp640*tmp868 - tmp643*tmp872 - tmp646*tmp876 - tmp649*tmp880;
      elMat(6,7) = -tmp650*tmp840 - tmp651*tmp844 - tmp652*tmp848 - tmp653*tmp852 - tmp654*tmp856 - tmp655*tmp860 - tmp656*tmp864 - tmp657*tmp868 - tmp658*tmp872 - tmp659*tmp876 - tmp660*tmp880;
      elMat(6,8) = -tmp661*tmp840 - tmp662*tmp844 - tmp663*tmp848 - tmp664*tmp852 - tmp665*tmp856 - tmp666*tmp860 - tmp667*tmp864 - tmp668*tmp868 - tmp669*tmp872 - tmp670*tmp876 - tmp671*tmp880;
      elMat(6,9) = -tmp672*tmp840 - tmp673*tmp844 - tmp674*tmp848 - tmp675*tmp852 - tmp676*tmp856 - tmp677*tmp860 - tmp678*tmp864 - tmp679*tmp868 - tmp680*tmp872 - tmp681*tmp876 - tmp682*tmp880;
      elMat(7,0) = -tmp102*tmp884 - tmp144*tmp886 - tmp186*tmp888 - tmp228*tmp890 - tmp270*tmp892 - tmp308*tmp894 - tmp347*tmp896 - tmp385*tmp898 - tmp424*tmp900 - tmp466*tmp902 - tmp47*tmp882;
      elMat(7,1) = tmp486*tmp881 - tmp488*tmp883 + tmp490*tmp885 + tmp492*tmp887 - tmp494*tmp889 + tmp496*tmp891 + tmp498*tmp893 + tmp500*tmp895 - tmp502*tmp897 - tmp504*tmp899 + tmp506*tmp901;
      elMat(7,2) = tmp508*tmp881 + tmp510*tmp883 + tmp512*tmp885 - tmp514*tmp887 + tmp516*tmp889 - tmp518*tmp891 - tmp520*tmp893 + tmp522*tmp895 - tmp524*tmp897 + tmp526*tmp899 - tmp528*tmp901;
      elMat(7,3) = -tmp530*tmp881 + tmp532*tmp883 + tmp534*tmp885 - tmp536*tmp887 - tmp538*tmp889 + tmp540*tmp891 - tmp542*tmp893 - tmp544*tmp895 + tmp546*tmp897 + tmp548*tmp899 + tmp550*tmp901;
      elMat(7,4) = -tmp553*tmp882 - tmp556*tmp884 - tmp559*tmp886 - tmp562*tmp888 - tmp565*tmp890 - tmp568*tmp892 - tmp571*tmp894 - tmp574*tmp896 - tmp577*tmp898 - tmp580*tmp900 - tmp583*tmp902;
      elMat(7,5) = -tmp586*tmp882 - tmp589*tmp884 - tmp592*tmp886 - tmp595*tmp888 - tmp598*tmp890 - tmp601*tmp892 - tmp604*tmp894 - tmp607*tmp896 - tmp610*tmp898 - tmp613*tmp900 - tmp616*tmp902;
      elMat(7,6) = -tmp619*tmp882 - tmp622*tmp884 - tmp625*tmp886 - tmp628*tmp888 - tmp631*tmp890 - tmp634*tmp892 - tmp637*tmp894 - tmp640*tmp896 - tmp643*tmp898 - tmp646*tmp900 - tmp649*tmp902;
      elMat(7,7) = -tmp650*tmp882 - tmp651*tmp884 - tmp652*tmp886 - tmp653*tmp888 - tmp654*tmp890 - tmp655*tmp892 - tmp656*tmp894 - tmp657*tmp896 - tmp658*tmp898 - tmp659*tmp900 - tmp660*tmp902;
      elMat(7,8) = -tmp661*tmp882 - tmp662*tmp884 - tmp663*tmp886 - tmp664*tmp888 - tmp665*tmp890 - tmp666*tmp892 - tmp667*tmp894 - tmp668*tmp896 - tmp669*tmp898 - tmp670*tmp900 - tmp671*tmp902;
      elMat(7,9) = -tmp672*tmp882 - tmp673*tmp884 - tmp674*tmp886 - tmp675*tmp888 - tmp676*tmp890 - tmp677*tmp892 - tmp678*tmp894 - tmp679*tmp896 - tmp680*tmp898 - tmp681*tmp900 - tmp682*tmp902;
      elMat(8,0) = -tmp102*tmp906 - tmp144*tmp908 - tmp186*tmp910 - tmp228*tmp912 - tmp270*tmp914 - tmp308*tmp916 - tmp347*tmp918 - tmp385*tmp920 - tmp424*tmp922 - tmp466*tmp924 - tmp47*tmp904;
      elMat(8,1) = tmp486*tmp903 - tmp488*tmp905 + tmp490*tmp907 + tmp492*tmp909 - tmp494*tmp911 + tmp496*tmp913 + tmp498*tmp915 + tmp500*tmp917 - tmp502*tmp919 - tmp504*tmp921 + tmp506*tmp923;
      elMat(8,2) = tmp508*tmp903 + tmp510*tmp905 + tmp512*tmp907 - tmp514*tmp909 + tmp516*tmp911 - tmp518*tmp913 - tmp520*tmp915 + tmp522*tmp917 - tmp524*tmp919 + tmp526*tmp921 - tmp528*tmp923;
      elMat(8,3) = -tmp530*tmp903 + tmp532*tmp905 + tmp534*tmp907 - tmp536*tmp909 - tmp538*tmp911 + tmp540*tmp913 - tmp542*tmp915 - tmp544*tmp917 + tmp546*tmp919 + tmp548*tmp921 + tmp550*tmp923;
      elMat(8,4) = -tmp553*tmp904 - tmp556*tmp906 - tmp559*tmp908 - tmp562*tmp910 - tmp565*tmp912 - tmp568*tmp914 - tmp571*tmp916 - tmp574*tmp918 - tmp577*tmp920 - tmp580*tmp922 - tmp583*tmp924;
      elMat(8,5) = -tmp586*tmp904 - tmp589*tmp906 - tmp592*tmp908 - tmp595*tmp910 - tmp598*tmp912 - tmp601*tmp914 - tmp604*tmp916 - tmp607*tmp918 - tmp610*tmp920 - tmp613*tmp922 - tmp616*tmp924;
      elMat(8,6) = -tmp619*tmp904 - tmp622*tmp906 - tmp625*tmp908 - tmp628*tmp910 - tmp631*tmp912 - tmp634*tmp914 - tmp637*tmp916 - tmp640*tmp918 - tmp643*tmp920 - tmp646*tmp922 - tmp649*tmp924;
      elMat(8,7) = -tmp650*tmp904 - tmp651*tmp906 - tmp652*tmp908 - tmp653*tmp910 - tmp654*tmp912 - tmp655*tmp914 - tmp656*tmp916 - tmp657*tmp918 - tmp658*tmp920 - tmp659*tmp922 - tmp660*tmp924;
      elMat(8,8) = -tmp661*tmp904 - tmp662*tmp906 - tmp663*tmp908 - tmp664*tmp910 - tmp665*tmp912 - tmp666*tmp914 - tmp667*tmp916 - tmp668*tmp918 - tmp669*tmp920 - tmp670*tmp922 - tmp671*tmp924;
      elMat(8,9) = -tmp672*tmp904 - tmp673*tmp906 - tmp674*tmp908 - tmp675*tmp910 - tmp676*tmp912 - tmp677*tmp914 - tmp678*tmp916 - tmp679*tmp918 - tmp680*tmp920 - tmp681*tmp922 - tmp682*tmp924;
      elMat(9,0) = -tmp102*tmp928 - tmp144*tmp930 - tmp186*tmp932 - tmp228*tmp934 - tmp270*tmp936 - tmp308*tmp938 - tmp347*tmp940 - tmp385*tmp942 - tmp424*tmp944 - tmp466*tmp946 - tmp47*tmp926;
      elMat(9,1) = tmp486*tmp925 - tmp488*tmp927 + tmp490*tmp929 + tmp492*tmp931 - tmp494*tmp933 + tmp496*tmp935 + tmp498*tmp937 + tmp500*tmp939 - tmp502*tmp941 - tmp504*tmp943 + tmp506*tmp945;
      elMat(9,2) = tmp508*tmp925 + tmp510*tmp927 + tmp512*tmp929 - tmp514*tmp931 + tmp516*tmp933 - tmp518*tmp935 - tmp520*tmp937 + tmp522*tmp939 - tmp524*tmp941 + tmp526*tmp943 - tmp528*tmp945;
      elMat(9,3) = -tmp530*tmp925 + tmp532*tmp927 + tmp534*tmp929 - tmp536*tmp931 - tmp538*tmp933 + tmp540*tmp935 - tmp542*tmp937 - tmp544*tmp939 + tmp546*tmp941 + tmp548*tmp943 + tmp550*tmp945;
      elMat(9,4) = -tmp553*tmp926 - tmp556*tmp928 - tmp559*tmp930 - tmp562*tmp932 - tmp565*tmp934 - tmp568*tmp936 - tmp571*tmp938 - tmp574*tmp940 - tmp577*tmp942 - tmp580*tmp944 - tmp583*tmp946;
      elMat(9,5) = -tmp586*tmp926 - tmp589*tmp928 - tmp592*tmp930 - tmp595*tmp932 - tmp598*tmp934 - tmp601*tmp936 - tmp604*tmp938 - tmp607*tmp940 - tmp610*tmp942 - tmp613*tmp944 - tmp616*tmp946;
      elMat(9,6) = -tmp619*tmp926 - tmp622*tmp928 - tmp625*tmp930 - tmp628*tmp932 - tmp631*tmp934 - tmp634*tmp936 - tmp637*tmp938 - tmp640*tmp940 - tmp643*tmp942 - tmp646*tmp944 - tmp649*tmp946;
      elMat(9,7) = -tmp650*tmp926 - tmp651*tmp928 - tmp652*tmp930 - tmp653*tmp932 - tmp654*tmp934 - tmp655*tmp936 - tmp656*tmp938 - tmp657*tmp940 - tmp658*tmp942 - tmp659*tmp944 - tmp660*tmp946;
      elMat(9,8) = -tmp661*tmp926 - tmp662*tmp928 - tmp663*tmp930 - tmp664*tmp932 - tmp665*tmp934 - tmp666*tmp936 - tmp667*tmp938 - tmp668*tmp940 - tmp669*tmp942 - tmp670*tmp944 - tmp671*tmp946;
      elMat(9,9) = -tmp672*tmp926 - tmp673*tmp928 - tmp674*tmp930 - tmp675*tmp932 - tmp676*tmp934 - tmp677*tmp936 - tmp678*tmp938 - tmp679*tmp940 - tmp680*tmp942 - tmp681*tmp944 - tmp682*tmp946;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_0_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp8 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp7*J_B_1(2, 2) - tmp8*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp13*tmp4 - tmp16;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp30 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp10 - tmp17;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp12 + tmp15;
      const real_t tmp40 = tmp19 - tmp21;
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = coords[0][0]*coords[1][1];
      const real_t tmp48 = coords[0][0]*coords[1][2];
      const real_t tmp49 = coords[2][1]*coords[3][2];
      const real_t tmp50 = coords[0][1]*coords[1][0];
      const real_t tmp51 = coords[0][1]*coords[1][2];
      const real_t tmp52 = coords[2][2]*coords[3][0];
      const real_t tmp53 = coords[0][2]*coords[1][0];
      const real_t tmp54 = coords[0][2]*coords[1][1];
      const real_t tmp55 = coords[2][0]*coords[3][1];
      const real_t tmp56 = coords[2][2]*coords[3][1];
      const real_t tmp57 = coords[2][0]*coords[3][2];
      const real_t tmp58 = coords[2][1]*coords[3][0];
      const real_t tmp59 = std::abs(coords[0][0]*tmp49 - coords[0][0]*tmp56 + coords[0][1]*tmp52 - coords[0][1]*tmp57 + coords[0][2]*tmp55 - coords[0][2]*tmp58 - coords[1][0]*tmp49 + coords[1][0]*tmp56 - coords[1][1]*tmp52 + coords[1][1]*tmp57 - coords[1][2]*tmp55 + coords[1][2]*tmp58 + coords[2][0]*tmp51 - coords[2][0]*tmp54 - coords[2][1]*tmp48 + coords[2][1]*tmp53 + coords[2][2]*tmp47 - coords[2][2]*tmp50 - coords[3][0]*tmp51 + coords[3][0]*tmp54 + coords[3][1]*tmp48 - coords[3][1]*tmp53 - coords[3][2]*tmp47 + coords[3][2]*tmp50);
      const real_t tmp60 = 0.55279693041046674*tmp24;
      const real_t tmp61 = tmp60*(J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0));
      const real_t tmp62 = tmp60*(-J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0));
      const real_t tmp63 = tmp60*(J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1));
      const real_t tmp64 = tmp59*(tmp27*tmp61 + tmp29*tmp62 + tmp33*tmp62 + tmp35*tmp61 + tmp37*tmp62 + tmp39*tmp63 + tmp43*tmp63 + tmp45*tmp63 + tmp6*tmp61)*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = 0.011829781572832234*tmp64;
      const real_t tmp66 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp67 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp68 = tmp66 - tmp67;
      const real_t tmp69 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp70 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp71 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp72 = tmp66*J_B_10(2, 2) - tmp67*J_B_10(2, 2) + tmp69*J_B_10(2, 0) - tmp70*J_B_10(2, 1) - tmp71*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp73 = 1.0 / (tmp72);
      const real_t tmp74 = tmp18*tmp73;
      const real_t tmp75 = tmp68*tmp74;
      const real_t tmp76 = tmp6*tmp75;
      const real_t tmp77 = tmp27*tmp75;
      const real_t tmp78 = -tmp70 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp79 = tmp74*tmp78;
      const real_t tmp80 = tmp29*tmp79;
      const real_t tmp81 = tmp33*tmp79;
      const real_t tmp82 = tmp35*tmp75;
      const real_t tmp83 = tmp37*tmp79;
      const real_t tmp84 = tmp69 - tmp71;
      const real_t tmp85 = tmp74*tmp84;
      const real_t tmp86 = tmp39*tmp85;
      const real_t tmp87 = tmp43*tmp85;
      const real_t tmp88 = tmp45*tmp85;
      const real_t tmp89 = 0.60805118540288361*tmp74;
      const real_t tmp90 = tmp89*(J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0));
      const real_t tmp91 = tmp89*(-J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0));
      const real_t tmp92 = tmp89*(J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1));
      const real_t tmp93 = tmp59*(tmp27*tmp90 + tmp29*tmp91 + tmp33*tmp91 + tmp35*tmp90 + tmp37*tmp91 + tmp39*tmp92 + tmp43*tmp92 + tmp45*tmp92 + tmp6*tmp90)*std::abs(tmp72)*ScalarCoeff0_10;
      const real_t tmp94 = 0.0061414854617707626*tmp93;
      const real_t tmp95 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp96 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp97 = tmp95 - tmp96;
      const real_t tmp98 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp99 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp100 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp101 = -tmp100*J_B_11(2, 0) + tmp95*J_B_11(2, 2) - tmp96*J_B_11(2, 2) + tmp98*J_B_11(2, 0) - tmp99*J_B_11(2, 1) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp102 = 1.0 / (tmp101);
      const real_t tmp103 = tmp102*tmp18;
      const real_t tmp104 = tmp103*tmp97;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -tmp99 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp108 = tmp103*tmp107;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = -tmp100 + tmp98;
      const real_t tmp114 = tmp103*tmp113;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = 2.0850189307815055*tmp103;
      const real_t tmp119 = tmp118*(J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0));
      const real_t tmp120 = tmp118*(-J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0));
      const real_t tmp121 = tmp118*(J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1));
      const real_t tmp122 = tmp59*(-tmp119*tmp27 - tmp119*tmp35 - tmp119*tmp6 - tmp120*tmp29 - tmp120*tmp33 - tmp120*tmp37 - tmp121*tmp39 - tmp121*tmp43 - tmp121*tmp45)*std::abs(tmp101)*ScalarCoeff0_11;
      const real_t tmp123 = 0.0043612323249822204*tmp122;
      const real_t tmp124 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp125 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp126 = tmp124 - tmp125;
      const real_t tmp127 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp128 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp129 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp130 = tmp124*J_B_2(2, 2) - tmp125*J_B_2(2, 2) + tmp127*J_B_2(2, 0) - tmp128*J_B_2(2, 1) - tmp129*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp131 = 1.0 / (tmp130);
      const real_t tmp132 = tmp131*tmp18;
      const real_t tmp133 = tmp126*tmp132;
      const real_t tmp134 = tmp133*tmp6;
      const real_t tmp135 = tmp133*tmp27;
      const real_t tmp136 = -tmp128 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp137 = tmp132*tmp136;
      const real_t tmp138 = tmp137*tmp29;
      const real_t tmp139 = tmp137*tmp33;
      const real_t tmp140 = tmp133*tmp35;
      const real_t tmp141 = tmp137*tmp37;
      const real_t tmp142 = tmp127 - tmp129;
      const real_t tmp143 = tmp132*tmp142;
      const real_t tmp144 = tmp143*tmp39;
      const real_t tmp145 = tmp143*tmp43;
      const real_t tmp146 = tmp143*tmp45;
      const real_t tmp147 = 0.29317593934991559*tmp132;
      const real_t tmp148 = tmp147*(J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0));
      const real_t tmp149 = tmp147*(-J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0));
      const real_t tmp150 = tmp147*(J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1));
      const real_t tmp151 = tmp59*(-tmp148*tmp27 - tmp148*tmp35 - tmp148*tmp6 - tmp149*tmp29 - tmp149*tmp33 - tmp149*tmp37 - tmp150*tmp39 - tmp150*tmp43 - tmp150*tmp45)*std::abs(tmp130)*ScalarCoeff0_2;
      const real_t tmp152 = 0.012248248047610821*tmp151;
      const real_t tmp153 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp154 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp155 = tmp153 - tmp154;
      const real_t tmp156 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp157 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp158 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp159 = tmp153*J_B_3(2, 2) - tmp154*J_B_3(2, 2) + tmp156*J_B_3(2, 0) - tmp157*J_B_3(2, 1) - tmp158*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp160 = 1.0 / (tmp159);
      const real_t tmp161 = tmp160*tmp18;
      const real_t tmp162 = tmp155*tmp161;
      const real_t tmp163 = tmp162*tmp6;
      const real_t tmp164 = tmp162*tmp27;
      const real_t tmp165 = -tmp157 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp166 = tmp161*tmp165;
      const real_t tmp167 = tmp166*tmp29;
      const real_t tmp168 = tmp166*tmp33;
      const real_t tmp169 = tmp162*tmp35;
      const real_t tmp170 = tmp166*tmp37;
      const real_t tmp171 = tmp156 - tmp158;
      const real_t tmp172 = tmp161*tmp171;
      const real_t tmp173 = tmp172*tmp39;
      const real_t tmp174 = tmp172*tmp43;
      const real_t tmp175 = tmp172*tmp45;
      const real_t tmp176 = 0.56151037867223397*tmp161;
      const real_t tmp177 = tmp176*(J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0));
      const real_t tmp178 = tmp176*(-J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0));
      const real_t tmp179 = tmp176*(J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1));
      const real_t tmp180 = tmp59*(tmp177*tmp27 + tmp177*tmp35 + tmp177*tmp6 + tmp178*tmp29 + tmp178*tmp33 + tmp178*tmp37 + tmp179*tmp39 + tmp179*tmp43 + tmp179*tmp45)*std::abs(tmp159)*ScalarCoeff0_3;
      const real_t tmp181 = 0.017219568446249611*tmp180;
      const real_t tmp182 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp183 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp184 = tmp182 - tmp183;
      const real_t tmp185 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp186 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp187 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp188 = tmp182*J_B_4(2, 2) - tmp183*J_B_4(2, 2) + tmp185*J_B_4(2, 0) - tmp186*J_B_4(2, 1) - tmp187*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp189 = 1.0 / (tmp188);
      const real_t tmp190 = tmp18*tmp189;
      const real_t tmp191 = tmp184*tmp190;
      const real_t tmp192 = tmp191*tmp6;
      const real_t tmp193 = tmp191*tmp27;
      const real_t tmp194 = -tmp186 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp195 = tmp190*tmp194;
      const real_t tmp196 = tmp195*tmp29;
      const real_t tmp197 = tmp195*tmp33;
      const real_t tmp198 = tmp191*tmp35;
      const real_t tmp199 = tmp195*tmp37;
      const real_t tmp200 = tmp185 - tmp187;
      const real_t tmp201 = tmp190*tmp200;
      const real_t tmp202 = tmp201*tmp39;
      const real_t tmp203 = tmp201*tmp43;
      const real_t tmp204 = tmp201*tmp45;
      const real_t tmp205 = 0.31389282688815401*tmp190;
      const real_t tmp206 = tmp205*(J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0));
      const real_t tmp207 = tmp205*(-J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0));
      const real_t tmp208 = tmp205*(J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1));
      const real_t tmp209 = tmp59*(-tmp206*tmp27 - tmp206*tmp35 - tmp206*tmp6 - tmp207*tmp29 - tmp207*tmp33 - tmp207*tmp37 - tmp208*tmp39 - tmp208*tmp43 - tmp208*tmp45)*std::abs(tmp188)*ScalarCoeff0_4;
      const real_t tmp210 = 0.021490090227737114*tmp209;
      const real_t tmp211 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp212 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp213 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp214 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp215 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp216 = tmp211*J_B_5(2, 2) - tmp212*J_B_5(2, 2) + tmp213*J_B_5(2, 0) - tmp214*J_B_5(2, 1) - tmp215*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp217 = tmp18/tmp216;
      const real_t tmp218 = tmp217*(tmp211 - tmp212);
      const real_t tmp219 = tmp218*tmp6;
      const real_t tmp220 = tmp218*tmp27;
      const real_t tmp221 = tmp217*(-tmp214 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp222 = tmp221*tmp29;
      const real_t tmp223 = tmp221*tmp33;
      const real_t tmp224 = tmp218*tmp35;
      const real_t tmp225 = tmp221*tmp37;
      const real_t tmp226 = tmp217*(tmp213 - tmp215);
      const real_t tmp227 = tmp226*tmp39;
      const real_t tmp228 = tmp226*tmp43;
      const real_t tmp229 = tmp226*tmp45;
      const real_t tmp230 = 0.99043597017024343*tmp217;
      const real_t tmp231 = tmp230*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp232 = tmp230*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp233 = tmp230*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp234 = tmp59*(tmp231*tmp27 + tmp231*tmp35 + tmp231*tmp6 + tmp232*tmp29 + tmp232*tmp33 + tmp232*tmp37 + tmp233*tmp39 + tmp233*tmp43 + tmp233*tmp45)*std::abs(tmp216)*ScalarCoeff0_5;
      const real_t tmp235 = 0.0084625239161731543*tmp234;
      const real_t tmp236 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp237 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp238 = tmp236 - tmp237;
      const real_t tmp239 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp240 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp241 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp242 = tmp236*J_B_6(2, 2) - tmp237*J_B_6(2, 2) + tmp239*J_B_6(2, 0) - tmp240*J_B_6(2, 1) - tmp241*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp243 = 1.0 / (tmp242);
      const real_t tmp244 = tmp18*tmp243;
      const real_t tmp245 = tmp238*tmp244;
      const real_t tmp246 = tmp245*tmp6;
      const real_t tmp247 = tmp245*tmp27;
      const real_t tmp248 = -tmp240 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp249 = tmp244*tmp248;
      const real_t tmp250 = tmp249*tmp29;
      const real_t tmp251 = tmp249*tmp33;
      const real_t tmp252 = tmp245*tmp35;
      const real_t tmp253 = tmp249*tmp37;
      const real_t tmp254 = tmp239 - tmp241;
      const real_t tmp255 = tmp244*tmp254;
      const real_t tmp256 = tmp255*tmp39;
      const real_t tmp257 = tmp255*tmp43;
      const real_t tmp258 = tmp255*tmp45;
      const real_t tmp259 = 1.2518910405721839*tmp244;
      const real_t tmp260 = tmp259*(J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0));
      const real_t tmp261 = tmp259*(-J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0));
      const real_t tmp262 = tmp259*(J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1));
      const real_t tmp263 = tmp59*(-tmp260*tmp27 - tmp260*tmp35 - tmp260*tmp6 - tmp261*tmp29 - tmp261*tmp33 - tmp261*tmp37 - tmp262*tmp39 - tmp262*tmp43 - tmp262*tmp45)*std::abs(tmp242)*ScalarCoeff0_6;
      const real_t tmp264 = 0.0088251866742250357*tmp263;
      const real_t tmp265 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp266 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp267 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp268 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp269 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp270 = tmp265*J_B_7(2, 2) - tmp266*J_B_7(2, 2) + tmp267*J_B_7(2, 0) - tmp268*J_B_7(2, 1) - tmp269*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp271 = tmp18/tmp270;
      const real_t tmp272 = tmp271*(tmp265 - tmp266);
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = tmp271*(-tmp268 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp276 = tmp275*tmp29;
      const real_t tmp277 = tmp275*tmp33;
      const real_t tmp278 = tmp272*tmp35;
      const real_t tmp279 = tmp275*tmp37;
      const real_t tmp280 = tmp271*(tmp267 - tmp269);
      const real_t tmp281 = tmp280*tmp39;
      const real_t tmp282 = tmp280*tmp43;
      const real_t tmp283 = tmp280*tmp45;
      const real_t tmp284 = 0.77270393148826533*tmp271;
      const real_t tmp285 = tmp284*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp286 = tmp284*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp287 = tmp284*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp288 = tmp59*(tmp27*tmp285 + tmp285*tmp35 + tmp285*tmp6 + tmp286*tmp29 + tmp286*tmp33 + tmp286*tmp37 + tmp287*tmp39 + tmp287*tmp43 + tmp287*tmp45)*std::abs(tmp270)*ScalarCoeff0_7;
      const real_t tmp289 = 0.0077188851041817101*tmp288;
      const real_t tmp290 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp291 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp292 = tmp290 - tmp291;
      const real_t tmp293 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp294 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp295 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp296 = tmp290*J_B_8(2, 2) - tmp291*J_B_8(2, 2) + tmp293*J_B_8(2, 0) - tmp294*J_B_8(2, 1) - tmp295*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp297 = 1.0 / (tmp296);
      const real_t tmp298 = tmp18*tmp297;
      const real_t tmp299 = tmp292*tmp298;
      const real_t tmp300 = tmp299*tmp6;
      const real_t tmp301 = tmp27*tmp299;
      const real_t tmp302 = -tmp294 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp303 = tmp298*tmp302;
      const real_t tmp304 = tmp29*tmp303;
      const real_t tmp305 = tmp303*tmp33;
      const real_t tmp306 = tmp299*tmp35;
      const real_t tmp307 = tmp303*tmp37;
      const real_t tmp308 = tmp293 - tmp295;
      const real_t tmp309 = tmp298*tmp308;
      const real_t tmp310 = tmp309*tmp39;
      const real_t tmp311 = tmp309*tmp43;
      const real_t tmp312 = tmp309*tmp45;
      const real_t tmp313 = 0.9184440441026207*tmp298;
      const real_t tmp314 = tmp313*(J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0));
      const real_t tmp315 = tmp313*(-J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0));
      const real_t tmp316 = tmp313*(J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1));
      const real_t tmp317 = tmp59*(-tmp27*tmp314 - tmp29*tmp315 - tmp314*tmp35 - tmp314*tmp6 - tmp315*tmp33 - tmp315*tmp37 - tmp316*tmp39 - tmp316*tmp43 - tmp316*tmp45)*std::abs(tmp296)*ScalarCoeff0_8;
      const real_t tmp318 = 0.006659242794062166*tmp317;
      const real_t tmp319 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp320 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp321 = tmp319 - tmp320;
      const real_t tmp322 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp323 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp324 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp325 = tmp319*J_B_9(2, 2) - tmp320*J_B_9(2, 2) + tmp322*J_B_9(2, 0) - tmp323*J_B_9(2, 1) - tmp324*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp326 = 1.0 / (tmp325);
      const real_t tmp327 = tmp18*tmp326;
      const real_t tmp328 = tmp321*tmp327;
      const real_t tmp329 = tmp328*tmp6;
      const real_t tmp330 = tmp27*tmp328;
      const real_t tmp331 = -tmp323 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp332 = tmp327*tmp331;
      const real_t tmp333 = tmp29*tmp332;
      const real_t tmp334 = tmp33*tmp332;
      const real_t tmp335 = tmp328*tmp35;
      const real_t tmp336 = tmp332*tmp37;
      const real_t tmp337 = tmp322 - tmp324;
      const real_t tmp338 = tmp327*tmp337;
      const real_t tmp339 = tmp338*tmp39;
      const real_t tmp340 = tmp338*tmp43;
      const real_t tmp341 = tmp338*tmp45;
      const real_t tmp342 = 0.37454442704241986*tmp327;
      const real_t tmp343 = tmp342*(J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0));
      const real_t tmp344 = tmp342*(-J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0));
      const real_t tmp345 = tmp342*(J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1));
      const real_t tmp346 = tmp59*(tmp27*tmp343 + tmp29*tmp344 + tmp33*tmp344 + tmp343*tmp35 + tmp343*tmp6 + tmp344*tmp37 + tmp345*tmp39 + tmp345*tmp43 + tmp345*tmp45)*std::abs(tmp325)*ScalarCoeff0_9;
      const real_t tmp347 = 0.0061548665412862651*tmp346;
      const real_t tmp348 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp349 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp350 = 0.2723974837528258*tmp77 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp87;
      const real_t tmp351 = 0.3256196736114374*tmp76 + 0.3256196736114374*tmp80 + 0.3256196736114374*tmp86;
      const real_t tmp352 = 0.054242807519210512*tmp106 + 0.054242807519210512*tmp110 + 0.054242807519210512*tmp116;
      const real_t tmp353 = 0.69877623478892303*tmp105 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp115;
      const real_t tmp354 = 1.2716142408535775*tmp135 + 1.2716142408535775*tmp139 + 1.2716142408535775*tmp145;
      const real_t tmp355 = 1.3169318389705873*tmp134 + 1.3169318389705873*tmp138 + 1.3169318389705873*tmp144;
      const real_t tmp356 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp168 + 1.4152929568371884*tmp174;
      const real_t tmp357 = 0.41537646564397157*tmp163 + 0.41537646564397157*tmp167 + 0.41537646564397157*tmp173;
      const real_t tmp358 = 0.50720690366156718*tmp193 + 0.50720690366156718*tmp197 + 0.50720690366156718*tmp203;
      const real_t tmp359 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp196 + 1.2177936097379878*tmp202;
      const real_t tmp360 = 1.3207616593498592*tmp220 + 1.3207616593498592*tmp223 + 1.3207616593498592*tmp228;
      const real_t tmp361 = 2.1520288156647434*tmp219 + 2.1520288156647434*tmp222 + 2.1520288156647434*tmp227;
      const real_t tmp362 = 1.2259759537187613*tmp247 + 1.2259759537187613*tmp251 + 1.2259759537187613*tmp257;
      const real_t tmp363 = 0.035965040373342916*tmp246 + 0.035965040373342916*tmp250 + 0.035965040373342916*tmp256;
      const real_t tmp364 = 0.23782646519773576*tmp274 + 0.23782646519773576*tmp277 + 0.23782646519773576*tmp282;
      const real_t tmp365 = 1.7318139619254227*tmp273 + 1.7318139619254227*tmp276 + 1.7318139619254227*tmp281;
      const real_t tmp366 = 0.19112574223634571*tmp301 + 0.19112574223634571*tmp305 + 0.19112574223634571*tmp311;
      const real_t tmp367 = 0.21336495814298084*tmp300 + 0.21336495814298084*tmp304 + 0.21336495814298084*tmp310;
      const real_t tmp368 = 0.14073571909439453*tmp330 + 0.14073571909439453*tmp334 + 0.14073571909439453*tmp340;
      const real_t tmp369 = 2.9649155283744921*tmp329 + 2.9649155283744921*tmp333 + 2.9649155283744921*tmp339;
      const real_t tmp370 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp371 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp372 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp88;
      const real_t tmp373 = 3.0100340280386204*tmp76 + 3.0100340280386204*tmp80 + 3.0100340280386204*tmp86;
      const real_t tmp374 = 0.054242807519210512*tmp111 + 0.054242807519210512*tmp112 + 0.054242807519210512*tmp117;
      const real_t tmp375 = 0.16196202691036121*tmp105 + 0.16196202691036121*tmp109 + 0.16196202691036121*tmp115;
      const real_t tmp376 = 1.2716142408535775*tmp140 + 1.2716142408535775*tmp141 + 1.2716142408535775*tmp146;
      const real_t tmp377 = 0.11827798082591956*tmp134 + 0.11827798082591956*tmp138 + 0.11827798082591956*tmp144;
      const real_t tmp378 = 1.4152929568371884*tmp169 + 1.4152929568371884*tmp170 + 1.4152929568371884*tmp175;
      const real_t tmp379 = 1.730840956191074*tmp163 + 1.730840956191074*tmp167 + 1.730840956191074*tmp173;
      const real_t tmp380 = 0.50720690366156718*tmp198 + 0.50720690366156718*tmp199 + 0.50720690366156718*tmp204;
      const real_t tmp381 = 0.96110665971229103*tmp192 + 0.96110665971229103*tmp196 + 0.96110665971229103*tmp202;
      const real_t tmp382 = 1.3207616593498592*tmp224 + 1.3207616593498592*tmp225 + 1.3207616593498592*tmp229;
      const real_t tmp383 = 0.51764549515564062*tmp219 + 0.51764549515564062*tmp222 + 0.51764549515564062*tmp227;
      const real_t tmp384 = 1.2259759537187613*tmp252 + 1.2259759537187613*tmp253 + 1.2259759537187613*tmp258;
      const real_t tmp385 = 0.48616796533571183*tmp246 + 0.48616796533571183*tmp250 + 0.48616796533571183*tmp256;
      const real_t tmp386 = 0.23782646519773576*tmp278 + 0.23782646519773576*tmp279 + 0.23782646519773576*tmp283;
      const real_t tmp387 = 1.8030635043651069*tmp273 + 1.8030635043651069*tmp276 + 1.8030635043651069*tmp281;
      const real_t tmp388 = 0.19112574223634571*tmp306 + 0.19112574223634571*tmp307 + 0.19112574223634571*tmp312;
      const real_t tmp389 = 1.6770652555180527*tmp300 + 1.6770652555180527*tmp304 + 1.6770652555180527*tmp310;
      const real_t tmp390 = 0.14073571909439453*tmp335 + 0.14073571909439453*tmp336 + 0.14073571909439453*tmp341;
      const real_t tmp391 = 0.2688931795735332*tmp329 + 0.2688931795735332*tmp333 + 0.2688931795735332*tmp339;
      const real_t tmp392 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp393 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp394 = 0.3256196736114374*tmp82 + 0.3256196736114374*tmp83 + 0.3256196736114374*tmp88;
      const real_t tmp395 = 3.0100340280386204*tmp77 + 3.0100340280386204*tmp81 + 3.0100340280386204*tmp87;
      const real_t tmp396 = 0.69877623478892303*tmp111 + 0.69877623478892303*tmp112 + 0.69877623478892303*tmp117;
      const real_t tmp397 = 0.16196202691036121*tmp106 + 0.16196202691036121*tmp110 + 0.16196202691036121*tmp116;
      const real_t tmp398 = 1.3169318389705873*tmp140 + 1.3169318389705873*tmp141 + 1.3169318389705873*tmp146;
      const real_t tmp399 = 0.11827798082591956*tmp135 + 0.11827798082591956*tmp139 + 0.11827798082591956*tmp145;
      const real_t tmp400 = 0.41537646564397157*tmp169 + 0.41537646564397157*tmp170 + 0.41537646564397157*tmp175;
      const real_t tmp401 = 1.730840956191074*tmp164 + 1.730840956191074*tmp168 + 1.730840956191074*tmp174;
      const real_t tmp402 = 1.2177936097379878*tmp198 + 1.2177936097379878*tmp199 + 1.2177936097379878*tmp204;
      const real_t tmp403 = 0.96110665971229103*tmp193 + 0.96110665971229103*tmp197 + 0.96110665971229103*tmp203;
      const real_t tmp404 = 2.1520288156647434*tmp224 + 2.1520288156647434*tmp225 + 2.1520288156647434*tmp229;
      const real_t tmp405 = 0.51764549515564062*tmp220 + 0.51764549515564062*tmp223 + 0.51764549515564062*tmp228;
      const real_t tmp406 = 0.035965040373342916*tmp252 + 0.035965040373342916*tmp253 + 0.035965040373342916*tmp258;
      const real_t tmp407 = 0.48616796533571183*tmp247 + 0.48616796533571183*tmp251 + 0.48616796533571183*tmp257;
      const real_t tmp408 = 1.7318139619254227*tmp278 + 1.7318139619254227*tmp279 + 1.7318139619254227*tmp283;
      const real_t tmp409 = 1.8030635043651069*tmp274 + 1.8030635043651069*tmp277 + 1.8030635043651069*tmp282;
      const real_t tmp410 = 0.21336495814298084*tmp306 + 0.21336495814298084*tmp307 + 0.21336495814298084*tmp312;
      const real_t tmp411 = 1.6770652555180527*tmp301 + 1.6770652555180527*tmp305 + 1.6770652555180527*tmp311;
      const real_t tmp412 = 2.9649155283744921*tmp335 + 2.9649155283744921*tmp336 + 2.9649155283744921*tmp341;
      const real_t tmp413 = 0.2688931795735332*tmp330 + 0.2688931795735332*tmp334 + 0.2688931795735332*tmp340;
      elMat(0,0) = -tmp123*(-2.0850189307815055*tmp105 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp110 - 2.0850189307815055*tmp111 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp115 - 2.0850189307815055*tmp116 - 2.0850189307815055*tmp117) - tmp152*(-0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp138 - 0.29317593934991559*tmp139 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp144 - 0.29317593934991559*tmp145 - 0.29317593934991559*tmp146) - tmp181*(0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp167 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170 + 0.56151037867223397*tmp173 + 0.56151037867223397*tmp174 + 0.56151037867223397*tmp175) - tmp210*(-0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198 - 0.31389282688815401*tmp199 - 0.31389282688815401*tmp202 - 0.31389282688815401*tmp203 - 0.31389282688815401*tmp204) - tmp235*(0.99043597017024343*tmp219 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp222 + 0.99043597017024343*tmp223 + 0.99043597017024343*tmp224 + 0.99043597017024343*tmp225 + 0.99043597017024343*tmp227 + 0.99043597017024343*tmp228 + 0.99043597017024343*tmp229) - tmp264*(-1.2518910405721839*tmp246 - 1.2518910405721839*tmp247 - 1.2518910405721839*tmp250 - 1.2518910405721839*tmp251 - 1.2518910405721839*tmp252 - 1.2518910405721839*tmp253 - 1.2518910405721839*tmp256 - 1.2518910405721839*tmp257 - 1.2518910405721839*tmp258) - tmp289*(0.77270393148826533*tmp273 + 0.77270393148826533*tmp274 + 0.77270393148826533*tmp276 + 0.77270393148826533*tmp277 + 0.77270393148826533*tmp278 + 0.77270393148826533*tmp279 + 0.77270393148826533*tmp281 + 0.77270393148826533*tmp282 + 0.77270393148826533*tmp283) - tmp318*(-0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp304 - 0.9184440441026207*tmp305 - 0.9184440441026207*tmp306 - 0.9184440441026207*tmp307 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp311 - 0.9184440441026207*tmp312) - tmp347*(0.37454442704241986*tmp329 + 0.37454442704241986*tmp330 + 0.37454442704241986*tmp333 + 0.37454442704241986*tmp334 + 0.37454442704241986*tmp335 + 0.37454442704241986*tmp336 + 0.37454442704241986*tmp339 + 0.37454442704241986*tmp340 + 0.37454442704241986*tmp341) - tmp65*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46) - tmp94*(0.60805118540288361*tmp76 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      elMat(0,1) = 0.0036548782978011126*tmp122*(tmp111 + tmp112 + tmp117) + 0.010799549999884401*tmp151*(tmp140 + tmp141 + tmp146) - 0.012584765868454714*tmp180*(tmp169 + tmp170 + tmp175) + 0.00083582139204094858*tmp209*(tmp198 + tmp199 + tmp204) + 0.0040819365333192512*tmp234*(tmp224 + tmp225 + tmp229) + 0.0045346636251092122*tmp263*(tmp252 + tmp253 + tmp258) - 0.0061987549215557864*tmp288*(tmp278 + tmp279 + tmp283) - 0.0045087419239184514*tmp317*(tmp306 + tmp307 + tmp312) + 0.0044998649071490461*tmp346*(tmp335 + tmp336 + tmp341) + 0.0072301427194886381*tmp64*(tmp36 + tmp38 + tmp46) - 0.012344594760863713*tmp93*(tmp82 + tmp83 + tmp88);
      elMat(0,2) = 0.0013137068218914037*tmp122*(tmp106 + tmp110 + tmp116) - 0.0038818597778972029*tmp151*(tmp135 + tmp139 + tmp145) + 0.010066964965131993*tmp180*(tmp164 + tmp168 + tmp174) - 0.0046804043242939224*tmp209*(tmp193 + tmp197 + tmp203) - 0.0097490714046835261*tmp234*(tmp220 + tmp223 + tmp228) + 0.0085077884791842431*tmp263*(tmp247 + tmp251 + tmp257) - 0.0056487878897383461*tmp288*(tmp274 + tmp277 + tmp282) + 0.005238393734043144*tmp317*(tmp301 + tmp305 + tmp311) - 0.012093792842045984*tmp346*(tmp330 + tmp334 + tmp340) + 0.0067853652681886352*tmp64*(tmp28 + tmp34 + tmp44) + 0.0041416969702195786*tmp93*(tmp77 + tmp81 + tmp87);
      elMat(0,3) = 0.0041246668394316508*tmp122*(tmp105 + tmp109 + tmp115) - 0.0033267985952381263*tmp151*(tmp134 + tmp138 + tmp144) - 0.0071511654955033511*tmp180*(tmp163 + tmp167 + tmp173) + 0.010590168103918869*tmp209*(tmp192 + tmp196 + tmp202) - 0.0027144532136395704*tmp234*(tmp219 + tmp222 + tmp227) - 0.0019942799754541058*tmp263*(tmp246 + tmp250 + tmp256) + 0.005883129944586717*tmp288*(tmp273 + tmp276 + tmp281) + 0.0053864900723149976*tmp317*(tmp300 + tmp304 + tmp310) + 0.0052886569726683132*tmp346*(tmp329 + tmp333 + tmp339) - 0.020554974928565235*tmp64*(tmp26 + tmp32 + tmp42) + 0.0044685602754798454*tmp93*(tmp76 + tmp80 + tmp86);
      elMat(0,4) = -tmp123*(tmp352 + tmp353) - tmp152*(tmp354 + tmp355) - tmp181*(tmp356 + tmp357) - tmp210*(tmp358 + tmp359) - tmp235*(tmp360 + tmp361) - tmp264*(tmp362 + tmp363) - tmp289*(tmp364 + tmp365) - tmp318*(tmp366 + tmp367) - tmp347*(tmp368 + tmp369) - tmp65*(tmp348 + tmp349) - tmp94*(tmp350 + tmp351);
      elMat(0,5) = -tmp123*(tmp374 + tmp375) - tmp152*(tmp376 + tmp377) - tmp181*(tmp378 + tmp379) - tmp210*(tmp380 + tmp381) - tmp235*(tmp382 + tmp383) - tmp264*(tmp384 + tmp385) - tmp289*(tmp386 + tmp387) - tmp318*(tmp388 + tmp389) - tmp347*(tmp390 + tmp391) - tmp65*(tmp370 + tmp371) - tmp94*(tmp372 + tmp373);
      elMat(0,6) = -tmp123*(tmp396 + tmp397) - tmp152*(tmp398 + tmp399) - tmp181*(tmp400 + tmp401) - tmp210*(tmp402 + tmp403) - tmp235*(tmp404 + tmp405) - tmp264*(tmp406 + tmp407) - tmp289*(tmp408 + tmp409) - tmp318*(tmp410 + tmp411) - tmp347*(tmp412 + tmp413) - tmp65*(tmp392 + tmp393) - tmp94*(tmp394 + tmp395);
      elMat(0,7) = -tmp123*(3.030776123262295*tmp102*tmp107*tmp18*tmp29 + 3.030776123262295*tmp102*tmp113*tmp18*tmp39 + 3.030776123262295*tmp102*tmp18*tmp6*tmp97 - tmp352 - tmp374) - tmp152*(0.021561698496338266*tmp126*tmp131*tmp18*tmp6 + 0.021561698496338266*tmp131*tmp136*tmp18*tmp29 + 0.021561698496338266*tmp131*tmp142*tmp18*tmp39 - tmp354 - tmp376) - tmp181*(-0.97680333550942233*tmp163 - 0.97680333550942233*tmp167 - 0.97680333550942233*tmp173 - tmp356 - tmp378) - tmp210*(0.80668592322658683*tmp18*tmp184*tmp189*tmp6 + 0.80668592322658683*tmp18*tmp189*tmp194*tmp29 + 0.80668592322658683*tmp18*tmp189*tmp200*tmp39 - tmp358 - tmp380) - tmp235*(-1.3111976295201027*tmp219 - 1.3111976295201027*tmp222 - 1.3111976295201027*tmp227 - tmp360 - tmp382) - tmp264*(1.0259150868534226*tmp18*tmp238*tmp243*tmp6 + 1.0259150868534226*tmp18*tmp243*tmp248*tmp29 + 1.0259150868534226*tmp18*tmp243*tmp254*tmp39 - tmp362 - tmp384) - tmp289*(-0.010530396686001087*tmp273 - 0.010530396686001087*tmp276 - 0.010530396686001087*tmp281 - tmp364 - tmp386) - tmp318*(1.727318301866275*tmp18*tmp29*tmp297*tmp302 + 1.727318301866275*tmp18*tmp292*tmp297*tmp6 + 1.727318301866275*tmp18*tmp297*tmp308*tmp39 - tmp366 - tmp388) - tmp347*(0.48471985386318561*tmp18*tmp29*tmp326*tmp331 + 0.48471985386318561*tmp18*tmp321*tmp326*tmp6 + 0.48471985386318561*tmp18*tmp326*tmp337*tmp39 - tmp368 - tmp390) - tmp65*(-2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - tmp348 - tmp370 - 2.2903585922226259*tmp42) - tmp94*(0.11955133084429059*tmp18*tmp29*tmp73*tmp78 + 0.11955133084429059*tmp18*tmp39*tmp73*tmp84 + 0.11955133084429059*tmp18*tmp6*tmp68*tmp73 - tmp350 - tmp372);
      elMat(0,8) = -tmp123*(2.3862426959925824*tmp102*tmp107*tmp18*tmp33 + 2.3862426959925824*tmp102*tmp113*tmp18*tmp43 + 2.3862426959925824*tmp102*tmp18*tmp27*tmp97 - tmp353 - tmp396) - tmp152*(-0.023755899620671705*tmp135 - 0.023755899620671705*tmp139 - 0.023755899620671705*tmp145 - tmp355 - tmp398) - tmp181*(0.023113155683794462*tmp155*tmp160*tmp18*tmp27 + 0.023113155683794462*tmp160*tmp165*tmp18*tmp33 + 0.023113155683794462*tmp160*tmp171*tmp18*tmp43 - tmp357 - tmp400) - tmp210*(0.096099217150166227*tmp18*tmp184*tmp189*tmp27 + 0.096099217150166227*tmp18*tmp189*tmp194*tmp33 + 0.096099217150166227*tmp18*tmp189*tmp200*tmp43 - tmp359 - tmp402) - tmp235*(-2.1424647858349868*tmp220 - 2.1424647858349868*tmp223 - 2.1424647858349868*tmp228 - tmp361 - tmp404) - tmp264*(2.215926000198841*tmp18*tmp238*tmp243*tmp27 + 2.215926000198841*tmp18*tmp243*tmp248*tmp33 + 2.215926000198841*tmp18*tmp243*tmp254*tmp43 - tmp363 - tmp406) - tmp289*(-1.504517893413688*tmp274 - 1.504517893413688*tmp277 - 1.504517893413688*tmp282 - tmp365 - tmp408) - tmp318*(1.7050790859596399*tmp18*tmp27*tmp292*tmp297 + 1.7050790859596399*tmp18*tmp297*tmp302*tmp33 + 1.7050790859596399*tmp18*tmp297*tmp308*tmp43 - tmp367 - tmp410) - tmp347*(-2.339459955416912*tmp330 - 2.339459955416912*tmp334 - 2.339459955416912*tmp340 - tmp369 - tmp412) - tmp65*(0.020786379341558803*tmp18*tmp23*tmp27*tmp9 + 0.020786379341558803*tmp18*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp18*tmp23*tmp40*tmp43 - tmp349 - tmp392) - tmp94*(0.066329140985678992*tmp18*tmp27*tmp68*tmp73 + 0.066329140985678992*tmp18*tmp33*tmp73*tmp78 + 0.066329140985678992*tmp18*tmp43*tmp73*tmp84 - tmp351 - tmp394);
      elMat(0,9) = -tmp123*(2.923056903871144*tmp102*tmp107*tmp18*tmp37 + 2.923056903871144*tmp102*tmp113*tmp18*tmp45 + 2.923056903871144*tmp102*tmp18*tmp35*tmp97 - tmp375 - tmp397) - tmp152*(1.1748979585239958*tmp126*tmp131*tmp18*tmp35 + 1.1748979585239958*tmp131*tmp136*tmp18*tmp37 + 1.1748979585239958*tmp131*tmp142*tmp18*tmp45 - tmp377 - tmp399) - tmp181*(-1.292351334863308*tmp169 - 1.292351334863308*tmp170 - 1.292351334863308*tmp175 - tmp379 - tmp401) - tmp210*(0.35278616717586297*tmp18*tmp184*tmp189*tmp35 + 0.35278616717586297*tmp18*tmp189*tmp194*tmp37 + 0.35278616717586297*tmp18*tmp189*tmp200*tmp45 - tmp381 - tmp403) - tmp235*(-0.50808146532588383*tmp224 - 0.50808146532588383*tmp225 - 0.50808146532588383*tmp229 - tmp383 - tmp405) - tmp264*(1.7657230752364721*tmp18*tmp238*tmp243*tmp35 + 1.7657230752364721*tmp18*tmp243*tmp248*tmp37 + 1.7657230752364721*tmp18*tmp243*tmp254*tmp45 - tmp385 - tmp407) - tmp289*(-1.5757674358533722*tmp278 - 1.5757674358533722*tmp279 - 1.5757674358533722*tmp283 - tmp387 - tmp409) - tmp318*(0.24137878858456796*tmp18*tmp292*tmp297*tmp35 + 0.24137878858456796*tmp18*tmp297*tmp302*tmp37 + 0.24137878858456796*tmp18*tmp297*tmp308*tmp45 - tmp389 - tmp411) - tmp347*(0.35656239338404694*tmp18*tmp321*tmp326*tmp35 + 0.35656239338404694*tmp18*tmp326*tmp331*tmp37 + 0.35656239338404694*tmp18*tmp326*tmp337*tmp45 - tmp391 - tmp413) - tmp65*(0.058384491239200198*tmp18*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp18*tmp23*tmp35*tmp9 + 0.058384491239200198*tmp18*tmp23*tmp40*tmp45 - tmp371 - tmp393) - tmp94*(-tmp373 - tmp395 - 2.6180852134415042*tmp82 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp88);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = coords[0][0] - coords[2][0];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (tmp0*tmp1 - tmp2*tmp3);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(1, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp2*tmp8;
      const real_t tmp11 = tmp7*J_B_1(1, 1);
      const real_t tmp12 = tmp1*tmp11;
      const real_t tmp13 = tmp11*tmp3;
      const real_t tmp14 = 0.78379396366386*tmp10 - 0.78379396366386*tmp12 - 0.78379396366386*tmp13 + 0.78379396366386*tmp9;
      const real_t tmp15 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp16 = 0.11169079483900564*tmp15;
      const real_t tmp17 = tmp7*J_B_1(0, 0);
      const real_t tmp18 = tmp0*tmp17;
      const real_t tmp19 = tmp17*tmp2;
      const real_t tmp20 = std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp21 = tmp20*(0.78379396366386*tmp1*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp18 - 0.78379396366386*tmp19 + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1));
      const real_t tmp22 = tmp16*tmp21;
      const real_t tmp23 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp24 = 1.0 / (tmp23);
      const real_t tmp25 = tmp24*tmp4;
      const real_t tmp26 = tmp25*J_B_2(1, 0);
      const real_t tmp27 = tmp0*tmp26;
      const real_t tmp28 = tmp2*tmp26;
      const real_t tmp29 = 0.56758792732771934*tmp1*tmp24*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp24*tmp3*tmp4*J_B_2(1, 1) - 0.56758792732771934*tmp27 - 0.56758792732771934*tmp28;
      const real_t tmp30 = tmp25*J_B_2(0, 0);
      const real_t tmp31 = tmp0*tmp30;
      const real_t tmp32 = tmp2*tmp30;
      const real_t tmp33 = tmp25*J_B_2(0, 1);
      const real_t tmp34 = tmp1*tmp33;
      const real_t tmp35 = tmp3*tmp33;
      const real_t tmp36 = std::abs(tmp23)*ScalarCoeff0_2;
      const real_t tmp37 = tmp36*(0.56758792732771934*tmp31 + 0.56758792732771934*tmp32 - 0.56758792732771934*tmp34 - 0.56758792732771934*tmp35);
      const real_t tmp38 = tmp16*tmp37;
      const real_t tmp39 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp40 = 1.0 / (tmp39);
      const real_t tmp41 = tmp4*tmp40;
      const real_t tmp42 = tmp41*J_B_3(1, 0);
      const real_t tmp43 = tmp0*tmp42;
      const real_t tmp44 = tmp2*tmp42;
      const real_t tmp45 = tmp41*J_B_3(1, 1);
      const real_t tmp46 = tmp1*tmp45;
      const real_t tmp47 = tmp3*tmp45;
      const real_t tmp48 = 0.78379396366385934*tmp43 + 0.78379396366385934*tmp44 - 0.78379396366385934*tmp46 - 0.78379396366385934*tmp47;
      const real_t tmp49 = tmp41*J_B_3(0, 0);
      const real_t tmp50 = tmp0*tmp49;
      const real_t tmp51 = tmp2*tmp49;
      const real_t tmp52 = 0.78379396366385934*tmp1*tmp4*tmp40*J_B_3(0, 1) + 0.78379396366385934*tmp3*tmp4*tmp40*J_B_3(0, 1) - 0.78379396366385934*tmp50 - 0.78379396366385934*tmp51;
      const real_t tmp53 = std::abs(tmp39);
      const real_t tmp54 = tmp53*ScalarCoeff0_3;
      const real_t tmp55 = tmp52*tmp54;
      const real_t tmp56 = tmp16*tmp55;
      const real_t tmp57 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp58 = 1.0 / (tmp57);
      const real_t tmp59 = tmp4*tmp58;
      const real_t tmp60 = tmp59*J_B_4(1, 0);
      const real_t tmp61 = tmp0*tmp60;
      const real_t tmp62 = tmp2*tmp60;
      const real_t tmp63 = tmp59*J_B_4(1, 1);
      const real_t tmp64 = tmp1*tmp63;
      const real_t tmp65 = tmp3*tmp63;
      const real_t tmp66 = 2.2673902919218332*tmp61 + 2.2673902919218332*tmp62 - 2.2673902919218332*tmp64 - 2.2673902919218332*tmp65;
      const real_t tmp67 = 0.054975871827660817*tmp15;
      const real_t tmp68 = tmp59*J_B_4(0, 0);
      const real_t tmp69 = tmp0*tmp68;
      const real_t tmp70 = tmp2*tmp68;
      const real_t tmp71 = 2.2673902919218332*tmp1*tmp4*tmp58*J_B_4(0, 1) + 2.2673902919218332*tmp3*tmp4*tmp58*J_B_4(0, 1) - 2.2673902919218332*tmp69 - 2.2673902919218332*tmp70;
      const real_t tmp72 = std::abs(tmp57);
      const real_t tmp73 = tmp72*ScalarCoeff0_4;
      const real_t tmp74 = tmp71*tmp73;
      const real_t tmp75 = tmp67*tmp74;
      const real_t tmp76 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp77 = 1.0 / (tmp76);
      const real_t tmp78 = tmp4*tmp77;
      const real_t tmp79 = tmp78*J_B_5(1, 0);
      const real_t tmp80 = tmp0*tmp79;
      const real_t tmp81 = tmp2*tmp79;
      const real_t tmp82 = 0.63369514596091792*tmp1*tmp4*tmp77*J_B_5(1, 1) + 0.63369514596091792*tmp3*tmp4*tmp77*J_B_5(1, 1) - 0.63369514596091792*tmp80 - 0.63369514596091792*tmp81;
      const real_t tmp83 = tmp78*J_B_5(0, 0);
      const real_t tmp84 = tmp0*tmp83;
      const real_t tmp85 = tmp2*tmp83;
      const real_t tmp86 = tmp78*J_B_5(0, 1);
      const real_t tmp87 = tmp1*tmp86;
      const real_t tmp88 = tmp3*tmp86;
      const real_t tmp89 = std::abs(tmp76)*ScalarCoeff0_5;
      const real_t tmp90 = tmp89*(0.63369514596091792*tmp84 + 0.63369514596091792*tmp85 - 0.63369514596091792*tmp87 - 0.63369514596091792*tmp88);
      const real_t tmp91 = tmp67*tmp90;
      const real_t tmp92 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp93 = 1.0 / (tmp92);
      const real_t tmp94 = tmp4*tmp93;
      const real_t tmp95 = tmp94*J_B_6(1, 0);
      const real_t tmp96 = tmp0*tmp95;
      const real_t tmp97 = tmp2*tmp95;
      const real_t tmp98 = 0.63369514596091747*tmp1*tmp4*tmp93*J_B_6(1, 1) + 0.63369514596091747*tmp3*tmp4*tmp93*J_B_6(1, 1) - 0.63369514596091747*tmp96 - 0.63369514596091747*tmp97;
      const real_t tmp99 = tmp94*J_B_6(0, 0);
      const real_t tmp100 = tmp0*tmp99;
      const real_t tmp101 = tmp2*tmp99;
      const real_t tmp102 = tmp94*J_B_6(0, 1);
      const real_t tmp103 = tmp1*tmp102;
      const real_t tmp104 = tmp102*tmp3;
      const real_t tmp105 = 0.63369514596091747*tmp100 + 0.63369514596091747*tmp101 - 0.63369514596091747*tmp103 - 0.63369514596091747*tmp104;
      const real_t tmp106 = std::abs(tmp92);
      const real_t tmp107 = tmp106*ScalarCoeff0_6;
      const real_t tmp108 = tmp105*tmp107;
      const real_t tmp109 = tmp108*tmp67;
      const real_t tmp110 = tmp15*tmp21;
      const real_t tmp111 = tmp1*tmp4*tmp6*J_B_1(1, 1) - tmp10;
      const real_t tmp112 = 0.087542570791631205*tmp111;
      const real_t tmp113 = tmp15*tmp37;
      const real_t tmp114 = tmp1*tmp24*tmp4*J_B_2(1, 1) - tmp28;
      const real_t tmp115 = 0.087542570791631302*tmp114;
      const real_t tmp116 = tmp1*tmp4*tmp40*J_B_3(1, 1) - tmp44;
      const real_t tmp117 = tmp1*tmp4*tmp58*J_B_4(1, 1) - tmp62;
      const real_t tmp118 = tmp15*tmp90;
      const real_t tmp119 = tmp1*tmp4*tmp77*J_B_5(1, 1) - tmp81;
      const real_t tmp120 = 0.12465175807197719*tmp119;
      const real_t tmp121 = tmp1*tmp4*tmp93*J_B_6(1, 1) - tmp97;
      const real_t tmp122 = tmp3*tmp4*tmp6*J_B_1(1, 1) - tmp9;
      const real_t tmp123 = 0.063394346744256799*tmp122;
      const real_t tmp124 = tmp24*tmp3*tmp4*J_B_2(1, 1) - tmp27;
      const real_t tmp125 = 0.08754257079163108*tmp124;
      const real_t tmp126 = tmp3*tmp4*tmp40*J_B_3(1, 1) - tmp43;
      const real_t tmp127 = 0.087542570791631358*tmp126;
      const real_t tmp128 = tmp3*tmp4*tmp58*J_B_4(1, 1) - tmp61;
      const real_t tmp129 = 0.034837943122158259*tmp128;
      const real_t tmp130 = tmp3*tmp4*tmp77*J_B_5(1, 1) - tmp80;
      const real_t tmp131 = 0.034837943122158141*tmp130;
      const real_t tmp132 = tmp3*tmp4*tmp93*J_B_6(1, 1) - tmp96;
      const real_t tmp133 = 0.12465175807197725*tmp132;
      const real_t tmp134 = 0.43241207267228021*tmp10;
      const real_t tmp135 = 0.43241207267228021*tmp12;
      const real_t tmp136 = -1.7837939636638598*tmp13 + 1.7837939636638598*tmp9;
      const real_t tmp137 = -tmp134 + tmp135 - tmp136;
      const real_t tmp138 = tmp25*J_B_2(1, 1);
      const real_t tmp139 = tmp1*tmp138;
      const real_t tmp140 = -1.7837939636638587*tmp139 + 1.7837939636638587*tmp28;
      const real_t tmp141 = tmp138*tmp3;
      const real_t tmp142 = -1.7837939636638607*tmp141 + 1.7837939636638607*tmp27;
      const real_t tmp143 = -tmp140 - tmp142;
      const real_t tmp144 = 1.7837939636638611*tmp44 - 1.7837939636638611*tmp46;
      const real_t tmp145 = 0.43241207267227955*tmp43 - 0.43241207267227955*tmp47;
      const real_t tmp146 = -tmp144 - tmp145;
      const real_t tmp147 = 0.36630485403908164*tmp62;
      const real_t tmp148 = 0.36630485403908164*tmp64;
      const real_t tmp149 = 0.36630485403908519*tmp61 - 0.36630485403908519*tmp65;
      const real_t tmp150 = -tmp147 + tmp148 - tmp149;
      const real_t tmp151 = tmp78*J_B_5(1, 1);
      const real_t tmp152 = tmp1*tmp151;
      const real_t tmp153 = -0.36630485403908386*tmp152 + 0.36630485403908386*tmp81;
      const real_t tmp154 = tmp151*tmp3;
      const real_t tmp155 = -3.2673902919218341*tmp154 + 3.2673902919218341*tmp80;
      const real_t tmp156 = -tmp153 - tmp155;
      const real_t tmp157 = tmp94*J_B_6(1, 1);
      const real_t tmp158 = tmp157*tmp3;
      const real_t tmp159 = -0.36630485403908253*tmp158 + 0.36630485403908253*tmp96;
      const real_t tmp160 = -3.2673902919218349*tmp1*tmp157 + 3.2673902919218349*tmp97;
      const real_t tmp161 = -tmp159 - tmp160;
      const real_t tmp162 = tmp134 - tmp135 + 1.3513818909915796*tmp3*tmp4*tmp6*J_B_1(1, 1) - 1.3513818909915796*tmp9;
      const real_t tmp163 = tmp140 - 1.3513818909915782*tmp141 + 1.3513818909915782*tmp27;
      const real_t tmp164 = tmp144 + 1.7763568394002505e-15*tmp43 - 1.7763568394002505e-15*tmp47;
      const real_t tmp165 = tmp147 - tmp148 + 2.9010854378827515*tmp3*tmp4*tmp58*J_B_4(1, 1) - 2.9010854378827515*tmp61;
      const real_t tmp166 = tmp153 - 1.7763568394002505e-15*tmp154 + 1.7763568394002505e-15*tmp80;
      const real_t tmp167 = -2.9010854378827524*tmp158 + tmp160 + 2.9010854378827524*tmp96;
      const real_t tmp168 = -2.2204460492503131e-16*tmp10 + 2.2204460492503131e-16*tmp12 + tmp136;
      const real_t tmp169 = -1.35138189099158*tmp139 + tmp142 + 1.35138189099158*tmp28;
      const real_t tmp170 = tmp145 - 1.3513818909915798*tmp44 + 1.3513818909915798*tmp46;
      const real_t tmp171 = tmp149 - 2.901085437882748*tmp62 + 2.901085437882748*tmp64;
      const real_t tmp172 = -2.901085437882752*tmp152 + tmp155 + 2.901085437882752*tmp81;
      const real_t tmp173 = tmp7*J_B_1(0, 1);
      const real_t tmp174 = tmp1*tmp173;
      const real_t tmp175 = tmp15*tmp20;
      const real_t tmp176 = tmp175*(-tmp174 + tmp19);
      const real_t tmp177 = 0.087542570791631205*tmp176;
      const real_t tmp178 = tmp15*tmp36;
      const real_t tmp179 = tmp178*(tmp32 - tmp34);
      const real_t tmp180 = 0.087542570791631302*tmp179;
      const real_t tmp181 = tmp41*J_B_3(0, 1);
      const real_t tmp182 = tmp1*tmp181;
      const real_t tmp183 = -tmp182 + tmp51;
      const real_t tmp184 = tmp59*J_B_4(0, 1);
      const real_t tmp185 = tmp1*tmp184;
      const real_t tmp186 = -tmp185 + tmp70;
      const real_t tmp187 = tmp15*tmp89;
      const real_t tmp188 = tmp187*(tmp85 - tmp87);
      const real_t tmp189 = 0.12465175807197719*tmp188;
      const real_t tmp190 = tmp101 - tmp103;
      const real_t tmp191 = tmp15*tmp54;
      const real_t tmp192 = tmp183*tmp191;
      const real_t tmp193 = tmp15*tmp73;
      const real_t tmp194 = tmp186*tmp193;
      const real_t tmp195 = tmp107*tmp15;
      const real_t tmp196 = tmp190*tmp195;
      const real_t tmp197 = tmp173*tmp3;
      const real_t tmp198 = tmp175*(tmp18 - tmp197);
      const real_t tmp199 = 0.063394346744256799*tmp198;
      const real_t tmp200 = tmp178*(tmp31 - tmp35);
      const real_t tmp201 = 0.08754257079163108*tmp200;
      const real_t tmp202 = tmp181*tmp3;
      const real_t tmp203 = tmp191*(-tmp202 + tmp50);
      const real_t tmp204 = 0.087542570791631358*tmp203;
      const real_t tmp205 = tmp184*tmp3;
      const real_t tmp206 = tmp193*(-tmp205 + tmp69);
      const real_t tmp207 = 0.034837943122158259*tmp206;
      const real_t tmp208 = tmp187*(tmp84 - tmp88);
      const real_t tmp209 = 0.034837943122158141*tmp208;
      const real_t tmp210 = tmp195*(tmp100 - tmp104);
      const real_t tmp211 = 0.12465175807197725*tmp210;
      const real_t tmp212 = 0.43241207267228021*tmp19;
      const real_t tmp213 = 0.43241207267228021*tmp174;
      const real_t tmp214 = 1.7837939636638598*tmp18 - 1.7837939636638598*tmp197;
      const real_t tmp215 = tmp212 - tmp213 + tmp214;
      const real_t tmp216 = tmp16*tmp20;
      const real_t tmp217 = tmp215*tmp216;
      const real_t tmp218 = 1.7837939636638587*tmp32 - 1.7837939636638587*tmp34;
      const real_t tmp219 = 1.7837939636638607*tmp31 - 1.7837939636638607*tmp35;
      const real_t tmp220 = tmp218 + tmp219;
      const real_t tmp221 = tmp16*tmp36;
      const real_t tmp222 = tmp220*tmp221;
      const real_t tmp223 = -1.7837939636638611*tmp182 + 1.7837939636638611*tmp51;
      const real_t tmp224 = -0.43241207267227955*tmp202 + 0.43241207267227955*tmp50;
      const real_t tmp225 = tmp223 + tmp224;
      const real_t tmp226 = tmp16*tmp54;
      const real_t tmp227 = tmp225*tmp226;
      const real_t tmp228 = 0.36630485403908164*tmp70;
      const real_t tmp229 = 0.36630485403908164*tmp185;
      const real_t tmp230 = -0.36630485403908519*tmp205 + 0.36630485403908519*tmp69;
      const real_t tmp231 = tmp228 - tmp229 + tmp230;
      const real_t tmp232 = tmp67*tmp73;
      const real_t tmp233 = tmp231*tmp232;
      const real_t tmp234 = 0.36630485403908386*tmp85 - 0.36630485403908386*tmp87;
      const real_t tmp235 = 3.2673902919218341*tmp84 - 3.2673902919218341*tmp88;
      const real_t tmp236 = tmp234 + tmp235;
      const real_t tmp237 = tmp67*tmp89;
      const real_t tmp238 = tmp236*tmp237;
      const real_t tmp239 = 0.36630485403908253*tmp100 - 0.36630485403908253*tmp104;
      const real_t tmp240 = 3.2673902919218349*tmp101 - 3.2673902919218349*tmp103;
      const real_t tmp241 = tmp239 + tmp240;
      const real_t tmp242 = tmp107*tmp67;
      const real_t tmp243 = tmp241*tmp242;
      const real_t tmp244 = tmp175*tmp215;
      const real_t tmp245 = tmp178*tmp220;
      const real_t tmp246 = tmp187*tmp236;
      const real_t tmp247 = 1.3513818909915796*tmp18 - 1.3513818909915796*tmp197 - tmp212 + tmp213;
      const real_t tmp248 = tmp216*tmp247;
      const real_t tmp249 = -tmp218 + 1.3513818909915782*tmp24*tmp3*tmp4*J_B_2(0, 1) - 1.3513818909915782*tmp31;
      const real_t tmp250 = tmp221*tmp249;
      const real_t tmp251 = -tmp223 + 1.7763568394002505e-15*tmp3*tmp4*tmp40*J_B_3(0, 1) - 1.7763568394002505e-15*tmp50;
      const real_t tmp252 = tmp226*tmp251;
      const real_t tmp253 = -2.9010854378827515*tmp205 - tmp228 + tmp229 + 2.9010854378827515*tmp69;
      const real_t tmp254 = tmp232*tmp253;
      const real_t tmp255 = -tmp234 + 1.7763568394002505e-15*tmp3*tmp4*tmp77*J_B_5(0, 1) - 1.7763568394002505e-15*tmp84;
      const real_t tmp256 = tmp237*tmp255;
      const real_t tmp257 = -2.9010854378827524*tmp100 - tmp240 + 2.9010854378827524*tmp3*tmp4*tmp93*J_B_6(0, 1);
      const real_t tmp258 = tmp242*tmp257;
      const real_t tmp259 = tmp175*tmp247;
      const real_t tmp260 = tmp178*tmp249;
      const real_t tmp261 = tmp187*tmp255;
      const real_t tmp262 = -tmp239;
      const real_t tmp263 = tmp242*tmp262;
      const real_t tmp264 = -2.2204460492503131e-16*tmp174 + 2.2204460492503131e-16*tmp2*tmp4*tmp6*J_B_1(0, 0) - tmp214;
      const real_t tmp265 = tmp216*tmp264;
      const real_t tmp266 = 1.35138189099158*tmp1*tmp24*tmp4*J_B_2(0, 1) - tmp219 - 1.35138189099158*tmp32;
      const real_t tmp267 = tmp221*tmp266;
      const real_t tmp268 = -1.3513818909915798*tmp182 + 1.3513818909915798*tmp2*tmp4*tmp40*J_B_3(0, 0) - tmp224;
      const real_t tmp269 = tmp226*tmp268;
      const real_t tmp270 = -2.901085437882748*tmp185 + 2.901085437882748*tmp2*tmp4*tmp58*J_B_4(0, 0) - tmp230;
      const real_t tmp271 = tmp232*tmp270;
      const real_t tmp272 = 2.901085437882752*tmp1*tmp4*tmp77*J_B_5(0, 1) - tmp235 - 2.901085437882752*tmp85;
      const real_t tmp273 = tmp237*tmp272;
      const real_t tmp274 = tmp195*tmp262;
      const real_t tmp275 = tmp175*tmp264;
      const real_t tmp276 = tmp178*tmp266;
      const real_t tmp277 = tmp191*tmp268;
      const real_t tmp278 = tmp193*tmp270;
      const real_t tmp279 = tmp187*tmp272;
      elMat(0,0) = -tmp109*tmp98 - tmp14*tmp22 - tmp29*tmp38 - tmp48*tmp56 - tmp66*tmp75 - tmp82*tmp91;
      elMat(0,1) = 0.03483794312215821*tmp105*tmp106*tmp121*tmp15*ScalarCoeff0_6 - tmp110*tmp112 - tmp113*tmp115 + 0.063394346744256869*tmp116*tmp15*tmp52*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp117*tmp15*tmp71*tmp72*ScalarCoeff0_4 - tmp118*tmp120;
      elMat(0,2) = -tmp108*tmp133*tmp15 + tmp110*tmp123 - tmp113*tmp125 + tmp118*tmp131 - tmp127*tmp15*tmp55 + tmp129*tmp15*tmp74;
      elMat(0,3) = -tmp109*tmp161 - tmp137*tmp22 - tmp143*tmp38 - tmp146*tmp56 - tmp150*tmp75 - tmp156*tmp91;
      elMat(0,4) = -tmp109*tmp167 - tmp162*tmp22 - tmp163*tmp38 - tmp164*tmp56 - tmp165*tmp75 - tmp166*tmp91;
      elMat(0,5) = -tmp109*tmp159 - tmp168*tmp22 - tmp169*tmp38 - tmp170*tmp56 - tmp171*tmp75 - tmp172*tmp91;
      elMat(1,0) = 0.03483794312215821*tmp106*tmp15*tmp190*tmp98*ScalarCoeff0_6 - tmp14*tmp177 + 0.063394346744256869*tmp15*tmp183*tmp48*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp15*tmp186*tmp66*tmp72*ScalarCoeff0_4 - tmp180*tmp29 - tmp189*tmp82;
      elMat(1,1) = -0.068615338550096661*tmp111*tmp176 - 0.068615338550096813*tmp114*tmp179 - 0.035981865872867579*tmp116*tmp192 - 0.022076635451774004*tmp117*tmp194 - 0.2826341861233902*tmp119*tmp188 - 0.022076635451774192*tmp121*tmp196;
      elMat(1,2) = 0.049688106308562137*tmp122*tmp176 - 0.068615338550096633*tmp124*tmp179 + 0.049688106308562283*tmp126*tmp192 - 0.022076635451774126*tmp128*tmp194 + 0.078991214025706399*tmp130*tmp188 + 0.078991214025706594*tmp132*tmp196;
      elMat(1,3) = 0.03483794312215821*tmp106*tmp15*tmp161*tmp190*ScalarCoeff0_6 - tmp137*tmp177 - tmp143*tmp180 + 0.063394346744256869*tmp146*tmp15*tmp183*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp15*tmp150*tmp186*tmp72*ScalarCoeff0_4 - tmp156*tmp189;
      elMat(1,4) = 0.03483794312215821*tmp106*tmp15*tmp167*tmp190*ScalarCoeff0_6 + 0.063394346744256869*tmp15*tmp164*tmp183*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp15*tmp165*tmp186*tmp72*ScalarCoeff0_4 - tmp162*tmp177 - tmp163*tmp180 - tmp166*tmp189;
      elMat(1,5) = 0.03483794312215821*tmp159*tmp196 - tmp168*tmp177 - tmp169*tmp180 + 0.063394346744256869*tmp170*tmp192 + 0.034837943122158065*tmp171*tmp194 - tmp172*tmp189;
      elMat(2,0) = tmp14*tmp199 - tmp201*tmp29 - tmp204*tmp48 + tmp207*tmp66 + tmp209*tmp82 - tmp211*tmp98;
      elMat(2,1) = 0.049688106308562137*tmp111*tmp198 - 0.068615338550096633*tmp114*tmp200 + 0.049688106308562283*tmp116*tmp203 - 0.022076635451774126*tmp117*tmp206 + 0.078991214025706399*tmp119*tmp208 + 0.078991214025706594*tmp121*tmp210;
      elMat(2,2) = -0.035981865872867495*tmp122*tmp198 - 0.068615338550096466*tmp124*tmp200 - 0.068615338550096883*tmp126*tmp203 - 0.022076635451774251*tmp128*tmp206 - 0.022076635451774095*tmp130*tmp208 - 0.28263418612339042*tmp132*tmp210;
      elMat(2,3) = tmp137*tmp199 - tmp143*tmp201 - tmp146*tmp204 + tmp150*tmp207 + tmp156*tmp209 - tmp161*tmp211;
      elMat(2,4) = tmp162*tmp199 - tmp163*tmp201 - tmp164*tmp204 + tmp165*tmp207 + tmp166*tmp209 - tmp167*tmp211;
      elMat(2,5) = -tmp159*tmp211 + tmp168*tmp199 - tmp169*tmp201 - tmp170*tmp204 + tmp171*tmp207 + tmp172*tmp209;
      elMat(3,0) = -tmp14*tmp217 - tmp222*tmp29 - tmp227*tmp48 - tmp233*tmp66 - tmp238*tmp82 - tmp243*tmp98;
      elMat(3,1) = 0.03483794312215821*tmp106*tmp121*tmp15*tmp241*ScalarCoeff0_6 - tmp112*tmp244 - tmp115*tmp245 + 0.063394346744256869*tmp116*tmp15*tmp225*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp117*tmp15*tmp231*tmp72*ScalarCoeff0_4 - tmp120*tmp246;
      elMat(3,2) = tmp123*tmp244 - tmp125*tmp245 - tmp127*tmp191*tmp225 + tmp129*tmp193*tmp231 + tmp131*tmp246 - tmp133*tmp195*tmp241;
      elMat(3,3) = -tmp137*tmp217 - tmp143*tmp222 - tmp146*tmp227 - tmp150*tmp233 - tmp156*tmp238 - tmp161*tmp243;
      elMat(3,4) = -tmp162*tmp217 - tmp163*tmp222 - tmp164*tmp227 - tmp165*tmp233 - tmp166*tmp238 - tmp167*tmp243;
      elMat(3,5) = -tmp159*tmp243 - tmp168*tmp217 - tmp169*tmp222 - tmp170*tmp227 - tmp171*tmp233 - tmp172*tmp238;
      elMat(4,0) = -tmp14*tmp248 - tmp250*tmp29 - tmp252*tmp48 - tmp254*tmp66 - tmp256*tmp82 - tmp258*tmp98;
      elMat(4,1) = 0.03483794312215821*tmp106*tmp121*tmp15*tmp257*ScalarCoeff0_6 - tmp112*tmp259 - tmp115*tmp260 + 0.063394346744256869*tmp116*tmp15*tmp251*tmp53*ScalarCoeff0_3 + 0.034837943122158065*tmp117*tmp15*tmp253*tmp72*ScalarCoeff0_4 - tmp120*tmp261;
      elMat(4,2) = tmp123*tmp259 - tmp125*tmp260 - tmp127*tmp191*tmp251 + tmp129*tmp193*tmp253 + tmp131*tmp261 - tmp133*tmp195*tmp257;
      elMat(4,3) = -tmp137*tmp248 - tmp143*tmp250 - tmp146*tmp252 - tmp150*tmp254 - tmp156*tmp256 - tmp161*tmp258;
      elMat(4,4) = -tmp162*tmp248 - tmp163*tmp250 - tmp164*tmp252 - tmp165*tmp254 - tmp166*tmp256 - tmp167*tmp258;
      elMat(4,5) = -tmp159*tmp258 - tmp168*tmp248 - tmp169*tmp250 - tmp170*tmp252 - tmp171*tmp254 - tmp172*tmp256;
      elMat(5,0) = -tmp14*tmp265 - tmp263*tmp98 - tmp267*tmp29 - tmp269*tmp48 - tmp271*tmp66 - tmp273*tmp82;
      elMat(5,1) = -tmp112*tmp275 - tmp115*tmp276 + 0.063394346744256869*tmp116*tmp277 + 0.034837943122158065*tmp117*tmp278 - tmp120*tmp279 + 0.03483794312215821*tmp121*tmp274;
      elMat(5,2) = tmp123*tmp275 - tmp125*tmp276 - tmp127*tmp277 + tmp129*tmp278 + tmp131*tmp279 - tmp133*tmp274;
      elMat(5,3) = -tmp137*tmp265 - tmp143*tmp267 - tmp146*tmp269 - tmp150*tmp271 - tmp156*tmp273 - tmp161*tmp263;
      elMat(5,4) = -tmp162*tmp265 - tmp163*tmp267 - tmp164*tmp269 - tmp165*tmp271 - tmp166*tmp273 - tmp167*tmp263;
      elMat(5,5) = -tmp159*tmp263 - tmp168*tmp265 - tmp169*tmp267 - tmp170*tmp269 - tmp171*tmp271 - tmp172*tmp273;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = coords[0][0] - coords[2][0];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (tmp0*tmp1 - tmp2*tmp3);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(1, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp2*tmp8;
      const real_t tmp11 = tmp7*J_B_1(1, 1);
      const real_t tmp12 = tmp1*tmp11;
      const real_t tmp13 = tmp11*tmp3;
      const real_t tmp14 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp15 = 0.11169079483900564*tmp14;
      const real_t tmp16 = 0.78379396366386*tmp7*J_B_1(0, 0);
      const real_t tmp17 = (-tmp0*tmp16 + 0.78379396366386*tmp1*tmp4*tmp6*J_B_1(0, 1) - tmp16*tmp2 + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1))*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp18 = tmp15*tmp17;
      const real_t tmp19 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp20 = 1.0 / (tmp19);
      const real_t tmp21 = tmp20*tmp4;
      const real_t tmp22 = tmp21*J_B_2(1, 0);
      const real_t tmp23 = tmp0*tmp22;
      const real_t tmp24 = tmp2*tmp22;
      const real_t tmp25 = 0.56758792732771934*tmp21;
      const real_t tmp26 = tmp25*J_B_2(0, 0);
      const real_t tmp27 = tmp25*J_B_2(0, 1);
      const real_t tmp28 = (tmp0*tmp26 - tmp1*tmp27 + tmp2*tmp26 - tmp27*tmp3)*std::abs(tmp19)*ScalarCoeff0_2;
      const real_t tmp29 = tmp15*tmp28;
      const real_t tmp30 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp31 = 1.0 / (tmp30);
      const real_t tmp32 = tmp31*tmp4;
      const real_t tmp33 = tmp32*J_B_3(1, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp2*tmp33;
      const real_t tmp36 = tmp32*J_B_3(1, 1);
      const real_t tmp37 = tmp1*tmp36;
      const real_t tmp38 = tmp3*tmp36;
      const real_t tmp39 = 0.78379396366385934*tmp32*J_B_3(0, 0);
      const real_t tmp40 = -tmp0*tmp39 + 0.78379396366385934*tmp1*tmp31*tmp4*J_B_3(0, 1) - tmp2*tmp39 + 0.78379396366385934*tmp3*tmp31*tmp4*J_B_3(0, 1);
      const real_t tmp41 = std::abs(tmp30);
      const real_t tmp42 = tmp40*tmp41*ScalarCoeff0_3;
      const real_t tmp43 = tmp15*tmp42;
      const real_t tmp44 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp45 = 1.0 / (tmp44);
      const real_t tmp46 = tmp4*tmp45;
      const real_t tmp47 = tmp46*J_B_4(1, 0);
      const real_t tmp48 = tmp0*tmp47;
      const real_t tmp49 = tmp2*tmp47;
      const real_t tmp50 = tmp46*J_B_4(1, 1);
      const real_t tmp51 = tmp1*tmp50;
      const real_t tmp52 = tmp3*tmp50;
      const real_t tmp53 = 0.054975871827660817*tmp14;
      const real_t tmp54 = 2.2673902919218332*tmp46*J_B_4(0, 0);
      const real_t tmp55 = -tmp0*tmp54 + 2.2673902919218332*tmp1*tmp4*tmp45*J_B_4(0, 1) - tmp2*tmp54 + 2.2673902919218332*tmp3*tmp4*tmp45*J_B_4(0, 1);
      const real_t tmp56 = std::abs(tmp44);
      const real_t tmp57 = tmp55*tmp56*ScalarCoeff0_4;
      const real_t tmp58 = tmp53*tmp57;
      const real_t tmp59 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp60 = 1.0 / (tmp59);
      const real_t tmp61 = tmp4*tmp60;
      const real_t tmp62 = tmp61*J_B_5(1, 0);
      const real_t tmp63 = tmp0*tmp62;
      const real_t tmp64 = tmp2*tmp62;
      const real_t tmp65 = 0.63369514596091792*tmp61;
      const real_t tmp66 = tmp65*J_B_5(0, 0);
      const real_t tmp67 = tmp65*J_B_5(0, 1);
      const real_t tmp68 = (tmp0*tmp66 - tmp1*tmp67 + tmp2*tmp66 - tmp3*tmp67)*std::abs(tmp59)*ScalarCoeff0_5;
      const real_t tmp69 = tmp53*tmp68;
      const real_t tmp70 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp71 = 1.0 / (tmp70);
      const real_t tmp72 = tmp4*tmp71;
      const real_t tmp73 = tmp72*J_B_6(1, 0);
      const real_t tmp74 = tmp0*tmp73;
      const real_t tmp75 = tmp2*tmp73;
      const real_t tmp76 = 0.63369514596091747*tmp72;
      const real_t tmp77 = tmp76*J_B_6(0, 0);
      const real_t tmp78 = tmp76*J_B_6(0, 1);
      const real_t tmp79 = tmp0*tmp77 - tmp1*tmp78 + tmp2*tmp77 - tmp3*tmp78;
      const real_t tmp80 = std::abs(tmp70);
      const real_t tmp81 = tmp79*tmp80*ScalarCoeff0_6;
      const real_t tmp82 = tmp53*tmp81;
      const real_t tmp83 = tmp14*tmp17;
      const real_t tmp84 = tmp14*tmp28;
      const real_t tmp85 = tmp14*tmp68;
      const real_t tmp86 = 0.43241207267228021*tmp10;
      const real_t tmp87 = 0.43241207267228021*tmp12;
      const real_t tmp88 = -1.7837939636638598*tmp13 + 1.7837939636638598*tmp9;
      const real_t tmp89 = tmp21*J_B_2(1, 1);
      const real_t tmp90 = tmp1*tmp89;
      const real_t tmp91 = 1.7837939636638587*tmp24 - 1.7837939636638587*tmp90;
      const real_t tmp92 = tmp3*tmp89;
      const real_t tmp93 = 1.7837939636638607*tmp23 - 1.7837939636638607*tmp92;
      const real_t tmp94 = 1.7837939636638611*tmp35 - 1.7837939636638611*tmp37;
      const real_t tmp95 = 0.43241207267227955*tmp34 - 0.43241207267227955*tmp38;
      const real_t tmp96 = 0.36630485403908164*tmp49;
      const real_t tmp97 = 0.36630485403908164*tmp51;
      const real_t tmp98 = 0.36630485403908519*tmp48 - 0.36630485403908519*tmp52;
      const real_t tmp99 = tmp61*J_B_5(1, 1);
      const real_t tmp100 = tmp1*tmp99;
      const real_t tmp101 = -0.36630485403908386*tmp100 + 0.36630485403908386*tmp64;
      const real_t tmp102 = tmp3*tmp99;
      const real_t tmp103 = -3.2673902919218341*tmp102 + 3.2673902919218341*tmp63;
      const real_t tmp104 = tmp72*J_B_6(1, 1);
      const real_t tmp105 = tmp104*tmp3;
      const real_t tmp106 = -0.36630485403908253*tmp105 + 0.36630485403908253*tmp74;
      const real_t tmp107 = -3.2673902919218349*tmp1*tmp104 + 3.2673902919218349*tmp75;
      elMat(0,0) = -tmp18*(0.78379396366386*tmp10 - 0.78379396366386*tmp12 - 0.78379396366386*tmp13 + 0.78379396366386*tmp9) - tmp29*(0.56758792732771934*tmp1*tmp20*tmp4*J_B_2(1, 1) + 0.56758792732771934*tmp20*tmp3*tmp4*J_B_2(1, 1) - 0.56758792732771934*tmp23 - 0.56758792732771934*tmp24) - tmp43*(0.78379396366385934*tmp34 + 0.78379396366385934*tmp35 - 0.78379396366385934*tmp37 - 0.78379396366385934*tmp38) - tmp58*(2.2673902919218332*tmp48 + 2.2673902919218332*tmp49 - 2.2673902919218332*tmp51 - 2.2673902919218332*tmp52) - tmp69*(0.63369514596091792*tmp1*tmp4*tmp60*J_B_5(1, 1) + 0.63369514596091792*tmp3*tmp4*tmp60*J_B_5(1, 1) - 0.63369514596091792*tmp63 - 0.63369514596091792*tmp64) - tmp82*(0.63369514596091747*tmp1*tmp4*tmp71*J_B_6(1, 1) + 0.63369514596091747*tmp3*tmp4*tmp71*J_B_6(1, 1) - 0.63369514596091747*tmp74 - 0.63369514596091747*tmp75);
      elMat(0,1) = 0.063394346744256869*tmp14*tmp40*tmp41*(tmp1*tmp31*tmp4*J_B_3(1, 1) - tmp35)*ScalarCoeff0_3 + 0.034837943122158065*tmp14*tmp55*tmp56*(tmp1*tmp4*tmp45*J_B_4(1, 1) - tmp49)*ScalarCoeff0_4 + 0.03483794312215821*tmp14*tmp79*tmp80*(tmp1*tmp4*tmp71*J_B_6(1, 1) - tmp75)*ScalarCoeff0_6 - 0.087542570791631205*tmp83*(tmp1*tmp4*tmp6*J_B_1(1, 1) - tmp10) - 0.087542570791631302*tmp84*(tmp1*tmp20*tmp4*J_B_2(1, 1) - tmp24) - 0.12465175807197719*tmp85*(tmp1*tmp4*tmp60*J_B_5(1, 1) - tmp64);
      elMat(0,2) = -0.087542570791631358*tmp14*tmp42*(tmp3*tmp31*tmp4*J_B_3(1, 1) - tmp34) + 0.034837943122158259*tmp14*tmp57*(tmp3*tmp4*tmp45*J_B_4(1, 1) - tmp48) - 0.12465175807197725*tmp14*tmp81*(tmp3*tmp4*tmp71*J_B_6(1, 1) - tmp74) + 0.063394346744256799*tmp83*(tmp3*tmp4*tmp6*J_B_1(1, 1) - tmp9) - 0.08754257079163108*tmp84*(tmp20*tmp3*tmp4*J_B_2(1, 1) - tmp23) + 0.034837943122158141*tmp85*(tmp3*tmp4*tmp60*J_B_5(1, 1) - tmp63);
      elMat(0,3) = -tmp18*(-tmp86 + tmp87 - tmp88) - tmp29*(-tmp91 - tmp93) - tmp43*(-tmp94 - tmp95) - tmp58*(-tmp96 + tmp97 - tmp98) - tmp69*(-tmp101 - tmp103) - tmp82*(-tmp106 - tmp107);
      elMat(0,4) = -tmp18*(1.3513818909915796*tmp3*tmp4*tmp6*J_B_1(1, 1) + tmp86 - tmp87 - 1.3513818909915796*tmp9) - tmp29*(1.3513818909915782*tmp23 + tmp91 - 1.3513818909915782*tmp92) - tmp43*(1.7763568394002505e-15*tmp34 - 1.7763568394002505e-15*tmp38 + tmp94) - tmp58*(2.9010854378827515*tmp3*tmp4*tmp45*J_B_4(1, 1) - 2.9010854378827515*tmp48 + tmp96 - tmp97) - tmp69*(tmp101 - 1.7763568394002505e-15*tmp102 + 1.7763568394002505e-15*tmp63) - tmp82*(-2.9010854378827524*tmp105 + tmp107 + 2.9010854378827524*tmp74);
      elMat(0,5) = -tmp106*tmp82 - tmp18*(-2.2204460492503131e-16*tmp10 + 2.2204460492503131e-16*tmp12 + tmp88) - tmp29*(1.35138189099158*tmp24 - 1.35138189099158*tmp90 + tmp93) - tmp43*(-1.3513818909915798*tmp35 + 1.3513818909915798*tmp37 + tmp95) - tmp58*(-2.901085437882748*tmp49 + 2.901085437882748*tmp51 + tmp98) - tmp69*(-2.901085437882752*tmp100 + tmp103 + 2.901085437882752*tmp64);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp17*J_B_1(1, 1) - tmp18*J_B_1(1, 2) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp16*tmp22;
      const real_t tmp24 = tmp23*tmp7;
      const real_t tmp25 = tmp24*tmp6;
      const real_t tmp26 = tmp11*tmp4 - tmp14;
      const real_t tmp27 = tmp24*tmp26;
      const real_t tmp28 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp29 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp30 = tmp23*tmp29;
      const real_t tmp31 = tmp28*tmp30;
      const real_t tmp32 = tmp0*tmp8 - tmp15;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp35 = tmp24*tmp34;
      const real_t tmp36 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp37 = tmp30*tmp36;
      const real_t tmp38 = -tmp1*tmp10 + tmp13;
      const real_t tmp39 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp40 = tmp23*tmp39;
      const real_t tmp41 = tmp38*tmp40;
      const real_t tmp42 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp43 = tmp40*tmp42;
      const real_t tmp44 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp45 = tmp40*tmp44;
      const real_t tmp46 = 0.55279693041046674*tmp25 + 0.55279693041046674*tmp27 + 0.55279693041046674*tmp31 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp35 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45;
      const real_t tmp47 = -tmp18 + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp48 = tmp23*tmp47;
      const real_t tmp49 = tmp48*tmp6;
      const real_t tmp50 = tmp26*tmp48;
      const real_t tmp51 = tmp17 - tmp20;
      const real_t tmp52 = tmp23*tmp51;
      const real_t tmp53 = tmp28*tmp52;
      const real_t tmp54 = tmp32*tmp52;
      const real_t tmp55 = tmp34*tmp48;
      const real_t tmp56 = tmp36*tmp52;
      const real_t tmp57 = -tmp19 + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp58 = tmp23*tmp57;
      const real_t tmp59 = tmp38*tmp58;
      const real_t tmp60 = tmp42*tmp58;
      const real_t tmp61 = tmp44*tmp58;
      const real_t tmp62 = coords[0][0]*coords[1][1];
      const real_t tmp63 = coords[0][0]*coords[1][2];
      const real_t tmp64 = coords[2][1]*coords[3][2];
      const real_t tmp65 = coords[0][1]*coords[1][0];
      const real_t tmp66 = coords[0][1]*coords[1][2];
      const real_t tmp67 = coords[2][2]*coords[3][0];
      const real_t tmp68 = coords[0][2]*coords[1][0];
      const real_t tmp69 = coords[0][2]*coords[1][1];
      const real_t tmp70 = coords[2][0]*coords[3][1];
      const real_t tmp71 = coords[2][2]*coords[3][1];
      const real_t tmp72 = coords[2][0]*coords[3][2];
      const real_t tmp73 = coords[2][1]*coords[3][0];
      const real_t tmp74 = std::abs(coords[0][0]*tmp64 - coords[0][0]*tmp71 + coords[0][1]*tmp67 - coords[0][1]*tmp72 + coords[0][2]*tmp70 - coords[0][2]*tmp73 - coords[1][0]*tmp64 + coords[1][0]*tmp71 - coords[1][1]*tmp67 + coords[1][1]*tmp72 - coords[1][2]*tmp70 + coords[1][2]*tmp73 + coords[2][0]*tmp66 - coords[2][0]*tmp69 - coords[2][1]*tmp63 + coords[2][1]*tmp68 + coords[2][2]*tmp62 - coords[2][2]*tmp65 - coords[3][0]*tmp66 + coords[3][0]*tmp69 + coords[3][1]*tmp63 - coords[3][1]*tmp68 - coords[3][2]*tmp62 + coords[3][2]*tmp65);
      const real_t tmp75 = tmp74*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp76 = tmp75*(0.55279693041046674*tmp49 + 0.55279693041046674*tmp50 + 0.55279693041046674*tmp53 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp59 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61);
      const real_t tmp77 = 0.011829781572832234*tmp76;
      const real_t tmp78 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp79 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp80 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp81 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp82 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp83 = tmp79*J_B_10(1, 1) - tmp80*J_B_10(1, 2) - tmp81*J_B_10(1, 0) - tmp82*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp84 = 1.0 / (tmp83);
      const real_t tmp85 = tmp16*tmp84;
      const real_t tmp86 = tmp78*tmp85;
      const real_t tmp87 = tmp6*tmp86;
      const real_t tmp88 = tmp26*tmp86;
      const real_t tmp89 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp90 = tmp85*tmp89;
      const real_t tmp91 = tmp28*tmp90;
      const real_t tmp92 = tmp32*tmp90;
      const real_t tmp93 = tmp34*tmp86;
      const real_t tmp94 = tmp36*tmp90;
      const real_t tmp95 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp96 = tmp85*tmp95;
      const real_t tmp97 = tmp38*tmp96;
      const real_t tmp98 = tmp42*tmp96;
      const real_t tmp99 = tmp44*tmp96;
      const real_t tmp100 = 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88 + 0.60805118540288361*tmp91 + 0.60805118540288361*tmp92 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp97 + 0.60805118540288361*tmp98 + 0.60805118540288361*tmp99;
      const real_t tmp101 = -tmp80 + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp102 = tmp101*tmp85;
      const real_t tmp103 = tmp102*tmp6;
      const real_t tmp104 = tmp102*tmp26;
      const real_t tmp105 = tmp79 - tmp82;
      const real_t tmp106 = tmp105*tmp85;
      const real_t tmp107 = tmp106*tmp28;
      const real_t tmp108 = tmp106*tmp32;
      const real_t tmp109 = tmp102*tmp34;
      const real_t tmp110 = tmp106*tmp36;
      const real_t tmp111 = -tmp81 + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp112 = tmp111*tmp85;
      const real_t tmp113 = tmp112*tmp38;
      const real_t tmp114 = tmp112*tmp42;
      const real_t tmp115 = tmp112*tmp44;
      const real_t tmp116 = tmp74*std::abs(tmp83)*ScalarCoeff0_10;
      const real_t tmp117 = tmp116*(0.60805118540288361*tmp103 + 0.60805118540288361*tmp104 + 0.60805118540288361*tmp107 + 0.60805118540288361*tmp108 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp113 + 0.60805118540288361*tmp114 + 0.60805118540288361*tmp115);
      const real_t tmp118 = 0.0061414854617707626*tmp117;
      const real_t tmp119 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp120 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp121 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp122 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp123 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp124 = tmp120*J_B_11(1, 1) - tmp121*J_B_11(1, 2) - tmp122*J_B_11(1, 0) - tmp123*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp125 = 1.0 / (tmp124);
      const real_t tmp126 = tmp125*tmp16;
      const real_t tmp127 = tmp119*tmp126;
      const real_t tmp128 = tmp127*tmp6;
      const real_t tmp129 = tmp127*tmp26;
      const real_t tmp130 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp131 = tmp126*tmp130;
      const real_t tmp132 = tmp131*tmp28;
      const real_t tmp133 = tmp131*tmp32;
      const real_t tmp134 = tmp127*tmp34;
      const real_t tmp135 = tmp131*tmp36;
      const real_t tmp136 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp137 = tmp126*tmp136;
      const real_t tmp138 = tmp137*tmp38;
      const real_t tmp139 = tmp137*tmp42;
      const real_t tmp140 = tmp137*tmp44;
      const real_t tmp141 = -2.0850189307815055*tmp128 - 2.0850189307815055*tmp129 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp133 - 2.0850189307815055*tmp134 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp139 - 2.0850189307815055*tmp140;
      const real_t tmp142 = -tmp121 + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp143 = tmp126*tmp142;
      const real_t tmp144 = tmp143*tmp6;
      const real_t tmp145 = tmp143*tmp26;
      const real_t tmp146 = tmp120 - tmp123;
      const real_t tmp147 = tmp126*tmp146;
      const real_t tmp148 = tmp147*tmp28;
      const real_t tmp149 = tmp147*tmp32;
      const real_t tmp150 = tmp143*tmp34;
      const real_t tmp151 = tmp147*tmp36;
      const real_t tmp152 = -tmp122 + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp153 = tmp126*tmp152;
      const real_t tmp154 = tmp153*tmp38;
      const real_t tmp155 = tmp153*tmp42;
      const real_t tmp156 = tmp153*tmp44;
      const real_t tmp157 = tmp74*std::abs(tmp124)*ScalarCoeff0_11;
      const real_t tmp158 = tmp157*(-2.0850189307815055*tmp144 - 2.0850189307815055*tmp145 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp149 - 2.0850189307815055*tmp150 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp155 - 2.0850189307815055*tmp156);
      const real_t tmp159 = 0.0043612323249822204*tmp158;
      const real_t tmp160 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp161 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp162 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp163 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp164 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp165 = tmp161*J_B_2(1, 1) - tmp162*J_B_2(1, 2) - tmp163*J_B_2(1, 0) - tmp164*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp166 = 1.0 / (tmp165);
      const real_t tmp167 = tmp16*tmp166;
      const real_t tmp168 = tmp160*tmp167;
      const real_t tmp169 = tmp168*tmp6;
      const real_t tmp170 = tmp168*tmp26;
      const real_t tmp171 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp172 = tmp167*tmp171;
      const real_t tmp173 = tmp172*tmp28;
      const real_t tmp174 = tmp172*tmp32;
      const real_t tmp175 = tmp168*tmp34;
      const real_t tmp176 = tmp172*tmp36;
      const real_t tmp177 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp178 = tmp167*tmp177;
      const real_t tmp179 = tmp178*tmp38;
      const real_t tmp180 = tmp178*tmp42;
      const real_t tmp181 = tmp178*tmp44;
      const real_t tmp182 = -0.29317593934991559*tmp169 - 0.29317593934991559*tmp170 - 0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp175 - 0.29317593934991559*tmp176 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp181;
      const real_t tmp183 = -tmp162 + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp184 = tmp167*tmp183;
      const real_t tmp185 = tmp184*tmp6;
      const real_t tmp186 = tmp184*tmp26;
      const real_t tmp187 = tmp161 - tmp164;
      const real_t tmp188 = tmp167*tmp187;
      const real_t tmp189 = tmp188*tmp28;
      const real_t tmp190 = tmp188*tmp32;
      const real_t tmp191 = tmp184*tmp34;
      const real_t tmp192 = tmp188*tmp36;
      const real_t tmp193 = -tmp163 + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp194 = tmp167*tmp193;
      const real_t tmp195 = tmp194*tmp38;
      const real_t tmp196 = tmp194*tmp42;
      const real_t tmp197 = tmp194*tmp44;
      const real_t tmp198 = tmp74*std::abs(tmp165)*ScalarCoeff0_2;
      const real_t tmp199 = tmp198*(-0.29317593934991559*tmp185 - 0.29317593934991559*tmp186 - 0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp191 - 0.29317593934991559*tmp192 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp197);
      const real_t tmp200 = 0.012248248047610821*tmp199;
      const real_t tmp201 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp202 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp203 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp204 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp205 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp206 = tmp202*J_B_3(1, 1) - tmp203*J_B_3(1, 2) - tmp204*J_B_3(1, 0) - tmp205*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp207 = 1.0 / (tmp206);
      const real_t tmp208 = tmp16*tmp207;
      const real_t tmp209 = tmp201*tmp208;
      const real_t tmp210 = tmp209*tmp6;
      const real_t tmp211 = tmp209*tmp26;
      const real_t tmp212 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp213 = tmp208*tmp212;
      const real_t tmp214 = tmp213*tmp28;
      const real_t tmp215 = tmp213*tmp32;
      const real_t tmp216 = tmp209*tmp34;
      const real_t tmp217 = tmp213*tmp36;
      const real_t tmp218 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp219 = tmp208*tmp218;
      const real_t tmp220 = tmp219*tmp38;
      const real_t tmp221 = tmp219*tmp42;
      const real_t tmp222 = tmp219*tmp44;
      const real_t tmp223 = 0.56151037867223397*tmp210 + 0.56151037867223397*tmp211 + 0.56151037867223397*tmp214 + 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp217 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222;
      const real_t tmp224 = -tmp203 + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp225 = tmp208*tmp224;
      const real_t tmp226 = tmp225*tmp6;
      const real_t tmp227 = tmp225*tmp26;
      const real_t tmp228 = tmp202 - tmp205;
      const real_t tmp229 = tmp208*tmp228;
      const real_t tmp230 = tmp229*tmp28;
      const real_t tmp231 = tmp229*tmp32;
      const real_t tmp232 = tmp225*tmp34;
      const real_t tmp233 = tmp229*tmp36;
      const real_t tmp234 = -tmp204 + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp235 = tmp208*tmp234;
      const real_t tmp236 = tmp235*tmp38;
      const real_t tmp237 = tmp235*tmp42;
      const real_t tmp238 = tmp235*tmp44;
      const real_t tmp239 = tmp74*std::abs(tmp206)*ScalarCoeff0_3;
      const real_t tmp240 = tmp239*(0.56151037867223397*tmp226 + 0.56151037867223397*tmp227 + 0.56151037867223397*tmp230 + 0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp233 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238);
      const real_t tmp241 = 0.017219568446249611*tmp240;
      const real_t tmp242 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp243 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp244 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp245 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp246 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp247 = tmp243*J_B_4(1, 1) - tmp244*J_B_4(1, 2) - tmp245*J_B_4(1, 0) - tmp246*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp248 = 1.0 / (tmp247);
      const real_t tmp249 = tmp16*tmp248;
      const real_t tmp250 = tmp242*tmp249;
      const real_t tmp251 = tmp250*tmp6;
      const real_t tmp252 = tmp250*tmp26;
      const real_t tmp253 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp254 = tmp249*tmp253;
      const real_t tmp255 = tmp254*tmp28;
      const real_t tmp256 = tmp254*tmp32;
      const real_t tmp257 = tmp250*tmp34;
      const real_t tmp258 = tmp254*tmp36;
      const real_t tmp259 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp260 = tmp249*tmp259;
      const real_t tmp261 = tmp260*tmp38;
      const real_t tmp262 = tmp260*tmp42;
      const real_t tmp263 = tmp260*tmp44;
      const real_t tmp264 = -0.31389282688815401*tmp251 - 0.31389282688815401*tmp252 - 0.31389282688815401*tmp255 - 0.31389282688815401*tmp256 - 0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263;
      const real_t tmp265 = -tmp244 + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp266 = tmp249*tmp265;
      const real_t tmp267 = tmp266*tmp6;
      const real_t tmp268 = tmp26*tmp266;
      const real_t tmp269 = tmp243 - tmp246;
      const real_t tmp270 = tmp249*tmp269;
      const real_t tmp271 = tmp270*tmp28;
      const real_t tmp272 = tmp270*tmp32;
      const real_t tmp273 = tmp266*tmp34;
      const real_t tmp274 = tmp270*tmp36;
      const real_t tmp275 = -tmp245 + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp276 = tmp249*tmp275;
      const real_t tmp277 = tmp276*tmp38;
      const real_t tmp278 = tmp276*tmp42;
      const real_t tmp279 = tmp276*tmp44;
      const real_t tmp280 = tmp74*std::abs(tmp247)*ScalarCoeff0_4;
      const real_t tmp281 = tmp280*(-0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp271 - 0.31389282688815401*tmp272 - 0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279);
      const real_t tmp282 = 0.021490090227737114*tmp281;
      const real_t tmp283 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp284 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp285 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp286 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp287 = tmp283*J_B_5(1, 1) - tmp284*J_B_5(1, 2) - tmp285*J_B_5(1, 0) - tmp286*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp288 = tmp16/tmp287;
      const real_t tmp289 = tmp288*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = tmp26*tmp289;
      const real_t tmp292 = tmp288*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp293 = tmp28*tmp292;
      const real_t tmp294 = tmp292*tmp32;
      const real_t tmp295 = tmp289*tmp34;
      const real_t tmp296 = tmp292*tmp36;
      const real_t tmp297 = tmp288*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp298 = tmp297*tmp38;
      const real_t tmp299 = tmp297*tmp42;
      const real_t tmp300 = tmp297*tmp44;
      const real_t tmp301 = 0.99043597017024343*tmp290 + 0.99043597017024343*tmp291 + 0.99043597017024343*tmp293 + 0.99043597017024343*tmp294 + 0.99043597017024343*tmp295 + 0.99043597017024343*tmp296 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp299 + 0.99043597017024343*tmp300;
      const real_t tmp302 = tmp288*(-tmp284 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp303 = tmp302*tmp6;
      const real_t tmp304 = tmp26*tmp302;
      const real_t tmp305 = tmp288*(tmp283 - tmp286);
      const real_t tmp306 = tmp28*tmp305;
      const real_t tmp307 = tmp305*tmp32;
      const real_t tmp308 = tmp302*tmp34;
      const real_t tmp309 = tmp305*tmp36;
      const real_t tmp310 = tmp288*(-tmp285 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp311 = tmp310*tmp38;
      const real_t tmp312 = tmp310*tmp42;
      const real_t tmp313 = tmp310*tmp44;
      const real_t tmp314 = tmp74*std::abs(tmp287)*ScalarCoeff0_5;
      const real_t tmp315 = tmp314*(0.99043597017024343*tmp303 + 0.99043597017024343*tmp304 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307 + 0.99043597017024343*tmp308 + 0.99043597017024343*tmp309 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp312 + 0.99043597017024343*tmp313);
      const real_t tmp316 = 0.0084625239161731543*tmp315;
      const real_t tmp317 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp318 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp319 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp320 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp321 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp322 = tmp318*J_B_6(1, 1) - tmp319*J_B_6(1, 2) - tmp320*J_B_6(1, 0) - tmp321*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp323 = 1.0 / (tmp322);
      const real_t tmp324 = tmp16*tmp323;
      const real_t tmp325 = tmp317*tmp324;
      const real_t tmp326 = tmp325*tmp6;
      const real_t tmp327 = tmp26*tmp325;
      const real_t tmp328 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp329 = tmp324*tmp328;
      const real_t tmp330 = tmp28*tmp329;
      const real_t tmp331 = tmp32*tmp329;
      const real_t tmp332 = tmp325*tmp34;
      const real_t tmp333 = tmp329*tmp36;
      const real_t tmp334 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp335 = tmp324*tmp334;
      const real_t tmp336 = tmp335*tmp38;
      const real_t tmp337 = tmp335*tmp42;
      const real_t tmp338 = tmp335*tmp44;
      const real_t tmp339 = -1.2518910405721839*tmp326 - 1.2518910405721839*tmp327 - 1.2518910405721839*tmp330 - 1.2518910405721839*tmp331 - 1.2518910405721839*tmp332 - 1.2518910405721839*tmp333 - 1.2518910405721839*tmp336 - 1.2518910405721839*tmp337 - 1.2518910405721839*tmp338;
      const real_t tmp340 = -tmp319 + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp341 = tmp324*tmp340;
      const real_t tmp342 = tmp341*tmp6;
      const real_t tmp343 = tmp26*tmp341;
      const real_t tmp344 = tmp318 - tmp321;
      const real_t tmp345 = tmp324*tmp344;
      const real_t tmp346 = tmp28*tmp345;
      const real_t tmp347 = tmp32*tmp345;
      const real_t tmp348 = tmp34*tmp341;
      const real_t tmp349 = tmp345*tmp36;
      const real_t tmp350 = -tmp320 + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp351 = tmp324*tmp350;
      const real_t tmp352 = tmp351*tmp38;
      const real_t tmp353 = tmp351*tmp42;
      const real_t tmp354 = tmp351*tmp44;
      const real_t tmp355 = tmp74*std::abs(tmp322)*ScalarCoeff0_6;
      const real_t tmp356 = tmp355*(-1.2518910405721839*tmp342 - 1.2518910405721839*tmp343 - 1.2518910405721839*tmp346 - 1.2518910405721839*tmp347 - 1.2518910405721839*tmp348 - 1.2518910405721839*tmp349 - 1.2518910405721839*tmp352 - 1.2518910405721839*tmp353 - 1.2518910405721839*tmp354);
      const real_t tmp357 = 0.0088251866742250357*tmp356;
      const real_t tmp358 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp359 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp360 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp361 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp362 = tmp358*J_B_7(1, 1) - tmp359*J_B_7(1, 2) - tmp360*J_B_7(1, 0) - tmp361*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp363 = tmp16/tmp362;
      const real_t tmp364 = tmp363*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp365 = tmp364*tmp6;
      const real_t tmp366 = tmp26*tmp364;
      const real_t tmp367 = tmp363*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp368 = tmp28*tmp367;
      const real_t tmp369 = tmp32*tmp367;
      const real_t tmp370 = tmp34*tmp364;
      const real_t tmp371 = tmp36*tmp367;
      const real_t tmp372 = tmp363*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp373 = tmp372*tmp38;
      const real_t tmp374 = tmp372*tmp42;
      const real_t tmp375 = tmp372*tmp44;
      const real_t tmp376 = 0.77270393148826533*tmp365 + 0.77270393148826533*tmp366 + 0.77270393148826533*tmp368 + 0.77270393148826533*tmp369 + 0.77270393148826533*tmp370 + 0.77270393148826533*tmp371 + 0.77270393148826533*tmp373 + 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375;
      const real_t tmp377 = tmp363*(-tmp359 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp378 = tmp377*tmp6;
      const real_t tmp379 = tmp26*tmp377;
      const real_t tmp380 = tmp363*(tmp358 - tmp361);
      const real_t tmp381 = tmp28*tmp380;
      const real_t tmp382 = tmp32*tmp380;
      const real_t tmp383 = tmp34*tmp377;
      const real_t tmp384 = tmp36*tmp380;
      const real_t tmp385 = tmp363*(-tmp360 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp386 = tmp38*tmp385;
      const real_t tmp387 = tmp385*tmp42;
      const real_t tmp388 = tmp385*tmp44;
      const real_t tmp389 = tmp74*std::abs(tmp362)*ScalarCoeff0_7;
      const real_t tmp390 = tmp389*(0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp381 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384 + 0.77270393148826533*tmp386 + 0.77270393148826533*tmp387 + 0.77270393148826533*tmp388);
      const real_t tmp391 = 0.0077188851041817101*tmp390;
      const real_t tmp392 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp393 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp394 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp395 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp396 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp397 = tmp393*J_B_8(1, 1) - tmp394*J_B_8(1, 2) - tmp395*J_B_8(1, 0) - tmp396*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp398 = 1.0 / (tmp397);
      const real_t tmp399 = tmp16*tmp398;
      const real_t tmp400 = tmp392*tmp399;
      const real_t tmp401 = tmp400*tmp6;
      const real_t tmp402 = tmp26*tmp400;
      const real_t tmp403 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp404 = tmp399*tmp403;
      const real_t tmp405 = tmp28*tmp404;
      const real_t tmp406 = tmp32*tmp404;
      const real_t tmp407 = tmp34*tmp400;
      const real_t tmp408 = tmp36*tmp404;
      const real_t tmp409 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp410 = tmp399*tmp409;
      const real_t tmp411 = tmp38*tmp410;
      const real_t tmp412 = tmp410*tmp42;
      const real_t tmp413 = tmp410*tmp44;
      const real_t tmp414 = -0.9184440441026207*tmp401 - 0.9184440441026207*tmp402 - 0.9184440441026207*tmp405 - 0.9184440441026207*tmp406 - 0.9184440441026207*tmp407 - 0.9184440441026207*tmp408 - 0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp413;
      const real_t tmp415 = -tmp394 + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp416 = tmp399*tmp415;
      const real_t tmp417 = tmp416*tmp6;
      const real_t tmp418 = tmp26*tmp416;
      const real_t tmp419 = tmp393 - tmp396;
      const real_t tmp420 = tmp399*tmp419;
      const real_t tmp421 = tmp28*tmp420;
      const real_t tmp422 = tmp32*tmp420;
      const real_t tmp423 = tmp34*tmp416;
      const real_t tmp424 = tmp36*tmp420;
      const real_t tmp425 = -tmp395 + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp426 = tmp399*tmp425;
      const real_t tmp427 = tmp38*tmp426;
      const real_t tmp428 = tmp42*tmp426;
      const real_t tmp429 = tmp426*tmp44;
      const real_t tmp430 = tmp74*std::abs(tmp397)*ScalarCoeff0_8;
      const real_t tmp431 = tmp430*(-0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423 - 0.9184440441026207*tmp424 - 0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp429);
      const real_t tmp432 = 0.006659242794062166*tmp431;
      const real_t tmp433 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp434 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp435 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp436 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp437 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp438 = tmp434*J_B_9(1, 1) - tmp435*J_B_9(1, 2) - tmp436*J_B_9(1, 0) - tmp437*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp439 = 1.0 / (tmp438);
      const real_t tmp440 = tmp16*tmp439;
      const real_t tmp441 = tmp433*tmp440;
      const real_t tmp442 = tmp441*tmp6;
      const real_t tmp443 = tmp26*tmp441;
      const real_t tmp444 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp445 = tmp440*tmp444;
      const real_t tmp446 = tmp28*tmp445;
      const real_t tmp447 = tmp32*tmp445;
      const real_t tmp448 = tmp34*tmp441;
      const real_t tmp449 = tmp36*tmp445;
      const real_t tmp450 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp451 = tmp440*tmp450;
      const real_t tmp452 = tmp38*tmp451;
      const real_t tmp453 = tmp42*tmp451;
      const real_t tmp454 = tmp44*tmp451;
      const real_t tmp455 = 0.37454442704241986*tmp442 + 0.37454442704241986*tmp443 + 0.37454442704241986*tmp446 + 0.37454442704241986*tmp447 + 0.37454442704241986*tmp448 + 0.37454442704241986*tmp449 + 0.37454442704241986*tmp452 + 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454;
      const real_t tmp456 = -tmp435 + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp457 = tmp440*tmp456;
      const real_t tmp458 = tmp457*tmp6;
      const real_t tmp459 = tmp26*tmp457;
      const real_t tmp460 = tmp434 - tmp437;
      const real_t tmp461 = tmp440*tmp460;
      const real_t tmp462 = tmp28*tmp461;
      const real_t tmp463 = tmp32*tmp461;
      const real_t tmp464 = tmp34*tmp457;
      const real_t tmp465 = tmp36*tmp461;
      const real_t tmp466 = -tmp436 + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp467 = tmp440*tmp466;
      const real_t tmp468 = tmp38*tmp467;
      const real_t tmp469 = tmp42*tmp467;
      const real_t tmp470 = tmp44*tmp467;
      const real_t tmp471 = tmp74*std::abs(tmp438)*ScalarCoeff0_9;
      const real_t tmp472 = tmp471*(0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp462 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465 + 0.37454442704241986*tmp468 + 0.37454442704241986*tmp469 + 0.37454442704241986*tmp470);
      const real_t tmp473 = 0.0061548665412862651*tmp472;
      const real_t tmp474 = tmp35 + tmp37 + tmp45;
      const real_t tmp475 = 0.0072301427194886381*tmp474;
      const real_t tmp476 = tmp93 + tmp94 + tmp99;
      const real_t tmp477 = 0.012344594760863713*tmp476;
      const real_t tmp478 = tmp134 + tmp135 + tmp140;
      const real_t tmp479 = 0.0036548782978011126*tmp478;
      const real_t tmp480 = tmp175 + tmp176 + tmp181;
      const real_t tmp481 = 0.010799549999884401*tmp480;
      const real_t tmp482 = tmp216 + tmp217 + tmp222;
      const real_t tmp483 = 0.012584765868454714*tmp482;
      const real_t tmp484 = tmp257 + tmp258 + tmp263;
      const real_t tmp485 = 0.00083582139204094858*tmp484;
      const real_t tmp486 = tmp295 + tmp296 + tmp300;
      const real_t tmp487 = 0.0040819365333192512*tmp486;
      const real_t tmp488 = tmp332 + tmp333 + tmp338;
      const real_t tmp489 = 0.0045346636251092122*tmp488;
      const real_t tmp490 = tmp370 + tmp371 + tmp375;
      const real_t tmp491 = 0.0061987549215557864*tmp490;
      const real_t tmp492 = tmp407 + tmp408 + tmp413;
      const real_t tmp493 = 0.0045087419239184514*tmp492;
      const real_t tmp494 = tmp448 + tmp449 + tmp454;
      const real_t tmp495 = 0.0044998649071490461*tmp494;
      const real_t tmp496 = tmp27 + tmp33 + tmp43;
      const real_t tmp497 = 0.0067853652681886352*tmp496;
      const real_t tmp498 = tmp88 + tmp92 + tmp98;
      const real_t tmp499 = 0.0041416969702195786*tmp498;
      const real_t tmp500 = tmp129 + tmp133 + tmp139;
      const real_t tmp501 = 0.0013137068218914037*tmp500;
      const real_t tmp502 = tmp170 + tmp174 + tmp180;
      const real_t tmp503 = 0.0038818597778972029*tmp502;
      const real_t tmp504 = tmp211 + tmp215 + tmp221;
      const real_t tmp505 = 0.010066964965131993*tmp504;
      const real_t tmp506 = tmp252 + tmp256 + tmp262;
      const real_t tmp507 = 0.0046804043242939224*tmp506;
      const real_t tmp508 = tmp291 + tmp294 + tmp299;
      const real_t tmp509 = 0.0097490714046835261*tmp508;
      const real_t tmp510 = tmp327 + tmp331 + tmp337;
      const real_t tmp511 = 0.0085077884791842431*tmp510;
      const real_t tmp512 = tmp366 + tmp369 + tmp374;
      const real_t tmp513 = 0.0056487878897383461*tmp512;
      const real_t tmp514 = tmp402 + tmp406 + tmp412;
      const real_t tmp515 = 0.005238393734043144*tmp514;
      const real_t tmp516 = tmp443 + tmp447 + tmp453;
      const real_t tmp517 = 0.012093792842045984*tmp516;
      const real_t tmp518 = tmp25 + tmp31 + tmp41;
      const real_t tmp519 = 0.020554974928565235*tmp518;
      const real_t tmp520 = tmp87 + tmp91 + tmp97;
      const real_t tmp521 = 0.0044685602754798454*tmp520;
      const real_t tmp522 = tmp128 + tmp132 + tmp138;
      const real_t tmp523 = 0.0041246668394316508*tmp522;
      const real_t tmp524 = tmp169 + tmp173 + tmp179;
      const real_t tmp525 = 0.0033267985952381263*tmp524;
      const real_t tmp526 = tmp210 + tmp214 + tmp220;
      const real_t tmp527 = 0.0071511654955033511*tmp526;
      const real_t tmp528 = tmp251 + tmp255 + tmp261;
      const real_t tmp529 = 0.010590168103918869*tmp528;
      const real_t tmp530 = tmp290 + tmp293 + tmp298;
      const real_t tmp531 = 0.0027144532136395704*tmp530;
      const real_t tmp532 = tmp326 + tmp330 + tmp336;
      const real_t tmp533 = 0.0019942799754541058*tmp532;
      const real_t tmp534 = tmp365 + tmp368 + tmp373;
      const real_t tmp535 = 0.005883129944586717*tmp534;
      const real_t tmp536 = tmp401 + tmp405 + tmp411;
      const real_t tmp537 = 0.0053864900723149976*tmp536;
      const real_t tmp538 = tmp442 + tmp446 + tmp452;
      const real_t tmp539 = 0.0052886569726683132*tmp538;
      const real_t tmp540 = 2.7375616618121592*tmp27 + 2.7375616618121592*tmp33 + 2.7375616618121592*tmp43;
      const real_t tmp541 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp31 + 0.42641669024797446*tmp41;
      const real_t tmp542 = tmp540 + tmp541;
      const real_t tmp543 = 0.2723974837528258*tmp88 + 0.2723974837528258*tmp92 + 0.2723974837528258*tmp98;
      const real_t tmp544 = 0.3256196736114374*tmp87 + 0.3256196736114374*tmp91 + 0.3256196736114374*tmp97;
      const real_t tmp545 = tmp543 + tmp544;
      const real_t tmp546 = 0.054242807519210512*tmp129 + 0.054242807519210512*tmp133 + 0.054242807519210512*tmp139;
      const real_t tmp547 = 0.69877623478892303*tmp128 + 0.69877623478892303*tmp132 + 0.69877623478892303*tmp138;
      const real_t tmp548 = tmp546 + tmp547;
      const real_t tmp549 = 1.2716142408535775*tmp170 + 1.2716142408535775*tmp174 + 1.2716142408535775*tmp180;
      const real_t tmp550 = 1.3169318389705873*tmp169 + 1.3169318389705873*tmp173 + 1.3169318389705873*tmp179;
      const real_t tmp551 = tmp549 + tmp550;
      const real_t tmp552 = 1.4152929568371884*tmp211 + 1.4152929568371884*tmp215 + 1.4152929568371884*tmp221;
      const real_t tmp553 = 0.41537646564397157*tmp210 + 0.41537646564397157*tmp214 + 0.41537646564397157*tmp220;
      const real_t tmp554 = tmp552 + tmp553;
      const real_t tmp555 = 0.50720690366156718*tmp252 + 0.50720690366156718*tmp256 + 0.50720690366156718*tmp262;
      const real_t tmp556 = 1.2177936097379878*tmp251 + 1.2177936097379878*tmp255 + 1.2177936097379878*tmp261;
      const real_t tmp557 = tmp555 + tmp556;
      const real_t tmp558 = 1.3207616593498592*tmp291 + 1.3207616593498592*tmp294 + 1.3207616593498592*tmp299;
      const real_t tmp559 = 2.1520288156647434*tmp290 + 2.1520288156647434*tmp293 + 2.1520288156647434*tmp298;
      const real_t tmp560 = tmp558 + tmp559;
      const real_t tmp561 = 1.2259759537187613*tmp327 + 1.2259759537187613*tmp331 + 1.2259759537187613*tmp337;
      const real_t tmp562 = 0.035965040373342916*tmp326 + 0.035965040373342916*tmp330 + 0.035965040373342916*tmp336;
      const real_t tmp563 = tmp561 + tmp562;
      const real_t tmp564 = 0.23782646519773576*tmp366 + 0.23782646519773576*tmp369 + 0.23782646519773576*tmp374;
      const real_t tmp565 = 1.7318139619254227*tmp365 + 1.7318139619254227*tmp368 + 1.7318139619254227*tmp373;
      const real_t tmp566 = tmp564 + tmp565;
      const real_t tmp567 = 0.19112574223634571*tmp402 + 0.19112574223634571*tmp406 + 0.19112574223634571*tmp412;
      const real_t tmp568 = 0.21336495814298084*tmp401 + 0.21336495814298084*tmp405 + 0.21336495814298084*tmp411;
      const real_t tmp569 = tmp567 + tmp568;
      const real_t tmp570 = 0.14073571909439453*tmp443 + 0.14073571909439453*tmp447 + 0.14073571909439453*tmp453;
      const real_t tmp571 = 2.9649155283744921*tmp442 + 2.9649155283744921*tmp446 + 2.9649155283744921*tmp452;
      const real_t tmp572 = tmp570 + tmp571;
      const real_t tmp573 = 2.7375616618121592*tmp35 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp45;
      const real_t tmp574 = 0.38881857835033307*tmp25 + 0.38881857835033307*tmp31 + 0.38881857835033307*tmp41;
      const real_t tmp575 = tmp573 + tmp574;
      const real_t tmp576 = 0.2723974837528258*tmp93 + 0.2723974837528258*tmp94 + 0.2723974837528258*tmp99;
      const real_t tmp577 = 3.0100340280386204*tmp87 + 3.0100340280386204*tmp91 + 3.0100340280386204*tmp97;
      const real_t tmp578 = tmp576 + tmp577;
      const real_t tmp579 = 0.054242807519210512*tmp134 + 0.054242807519210512*tmp135 + 0.054242807519210512*tmp140;
      const real_t tmp580 = 0.16196202691036121*tmp128 + 0.16196202691036121*tmp132 + 0.16196202691036121*tmp138;
      const real_t tmp581 = tmp579 + tmp580;
      const real_t tmp582 = 1.2716142408535775*tmp175 + 1.2716142408535775*tmp176 + 1.2716142408535775*tmp181;
      const real_t tmp583 = 0.11827798082591956*tmp169 + 0.11827798082591956*tmp173 + 0.11827798082591956*tmp179;
      const real_t tmp584 = tmp582 + tmp583;
      const real_t tmp585 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp217 + 1.4152929568371884*tmp222;
      const real_t tmp586 = 1.730840956191074*tmp210 + 1.730840956191074*tmp214 + 1.730840956191074*tmp220;
      const real_t tmp587 = tmp585 + tmp586;
      const real_t tmp588 = 0.50720690366156718*tmp257 + 0.50720690366156718*tmp258 + 0.50720690366156718*tmp263;
      const real_t tmp589 = 0.96110665971229103*tmp251 + 0.96110665971229103*tmp255 + 0.96110665971229103*tmp261;
      const real_t tmp590 = tmp588 + tmp589;
      const real_t tmp591 = 1.3207616593498592*tmp295 + 1.3207616593498592*tmp296 + 1.3207616593498592*tmp300;
      const real_t tmp592 = 0.51764549515564062*tmp290 + 0.51764549515564062*tmp293 + 0.51764549515564062*tmp298;
      const real_t tmp593 = tmp591 + tmp592;
      const real_t tmp594 = 1.2259759537187613*tmp332 + 1.2259759537187613*tmp333 + 1.2259759537187613*tmp338;
      const real_t tmp595 = 0.48616796533571183*tmp326 + 0.48616796533571183*tmp330 + 0.48616796533571183*tmp336;
      const real_t tmp596 = tmp594 + tmp595;
      const real_t tmp597 = 0.23782646519773576*tmp370 + 0.23782646519773576*tmp371 + 0.23782646519773576*tmp375;
      const real_t tmp598 = 1.8030635043651069*tmp365 + 1.8030635043651069*tmp368 + 1.8030635043651069*tmp373;
      const real_t tmp599 = tmp597 + tmp598;
      const real_t tmp600 = 0.19112574223634571*tmp407 + 0.19112574223634571*tmp408 + 0.19112574223634571*tmp413;
      const real_t tmp601 = 1.6770652555180527*tmp401 + 1.6770652555180527*tmp405 + 1.6770652555180527*tmp411;
      const real_t tmp602 = tmp600 + tmp601;
      const real_t tmp603 = 0.14073571909439453*tmp448 + 0.14073571909439453*tmp449 + 0.14073571909439453*tmp454;
      const real_t tmp604 = 0.2688931795735332*tmp442 + 0.2688931795735332*tmp446 + 0.2688931795735332*tmp452;
      const real_t tmp605 = tmp603 + tmp604;
      const real_t tmp606 = 0.42641669024797446*tmp35 + 0.42641669024797446*tmp37 + 0.42641669024797446*tmp45;
      const real_t tmp607 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp33 + 0.38881857835033307*tmp43;
      const real_t tmp608 = tmp606 + tmp607;
      const real_t tmp609 = 0.3256196736114374*tmp93 + 0.3256196736114374*tmp94 + 0.3256196736114374*tmp99;
      const real_t tmp610 = 3.0100340280386204*tmp88 + 3.0100340280386204*tmp92 + 3.0100340280386204*tmp98;
      const real_t tmp611 = tmp609 + tmp610;
      const real_t tmp612 = 0.69877623478892303*tmp134 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp140;
      const real_t tmp613 = 0.16196202691036121*tmp129 + 0.16196202691036121*tmp133 + 0.16196202691036121*tmp139;
      const real_t tmp614 = tmp612 + tmp613;
      const real_t tmp615 = 1.3169318389705873*tmp175 + 1.3169318389705873*tmp176 + 1.3169318389705873*tmp181;
      const real_t tmp616 = 0.11827798082591956*tmp170 + 0.11827798082591956*tmp174 + 0.11827798082591956*tmp180;
      const real_t tmp617 = tmp615 + tmp616;
      const real_t tmp618 = 0.41537646564397157*tmp216 + 0.41537646564397157*tmp217 + 0.41537646564397157*tmp222;
      const real_t tmp619 = 1.730840956191074*tmp211 + 1.730840956191074*tmp215 + 1.730840956191074*tmp221;
      const real_t tmp620 = tmp618 + tmp619;
      const real_t tmp621 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp258 + 1.2177936097379878*tmp263;
      const real_t tmp622 = 0.96110665971229103*tmp252 + 0.96110665971229103*tmp256 + 0.96110665971229103*tmp262;
      const real_t tmp623 = tmp621 + tmp622;
      const real_t tmp624 = 2.1520288156647434*tmp295 + 2.1520288156647434*tmp296 + 2.1520288156647434*tmp300;
      const real_t tmp625 = 0.51764549515564062*tmp291 + 0.51764549515564062*tmp294 + 0.51764549515564062*tmp299;
      const real_t tmp626 = tmp624 + tmp625;
      const real_t tmp627 = 0.035965040373342916*tmp332 + 0.035965040373342916*tmp333 + 0.035965040373342916*tmp338;
      const real_t tmp628 = 0.48616796533571183*tmp327 + 0.48616796533571183*tmp331 + 0.48616796533571183*tmp337;
      const real_t tmp629 = tmp627 + tmp628;
      const real_t tmp630 = 1.7318139619254227*tmp370 + 1.7318139619254227*tmp371 + 1.7318139619254227*tmp375;
      const real_t tmp631 = 1.8030635043651069*tmp366 + 1.8030635043651069*tmp369 + 1.8030635043651069*tmp374;
      const real_t tmp632 = tmp630 + tmp631;
      const real_t tmp633 = 0.21336495814298084*tmp407 + 0.21336495814298084*tmp408 + 0.21336495814298084*tmp413;
      const real_t tmp634 = 1.6770652555180527*tmp402 + 1.6770652555180527*tmp406 + 1.6770652555180527*tmp412;
      const real_t tmp635 = tmp633 + tmp634;
      const real_t tmp636 = 2.9649155283744921*tmp448 + 2.9649155283744921*tmp449 + 2.9649155283744921*tmp454;
      const real_t tmp637 = 0.2688931795735332*tmp443 + 0.2688931795735332*tmp447 + 0.2688931795735332*tmp453;
      const real_t tmp638 = tmp636 + tmp637;
      const real_t tmp639 = -2.2903585922226259*tmp25 - 2.2903585922226259*tmp31 - 2.2903585922226259*tmp41 - tmp540 - tmp573;
      const real_t tmp640 = 0.11955133084429059*tmp16*tmp28*tmp84*tmp89 + 0.11955133084429059*tmp16*tmp38*tmp84*tmp95 + 0.11955133084429059*tmp16*tmp6*tmp78*tmp84 - tmp543 - tmp576;
      const real_t tmp641 = 3.030776123262295*tmp119*tmp125*tmp16*tmp6 + 3.030776123262295*tmp125*tmp130*tmp16*tmp28 + 3.030776123262295*tmp125*tmp136*tmp16*tmp38 - tmp546 - tmp579;
      const real_t tmp642 = 0.021561698496338266*tmp16*tmp160*tmp166*tmp6 + 0.021561698496338266*tmp16*tmp166*tmp171*tmp28 + 0.021561698496338266*tmp16*tmp166*tmp177*tmp38 - tmp549 - tmp582;
      const real_t tmp643 = -0.97680333550942233*tmp210 - 0.97680333550942233*tmp214 - 0.97680333550942233*tmp220 - tmp552 - tmp585;
      const real_t tmp644 = 0.80668592322658683*tmp16*tmp242*tmp248*tmp6 + 0.80668592322658683*tmp16*tmp248*tmp253*tmp28 + 0.80668592322658683*tmp16*tmp248*tmp259*tmp38 - tmp555 - tmp588;
      const real_t tmp645 = -1.3111976295201027*tmp290 - 1.3111976295201027*tmp293 - 1.3111976295201027*tmp298 - tmp558 - tmp591;
      const real_t tmp646 = 1.0259150868534226*tmp16*tmp28*tmp323*tmp328 + 1.0259150868534226*tmp16*tmp317*tmp323*tmp6 + 1.0259150868534226*tmp16*tmp323*tmp334*tmp38 - tmp561 - tmp594;
      const real_t tmp647 = -0.010530396686001087*tmp365 - 0.010530396686001087*tmp368 - 0.010530396686001087*tmp373 - tmp564 - tmp597;
      const real_t tmp648 = 1.727318301866275*tmp16*tmp28*tmp398*tmp403 + 1.727318301866275*tmp16*tmp38*tmp398*tmp409 + 1.727318301866275*tmp16*tmp392*tmp398*tmp6 - tmp567 - tmp600;
      const real_t tmp649 = 0.48471985386318561*tmp16*tmp28*tmp439*tmp444 + 0.48471985386318561*tmp16*tmp38*tmp439*tmp450 + 0.48471985386318561*tmp16*tmp433*tmp439*tmp6 - tmp570 - tmp603;
      const real_t tmp650 = 0.020786379341558803*tmp16*tmp22*tmp26*tmp7 + 0.020786379341558803*tmp16*tmp22*tmp29*tmp32 + 0.020786379341558803*tmp16*tmp22*tmp39*tmp42 - tmp541 - tmp606;
      const real_t tmp651 = 0.066329140985678992*tmp16*tmp26*tmp78*tmp84 + 0.066329140985678992*tmp16*tmp32*tmp84*tmp89 + 0.066329140985678992*tmp16*tmp42*tmp84*tmp95 - tmp544 - tmp609;
      const real_t tmp652 = 2.3862426959925824*tmp119*tmp125*tmp16*tmp26 + 2.3862426959925824*tmp125*tmp130*tmp16*tmp32 + 2.3862426959925824*tmp125*tmp136*tmp16*tmp42 - tmp547 - tmp612;
      const real_t tmp653 = -0.023755899620671705*tmp170 - 0.023755899620671705*tmp174 - 0.023755899620671705*tmp180 - tmp550 - tmp615;
      const real_t tmp654 = 0.023113155683794462*tmp16*tmp201*tmp207*tmp26 + 0.023113155683794462*tmp16*tmp207*tmp212*tmp32 + 0.023113155683794462*tmp16*tmp207*tmp218*tmp42 - tmp553 - tmp618;
      const real_t tmp655 = 0.096099217150166227*tmp16*tmp242*tmp248*tmp26 + 0.096099217150166227*tmp16*tmp248*tmp253*tmp32 + 0.096099217150166227*tmp16*tmp248*tmp259*tmp42 - tmp556 - tmp621;
      const real_t tmp656 = -2.1424647858349868*tmp291 - 2.1424647858349868*tmp294 - 2.1424647858349868*tmp299 - tmp559 - tmp624;
      const real_t tmp657 = 2.215926000198841*tmp16*tmp26*tmp317*tmp323 + 2.215926000198841*tmp16*tmp32*tmp323*tmp328 + 2.215926000198841*tmp16*tmp323*tmp334*tmp42 - tmp562 - tmp627;
      const real_t tmp658 = -1.504517893413688*tmp366 - 1.504517893413688*tmp369 - 1.504517893413688*tmp374 - tmp565 - tmp630;
      const real_t tmp659 = 1.7050790859596399*tmp16*tmp26*tmp392*tmp398 + 1.7050790859596399*tmp16*tmp32*tmp398*tmp403 + 1.7050790859596399*tmp16*tmp398*tmp409*tmp42 - tmp568 - tmp633;
      const real_t tmp660 = -2.339459955416912*tmp443 - 2.339459955416912*tmp447 - 2.339459955416912*tmp453 - tmp571 - tmp636;
      const real_t tmp661 = 0.058384491239200198*tmp16*tmp22*tmp29*tmp36 + 0.058384491239200198*tmp16*tmp22*tmp34*tmp7 + 0.058384491239200198*tmp16*tmp22*tmp39*tmp44 - tmp574 - tmp607;
      const real_t tmp662 = -tmp577 - tmp610 - 2.6180852134415042*tmp93 - 2.6180852134415042*tmp94 - 2.6180852134415042*tmp99;
      const real_t tmp663 = 2.923056903871144*tmp119*tmp125*tmp16*tmp34 + 2.923056903871144*tmp125*tmp130*tmp16*tmp36 + 2.923056903871144*tmp125*tmp136*tmp16*tmp44 - tmp580 - tmp613;
      const real_t tmp664 = 1.1748979585239958*tmp16*tmp160*tmp166*tmp34 + 1.1748979585239958*tmp16*tmp166*tmp171*tmp36 + 1.1748979585239958*tmp16*tmp166*tmp177*tmp44 - tmp583 - tmp616;
      const real_t tmp665 = -1.292351334863308*tmp216 - 1.292351334863308*tmp217 - 1.292351334863308*tmp222 - tmp586 - tmp619;
      const real_t tmp666 = 0.35278616717586297*tmp16*tmp242*tmp248*tmp34 + 0.35278616717586297*tmp16*tmp248*tmp253*tmp36 + 0.35278616717586297*tmp16*tmp248*tmp259*tmp44 - tmp589 - tmp622;
      const real_t tmp667 = -0.50808146532588383*tmp295 - 0.50808146532588383*tmp296 - 0.50808146532588383*tmp300 - tmp592 - tmp625;
      const real_t tmp668 = 1.7657230752364721*tmp16*tmp317*tmp323*tmp34 + 1.7657230752364721*tmp16*tmp323*tmp328*tmp36 + 1.7657230752364721*tmp16*tmp323*tmp334*tmp44 - tmp595 - tmp628;
      const real_t tmp669 = -1.5757674358533722*tmp370 - 1.5757674358533722*tmp371 - 1.5757674358533722*tmp375 - tmp598 - tmp631;
      const real_t tmp670 = 0.24137878858456796*tmp16*tmp34*tmp392*tmp398 + 0.24137878858456796*tmp16*tmp36*tmp398*tmp403 + 0.24137878858456796*tmp16*tmp398*tmp409*tmp44 - tmp601 - tmp634;
      const real_t tmp671 = 0.35656239338404694*tmp16*tmp34*tmp433*tmp439 + 0.35656239338404694*tmp16*tmp36*tmp439*tmp444 + 0.35656239338404694*tmp16*tmp439*tmp44*tmp450 - tmp604 - tmp637;
      const real_t tmp672 = tmp75*(tmp55 + tmp56 + tmp61);
      const real_t tmp673 = 0.0072301427194886381*tmp672;
      const real_t tmp674 = tmp116*(tmp109 + tmp110 + tmp115);
      const real_t tmp675 = 0.012344594760863713*tmp674;
      const real_t tmp676 = tmp157*(tmp150 + tmp151 + tmp156);
      const real_t tmp677 = 0.0036548782978011126*tmp676;
      const real_t tmp678 = tmp198*(tmp191 + tmp192 + tmp197);
      const real_t tmp679 = 0.010799549999884401*tmp678;
      const real_t tmp680 = tmp239*(tmp232 + tmp233 + tmp238);
      const real_t tmp681 = 0.012584765868454714*tmp680;
      const real_t tmp682 = tmp280*(tmp273 + tmp274 + tmp279);
      const real_t tmp683 = 0.00083582139204094858*tmp682;
      const real_t tmp684 = tmp314*(tmp308 + tmp309 + tmp313);
      const real_t tmp685 = 0.0040819365333192512*tmp684;
      const real_t tmp686 = tmp355*(tmp348 + tmp349 + tmp354);
      const real_t tmp687 = 0.0045346636251092122*tmp686;
      const real_t tmp688 = tmp389*(tmp383 + tmp384 + tmp388);
      const real_t tmp689 = 0.0061987549215557864*tmp688;
      const real_t tmp690 = tmp430*(tmp423 + tmp424 + tmp429);
      const real_t tmp691 = 0.0045087419239184514*tmp690;
      const real_t tmp692 = tmp471*(tmp464 + tmp465 + tmp470);
      const real_t tmp693 = 0.0044998649071490461*tmp692;
      const real_t tmp694 = tmp75*(tmp50 + tmp54 + tmp60);
      const real_t tmp695 = 0.0067853652681886352*tmp694;
      const real_t tmp696 = tmp116*(tmp104 + tmp108 + tmp114);
      const real_t tmp697 = 0.0041416969702195786*tmp696;
      const real_t tmp698 = tmp157*(tmp145 + tmp149 + tmp155);
      const real_t tmp699 = 0.0013137068218914037*tmp698;
      const real_t tmp700 = tmp198*(tmp186 + tmp190 + tmp196);
      const real_t tmp701 = 0.0038818597778972029*tmp700;
      const real_t tmp702 = tmp239*(tmp227 + tmp231 + tmp237);
      const real_t tmp703 = 0.010066964965131993*tmp702;
      const real_t tmp704 = tmp280*(tmp268 + tmp272 + tmp278);
      const real_t tmp705 = 0.0046804043242939224*tmp704;
      const real_t tmp706 = tmp314*(tmp304 + tmp307 + tmp312);
      const real_t tmp707 = 0.0097490714046835261*tmp706;
      const real_t tmp708 = tmp355*(tmp343 + tmp347 + tmp353);
      const real_t tmp709 = 0.0085077884791842431*tmp708;
      const real_t tmp710 = tmp389*(tmp379 + tmp382 + tmp387);
      const real_t tmp711 = 0.0056487878897383461*tmp710;
      const real_t tmp712 = tmp430*(tmp418 + tmp422 + tmp428);
      const real_t tmp713 = 0.005238393734043144*tmp712;
      const real_t tmp714 = tmp471*(tmp459 + tmp463 + tmp469);
      const real_t tmp715 = 0.012093792842045984*tmp714;
      const real_t tmp716 = tmp75*(tmp49 + tmp53 + tmp59);
      const real_t tmp717 = 0.020554974928565235*tmp716;
      const real_t tmp718 = tmp116*(tmp103 + tmp107 + tmp113);
      const real_t tmp719 = 0.0044685602754798454*tmp718;
      const real_t tmp720 = tmp157*(tmp144 + tmp148 + tmp154);
      const real_t tmp721 = 0.0041246668394316508*tmp720;
      const real_t tmp722 = tmp198*(tmp185 + tmp189 + tmp195);
      const real_t tmp723 = 0.0033267985952381263*tmp722;
      const real_t tmp724 = tmp239*(tmp226 + tmp230 + tmp236);
      const real_t tmp725 = 0.0071511654955033511*tmp724;
      const real_t tmp726 = tmp280*(tmp267 + tmp271 + tmp277);
      const real_t tmp727 = 0.010590168103918869*tmp726;
      const real_t tmp728 = tmp314*(tmp303 + tmp306 + tmp311);
      const real_t tmp729 = 0.0027144532136395704*tmp728;
      const real_t tmp730 = tmp355*(tmp342 + tmp346 + tmp352);
      const real_t tmp731 = 0.0019942799754541058*tmp730;
      const real_t tmp732 = tmp389*(tmp378 + tmp381 + tmp386);
      const real_t tmp733 = 0.005883129944586717*tmp732;
      const real_t tmp734 = tmp430*(tmp417 + tmp421 + tmp427);
      const real_t tmp735 = 0.0053864900723149976*tmp734;
      const real_t tmp736 = tmp471*(tmp458 + tmp462 + tmp468);
      const real_t tmp737 = 0.0052886569726683132*tmp736;
      const real_t tmp738 = 2.7375616618121592*tmp50 + 2.7375616618121592*tmp54 + 2.7375616618121592*tmp60;
      const real_t tmp739 = 0.42641669024797446*tmp49 + 0.42641669024797446*tmp53 + 0.42641669024797446*tmp59;
      const real_t tmp740 = tmp75*(tmp738 + tmp739);
      const real_t tmp741 = 0.011829781572832234*tmp740;
      const real_t tmp742 = 0.2723974837528258*tmp104 + 0.2723974837528258*tmp108 + 0.2723974837528258*tmp114;
      const real_t tmp743 = 0.3256196736114374*tmp103 + 0.3256196736114374*tmp107 + 0.3256196736114374*tmp113;
      const real_t tmp744 = tmp116*(tmp742 + tmp743);
      const real_t tmp745 = 0.0061414854617707626*tmp744;
      const real_t tmp746 = 0.054242807519210512*tmp145 + 0.054242807519210512*tmp149 + 0.054242807519210512*tmp155;
      const real_t tmp747 = 0.69877623478892303*tmp144 + 0.69877623478892303*tmp148 + 0.69877623478892303*tmp154;
      const real_t tmp748 = tmp157*(tmp746 + tmp747);
      const real_t tmp749 = 0.0043612323249822204*tmp748;
      const real_t tmp750 = 1.2716142408535775*tmp186 + 1.2716142408535775*tmp190 + 1.2716142408535775*tmp196;
      const real_t tmp751 = 1.3169318389705873*tmp185 + 1.3169318389705873*tmp189 + 1.3169318389705873*tmp195;
      const real_t tmp752 = tmp198*(tmp750 + tmp751);
      const real_t tmp753 = 0.012248248047610821*tmp752;
      const real_t tmp754 = 1.4152929568371884*tmp227 + 1.4152929568371884*tmp231 + 1.4152929568371884*tmp237;
      const real_t tmp755 = 0.41537646564397157*tmp226 + 0.41537646564397157*tmp230 + 0.41537646564397157*tmp236;
      const real_t tmp756 = tmp239*(tmp754 + tmp755);
      const real_t tmp757 = 0.017219568446249611*tmp756;
      const real_t tmp758 = 0.50720690366156718*tmp268 + 0.50720690366156718*tmp272 + 0.50720690366156718*tmp278;
      const real_t tmp759 = 1.2177936097379878*tmp267 + 1.2177936097379878*tmp271 + 1.2177936097379878*tmp277;
      const real_t tmp760 = tmp280*(tmp758 + tmp759);
      const real_t tmp761 = 0.021490090227737114*tmp760;
      const real_t tmp762 = 1.3207616593498592*tmp304 + 1.3207616593498592*tmp307 + 1.3207616593498592*tmp312;
      const real_t tmp763 = 2.1520288156647434*tmp303 + 2.1520288156647434*tmp306 + 2.1520288156647434*tmp311;
      const real_t tmp764 = tmp314*(tmp762 + tmp763);
      const real_t tmp765 = 0.0084625239161731543*tmp764;
      const real_t tmp766 = 1.2259759537187613*tmp343 + 1.2259759537187613*tmp347 + 1.2259759537187613*tmp353;
      const real_t tmp767 = 0.035965040373342916*tmp342 + 0.035965040373342916*tmp346 + 0.035965040373342916*tmp352;
      const real_t tmp768 = tmp355*(tmp766 + tmp767);
      const real_t tmp769 = 0.0088251866742250357*tmp768;
      const real_t tmp770 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp382 + 0.23782646519773576*tmp387;
      const real_t tmp771 = 1.7318139619254227*tmp378 + 1.7318139619254227*tmp381 + 1.7318139619254227*tmp386;
      const real_t tmp772 = tmp389*(tmp770 + tmp771);
      const real_t tmp773 = 0.0077188851041817101*tmp772;
      const real_t tmp774 = 0.19112574223634571*tmp418 + 0.19112574223634571*tmp422 + 0.19112574223634571*tmp428;
      const real_t tmp775 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp421 + 0.21336495814298084*tmp427;
      const real_t tmp776 = tmp430*(tmp774 + tmp775);
      const real_t tmp777 = 0.006659242794062166*tmp776;
      const real_t tmp778 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp463 + 0.14073571909439453*tmp469;
      const real_t tmp779 = 2.9649155283744921*tmp458 + 2.9649155283744921*tmp462 + 2.9649155283744921*tmp468;
      const real_t tmp780 = tmp471*(tmp778 + tmp779);
      const real_t tmp781 = 0.0061548665412862651*tmp780;
      const real_t tmp782 = 2.7375616618121592*tmp55 + 2.7375616618121592*tmp56 + 2.7375616618121592*tmp61;
      const real_t tmp783 = 0.38881857835033307*tmp49 + 0.38881857835033307*tmp53 + 0.38881857835033307*tmp59;
      const real_t tmp784 = tmp75*(tmp782 + tmp783);
      const real_t tmp785 = 0.011829781572832234*tmp784;
      const real_t tmp786 = 0.2723974837528258*tmp109 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp115;
      const real_t tmp787 = 3.0100340280386204*tmp103 + 3.0100340280386204*tmp107 + 3.0100340280386204*tmp113;
      const real_t tmp788 = tmp116*(tmp786 + tmp787);
      const real_t tmp789 = 0.0061414854617707626*tmp788;
      const real_t tmp790 = 0.054242807519210512*tmp150 + 0.054242807519210512*tmp151 + 0.054242807519210512*tmp156;
      const real_t tmp791 = 0.16196202691036121*tmp144 + 0.16196202691036121*tmp148 + 0.16196202691036121*tmp154;
      const real_t tmp792 = tmp157*(tmp790 + tmp791);
      const real_t tmp793 = 0.0043612323249822204*tmp792;
      const real_t tmp794 = 1.2716142408535775*tmp191 + 1.2716142408535775*tmp192 + 1.2716142408535775*tmp197;
      const real_t tmp795 = 0.11827798082591956*tmp185 + 0.11827798082591956*tmp189 + 0.11827798082591956*tmp195;
      const real_t tmp796 = tmp198*(tmp794 + tmp795);
      const real_t tmp797 = 0.012248248047610821*tmp796;
      const real_t tmp798 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp233 + 1.4152929568371884*tmp238;
      const real_t tmp799 = 1.730840956191074*tmp226 + 1.730840956191074*tmp230 + 1.730840956191074*tmp236;
      const real_t tmp800 = tmp239*(tmp798 + tmp799);
      const real_t tmp801 = 0.017219568446249611*tmp800;
      const real_t tmp802 = 0.50720690366156718*tmp273 + 0.50720690366156718*tmp274 + 0.50720690366156718*tmp279;
      const real_t tmp803 = 0.96110665971229103*tmp267 + 0.96110665971229103*tmp271 + 0.96110665971229103*tmp277;
      const real_t tmp804 = tmp280*(tmp802 + tmp803);
      const real_t tmp805 = 0.021490090227737114*tmp804;
      const real_t tmp806 = 1.3207616593498592*tmp308 + 1.3207616593498592*tmp309 + 1.3207616593498592*tmp313;
      const real_t tmp807 = 0.51764549515564062*tmp303 + 0.51764549515564062*tmp306 + 0.51764549515564062*tmp311;
      const real_t tmp808 = tmp314*(tmp806 + tmp807);
      const real_t tmp809 = 0.0084625239161731543*tmp808;
      const real_t tmp810 = 1.2259759537187613*tmp348 + 1.2259759537187613*tmp349 + 1.2259759537187613*tmp354;
      const real_t tmp811 = 0.48616796533571183*tmp342 + 0.48616796533571183*tmp346 + 0.48616796533571183*tmp352;
      const real_t tmp812 = tmp355*(tmp810 + tmp811);
      const real_t tmp813 = 0.0088251866742250357*tmp812;
      const real_t tmp814 = 0.23782646519773576*tmp383 + 0.23782646519773576*tmp384 + 0.23782646519773576*tmp388;
      const real_t tmp815 = 1.8030635043651069*tmp378 + 1.8030635043651069*tmp381 + 1.8030635043651069*tmp386;
      const real_t tmp816 = tmp389*(tmp814 + tmp815);
      const real_t tmp817 = 0.0077188851041817101*tmp816;
      const real_t tmp818 = 0.19112574223634571*tmp423 + 0.19112574223634571*tmp424 + 0.19112574223634571*tmp429;
      const real_t tmp819 = 1.6770652555180527*tmp417 + 1.6770652555180527*tmp421 + 1.6770652555180527*tmp427;
      const real_t tmp820 = tmp430*(tmp818 + tmp819);
      const real_t tmp821 = 0.006659242794062166*tmp820;
      const real_t tmp822 = 0.14073571909439453*tmp464 + 0.14073571909439453*tmp465 + 0.14073571909439453*tmp470;
      const real_t tmp823 = 0.2688931795735332*tmp458 + 0.2688931795735332*tmp462 + 0.2688931795735332*tmp468;
      const real_t tmp824 = tmp471*(tmp822 + tmp823);
      const real_t tmp825 = 0.0061548665412862651*tmp824;
      const real_t tmp826 = 0.42641669024797446*tmp55 + 0.42641669024797446*tmp56 + 0.42641669024797446*tmp61;
      const real_t tmp827 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp828 = tmp75*(tmp826 + tmp827);
      const real_t tmp829 = 0.011829781572832234*tmp828;
      const real_t tmp830 = 0.3256196736114374*tmp109 + 0.3256196736114374*tmp110 + 0.3256196736114374*tmp115;
      const real_t tmp831 = 3.0100340280386204*tmp104 + 3.0100340280386204*tmp108 + 3.0100340280386204*tmp114;
      const real_t tmp832 = tmp116*(tmp830 + tmp831);
      const real_t tmp833 = 0.0061414854617707626*tmp832;
      const real_t tmp834 = 0.69877623478892303*tmp150 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp156;
      const real_t tmp835 = 0.16196202691036121*tmp145 + 0.16196202691036121*tmp149 + 0.16196202691036121*tmp155;
      const real_t tmp836 = tmp157*(tmp834 + tmp835);
      const real_t tmp837 = 0.0043612323249822204*tmp836;
      const real_t tmp838 = 1.3169318389705873*tmp191 + 1.3169318389705873*tmp192 + 1.3169318389705873*tmp197;
      const real_t tmp839 = 0.11827798082591956*tmp186 + 0.11827798082591956*tmp190 + 0.11827798082591956*tmp196;
      const real_t tmp840 = tmp198*(tmp838 + tmp839);
      const real_t tmp841 = 0.012248248047610821*tmp840;
      const real_t tmp842 = 0.41537646564397157*tmp232 + 0.41537646564397157*tmp233 + 0.41537646564397157*tmp238;
      const real_t tmp843 = 1.730840956191074*tmp227 + 1.730840956191074*tmp231 + 1.730840956191074*tmp237;
      const real_t tmp844 = tmp239*(tmp842 + tmp843);
      const real_t tmp845 = 0.017219568446249611*tmp844;
      const real_t tmp846 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp274 + 1.2177936097379878*tmp279;
      const real_t tmp847 = 0.96110665971229103*tmp268 + 0.96110665971229103*tmp272 + 0.96110665971229103*tmp278;
      const real_t tmp848 = tmp280*(tmp846 + tmp847);
      const real_t tmp849 = 0.021490090227737114*tmp848;
      const real_t tmp850 = 2.1520288156647434*tmp308 + 2.1520288156647434*tmp309 + 2.1520288156647434*tmp313;
      const real_t tmp851 = 0.51764549515564062*tmp304 + 0.51764549515564062*tmp307 + 0.51764549515564062*tmp312;
      const real_t tmp852 = tmp314*(tmp850 + tmp851);
      const real_t tmp853 = 0.0084625239161731543*tmp852;
      const real_t tmp854 = 0.035965040373342916*tmp348 + 0.035965040373342916*tmp349 + 0.035965040373342916*tmp354;
      const real_t tmp855 = 0.48616796533571183*tmp343 + 0.48616796533571183*tmp347 + 0.48616796533571183*tmp353;
      const real_t tmp856 = tmp355*(tmp854 + tmp855);
      const real_t tmp857 = 0.0088251866742250357*tmp856;
      const real_t tmp858 = 1.7318139619254227*tmp383 + 1.7318139619254227*tmp384 + 1.7318139619254227*tmp388;
      const real_t tmp859 = 1.8030635043651069*tmp379 + 1.8030635043651069*tmp382 + 1.8030635043651069*tmp387;
      const real_t tmp860 = tmp389*(tmp858 + tmp859);
      const real_t tmp861 = 0.0077188851041817101*tmp860;
      const real_t tmp862 = 0.21336495814298084*tmp423 + 0.21336495814298084*tmp424 + 0.21336495814298084*tmp429;
      const real_t tmp863 = 1.6770652555180527*tmp418 + 1.6770652555180527*tmp422 + 1.6770652555180527*tmp428;
      const real_t tmp864 = tmp430*(tmp862 + tmp863);
      const real_t tmp865 = 0.006659242794062166*tmp864;
      const real_t tmp866 = 2.9649155283744921*tmp464 + 2.9649155283744921*tmp465 + 2.9649155283744921*tmp470;
      const real_t tmp867 = 0.2688931795735332*tmp459 + 0.2688931795735332*tmp463 + 0.2688931795735332*tmp469;
      const real_t tmp868 = tmp471*(tmp866 + tmp867);
      const real_t tmp869 = 0.0061548665412862651*tmp868;
      const real_t tmp870 = tmp75*(-2.2903585922226259*tmp49 - 2.2903585922226259*tmp53 - 2.2903585922226259*tmp59 - tmp738 - tmp782);
      const real_t tmp871 = 0.011829781572832234*tmp870;
      const real_t tmp872 = tmp116*(0.11955133084429059*tmp101*tmp16*tmp6*tmp84 + 0.11955133084429059*tmp105*tmp16*tmp28*tmp84 + 0.11955133084429059*tmp111*tmp16*tmp38*tmp84 - tmp742 - tmp786);
      const real_t tmp873 = 0.0061414854617707626*tmp872;
      const real_t tmp874 = tmp157*(3.030776123262295*tmp125*tmp142*tmp16*tmp6 + 3.030776123262295*tmp125*tmp146*tmp16*tmp28 + 3.030776123262295*tmp125*tmp152*tmp16*tmp38 - tmp746 - tmp790);
      const real_t tmp875 = 0.0043612323249822204*tmp874;
      const real_t tmp876 = tmp198*(0.021561698496338266*tmp16*tmp166*tmp183*tmp6 + 0.021561698496338266*tmp16*tmp166*tmp187*tmp28 + 0.021561698496338266*tmp16*tmp166*tmp193*tmp38 - tmp750 - tmp794);
      const real_t tmp877 = 0.012248248047610821*tmp876;
      const real_t tmp878 = tmp239*(-0.97680333550942233*tmp226 - 0.97680333550942233*tmp230 - 0.97680333550942233*tmp236 - tmp754 - tmp798);
      const real_t tmp879 = 0.017219568446249611*tmp878;
      const real_t tmp880 = tmp280*(0.80668592322658683*tmp16*tmp248*tmp265*tmp6 + 0.80668592322658683*tmp16*tmp248*tmp269*tmp28 + 0.80668592322658683*tmp16*tmp248*tmp275*tmp38 - tmp758 - tmp802);
      const real_t tmp881 = 0.021490090227737114*tmp880;
      const real_t tmp882 = tmp314*(-1.3111976295201027*tmp303 - 1.3111976295201027*tmp306 - 1.3111976295201027*tmp311 - tmp762 - tmp806);
      const real_t tmp883 = 0.0084625239161731543*tmp882;
      const real_t tmp884 = tmp355*(1.0259150868534226*tmp16*tmp28*tmp323*tmp344 + 1.0259150868534226*tmp16*tmp323*tmp340*tmp6 + 1.0259150868534226*tmp16*tmp323*tmp350*tmp38 - tmp766 - tmp810);
      const real_t tmp885 = 0.0088251866742250357*tmp884;
      const real_t tmp886 = tmp389*(-0.010530396686001087*tmp378 - 0.010530396686001087*tmp381 - 0.010530396686001087*tmp386 - tmp770 - tmp814);
      const real_t tmp887 = 0.0077188851041817101*tmp886;
      const real_t tmp888 = tmp430*(1.727318301866275*tmp16*tmp28*tmp398*tmp419 + 1.727318301866275*tmp16*tmp38*tmp398*tmp425 + 1.727318301866275*tmp16*tmp398*tmp415*tmp6 - tmp774 - tmp818);
      const real_t tmp889 = 0.006659242794062166*tmp888;
      const real_t tmp890 = tmp471*(0.48471985386318561*tmp16*tmp28*tmp439*tmp460 + 0.48471985386318561*tmp16*tmp38*tmp439*tmp466 + 0.48471985386318561*tmp16*tmp439*tmp456*tmp6 - tmp778 - tmp822);
      const real_t tmp891 = 0.0061548665412862651*tmp890;
      const real_t tmp892 = tmp75*(0.020786379341558803*tmp16*tmp22*tmp26*tmp47 + 0.020786379341558803*tmp16*tmp22*tmp32*tmp51 + 0.020786379341558803*tmp16*tmp22*tmp42*tmp57 - tmp739 - tmp826);
      const real_t tmp893 = 0.011829781572832234*tmp892;
      const real_t tmp894 = tmp116*(0.066329140985678992*tmp101*tmp16*tmp26*tmp84 + 0.066329140985678992*tmp105*tmp16*tmp32*tmp84 + 0.066329140985678992*tmp111*tmp16*tmp42*tmp84 - tmp743 - tmp830);
      const real_t tmp895 = 0.0061414854617707626*tmp894;
      const real_t tmp896 = tmp157*(2.3862426959925824*tmp125*tmp142*tmp16*tmp26 + 2.3862426959925824*tmp125*tmp146*tmp16*tmp32 + 2.3862426959925824*tmp125*tmp152*tmp16*tmp42 - tmp747 - tmp834);
      const real_t tmp897 = 0.0043612323249822204*tmp896;
      const real_t tmp898 = tmp198*(-0.023755899620671705*tmp186 - 0.023755899620671705*tmp190 - 0.023755899620671705*tmp196 - tmp751 - tmp838);
      const real_t tmp899 = 0.012248248047610821*tmp898;
      const real_t tmp900 = tmp239*(0.023113155683794462*tmp16*tmp207*tmp224*tmp26 + 0.023113155683794462*tmp16*tmp207*tmp228*tmp32 + 0.023113155683794462*tmp16*tmp207*tmp234*tmp42 - tmp755 - tmp842);
      const real_t tmp901 = 0.017219568446249611*tmp900;
      const real_t tmp902 = tmp280*(0.096099217150166227*tmp16*tmp248*tmp26*tmp265 + 0.096099217150166227*tmp16*tmp248*tmp269*tmp32 + 0.096099217150166227*tmp16*tmp248*tmp275*tmp42 - tmp759 - tmp846);
      const real_t tmp903 = 0.021490090227737114*tmp902;
      const real_t tmp904 = tmp314*(-2.1424647858349868*tmp304 - 2.1424647858349868*tmp307 - 2.1424647858349868*tmp312 - tmp763 - tmp850);
      const real_t tmp905 = 0.0084625239161731543*tmp904;
      const real_t tmp906 = tmp355*(2.215926000198841*tmp16*tmp26*tmp323*tmp340 + 2.215926000198841*tmp16*tmp32*tmp323*tmp344 + 2.215926000198841*tmp16*tmp323*tmp350*tmp42 - tmp767 - tmp854);
      const real_t tmp907 = 0.0088251866742250357*tmp906;
      const real_t tmp908 = tmp389*(-1.504517893413688*tmp379 - 1.504517893413688*tmp382 - 1.504517893413688*tmp387 - tmp771 - tmp858);
      const real_t tmp909 = 0.0077188851041817101*tmp908;
      const real_t tmp910 = tmp430*(1.7050790859596399*tmp16*tmp26*tmp398*tmp415 + 1.7050790859596399*tmp16*tmp32*tmp398*tmp419 + 1.7050790859596399*tmp16*tmp398*tmp42*tmp425 - tmp775 - tmp862);
      const real_t tmp911 = 0.006659242794062166*tmp910;
      const real_t tmp912 = tmp471*(-2.339459955416912*tmp459 - 2.339459955416912*tmp463 - 2.339459955416912*tmp469 - tmp779 - tmp866);
      const real_t tmp913 = 0.0061548665412862651*tmp912;
      const real_t tmp914 = tmp75*(0.058384491239200198*tmp16*tmp22*tmp34*tmp47 + 0.058384491239200198*tmp16*tmp22*tmp36*tmp51 + 0.058384491239200198*tmp16*tmp22*tmp44*tmp57 - tmp783 - tmp827);
      const real_t tmp915 = 0.011829781572832234*tmp914;
      const real_t tmp916 = tmp116*(-2.6180852134415042*tmp109 - 2.6180852134415042*tmp110 - 2.6180852134415042*tmp115 - tmp787 - tmp831);
      const real_t tmp917 = 0.0061414854617707626*tmp916;
      const real_t tmp918 = tmp157*(2.923056903871144*tmp125*tmp142*tmp16*tmp34 + 2.923056903871144*tmp125*tmp146*tmp16*tmp36 + 2.923056903871144*tmp125*tmp152*tmp16*tmp44 - tmp791 - tmp835);
      const real_t tmp919 = 0.0043612323249822204*tmp918;
      const real_t tmp920 = tmp198*(1.1748979585239958*tmp16*tmp166*tmp183*tmp34 + 1.1748979585239958*tmp16*tmp166*tmp187*tmp36 + 1.1748979585239958*tmp16*tmp166*tmp193*tmp44 - tmp795 - tmp839);
      const real_t tmp921 = 0.012248248047610821*tmp920;
      const real_t tmp922 = tmp239*(-1.292351334863308*tmp232 - 1.292351334863308*tmp233 - 1.292351334863308*tmp238 - tmp799 - tmp843);
      const real_t tmp923 = 0.017219568446249611*tmp922;
      const real_t tmp924 = tmp280*(0.35278616717586297*tmp16*tmp248*tmp265*tmp34 + 0.35278616717586297*tmp16*tmp248*tmp269*tmp36 + 0.35278616717586297*tmp16*tmp248*tmp275*tmp44 - tmp803 - tmp847);
      const real_t tmp925 = 0.021490090227737114*tmp924;
      const real_t tmp926 = tmp314*(-0.50808146532588383*tmp308 - 0.50808146532588383*tmp309 - 0.50808146532588383*tmp313 - tmp807 - tmp851);
      const real_t tmp927 = 0.0084625239161731543*tmp926;
      const real_t tmp928 = tmp355*(1.7657230752364721*tmp16*tmp323*tmp34*tmp340 + 1.7657230752364721*tmp16*tmp323*tmp344*tmp36 + 1.7657230752364721*tmp16*tmp323*tmp350*tmp44 - tmp811 - tmp855);
      const real_t tmp929 = 0.0088251866742250357*tmp928;
      const real_t tmp930 = tmp389*(-1.5757674358533722*tmp383 - 1.5757674358533722*tmp384 - 1.5757674358533722*tmp388 - tmp815 - tmp859);
      const real_t tmp931 = 0.0077188851041817101*tmp930;
      const real_t tmp932 = tmp430*(0.24137878858456796*tmp16*tmp34*tmp398*tmp415 + 0.24137878858456796*tmp16*tmp36*tmp398*tmp419 + 0.24137878858456796*tmp16*tmp398*tmp425*tmp44 - tmp819 - tmp863);
      const real_t tmp933 = 0.006659242794062166*tmp932;
      const real_t tmp934 = tmp471*(0.35656239338404694*tmp16*tmp34*tmp439*tmp456 + 0.35656239338404694*tmp16*tmp36*tmp439*tmp460 + 0.35656239338404694*tmp16*tmp439*tmp44*tmp466 - tmp823 - tmp867);
      const real_t tmp935 = 0.0061548665412862651*tmp934;
      elMat(0,0) = -tmp100*tmp118 - tmp141*tmp159 - tmp182*tmp200 - tmp223*tmp241 - tmp264*tmp282 - tmp301*tmp316 - tmp339*tmp357 - tmp376*tmp391 - tmp414*tmp432 - tmp455*tmp473 - tmp46*tmp77;
      elMat(0,1) = -tmp117*tmp477 + tmp158*tmp479 + tmp199*tmp481 - tmp240*tmp483 + tmp281*tmp485 + tmp315*tmp487 + tmp356*tmp489 - tmp390*tmp491 - tmp431*tmp493 + tmp472*tmp495 + tmp475*tmp76;
      elMat(0,2) = tmp117*tmp499 + tmp158*tmp501 - tmp199*tmp503 + tmp240*tmp505 - tmp281*tmp507 - tmp315*tmp509 + tmp356*tmp511 - tmp390*tmp513 + tmp431*tmp515 - tmp472*tmp517 + tmp497*tmp76;
      elMat(0,3) = tmp117*tmp521 + tmp158*tmp523 - tmp199*tmp525 - tmp240*tmp527 + tmp281*tmp529 - tmp315*tmp531 - tmp356*tmp533 + tmp390*tmp535 + tmp431*tmp537 + tmp472*tmp539 - tmp519*tmp76;
      elMat(0,4) = -tmp118*tmp545 - tmp159*tmp548 - tmp200*tmp551 - tmp241*tmp554 - tmp282*tmp557 - tmp316*tmp560 - tmp357*tmp563 - tmp391*tmp566 - tmp432*tmp569 - tmp473*tmp572 - tmp542*tmp77;
      elMat(0,5) = -tmp118*tmp578 - tmp159*tmp581 - tmp200*tmp584 - tmp241*tmp587 - tmp282*tmp590 - tmp316*tmp593 - tmp357*tmp596 - tmp391*tmp599 - tmp432*tmp602 - tmp473*tmp605 - tmp575*tmp77;
      elMat(0,6) = -tmp118*tmp611 - tmp159*tmp614 - tmp200*tmp617 - tmp241*tmp620 - tmp282*tmp623 - tmp316*tmp626 - tmp357*tmp629 - tmp391*tmp632 - tmp432*tmp635 - tmp473*tmp638 - tmp608*tmp77;
      elMat(0,7) = -tmp118*tmp640 - tmp159*tmp641 - tmp200*tmp642 - tmp241*tmp643 - tmp282*tmp644 - tmp316*tmp645 - tmp357*tmp646 - tmp391*tmp647 - tmp432*tmp648 - tmp473*tmp649 - tmp639*tmp77;
      elMat(0,8) = -tmp118*tmp651 - tmp159*tmp652 - tmp200*tmp653 - tmp241*tmp654 - tmp282*tmp655 - tmp316*tmp656 - tmp357*tmp657 - tmp391*tmp658 - tmp432*tmp659 - tmp473*tmp660 - tmp650*tmp77;
      elMat(0,9) = -tmp118*tmp662 - tmp159*tmp663 - tmp200*tmp664 - tmp241*tmp665 - tmp282*tmp666 - tmp316*tmp667 - tmp357*tmp668 - tmp391*tmp669 - tmp432*tmp670 - tmp473*tmp671 - tmp661*tmp77;
      elMat(1,0) = -tmp100*tmp675 + tmp141*tmp677 + tmp182*tmp679 - tmp223*tmp681 + tmp264*tmp683 + tmp301*tmp685 + tmp339*tmp687 - tmp376*tmp689 - tmp414*tmp691 + tmp455*tmp693 + tmp46*tmp673;
      elMat(1,1) = -0.0044189289060270545*tmp474*tmp672 - 0.024813055531683337*tmp476*tmp674 - 0.0030629268005785541*tmp478*tmp676 - 0.0095222010320695129*tmp480*tmp678 - 0.0091974623207422349*tmp482*tmp680 - 3.2507885820395218e-5*tmp484*tmp682 - 0.0019689404753353082*tmp486*tmp684 - 0.0023300554370080033*tmp488*tmp686 - 0.0049779938500050438*tmp490*tmp688 - 0.0030527125027828036*tmp492*tmp690 - 0.0032898819246143778*tmp494*tmp692;
      elMat(1,2) = -0.0041470891910238041*tmp496*tmp672 + 0.008324951843965811*tmp498*tmp674 - 0.001100936202251903*tmp500*tmp676 + 0.0034227212415181688*tmp502*tmp678 + 0.0073573503010591077*tmp504*tmp680 + 0.00018203655806882805*tmp506*tmp682 + 0.0047025085100984255*tmp508*tmp684 - 0.00437157426475263*tmp510*tmp686 - 0.0045363353981484533*tmp512*tmp688 + 0.0035467343920440879*tmp514*tmp690 + 0.0088418544316446034*tmp516*tmp692;
      elMat(1,3) = 0.012562818798813762*tmp518*tmp672 + 0.00898195821005612*tmp520*tmp674 - 0.003456627437787347*tmp522*tmp676 + 0.0029333115747788548*tmp524*tmp678 - 0.0052263646286142846*tmp526*tmp680 - 0.00041188701176975823*tmp528*tmp682 + 0.0013093287357882949*tmp530*tmp684 + 0.0010247249374778298*tmp532*tmp686 + 0.0047245269499351069*tmp534*tmp688 + 0.0036470052771574082*tmp536*tmp690 - 0.0038665731836137946*tmp538*tmp692;
      elMat(1,4) = tmp542*tmp673 - tmp545*tmp675 + tmp548*tmp677 + tmp551*tmp679 - tmp554*tmp681 + tmp557*tmp683 + tmp560*tmp685 + tmp563*tmp687 - tmp566*tmp689 - tmp569*tmp691 + tmp572*tmp693;
      elMat(1,5) = tmp575*tmp673 - tmp578*tmp675 + tmp581*tmp677 + tmp584*tmp679 - tmp587*tmp681 + tmp590*tmp683 + tmp593*tmp685 + tmp596*tmp687 - tmp599*tmp689 - tmp602*tmp691 + tmp605*tmp693;
      elMat(1,6) = tmp608*tmp673 - tmp611*tmp675 + tmp614*tmp677 + tmp617*tmp679 - tmp620*tmp681 + tmp623*tmp683 + tmp626*tmp685 + tmp629*tmp687 - tmp632*tmp689 - tmp635*tmp691 + tmp638*tmp693;
      elMat(1,7) = tmp639*tmp673 - tmp640*tmp675 + tmp641*tmp677 + tmp642*tmp679 - tmp643*tmp681 + tmp644*tmp683 + tmp645*tmp685 + tmp646*tmp687 - tmp647*tmp689 - tmp648*tmp691 + tmp649*tmp693;
      elMat(1,8) = tmp650*tmp673 - tmp651*tmp675 + tmp652*tmp677 + tmp653*tmp679 - tmp654*tmp681 + tmp655*tmp683 + tmp656*tmp685 + tmp657*tmp687 - tmp658*tmp689 - tmp659*tmp691 + tmp660*tmp693;
      elMat(1,9) = tmp661*tmp673 - tmp662*tmp675 + tmp663*tmp677 + tmp664*tmp679 - tmp665*tmp681 + tmp666*tmp683 + tmp667*tmp685 + tmp668*tmp687 - tmp669*tmp689 - tmp670*tmp691 + tmp671*tmp693;
      elMat(2,0) = tmp100*tmp697 + tmp141*tmp699 - tmp182*tmp701 + tmp223*tmp703 - tmp264*tmp705 - tmp301*tmp707 + tmp339*tmp709 - tmp376*tmp711 + tmp414*tmp713 - tmp455*tmp715 + tmp46*tmp695;
      elMat(2,1) = -0.0041470891910238041*tmp474*tmp694 + 0.008324951843965811*tmp476*tmp696 - 0.001100936202251903*tmp478*tmp698 + 0.0034227212415181688*tmp480*tmp700 + 0.0073573503010591077*tmp482*tmp702 + 0.00018203655806882805*tmp484*tmp704 + 0.0047025085100984255*tmp486*tmp706 - 0.00437157426475263*tmp488*tmp708 - 0.0045363353981484533*tmp490*tmp710 + 0.0035467343920440879*tmp492*tmp712 + 0.0088418544316446034*tmp494*tmp714;
      elMat(2,2) = -0.0038919722684040777*tmp496*tmp694 - 0.0027930789545792005*tmp498*tmp696 - 0.00039571971527360629*tmp500*tmp698 - 0.001230284958034916*tmp502*tmp700 - 0.0058853846381537785*tmp504*tmp702 - 0.0010193621528212606*tmp506*tmp704 - 0.011231211184168578*tmp508*tmp706 - 0.0082018055230425203*tmp510*tmp708 - 0.0041338618456657665*tmp512*tmp710 - 0.0041207040742425758*tmp514*tmp712 - 0.023763281352280435*tmp516*tmp714;
      elMat(2,3) = 0.011789990551396352*tmp518*tmp694 - 0.003013509137065063*tmp520*tmp696 - 0.0012424476756148744*tmp522*tmp698 - 0.0010543683966735859*tmp524*tmp700 + 0.0041807396467460484*tmp526*tmp702 + 0.0023064709390845928*tmp528*tmp704 - 0.0031271283208865507*tmp530*tmp706 + 0.0019225556156211496*tmp532*tmp708 + 0.0043053566332700976*tmp534*tmp710 - 0.0042372018434979264*tmp536*tmp712 + 0.010391764209842001*tmp538*tmp714;
      elMat(2,4) = tmp542*tmp695 + tmp545*tmp697 + tmp548*tmp699 - tmp551*tmp701 + tmp554*tmp703 - tmp557*tmp705 - tmp560*tmp707 + tmp563*tmp709 - tmp566*tmp711 + tmp569*tmp713 - tmp572*tmp715;
      elMat(2,5) = tmp575*tmp695 + tmp578*tmp697 + tmp581*tmp699 - tmp584*tmp701 + tmp587*tmp703 - tmp590*tmp705 - tmp593*tmp707 + tmp596*tmp709 - tmp599*tmp711 + tmp602*tmp713 - tmp605*tmp715;
      elMat(2,6) = tmp608*tmp695 + tmp611*tmp697 + tmp614*tmp699 - tmp617*tmp701 + tmp620*tmp703 - tmp623*tmp705 - tmp626*tmp707 + tmp629*tmp709 - tmp632*tmp711 + tmp635*tmp713 - tmp638*tmp715;
      elMat(2,7) = tmp639*tmp695 + tmp640*tmp697 + tmp641*tmp699 - tmp642*tmp701 + tmp643*tmp703 - tmp644*tmp705 - tmp645*tmp707 + tmp646*tmp709 - tmp647*tmp711 + tmp648*tmp713 - tmp649*tmp715;
      elMat(2,8) = tmp650*tmp695 + tmp651*tmp697 + tmp652*tmp699 - tmp653*tmp701 + tmp654*tmp703 - tmp655*tmp705 - tmp656*tmp707 + tmp657*tmp709 - tmp658*tmp711 + tmp659*tmp713 - tmp660*tmp715;
      elMat(2,9) = tmp661*tmp695 + tmp662*tmp697 + tmp663*tmp699 - tmp664*tmp701 + tmp665*tmp703 - tmp666*tmp705 - tmp667*tmp707 + tmp668*tmp709 - tmp669*tmp711 + tmp670*tmp713 - tmp671*tmp715;
      elMat(3,0) = tmp100*tmp719 + tmp141*tmp721 - tmp182*tmp723 - tmp223*tmp725 + tmp264*tmp727 - tmp301*tmp729 - tmp339*tmp731 + tmp376*tmp733 + tmp414*tmp735 + tmp455*tmp737 - tmp46*tmp717;
      elMat(3,1) = 0.012562818798813762*tmp474*tmp716 + 0.00898195821005612*tmp476*tmp718 - 0.003456627437787347*tmp478*tmp720 + 0.0029333115747788548*tmp480*tmp722 - 0.0052263646286142846*tmp482*tmp724 - 0.00041188701176975823*tmp484*tmp726 + 0.0013093287357882949*tmp486*tmp728 + 0.0010247249374778298*tmp488*tmp730 + 0.0047245269499351069*tmp490*tmp732 + 0.0036470052771574082*tmp492*tmp734 - 0.0038665731836137946*tmp494*tmp736;
      elMat(3,2) = 0.011789990551396352*tmp496*tmp716 - 0.003013509137065063*tmp498*tmp718 - 0.0012424476756148744*tmp500*tmp720 - 0.0010543683966735859*tmp502*tmp722 + 0.0041807396467460484*tmp504*tmp724 + 0.0023064709390845928*tmp506*tmp726 - 0.0031271283208865507*tmp508*tmp728 + 0.0019225556156211496*tmp510*tmp730 + 0.0043053566332700976*tmp512*tmp732 - 0.0042372018434979264*tmp514*tmp734 + 0.010391764209842001*tmp516*tmp736;
      elMat(3,3) = -0.035715536395385078*tmp518*tmp716 - 0.0032513357004413015*tmp520*tmp718 - 0.0039009333299794896*tmp522*tmp720 - 0.00090360587491835199*tmp524*tmp722 - 0.0029698286634596638*tmp526*tmp724 - 0.0052187617306746906*tmp528*tmp726 - 0.00087069251703458632*tmp530*tmp728 - 0.00045065931943546946*tmp532*tmp730 - 0.0044839659455667077*tmp534*tmp732 - 0.0043569931591950859*tmp536*tmp734 - 0.0045443540305762555*tmp538*tmp736;
      elMat(3,4) = -tmp542*tmp717 + tmp545*tmp719 + tmp548*tmp721 - tmp551*tmp723 - tmp554*tmp725 + tmp557*tmp727 - tmp560*tmp729 - tmp563*tmp731 + tmp566*tmp733 + tmp569*tmp735 + tmp572*tmp737;
      elMat(3,5) = -tmp575*tmp717 + tmp578*tmp719 + tmp581*tmp721 - tmp584*tmp723 - tmp587*tmp725 + tmp590*tmp727 - tmp593*tmp729 - tmp596*tmp731 + tmp599*tmp733 + tmp602*tmp735 + tmp605*tmp737;
      elMat(3,6) = -tmp608*tmp717 + tmp611*tmp719 + tmp614*tmp721 - tmp617*tmp723 - tmp620*tmp725 + tmp623*tmp727 - tmp626*tmp729 - tmp629*tmp731 + tmp632*tmp733 + tmp635*tmp735 + tmp638*tmp737;
      elMat(3,7) = -tmp639*tmp717 + tmp640*tmp719 + tmp641*tmp721 - tmp642*tmp723 - tmp643*tmp725 + tmp644*tmp727 - tmp645*tmp729 - tmp646*tmp731 + tmp647*tmp733 + tmp648*tmp735 + tmp649*tmp737;
      elMat(3,8) = -tmp650*tmp717 + tmp651*tmp719 + tmp652*tmp721 - tmp653*tmp723 - tmp654*tmp725 + tmp655*tmp727 - tmp656*tmp729 - tmp657*tmp731 + tmp658*tmp733 + tmp659*tmp735 + tmp660*tmp737;
      elMat(3,9) = -tmp661*tmp717 + tmp662*tmp719 + tmp663*tmp721 - tmp664*tmp723 - tmp665*tmp725 + tmp666*tmp727 - tmp667*tmp729 - tmp668*tmp731 + tmp669*tmp733 + tmp670*tmp735 + tmp671*tmp737;
      elMat(4,0) = -tmp100*tmp745 - tmp141*tmp749 - tmp182*tmp753 - tmp223*tmp757 - tmp264*tmp761 - tmp301*tmp765 - tmp339*tmp769 - tmp376*tmp773 - tmp414*tmp777 - tmp455*tmp781 - tmp46*tmp741;
      elMat(4,1) = tmp475*tmp740 - tmp477*tmp744 + tmp479*tmp748 + tmp481*tmp752 - tmp483*tmp756 + tmp485*tmp760 + tmp487*tmp764 + tmp489*tmp768 - tmp491*tmp772 - tmp493*tmp776 + tmp495*tmp780;
      elMat(4,2) = tmp497*tmp740 + tmp499*tmp744 + tmp501*tmp748 - tmp503*tmp752 + tmp505*tmp756 - tmp507*tmp760 - tmp509*tmp764 + tmp511*tmp768 - tmp513*tmp772 + tmp515*tmp776 - tmp517*tmp780;
      elMat(4,3) = -tmp519*tmp740 + tmp521*tmp744 + tmp523*tmp748 - tmp525*tmp752 - tmp527*tmp756 + tmp529*tmp760 - tmp531*tmp764 - tmp533*tmp768 + tmp535*tmp772 + tmp537*tmp776 + tmp539*tmp780;
      elMat(4,4) = -tmp542*tmp741 - tmp545*tmp745 - tmp548*tmp749 - tmp551*tmp753 - tmp554*tmp757 - tmp557*tmp761 - tmp560*tmp765 - tmp563*tmp769 - tmp566*tmp773 - tmp569*tmp777 - tmp572*tmp781;
      elMat(4,5) = -tmp575*tmp741 - tmp578*tmp745 - tmp581*tmp749 - tmp584*tmp753 - tmp587*tmp757 - tmp590*tmp761 - tmp593*tmp765 - tmp596*tmp769 - tmp599*tmp773 - tmp602*tmp777 - tmp605*tmp781;
      elMat(4,6) = -tmp608*tmp741 - tmp611*tmp745 - tmp614*tmp749 - tmp617*tmp753 - tmp620*tmp757 - tmp623*tmp761 - tmp626*tmp765 - tmp629*tmp769 - tmp632*tmp773 - tmp635*tmp777 - tmp638*tmp781;
      elMat(4,7) = -tmp639*tmp741 - tmp640*tmp745 - tmp641*tmp749 - tmp642*tmp753 - tmp643*tmp757 - tmp644*tmp761 - tmp645*tmp765 - tmp646*tmp769 - tmp647*tmp773 - tmp648*tmp777 - tmp649*tmp781;
      elMat(4,8) = -tmp650*tmp741 - tmp651*tmp745 - tmp652*tmp749 - tmp653*tmp753 - tmp654*tmp757 - tmp655*tmp761 - tmp656*tmp765 - tmp657*tmp769 - tmp658*tmp773 - tmp659*tmp777 - tmp660*tmp781;
      elMat(4,9) = -tmp661*tmp741 - tmp662*tmp745 - tmp663*tmp749 - tmp664*tmp753 - tmp665*tmp757 - tmp666*tmp761 - tmp667*tmp765 - tmp668*tmp769 - tmp669*tmp773 - tmp670*tmp777 - tmp671*tmp781;
      elMat(5,0) = -tmp100*tmp789 - tmp141*tmp793 - tmp182*tmp797 - tmp223*tmp801 - tmp264*tmp805 - tmp301*tmp809 - tmp339*tmp813 - tmp376*tmp817 - tmp414*tmp821 - tmp455*tmp825 - tmp46*tmp785;
      elMat(5,1) = tmp475*tmp784 - tmp477*tmp788 + tmp479*tmp792 + tmp481*tmp796 - tmp483*tmp800 + tmp485*tmp804 + tmp487*tmp808 + tmp489*tmp812 - tmp491*tmp816 - tmp493*tmp820 + tmp495*tmp824;
      elMat(5,2) = tmp497*tmp784 + tmp499*tmp788 + tmp501*tmp792 - tmp503*tmp796 + tmp505*tmp800 - tmp507*tmp804 - tmp509*tmp808 + tmp511*tmp812 - tmp513*tmp816 + tmp515*tmp820 - tmp517*tmp824;
      elMat(5,3) = -tmp519*tmp784 + tmp521*tmp788 + tmp523*tmp792 - tmp525*tmp796 - tmp527*tmp800 + tmp529*tmp804 - tmp531*tmp808 - tmp533*tmp812 + tmp535*tmp816 + tmp537*tmp820 + tmp539*tmp824;
      elMat(5,4) = -tmp542*tmp785 - tmp545*tmp789 - tmp548*tmp793 - tmp551*tmp797 - tmp554*tmp801 - tmp557*tmp805 - tmp560*tmp809 - tmp563*tmp813 - tmp566*tmp817 - tmp569*tmp821 - tmp572*tmp825;
      elMat(5,5) = -tmp575*tmp785 - tmp578*tmp789 - tmp581*tmp793 - tmp584*tmp797 - tmp587*tmp801 - tmp590*tmp805 - tmp593*tmp809 - tmp596*tmp813 - tmp599*tmp817 - tmp602*tmp821 - tmp605*tmp825;
      elMat(5,6) = -tmp608*tmp785 - tmp611*tmp789 - tmp614*tmp793 - tmp617*tmp797 - tmp620*tmp801 - tmp623*tmp805 - tmp626*tmp809 - tmp629*tmp813 - tmp632*tmp817 - tmp635*tmp821 - tmp638*tmp825;
      elMat(5,7) = -tmp639*tmp785 - tmp640*tmp789 - tmp641*tmp793 - tmp642*tmp797 - tmp643*tmp801 - tmp644*tmp805 - tmp645*tmp809 - tmp646*tmp813 - tmp647*tmp817 - tmp648*tmp821 - tmp649*tmp825;
      elMat(5,8) = -tmp650*tmp785 - tmp651*tmp789 - tmp652*tmp793 - tmp653*tmp797 - tmp654*tmp801 - tmp655*tmp805 - tmp656*tmp809 - tmp657*tmp813 - tmp658*tmp817 - tmp659*tmp821 - tmp660*tmp825;
      elMat(5,9) = -tmp661*tmp785 - tmp662*tmp789 - tmp663*tmp793 - tmp664*tmp797 - tmp665*tmp801 - tmp666*tmp805 - tmp667*tmp809 - tmp668*tmp813 - tmp669*tmp817 - tmp670*tmp821 - tmp671*tmp825;
      elMat(6,0) = -tmp100*tmp833 - tmp141*tmp837 - tmp182*tmp841 - tmp223*tmp845 - tmp264*tmp849 - tmp301*tmp853 - tmp339*tmp857 - tmp376*tmp861 - tmp414*tmp865 - tmp455*tmp869 - tmp46*tmp829;
      elMat(6,1) = tmp475*tmp828 - tmp477*tmp832 + tmp479*tmp836 + tmp481*tmp840 - tmp483*tmp844 + tmp485*tmp848 + tmp487*tmp852 + tmp489*tmp856 - tmp491*tmp860 - tmp493*tmp864 + tmp495*tmp868;
      elMat(6,2) = tmp497*tmp828 + tmp499*tmp832 + tmp501*tmp836 - tmp503*tmp840 + tmp505*tmp844 - tmp507*tmp848 - tmp509*tmp852 + tmp511*tmp856 - tmp513*tmp860 + tmp515*tmp864 - tmp517*tmp868;
      elMat(6,3) = -tmp519*tmp828 + tmp521*tmp832 + tmp523*tmp836 - tmp525*tmp840 - tmp527*tmp844 + tmp529*tmp848 - tmp531*tmp852 - tmp533*tmp856 + tmp535*tmp860 + tmp537*tmp864 + tmp539*tmp868;
      elMat(6,4) = -tmp542*tmp829 - tmp545*tmp833 - tmp548*tmp837 - tmp551*tmp841 - tmp554*tmp845 - tmp557*tmp849 - tmp560*tmp853 - tmp563*tmp857 - tmp566*tmp861 - tmp569*tmp865 - tmp572*tmp869;
      elMat(6,5) = -tmp575*tmp829 - tmp578*tmp833 - tmp581*tmp837 - tmp584*tmp841 - tmp587*tmp845 - tmp590*tmp849 - tmp593*tmp853 - tmp596*tmp857 - tmp599*tmp861 - tmp602*tmp865 - tmp605*tmp869;
      elMat(6,6) = -tmp608*tmp829 - tmp611*tmp833 - tmp614*tmp837 - tmp617*tmp841 - tmp620*tmp845 - tmp623*tmp849 - tmp626*tmp853 - tmp629*tmp857 - tmp632*tmp861 - tmp635*tmp865 - tmp638*tmp869;
      elMat(6,7) = -tmp639*tmp829 - tmp640*tmp833 - tmp641*tmp837 - tmp642*tmp841 - tmp643*tmp845 - tmp644*tmp849 - tmp645*tmp853 - tmp646*tmp857 - tmp647*tmp861 - tmp648*tmp865 - tmp649*tmp869;
      elMat(6,8) = -tmp650*tmp829 - tmp651*tmp833 - tmp652*tmp837 - tmp653*tmp841 - tmp654*tmp845 - tmp655*tmp849 - tmp656*tmp853 - tmp657*tmp857 - tmp658*tmp861 - tmp659*tmp865 - tmp660*tmp869;
      elMat(6,9) = -tmp661*tmp829 - tmp662*tmp833 - tmp663*tmp837 - tmp664*tmp841 - tmp665*tmp845 - tmp666*tmp849 - tmp667*tmp853 - tmp668*tmp857 - tmp669*tmp861 - tmp670*tmp865 - tmp671*tmp869;
      elMat(7,0) = -tmp100*tmp873 - tmp141*tmp875 - tmp182*tmp877 - tmp223*tmp879 - tmp264*tmp881 - tmp301*tmp883 - tmp339*tmp885 - tmp376*tmp887 - tmp414*tmp889 - tmp455*tmp891 - tmp46*tmp871;
      elMat(7,1) = tmp475*tmp870 - tmp477*tmp872 + tmp479*tmp874 + tmp481*tmp876 - tmp483*tmp878 + tmp485*tmp880 + tmp487*tmp882 + tmp489*tmp884 - tmp491*tmp886 - tmp493*tmp888 + tmp495*tmp890;
      elMat(7,2) = tmp497*tmp870 + tmp499*tmp872 + tmp501*tmp874 - tmp503*tmp876 + tmp505*tmp878 - tmp507*tmp880 - tmp509*tmp882 + tmp511*tmp884 - tmp513*tmp886 + tmp515*tmp888 - tmp517*tmp890;
      elMat(7,3) = -tmp519*tmp870 + tmp521*tmp872 + tmp523*tmp874 - tmp525*tmp876 - tmp527*tmp878 + tmp529*tmp880 - tmp531*tmp882 - tmp533*tmp884 + tmp535*tmp886 + tmp537*tmp888 + tmp539*tmp890;
      elMat(7,4) = -tmp542*tmp871 - tmp545*tmp873 - tmp548*tmp875 - tmp551*tmp877 - tmp554*tmp879 - tmp557*tmp881 - tmp560*tmp883 - tmp563*tmp885 - tmp566*tmp887 - tmp569*tmp889 - tmp572*tmp891;
      elMat(7,5) = -tmp575*tmp871 - tmp578*tmp873 - tmp581*tmp875 - tmp584*tmp877 - tmp587*tmp879 - tmp590*tmp881 - tmp593*tmp883 - tmp596*tmp885 - tmp599*tmp887 - tmp602*tmp889 - tmp605*tmp891;
      elMat(7,6) = -tmp608*tmp871 - tmp611*tmp873 - tmp614*tmp875 - tmp617*tmp877 - tmp620*tmp879 - tmp623*tmp881 - tmp626*tmp883 - tmp629*tmp885 - tmp632*tmp887 - tmp635*tmp889 - tmp638*tmp891;
      elMat(7,7) = -tmp639*tmp871 - tmp640*tmp873 - tmp641*tmp875 - tmp642*tmp877 - tmp643*tmp879 - tmp644*tmp881 - tmp645*tmp883 - tmp646*tmp885 - tmp647*tmp887 - tmp648*tmp889 - tmp649*tmp891;
      elMat(7,8) = -tmp650*tmp871 - tmp651*tmp873 - tmp652*tmp875 - tmp653*tmp877 - tmp654*tmp879 - tmp655*tmp881 - tmp656*tmp883 - tmp657*tmp885 - tmp658*tmp887 - tmp659*tmp889 - tmp660*tmp891;
      elMat(7,9) = -tmp661*tmp871 - tmp662*tmp873 - tmp663*tmp875 - tmp664*tmp877 - tmp665*tmp879 - tmp666*tmp881 - tmp667*tmp883 - tmp668*tmp885 - tmp669*tmp887 - tmp670*tmp889 - tmp671*tmp891;
      elMat(8,0) = -tmp100*tmp895 - tmp141*tmp897 - tmp182*tmp899 - tmp223*tmp901 - tmp264*tmp903 - tmp301*tmp905 - tmp339*tmp907 - tmp376*tmp909 - tmp414*tmp911 - tmp455*tmp913 - tmp46*tmp893;
      elMat(8,1) = tmp475*tmp892 - tmp477*tmp894 + tmp479*tmp896 + tmp481*tmp898 - tmp483*tmp900 + tmp485*tmp902 + tmp487*tmp904 + tmp489*tmp906 - tmp491*tmp908 - tmp493*tmp910 + tmp495*tmp912;
      elMat(8,2) = tmp497*tmp892 + tmp499*tmp894 + tmp501*tmp896 - tmp503*tmp898 + tmp505*tmp900 - tmp507*tmp902 - tmp509*tmp904 + tmp511*tmp906 - tmp513*tmp908 + tmp515*tmp910 - tmp517*tmp912;
      elMat(8,3) = -tmp519*tmp892 + tmp521*tmp894 + tmp523*tmp896 - tmp525*tmp898 - tmp527*tmp900 + tmp529*tmp902 - tmp531*tmp904 - tmp533*tmp906 + tmp535*tmp908 + tmp537*tmp910 + tmp539*tmp912;
      elMat(8,4) = -tmp542*tmp893 - tmp545*tmp895 - tmp548*tmp897 - tmp551*tmp899 - tmp554*tmp901 - tmp557*tmp903 - tmp560*tmp905 - tmp563*tmp907 - tmp566*tmp909 - tmp569*tmp911 - tmp572*tmp913;
      elMat(8,5) = -tmp575*tmp893 - tmp578*tmp895 - tmp581*tmp897 - tmp584*tmp899 - tmp587*tmp901 - tmp590*tmp903 - tmp593*tmp905 - tmp596*tmp907 - tmp599*tmp909 - tmp602*tmp911 - tmp605*tmp913;
      elMat(8,6) = -tmp608*tmp893 - tmp611*tmp895 - tmp614*tmp897 - tmp617*tmp899 - tmp620*tmp901 - tmp623*tmp903 - tmp626*tmp905 - tmp629*tmp907 - tmp632*tmp909 - tmp635*tmp911 - tmp638*tmp913;
      elMat(8,7) = -tmp639*tmp893 - tmp640*tmp895 - tmp641*tmp897 - tmp642*tmp899 - tmp643*tmp901 - tmp644*tmp903 - tmp645*tmp905 - tmp646*tmp907 - tmp647*tmp909 - tmp648*tmp911 - tmp649*tmp913;
      elMat(8,8) = -tmp650*tmp893 - tmp651*tmp895 - tmp652*tmp897 - tmp653*tmp899 - tmp654*tmp901 - tmp655*tmp903 - tmp656*tmp905 - tmp657*tmp907 - tmp658*tmp909 - tmp659*tmp911 - tmp660*tmp913;
      elMat(8,9) = -tmp661*tmp893 - tmp662*tmp895 - tmp663*tmp897 - tmp664*tmp899 - tmp665*tmp901 - tmp666*tmp903 - tmp667*tmp905 - tmp668*tmp907 - tmp669*tmp909 - tmp670*tmp911 - tmp671*tmp913;
      elMat(9,0) = -tmp100*tmp917 - tmp141*tmp919 - tmp182*tmp921 - tmp223*tmp923 - tmp264*tmp925 - tmp301*tmp927 - tmp339*tmp929 - tmp376*tmp931 - tmp414*tmp933 - tmp455*tmp935 - tmp46*tmp915;
      elMat(9,1) = tmp475*tmp914 - tmp477*tmp916 + tmp479*tmp918 + tmp481*tmp920 - tmp483*tmp922 + tmp485*tmp924 + tmp487*tmp926 + tmp489*tmp928 - tmp491*tmp930 - tmp493*tmp932 + tmp495*tmp934;
      elMat(9,2) = tmp497*tmp914 + tmp499*tmp916 + tmp501*tmp918 - tmp503*tmp920 + tmp505*tmp922 - tmp507*tmp924 - tmp509*tmp926 + tmp511*tmp928 - tmp513*tmp930 + tmp515*tmp932 - tmp517*tmp934;
      elMat(9,3) = -tmp519*tmp914 + tmp521*tmp916 + tmp523*tmp918 - tmp525*tmp920 - tmp527*tmp922 + tmp529*tmp924 - tmp531*tmp926 - tmp533*tmp928 + tmp535*tmp930 + tmp537*tmp932 + tmp539*tmp934;
      elMat(9,4) = -tmp542*tmp915 - tmp545*tmp917 - tmp548*tmp919 - tmp551*tmp921 - tmp554*tmp923 - tmp557*tmp925 - tmp560*tmp927 - tmp563*tmp929 - tmp566*tmp931 - tmp569*tmp933 - tmp572*tmp935;
      elMat(9,5) = -tmp575*tmp915 - tmp578*tmp917 - tmp581*tmp919 - tmp584*tmp921 - tmp587*tmp923 - tmp590*tmp925 - tmp593*tmp927 - tmp596*tmp929 - tmp599*tmp931 - tmp602*tmp933 - tmp605*tmp935;
      elMat(9,6) = -tmp608*tmp915 - tmp611*tmp917 - tmp614*tmp919 - tmp617*tmp921 - tmp620*tmp923 - tmp623*tmp925 - tmp626*tmp927 - tmp629*tmp929 - tmp632*tmp931 - tmp635*tmp933 - tmp638*tmp935;
      elMat(9,7) = -tmp639*tmp915 - tmp640*tmp917 - tmp641*tmp919 - tmp642*tmp921 - tmp643*tmp923 - tmp644*tmp925 - tmp645*tmp927 - tmp646*tmp929 - tmp647*tmp931 - tmp648*tmp933 - tmp649*tmp935;
      elMat(9,8) = -tmp650*tmp915 - tmp651*tmp917 - tmp652*tmp919 - tmp653*tmp921 - tmp654*tmp923 - tmp655*tmp925 - tmp656*tmp927 - tmp657*tmp929 - tmp658*tmp931 - tmp659*tmp933 - tmp660*tmp935;
      elMat(9,9) = -tmp661*tmp915 - tmp662*tmp917 - tmp663*tmp919 - tmp664*tmp921 - tmp665*tmp923 - tmp666*tmp925 - tmp667*tmp927 - tmp668*tmp929 - tmp669*tmp931 - tmp670*tmp933 - tmp671*tmp935;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp17*J_B_1(1, 1) - tmp18*J_B_1(1, 2) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp16*tmp22;
      const real_t tmp24 = tmp23*tmp7;
      const real_t tmp25 = tmp24*tmp6;
      const real_t tmp26 = tmp11*tmp4 - tmp14;
      const real_t tmp27 = tmp24*tmp26;
      const real_t tmp28 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp29 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp30 = tmp23*tmp29;
      const real_t tmp31 = tmp28*tmp30;
      const real_t tmp32 = tmp0*tmp8 - tmp15;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp35 = tmp24*tmp34;
      const real_t tmp36 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp37 = tmp30*tmp36;
      const real_t tmp38 = -tmp1*tmp10 + tmp13;
      const real_t tmp39 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp40 = tmp23*tmp39;
      const real_t tmp41 = tmp38*tmp40;
      const real_t tmp42 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp43 = tmp40*tmp42;
      const real_t tmp44 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp45 = tmp40*tmp44;
      const real_t tmp46 = coords[0][0]*coords[1][1];
      const real_t tmp47 = coords[0][0]*coords[1][2];
      const real_t tmp48 = coords[2][1]*coords[3][2];
      const real_t tmp49 = coords[0][1]*coords[1][0];
      const real_t tmp50 = coords[0][1]*coords[1][2];
      const real_t tmp51 = coords[2][2]*coords[3][0];
      const real_t tmp52 = coords[0][2]*coords[1][0];
      const real_t tmp53 = coords[0][2]*coords[1][1];
      const real_t tmp54 = coords[2][0]*coords[3][1];
      const real_t tmp55 = coords[2][2]*coords[3][1];
      const real_t tmp56 = coords[2][0]*coords[3][2];
      const real_t tmp57 = coords[2][1]*coords[3][0];
      const real_t tmp58 = std::abs(coords[0][0]*tmp48 - coords[0][0]*tmp55 + coords[0][1]*tmp51 - coords[0][1]*tmp56 + coords[0][2]*tmp54 - coords[0][2]*tmp57 - coords[1][0]*tmp48 + coords[1][0]*tmp55 - coords[1][1]*tmp51 + coords[1][1]*tmp56 - coords[1][2]*tmp54 + coords[1][2]*tmp57 + coords[2][0]*tmp50 - coords[2][0]*tmp53 - coords[2][1]*tmp47 + coords[2][1]*tmp52 + coords[2][2]*tmp46 - coords[2][2]*tmp49 - coords[3][0]*tmp50 + coords[3][0]*tmp53 + coords[3][1]*tmp47 - coords[3][1]*tmp52 - coords[3][2]*tmp46 + coords[3][2]*tmp49);
      const real_t tmp59 = 0.55279693041046674*tmp23;
      const real_t tmp60 = tmp59*(-tmp18 + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp61 = tmp59*(tmp17 - tmp20);
      const real_t tmp62 = tmp59*(-tmp19 + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp63 = tmp58*(tmp26*tmp60 + tmp28*tmp61 + tmp32*tmp61 + tmp34*tmp60 + tmp36*tmp61 + tmp38*tmp62 + tmp42*tmp62 + tmp44*tmp62 + tmp6*tmp60)*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp64 = 0.011829781572832234*tmp63;
      const real_t tmp65 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp66 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp67 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp68 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp69 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp70 = tmp66*J_B_10(1, 1) - tmp67*J_B_10(1, 2) - tmp68*J_B_10(1, 0) - tmp69*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp71 = 1.0 / (tmp70);
      const real_t tmp72 = tmp16*tmp71;
      const real_t tmp73 = tmp65*tmp72;
      const real_t tmp74 = tmp6*tmp73;
      const real_t tmp75 = tmp26*tmp73;
      const real_t tmp76 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp77 = tmp72*tmp76;
      const real_t tmp78 = tmp28*tmp77;
      const real_t tmp79 = tmp32*tmp77;
      const real_t tmp80 = tmp34*tmp73;
      const real_t tmp81 = tmp36*tmp77;
      const real_t tmp82 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp83 = tmp72*tmp82;
      const real_t tmp84 = tmp38*tmp83;
      const real_t tmp85 = tmp42*tmp83;
      const real_t tmp86 = tmp44*tmp83;
      const real_t tmp87 = 0.60805118540288361*tmp72;
      const real_t tmp88 = tmp87*(-tmp67 + J_B_10(0, 1)*J_B_10(2, 0));
      const real_t tmp89 = tmp87*(tmp66 - tmp69);
      const real_t tmp90 = tmp87*(-tmp68 + J_B_10(0, 2)*J_B_10(2, 1));
      const real_t tmp91 = tmp58*(tmp26*tmp88 + tmp28*tmp89 + tmp32*tmp89 + tmp34*tmp88 + tmp36*tmp89 + tmp38*tmp90 + tmp42*tmp90 + tmp44*tmp90 + tmp6*tmp88)*std::abs(tmp70)*ScalarCoeff0_10;
      const real_t tmp92 = 0.0061414854617707626*tmp91;
      const real_t tmp93 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp94 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp95 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp96 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp97 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp98 = tmp94*J_B_11(1, 1) - tmp95*J_B_11(1, 2) - tmp96*J_B_11(1, 0) - tmp97*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp99 = 1.0 / (tmp98);
      const real_t tmp100 = tmp16*tmp99;
      const real_t tmp101 = tmp100*tmp93;
      const real_t tmp102 = tmp101*tmp6;
      const real_t tmp103 = tmp101*tmp26;
      const real_t tmp104 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp105 = tmp100*tmp104;
      const real_t tmp106 = tmp105*tmp28;
      const real_t tmp107 = tmp105*tmp32;
      const real_t tmp108 = tmp101*tmp34;
      const real_t tmp109 = tmp105*tmp36;
      const real_t tmp110 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp111 = tmp100*tmp110;
      const real_t tmp112 = tmp111*tmp38;
      const real_t tmp113 = tmp111*tmp42;
      const real_t tmp114 = tmp111*tmp44;
      const real_t tmp115 = 2.0850189307815055*tmp100;
      const real_t tmp116 = tmp115*(-tmp95 + J_B_11(0, 1)*J_B_11(2, 0));
      const real_t tmp117 = tmp115*(tmp94 - tmp97);
      const real_t tmp118 = tmp115*(-tmp96 + J_B_11(0, 2)*J_B_11(2, 1));
      const real_t tmp119 = tmp58*(-tmp116*tmp26 - tmp116*tmp34 - tmp116*tmp6 - tmp117*tmp28 - tmp117*tmp32 - tmp117*tmp36 - tmp118*tmp38 - tmp118*tmp42 - tmp118*tmp44)*std::abs(tmp98)*ScalarCoeff0_11;
      const real_t tmp120 = 0.0043612323249822204*tmp119;
      const real_t tmp121 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp122 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp123 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp124 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp125 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp126 = tmp122*J_B_2(1, 1) - tmp123*J_B_2(1, 2) - tmp124*J_B_2(1, 0) - tmp125*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp127 = 1.0 / (tmp126);
      const real_t tmp128 = tmp127*tmp16;
      const real_t tmp129 = tmp121*tmp128;
      const real_t tmp130 = tmp129*tmp6;
      const real_t tmp131 = tmp129*tmp26;
      const real_t tmp132 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp133 = tmp128*tmp132;
      const real_t tmp134 = tmp133*tmp28;
      const real_t tmp135 = tmp133*tmp32;
      const real_t tmp136 = tmp129*tmp34;
      const real_t tmp137 = tmp133*tmp36;
      const real_t tmp138 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp139 = tmp128*tmp138;
      const real_t tmp140 = tmp139*tmp38;
      const real_t tmp141 = tmp139*tmp42;
      const real_t tmp142 = tmp139*tmp44;
      const real_t tmp143 = 0.29317593934991559*tmp128;
      const real_t tmp144 = tmp143*(-tmp123 + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp145 = tmp143*(tmp122 - tmp125);
      const real_t tmp146 = tmp143*(-tmp124 + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp147 = tmp58*(-tmp144*tmp26 - tmp144*tmp34 - tmp144*tmp6 - tmp145*tmp28 - tmp145*tmp32 - tmp145*tmp36 - tmp146*tmp38 - tmp146*tmp42 - tmp146*tmp44)*std::abs(tmp126)*ScalarCoeff0_2;
      const real_t tmp148 = 0.012248248047610821*tmp147;
      const real_t tmp149 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp150 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp151 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp152 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp153 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp154 = tmp150*J_B_3(1, 1) - tmp151*J_B_3(1, 2) - tmp152*J_B_3(1, 0) - tmp153*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp155 = 1.0 / (tmp154);
      const real_t tmp156 = tmp155*tmp16;
      const real_t tmp157 = tmp149*tmp156;
      const real_t tmp158 = tmp157*tmp6;
      const real_t tmp159 = tmp157*tmp26;
      const real_t tmp160 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp161 = tmp156*tmp160;
      const real_t tmp162 = tmp161*tmp28;
      const real_t tmp163 = tmp161*tmp32;
      const real_t tmp164 = tmp157*tmp34;
      const real_t tmp165 = tmp161*tmp36;
      const real_t tmp166 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp167 = tmp156*tmp166;
      const real_t tmp168 = tmp167*tmp38;
      const real_t tmp169 = tmp167*tmp42;
      const real_t tmp170 = tmp167*tmp44;
      const real_t tmp171 = 0.56151037867223397*tmp156;
      const real_t tmp172 = tmp171*(-tmp151 + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp173 = tmp171*(tmp150 - tmp153);
      const real_t tmp174 = tmp171*(-tmp152 + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp175 = tmp58*(tmp172*tmp26 + tmp172*tmp34 + tmp172*tmp6 + tmp173*tmp28 + tmp173*tmp32 + tmp173*tmp36 + tmp174*tmp38 + tmp174*tmp42 + tmp174*tmp44)*std::abs(tmp154)*ScalarCoeff0_3;
      const real_t tmp176 = 0.017219568446249611*tmp175;
      const real_t tmp177 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp178 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp179 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp180 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp181 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp182 = tmp178*J_B_4(1, 1) - tmp179*J_B_4(1, 2) - tmp180*J_B_4(1, 0) - tmp181*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp183 = 1.0 / (tmp182);
      const real_t tmp184 = tmp16*tmp183;
      const real_t tmp185 = tmp177*tmp184;
      const real_t tmp186 = tmp185*tmp6;
      const real_t tmp187 = tmp185*tmp26;
      const real_t tmp188 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp189 = tmp184*tmp188;
      const real_t tmp190 = tmp189*tmp28;
      const real_t tmp191 = tmp189*tmp32;
      const real_t tmp192 = tmp185*tmp34;
      const real_t tmp193 = tmp189*tmp36;
      const real_t tmp194 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp195 = tmp184*tmp194;
      const real_t tmp196 = tmp195*tmp38;
      const real_t tmp197 = tmp195*tmp42;
      const real_t tmp198 = tmp195*tmp44;
      const real_t tmp199 = 0.31389282688815401*tmp184;
      const real_t tmp200 = tmp199*(-tmp179 + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp201 = tmp199*(tmp178 - tmp181);
      const real_t tmp202 = tmp199*(-tmp180 + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp203 = tmp58*(-tmp200*tmp26 - tmp200*tmp34 - tmp200*tmp6 - tmp201*tmp28 - tmp201*tmp32 - tmp201*tmp36 - tmp202*tmp38 - tmp202*tmp42 - tmp202*tmp44)*std::abs(tmp182)*ScalarCoeff0_4;
      const real_t tmp204 = 0.021490090227737114*tmp203;
      const real_t tmp205 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp206 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp207 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp208 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp209 = tmp205*J_B_5(1, 1) - tmp206*J_B_5(1, 2) - tmp207*J_B_5(1, 0) - tmp208*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp210 = tmp16/tmp209;
      const real_t tmp211 = tmp210*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp212 = tmp211*tmp6;
      const real_t tmp213 = tmp211*tmp26;
      const real_t tmp214 = tmp210*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp215 = tmp214*tmp28;
      const real_t tmp216 = tmp214*tmp32;
      const real_t tmp217 = tmp211*tmp34;
      const real_t tmp218 = tmp214*tmp36;
      const real_t tmp219 = tmp210*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp220 = tmp219*tmp38;
      const real_t tmp221 = tmp219*tmp42;
      const real_t tmp222 = tmp219*tmp44;
      const real_t tmp223 = 0.99043597017024343*tmp210;
      const real_t tmp224 = tmp223*(-tmp206 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp225 = tmp223*(tmp205 - tmp208);
      const real_t tmp226 = tmp223*(-tmp207 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp227 = tmp58*(tmp224*tmp26 + tmp224*tmp34 + tmp224*tmp6 + tmp225*tmp28 + tmp225*tmp32 + tmp225*tmp36 + tmp226*tmp38 + tmp226*tmp42 + tmp226*tmp44)*std::abs(tmp209)*ScalarCoeff0_5;
      const real_t tmp228 = 0.0084625239161731543*tmp227;
      const real_t tmp229 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp230 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp231 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp232 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp233 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp234 = tmp230*J_B_6(1, 1) - tmp231*J_B_6(1, 2) - tmp232*J_B_6(1, 0) - tmp233*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp235 = 1.0 / (tmp234);
      const real_t tmp236 = tmp16*tmp235;
      const real_t tmp237 = tmp229*tmp236;
      const real_t tmp238 = tmp237*tmp6;
      const real_t tmp239 = tmp237*tmp26;
      const real_t tmp240 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp241 = tmp236*tmp240;
      const real_t tmp242 = tmp241*tmp28;
      const real_t tmp243 = tmp241*tmp32;
      const real_t tmp244 = tmp237*tmp34;
      const real_t tmp245 = tmp241*tmp36;
      const real_t tmp246 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp247 = tmp236*tmp246;
      const real_t tmp248 = tmp247*tmp38;
      const real_t tmp249 = tmp247*tmp42;
      const real_t tmp250 = tmp247*tmp44;
      const real_t tmp251 = 1.2518910405721839*tmp236;
      const real_t tmp252 = tmp251*(-tmp231 + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp253 = tmp251*(tmp230 - tmp233);
      const real_t tmp254 = tmp251*(-tmp232 + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp255 = tmp58*(-tmp252*tmp26 - tmp252*tmp34 - tmp252*tmp6 - tmp253*tmp28 - tmp253*tmp32 - tmp253*tmp36 - tmp254*tmp38 - tmp254*tmp42 - tmp254*tmp44)*std::abs(tmp234)*ScalarCoeff0_6;
      const real_t tmp256 = 0.0088251866742250357*tmp255;
      const real_t tmp257 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp258 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp259 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp260 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp261 = tmp257*J_B_7(1, 1) - tmp258*J_B_7(1, 2) - tmp259*J_B_7(1, 0) - tmp260*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp262 = tmp16/tmp261;
      const real_t tmp263 = tmp262*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp264 = tmp263*tmp6;
      const real_t tmp265 = tmp26*tmp263;
      const real_t tmp266 = tmp262*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp267 = tmp266*tmp28;
      const real_t tmp268 = tmp266*tmp32;
      const real_t tmp269 = tmp263*tmp34;
      const real_t tmp270 = tmp266*tmp36;
      const real_t tmp271 = tmp262*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp272 = tmp271*tmp38;
      const real_t tmp273 = tmp271*tmp42;
      const real_t tmp274 = tmp271*tmp44;
      const real_t tmp275 = 0.77270393148826533*tmp262;
      const real_t tmp276 = tmp275*(-tmp258 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp277 = tmp275*(tmp257 - tmp260);
      const real_t tmp278 = tmp275*(-tmp259 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp279 = tmp58*(tmp26*tmp276 + tmp276*tmp34 + tmp276*tmp6 + tmp277*tmp28 + tmp277*tmp32 + tmp277*tmp36 + tmp278*tmp38 + tmp278*tmp42 + tmp278*tmp44)*std::abs(tmp261)*ScalarCoeff0_7;
      const real_t tmp280 = 0.0077188851041817101*tmp279;
      const real_t tmp281 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp282 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp283 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp284 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp285 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp286 = tmp282*J_B_8(1, 1) - tmp283*J_B_8(1, 2) - tmp284*J_B_8(1, 0) - tmp285*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp287 = 1.0 / (tmp286);
      const real_t tmp288 = tmp16*tmp287;
      const real_t tmp289 = tmp281*tmp288;
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = tmp26*tmp289;
      const real_t tmp292 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp293 = tmp288*tmp292;
      const real_t tmp294 = tmp28*tmp293;
      const real_t tmp295 = tmp293*tmp32;
      const real_t tmp296 = tmp289*tmp34;
      const real_t tmp297 = tmp293*tmp36;
      const real_t tmp298 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp299 = tmp288*tmp298;
      const real_t tmp300 = tmp299*tmp38;
      const real_t tmp301 = tmp299*tmp42;
      const real_t tmp302 = tmp299*tmp44;
      const real_t tmp303 = 0.9184440441026207*tmp288;
      const real_t tmp304 = tmp303*(-tmp283 + J_B_8(0, 1)*J_B_8(2, 0));
      const real_t tmp305 = tmp303*(tmp282 - tmp285);
      const real_t tmp306 = tmp303*(-tmp284 + J_B_8(0, 2)*J_B_8(2, 1));
      const real_t tmp307 = tmp58*(-tmp26*tmp304 - tmp28*tmp305 - tmp304*tmp34 - tmp304*tmp6 - tmp305*tmp32 - tmp305*tmp36 - tmp306*tmp38 - tmp306*tmp42 - tmp306*tmp44)*std::abs(tmp286)*ScalarCoeff0_8;
      const real_t tmp308 = 0.006659242794062166*tmp307;
      const real_t tmp309 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp310 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp311 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp312 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp313 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp314 = tmp310*J_B_9(1, 1) - tmp311*J_B_9(1, 2) - tmp312*J_B_9(1, 0) - tmp313*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp315 = 1.0 / (tmp314);
      const real_t tmp316 = tmp16*tmp315;
      const real_t tmp317 = tmp309*tmp316;
      const real_t tmp318 = tmp317*tmp6;
      const real_t tmp319 = tmp26*tmp317;
      const real_t tmp320 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp321 = tmp316*tmp320;
      const real_t tmp322 = tmp28*tmp321;
      const real_t tmp323 = tmp32*tmp321;
      const real_t tmp324 = tmp317*tmp34;
      const real_t tmp325 = tmp321*tmp36;
      const real_t tmp326 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp327 = tmp316*tmp326;
      const real_t tmp328 = tmp327*tmp38;
      const real_t tmp329 = tmp327*tmp42;
      const real_t tmp330 = tmp327*tmp44;
      const real_t tmp331 = 0.37454442704241986*tmp316;
      const real_t tmp332 = tmp331*(-tmp311 + J_B_9(0, 1)*J_B_9(2, 0));
      const real_t tmp333 = tmp331*(tmp310 - tmp313);
      const real_t tmp334 = tmp331*(-tmp312 + J_B_9(0, 2)*J_B_9(2, 1));
      const real_t tmp335 = tmp58*(tmp26*tmp332 + tmp28*tmp333 + tmp32*tmp333 + tmp332*tmp34 + tmp332*tmp6 + tmp333*tmp36 + tmp334*tmp38 + tmp334*tmp42 + tmp334*tmp44)*std::abs(tmp314)*ScalarCoeff0_9;
      const real_t tmp336 = 0.0061548665412862651*tmp335;
      const real_t tmp337 = 2.7375616618121592*tmp27 + 2.7375616618121592*tmp33 + 2.7375616618121592*tmp43;
      const real_t tmp338 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp31 + 0.42641669024797446*tmp41;
      const real_t tmp339 = 0.2723974837528258*tmp75 + 0.2723974837528258*tmp79 + 0.2723974837528258*tmp85;
      const real_t tmp340 = 0.3256196736114374*tmp74 + 0.3256196736114374*tmp78 + 0.3256196736114374*tmp84;
      const real_t tmp341 = 0.054242807519210512*tmp103 + 0.054242807519210512*tmp107 + 0.054242807519210512*tmp113;
      const real_t tmp342 = 0.69877623478892303*tmp102 + 0.69877623478892303*tmp106 + 0.69877623478892303*tmp112;
      const real_t tmp343 = 1.2716142408535775*tmp131 + 1.2716142408535775*tmp135 + 1.2716142408535775*tmp141;
      const real_t tmp344 = 1.3169318389705873*tmp130 + 1.3169318389705873*tmp134 + 1.3169318389705873*tmp140;
      const real_t tmp345 = 1.4152929568371884*tmp159 + 1.4152929568371884*tmp163 + 1.4152929568371884*tmp169;
      const real_t tmp346 = 0.41537646564397157*tmp158 + 0.41537646564397157*tmp162 + 0.41537646564397157*tmp168;
      const real_t tmp347 = 0.50720690366156718*tmp187 + 0.50720690366156718*tmp191 + 0.50720690366156718*tmp197;
      const real_t tmp348 = 1.2177936097379878*tmp186 + 1.2177936097379878*tmp190 + 1.2177936097379878*tmp196;
      const real_t tmp349 = 1.3207616593498592*tmp213 + 1.3207616593498592*tmp216 + 1.3207616593498592*tmp221;
      const real_t tmp350 = 2.1520288156647434*tmp212 + 2.1520288156647434*tmp215 + 2.1520288156647434*tmp220;
      const real_t tmp351 = 1.2259759537187613*tmp239 + 1.2259759537187613*tmp243 + 1.2259759537187613*tmp249;
      const real_t tmp352 = 0.035965040373342916*tmp238 + 0.035965040373342916*tmp242 + 0.035965040373342916*tmp248;
      const real_t tmp353 = 0.23782646519773576*tmp265 + 0.23782646519773576*tmp268 + 0.23782646519773576*tmp273;
      const real_t tmp354 = 1.7318139619254227*tmp264 + 1.7318139619254227*tmp267 + 1.7318139619254227*tmp272;
      const real_t tmp355 = 0.19112574223634571*tmp291 + 0.19112574223634571*tmp295 + 0.19112574223634571*tmp301;
      const real_t tmp356 = 0.21336495814298084*tmp290 + 0.21336495814298084*tmp294 + 0.21336495814298084*tmp300;
      const real_t tmp357 = 0.14073571909439453*tmp319 + 0.14073571909439453*tmp323 + 0.14073571909439453*tmp329;
      const real_t tmp358 = 2.9649155283744921*tmp318 + 2.9649155283744921*tmp322 + 2.9649155283744921*tmp328;
      const real_t tmp359 = 2.7375616618121592*tmp35 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp45;
      const real_t tmp360 = 0.38881857835033307*tmp25 + 0.38881857835033307*tmp31 + 0.38881857835033307*tmp41;
      const real_t tmp361 = 0.2723974837528258*tmp80 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp86;
      const real_t tmp362 = 3.0100340280386204*tmp74 + 3.0100340280386204*tmp78 + 3.0100340280386204*tmp84;
      const real_t tmp363 = 0.054242807519210512*tmp108 + 0.054242807519210512*tmp109 + 0.054242807519210512*tmp114;
      const real_t tmp364 = 0.16196202691036121*tmp102 + 0.16196202691036121*tmp106 + 0.16196202691036121*tmp112;
      const real_t tmp365 = 1.2716142408535775*tmp136 + 1.2716142408535775*tmp137 + 1.2716142408535775*tmp142;
      const real_t tmp366 = 0.11827798082591956*tmp130 + 0.11827798082591956*tmp134 + 0.11827798082591956*tmp140;
      const real_t tmp367 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp165 + 1.4152929568371884*tmp170;
      const real_t tmp368 = 1.730840956191074*tmp158 + 1.730840956191074*tmp162 + 1.730840956191074*tmp168;
      const real_t tmp369 = 0.50720690366156718*tmp192 + 0.50720690366156718*tmp193 + 0.50720690366156718*tmp198;
      const real_t tmp370 = 0.96110665971229103*tmp186 + 0.96110665971229103*tmp190 + 0.96110665971229103*tmp196;
      const real_t tmp371 = 1.3207616593498592*tmp217 + 1.3207616593498592*tmp218 + 1.3207616593498592*tmp222;
      const real_t tmp372 = 0.51764549515564062*tmp212 + 0.51764549515564062*tmp215 + 0.51764549515564062*tmp220;
      const real_t tmp373 = 1.2259759537187613*tmp244 + 1.2259759537187613*tmp245 + 1.2259759537187613*tmp250;
      const real_t tmp374 = 0.48616796533571183*tmp238 + 0.48616796533571183*tmp242 + 0.48616796533571183*tmp248;
      const real_t tmp375 = 0.23782646519773576*tmp269 + 0.23782646519773576*tmp270 + 0.23782646519773576*tmp274;
      const real_t tmp376 = 1.8030635043651069*tmp264 + 1.8030635043651069*tmp267 + 1.8030635043651069*tmp272;
      const real_t tmp377 = 0.19112574223634571*tmp296 + 0.19112574223634571*tmp297 + 0.19112574223634571*tmp302;
      const real_t tmp378 = 1.6770652555180527*tmp290 + 1.6770652555180527*tmp294 + 1.6770652555180527*tmp300;
      const real_t tmp379 = 0.14073571909439453*tmp324 + 0.14073571909439453*tmp325 + 0.14073571909439453*tmp330;
      const real_t tmp380 = 0.2688931795735332*tmp318 + 0.2688931795735332*tmp322 + 0.2688931795735332*tmp328;
      const real_t tmp381 = 0.42641669024797446*tmp35 + 0.42641669024797446*tmp37 + 0.42641669024797446*tmp45;
      const real_t tmp382 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp33 + 0.38881857835033307*tmp43;
      const real_t tmp383 = 0.3256196736114374*tmp80 + 0.3256196736114374*tmp81 + 0.3256196736114374*tmp86;
      const real_t tmp384 = 3.0100340280386204*tmp75 + 3.0100340280386204*tmp79 + 3.0100340280386204*tmp85;
      const real_t tmp385 = 0.69877623478892303*tmp108 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp114;
      const real_t tmp386 = 0.16196202691036121*tmp103 + 0.16196202691036121*tmp107 + 0.16196202691036121*tmp113;
      const real_t tmp387 = 1.3169318389705873*tmp136 + 1.3169318389705873*tmp137 + 1.3169318389705873*tmp142;
      const real_t tmp388 = 0.11827798082591956*tmp131 + 0.11827798082591956*tmp135 + 0.11827798082591956*tmp141;
      const real_t tmp389 = 0.41537646564397157*tmp164 + 0.41537646564397157*tmp165 + 0.41537646564397157*tmp170;
      const real_t tmp390 = 1.730840956191074*tmp159 + 1.730840956191074*tmp163 + 1.730840956191074*tmp169;
      const real_t tmp391 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp193 + 1.2177936097379878*tmp198;
      const real_t tmp392 = 0.96110665971229103*tmp187 + 0.96110665971229103*tmp191 + 0.96110665971229103*tmp197;
      const real_t tmp393 = 2.1520288156647434*tmp217 + 2.1520288156647434*tmp218 + 2.1520288156647434*tmp222;
      const real_t tmp394 = 0.51764549515564062*tmp213 + 0.51764549515564062*tmp216 + 0.51764549515564062*tmp221;
      const real_t tmp395 = 0.035965040373342916*tmp244 + 0.035965040373342916*tmp245 + 0.035965040373342916*tmp250;
      const real_t tmp396 = 0.48616796533571183*tmp239 + 0.48616796533571183*tmp243 + 0.48616796533571183*tmp249;
      const real_t tmp397 = 1.7318139619254227*tmp269 + 1.7318139619254227*tmp270 + 1.7318139619254227*tmp274;
      const real_t tmp398 = 1.8030635043651069*tmp265 + 1.8030635043651069*tmp268 + 1.8030635043651069*tmp273;
      const real_t tmp399 = 0.21336495814298084*tmp296 + 0.21336495814298084*tmp297 + 0.21336495814298084*tmp302;
      const real_t tmp400 = 1.6770652555180527*tmp291 + 1.6770652555180527*tmp295 + 1.6770652555180527*tmp301;
      const real_t tmp401 = 2.9649155283744921*tmp324 + 2.9649155283744921*tmp325 + 2.9649155283744921*tmp330;
      const real_t tmp402 = 0.2688931795735332*tmp319 + 0.2688931795735332*tmp323 + 0.2688931795735332*tmp329;
      elMat(0,0) = -tmp120*(-2.0850189307815055*tmp102 - 2.0850189307815055*tmp103 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp107 - 2.0850189307815055*tmp108 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp113 - 2.0850189307815055*tmp114) - tmp148*(-0.29317593934991559*tmp130 - 0.29317593934991559*tmp131 - 0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp136 - 0.29317593934991559*tmp137 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp142) - tmp176*(0.56151037867223397*tmp158 + 0.56151037867223397*tmp159 + 0.56151037867223397*tmp162 + 0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp165 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170) - tmp204*(-0.31389282688815401*tmp186 - 0.31389282688815401*tmp187 - 0.31389282688815401*tmp190 - 0.31389282688815401*tmp191 - 0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198) - tmp228*(0.99043597017024343*tmp212 + 0.99043597017024343*tmp213 + 0.99043597017024343*tmp215 + 0.99043597017024343*tmp216 + 0.99043597017024343*tmp217 + 0.99043597017024343*tmp218 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp221 + 0.99043597017024343*tmp222) - tmp256*(-1.2518910405721839*tmp238 - 1.2518910405721839*tmp239 - 1.2518910405721839*tmp242 - 1.2518910405721839*tmp243 - 1.2518910405721839*tmp244 - 1.2518910405721839*tmp245 - 1.2518910405721839*tmp248 - 1.2518910405721839*tmp249 - 1.2518910405721839*tmp250) - tmp280*(0.77270393148826533*tmp264 + 0.77270393148826533*tmp265 + 0.77270393148826533*tmp267 + 0.77270393148826533*tmp268 + 0.77270393148826533*tmp269 + 0.77270393148826533*tmp270 + 0.77270393148826533*tmp272 + 0.77270393148826533*tmp273 + 0.77270393148826533*tmp274) - tmp308*(-0.9184440441026207*tmp290 - 0.9184440441026207*tmp291 - 0.9184440441026207*tmp294 - 0.9184440441026207*tmp295 - 0.9184440441026207*tmp296 - 0.9184440441026207*tmp297 - 0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp302) - tmp336*(0.37454442704241986*tmp318 + 0.37454442704241986*tmp319 + 0.37454442704241986*tmp322 + 0.37454442704241986*tmp323 + 0.37454442704241986*tmp324 + 0.37454442704241986*tmp325 + 0.37454442704241986*tmp328 + 0.37454442704241986*tmp329 + 0.37454442704241986*tmp330) - tmp64*(0.55279693041046674*tmp25 + 0.55279693041046674*tmp27 + 0.55279693041046674*tmp31 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp35 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45) - tmp92*(0.60805118540288361*tmp74 + 0.60805118540288361*tmp75 + 0.60805118540288361*tmp78 + 0.60805118540288361*tmp79 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp86);
      elMat(0,1) = 0.0036548782978011126*tmp119*(tmp108 + tmp109 + tmp114) + 0.010799549999884401*tmp147*(tmp136 + tmp137 + tmp142) - 0.012584765868454714*tmp175*(tmp164 + tmp165 + tmp170) + 0.00083582139204094858*tmp203*(tmp192 + tmp193 + tmp198) + 0.0040819365333192512*tmp227*(tmp217 + tmp218 + tmp222) + 0.0045346636251092122*tmp255*(tmp244 + tmp245 + tmp250) - 0.0061987549215557864*tmp279*(tmp269 + tmp270 + tmp274) - 0.0045087419239184514*tmp307*(tmp296 + tmp297 + tmp302) + 0.0044998649071490461*tmp335*(tmp324 + tmp325 + tmp330) + 0.0072301427194886381*tmp63*(tmp35 + tmp37 + tmp45) - 0.012344594760863713*tmp91*(tmp80 + tmp81 + tmp86);
      elMat(0,2) = 0.0013137068218914037*tmp119*(tmp103 + tmp107 + tmp113) - 0.0038818597778972029*tmp147*(tmp131 + tmp135 + tmp141) + 0.010066964965131993*tmp175*(tmp159 + tmp163 + tmp169) - 0.0046804043242939224*tmp203*(tmp187 + tmp191 + tmp197) - 0.0097490714046835261*tmp227*(tmp213 + tmp216 + tmp221) + 0.0085077884791842431*tmp255*(tmp239 + tmp243 + tmp249) - 0.0056487878897383461*tmp279*(tmp265 + tmp268 + tmp273) + 0.005238393734043144*tmp307*(tmp291 + tmp295 + tmp301) - 0.012093792842045984*tmp335*(tmp319 + tmp323 + tmp329) + 0.0067853652681886352*tmp63*(tmp27 + tmp33 + tmp43) + 0.0041416969702195786*tmp91*(tmp75 + tmp79 + tmp85);
      elMat(0,3) = 0.0041246668394316508*tmp119*(tmp102 + tmp106 + tmp112) - 0.0033267985952381263*tmp147*(tmp130 + tmp134 + tmp140) - 0.0071511654955033511*tmp175*(tmp158 + tmp162 + tmp168) + 0.010590168103918869*tmp203*(tmp186 + tmp190 + tmp196) - 0.0027144532136395704*tmp227*(tmp212 + tmp215 + tmp220) - 0.0019942799754541058*tmp255*(tmp238 + tmp242 + tmp248) + 0.005883129944586717*tmp279*(tmp264 + tmp267 + tmp272) + 0.0053864900723149976*tmp307*(tmp290 + tmp294 + tmp300) + 0.0052886569726683132*tmp335*(tmp318 + tmp322 + tmp328) - 0.020554974928565235*tmp63*(tmp25 + tmp31 + tmp41) + 0.0044685602754798454*tmp91*(tmp74 + tmp78 + tmp84);
      elMat(0,4) = -tmp120*(tmp341 + tmp342) - tmp148*(tmp343 + tmp344) - tmp176*(tmp345 + tmp346) - tmp204*(tmp347 + tmp348) - tmp228*(tmp349 + tmp350) - tmp256*(tmp351 + tmp352) - tmp280*(tmp353 + tmp354) - tmp308*(tmp355 + tmp356) - tmp336*(tmp357 + tmp358) - tmp64*(tmp337 + tmp338) - tmp92*(tmp339 + tmp340);
      elMat(0,5) = -tmp120*(tmp363 + tmp364) - tmp148*(tmp365 + tmp366) - tmp176*(tmp367 + tmp368) - tmp204*(tmp369 + tmp370) - tmp228*(tmp371 + tmp372) - tmp256*(tmp373 + tmp374) - tmp280*(tmp375 + tmp376) - tmp308*(tmp377 + tmp378) - tmp336*(tmp379 + tmp380) - tmp64*(tmp359 + tmp360) - tmp92*(tmp361 + tmp362);
      elMat(0,6) = -tmp120*(tmp385 + tmp386) - tmp148*(tmp387 + tmp388) - tmp176*(tmp389 + tmp390) - tmp204*(tmp391 + tmp392) - tmp228*(tmp393 + tmp394) - tmp256*(tmp395 + tmp396) - tmp280*(tmp397 + tmp398) - tmp308*(tmp399 + tmp400) - tmp336*(tmp401 + tmp402) - tmp64*(tmp381 + tmp382) - tmp92*(tmp383 + tmp384);
      elMat(0,7) = -tmp120*(3.030776123262295*tmp104*tmp16*tmp28*tmp99 + 3.030776123262295*tmp110*tmp16*tmp38*tmp99 + 3.030776123262295*tmp16*tmp6*tmp93*tmp99 - tmp341 - tmp363) - tmp148*(0.021561698496338266*tmp121*tmp127*tmp16*tmp6 + 0.021561698496338266*tmp127*tmp132*tmp16*tmp28 + 0.021561698496338266*tmp127*tmp138*tmp16*tmp38 - tmp343 - tmp365) - tmp176*(-0.97680333550942233*tmp158 - 0.97680333550942233*tmp162 - 0.97680333550942233*tmp168 - tmp345 - tmp367) - tmp204*(0.80668592322658683*tmp16*tmp177*tmp183*tmp6 + 0.80668592322658683*tmp16*tmp183*tmp188*tmp28 + 0.80668592322658683*tmp16*tmp183*tmp194*tmp38 - tmp347 - tmp369) - tmp228*(-1.3111976295201027*tmp212 - 1.3111976295201027*tmp215 - 1.3111976295201027*tmp220 - tmp349 - tmp371) - tmp256*(1.0259150868534226*tmp16*tmp229*tmp235*tmp6 + 1.0259150868534226*tmp16*tmp235*tmp240*tmp28 + 1.0259150868534226*tmp16*tmp235*tmp246*tmp38 - tmp351 - tmp373) - tmp280*(-0.010530396686001087*tmp264 - 0.010530396686001087*tmp267 - 0.010530396686001087*tmp272 - tmp353 - tmp375) - tmp308*(1.727318301866275*tmp16*tmp28*tmp287*tmp292 + 1.727318301866275*tmp16*tmp281*tmp287*tmp6 + 1.727318301866275*tmp16*tmp287*tmp298*tmp38 - tmp355 - tmp377) - tmp336*(0.48471985386318561*tmp16*tmp28*tmp315*tmp320 + 0.48471985386318561*tmp16*tmp309*tmp315*tmp6 + 0.48471985386318561*tmp16*tmp315*tmp326*tmp38 - tmp357 - tmp379) - tmp64*(-2.2903585922226259*tmp25 - 2.2903585922226259*tmp31 - tmp337 - tmp359 - 2.2903585922226259*tmp41) - tmp92*(0.11955133084429059*tmp16*tmp28*tmp71*tmp76 + 0.11955133084429059*tmp16*tmp38*tmp71*tmp82 + 0.11955133084429059*tmp16*tmp6*tmp65*tmp71 - tmp339 - tmp361);
      elMat(0,8) = -tmp120*(2.3862426959925824*tmp104*tmp16*tmp32*tmp99 + 2.3862426959925824*tmp110*tmp16*tmp42*tmp99 + 2.3862426959925824*tmp16*tmp26*tmp93*tmp99 - tmp342 - tmp385) - tmp148*(-0.023755899620671705*tmp131 - 0.023755899620671705*tmp135 - 0.023755899620671705*tmp141 - tmp344 - tmp387) - tmp176*(0.023113155683794462*tmp149*tmp155*tmp16*tmp26 + 0.023113155683794462*tmp155*tmp16*tmp160*tmp32 + 0.023113155683794462*tmp155*tmp16*tmp166*tmp42 - tmp346 - tmp389) - tmp204*(0.096099217150166227*tmp16*tmp177*tmp183*tmp26 + 0.096099217150166227*tmp16*tmp183*tmp188*tmp32 + 0.096099217150166227*tmp16*tmp183*tmp194*tmp42 - tmp348 - tmp391) - tmp228*(-2.1424647858349868*tmp213 - 2.1424647858349868*tmp216 - 2.1424647858349868*tmp221 - tmp350 - tmp393) - tmp256*(2.215926000198841*tmp16*tmp229*tmp235*tmp26 + 2.215926000198841*tmp16*tmp235*tmp240*tmp32 + 2.215926000198841*tmp16*tmp235*tmp246*tmp42 - tmp352 - tmp395) - tmp280*(-1.504517893413688*tmp265 - 1.504517893413688*tmp268 - 1.504517893413688*tmp273 - tmp354 - tmp397) - tmp308*(1.7050790859596399*tmp16*tmp26*tmp281*tmp287 + 1.7050790859596399*tmp16*tmp287*tmp292*tmp32 + 1.7050790859596399*tmp16*tmp287*tmp298*tmp42 - tmp356 - tmp399) - tmp336*(-2.339459955416912*tmp319 - 2.339459955416912*tmp323 - 2.339459955416912*tmp329 - tmp358 - tmp401) - tmp64*(0.020786379341558803*tmp16*tmp22*tmp26*tmp7 + 0.020786379341558803*tmp16*tmp22*tmp29*tmp32 + 0.020786379341558803*tmp16*tmp22*tmp39*tmp42 - tmp338 - tmp381) - tmp92*(0.066329140985678992*tmp16*tmp26*tmp65*tmp71 + 0.066329140985678992*tmp16*tmp32*tmp71*tmp76 + 0.066329140985678992*tmp16*tmp42*tmp71*tmp82 - tmp340 - tmp383);
      elMat(0,9) = -tmp120*(2.923056903871144*tmp104*tmp16*tmp36*tmp99 + 2.923056903871144*tmp110*tmp16*tmp44*tmp99 + 2.923056903871144*tmp16*tmp34*tmp93*tmp99 - tmp364 - tmp386) - tmp148*(1.1748979585239958*tmp121*tmp127*tmp16*tmp34 + 1.1748979585239958*tmp127*tmp132*tmp16*tmp36 + 1.1748979585239958*tmp127*tmp138*tmp16*tmp44 - tmp366 - tmp388) - tmp176*(-1.292351334863308*tmp164 - 1.292351334863308*tmp165 - 1.292351334863308*tmp170 - tmp368 - tmp390) - tmp204*(0.35278616717586297*tmp16*tmp177*tmp183*tmp34 + 0.35278616717586297*tmp16*tmp183*tmp188*tmp36 + 0.35278616717586297*tmp16*tmp183*tmp194*tmp44 - tmp370 - tmp392) - tmp228*(-0.50808146532588383*tmp217 - 0.50808146532588383*tmp218 - 0.50808146532588383*tmp222 - tmp372 - tmp394) - tmp256*(1.7657230752364721*tmp16*tmp229*tmp235*tmp34 + 1.7657230752364721*tmp16*tmp235*tmp240*tmp36 + 1.7657230752364721*tmp16*tmp235*tmp246*tmp44 - tmp374 - tmp396) - tmp280*(-1.5757674358533722*tmp269 - 1.5757674358533722*tmp270 - 1.5757674358533722*tmp274 - tmp376 - tmp398) - tmp308*(0.24137878858456796*tmp16*tmp281*tmp287*tmp34 + 0.24137878858456796*tmp16*tmp287*tmp292*tmp36 + 0.24137878858456796*tmp16*tmp287*tmp298*tmp44 - tmp378 - tmp400) - tmp336*(0.35656239338404694*tmp16*tmp309*tmp315*tmp34 + 0.35656239338404694*tmp16*tmp315*tmp320*tmp36 + 0.35656239338404694*tmp16*tmp315*tmp326*tmp44 - tmp380 - tmp402) - tmp64*(0.058384491239200198*tmp16*tmp22*tmp29*tmp36 + 0.058384491239200198*tmp16*tmp22*tmp34*tmp7 + 0.058384491239200198*tmp16*tmp22*tmp39*tmp44 - tmp360 - tmp382) - tmp92*(-tmp362 - tmp384 - 2.6180852134415042*tmp80 - 2.6180852134415042*tmp81 - 2.6180852134415042*tmp86);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(0, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp7*J_B_1(0, 1);
      const real_t tmp11 = tmp10*tmp2;
      const real_t tmp12 = -tmp11 + tmp9;
      const real_t tmp13 = tmp1*tmp8;
      const real_t tmp14 = tmp10*tmp3;
      const real_t tmp15 = tmp13 - tmp14;
      const real_t tmp16 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp17 = tmp16*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp18 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp19 = 1.0 / (tmp18);
      const real_t tmp20 = tmp19*tmp4;
      const real_t tmp21 = tmp20*J_B_2(0, 0);
      const real_t tmp22 = tmp0*tmp21;
      const real_t tmp23 = tmp20*J_B_2(0, 1);
      const real_t tmp24 = tmp2*tmp23;
      const real_t tmp25 = tmp22 - tmp24;
      const real_t tmp26 = tmp1*tmp21;
      const real_t tmp27 = tmp23*tmp3;
      const real_t tmp28 = tmp26 - tmp27;
      const real_t tmp29 = tmp16*std::abs(tmp18)*ScalarCoeff0_2;
      const real_t tmp30 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp31 = 1.0 / (tmp30);
      const real_t tmp32 = tmp31*tmp4;
      const real_t tmp33 = tmp32*J_B_3(0, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp32*J_B_3(0, 1);
      const real_t tmp36 = tmp2*tmp35;
      const real_t tmp37 = tmp34 - tmp36;
      const real_t tmp38 = tmp1*tmp33;
      const real_t tmp39 = tmp3*tmp35;
      const real_t tmp40 = tmp38 - tmp39;
      const real_t tmp41 = std::abs(tmp30);
      const real_t tmp42 = tmp16*tmp41*ScalarCoeff0_3;
      const real_t tmp43 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp44 = 1.0 / (tmp43);
      const real_t tmp45 = tmp4*tmp44;
      const real_t tmp46 = tmp45*J_B_4(0, 0);
      const real_t tmp47 = tmp0*tmp46;
      const real_t tmp48 = tmp45*J_B_4(0, 1);
      const real_t tmp49 = tmp2*tmp48;
      const real_t tmp50 = tmp47 - tmp49;
      const real_t tmp51 = tmp1*tmp46;
      const real_t tmp52 = tmp3*tmp48;
      const real_t tmp53 = tmp51 - tmp52;
      const real_t tmp54 = std::abs(tmp43);
      const real_t tmp55 = tmp16*tmp54*ScalarCoeff0_4;
      const real_t tmp56 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp57 = 1.0 / (tmp56);
      const real_t tmp58 = tmp4*tmp57;
      const real_t tmp59 = tmp58*J_B_5(0, 0);
      const real_t tmp60 = tmp0*tmp59;
      const real_t tmp61 = tmp58*J_B_5(0, 1);
      const real_t tmp62 = tmp2*tmp61;
      const real_t tmp63 = tmp60 - tmp62;
      const real_t tmp64 = tmp1*tmp59;
      const real_t tmp65 = tmp3*tmp61;
      const real_t tmp66 = tmp64 - tmp65;
      const real_t tmp67 = tmp16*std::abs(tmp56)*ScalarCoeff0_5;
      const real_t tmp68 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp69 = 1.0 / (tmp68);
      const real_t tmp70 = tmp4*tmp69;
      const real_t tmp71 = tmp70*J_B_6(0, 0);
      const real_t tmp72 = tmp0*tmp71;
      const real_t tmp73 = tmp70*J_B_6(0, 1);
      const real_t tmp74 = tmp2*tmp73;
      const real_t tmp75 = tmp72 - tmp74;
      const real_t tmp76 = tmp1*tmp71;
      const real_t tmp77 = tmp3*tmp73;
      const real_t tmp78 = tmp76 - tmp77;
      const real_t tmp79 = std::abs(tmp68);
      const real_t tmp80 = tmp16*tmp79*ScalarCoeff0_6;
      const real_t tmp81 = 0.022076635451774192*tmp80;
      const real_t tmp82 = tmp17*(-0.78379396366386*tmp13 + 0.78379396366386*tmp2*tmp4*tmp6*J_B_1(0, 1) + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp9);
      const real_t tmp83 = 0.087542570791631205*tmp12;
      const real_t tmp84 = tmp29*(0.56758792732771934*tmp22 - 0.56758792732771934*tmp24 + 0.56758792732771934*tmp26 - 0.56758792732771934*tmp27);
      const real_t tmp85 = 0.087542570791631302*tmp25;
      const real_t tmp86 = 0.78379396366385934*tmp2*tmp31*tmp4*J_B_3(0, 1) + 0.78379396366385934*tmp3*tmp31*tmp4*J_B_3(0, 1) - 0.78379396366385934*tmp34 - 0.78379396366385934*tmp38;
      const real_t tmp87 = 2.2673902919218332*tmp2*tmp4*tmp44*J_B_4(0, 1) + 2.2673902919218332*tmp3*tmp4*tmp44*J_B_4(0, 1) - 2.2673902919218332*tmp47 - 2.2673902919218332*tmp51;
      const real_t tmp88 = tmp67*(0.63369514596091792*tmp60 - 0.63369514596091792*tmp62 + 0.63369514596091792*tmp64 - 0.63369514596091792*tmp65);
      const real_t tmp89 = 0.12465175807197719*tmp63;
      const real_t tmp90 = 0.63369514596091747*tmp72 - 0.63369514596091747*tmp74 + 0.63369514596091747*tmp76 - 0.63369514596091747*tmp77;
      const real_t tmp91 = 0.063394346744256869*tmp16*tmp37*tmp41*tmp86*ScalarCoeff0_3 + 0.034837943122158065*tmp16*tmp50*tmp54*tmp87*ScalarCoeff0_4 + 0.03483794312215821*tmp16*tmp75*tmp79*tmp90*ScalarCoeff0_6 - tmp82*tmp83 - tmp84*tmp85 - tmp88*tmp89;
      const real_t tmp92 = 0.063394346744256799*tmp15;
      const real_t tmp93 = 0.08754257079163108*tmp28;
      const real_t tmp94 = tmp42*tmp86;
      const real_t tmp95 = 0.087542570791631358*tmp40;
      const real_t tmp96 = tmp55*tmp87;
      const real_t tmp97 = 0.034837943122158259*tmp53;
      const real_t tmp98 = 0.034837943122158141*tmp66;
      const real_t tmp99 = tmp80*tmp90;
      const real_t tmp100 = 0.12465175807197725*tmp78;
      const real_t tmp101 = -tmp100*tmp99 + tmp82*tmp92 - tmp84*tmp93 + tmp88*tmp98 - tmp94*tmp95 + tmp96*tmp97;
      const real_t tmp102 = 0.43241207267228021*tmp9;
      const real_t tmp103 = 0.43241207267228021*tmp11;
      const real_t tmp104 = 1.7837939636638598*tmp13 - 1.7837939636638598*tmp14;
      const real_t tmp105 = tmp102 - tmp103 + tmp104;
      const real_t tmp106 = 0.11169079483900564*tmp82;
      const real_t tmp107 = 1.7837939636638587*tmp22 - 1.7837939636638587*tmp24;
      const real_t tmp108 = 1.7837939636638607*tmp26 - 1.7837939636638607*tmp27;
      const real_t tmp109 = tmp107 + tmp108;
      const real_t tmp110 = 0.11169079483900564*tmp84;
      const real_t tmp111 = 1.7837939636638611*tmp34 - 1.7837939636638611*tmp36;
      const real_t tmp112 = 0.43241207267227955*tmp38 - 0.43241207267227955*tmp39;
      const real_t tmp113 = tmp111 + tmp112;
      const real_t tmp114 = 0.11169079483900564*tmp94;
      const real_t tmp115 = 0.36630485403908164*tmp47;
      const real_t tmp116 = 0.36630485403908164*tmp49;
      const real_t tmp117 = 0.36630485403908519*tmp51 - 0.36630485403908519*tmp52;
      const real_t tmp118 = tmp115 - tmp116 + tmp117;
      const real_t tmp119 = 0.054975871827660817*tmp96;
      const real_t tmp120 = 0.36630485403908386*tmp60 - 0.36630485403908386*tmp62;
      const real_t tmp121 = 3.2673902919218341*tmp64 - 3.2673902919218341*tmp65;
      const real_t tmp122 = tmp120 + tmp121;
      const real_t tmp123 = 0.054975871827660817*tmp88;
      const real_t tmp124 = 0.36630485403908253*tmp76 - 0.36630485403908253*tmp77;
      const real_t tmp125 = 3.2673902919218349*tmp72 - 3.2673902919218349*tmp74;
      const real_t tmp126 = tmp124 + tmp125;
      const real_t tmp127 = 0.054975871827660817*tmp99;
      const real_t tmp128 = -tmp105*tmp106 - tmp109*tmp110 - tmp113*tmp114 - tmp118*tmp119 - tmp122*tmp123 - tmp126*tmp127;
      const real_t tmp129 = -tmp102 + tmp103 + 1.3513818909915796*tmp13 - 1.3513818909915796*tmp14;
      const real_t tmp130 = -tmp107 + 1.3513818909915782*tmp19*tmp3*tmp4*J_B_2(0, 1) - 1.3513818909915782*tmp26;
      const real_t tmp131 = -tmp111 + 1.7763568394002505e-15*tmp3*tmp31*tmp4*J_B_3(0, 1) - 1.7763568394002505e-15*tmp38;
      const real_t tmp132 = -tmp115 + tmp116 + 2.9010854378827515*tmp51 - 2.9010854378827515*tmp52;
      const real_t tmp133 = -tmp120 + 1.7763568394002505e-15*tmp3*tmp4*tmp57*J_B_5(0, 1) - 1.7763568394002505e-15*tmp64;
      const real_t tmp134 = -tmp125 + 2.9010854378827524*tmp3*tmp4*tmp69*J_B_6(0, 1) - 2.9010854378827524*tmp76;
      const real_t tmp135 = -tmp106*tmp129 - tmp110*tmp130 - tmp114*tmp131 - tmp119*tmp132 - tmp123*tmp133 - tmp127*tmp134;
      const real_t tmp136 = -tmp124;
      const real_t tmp137 = 2.2204460492503131e-16*tmp0*tmp4*tmp6*J_B_1(0, 0) - tmp104 - 2.2204460492503131e-16*tmp11;
      const real_t tmp138 = -tmp108 + 1.35138189099158*tmp19*tmp2*tmp4*J_B_2(0, 1) - 1.35138189099158*tmp22;
      const real_t tmp139 = 1.3513818909915798*tmp0*tmp31*tmp4*J_B_3(0, 0) - tmp112 - 1.3513818909915798*tmp36;
      const real_t tmp140 = 2.901085437882748*tmp0*tmp4*tmp44*J_B_4(0, 0) - tmp117 - 2.901085437882748*tmp49;
      const real_t tmp141 = -tmp121 + 2.901085437882752*tmp2*tmp4*tmp57*J_B_5(0, 1) - 2.901085437882752*tmp60;
      const real_t tmp142 = -tmp106*tmp137 - tmp110*tmp138 - tmp114*tmp139 - tmp119*tmp140 - tmp123*tmp141 - tmp127*tmp136;
      const real_t tmp143 = 0.049688106308562137*tmp12*tmp15*tmp17 - 0.068615338550096633*tmp25*tmp28*tmp29 + 0.049688106308562283*tmp37*tmp40*tmp42 - 0.022076635451774126*tmp50*tmp53*tmp55 + 0.078991214025706399*tmp63*tmp66*tmp67 + 0.078991214025706594*tmp75*tmp78*tmp80;
      const real_t tmp144 = tmp17*tmp83;
      const real_t tmp145 = tmp29*tmp85;
      const real_t tmp146 = tmp67*tmp89;
      const real_t tmp147 = -tmp105*tmp144 - tmp109*tmp145 + 0.063394346744256869*tmp113*tmp16*tmp37*tmp41*ScalarCoeff0_3 + 0.034837943122158065*tmp118*tmp16*tmp50*tmp54*ScalarCoeff0_4 - tmp122*tmp146 + 0.03483794312215821*tmp126*tmp16*tmp75*tmp79*ScalarCoeff0_6;
      const real_t tmp148 = -tmp129*tmp144 - tmp130*tmp145 + 0.063394346744256869*tmp131*tmp16*tmp37*tmp41*ScalarCoeff0_3 + 0.034837943122158065*tmp132*tmp16*tmp50*tmp54*ScalarCoeff0_4 - tmp133*tmp146 + 0.03483794312215821*tmp134*tmp16*tmp75*tmp79*ScalarCoeff0_6;
      const real_t tmp149 = 0.03483794312215821*tmp136*tmp75*tmp80 - tmp137*tmp144 - tmp138*tmp145 + 0.063394346744256869*tmp139*tmp37*tmp42 + 0.034837943122158065*tmp140*tmp50*tmp55 - tmp141*tmp146;
      const real_t tmp150 = tmp17*tmp92;
      const real_t tmp151 = tmp29*tmp93;
      const real_t tmp152 = tmp42*tmp95;
      const real_t tmp153 = tmp55*tmp97;
      const real_t tmp154 = tmp67*tmp98;
      const real_t tmp155 = tmp100*tmp80;
      const real_t tmp156 = tmp105*tmp150 - tmp109*tmp151 - tmp113*tmp152 + tmp118*tmp153 + tmp122*tmp154 - tmp126*tmp155;
      const real_t tmp157 = tmp129*tmp150 - tmp130*tmp151 - tmp131*tmp152 + tmp132*tmp153 + tmp133*tmp154 - tmp134*tmp155;
      const real_t tmp158 = -tmp136*tmp155 + tmp137*tmp150 - tmp138*tmp151 - tmp139*tmp152 + tmp140*tmp153 + tmp141*tmp154;
      const real_t tmp159 = 0.35539127497236472*tmp17;
      const real_t tmp160 = 0.35539127497236506*tmp29;
      const real_t tmp161 = 0.35539127497236522*tmp42;
      const real_t tmp162 = 0.58691357409500544*tmp67;
      const real_t tmp163 = 0.58691357409500566*tmp80;
      const real_t tmp164 = 0.11169079483900564*tmp105*tmp17;
      const real_t tmp165 = 0.11169079483900564*tmp109*tmp29;
      const real_t tmp166 = 0.11169079483900564*tmp113*tmp42;
      const real_t tmp167 = 0.054975871827660817*tmp118*tmp55;
      const real_t tmp168 = 0.054975871827660817*tmp122*tmp67;
      const real_t tmp169 = 0.054975871827660817*tmp126*tmp80;
      const real_t tmp170 = -tmp129*tmp164 - tmp130*tmp165 - tmp131*tmp166 - tmp132*tmp167 - tmp133*tmp168 - tmp134*tmp169;
      const real_t tmp171 = -tmp136*tmp169 - tmp137*tmp164 - tmp138*tmp165 - tmp139*tmp166 - tmp140*tmp167 - tmp141*tmp168;
      const real_t tmp172 = -0.11169079483900564*tmp129*tmp137*tmp17 - 0.11169079483900564*tmp130*tmp138*tmp29 - 0.11169079483900564*tmp131*tmp139*tmp42 - 0.054975871827660817*tmp132*tmp140*tmp55 - 0.054975871827660817*tmp133*tmp141*tmp67 - 0.054975871827660817*tmp134*tmp136*tmp80;
      elMat(0,0) = -0.068615338550096702*tmp17*((-tmp12 - tmp15)*(-tmp12 - tmp15)) - 0.03598186587286744*tmp29*((tmp25 + tmp28)*(tmp25 + tmp28)) - 0.068615338550096577*tmp42*((-tmp37 - tmp40)*(-tmp37 - tmp40)) - 0.28263418612338997*tmp55*((-tmp50 - tmp53)*(-tmp50 - tmp53)) - 0.022076635451774219*tmp67*((tmp63 + tmp66)*(tmp63 + tmp66)) - tmp81*((tmp75 + tmp78)*(tmp75 + tmp78));
      elMat(0,1) = tmp91;
      elMat(0,2) = tmp101;
      elMat(0,3) = tmp128;
      elMat(0,4) = tmp135;
      elMat(0,5) = tmp142;
      elMat(1,0) = tmp91;
      elMat(1,1) = -0.068615338550096661*(tmp12*tmp12)*tmp17 - 0.068615338550096813*(tmp25*tmp25)*tmp29 - 0.035981865872867579*(tmp37*tmp37)*tmp42 - 0.022076635451774004*(tmp50*tmp50)*tmp55 - 0.2826341861233902*(tmp63*tmp63)*tmp67 - (tmp75*tmp75)*tmp81;
      elMat(1,2) = tmp143;
      elMat(1,3) = tmp147;
      elMat(1,4) = tmp148;
      elMat(1,5) = tmp149;
      elMat(2,0) = tmp101;
      elMat(2,1) = tmp143;
      elMat(2,2) = -0.035981865872867495*(tmp15*tmp15)*tmp17 - 0.068615338550096466*(tmp28*tmp28)*tmp29 - 0.068615338550096883*(tmp40*tmp40)*tmp42 - 0.022076635451774251*(tmp53*tmp53)*tmp55 - 0.022076635451774095*(tmp66*tmp66)*tmp67 - 0.28263418612339042*(tmp78*tmp78)*tmp80;
      elMat(2,3) = tmp156;
      elMat(2,4) = tmp157;
      elMat(2,5) = tmp158;
      elMat(3,0) = tmp128;
      elMat(3,1) = tmp147;
      elMat(3,2) = tmp156;
      elMat(3,3) = -tmp159*((-0.24241144520083399*tmp11 + tmp15 + 0.24241144520083399*tmp9)*(-0.24241144520083399*tmp11 + tmp15 + 0.24241144520083399*tmp9)) - tmp160*((0.99999999999999889*tmp22 - 0.99999999999999889*tmp24 + tmp28)*(0.99999999999999889*tmp22 - 0.99999999999999889*tmp24 + tmp28)) - tmp161*((tmp37 + 0.24241144520083344*tmp38 - 0.24241144520083344*tmp39)*(tmp37 + 0.24241144520083344*tmp38 - 0.24241144520083344*tmp39)) - tmp162*((0.11210930476984075*tmp60 - 0.11210930476984075*tmp62 + tmp66)*(0.11210930476984075*tmp60 - 0.11210930476984075*tmp62 + tmp66)) - tmp163*((tmp75 + 0.11210930476984032*tmp76 - 0.11210930476984032*tmp77)*(tmp75 + 0.11210930476984032*tmp76 - 0.11210930476984032*tmp77)) - 0.0073766210351186899*tmp55*((0.99999999999999034*tmp47 - 0.99999999999999034*tmp49 + tmp53)*(0.99999999999999034*tmp47 - 0.99999999999999034*tmp49 + tmp53));
      elMat(3,4) = tmp170;
      elMat(3,5) = tmp171;
      elMat(4,0) = tmp135;
      elMat(4,1) = tmp148;
      elMat(4,2) = tmp157;
      elMat(4,3) = tmp170;
      elMat(4,4) = -tmp161*((9.9583072685797463e-16*tmp3*tmp31*tmp4*J_B_3(0, 1) - tmp37 - 9.9583072685797463e-16*tmp38)*(9.9583072685797463e-16*tmp3*tmp31*tmp4*J_B_3(0, 1) - tmp37 - 9.9583072685797463e-16*tmp38)) - tmp163*((0.88789069523015973*tmp3*tmp4*tmp69*J_B_6(0, 1) - tmp75 - 0.88789069523015973*tmp76)*(0.88789069523015973*tmp3*tmp4*tmp69*J_B_6(0, 1) - tmp75 - 0.88789069523015973*tmp76)) - 0.20397341704008842*tmp17*((0.31997770249459007*tmp11 + tmp15 - 0.31997770249459007*tmp9)*(0.31997770249459007*tmp11 + tmp15 - 0.31997770249459007*tmp9)) - 0.35539127497236422*tmp29*((0.75758855479916576*tmp19*tmp3*tmp4*J_B_2(0, 1) - tmp25 - 0.75758855479916576*tmp26)*(0.75758855479916576*tmp19*tmp3*tmp4*J_B_2(0, 1) - tmp25 - 0.75758855479916576*tmp26)) - 0.46269324962657754*tmp55*((-0.12626475913319379*tmp47 + 0.12626475913319379*tmp49 + tmp53)*(-0.12626475913319379*tmp47 + 0.12626475913319379*tmp49 + tmp53)) - 0.0073766210351186362*tmp67*((4.8493947590733192e-15*tmp3*tmp4*tmp57*J_B_5(0, 1) - tmp63 - 4.8493947590733192e-15*tmp64)*(4.8493947590733192e-15*tmp3*tmp4*tmp57*J_B_5(0, 1) - tmp63 - 4.8493947590733192e-15*tmp64));
      elMat(4,5) = tmp172;
      elMat(5,0) = tmp142;
      elMat(5,1) = tmp149;
      elMat(5,2) = tmp158;
      elMat(5,3) = tmp171;
      elMat(5,4) = tmp172;
      elMat(5,5) = -tmp159*((1.2447884085724693e-16*tmp0*tmp4*tmp6*J_B_1(0, 0) - 1.2447884085724693e-16*tmp11 - tmp15)*(1.2447884085724693e-16*tmp0*tmp4*tmp6*J_B_1(0, 0) - 1.2447884085724693e-16*tmp11 - tmp15)) - tmp160*((0.75758855479916576*tmp19*tmp2*tmp4*J_B_2(0, 1) - 0.75758855479916576*tmp22 - tmp28)*(0.75758855479916576*tmp19*tmp2*tmp4*J_B_2(0, 1) - 0.75758855479916576*tmp22 - tmp28)) - tmp162*((0.88789069523015984*tmp2*tmp4*tmp57*J_B_5(0, 1) - 0.88789069523015984*tmp60 - tmp66)*(0.88789069523015984*tmp2*tmp4*tmp57*J_B_5(0, 1) - 0.88789069523015984*tmp60 - tmp66)) - 0.20397341704008848*tmp42*((0.31997770249458951*tmp3*tmp31*tmp4*J_B_3(0, 1) + tmp34 - tmp36 - 0.31997770249458951*tmp38)*(0.31997770249458951*tmp3*tmp31*tmp4*J_B_3(0, 1) + tmp34 - tmp36 - 0.31997770249458951*tmp38)) - 0.46269324962657638*tmp55*((0.12626475913319515*tmp3*tmp4*tmp44*J_B_4(0, 1) + tmp47 - tmp49 - 0.12626475913319515*tmp51)*(0.12626475913319515*tmp3*tmp4*tmp44*J_B_4(0, 1) + tmp47 - tmp49 - 0.12626475913319515*tmp51)) - 0.0073766210351185815*(tmp78*tmp78)*tmp80;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], 0), -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], 0), -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], 0), -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], 0), 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], 0), -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], 0), -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5], -1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5], PoI_blending_0[0], PoI_blending_0[1], 0);
      const real_t tmp0 = coords[0][0] - coords[2][0];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][1] - coords[1][1];
      const real_t tmp4 = 1.0 / (-tmp0*tmp3 + tmp1*tmp2);
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp6 = 1.0 / (tmp5);
      const real_t tmp7 = tmp4*tmp6;
      const real_t tmp8 = tmp7*J_B_1(0, 0);
      const real_t tmp9 = tmp0*tmp8;
      const real_t tmp10 = tmp7*J_B_1(0, 1);
      const real_t tmp11 = tmp10*tmp2;
      const real_t tmp12 = -tmp11 + tmp9;
      const real_t tmp13 = tmp1*tmp8;
      const real_t tmp14 = tmp10*tmp3;
      const real_t tmp15 = tmp13 - tmp14;
      const real_t tmp16 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp17 = tmp16*std::abs(tmp5)*ScalarCoeff0_1;
      const real_t tmp18 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp19 = 1.0 / (tmp18);
      const real_t tmp20 = tmp19*tmp4;
      const real_t tmp21 = tmp20*J_B_2(0, 0);
      const real_t tmp22 = tmp0*tmp21;
      const real_t tmp23 = tmp20*J_B_2(0, 1);
      const real_t tmp24 = tmp2*tmp23;
      const real_t tmp25 = tmp22 - tmp24;
      const real_t tmp26 = tmp1*tmp21;
      const real_t tmp27 = tmp23*tmp3;
      const real_t tmp28 = tmp26 - tmp27;
      const real_t tmp29 = tmp16*std::abs(tmp18)*ScalarCoeff0_2;
      const real_t tmp30 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp31 = 1.0 / (tmp30);
      const real_t tmp32 = tmp31*tmp4;
      const real_t tmp33 = tmp32*J_B_3(0, 0);
      const real_t tmp34 = tmp0*tmp33;
      const real_t tmp35 = tmp32*J_B_3(0, 1);
      const real_t tmp36 = tmp2*tmp35;
      const real_t tmp37 = tmp34 - tmp36;
      const real_t tmp38 = tmp1*tmp33;
      const real_t tmp39 = tmp3*tmp35;
      const real_t tmp40 = tmp38 - tmp39;
      const real_t tmp41 = std::abs(tmp30);
      const real_t tmp42 = tmp16*tmp41*ScalarCoeff0_3;
      const real_t tmp43 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp44 = 1.0 / (tmp43);
      const real_t tmp45 = tmp4*tmp44;
      const real_t tmp46 = tmp45*J_B_4(0, 0);
      const real_t tmp47 = tmp0*tmp46;
      const real_t tmp48 = tmp45*J_B_4(0, 1);
      const real_t tmp49 = tmp2*tmp48;
      const real_t tmp50 = tmp47 - tmp49;
      const real_t tmp51 = tmp1*tmp46;
      const real_t tmp52 = tmp3*tmp48;
      const real_t tmp53 = tmp51 - tmp52;
      const real_t tmp54 = std::abs(tmp43);
      const real_t tmp55 = tmp16*tmp54*ScalarCoeff0_4;
      const real_t tmp56 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp57 = 1.0 / (tmp56);
      const real_t tmp58 = tmp4*tmp57;
      const real_t tmp59 = tmp58*J_B_5(0, 0);
      const real_t tmp60 = tmp0*tmp59;
      const real_t tmp61 = tmp58*J_B_5(0, 1);
      const real_t tmp62 = tmp2*tmp61;
      const real_t tmp63 = tmp60 - tmp62;
      const real_t tmp64 = tmp1*tmp59;
      const real_t tmp65 = tmp3*tmp61;
      const real_t tmp66 = tmp64 - tmp65;
      const real_t tmp67 = tmp16*std::abs(tmp56)*ScalarCoeff0_5;
      const real_t tmp68 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp69 = 1.0 / (tmp68);
      const real_t tmp70 = tmp4*tmp69;
      const real_t tmp71 = tmp70*J_B_6(0, 0);
      const real_t tmp72 = tmp0*tmp71;
      const real_t tmp73 = tmp70*J_B_6(0, 1);
      const real_t tmp74 = tmp2*tmp73;
      const real_t tmp75 = tmp72 - tmp74;
      const real_t tmp76 = tmp1*tmp71;
      const real_t tmp77 = tmp3*tmp73;
      const real_t tmp78 = tmp76 - tmp77;
      const real_t tmp79 = std::abs(tmp68);
      const real_t tmp80 = tmp16*tmp79*ScalarCoeff0_6;
      const real_t tmp81 = tmp17*(-0.78379396366386*tmp13 + 0.78379396366386*tmp2*tmp4*tmp6*J_B_1(0, 1) + 0.78379396366386*tmp3*tmp4*tmp6*J_B_1(0, 1) - 0.78379396366386*tmp9);
      const real_t tmp82 = tmp29*(0.56758792732771934*tmp22 - 0.56758792732771934*tmp24 + 0.56758792732771934*tmp26 - 0.56758792732771934*tmp27);
      const real_t tmp83 = 0.78379396366385934*tmp2*tmp31*tmp4*J_B_3(0, 1) + 0.78379396366385934*tmp3*tmp31*tmp4*J_B_3(0, 1) - 0.78379396366385934*tmp34 - 0.78379396366385934*tmp38;
      const real_t tmp84 = 2.2673902919218332*tmp2*tmp4*tmp44*J_B_4(0, 1) + 2.2673902919218332*tmp3*tmp4*tmp44*J_B_4(0, 1) - 2.2673902919218332*tmp47 - 2.2673902919218332*tmp51;
      const real_t tmp85 = tmp67*(0.63369514596091792*tmp60 - 0.63369514596091792*tmp62 + 0.63369514596091792*tmp64 - 0.63369514596091792*tmp65);
      const real_t tmp86 = 0.63369514596091747*tmp72 - 0.63369514596091747*tmp74 + 0.63369514596091747*tmp76 - 0.63369514596091747*tmp77;
      const real_t tmp87 = tmp42*tmp83;
      const real_t tmp88 = tmp55*tmp84;
      const real_t tmp89 = tmp80*tmp86;
      const real_t tmp90 = 0.43241207267228021*tmp9;
      const real_t tmp91 = 0.43241207267228021*tmp11;
      const real_t tmp92 = 1.7837939636638598*tmp13 - 1.7837939636638598*tmp14;
      const real_t tmp93 = 0.11169079483900564*tmp81;
      const real_t tmp94 = 1.7837939636638587*tmp22 - 1.7837939636638587*tmp24;
      const real_t tmp95 = 1.7837939636638607*tmp26 - 1.7837939636638607*tmp27;
      const real_t tmp96 = 0.11169079483900564*tmp82;
      const real_t tmp97 = 1.7837939636638611*tmp34 - 1.7837939636638611*tmp36;
      const real_t tmp98 = 0.43241207267227955*tmp38 - 0.43241207267227955*tmp39;
      const real_t tmp99 = 0.11169079483900564*tmp87;
      const real_t tmp100 = 0.36630485403908164*tmp47;
      const real_t tmp101 = 0.36630485403908164*tmp49;
      const real_t tmp102 = 0.36630485403908519*tmp51 - 0.36630485403908519*tmp52;
      const real_t tmp103 = 0.054975871827660817*tmp88;
      const real_t tmp104 = 0.36630485403908386*tmp60 - 0.36630485403908386*tmp62;
      const real_t tmp105 = 3.2673902919218341*tmp64 - 3.2673902919218341*tmp65;
      const real_t tmp106 = 0.054975871827660817*tmp85;
      const real_t tmp107 = 0.36630485403908253*tmp76 - 0.36630485403908253*tmp77;
      const real_t tmp108 = 3.2673902919218349*tmp72 - 3.2673902919218349*tmp74;
      const real_t tmp109 = 0.054975871827660817*tmp89;
      elMat(0,0) = -0.068615338550096702*tmp17*((-tmp12 - tmp15)*(-tmp12 - tmp15)) - 0.03598186587286744*tmp29*((tmp25 + tmp28)*(tmp25 + tmp28)) - 0.068615338550096577*tmp42*((-tmp37 - tmp40)*(-tmp37 - tmp40)) - 0.28263418612338997*tmp55*((-tmp50 - tmp53)*(-tmp50 - tmp53)) - 0.022076635451774219*tmp67*((tmp63 + tmp66)*(tmp63 + tmp66)) - 0.022076635451774192*tmp80*((tmp75 + tmp78)*(tmp75 + tmp78));
      elMat(0,1) = -0.087542570791631205*tmp12*tmp81 + 0.063394346744256869*tmp16*tmp37*tmp41*tmp83*ScalarCoeff0_3 + 0.034837943122158065*tmp16*tmp50*tmp54*tmp84*ScalarCoeff0_4 + 0.03483794312215821*tmp16*tmp75*tmp79*tmp86*ScalarCoeff0_6 - 0.087542570791631302*tmp25*tmp82 - 0.12465175807197719*tmp63*tmp85;
      elMat(0,2) = 0.063394346744256799*tmp15*tmp81 - 0.08754257079163108*tmp28*tmp82 - 0.087542570791631358*tmp40*tmp87 + 0.034837943122158259*tmp53*tmp88 + 0.034837943122158141*tmp66*tmp85 - 0.12465175807197725*tmp78*tmp89;
      elMat(0,3) = -tmp103*(tmp100 - tmp101 + tmp102) - tmp106*(tmp104 + tmp105) - tmp109*(tmp107 + tmp108) - tmp93*(tmp90 - tmp91 + tmp92) - tmp96*(tmp94 + tmp95) - tmp99*(tmp97 + tmp98);
      elMat(0,4) = -tmp103*(-tmp100 + tmp101 + 2.9010854378827515*tmp51 - 2.9010854378827515*tmp52) - tmp106*(-tmp104 + 1.7763568394002505e-15*tmp3*tmp4*tmp57*J_B_5(0, 1) - 1.7763568394002505e-15*tmp64) - tmp109*(-tmp108 + 2.9010854378827524*tmp3*tmp4*tmp69*J_B_6(0, 1) - 2.9010854378827524*tmp76) - tmp93*(1.3513818909915796*tmp13 - 1.3513818909915796*tmp14 - tmp90 + tmp91) - tmp96*(1.3513818909915782*tmp19*tmp3*tmp4*J_B_2(0, 1) - 1.3513818909915782*tmp26 - tmp94) - tmp99*(1.7763568394002505e-15*tmp3*tmp31*tmp4*J_B_3(0, 1) - 1.7763568394002505e-15*tmp38 - tmp97);
      elMat(0,5) = -tmp103*(2.901085437882748*tmp0*tmp4*tmp44*J_B_4(0, 0) - tmp102 - 2.901085437882748*tmp49) - tmp106*(-tmp105 + 2.901085437882752*tmp2*tmp4*tmp57*J_B_5(0, 1) - 2.901085437882752*tmp60) + tmp107*tmp109 - tmp93*(2.2204460492503131e-16*tmp0*tmp4*tmp6*J_B_1(0, 0) - 2.2204460492503131e-16*tmp11 - tmp92) - tmp96*(1.35138189099158*tmp19*tmp2*tmp4*J_B_2(0, 1) - 1.35138189099158*tmp22 - tmp95) - tmp99*(1.3513818909915798*tmp0*tmp31*tmp4*J_B_3(0, 0) - 1.3513818909915798*tmp36 - tmp98);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp8 = -tmp7 + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp9 = -coords[0][2] + coords[3][2];
      const real_t tmp10 = -coords[0][1] + coords[3][1];
      const real_t tmp11 = -coords[0][2] + coords[1][2];
      const real_t tmp12 = -coords[0][0] + coords[3][0];
      const real_t tmp13 = -coords[0][2] + coords[2][2];
      const real_t tmp14 = tmp13*tmp4;
      const real_t tmp15 = tmp0*tmp10;
      const real_t tmp16 = tmp11*tmp12;
      const real_t tmp17 = 1.0 / (-tmp1*tmp16 + tmp10*tmp11*tmp3 + tmp12*tmp14 - tmp13*tmp15 + tmp2*tmp9 - tmp5*tmp9);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp18*J_B_1(1, 1) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) - tmp7*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp17*tmp22;
      const real_t tmp24 = tmp23*tmp8;
      const real_t tmp25 = tmp24*tmp6;
      const real_t tmp26 = -tmp0*tmp13 + tmp11*tmp3;
      const real_t tmp27 = tmp18 - tmp20;
      const real_t tmp28 = tmp23*tmp27;
      const real_t tmp29 = tmp26*tmp28;
      const real_t tmp30 = -tmp1*tmp11 + tmp14;
      const real_t tmp31 = -tmp19 + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp32 = tmp23*tmp31;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = tmp25 + tmp29 + tmp33;
      const real_t tmp35 = -tmp1*tmp12 + tmp10*tmp3;
      const real_t tmp36 = tmp24*tmp35;
      const real_t tmp37 = tmp12*tmp13 - tmp3*tmp9;
      const real_t tmp38 = tmp28*tmp37;
      const real_t tmp39 = tmp1*tmp9 - tmp10*tmp13;
      const real_t tmp40 = tmp32*tmp39;
      const real_t tmp41 = tmp36 + tmp38 + tmp40;
      const real_t tmp42 = tmp12*tmp4 - tmp15;
      const real_t tmp43 = tmp24*tmp42;
      const real_t tmp44 = tmp0*tmp9 - tmp16;
      const real_t tmp45 = tmp28*tmp44;
      const real_t tmp46 = tmp10*tmp11 - tmp4*tmp9;
      const real_t tmp47 = tmp32*tmp46;
      const real_t tmp48 = tmp43 + tmp45 + tmp47;
      const real_t tmp49 = tmp41 + tmp48;
      const real_t tmp50 = coords[0][0]*coords[1][1];
      const real_t tmp51 = coords[0][0]*coords[1][2];
      const real_t tmp52 = coords[2][1]*coords[3][2];
      const real_t tmp53 = coords[0][1]*coords[1][0];
      const real_t tmp54 = coords[0][1]*coords[1][2];
      const real_t tmp55 = coords[2][2]*coords[3][0];
      const real_t tmp56 = coords[0][2]*coords[1][0];
      const real_t tmp57 = coords[0][2]*coords[1][1];
      const real_t tmp58 = coords[2][0]*coords[3][1];
      const real_t tmp59 = coords[2][2]*coords[3][1];
      const real_t tmp60 = coords[2][0]*coords[3][2];
      const real_t tmp61 = coords[2][1]*coords[3][0];
      const real_t tmp62 = std::abs(coords[0][0]*tmp52 - coords[0][0]*tmp59 + coords[0][1]*tmp55 - coords[0][1]*tmp60 + coords[0][2]*tmp58 - coords[0][2]*tmp61 - coords[1][0]*tmp52 + coords[1][0]*tmp59 - coords[1][1]*tmp55 + coords[1][1]*tmp60 - coords[1][2]*tmp58 + coords[1][2]*tmp61 + coords[2][0]*tmp54 - coords[2][0]*tmp57 - coords[2][1]*tmp51 + coords[2][1]*tmp56 + coords[2][2]*tmp50 - coords[2][2]*tmp53 - coords[3][0]*tmp54 + coords[3][0]*tmp57 + coords[3][1]*tmp51 - coords[3][1]*tmp56 - coords[3][2]*tmp50 + coords[3][2]*tmp53);
      const real_t tmp63 = tmp62*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp64 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp65 = -tmp64 + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp66 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp67 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp68 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp69 = -tmp64*J_B_10(1, 2) + tmp66*J_B_10(1, 1) - tmp67*J_B_10(1, 0) - tmp68*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp70 = 1.0 / (tmp69);
      const real_t tmp71 = tmp17*tmp70;
      const real_t tmp72 = tmp65*tmp71;
      const real_t tmp73 = tmp6*tmp72;
      const real_t tmp74 = tmp66 - tmp68;
      const real_t tmp75 = tmp71*tmp74;
      const real_t tmp76 = tmp26*tmp75;
      const real_t tmp77 = -tmp67 + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp78 = tmp71*tmp77;
      const real_t tmp79 = tmp30*tmp78;
      const real_t tmp80 = tmp73 + tmp76 + tmp79;
      const real_t tmp81 = tmp35*tmp72;
      const real_t tmp82 = tmp37*tmp75;
      const real_t tmp83 = tmp39*tmp78;
      const real_t tmp84 = tmp81 + tmp82 + tmp83;
      const real_t tmp85 = tmp42*tmp72;
      const real_t tmp86 = tmp44*tmp75;
      const real_t tmp87 = tmp46*tmp78;
      const real_t tmp88 = tmp85 + tmp86 + tmp87;
      const real_t tmp89 = tmp84 + tmp88;
      const real_t tmp90 = tmp62*std::abs(tmp69)*ScalarCoeff0_10;
      const real_t tmp91 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp92 = -tmp91 + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp93 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp94 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp95 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp96 = -tmp91*J_B_3(1, 2) + tmp93*J_B_3(1, 1) - tmp94*J_B_3(1, 0) - tmp95*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp97 = 1.0 / (tmp96);
      const real_t tmp98 = tmp17*tmp97;
      const real_t tmp99 = tmp92*tmp98;
      const real_t tmp100 = tmp6*tmp99;
      const real_t tmp101 = tmp93 - tmp95;
      const real_t tmp102 = tmp101*tmp98;
      const real_t tmp103 = tmp102*tmp26;
      const real_t tmp104 = -tmp94 + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp105 = tmp104*tmp98;
      const real_t tmp106 = tmp105*tmp30;
      const real_t tmp107 = tmp100 + tmp103 + tmp106;
      const real_t tmp108 = tmp35*tmp99;
      const real_t tmp109 = tmp102*tmp37;
      const real_t tmp110 = tmp105*tmp39;
      const real_t tmp111 = tmp108 + tmp109 + tmp110;
      const real_t tmp112 = tmp42*tmp99;
      const real_t tmp113 = tmp102*tmp44;
      const real_t tmp114 = tmp105*tmp46;
      const real_t tmp115 = tmp112 + tmp113 + tmp114;
      const real_t tmp116 = tmp111 + tmp115;
      const real_t tmp117 = tmp62*std::abs(tmp96)*ScalarCoeff0_3;
      const real_t tmp118 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp119 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp120 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp121 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp122 = -tmp118*J_B_5(1, 2) + tmp119*J_B_5(1, 1) - tmp120*J_B_5(1, 0) - tmp121*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp123 = tmp17/tmp122;
      const real_t tmp124 = tmp123*(-tmp118 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp125 = tmp124*tmp6;
      const real_t tmp126 = tmp123*(tmp119 - tmp121);
      const real_t tmp127 = tmp126*tmp26;
      const real_t tmp128 = tmp123*(-tmp120 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp129 = tmp128*tmp30;
      const real_t tmp130 = tmp125 + tmp127 + tmp129;
      const real_t tmp131 = tmp124*tmp35;
      const real_t tmp132 = tmp126*tmp37;
      const real_t tmp133 = tmp128*tmp39;
      const real_t tmp134 = tmp131 + tmp132 + tmp133;
      const real_t tmp135 = tmp124*tmp42;
      const real_t tmp136 = tmp126*tmp44;
      const real_t tmp137 = tmp128*tmp46;
      const real_t tmp138 = tmp135 + tmp136 + tmp137;
      const real_t tmp139 = tmp134 + tmp138;
      const real_t tmp140 = tmp62*std::abs(tmp122)*ScalarCoeff0_5;
      const real_t tmp141 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp142 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp143 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp144 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp145 = -tmp141*J_B_7(1, 2) + tmp142*J_B_7(1, 1) - tmp143*J_B_7(1, 0) - tmp144*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp146 = tmp17/tmp145;
      const real_t tmp147 = tmp146*(-tmp141 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp148 = tmp147*tmp6;
      const real_t tmp149 = tmp146*(tmp142 - tmp144);
      const real_t tmp150 = tmp149*tmp26;
      const real_t tmp151 = tmp146*(-tmp143 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp152 = tmp151*tmp30;
      const real_t tmp153 = tmp148 + tmp150 + tmp152;
      const real_t tmp154 = tmp147*tmp35;
      const real_t tmp155 = tmp149*tmp37;
      const real_t tmp156 = tmp151*tmp39;
      const real_t tmp157 = tmp154 + tmp155 + tmp156;
      const real_t tmp158 = tmp147*tmp42;
      const real_t tmp159 = tmp149*tmp44;
      const real_t tmp160 = tmp151*tmp46;
      const real_t tmp161 = tmp158 + tmp159 + tmp160;
      const real_t tmp162 = tmp157 + tmp161;
      const real_t tmp163 = tmp62*std::abs(tmp145)*ScalarCoeff0_7;
      const real_t tmp164 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp165 = -tmp164 + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp166 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp167 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp168 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp169 = -tmp164*J_B_9(1, 2) + tmp166*J_B_9(1, 1) - tmp167*J_B_9(1, 0) - tmp168*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp170 = 1.0 / (tmp169);
      const real_t tmp171 = tmp17*tmp170;
      const real_t tmp172 = tmp165*tmp171;
      const real_t tmp173 = tmp172*tmp42;
      const real_t tmp174 = tmp166 - tmp168;
      const real_t tmp175 = tmp171*tmp174;
      const real_t tmp176 = tmp175*tmp44;
      const real_t tmp177 = -tmp167 + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp178 = tmp171*tmp177;
      const real_t tmp179 = tmp178*tmp46;
      const real_t tmp180 = tmp173 + tmp176 + tmp179;
      const real_t tmp181 = tmp172*tmp35;
      const real_t tmp182 = tmp175*tmp37;
      const real_t tmp183 = tmp178*tmp39;
      const real_t tmp184 = tmp181 + tmp182 + tmp183;
      const real_t tmp185 = tmp172*tmp6;
      const real_t tmp186 = tmp175*tmp26;
      const real_t tmp187 = tmp178*tmp30;
      const real_t tmp188 = tmp185 + tmp186 + tmp187;
      const real_t tmp189 = tmp184 + tmp188;
      const real_t tmp190 = tmp62*std::abs(tmp169)*ScalarCoeff0_9;
      const real_t tmp191 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp192 = -tmp191 + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp193 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp194 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp195 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp196 = -tmp191*J_B_11(1, 2) + tmp193*J_B_11(1, 1) - tmp194*J_B_11(1, 0) - tmp195*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp197 = 1.0 / (tmp196);
      const real_t tmp198 = tmp17*tmp197;
      const real_t tmp199 = tmp192*tmp198;
      const real_t tmp200 = tmp199*tmp35;
      const real_t tmp201 = tmp193 - tmp195;
      const real_t tmp202 = tmp198*tmp201;
      const real_t tmp203 = tmp202*tmp37;
      const real_t tmp204 = -tmp194 + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp205 = tmp198*tmp204;
      const real_t tmp206 = tmp205*tmp39;
      const real_t tmp207 = tmp200 + tmp203 + tmp206;
      const real_t tmp208 = tmp199*tmp42;
      const real_t tmp209 = tmp202*tmp44;
      const real_t tmp210 = tmp205*tmp46;
      const real_t tmp211 = tmp208 + tmp209 + tmp210;
      const real_t tmp212 = tmp199*tmp6;
      const real_t tmp213 = tmp202*tmp26;
      const real_t tmp214 = tmp205*tmp30;
      const real_t tmp215 = tmp212 + tmp213 + tmp214;
      const real_t tmp216 = tmp62*std::abs(tmp196)*ScalarCoeff0_11;
      const real_t tmp217 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp218 = -tmp217 + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp219 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp220 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp221 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp222 = -tmp217*J_B_2(1, 2) + tmp219*J_B_2(1, 1) - tmp220*J_B_2(1, 0) - tmp221*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp223 = 1.0 / (tmp222);
      const real_t tmp224 = tmp17*tmp223;
      const real_t tmp225 = tmp218*tmp224;
      const real_t tmp226 = tmp225*tmp6;
      const real_t tmp227 = tmp219 - tmp221;
      const real_t tmp228 = tmp224*tmp227;
      const real_t tmp229 = tmp228*tmp26;
      const real_t tmp230 = -tmp220 + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp231 = tmp224*tmp230;
      const real_t tmp232 = tmp231*tmp30;
      const real_t tmp233 = tmp226 + tmp229 + tmp232;
      const real_t tmp234 = tmp225*tmp35;
      const real_t tmp235 = tmp228*tmp37;
      const real_t tmp236 = tmp231*tmp39;
      const real_t tmp237 = tmp234 + tmp235 + tmp236;
      const real_t tmp238 = tmp225*tmp42;
      const real_t tmp239 = tmp228*tmp44;
      const real_t tmp240 = tmp231*tmp46;
      const real_t tmp241 = tmp238 + tmp239 + tmp240;
      const real_t tmp242 = tmp237 + tmp241;
      const real_t tmp243 = tmp62*std::abs(tmp222)*ScalarCoeff0_2;
      const real_t tmp244 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp245 = -tmp244 + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp246 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp247 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp248 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp249 = -tmp244*J_B_4(1, 2) + tmp246*J_B_4(1, 1) - tmp247*J_B_4(1, 0) - tmp248*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp250 = 1.0 / (tmp249);
      const real_t tmp251 = tmp17*tmp250;
      const real_t tmp252 = tmp245*tmp251;
      const real_t tmp253 = tmp252*tmp42;
      const real_t tmp254 = tmp246 - tmp248;
      const real_t tmp255 = tmp251*tmp254;
      const real_t tmp256 = tmp255*tmp44;
      const real_t tmp257 = -tmp247 + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp258 = tmp251*tmp257;
      const real_t tmp259 = tmp258*tmp46;
      const real_t tmp260 = tmp253 + tmp256 + tmp259;
      const real_t tmp261 = tmp252*tmp35;
      const real_t tmp262 = tmp255*tmp37;
      const real_t tmp263 = tmp258*tmp39;
      const real_t tmp264 = tmp261 + tmp262 + tmp263;
      const real_t tmp265 = tmp252*tmp6;
      const real_t tmp266 = tmp255*tmp26;
      const real_t tmp267 = tmp258*tmp30;
      const real_t tmp268 = tmp265 + tmp266 + tmp267;
      const real_t tmp269 = tmp264 + tmp268;
      const real_t tmp270 = tmp62*std::abs(tmp249)*ScalarCoeff0_4;
      const real_t tmp271 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp272 = -tmp271 + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp273 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp274 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp275 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp276 = -tmp271*J_B_6(1, 2) + tmp273*J_B_6(1, 1) - tmp274*J_B_6(1, 0) - tmp275*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp277 = 1.0 / (tmp276);
      const real_t tmp278 = tmp17*tmp277;
      const real_t tmp279 = tmp272*tmp278;
      const real_t tmp280 = tmp279*tmp6;
      const real_t tmp281 = tmp273 - tmp275;
      const real_t tmp282 = tmp278*tmp281;
      const real_t tmp283 = tmp26*tmp282;
      const real_t tmp284 = -tmp274 + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp285 = tmp278*tmp284;
      const real_t tmp286 = tmp285*tmp30;
      const real_t tmp287 = tmp280 + tmp283 + tmp286;
      const real_t tmp288 = tmp279*tmp35;
      const real_t tmp289 = tmp282*tmp37;
      const real_t tmp290 = tmp285*tmp39;
      const real_t tmp291 = tmp288 + tmp289 + tmp290;
      const real_t tmp292 = tmp279*tmp42;
      const real_t tmp293 = tmp282*tmp44;
      const real_t tmp294 = tmp285*tmp46;
      const real_t tmp295 = tmp292 + tmp293 + tmp294;
      const real_t tmp296 = tmp291 + tmp295;
      const real_t tmp297 = tmp62*std::abs(tmp276)*ScalarCoeff0_6;
      const real_t tmp298 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp299 = -tmp298 + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp300 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp301 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp302 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp303 = -tmp298*J_B_8(1, 2) + tmp300*J_B_8(1, 1) - tmp301*J_B_8(1, 0) - tmp302*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp304 = 1.0 / (tmp303);
      const real_t tmp305 = tmp17*tmp304;
      const real_t tmp306 = tmp299*tmp305;
      const real_t tmp307 = tmp306*tmp35;
      const real_t tmp308 = tmp300 - tmp302;
      const real_t tmp309 = tmp305*tmp308;
      const real_t tmp310 = tmp309*tmp37;
      const real_t tmp311 = -tmp301 + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp312 = tmp305*tmp311;
      const real_t tmp313 = tmp312*tmp39;
      const real_t tmp314 = tmp307 + tmp310 + tmp313;
      const real_t tmp315 = tmp306*tmp42;
      const real_t tmp316 = tmp309*tmp44;
      const real_t tmp317 = tmp312*tmp46;
      const real_t tmp318 = tmp315 + tmp316 + tmp317;
      const real_t tmp319 = tmp306*tmp6;
      const real_t tmp320 = tmp26*tmp309;
      const real_t tmp321 = tmp30*tmp312;
      const real_t tmp322 = tmp319 + tmp320 + tmp321;
      const real_t tmp323 = tmp318 + tmp322;
      const real_t tmp324 = tmp62*std::abs(tmp303)*ScalarCoeff0_8;
      const real_t tmp325 = tmp63*(0.55279693041046674*tmp25 + 0.55279693041046674*tmp29 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp40 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45 + 0.55279693041046674*tmp47);
      const real_t tmp326 = 0.0072301427194886381*tmp41;
      const real_t tmp327 = tmp90*(0.60805118540288361*tmp73 + 0.60805118540288361*tmp76 + 0.60805118540288361*tmp79 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87);
      const real_t tmp328 = 0.012344594760863713*tmp84;
      const real_t tmp329 = tmp216*(-2.0850189307815055*tmp200 - 2.0850189307815055*tmp203 - 2.0850189307815055*tmp206 - 2.0850189307815055*tmp208 - 2.0850189307815055*tmp209 - 2.0850189307815055*tmp210 - 2.0850189307815055*tmp212 - 2.0850189307815055*tmp213 - 2.0850189307815055*tmp214);
      const real_t tmp330 = 0.0036548782978011126*tmp207;
      const real_t tmp331 = tmp243*(-0.29317593934991559*tmp226 - 0.29317593934991559*tmp229 - 0.29317593934991559*tmp232 - 0.29317593934991559*tmp234 - 0.29317593934991559*tmp235 - 0.29317593934991559*tmp236 - 0.29317593934991559*tmp238 - 0.29317593934991559*tmp239 - 0.29317593934991559*tmp240);
      const real_t tmp332 = 0.010799549999884401*tmp237;
      const real_t tmp333 = tmp117*(0.56151037867223397*tmp100 + 0.56151037867223397*tmp103 + 0.56151037867223397*tmp106 + 0.56151037867223397*tmp108 + 0.56151037867223397*tmp109 + 0.56151037867223397*tmp110 + 0.56151037867223397*tmp112 + 0.56151037867223397*tmp113 + 0.56151037867223397*tmp114);
      const real_t tmp334 = 0.012584765868454714*tmp111;
      const real_t tmp335 = tmp270*(-0.31389282688815401*tmp253 - 0.31389282688815401*tmp256 - 0.31389282688815401*tmp259 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp265 - 0.31389282688815401*tmp266 - 0.31389282688815401*tmp267);
      const real_t tmp336 = 0.00083582139204094858*tmp264;
      const real_t tmp337 = tmp140*(0.99043597017024343*tmp125 + 0.99043597017024343*tmp127 + 0.99043597017024343*tmp129 + 0.99043597017024343*tmp131 + 0.99043597017024343*tmp132 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp135 + 0.99043597017024343*tmp136 + 0.99043597017024343*tmp137);
      const real_t tmp338 = 0.0040819365333192512*tmp134;
      const real_t tmp339 = tmp297*(-1.2518910405721839*tmp280 - 1.2518910405721839*tmp283 - 1.2518910405721839*tmp286 - 1.2518910405721839*tmp288 - 1.2518910405721839*tmp289 - 1.2518910405721839*tmp290 - 1.2518910405721839*tmp292 - 1.2518910405721839*tmp293 - 1.2518910405721839*tmp294);
      const real_t tmp340 = 0.0045346636251092122*tmp291;
      const real_t tmp341 = tmp163*(0.77270393148826533*tmp148 + 0.77270393148826533*tmp150 + 0.77270393148826533*tmp152 + 0.77270393148826533*tmp154 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp156 + 0.77270393148826533*tmp158 + 0.77270393148826533*tmp159 + 0.77270393148826533*tmp160);
      const real_t tmp342 = 0.0061987549215557864*tmp157;
      const real_t tmp343 = tmp324*(-0.9184440441026207*tmp307 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp313 - 0.9184440441026207*tmp315 - 0.9184440441026207*tmp316 - 0.9184440441026207*tmp317 - 0.9184440441026207*tmp319 - 0.9184440441026207*tmp320 - 0.9184440441026207*tmp321);
      const real_t tmp344 = 0.0045087419239184514*tmp314;
      const real_t tmp345 = tmp190*(0.37454442704241986*tmp173 + 0.37454442704241986*tmp176 + 0.37454442704241986*tmp179 + 0.37454442704241986*tmp181 + 0.37454442704241986*tmp182 + 0.37454442704241986*tmp183 + 0.37454442704241986*tmp185 + 0.37454442704241986*tmp186 + 0.37454442704241986*tmp187);
      const real_t tmp346 = 0.0044998649071490461*tmp184;
      const real_t tmp347 = tmp325*tmp326 - tmp327*tmp328 + tmp329*tmp330 + tmp331*tmp332 - tmp333*tmp334 + tmp335*tmp336 + tmp337*tmp338 + tmp339*tmp340 - tmp341*tmp342 - tmp343*tmp344 + tmp345*tmp346;
      const real_t tmp348 = 0.0067853652681886352*tmp48;
      const real_t tmp349 = 0.0041416969702195786*tmp88;
      const real_t tmp350 = 0.0013137068218914037*tmp211;
      const real_t tmp351 = 0.0038818597778972029*tmp241;
      const real_t tmp352 = 0.010066964965131993*tmp115;
      const real_t tmp353 = 0.0046804043242939224*tmp260;
      const real_t tmp354 = 0.0097490714046835261*tmp138;
      const real_t tmp355 = 0.0085077884791842431*tmp295;
      const real_t tmp356 = 0.0056487878897383461*tmp161;
      const real_t tmp357 = 0.005238393734043144*tmp318;
      const real_t tmp358 = 0.012093792842045984*tmp180;
      const real_t tmp359 = tmp325*tmp348 + tmp327*tmp349 + tmp329*tmp350 - tmp331*tmp351 + tmp333*tmp352 - tmp335*tmp353 - tmp337*tmp354 + tmp339*tmp355 - tmp341*tmp356 + tmp343*tmp357 - tmp345*tmp358;
      const real_t tmp360 = 0.020554974928565235*tmp34;
      const real_t tmp361 = 0.0044685602754798454*tmp80;
      const real_t tmp362 = 0.0041246668394316508*tmp215;
      const real_t tmp363 = 0.0033267985952381263*tmp233;
      const real_t tmp364 = 0.0071511654955033511*tmp107;
      const real_t tmp365 = 0.010590168103918869*tmp268;
      const real_t tmp366 = 0.0027144532136395704*tmp130;
      const real_t tmp367 = 0.0019942799754541058*tmp287;
      const real_t tmp368 = 0.005883129944586717*tmp153;
      const real_t tmp369 = 0.0053864900723149976*tmp322;
      const real_t tmp370 = 0.0052886569726683132*tmp188;
      const real_t tmp371 = -tmp325*tmp360 + tmp327*tmp361 + tmp329*tmp362 - tmp331*tmp363 - tmp333*tmp364 + tmp335*tmp365 - tmp337*tmp366 - tmp339*tmp367 + tmp341*tmp368 + tmp343*tmp369 + tmp345*tmp370;
      const real_t tmp372 = 2.7375616618121592*tmp43 + 2.7375616618121592*tmp45 + 2.7375616618121592*tmp47;
      const real_t tmp373 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp29 + 0.42641669024797446*tmp33;
      const real_t tmp374 = tmp372 + tmp373;
      const real_t tmp375 = 0.011829781572832234*tmp325;
      const real_t tmp376 = 0.2723974837528258*tmp85 + 0.2723974837528258*tmp86 + 0.2723974837528258*tmp87;
      const real_t tmp377 = 0.3256196736114374*tmp73 + 0.3256196736114374*tmp76 + 0.3256196736114374*tmp79;
      const real_t tmp378 = tmp376 + tmp377;
      const real_t tmp379 = 0.0061414854617707626*tmp327;
      const real_t tmp380 = 0.054242807519210512*tmp208 + 0.054242807519210512*tmp209 + 0.054242807519210512*tmp210;
      const real_t tmp381 = 0.69877623478892303*tmp212 + 0.69877623478892303*tmp213 + 0.69877623478892303*tmp214;
      const real_t tmp382 = tmp380 + tmp381;
      const real_t tmp383 = 0.0043612323249822204*tmp329;
      const real_t tmp384 = 1.2716142408535775*tmp238 + 1.2716142408535775*tmp239 + 1.2716142408535775*tmp240;
      const real_t tmp385 = 1.3169318389705873*tmp226 + 1.3169318389705873*tmp229 + 1.3169318389705873*tmp232;
      const real_t tmp386 = tmp384 + tmp385;
      const real_t tmp387 = 0.012248248047610821*tmp331;
      const real_t tmp388 = 1.4152929568371884*tmp112 + 1.4152929568371884*tmp113 + 1.4152929568371884*tmp114;
      const real_t tmp389 = 0.41537646564397157*tmp100 + 0.41537646564397157*tmp103 + 0.41537646564397157*tmp106;
      const real_t tmp390 = tmp388 + tmp389;
      const real_t tmp391 = 0.017219568446249611*tmp333;
      const real_t tmp392 = 0.50720690366156718*tmp253 + 0.50720690366156718*tmp256 + 0.50720690366156718*tmp259;
      const real_t tmp393 = 1.2177936097379878*tmp265 + 1.2177936097379878*tmp266 + 1.2177936097379878*tmp267;
      const real_t tmp394 = tmp392 + tmp393;
      const real_t tmp395 = 0.021490090227737114*tmp335;
      const real_t tmp396 = 1.3207616593498592*tmp135 + 1.3207616593498592*tmp136 + 1.3207616593498592*tmp137;
      const real_t tmp397 = 2.1520288156647434*tmp125 + 2.1520288156647434*tmp127 + 2.1520288156647434*tmp129;
      const real_t tmp398 = tmp396 + tmp397;
      const real_t tmp399 = 0.0084625239161731543*tmp337;
      const real_t tmp400 = 1.2259759537187613*tmp292 + 1.2259759537187613*tmp293 + 1.2259759537187613*tmp294;
      const real_t tmp401 = 0.035965040373342916*tmp280 + 0.035965040373342916*tmp283 + 0.035965040373342916*tmp286;
      const real_t tmp402 = tmp400 + tmp401;
      const real_t tmp403 = 0.0088251866742250357*tmp339;
      const real_t tmp404 = 0.23782646519773576*tmp158 + 0.23782646519773576*tmp159 + 0.23782646519773576*tmp160;
      const real_t tmp405 = 1.7318139619254227*tmp148 + 1.7318139619254227*tmp150 + 1.7318139619254227*tmp152;
      const real_t tmp406 = tmp404 + tmp405;
      const real_t tmp407 = 0.0077188851041817101*tmp341;
      const real_t tmp408 = 0.19112574223634571*tmp315 + 0.19112574223634571*tmp316 + 0.19112574223634571*tmp317;
      const real_t tmp409 = 0.21336495814298084*tmp319 + 0.21336495814298084*tmp320 + 0.21336495814298084*tmp321;
      const real_t tmp410 = tmp408 + tmp409;
      const real_t tmp411 = 0.006659242794062166*tmp343;
      const real_t tmp412 = 0.14073571909439453*tmp173 + 0.14073571909439453*tmp176 + 0.14073571909439453*tmp179;
      const real_t tmp413 = 2.9649155283744921*tmp185 + 2.9649155283744921*tmp186 + 2.9649155283744921*tmp187;
      const real_t tmp414 = tmp412 + tmp413;
      const real_t tmp415 = 0.0061548665412862651*tmp345;
      const real_t tmp416 = -tmp374*tmp375 - tmp378*tmp379 - tmp382*tmp383 - tmp386*tmp387 - tmp390*tmp391 - tmp394*tmp395 - tmp398*tmp399 - tmp402*tmp403 - tmp406*tmp407 - tmp410*tmp411 - tmp414*tmp415;
      const real_t tmp417 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp40;
      const real_t tmp418 = 0.38881857835033307*tmp25 + 0.38881857835033307*tmp29 + 0.38881857835033307*tmp33;
      const real_t tmp419 = tmp417 + tmp418;
      const real_t tmp420 = 0.2723974837528258*tmp81 + 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83;
      const real_t tmp421 = 3.0100340280386204*tmp73 + 3.0100340280386204*tmp76 + 3.0100340280386204*tmp79;
      const real_t tmp422 = tmp420 + tmp421;
      const real_t tmp423 = 0.054242807519210512*tmp200 + 0.054242807519210512*tmp203 + 0.054242807519210512*tmp206;
      const real_t tmp424 = 0.16196202691036121*tmp212 + 0.16196202691036121*tmp213 + 0.16196202691036121*tmp214;
      const real_t tmp425 = tmp423 + tmp424;
      const real_t tmp426 = 1.2716142408535775*tmp234 + 1.2716142408535775*tmp235 + 1.2716142408535775*tmp236;
      const real_t tmp427 = 0.11827798082591956*tmp226 + 0.11827798082591956*tmp229 + 0.11827798082591956*tmp232;
      const real_t tmp428 = tmp426 + tmp427;
      const real_t tmp429 = 1.4152929568371884*tmp108 + 1.4152929568371884*tmp109 + 1.4152929568371884*tmp110;
      const real_t tmp430 = 1.730840956191074*tmp100 + 1.730840956191074*tmp103 + 1.730840956191074*tmp106;
      const real_t tmp431 = tmp429 + tmp430;
      const real_t tmp432 = 0.50720690366156718*tmp261 + 0.50720690366156718*tmp262 + 0.50720690366156718*tmp263;
      const real_t tmp433 = 0.96110665971229103*tmp265 + 0.96110665971229103*tmp266 + 0.96110665971229103*tmp267;
      const real_t tmp434 = tmp432 + tmp433;
      const real_t tmp435 = 1.3207616593498592*tmp131 + 1.3207616593498592*tmp132 + 1.3207616593498592*tmp133;
      const real_t tmp436 = 0.51764549515564062*tmp125 + 0.51764549515564062*tmp127 + 0.51764549515564062*tmp129;
      const real_t tmp437 = tmp435 + tmp436;
      const real_t tmp438 = 1.2259759537187613*tmp288 + 1.2259759537187613*tmp289 + 1.2259759537187613*tmp290;
      const real_t tmp439 = 0.48616796533571183*tmp280 + 0.48616796533571183*tmp283 + 0.48616796533571183*tmp286;
      const real_t tmp440 = tmp438 + tmp439;
      const real_t tmp441 = 0.23782646519773576*tmp154 + 0.23782646519773576*tmp155 + 0.23782646519773576*tmp156;
      const real_t tmp442 = 1.8030635043651069*tmp148 + 1.8030635043651069*tmp150 + 1.8030635043651069*tmp152;
      const real_t tmp443 = tmp441 + tmp442;
      const real_t tmp444 = 0.19112574223634571*tmp307 + 0.19112574223634571*tmp310 + 0.19112574223634571*tmp313;
      const real_t tmp445 = 1.6770652555180527*tmp319 + 1.6770652555180527*tmp320 + 1.6770652555180527*tmp321;
      const real_t tmp446 = tmp444 + tmp445;
      const real_t tmp447 = 0.14073571909439453*tmp181 + 0.14073571909439453*tmp182 + 0.14073571909439453*tmp183;
      const real_t tmp448 = 0.2688931795735332*tmp185 + 0.2688931795735332*tmp186 + 0.2688931795735332*tmp187;
      const real_t tmp449 = tmp447 + tmp448;
      const real_t tmp450 = -tmp375*tmp419 - tmp379*tmp422 - tmp383*tmp425 - tmp387*tmp428 - tmp391*tmp431 - tmp395*tmp434 - tmp399*tmp437 - tmp403*tmp440 - tmp407*tmp443 - tmp411*tmp446 - tmp415*tmp449;
      const real_t tmp451 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp40;
      const real_t tmp452 = 0.38881857835033307*tmp43 + 0.38881857835033307*tmp45 + 0.38881857835033307*tmp47;
      const real_t tmp453 = tmp451 + tmp452;
      const real_t tmp454 = 0.3256196736114374*tmp81 + 0.3256196736114374*tmp82 + 0.3256196736114374*tmp83;
      const real_t tmp455 = 3.0100340280386204*tmp85 + 3.0100340280386204*tmp86 + 3.0100340280386204*tmp87;
      const real_t tmp456 = tmp454 + tmp455;
      const real_t tmp457 = 0.69877623478892303*tmp200 + 0.69877623478892303*tmp203 + 0.69877623478892303*tmp206;
      const real_t tmp458 = 0.16196202691036121*tmp208 + 0.16196202691036121*tmp209 + 0.16196202691036121*tmp210;
      const real_t tmp459 = tmp457 + tmp458;
      const real_t tmp460 = 1.3169318389705873*tmp234 + 1.3169318389705873*tmp235 + 1.3169318389705873*tmp236;
      const real_t tmp461 = 0.11827798082591956*tmp238 + 0.11827798082591956*tmp239 + 0.11827798082591956*tmp240;
      const real_t tmp462 = tmp460 + tmp461;
      const real_t tmp463 = 0.41537646564397157*tmp108 + 0.41537646564397157*tmp109 + 0.41537646564397157*tmp110;
      const real_t tmp464 = 1.730840956191074*tmp112 + 1.730840956191074*tmp113 + 1.730840956191074*tmp114;
      const real_t tmp465 = tmp463 + tmp464;
      const real_t tmp466 = 1.2177936097379878*tmp261 + 1.2177936097379878*tmp262 + 1.2177936097379878*tmp263;
      const real_t tmp467 = 0.96110665971229103*tmp253 + 0.96110665971229103*tmp256 + 0.96110665971229103*tmp259;
      const real_t tmp468 = tmp466 + tmp467;
      const real_t tmp469 = 2.1520288156647434*tmp131 + 2.1520288156647434*tmp132 + 2.1520288156647434*tmp133;
      const real_t tmp470 = 0.51764549515564062*tmp135 + 0.51764549515564062*tmp136 + 0.51764549515564062*tmp137;
      const real_t tmp471 = tmp469 + tmp470;
      const real_t tmp472 = 0.035965040373342916*tmp288 + 0.035965040373342916*tmp289 + 0.035965040373342916*tmp290;
      const real_t tmp473 = 0.48616796533571183*tmp292 + 0.48616796533571183*tmp293 + 0.48616796533571183*tmp294;
      const real_t tmp474 = tmp472 + tmp473;
      const real_t tmp475 = 1.7318139619254227*tmp154 + 1.7318139619254227*tmp155 + 1.7318139619254227*tmp156;
      const real_t tmp476 = 1.8030635043651069*tmp158 + 1.8030635043651069*tmp159 + 1.8030635043651069*tmp160;
      const real_t tmp477 = tmp475 + tmp476;
      const real_t tmp478 = 0.21336495814298084*tmp307 + 0.21336495814298084*tmp310 + 0.21336495814298084*tmp313;
      const real_t tmp479 = 1.6770652555180527*tmp315 + 1.6770652555180527*tmp316 + 1.6770652555180527*tmp317;
      const real_t tmp480 = tmp478 + tmp479;
      const real_t tmp481 = 2.9649155283744921*tmp181 + 2.9649155283744921*tmp182 + 2.9649155283744921*tmp183;
      const real_t tmp482 = 0.2688931795735332*tmp173 + 0.2688931795735332*tmp176 + 0.2688931795735332*tmp179;
      const real_t tmp483 = tmp481 + tmp482;
      const real_t tmp484 = -tmp375*tmp453 - tmp379*tmp456 - tmp383*tmp459 - tmp387*tmp462 - tmp391*tmp465 - tmp395*tmp468 - tmp399*tmp471 - tmp403*tmp474 - tmp407*tmp477 - tmp411*tmp480 - tmp415*tmp483;
      const real_t tmp485 = -2.2903585922226259*tmp25 - 2.2903585922226259*tmp29 - 2.2903585922226259*tmp33 - tmp372 - tmp417;
      const real_t tmp486 = 0.11955133084429059*tmp17*tmp26*tmp70*tmp74 + 0.11955133084429059*tmp17*tmp30*tmp70*tmp77 + 0.11955133084429059*tmp17*tmp6*tmp65*tmp70 - tmp376 - tmp420;
      const real_t tmp487 = 3.030776123262295*tmp17*tmp192*tmp197*tmp6 + 3.030776123262295*tmp17*tmp197*tmp201*tmp26 + 3.030776123262295*tmp17*tmp197*tmp204*tmp30 - tmp380 - tmp423;
      const real_t tmp488 = 0.021561698496338266*tmp17*tmp218*tmp223*tmp6 + 0.021561698496338266*tmp17*tmp223*tmp227*tmp26 + 0.021561698496338266*tmp17*tmp223*tmp230*tmp30 - tmp384 - tmp426;
      const real_t tmp489 = -0.97680333550942233*tmp100 - 0.97680333550942233*tmp103 - 0.97680333550942233*tmp106 - tmp388 - tmp429;
      const real_t tmp490 = 0.80668592322658683*tmp17*tmp245*tmp250*tmp6 + 0.80668592322658683*tmp17*tmp250*tmp254*tmp26 + 0.80668592322658683*tmp17*tmp250*tmp257*tmp30 - tmp392 - tmp432;
      const real_t tmp491 = -1.3111976295201027*tmp125 - 1.3111976295201027*tmp127 - 1.3111976295201027*tmp129 - tmp396 - tmp435;
      const real_t tmp492 = 1.0259150868534226*tmp17*tmp26*tmp277*tmp281 + 1.0259150868534226*tmp17*tmp272*tmp277*tmp6 + 1.0259150868534226*tmp17*tmp277*tmp284*tmp30 - tmp400 - tmp438;
      const real_t tmp493 = -0.010530396686001087*tmp148 - 0.010530396686001087*tmp150 - 0.010530396686001087*tmp152 - tmp404 - tmp441;
      const real_t tmp494 = 1.727318301866275*tmp17*tmp26*tmp304*tmp308 + 1.727318301866275*tmp17*tmp299*tmp304*tmp6 + 1.727318301866275*tmp17*tmp30*tmp304*tmp311 - tmp408 - tmp444;
      const real_t tmp495 = 0.48471985386318561*tmp165*tmp17*tmp170*tmp6 + 0.48471985386318561*tmp17*tmp170*tmp174*tmp26 + 0.48471985386318561*tmp17*tmp170*tmp177*tmp30 - tmp412 - tmp447;
      const real_t tmp496 = -tmp375*tmp485 - tmp379*tmp486 - tmp383*tmp487 - tmp387*tmp488 - tmp391*tmp489 - tmp395*tmp490 - tmp399*tmp491 - tmp403*tmp492 - tmp407*tmp493 - tmp411*tmp494 - tmp415*tmp495;
      const real_t tmp497 = 0.020786379341558803*tmp17*tmp22*tmp27*tmp44 + 0.020786379341558803*tmp17*tmp22*tmp31*tmp46 + 0.020786379341558803*tmp17*tmp22*tmp42*tmp8 - tmp373 - tmp451;
      const real_t tmp498 = 0.066329140985678992*tmp17*tmp42*tmp65*tmp70 + 0.066329140985678992*tmp17*tmp44*tmp70*tmp74 + 0.066329140985678992*tmp17*tmp46*tmp70*tmp77 - tmp377 - tmp454;
      const real_t tmp499 = 2.3862426959925824*tmp17*tmp192*tmp197*tmp42 + 2.3862426959925824*tmp17*tmp197*tmp201*tmp44 + 2.3862426959925824*tmp17*tmp197*tmp204*tmp46 - tmp381 - tmp457;
      const real_t tmp500 = -0.023755899620671705*tmp238 - 0.023755899620671705*tmp239 - 0.023755899620671705*tmp240 - tmp385 - tmp460;
      const real_t tmp501 = 0.023113155683794462*tmp101*tmp17*tmp44*tmp97 + 0.023113155683794462*tmp104*tmp17*tmp46*tmp97 + 0.023113155683794462*tmp17*tmp42*tmp92*tmp97 - tmp389 - tmp463;
      const real_t tmp502 = 0.096099217150166227*tmp17*tmp245*tmp250*tmp42 + 0.096099217150166227*tmp17*tmp250*tmp254*tmp44 + 0.096099217150166227*tmp17*tmp250*tmp257*tmp46 - tmp393 - tmp466;
      const real_t tmp503 = -2.1424647858349868*tmp135 - 2.1424647858349868*tmp136 - 2.1424647858349868*tmp137 - tmp397 - tmp469;
      const real_t tmp504 = 2.215926000198841*tmp17*tmp272*tmp277*tmp42 + 2.215926000198841*tmp17*tmp277*tmp281*tmp44 + 2.215926000198841*tmp17*tmp277*tmp284*tmp46 - tmp401 - tmp472;
      const real_t tmp505 = -1.504517893413688*tmp158 - 1.504517893413688*tmp159 - 1.504517893413688*tmp160 - tmp405 - tmp475;
      const real_t tmp506 = 1.7050790859596399*tmp17*tmp299*tmp304*tmp42 + 1.7050790859596399*tmp17*tmp304*tmp308*tmp44 + 1.7050790859596399*tmp17*tmp304*tmp311*tmp46 - tmp409 - tmp478;
      const real_t tmp507 = -2.339459955416912*tmp173 - 2.339459955416912*tmp176 - 2.339459955416912*tmp179 - tmp413 - tmp481;
      const real_t tmp508 = -tmp375*tmp497 - tmp379*tmp498 - tmp383*tmp499 - tmp387*tmp500 - tmp391*tmp501 - tmp395*tmp502 - tmp399*tmp503 - tmp403*tmp504 - tmp407*tmp505 - tmp411*tmp506 - tmp415*tmp507;
      const real_t tmp509 = 0.058384491239200198*tmp17*tmp22*tmp27*tmp37 + 0.058384491239200198*tmp17*tmp22*tmp31*tmp39 + 0.058384491239200198*tmp17*tmp22*tmp35*tmp8 - tmp418 - tmp452;
      const real_t tmp510 = -tmp421 - tmp455 - 2.6180852134415042*tmp81 - 2.6180852134415042*tmp82 - 2.6180852134415042*tmp83;
      const real_t tmp511 = 2.923056903871144*tmp17*tmp192*tmp197*tmp35 + 2.923056903871144*tmp17*tmp197*tmp201*tmp37 + 2.923056903871144*tmp17*tmp197*tmp204*tmp39 - tmp424 - tmp458;
      const real_t tmp512 = 1.1748979585239958*tmp17*tmp218*tmp223*tmp35 + 1.1748979585239958*tmp17*tmp223*tmp227*tmp37 + 1.1748979585239958*tmp17*tmp223*tmp230*tmp39 - tmp427 - tmp461;
      const real_t tmp513 = -1.292351334863308*tmp108 - 1.292351334863308*tmp109 - 1.292351334863308*tmp110 - tmp430 - tmp464;
      const real_t tmp514 = 0.35278616717586297*tmp17*tmp245*tmp250*tmp35 + 0.35278616717586297*tmp17*tmp250*tmp254*tmp37 + 0.35278616717586297*tmp17*tmp250*tmp257*tmp39 - tmp433 - tmp467;
      const real_t tmp515 = -0.50808146532588383*tmp131 - 0.50808146532588383*tmp132 - 0.50808146532588383*tmp133 - tmp436 - tmp470;
      const real_t tmp516 = 1.7657230752364721*tmp17*tmp272*tmp277*tmp35 + 1.7657230752364721*tmp17*tmp277*tmp281*tmp37 + 1.7657230752364721*tmp17*tmp277*tmp284*tmp39 - tmp439 - tmp473;
      const real_t tmp517 = -1.5757674358533722*tmp154 - 1.5757674358533722*tmp155 - 1.5757674358533722*tmp156 - tmp442 - tmp476;
      const real_t tmp518 = 0.24137878858456796*tmp17*tmp299*tmp304*tmp35 + 0.24137878858456796*tmp17*tmp304*tmp308*tmp37 + 0.24137878858456796*tmp17*tmp304*tmp311*tmp39 - tmp445 - tmp479;
      const real_t tmp519 = 0.35656239338404694*tmp165*tmp17*tmp170*tmp35 + 0.35656239338404694*tmp17*tmp170*tmp174*tmp37 + 0.35656239338404694*tmp17*tmp170*tmp177*tmp39 - tmp448 - tmp482;
      const real_t tmp520 = -tmp375*tmp509 - tmp379*tmp510 - tmp383*tmp511 - tmp387*tmp512 - tmp391*tmp513 - tmp395*tmp514 - tmp399*tmp515 - tmp403*tmp516 - tmp407*tmp517 - tmp411*tmp518 - tmp415*tmp519;
      const real_t tmp521 = tmp41*tmp63;
      const real_t tmp522 = tmp84*tmp90;
      const real_t tmp523 = tmp207*tmp216;
      const real_t tmp524 = tmp237*tmp243;
      const real_t tmp525 = tmp111*tmp117;
      const real_t tmp526 = tmp264*tmp270;
      const real_t tmp527 = tmp134*tmp140;
      const real_t tmp528 = tmp291*tmp297;
      const real_t tmp529 = tmp157*tmp163;
      const real_t tmp530 = tmp314*tmp324;
      const real_t tmp531 = tmp184*tmp190;
      const real_t tmp532 = 0.0073573503010591077*tmp115*tmp525 + 0.0047025085100984255*tmp138*tmp527 - 0.0045363353981484533*tmp161*tmp529 + 0.0088418544316446034*tmp180*tmp531 - 0.001100936202251903*tmp211*tmp523 + 0.0034227212415181688*tmp241*tmp524 + 0.00018203655806882805*tmp260*tmp526 - 0.00437157426475263*tmp295*tmp528 + 0.0035467343920440879*tmp318*tmp530 - 0.0041470891910238041*tmp48*tmp521 + 0.008324951843965811*tmp522*tmp88;
      const real_t tmp533 = -0.0052263646286142846*tmp107*tmp525 + 0.0013093287357882949*tmp130*tmp527 + 0.0047245269499351069*tmp153*tmp529 - 0.0038665731836137946*tmp188*tmp531 - 0.003456627437787347*tmp215*tmp523 + 0.0029333115747788548*tmp233*tmp524 - 0.00041188701176975823*tmp268*tmp526 + 0.0010247249374778298*tmp287*tmp528 + 0.0036470052771574082*tmp322*tmp530 + 0.012562818798813762*tmp34*tmp521 + 0.00898195821005612*tmp522*tmp80;
      const real_t tmp534 = tmp326*tmp63;
      const real_t tmp535 = tmp328*tmp90;
      const real_t tmp536 = tmp216*tmp330;
      const real_t tmp537 = tmp243*tmp332;
      const real_t tmp538 = tmp117*tmp334;
      const real_t tmp539 = tmp270*tmp336;
      const real_t tmp540 = tmp140*tmp338;
      const real_t tmp541 = tmp297*tmp340;
      const real_t tmp542 = tmp163*tmp342;
      const real_t tmp543 = tmp324*tmp344;
      const real_t tmp544 = tmp190*tmp346;
      const real_t tmp545 = tmp374*tmp534 - tmp378*tmp535 + tmp382*tmp536 + tmp386*tmp537 - tmp390*tmp538 + tmp394*tmp539 + tmp398*tmp540 + tmp402*tmp541 - tmp406*tmp542 - tmp410*tmp543 + tmp414*tmp544;
      const real_t tmp546 = tmp419*tmp534 - tmp422*tmp535 + tmp425*tmp536 + tmp428*tmp537 - tmp431*tmp538 + tmp434*tmp539 + tmp437*tmp540 + tmp440*tmp541 - tmp443*tmp542 - tmp446*tmp543 + tmp449*tmp544;
      const real_t tmp547 = tmp453*tmp534 - tmp456*tmp535 + tmp459*tmp536 + tmp462*tmp537 - tmp465*tmp538 + tmp468*tmp539 + tmp471*tmp540 + tmp474*tmp541 - tmp477*tmp542 - tmp480*tmp543 + tmp483*tmp544;
      const real_t tmp548 = tmp485*tmp534 - tmp486*tmp535 + tmp487*tmp536 + tmp488*tmp537 - tmp489*tmp538 + tmp490*tmp539 + tmp491*tmp540 + tmp492*tmp541 - tmp493*tmp542 - tmp494*tmp543 + tmp495*tmp544;
      const real_t tmp549 = tmp497*tmp534 - tmp498*tmp535 + tmp499*tmp536 + tmp500*tmp537 - tmp501*tmp538 + tmp502*tmp539 + tmp503*tmp540 + tmp504*tmp541 - tmp505*tmp542 - tmp506*tmp543 + tmp507*tmp544;
      const real_t tmp550 = tmp509*tmp534 - tmp510*tmp535 + tmp511*tmp536 + tmp512*tmp537 - tmp513*tmp538 + tmp514*tmp539 + tmp515*tmp540 + tmp516*tmp541 - tmp517*tmp542 - tmp518*tmp543 + tmp519*tmp544;
      const real_t tmp551 = 0.0041807396467460484*tmp107*tmp115*tmp117 - 0.0031271283208865507*tmp130*tmp138*tmp140 + 0.0043053566332700976*tmp153*tmp161*tmp163 + 0.010391764209842001*tmp180*tmp188*tmp190 - 0.0012424476756148744*tmp211*tmp215*tmp216 - 0.0010543683966735859*tmp233*tmp241*tmp243 + 0.0023064709390845928*tmp260*tmp268*tmp270 + 0.0019225556156211496*tmp287*tmp295*tmp297 - 0.0042372018434979264*tmp318*tmp322*tmp324 + 0.011789990551396352*tmp34*tmp48*tmp63 - 0.003013509137065063*tmp80*tmp88*tmp90;
      const real_t tmp552 = tmp348*tmp63;
      const real_t tmp553 = tmp349*tmp90;
      const real_t tmp554 = tmp216*tmp350;
      const real_t tmp555 = tmp243*tmp351;
      const real_t tmp556 = tmp117*tmp352;
      const real_t tmp557 = tmp270*tmp353;
      const real_t tmp558 = tmp140*tmp354;
      const real_t tmp559 = tmp297*tmp355;
      const real_t tmp560 = tmp163*tmp356;
      const real_t tmp561 = tmp324*tmp357;
      const real_t tmp562 = tmp190*tmp358;
      const real_t tmp563 = tmp374*tmp552 + tmp378*tmp553 + tmp382*tmp554 - tmp386*tmp555 + tmp390*tmp556 - tmp394*tmp557 - tmp398*tmp558 + tmp402*tmp559 - tmp406*tmp560 + tmp410*tmp561 - tmp414*tmp562;
      const real_t tmp564 = tmp419*tmp552 + tmp422*tmp553 + tmp425*tmp554 - tmp428*tmp555 + tmp431*tmp556 - tmp434*tmp557 - tmp437*tmp558 + tmp440*tmp559 - tmp443*tmp560 + tmp446*tmp561 - tmp449*tmp562;
      const real_t tmp565 = tmp453*tmp552 + tmp456*tmp553 + tmp459*tmp554 - tmp462*tmp555 + tmp465*tmp556 - tmp468*tmp557 - tmp471*tmp558 + tmp474*tmp559 - tmp477*tmp560 + tmp480*tmp561 - tmp483*tmp562;
      const real_t tmp566 = tmp485*tmp552 + tmp486*tmp553 + tmp487*tmp554 - tmp488*tmp555 + tmp489*tmp556 - tmp490*tmp557 - tmp491*tmp558 + tmp492*tmp559 - tmp493*tmp560 + tmp494*tmp561 - tmp495*tmp562;
      const real_t tmp567 = tmp497*tmp552 + tmp498*tmp553 + tmp499*tmp554 - tmp500*tmp555 + tmp501*tmp556 - tmp502*tmp557 - tmp503*tmp558 + tmp504*tmp559 - tmp505*tmp560 + tmp506*tmp561 - tmp507*tmp562;
      const real_t tmp568 = tmp509*tmp552 + tmp510*tmp553 + tmp511*tmp554 - tmp512*tmp555 + tmp513*tmp556 - tmp514*tmp557 - tmp515*tmp558 + tmp516*tmp559 - tmp517*tmp560 + tmp518*tmp561 - tmp519*tmp562;
      const real_t tmp569 = tmp360*tmp63;
      const real_t tmp570 = tmp361*tmp90;
      const real_t tmp571 = tmp216*tmp362;
      const real_t tmp572 = tmp243*tmp363;
      const real_t tmp573 = tmp117*tmp364;
      const real_t tmp574 = tmp270*tmp365;
      const real_t tmp575 = tmp140*tmp366;
      const real_t tmp576 = tmp297*tmp367;
      const real_t tmp577 = tmp163*tmp368;
      const real_t tmp578 = tmp324*tmp369;
      const real_t tmp579 = tmp190*tmp370;
      const real_t tmp580 = -tmp374*tmp569 + tmp378*tmp570 + tmp382*tmp571 - tmp386*tmp572 - tmp390*tmp573 + tmp394*tmp574 - tmp398*tmp575 - tmp402*tmp576 + tmp406*tmp577 + tmp410*tmp578 + tmp414*tmp579;
      const real_t tmp581 = -tmp419*tmp569 + tmp422*tmp570 + tmp425*tmp571 - tmp428*tmp572 - tmp431*tmp573 + tmp434*tmp574 - tmp437*tmp575 - tmp440*tmp576 + tmp443*tmp577 + tmp446*tmp578 + tmp449*tmp579;
      const real_t tmp582 = -tmp453*tmp569 + tmp456*tmp570 + tmp459*tmp571 - tmp462*tmp572 - tmp465*tmp573 + tmp468*tmp574 - tmp471*tmp575 - tmp474*tmp576 + tmp477*tmp577 + tmp480*tmp578 + tmp483*tmp579;
      const real_t tmp583 = -tmp485*tmp569 + tmp486*tmp570 + tmp487*tmp571 - tmp488*tmp572 - tmp489*tmp573 + tmp490*tmp574 - tmp491*tmp575 - tmp492*tmp576 + tmp493*tmp577 + tmp494*tmp578 + tmp495*tmp579;
      const real_t tmp584 = -tmp497*tmp569 + tmp498*tmp570 + tmp499*tmp571 - tmp500*tmp572 - tmp501*tmp573 + tmp502*tmp574 - tmp503*tmp575 - tmp504*tmp576 + tmp505*tmp577 + tmp506*tmp578 + tmp507*tmp579;
      const real_t tmp585 = -tmp509*tmp569 + tmp510*tmp570 + tmp511*tmp571 - tmp512*tmp572 - tmp513*tmp573 + tmp514*tmp574 - tmp515*tmp575 - tmp516*tmp576 + tmp517*tmp577 + tmp518*tmp578 + tmp519*tmp579;
      const real_t tmp586 = 0.088655267825347786*tmp63;
      const real_t tmp587 = 0.00065117047591080519*tmp90;
      const real_t tmp588 = 0.0021295383964730196*tmp216;
      const real_t tmp589 = 0.021242252561440141*tmp243;
      const real_t tmp590 = 0.034491728100715977*tmp117;
      const real_t tmp591 = 0.031870261029146217*tmp270;
      const real_t tmp592 = 0.039191877909708787*tmp140;
      const real_t tmp593 = 0.013264405944568717*tmp297;
      const real_t tmp594 = 0.023150322729324171*tmp163;
      const real_t tmp595 = 0.054105733577658674*tmp190;
      const real_t tmp596 = 0.011829781572832234*tmp63;
      const real_t tmp597 = tmp374*tmp596;
      const real_t tmp598 = 0.0061414854617707626*tmp90;
      const real_t tmp599 = tmp378*tmp598;
      const real_t tmp600 = 0.0043612323249822204*tmp216;
      const real_t tmp601 = tmp382*tmp600;
      const real_t tmp602 = 0.012248248047610821*tmp243;
      const real_t tmp603 = tmp386*tmp602;
      const real_t tmp604 = 0.017219568446249611*tmp117;
      const real_t tmp605 = tmp390*tmp604;
      const real_t tmp606 = 0.021490090227737114*tmp270;
      const real_t tmp607 = tmp394*tmp606;
      const real_t tmp608 = 0.0084625239161731543*tmp140;
      const real_t tmp609 = tmp398*tmp608;
      const real_t tmp610 = 0.0088251866742250357*tmp297;
      const real_t tmp611 = tmp402*tmp610;
      const real_t tmp612 = 0.0077188851041817101*tmp163;
      const real_t tmp613 = tmp406*tmp612;
      const real_t tmp614 = 0.006659242794062166*tmp324;
      const real_t tmp615 = tmp410*tmp614;
      const real_t tmp616 = 0.0061548665412862651*tmp190;
      const real_t tmp617 = tmp414*tmp616;
      const real_t tmp618 = -tmp419*tmp597 - tmp422*tmp599 - tmp425*tmp601 - tmp428*tmp603 - tmp431*tmp605 - tmp434*tmp607 - tmp437*tmp609 - tmp440*tmp611 - tmp443*tmp613 - tmp446*tmp615 - tmp449*tmp617;
      const real_t tmp619 = -tmp453*tmp597 - tmp456*tmp599 - tmp459*tmp601 - tmp462*tmp603 - tmp465*tmp605 - tmp468*tmp607 - tmp471*tmp609 - tmp474*tmp611 - tmp477*tmp613 - tmp480*tmp615 - tmp483*tmp617;
      const real_t tmp620 = -tmp485*tmp597 - tmp486*tmp599 - tmp487*tmp601 - tmp488*tmp603 - tmp489*tmp605 - tmp490*tmp607 - tmp491*tmp609 - tmp492*tmp611 - tmp493*tmp613 - tmp494*tmp615 - tmp495*tmp617;
      const real_t tmp621 = -tmp497*tmp597 - tmp498*tmp599 - tmp499*tmp601 - tmp500*tmp603 - tmp501*tmp605 - tmp502*tmp607 - tmp503*tmp609 - tmp504*tmp611 - tmp505*tmp613 - tmp506*tmp615 - tmp507*tmp617;
      const real_t tmp622 = -tmp509*tmp597 - tmp510*tmp599 - tmp511*tmp601 - tmp512*tmp603 - tmp513*tmp605 - tmp514*tmp607 - tmp515*tmp609 - tmp516*tmp611 - tmp517*tmp613 - tmp518*tmp615 - tmp519*tmp617;
      const real_t tmp623 = 0.055643730515181525*tmp90;
      const real_t tmp624 = 0.019805451113005423*tmp243;
      const real_t tmp625 = 0.051586562503901277*tmp117;
      const real_t tmp626 = 0.01985095532947561*tmp270;
      const real_t tmp627 = 0.014762122860486882*tmp140;
      const real_t tmp628 = 0.025094388797298327*tmp163;
      const real_t tmp629 = 0.018729439144681871*tmp324;
      const real_t tmp630 = tmp419*tmp596;
      const real_t tmp631 = tmp422*tmp598;
      const real_t tmp632 = tmp425*tmp600;
      const real_t tmp633 = tmp428*tmp602;
      const real_t tmp634 = tmp431*tmp604;
      const real_t tmp635 = tmp434*tmp606;
      const real_t tmp636 = tmp437*tmp608;
      const real_t tmp637 = tmp440*tmp610;
      const real_t tmp638 = tmp443*tmp612;
      const real_t tmp639 = tmp446*tmp614;
      const real_t tmp640 = tmp449*tmp616;
      const real_t tmp641 = -tmp453*tmp630 - tmp456*tmp631 - tmp459*tmp632 - tmp462*tmp633 - tmp465*tmp634 - tmp468*tmp635 - tmp471*tmp636 - tmp474*tmp637 - tmp477*tmp638 - tmp480*tmp639 - tmp483*tmp640;
      const real_t tmp642 = -tmp485*tmp630 - tmp486*tmp631 - tmp487*tmp632 - tmp488*tmp633 - tmp489*tmp634 - tmp490*tmp635 - tmp491*tmp636 - tmp492*tmp637 - tmp493*tmp638 - tmp494*tmp639 - tmp495*tmp640;
      const real_t tmp643 = -tmp497*tmp630 - tmp498*tmp631 - tmp499*tmp632 - tmp500*tmp633 - tmp501*tmp634 - tmp502*tmp635 - tmp503*tmp636 - tmp504*tmp637 - tmp505*tmp638 - tmp506*tmp639 - tmp507*tmp640;
      const real_t tmp644 = -tmp509*tmp630 - tmp510*tmp631 - tmp511*tmp632 - tmp512*tmp633 - tmp513*tmp634 - tmp514*tmp635 - tmp515*tmp636 - tmp516*tmp637 - tmp517*tmp638 - tmp518*tmp639 - tmp519*tmp640;
      const real_t tmp645 = 0.0021510233048590414*tmp63;
      const real_t tmp646 = tmp453*tmp596;
      const real_t tmp647 = tmp456*tmp598;
      const real_t tmp648 = tmp459*tmp600;
      const real_t tmp649 = tmp462*tmp602;
      const real_t tmp650 = tmp465*tmp604;
      const real_t tmp651 = tmp468*tmp606;
      const real_t tmp652 = tmp471*tmp608;
      const real_t tmp653 = tmp474*tmp610;
      const real_t tmp654 = tmp477*tmp612;
      const real_t tmp655 = tmp480*tmp614;
      const real_t tmp656 = tmp483*tmp616;
      const real_t tmp657 = -tmp485*tmp646 - tmp486*tmp647 - tmp487*tmp648 - tmp488*tmp649 - tmp489*tmp650 - tmp490*tmp651 - tmp491*tmp652 - tmp492*tmp653 - tmp493*tmp654 - tmp494*tmp655 - tmp495*tmp656;
      const real_t tmp658 = -tmp497*tmp646 - tmp498*tmp647 - tmp499*tmp648 - tmp500*tmp649 - tmp501*tmp650 - tmp502*tmp651 - tmp503*tmp652 - tmp504*tmp653 - tmp505*tmp654 - tmp506*tmp655 - tmp507*tmp656;
      const real_t tmp659 = -tmp509*tmp646 - tmp510*tmp647 - tmp511*tmp648 - tmp512*tmp649 - tmp513*tmp650 - tmp514*tmp651 - tmp515*tmp652 - tmp516*tmp653 - tmp517*tmp654 - tmp518*tmp655 - tmp519*tmp656;
      const real_t tmp660 = tmp485*tmp596;
      const real_t tmp661 = tmp486*tmp598;
      const real_t tmp662 = tmp487*tmp600;
      const real_t tmp663 = tmp488*tmp602;
      const real_t tmp664 = tmp489*tmp604;
      const real_t tmp665 = tmp490*tmp606;
      const real_t tmp666 = tmp491*tmp608;
      const real_t tmp667 = tmp492*tmp610;
      const real_t tmp668 = tmp493*tmp612;
      const real_t tmp669 = tmp494*tmp614;
      const real_t tmp670 = tmp495*tmp616;
      const real_t tmp671 = -tmp497*tmp660 - tmp498*tmp661 - tmp499*tmp662 - tmp500*tmp663 - tmp501*tmp664 - tmp502*tmp665 - tmp503*tmp666 - tmp504*tmp667 - tmp505*tmp668 - tmp506*tmp669 - tmp507*tmp670;
      const real_t tmp672 = -tmp509*tmp660 - tmp510*tmp661 - tmp511*tmp662 - tmp512*tmp663 - tmp513*tmp664 - tmp514*tmp665 - tmp515*tmp666 - tmp516*tmp667 - tmp517*tmp668 - tmp518*tmp669 - tmp519*tmp670;
      const real_t tmp673 = -tmp497*tmp509*tmp596 - tmp498*tmp510*tmp598 - tmp499*tmp511*tmp600 - tmp500*tmp512*tmp602 - tmp501*tmp513*tmp604 - tmp502*tmp514*tmp606 - tmp503*tmp515*tmp608 - tmp504*tmp516*tmp610 - tmp505*tmp517*tmp612 - tmp506*tmp518*tmp614 - tmp507*tmp519*tmp616;
      elMat(0,0) = -0.0054292249839739343*tmp117*((tmp107 + tmp116)*(tmp107 + tmp116)) - 0.0083014263265381374*tmp140*((tmp130 + tmp139)*(tmp130 + tmp139)) - 0.0046087252711240149*tmp163*((tmp153 + tmp162)*(tmp153 + tmp162)) - 0.00086342639172544801*tmp190*((tmp180 + tmp189)*(tmp180 + tmp189)) - 0.0189596024771399*tmp216*((-tmp207 - tmp211 - tmp215)*(-tmp207 - tmp211 - tmp215)) - 0.0010527630257759059*tmp243*((-tmp233 - tmp242)*(-tmp233 - tmp242)) - 0.0021173907985490219*tmp270*((-tmp260 - tmp269)*(-tmp260 - tmp269)) - 0.013831107702793295*tmp297*((-tmp287 - tmp296)*(-tmp287 - tmp296)) - 0.0056173340848133255*tmp324*((-tmp314 - tmp323)*(-tmp314 - tmp323)) - 0.0036149972514435908*tmp63*((tmp34 + tmp49)*(tmp34 + tmp49)) - 0.0022706683527901044*tmp90*((tmp80 + tmp89)*(tmp80 + tmp89));
      elMat(0,1) = tmp347;
      elMat(0,2) = tmp359;
      elMat(0,3) = tmp371;
      elMat(0,4) = tmp416;
      elMat(0,5) = tmp450;
      elMat(0,6) = tmp484;
      elMat(0,7) = tmp496;
      elMat(0,8) = tmp508;
      elMat(0,9) = tmp520;
      elMat(1,0) = tmp347;
      elMat(1,1) = -0.0091974623207422349*(tmp111*tmp111)*tmp117 - 0.0019689404753353082*(tmp134*tmp134)*tmp140 - 0.0049779938500050438*(tmp157*tmp157)*tmp163 - 0.0032898819246143778*(tmp184*tmp184)*tmp190 - 0.0030629268005785541*(tmp207*tmp207)*tmp216 - 0.0095222010320695129*(tmp237*tmp237)*tmp243 - 3.2507885820395218e-5*(tmp264*tmp264)*tmp270 - 0.0023300554370080033*(tmp291*tmp291)*tmp297 - 0.0030527125027828036*(tmp314*tmp314)*tmp324 - 0.0044189289060270545*(tmp41*tmp41)*tmp63 - 0.024813055531683337*(tmp84*tmp84)*tmp90;
      elMat(1,2) = tmp532;
      elMat(1,3) = tmp533;
      elMat(1,4) = tmp545;
      elMat(1,5) = tmp546;
      elMat(1,6) = tmp547;
      elMat(1,7) = tmp548;
      elMat(1,8) = tmp549;
      elMat(1,9) = tmp550;
      elMat(2,0) = tmp359;
      elMat(2,1) = tmp532;
      elMat(2,2) = -0.0058853846381537785*(tmp115*tmp115)*tmp117 - 0.011231211184168578*(tmp138*tmp138)*tmp140 - 0.0041338618456657665*(tmp161*tmp161)*tmp163 - 0.023763281352280435*(tmp180*tmp180)*tmp190 - 0.00039571971527360629*(tmp211*tmp211)*tmp216 - 0.001230284958034916*(tmp241*tmp241)*tmp243 - 0.0010193621528212606*(tmp260*tmp260)*tmp270 - 0.0082018055230425203*(tmp295*tmp295)*tmp297 - 0.0041207040742425758*(tmp318*tmp318)*tmp324 - 0.0038919722684040777*(tmp48*tmp48)*tmp63 - 0.0027930789545792005*(tmp88*tmp88)*tmp90;
      elMat(2,3) = tmp551;
      elMat(2,4) = tmp563;
      elMat(2,5) = tmp564;
      elMat(2,6) = tmp565;
      elMat(2,7) = tmp566;
      elMat(2,8) = tmp567;
      elMat(2,9) = tmp568;
      elMat(3,0) = tmp371;
      elMat(3,1) = tmp533;
      elMat(3,2) = tmp551;
      elMat(3,3) = -0.0029698286634596638*(tmp107*tmp107)*tmp117 - 0.00087069251703458632*(tmp130*tmp130)*tmp140 - 0.0044839659455667077*(tmp153*tmp153)*tmp163 - 0.0045443540305762555*(tmp188*tmp188)*tmp190 - 0.0039009333299794896*(tmp215*tmp215)*tmp216 - 0.00090360587491835199*(tmp233*tmp233)*tmp243 - 0.0052187617306746906*(tmp268*tmp268)*tmp270 - 0.00045065931943546946*(tmp287*tmp287)*tmp297 - 0.0043569931591950859*(tmp322*tmp322)*tmp324 - 0.035715536395385078*(tmp34*tmp34)*tmp63 - 0.0032513357004413015*(tmp80*tmp80)*tmp90;
      elMat(3,4) = tmp580;
      elMat(3,5) = tmp581;
      elMat(3,6) = tmp582;
      elMat(3,7) = tmp583;
      elMat(3,8) = tmp584;
      elMat(3,9) = tmp585;
      elMat(4,0) = tmp416;
      elMat(4,1) = tmp545;
      elMat(4,2) = tmp563;
      elMat(4,3) = tmp580;
      elMat(4,4) = -0.00030315940021845202*tmp324*((0.89576912675729947*tmp315 + 0.89576912675729947*tmp316 + 0.89576912675729947*tmp317 + tmp322)*(0.89576912675729947*tmp315 + 0.89576912675729947*tmp316 + 0.89576912675729947*tmp317 + tmp322)) - tmp586*((0.15576514538332015*tmp25 + 0.15576514538332015*tmp29 + 0.15576514538332015*tmp33 + tmp48)*(0.15576514538332015*tmp25 + 0.15576514538332015*tmp29 + 0.15576514538332015*tmp33 + tmp48)) - tmp587*((tmp80 + 0.83655106195419338*tmp85 + 0.83655106195419338*tmp86 + 0.83655106195419338*tmp87)*(tmp80 + 0.83655106195419338*tmp85 + 0.83655106195419338*tmp86 + 0.83655106195419338*tmp87)) - tmp588*((0.077625432604466651*tmp208 + 0.077625432604466651*tmp209 + 0.077625432604466651*tmp210 + tmp215)*(0.077625432604466651*tmp208 + 0.077625432604466651*tmp209 + 0.077625432604466651*tmp210 + tmp215)) - tmp589*((tmp233 + 0.96558850141216623*tmp238 + 0.96558850141216623*tmp239 + 0.96558850141216623*tmp240)*(tmp233 + 0.96558850141216623*tmp238 + 0.96558850141216623*tmp239 + 0.96558850141216623*tmp240)) - tmp590*((0.29349150904575255*tmp100 + 0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + tmp115)*(0.29349150904575255*tmp100 + 0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + tmp115)) - tmp591*((0.41649660468385474*tmp253 + 0.41649660468385474*tmp256 + 0.41649660468385474*tmp259 + tmp268)*(0.41649660468385474*tmp253 + 0.41649660468385474*tmp256 + 0.41649660468385474*tmp259 + tmp268)) - tmp592*((tmp130 + 0.61372861261706069*tmp135 + 0.61372861261706069*tmp136 + 0.61372861261706069*tmp137)*(tmp130 + 0.61372861261706069*tmp135 + 0.61372861261706069*tmp136 + 0.61372861261706069*tmp137)) - tmp593*((0.029335844854256651*tmp280 + 0.029335844854256651*tmp283 + 0.029335844854256651*tmp286 + tmp295)*(0.029335844854256651*tmp280 + 0.029335844854256651*tmp283 + 0.029335844854256651*tmp286 + tmp295)) - tmp594*((tmp153 + 0.13732795232423314*tmp158 + 0.13732795232423314*tmp159 + 0.13732795232423314*tmp160)*(tmp153 + 0.13732795232423314*tmp158 + 0.13732795232423314*tmp159 + 0.13732795232423314*tmp160)) - tmp595*((0.047467024860419059*tmp173 + 0.047467024860419059*tmp176 + 0.047467024860419059*tmp179 + tmp188)*(0.047467024860419059*tmp173 + 0.047467024860419059*tmp176 + 0.047467024860419059*tmp179 + tmp188));
      elMat(4,5) = tmp618;
      elMat(4,6) = tmp619;
      elMat(4,7) = tmp620;
      elMat(4,8) = tmp621;
      elMat(4,9) = tmp622;
      elMat(5,0) = tmp450;
      elMat(5,1) = tmp546;
      elMat(5,2) = tmp564;
      elMat(5,3) = tmp581;
      elMat(5,4) = tmp618;
      elMat(5,5) = -0.00044501865160255012*tmp190*((0.52338895065171431*tmp181 + 0.52338895065171431*tmp182 + 0.52338895065171431*tmp183 + tmp188)*(0.52338895065171431*tmp181 + 0.52338895065171431*tmp182 + 0.52338895065171431*tmp183 + tmp188)) - 0.00011440252995854856*tmp216*((0.3349106488351834*tmp200 + 0.3349106488351834*tmp203 + 0.3349106488351834*tmp206 + tmp215)*(0.3349106488351834*tmp200 + 0.3349106488351834*tmp203 + 0.3349106488351834*tmp206 + tmp215)) - tmp586*((0.14203098464381267*tmp25 + 0.14203098464381267*tmp29 + 0.14203098464381267*tmp33 + tmp41)*(0.14203098464381267*tmp25 + 0.14203098464381267*tmp29 + 0.14203098464381267*tmp33 + tmp41)) - tmp593*((0.39655587359688027*tmp280 + 0.39655587359688027*tmp283 + 0.39655587359688027*tmp286 + tmp291)*(0.39655587359688027*tmp280 + 0.39655587359688027*tmp283 + 0.39655587359688027*tmp286 + tmp291)) - tmp623*((tmp80 + 0.090496479845553021*tmp81 + 0.090496479845553021*tmp82 + 0.090496479845553021*tmp83)*(tmp80 + 0.090496479845553021*tmp81 + 0.090496479845553021*tmp82 + 0.090496479845553021*tmp83)) - tmp624*((0.09301404232979088*tmp226 + 0.09301404232979088*tmp229 + 0.09301404232979088*tmp232 + tmp237)*(0.09301404232979088*tmp226 + 0.09301404232979088*tmp229 + 0.09301404232979088*tmp232 + tmp237)) - tmp625*((tmp107 + 0.81769093328581299*tmp108 + 0.81769093328581299*tmp109 + 0.81769093328581299*tmp110)*(tmp107 + 0.81769093328581299*tmp108 + 0.81769093328581299*tmp109 + 0.81769093328581299*tmp110)) - tmp626*((0.52773217055160193*tmp261 + 0.52773217055160193*tmp262 + 0.52773217055160193*tmp263 + tmp268)*(0.52773217055160193*tmp261 + 0.52773217055160193*tmp262 + 0.52773217055160193*tmp263 + tmp268)) - tmp627*((0.3919295290646535*tmp125 + 0.3919295290646535*tmp127 + 0.3919295290646535*tmp129 + tmp134)*(0.3919295290646535*tmp125 + 0.3919295290646535*tmp127 + 0.3919295290646535*tmp129 + tmp134)) - tmp628*((tmp153 + 0.13190132495165721*tmp154 + 0.13190132495165721*tmp155 + 0.13190132495165721*tmp156)*(tmp153 + 0.13190132495165721*tmp154 + 0.13190132495165721*tmp155 + 0.13190132495165721*tmp156)) - tmp629*((0.11396440395356359*tmp307 + 0.11396440395356359*tmp310 + 0.11396440395356359*tmp313 + tmp322)*(0.11396440395356359*tmp307 + 0.11396440395356359*tmp310 + 0.11396440395356359*tmp313 + tmp322));
      elMat(5,6) = tmp641;
      elMat(5,7) = tmp642;
      elMat(5,8) = tmp643;
      elMat(5,9) = tmp644;
      elMat(6,0) = tmp484;
      elMat(6,1) = tmp547;
      elMat(6,2) = tmp565;
      elMat(6,3) = tmp582;
      elMat(6,4) = tmp619;
      elMat(6,5) = tmp641;
      elMat(6,6) = -0.0020859148610146137*tmp297*((0.073976573813348864*tmp288 + 0.073976573813348864*tmp289 + 0.073976573813348864*tmp290 + tmp295)*(0.073976573813348864*tmp288 + 0.073976573813348864*tmp289 + 0.073976573813348864*tmp290 + tmp295)) - tmp588*((tmp207 + 0.23177952947882455*tmp208 + 0.23177952947882455*tmp209 + 0.23177952947882455*tmp210)*(tmp207 + 0.23177952947882455*tmp208 + 0.23177952947882455*tmp209 + 0.23177952947882455*tmp210)) - tmp589*((tmp237 + 0.089813289743510563*tmp238 + 0.089813289743510563*tmp239 + 0.089813289743510563*tmp240)*(tmp237 + 0.089813289743510563*tmp238 + 0.089813289743510563*tmp239 + 0.089813289743510563*tmp240)) - tmp591*((0.78921966089071216*tmp253 + 0.78921966089071216*tmp256 + 0.78921966089071216*tmp259 + tmp264)*(0.78921966089071216*tmp253 + 0.78921966089071216*tmp256 + 0.78921966089071216*tmp259 + tmp264)) - tmp592*((tmp134 + 0.24053836611650775*tmp135 + 0.24053836611650775*tmp136 + 0.24053836611650775*tmp137)*(tmp134 + 0.24053836611650775*tmp135 + 0.24053836611650775*tmp136 + 0.24053836611650775*tmp137)) - tmp595*((0.090691683118862151*tmp173 + 0.090691683118862151*tmp176 + 0.090691683118862151*tmp179 + tmp184)*(0.090691683118862151*tmp173 + 0.090691683118862151*tmp176 + 0.090691683118862151*tmp179 + tmp184)) - tmp623*((0.10817807060593786*tmp81 + 0.10817807060593786*tmp82 + 0.10817807060593786*tmp83 + tmp88)*(0.10817807060593786*tmp81 + 0.10817807060593786*tmp82 + 0.10817807060593786*tmp83 + tmp88)) - tmp625*((0.23998534594308307*tmp108 + 0.23998534594308307*tmp109 + 0.23998534594308307*tmp110 + tmp115)*(0.23998534594308307*tmp108 + 0.23998534594308307*tmp109 + 0.23998534594308307*tmp110 + tmp115)) - tmp628*((0.96048417470200387*tmp154 + 0.96048417470200387*tmp155 + 0.96048417470200387*tmp156 + tmp161)*(0.96048417470200387*tmp154 + 0.96048417470200387*tmp155 + 0.96048417470200387*tmp156 + tmp161)) - tmp629*((0.12722519737436899*tmp307 + 0.12722519737436899*tmp310 + 0.12722519737436899*tmp313 + tmp318)*(0.12722519737436899*tmp307 + 0.12722519737436899*tmp310 + 0.12722519737436899*tmp313 + tmp318)) - tmp645*((tmp41 + 0.91182776669511478*tmp43 + 0.91182776669511478*tmp45 + 0.91182776669511478*tmp47)*(tmp41 + 0.91182776669511478*tmp43 + 0.91182776669511478*tmp45 + 0.91182776669511478*tmp47));
      elMat(6,7) = tmp657;
      elMat(6,8) = tmp658;
      elMat(6,9) = tmp659;
      elMat(7,0) = tmp496;
      elMat(7,1) = tmp548;
      elMat(7,2) = tmp566;
      elMat(7,3) = tmp583;
      elMat(7,4) = tmp620;
      elMat(7,5) = tmp642;
      elMat(7,6) = tmp657;
      elMat(7,7) = -0.0004365911605749823*tmp163*((-0.044277648735374389*tmp148 - 0.044277648735374389*tmp150 - 0.044277648735374389*tmp152 - tmp162)*(-0.044277648735374389*tmp148 - 0.044277648735374389*tmp150 - 0.044277648735374389*tmp152 - tmp162)) - 0.0014461064309977984*tmp190*((-0.29034444942318749*tmp173 - 0.29034444942318749*tmp176 - 0.29034444942318749*tmp179 - 0.29034444942318749*tmp181 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp183 + tmp185 + tmp186 + tmp187)*(-0.29034444942318749*tmp173 - 0.29034444942318749*tmp176 - 0.29034444942318749*tmp179 - 0.29034444942318749*tmp181 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp183 + tmp185 + tmp186 + tmp187)) - 0.040060552693882812*tmp216*((-0.017897332337706334*tmp200 - 0.017897332337706334*tmp203 - 0.017897332337706334*tmp206 - 0.017897332337706334*tmp208 - 0.017897332337706334*tmp209 - 0.017897332337706334*tmp210 + tmp212 + tmp213 + tmp214)*(-0.017897332337706334*tmp200 - 0.017897332337706334*tmp203 - 0.017897332337706334*tmp206 - 0.017897332337706334*tmp208 - 0.017897332337706334*tmp209 - 0.017897332337706334*tmp210 + tmp212 + tmp213 + tmp214)) - 0.013984508135943425*tmp270*((-0.62875387936960425*tmp253 - 0.62875387936960425*tmp256 - 0.62875387936960425*tmp259 - 0.62875387936960425*tmp261 - 0.62875387936960425*tmp262 - 0.62875387936960425*tmp263 + tmp265 + tmp266 + tmp267)*(-0.62875387936960425*tmp253 - 0.62875387936960425*tmp256 - 0.62875387936960425*tmp259 - 0.62875387936960425*tmp261 - 0.62875387936960425*tmp262 - 0.62875387936960425*tmp263 + tmp265 + tmp266 + tmp267)) - 0.019868706695079622*tmp324*((-0.11064882600377972*tmp307 - 0.11064882600377972*tmp310 - 0.11064882600377972*tmp313 - 0.11064882600377972*tmp315 - 0.11064882600377972*tmp316 - 0.11064882600377972*tmp317 + tmp319 + tmp320 + tmp321)*(-0.11064882600377972*tmp307 - 0.11064882600377972*tmp310 - 0.11064882600377972*tmp313 - 0.11064882600377972*tmp315 - 0.11064882600377972*tmp316 - 0.11064882600377972*tmp317 + tmp319 + tmp320 + tmp321)) - tmp586*((-0.83664182771558016*tmp25 - 0.83664182771558016*tmp29 - 0.83664182771558016*tmp33 - tmp49)*(-0.83664182771558016*tmp25 - 0.83664182771558016*tmp29 - 0.83664182771558016*tmp33 - tmp49)) - tmp590*((-0.69017748642819765*tmp100 - 0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - tmp116)*(-0.69017748642819765*tmp100 - 0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - tmp116)) - tmp593*((0.83681501561389293*tmp17*tmp26*tmp277*tmp281 + 0.83681501561389293*tmp17*tmp272*tmp277*tmp6 + 0.83681501561389293*tmp17*tmp277*tmp284*tmp30 - tmp296)*(0.83681501561389293*tmp17*tmp26*tmp277*tmp281 + 0.83681501561389293*tmp17*tmp272*tmp277*tmp6 + 0.83681501561389293*tmp17*tmp277*tmp284*tmp30 - tmp296)) - tmp624*((0.01695616312213118*tmp17*tmp218*tmp223*tmp6 + 0.01695616312213118*tmp17*tmp223*tmp227*tmp26 + 0.01695616312213118*tmp17*tmp223*tmp230*tmp30 - tmp242)*(0.01695616312213118*tmp17*tmp218*tmp223*tmp6 + 0.01695616312213118*tmp17*tmp223*tmp227*tmp26 + 0.01695616312213118*tmp17*tmp223*tmp230*tmp30 - tmp242)) - tmp627*((-0.99275870119180742*tmp125 - 0.99275870119180742*tmp127 - 0.99275870119180742*tmp129 - tmp139)*(-0.99275870119180742*tmp125 - 0.99275870119180742*tmp127 - 0.99275870119180742*tmp129 - tmp139)) - 0.00045570061125237317*tmp90*((0.43888559173612551*tmp17*tmp26*tmp70*tmp74 + 0.43888559173612551*tmp17*tmp30*tmp70*tmp77 + 0.43888559173612551*tmp17*tmp6*tmp65*tmp70 - tmp89)*(0.43888559173612551*tmp17*tmp26*tmp70*tmp74 + 0.43888559173612551*tmp17*tmp30*tmp70*tmp77 + 0.43888559173612551*tmp17*tmp6*tmp65*tmp70 - tmp89));
      elMat(7,8) = tmp671;
      elMat(7,9) = tmp672;
      elMat(8,0) = tmp508;
      elMat(8,1) = tmp549;
      elMat(8,2) = tmp567;
      elMat(8,3) = tmp584;
      elMat(8,4) = tmp621;
      elMat(8,5) = tmp643;
      elMat(8,6) = tmp658;
      elMat(8,7) = tmp671;
      elMat(8,8) = -0.0029710231541394041*tmp117*((0.055643873920399871*tmp101*tmp17*tmp44*tmp97 + 0.055643873920399871*tmp104*tmp17*tmp46*tmp97 - tmp107 - tmp111 + 0.055643873920399871*tmp17*tmp42*tmp92*tmp97)*(0.055643873920399871*tmp101*tmp17*tmp44*tmp97 + 0.055643873920399871*tmp104*tmp17*tmp46*tmp97 - tmp107 - tmp111 + 0.055643873920399871*tmp17*tmp42*tmp92*tmp97)) - 0.024833529378694281*tmp216*((-0.29283535826529156*tmp200 - 0.29283535826529156*tmp203 - 0.29283535826529156*tmp206 + tmp208 + tmp209 + tmp210 - 0.29283535826529156*tmp212 - 0.29283535826529156*tmp213 - 0.29283535826529156*tmp214)*(-0.29283535826529156*tmp200 - 0.29283535826529156*tmp203 - 0.29283535826529156*tmp206 + tmp208 + tmp209 + tmp210 - 0.29283535826529156*tmp212 - 0.29283535826529156*tmp213 - 0.29283535826529156*tmp214)) - 0.043334561570183817*tmp297*((-0.016230253343349765*tmp280 - 0.016230253343349765*tmp283 - 0.016230253343349765*tmp286 - 0.016230253343349765*tmp288 - 0.016230253343349765*tmp289 - 0.016230253343349765*tmp290 + tmp292 + tmp293 + tmp294)*(-0.016230253343349765*tmp280 - 0.016230253343349765*tmp283 - 0.016230253343349765*tmp286 - 0.016230253343349765*tmp288 - 0.016230253343349765*tmp289 - 0.016230253343349765*tmp290 + tmp292 + tmp293 + tmp294)) - 0.019360381210448731*tmp324*((-0.12513493356403252*tmp307 - 0.12513493356403252*tmp310 - 0.12513493356403252*tmp313 + tmp315 + tmp316 + tmp317 - 0.12513493356403252*tmp319 - 0.12513493356403252*tmp320 - 0.12513493356403252*tmp321)*(-0.12513493356403252*tmp307 - 0.12513493356403252*tmp310 - 0.12513493356403252*tmp313 + tmp315 + tmp316 + tmp317 - 0.12513493356403252*tmp319 - 0.12513493356403252*tmp320 - 0.12513493356403252*tmp321)) - tmp587*((0.20370126979744377*tmp17*tmp42*tmp65*tmp70 + 0.20370126979744377*tmp17*tmp44*tmp70*tmp74 + 0.20370126979744377*tmp17*tmp46*tmp70*tmp77 - tmp80 - tmp84)*(0.20370126979744377*tmp17*tmp42*tmp65*tmp70 + 0.20370126979744377*tmp17*tmp44*tmp70*tmp74 + 0.20370126979744377*tmp17*tmp46*tmp70*tmp77 - tmp80 - tmp84)) - tmp589*((-tmp233 - tmp237 - 0.018038822449035097*tmp238 - 0.018038822449035097*tmp239 - 0.018038822449035097*tmp240)*(-tmp233 - tmp237 - 0.018038822449035097*tmp238 - 0.018038822449035097*tmp239 - 0.018038822449035097*tmp240)) - tmp591*((0.078912564807136973*tmp17*tmp245*tmp250*tmp42 + 0.078912564807136973*tmp17*tmp250*tmp254*tmp44 + 0.078912564807136973*tmp17*tmp250*tmp257*tmp46 - tmp269)*(0.078912564807136973*tmp17*tmp245*tmp250*tmp42 + 0.078912564807136973*tmp17*tmp250*tmp254*tmp44 + 0.078912564807136973*tmp17*tmp250*tmp257*tmp46 - tmp269)) - tmp592*((-tmp130 - tmp134 - 0.9955558077289024*tmp135 - 0.9955558077289024*tmp136 - 0.9955558077289024*tmp137)*(-tmp130 - tmp134 - 0.9955558077289024*tmp135 - 0.9955558077289024*tmp136 - 0.9955558077289024*tmp137)) - tmp594*((-tmp153 - tmp157 - 0.86875260651032749*tmp158 - 0.86875260651032749*tmp159 - 0.86875260651032749*tmp160)*(-tmp153 - tmp157 - 0.86875260651032749*tmp158 - 0.86875260651032749*tmp159 - 0.86875260651032749*tmp160)) - tmp595*((-0.78904775971796914*tmp173 - 0.78904775971796914*tmp176 - 0.78904775971796914*tmp179 - tmp189)*(-0.78904775971796914*tmp173 - 0.78904775971796914*tmp176 - 0.78904775971796914*tmp179 - tmp189)) - tmp645*((0.04874663636986367*tmp17*tmp22*tmp27*tmp44 + 0.04874663636986367*tmp17*tmp22*tmp31*tmp46 + 0.04874663636986367*tmp17*tmp22*tmp42*tmp8 - tmp34 - tmp41)*(0.04874663636986367*tmp17*tmp22*tmp27*tmp44 + 0.04874663636986367*tmp17*tmp22*tmp31*tmp46 + 0.04874663636986367*tmp17*tmp22*tmp42*tmp8 - tmp34 - tmp41));
      elMat(8,9) = tmp673;
      elMat(9,0) = tmp520;
      elMat(9,1) = tmp550;
      elMat(9,2) = tmp568;
      elMat(9,3) = tmp585;
      elMat(9,4) = tmp622;
      elMat(9,5) = tmp644;
      elMat(9,6) = tmp659;
      elMat(9,7) = tmp672;
      elMat(9,8) = tmp673;
      elMat(9,9) = -0.002267591324869961*tmp140*((-tmp130 - 0.98152397747249553*tmp131 - 0.98152397747249553*tmp132 - 0.98152397747249553*tmp133 - tmp138)*(-tmp130 - 0.98152397747249553*tmp131 - 0.98152397747249553*tmp132 - 0.98152397747249553*tmp133 - tmp138)) - 0.00078250966950696281*tmp190*((-0.75412658362967966*tmp173 - 0.75412658362967966*tmp176 - 0.75412658362967966*tmp179 + tmp181 + tmp182 + tmp183 - 0.75412658362967966*tmp185 - 0.75412658362967966*tmp186 - 0.75412658362967966*tmp187)*(-0.75412658362967966*tmp173 - 0.75412658362967966*tmp176 - 0.75412658362967966*tmp179 + tmp181 + tmp182 + tmp183 - 0.75412658362967966*tmp185 - 0.75412658362967966*tmp186 - 0.75412658362967966*tmp187)) - 0.037263510158954058*tmp216*((tmp200 + tmp203 + tmp206 - 0.055408441312198596*tmp208 - 0.055408441312198596*tmp209 - 0.055408441312198596*tmp210 - 0.055408441312198596*tmp212 - 0.055408441312198596*tmp213 - 0.055408441312198596*tmp214)*(tmp200 + tmp203 + tmp206 - 0.055408441312198596*tmp208 - 0.055408441312198596*tmp209 - 0.055408441312198596*tmp210 - 0.055408441312198596*tmp212 - 0.055408441312198596*tmp213 - 0.055408441312198596*tmp214)) - 0.016907300489390396*tmp243*((-0.10067085398165995*tmp226 - 0.10067085398165995*tmp229 - 0.10067085398165995*tmp232 + tmp234 + tmp235 + tmp236 - 0.10067085398165995*tmp238 - 0.10067085398165995*tmp239 - 0.10067085398165995*tmp240)*(-0.10067085398165995*tmp226 - 0.10067085398165995*tmp229 - 0.10067085398165995*tmp232 + tmp234 + tmp235 + tmp236 - 0.10067085398165995*tmp238 - 0.10067085398165995*tmp239 - 0.10067085398165995*tmp240)) - 0.027514972668366906*tmp297*((-0.27533647385256177*tmp280 - 0.27533647385256177*tmp283 - 0.27533647385256177*tmp286 + tmp288 + tmp289 + tmp290 - 0.27533647385256177*tmp292 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp294)*(-0.27533647385256177*tmp280 - 0.27533647385256177*tmp283 - 0.27533647385256177*tmp286 + tmp288 + tmp289 + tmp290 - 0.27533647385256177*tmp292 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp294)) - tmp623*((-tmp80 - 0.86978591904739511*tmp81 - 0.86978591904739511*tmp82 - 0.86978591904739511*tmp83 - tmp88)*(-tmp80 - 0.86978591904739511*tmp81 - 0.86978591904739511*tmp82 - 0.86978591904739511*tmp83 - tmp88)) - tmp625*((-tmp107 - 0.74666093972451641*tmp108 - 0.74666093972451641*tmp109 - 0.74666093972451641*tmp110 - tmp115)*(-tmp107 - 0.74666093972451641*tmp108 - 0.74666093972451641*tmp109 - 0.74666093972451641*tmp110 - tmp115)) - tmp626*((0.36706245202948667*tmp17*tmp245*tmp250*tmp35 + 0.36706245202948667*tmp17*tmp250*tmp254*tmp37 + 0.36706245202948667*tmp17*tmp250*tmp257*tmp39 - tmp260 - tmp268)*(0.36706245202948667*tmp17*tmp245*tmp250*tmp35 + 0.36706245202948667*tmp17*tmp250*tmp254*tmp37 + 0.36706245202948667*tmp17*tmp250*tmp257*tmp39 - tmp260 - tmp268)) - tmp628*((-tmp153 - 0.87393895558228274*tmp154 - 0.87393895558228274*tmp155 - 0.87393895558228274*tmp156 - tmp161)*(-tmp153 - 0.87393895558228274*tmp154 - 0.87393895558228274*tmp155 - 0.87393895558228274*tmp156 - tmp161)) - tmp629*((0.1439292763298021*tmp17*tmp299*tmp304*tmp35 + 0.1439292763298021*tmp17*tmp304*tmp308*tmp37 + 0.1439292763298021*tmp17*tmp304*tmp311*tmp39 - tmp323)*(0.1439292763298021*tmp17*tmp299*tmp304*tmp35 + 0.1439292763298021*tmp17*tmp304*tmp308*tmp37 + 0.1439292763298021*tmp17*tmp304*tmp311*tmp39 - tmp323)) - 0.0017884250398820132*tmp63*((0.15015869737220899*tmp17*tmp22*tmp27*tmp37 + 0.15015869737220899*tmp17*tmp22*tmp31*tmp39 + 0.15015869737220899*tmp17*tmp22*tmp35*tmp8 - tmp34 - tmp48)*(0.15015869737220899*tmp17*tmp22*tmp27*tmp37 + 0.15015869737220899*tmp17*tmp22*tmp31*tmp39 + 0.15015869737220899*tmp17*tmp22*tmp35*tmp8 - tmp34 - tmp48));
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(2, 1);
      const real_t tmp6 = -tmp5 + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp7 = -coords[0][2] + coords[3][2];
      const real_t tmp8 = -coords[0][0] + coords[1][0];
      const real_t tmp9 = tmp3*tmp8;
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][1] + coords[1][1];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp11*tmp12;
      const real_t tmp14 = tmp1*tmp8;
      const real_t tmp15 = tmp0*tmp11;
      const real_t tmp16 = tmp10*tmp2;
      const real_t tmp17 = 1.0 / (tmp0*tmp1*tmp10 - tmp12*tmp14 + tmp13*tmp2 - tmp15*tmp7 - tmp16*tmp3 + tmp7*tmp9);
      const real_t tmp18 = J_B_1(0, 0)*J_B_1(2, 2);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(2, 2);
      const real_t tmp20 = J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp21 = tmp18*J_B_1(1, 1) - tmp19*J_B_1(1, 0) - tmp20*J_B_1(1, 1) - tmp5*J_B_1(1, 2) + J_B_1(0, 1)*J_B_1(1, 2)*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp22 = 1.0 / (tmp21);
      const real_t tmp23 = tmp17*tmp22;
      const real_t tmp24 = tmp23*tmp6;
      const real_t tmp25 = tmp24*tmp4;
      const real_t tmp26 = -tmp0*tmp7 + tmp12*tmp2;
      const real_t tmp27 = tmp18 - tmp20;
      const real_t tmp28 = tmp23*tmp27;
      const real_t tmp29 = tmp26*tmp28;
      const real_t tmp30 = -tmp1*tmp12 + tmp3*tmp7;
      const real_t tmp31 = -tmp19 + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp32 = tmp23*tmp31;
      const real_t tmp33 = tmp30*tmp32;
      const real_t tmp34 = tmp25 + tmp29 + tmp33;
      const real_t tmp35 = tmp11*tmp2 - tmp14;
      const real_t tmp36 = tmp24*tmp35;
      const real_t tmp37 = -tmp16 + tmp7*tmp8;
      const real_t tmp38 = tmp28*tmp37;
      const real_t tmp39 = tmp1*tmp10 - tmp11*tmp7;
      const real_t tmp40 = tmp32*tmp39;
      const real_t tmp41 = tmp36 + tmp38 + tmp40;
      const real_t tmp42 = -tmp15 + tmp9;
      const real_t tmp43 = tmp24*tmp42;
      const real_t tmp44 = tmp0*tmp10 - tmp12*tmp8;
      const real_t tmp45 = tmp28*tmp44;
      const real_t tmp46 = -tmp10*tmp3 + tmp13;
      const real_t tmp47 = tmp32*tmp46;
      const real_t tmp48 = tmp43 + tmp45 + tmp47;
      const real_t tmp49 = coords[0][0]*coords[1][1];
      const real_t tmp50 = coords[0][0]*coords[1][2];
      const real_t tmp51 = coords[2][1]*coords[3][2];
      const real_t tmp52 = coords[0][1]*coords[1][0];
      const real_t tmp53 = coords[0][1]*coords[1][2];
      const real_t tmp54 = coords[2][2]*coords[3][0];
      const real_t tmp55 = coords[0][2]*coords[1][0];
      const real_t tmp56 = coords[0][2]*coords[1][1];
      const real_t tmp57 = coords[2][0]*coords[3][1];
      const real_t tmp58 = coords[2][2]*coords[3][1];
      const real_t tmp59 = coords[2][0]*coords[3][2];
      const real_t tmp60 = coords[2][1]*coords[3][0];
      const real_t tmp61 = std::abs(coords[0][0]*tmp51 - coords[0][0]*tmp58 + coords[0][1]*tmp54 - coords[0][1]*tmp59 + coords[0][2]*tmp57 - coords[0][2]*tmp60 - coords[1][0]*tmp51 + coords[1][0]*tmp58 - coords[1][1]*tmp54 + coords[1][1]*tmp59 - coords[1][2]*tmp57 + coords[1][2]*tmp60 + coords[2][0]*tmp53 - coords[2][0]*tmp56 - coords[2][1]*tmp50 + coords[2][1]*tmp55 + coords[2][2]*tmp49 - coords[2][2]*tmp52 - coords[3][0]*tmp53 + coords[3][0]*tmp56 + coords[3][1]*tmp50 - coords[3][1]*tmp55 - coords[3][2]*tmp49 + coords[3][2]*tmp52);
      const real_t tmp62 = tmp61*std::abs(tmp21)*ScalarCoeff0_1;
      const real_t tmp63 = J_B_10(0, 0)*J_B_10(2, 1);
      const real_t tmp64 = -tmp63 + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp65 = J_B_10(0, 0)*J_B_10(2, 2);
      const real_t tmp66 = J_B_10(0, 1)*J_B_10(2, 2);
      const real_t tmp67 = J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp68 = -tmp63*J_B_10(1, 2) + tmp65*J_B_10(1, 1) - tmp66*J_B_10(1, 0) - tmp67*J_B_10(1, 1) + J_B_10(0, 1)*J_B_10(1, 2)*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp69 = 1.0 / (tmp68);
      const real_t tmp70 = tmp17*tmp69;
      const real_t tmp71 = tmp64*tmp70;
      const real_t tmp72 = tmp4*tmp71;
      const real_t tmp73 = tmp65 - tmp67;
      const real_t tmp74 = tmp70*tmp73;
      const real_t tmp75 = tmp26*tmp74;
      const real_t tmp76 = -tmp66 + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp77 = tmp70*tmp76;
      const real_t tmp78 = tmp30*tmp77;
      const real_t tmp79 = tmp72 + tmp75 + tmp78;
      const real_t tmp80 = tmp35*tmp71;
      const real_t tmp81 = tmp37*tmp74;
      const real_t tmp82 = tmp39*tmp77;
      const real_t tmp83 = tmp80 + tmp81 + tmp82;
      const real_t tmp84 = tmp42*tmp71;
      const real_t tmp85 = tmp44*tmp74;
      const real_t tmp86 = tmp46*tmp77;
      const real_t tmp87 = tmp84 + tmp85 + tmp86;
      const real_t tmp88 = tmp61*std::abs(tmp68)*ScalarCoeff0_10;
      const real_t tmp89 = J_B_3(0, 0)*J_B_3(2, 1);
      const real_t tmp90 = -tmp89 + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp91 = J_B_3(0, 0)*J_B_3(2, 2);
      const real_t tmp92 = J_B_3(0, 1)*J_B_3(2, 2);
      const real_t tmp93 = J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp94 = -tmp89*J_B_3(1, 2) + tmp91*J_B_3(1, 1) - tmp92*J_B_3(1, 0) - tmp93*J_B_3(1, 1) + J_B_3(0, 1)*J_B_3(1, 2)*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp95 = 1.0 / (tmp94);
      const real_t tmp96 = tmp17*tmp95;
      const real_t tmp97 = tmp90*tmp96;
      const real_t tmp98 = tmp4*tmp97;
      const real_t tmp99 = tmp91 - tmp93;
      const real_t tmp100 = tmp96*tmp99;
      const real_t tmp101 = tmp100*tmp26;
      const real_t tmp102 = -tmp92 + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp103 = tmp102*tmp96;
      const real_t tmp104 = tmp103*tmp30;
      const real_t tmp105 = tmp101 + tmp104 + tmp98;
      const real_t tmp106 = tmp35*tmp97;
      const real_t tmp107 = tmp100*tmp37;
      const real_t tmp108 = tmp103*tmp39;
      const real_t tmp109 = tmp106 + tmp107 + tmp108;
      const real_t tmp110 = tmp42*tmp97;
      const real_t tmp111 = tmp100*tmp44;
      const real_t tmp112 = tmp103*tmp46;
      const real_t tmp113 = tmp110 + tmp111 + tmp112;
      const real_t tmp114 = tmp61*std::abs(tmp94)*ScalarCoeff0_3;
      const real_t tmp115 = J_B_5(0, 0)*J_B_5(2, 1);
      const real_t tmp116 = J_B_5(0, 0)*J_B_5(2, 2);
      const real_t tmp117 = J_B_5(0, 1)*J_B_5(2, 2);
      const real_t tmp118 = J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp119 = -tmp115*J_B_5(1, 2) + tmp116*J_B_5(1, 1) - tmp117*J_B_5(1, 0) - tmp118*J_B_5(1, 1) + J_B_5(0, 1)*J_B_5(1, 2)*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp120 = tmp17/tmp119;
      const real_t tmp121 = tmp120*(-tmp115 + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp122 = tmp121*tmp4;
      const real_t tmp123 = tmp120*(tmp116 - tmp118);
      const real_t tmp124 = tmp123*tmp26;
      const real_t tmp125 = tmp120*(-tmp117 + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp126 = tmp125*tmp30;
      const real_t tmp127 = tmp122 + tmp124 + tmp126;
      const real_t tmp128 = tmp121*tmp35;
      const real_t tmp129 = tmp123*tmp37;
      const real_t tmp130 = tmp125*tmp39;
      const real_t tmp131 = tmp128 + tmp129 + tmp130;
      const real_t tmp132 = tmp121*tmp42;
      const real_t tmp133 = tmp123*tmp44;
      const real_t tmp134 = tmp125*tmp46;
      const real_t tmp135 = tmp132 + tmp133 + tmp134;
      const real_t tmp136 = tmp61*std::abs(tmp119)*ScalarCoeff0_5;
      const real_t tmp137 = J_B_7(0, 0)*J_B_7(2, 1);
      const real_t tmp138 = J_B_7(0, 0)*J_B_7(2, 2);
      const real_t tmp139 = J_B_7(0, 1)*J_B_7(2, 2);
      const real_t tmp140 = J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp141 = -tmp137*J_B_7(1, 2) + tmp138*J_B_7(1, 1) - tmp139*J_B_7(1, 0) - tmp140*J_B_7(1, 1) + J_B_7(0, 1)*J_B_7(1, 2)*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp142 = tmp17/tmp141;
      const real_t tmp143 = tmp142*(-tmp137 + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp144 = tmp143*tmp4;
      const real_t tmp145 = tmp142*(tmp138 - tmp140);
      const real_t tmp146 = tmp145*tmp26;
      const real_t tmp147 = tmp142*(-tmp139 + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp148 = tmp147*tmp30;
      const real_t tmp149 = tmp144 + tmp146 + tmp148;
      const real_t tmp150 = tmp143*tmp35;
      const real_t tmp151 = tmp145*tmp37;
      const real_t tmp152 = tmp147*tmp39;
      const real_t tmp153 = tmp150 + tmp151 + tmp152;
      const real_t tmp154 = tmp143*tmp42;
      const real_t tmp155 = tmp145*tmp44;
      const real_t tmp156 = tmp147*tmp46;
      const real_t tmp157 = tmp154 + tmp155 + tmp156;
      const real_t tmp158 = tmp61*std::abs(tmp141)*ScalarCoeff0_7;
      const real_t tmp159 = J_B_9(0, 0)*J_B_9(2, 1);
      const real_t tmp160 = -tmp159 + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp161 = J_B_9(0, 0)*J_B_9(2, 2);
      const real_t tmp162 = J_B_9(0, 1)*J_B_9(2, 2);
      const real_t tmp163 = J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp164 = -tmp159*J_B_9(1, 2) + tmp161*J_B_9(1, 1) - tmp162*J_B_9(1, 0) - tmp163*J_B_9(1, 1) + J_B_9(0, 1)*J_B_9(1, 2)*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp165 = 1.0 / (tmp164);
      const real_t tmp166 = tmp165*tmp17;
      const real_t tmp167 = tmp160*tmp166;
      const real_t tmp168 = tmp167*tmp4;
      const real_t tmp169 = tmp161 - tmp163;
      const real_t tmp170 = tmp166*tmp169;
      const real_t tmp171 = tmp170*tmp26;
      const real_t tmp172 = -tmp162 + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp173 = tmp166*tmp172;
      const real_t tmp174 = tmp173*tmp30;
      const real_t tmp175 = tmp168 + tmp171 + tmp174;
      const real_t tmp176 = tmp167*tmp35;
      const real_t tmp177 = tmp170*tmp37;
      const real_t tmp178 = tmp173*tmp39;
      const real_t tmp179 = tmp176 + tmp177 + tmp178;
      const real_t tmp180 = tmp167*tmp42;
      const real_t tmp181 = tmp170*tmp44;
      const real_t tmp182 = tmp173*tmp46;
      const real_t tmp183 = tmp180 + tmp181 + tmp182;
      const real_t tmp184 = tmp61*std::abs(tmp164)*ScalarCoeff0_9;
      const real_t tmp185 = J_B_11(0, 0)*J_B_11(2, 1);
      const real_t tmp186 = -tmp185 + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp187 = J_B_11(0, 0)*J_B_11(2, 2);
      const real_t tmp188 = J_B_11(0, 1)*J_B_11(2, 2);
      const real_t tmp189 = J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp190 = -tmp185*J_B_11(1, 2) + tmp187*J_B_11(1, 1) - tmp188*J_B_11(1, 0) - tmp189*J_B_11(1, 1) + J_B_11(0, 1)*J_B_11(1, 2)*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp191 = 1.0 / (tmp190);
      const real_t tmp192 = tmp17*tmp191;
      const real_t tmp193 = tmp186*tmp192;
      const real_t tmp194 = tmp193*tmp4;
      const real_t tmp195 = tmp187 - tmp189;
      const real_t tmp196 = tmp192*tmp195;
      const real_t tmp197 = tmp196*tmp26;
      const real_t tmp198 = -tmp188 + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp199 = tmp192*tmp198;
      const real_t tmp200 = tmp199*tmp30;
      const real_t tmp201 = tmp194 + tmp197 + tmp200;
      const real_t tmp202 = tmp193*tmp35;
      const real_t tmp203 = tmp196*tmp37;
      const real_t tmp204 = tmp199*tmp39;
      const real_t tmp205 = tmp202 + tmp203 + tmp204;
      const real_t tmp206 = tmp193*tmp42;
      const real_t tmp207 = tmp196*tmp44;
      const real_t tmp208 = tmp199*tmp46;
      const real_t tmp209 = tmp206 + tmp207 + tmp208;
      const real_t tmp210 = tmp61*std::abs(tmp190)*ScalarCoeff0_11;
      const real_t tmp211 = J_B_2(0, 0)*J_B_2(2, 1);
      const real_t tmp212 = -tmp211 + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp213 = J_B_2(0, 0)*J_B_2(2, 2);
      const real_t tmp214 = J_B_2(0, 1)*J_B_2(2, 2);
      const real_t tmp215 = J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp216 = -tmp211*J_B_2(1, 2) + tmp213*J_B_2(1, 1) - tmp214*J_B_2(1, 0) - tmp215*J_B_2(1, 1) + J_B_2(0, 1)*J_B_2(1, 2)*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp217 = 1.0 / (tmp216);
      const real_t tmp218 = tmp17*tmp217;
      const real_t tmp219 = tmp212*tmp218;
      const real_t tmp220 = tmp219*tmp4;
      const real_t tmp221 = tmp213 - tmp215;
      const real_t tmp222 = tmp218*tmp221;
      const real_t tmp223 = tmp222*tmp26;
      const real_t tmp224 = -tmp214 + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp225 = tmp218*tmp224;
      const real_t tmp226 = tmp225*tmp30;
      const real_t tmp227 = tmp220 + tmp223 + tmp226;
      const real_t tmp228 = tmp219*tmp35;
      const real_t tmp229 = tmp222*tmp37;
      const real_t tmp230 = tmp225*tmp39;
      const real_t tmp231 = tmp228 + tmp229 + tmp230;
      const real_t tmp232 = tmp219*tmp42;
      const real_t tmp233 = tmp222*tmp44;
      const real_t tmp234 = tmp225*tmp46;
      const real_t tmp235 = tmp232 + tmp233 + tmp234;
      const real_t tmp236 = tmp61*std::abs(tmp216)*ScalarCoeff0_2;
      const real_t tmp237 = J_B_4(0, 0)*J_B_4(2, 1);
      const real_t tmp238 = -tmp237 + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp239 = J_B_4(0, 0)*J_B_4(2, 2);
      const real_t tmp240 = J_B_4(0, 1)*J_B_4(2, 2);
      const real_t tmp241 = J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp242 = -tmp237*J_B_4(1, 2) + tmp239*J_B_4(1, 1) - tmp240*J_B_4(1, 0) - tmp241*J_B_4(1, 1) + J_B_4(0, 1)*J_B_4(1, 2)*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp243 = 1.0 / (tmp242);
      const real_t tmp244 = tmp17*tmp243;
      const real_t tmp245 = tmp238*tmp244;
      const real_t tmp246 = tmp245*tmp4;
      const real_t tmp247 = tmp239 - tmp241;
      const real_t tmp248 = tmp244*tmp247;
      const real_t tmp249 = tmp248*tmp26;
      const real_t tmp250 = -tmp240 + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp251 = tmp244*tmp250;
      const real_t tmp252 = tmp251*tmp30;
      const real_t tmp253 = tmp246 + tmp249 + tmp252;
      const real_t tmp254 = tmp245*tmp35;
      const real_t tmp255 = tmp248*tmp37;
      const real_t tmp256 = tmp251*tmp39;
      const real_t tmp257 = tmp254 + tmp255 + tmp256;
      const real_t tmp258 = tmp245*tmp42;
      const real_t tmp259 = tmp248*tmp44;
      const real_t tmp260 = tmp251*tmp46;
      const real_t tmp261 = tmp258 + tmp259 + tmp260;
      const real_t tmp262 = tmp61*std::abs(tmp242)*ScalarCoeff0_4;
      const real_t tmp263 = J_B_6(0, 0)*J_B_6(2, 1);
      const real_t tmp264 = -tmp263 + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp265 = J_B_6(0, 0)*J_B_6(2, 2);
      const real_t tmp266 = J_B_6(0, 1)*J_B_6(2, 2);
      const real_t tmp267 = J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp268 = -tmp263*J_B_6(1, 2) + tmp265*J_B_6(1, 1) - tmp266*J_B_6(1, 0) - tmp267*J_B_6(1, 1) + J_B_6(0, 1)*J_B_6(1, 2)*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp269 = 1.0 / (tmp268);
      const real_t tmp270 = tmp17*tmp269;
      const real_t tmp271 = tmp264*tmp270;
      const real_t tmp272 = tmp271*tmp4;
      const real_t tmp273 = tmp265 - tmp267;
      const real_t tmp274 = tmp270*tmp273;
      const real_t tmp275 = tmp26*tmp274;
      const real_t tmp276 = -tmp266 + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp277 = tmp270*tmp276;
      const real_t tmp278 = tmp277*tmp30;
      const real_t tmp279 = tmp272 + tmp275 + tmp278;
      const real_t tmp280 = tmp271*tmp35;
      const real_t tmp281 = tmp274*tmp37;
      const real_t tmp282 = tmp277*tmp39;
      const real_t tmp283 = tmp280 + tmp281 + tmp282;
      const real_t tmp284 = tmp271*tmp42;
      const real_t tmp285 = tmp274*tmp44;
      const real_t tmp286 = tmp277*tmp46;
      const real_t tmp287 = tmp284 + tmp285 + tmp286;
      const real_t tmp288 = tmp61*std::abs(tmp268)*ScalarCoeff0_6;
      const real_t tmp289 = J_B_8(0, 0)*J_B_8(2, 1);
      const real_t tmp290 = -tmp289 + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp291 = J_B_8(0, 0)*J_B_8(2, 2);
      const real_t tmp292 = J_B_8(0, 1)*J_B_8(2, 2);
      const real_t tmp293 = J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp294 = -tmp289*J_B_8(1, 2) + tmp291*J_B_8(1, 1) - tmp292*J_B_8(1, 0) - tmp293*J_B_8(1, 1) + J_B_8(0, 1)*J_B_8(1, 2)*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp295 = 1.0 / (tmp294);
      const real_t tmp296 = tmp17*tmp295;
      const real_t tmp297 = tmp290*tmp296;
      const real_t tmp298 = tmp297*tmp4;
      const real_t tmp299 = tmp291 - tmp293;
      const real_t tmp300 = tmp296*tmp299;
      const real_t tmp301 = tmp26*tmp300;
      const real_t tmp302 = -tmp292 + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp303 = tmp296*tmp302;
      const real_t tmp304 = tmp30*tmp303;
      const real_t tmp305 = tmp298 + tmp301 + tmp304;
      const real_t tmp306 = tmp297*tmp35;
      const real_t tmp307 = tmp300*tmp37;
      const real_t tmp308 = tmp303*tmp39;
      const real_t tmp309 = tmp306 + tmp307 + tmp308;
      const real_t tmp310 = tmp297*tmp42;
      const real_t tmp311 = tmp300*tmp44;
      const real_t tmp312 = tmp303*tmp46;
      const real_t tmp313 = tmp310 + tmp311 + tmp312;
      const real_t tmp314 = tmp61*std::abs(tmp294)*ScalarCoeff0_8;
      const real_t tmp315 = tmp62*(0.55279693041046674*tmp25 + 0.55279693041046674*tmp29 + 0.55279693041046674*tmp33 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp40 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp45 + 0.55279693041046674*tmp47);
      const real_t tmp316 = tmp88*(0.60805118540288361*tmp72 + 0.60805118540288361*tmp75 + 0.60805118540288361*tmp78 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp86);
      const real_t tmp317 = tmp210*(-2.0850189307815055*tmp194 - 2.0850189307815055*tmp197 - 2.0850189307815055*tmp200 - 2.0850189307815055*tmp202 - 2.0850189307815055*tmp203 - 2.0850189307815055*tmp204 - 2.0850189307815055*tmp206 - 2.0850189307815055*tmp207 - 2.0850189307815055*tmp208);
      const real_t tmp318 = tmp236*(-0.29317593934991559*tmp220 - 0.29317593934991559*tmp223 - 0.29317593934991559*tmp226 - 0.29317593934991559*tmp228 - 0.29317593934991559*tmp229 - 0.29317593934991559*tmp230 - 0.29317593934991559*tmp232 - 0.29317593934991559*tmp233 - 0.29317593934991559*tmp234);
      const real_t tmp319 = tmp114*(0.56151037867223397*tmp101 + 0.56151037867223397*tmp104 + 0.56151037867223397*tmp106 + 0.56151037867223397*tmp107 + 0.56151037867223397*tmp108 + 0.56151037867223397*tmp110 + 0.56151037867223397*tmp111 + 0.56151037867223397*tmp112 + 0.56151037867223397*tmp98);
      const real_t tmp320 = tmp262*(-0.31389282688815401*tmp246 - 0.31389282688815401*tmp249 - 0.31389282688815401*tmp252 - 0.31389282688815401*tmp254 - 0.31389282688815401*tmp255 - 0.31389282688815401*tmp256 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp259 - 0.31389282688815401*tmp260);
      const real_t tmp321 = tmp136*(0.99043597017024343*tmp122 + 0.99043597017024343*tmp124 + 0.99043597017024343*tmp126 + 0.99043597017024343*tmp128 + 0.99043597017024343*tmp129 + 0.99043597017024343*tmp130 + 0.99043597017024343*tmp132 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp134);
      const real_t tmp322 = tmp288*(-1.2518910405721839*tmp272 - 1.2518910405721839*tmp275 - 1.2518910405721839*tmp278 - 1.2518910405721839*tmp280 - 1.2518910405721839*tmp281 - 1.2518910405721839*tmp282 - 1.2518910405721839*tmp284 - 1.2518910405721839*tmp285 - 1.2518910405721839*tmp286);
      const real_t tmp323 = tmp158*(0.77270393148826533*tmp144 + 0.77270393148826533*tmp146 + 0.77270393148826533*tmp148 + 0.77270393148826533*tmp150 + 0.77270393148826533*tmp151 + 0.77270393148826533*tmp152 + 0.77270393148826533*tmp154 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp156);
      const real_t tmp324 = tmp314*(-0.9184440441026207*tmp298 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp304 - 0.9184440441026207*tmp306 - 0.9184440441026207*tmp307 - 0.9184440441026207*tmp308 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp311 - 0.9184440441026207*tmp312);
      const real_t tmp325 = tmp184*(0.37454442704241986*tmp168 + 0.37454442704241986*tmp171 + 0.37454442704241986*tmp174 + 0.37454442704241986*tmp176 + 0.37454442704241986*tmp177 + 0.37454442704241986*tmp178 + 0.37454442704241986*tmp180 + 0.37454442704241986*tmp181 + 0.37454442704241986*tmp182);
      const real_t tmp326 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp40;
      const real_t tmp327 = 0.42641669024797446*tmp43 + 0.42641669024797446*tmp45 + 0.42641669024797446*tmp47;
      const real_t tmp328 = 0.011829781572832234*tmp315;
      const real_t tmp329 = 0.2723974837528258*tmp80 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp82;
      const real_t tmp330 = 0.3256196736114374*tmp84 + 0.3256196736114374*tmp85 + 0.3256196736114374*tmp86;
      const real_t tmp331 = 0.0061414854617707626*tmp316;
      const real_t tmp332 = 0.054242807519210512*tmp202 + 0.054242807519210512*tmp203 + 0.054242807519210512*tmp204;
      const real_t tmp333 = 0.69877623478892303*tmp206 + 0.69877623478892303*tmp207 + 0.69877623478892303*tmp208;
      const real_t tmp334 = 0.0043612323249822204*tmp317;
      const real_t tmp335 = 1.2716142408535775*tmp228 + 1.2716142408535775*tmp229 + 1.2716142408535775*tmp230;
      const real_t tmp336 = 1.3169318389705873*tmp232 + 1.3169318389705873*tmp233 + 1.3169318389705873*tmp234;
      const real_t tmp337 = 0.012248248047610821*tmp318;
      const real_t tmp338 = 1.4152929568371884*tmp106 + 1.4152929568371884*tmp107 + 1.4152929568371884*tmp108;
      const real_t tmp339 = 0.41537646564397157*tmp110 + 0.41537646564397157*tmp111 + 0.41537646564397157*tmp112;
      const real_t tmp340 = 0.017219568446249611*tmp319;
      const real_t tmp341 = 0.50720690366156718*tmp254 + 0.50720690366156718*tmp255 + 0.50720690366156718*tmp256;
      const real_t tmp342 = 1.2177936097379878*tmp258 + 1.2177936097379878*tmp259 + 1.2177936097379878*tmp260;
      const real_t tmp343 = 0.021490090227737114*tmp320;
      const real_t tmp344 = 1.3207616593498592*tmp128 + 1.3207616593498592*tmp129 + 1.3207616593498592*tmp130;
      const real_t tmp345 = 2.1520288156647434*tmp132 + 2.1520288156647434*tmp133 + 2.1520288156647434*tmp134;
      const real_t tmp346 = 0.0084625239161731543*tmp321;
      const real_t tmp347 = 1.2259759537187613*tmp280 + 1.2259759537187613*tmp281 + 1.2259759537187613*tmp282;
      const real_t tmp348 = 0.035965040373342916*tmp284 + 0.035965040373342916*tmp285 + 0.035965040373342916*tmp286;
      const real_t tmp349 = 0.0088251866742250357*tmp322;
      const real_t tmp350 = 0.23782646519773576*tmp150 + 0.23782646519773576*tmp151 + 0.23782646519773576*tmp152;
      const real_t tmp351 = 1.7318139619254227*tmp154 + 1.7318139619254227*tmp155 + 1.7318139619254227*tmp156;
      const real_t tmp352 = 0.0077188851041817101*tmp323;
      const real_t tmp353 = 0.19112574223634571*tmp306 + 0.19112574223634571*tmp307 + 0.19112574223634571*tmp308;
      const real_t tmp354 = 0.21336495814298084*tmp310 + 0.21336495814298084*tmp311 + 0.21336495814298084*tmp312;
      const real_t tmp355 = 0.006659242794062166*tmp324;
      const real_t tmp356 = 0.14073571909439453*tmp176 + 0.14073571909439453*tmp177 + 0.14073571909439453*tmp178;
      const real_t tmp357 = 2.9649155283744921*tmp180 + 2.9649155283744921*tmp181 + 2.9649155283744921*tmp182;
      const real_t tmp358 = 0.0061548665412862651*tmp325;
      const real_t tmp359 = 2.7375616618121592*tmp25 + 2.7375616618121592*tmp29 + 2.7375616618121592*tmp33;
      const real_t tmp360 = 0.38881857835033307*tmp43 + 0.38881857835033307*tmp45 + 0.38881857835033307*tmp47;
      const real_t tmp361 = 0.2723974837528258*tmp72 + 0.2723974837528258*tmp75 + 0.2723974837528258*tmp78;
      const real_t tmp362 = 3.0100340280386204*tmp84 + 3.0100340280386204*tmp85 + 3.0100340280386204*tmp86;
      const real_t tmp363 = 0.054242807519210512*tmp194 + 0.054242807519210512*tmp197 + 0.054242807519210512*tmp200;
      const real_t tmp364 = 0.16196202691036121*tmp206 + 0.16196202691036121*tmp207 + 0.16196202691036121*tmp208;
      const real_t tmp365 = 1.2716142408535775*tmp220 + 1.2716142408535775*tmp223 + 1.2716142408535775*tmp226;
      const real_t tmp366 = 0.11827798082591956*tmp232 + 0.11827798082591956*tmp233 + 0.11827798082591956*tmp234;
      const real_t tmp367 = 1.4152929568371884*tmp101 + 1.4152929568371884*tmp104 + 1.4152929568371884*tmp98;
      const real_t tmp368 = 1.730840956191074*tmp110 + 1.730840956191074*tmp111 + 1.730840956191074*tmp112;
      const real_t tmp369 = 0.50720690366156718*tmp246 + 0.50720690366156718*tmp249 + 0.50720690366156718*tmp252;
      const real_t tmp370 = 0.96110665971229103*tmp258 + 0.96110665971229103*tmp259 + 0.96110665971229103*tmp260;
      const real_t tmp371 = 1.3207616593498592*tmp122 + 1.3207616593498592*tmp124 + 1.3207616593498592*tmp126;
      const real_t tmp372 = 0.51764549515564062*tmp132 + 0.51764549515564062*tmp133 + 0.51764549515564062*tmp134;
      const real_t tmp373 = 1.2259759537187613*tmp272 + 1.2259759537187613*tmp275 + 1.2259759537187613*tmp278;
      const real_t tmp374 = 0.48616796533571183*tmp284 + 0.48616796533571183*tmp285 + 0.48616796533571183*tmp286;
      const real_t tmp375 = 0.23782646519773576*tmp144 + 0.23782646519773576*tmp146 + 0.23782646519773576*tmp148;
      const real_t tmp376 = 1.8030635043651069*tmp154 + 1.8030635043651069*tmp155 + 1.8030635043651069*tmp156;
      const real_t tmp377 = 0.19112574223634571*tmp298 + 0.19112574223634571*tmp301 + 0.19112574223634571*tmp304;
      const real_t tmp378 = 1.6770652555180527*tmp310 + 1.6770652555180527*tmp311 + 1.6770652555180527*tmp312;
      const real_t tmp379 = 0.14073571909439453*tmp168 + 0.14073571909439453*tmp171 + 0.14073571909439453*tmp174;
      const real_t tmp380 = 0.2688931795735332*tmp180 + 0.2688931795735332*tmp181 + 0.2688931795735332*tmp182;
      const real_t tmp381 = 0.42641669024797446*tmp25 + 0.42641669024797446*tmp29 + 0.42641669024797446*tmp33;
      const real_t tmp382 = 0.38881857835033307*tmp36 + 0.38881857835033307*tmp38 + 0.38881857835033307*tmp40;
      const real_t tmp383 = 0.3256196736114374*tmp72 + 0.3256196736114374*tmp75 + 0.3256196736114374*tmp78;
      const real_t tmp384 = 3.0100340280386204*tmp80 + 3.0100340280386204*tmp81 + 3.0100340280386204*tmp82;
      const real_t tmp385 = 0.69877623478892303*tmp194 + 0.69877623478892303*tmp197 + 0.69877623478892303*tmp200;
      const real_t tmp386 = 0.16196202691036121*tmp202 + 0.16196202691036121*tmp203 + 0.16196202691036121*tmp204;
      const real_t tmp387 = 1.3169318389705873*tmp220 + 1.3169318389705873*tmp223 + 1.3169318389705873*tmp226;
      const real_t tmp388 = 0.11827798082591956*tmp228 + 0.11827798082591956*tmp229 + 0.11827798082591956*tmp230;
      const real_t tmp389 = 0.41537646564397157*tmp101 + 0.41537646564397157*tmp104 + 0.41537646564397157*tmp98;
      const real_t tmp390 = 1.730840956191074*tmp106 + 1.730840956191074*tmp107 + 1.730840956191074*tmp108;
      const real_t tmp391 = 1.2177936097379878*tmp246 + 1.2177936097379878*tmp249 + 1.2177936097379878*tmp252;
      const real_t tmp392 = 0.96110665971229103*tmp254 + 0.96110665971229103*tmp255 + 0.96110665971229103*tmp256;
      const real_t tmp393 = 2.1520288156647434*tmp122 + 2.1520288156647434*tmp124 + 2.1520288156647434*tmp126;
      const real_t tmp394 = 0.51764549515564062*tmp128 + 0.51764549515564062*tmp129 + 0.51764549515564062*tmp130;
      const real_t tmp395 = 0.035965040373342916*tmp272 + 0.035965040373342916*tmp275 + 0.035965040373342916*tmp278;
      const real_t tmp396 = 0.48616796533571183*tmp280 + 0.48616796533571183*tmp281 + 0.48616796533571183*tmp282;
      const real_t tmp397 = 1.7318139619254227*tmp144 + 1.7318139619254227*tmp146 + 1.7318139619254227*tmp148;
      const real_t tmp398 = 1.8030635043651069*tmp150 + 1.8030635043651069*tmp151 + 1.8030635043651069*tmp152;
      const real_t tmp399 = 0.21336495814298084*tmp298 + 0.21336495814298084*tmp301 + 0.21336495814298084*tmp304;
      const real_t tmp400 = 1.6770652555180527*tmp306 + 1.6770652555180527*tmp307 + 1.6770652555180527*tmp308;
      const real_t tmp401 = 2.9649155283744921*tmp168 + 2.9649155283744921*tmp171 + 2.9649155283744921*tmp174;
      const real_t tmp402 = 0.2688931795735332*tmp176 + 0.2688931795735332*tmp177 + 0.2688931795735332*tmp178;
      elMat(0,0) = -0.0054292249839739343*tmp114*((tmp105 + tmp109 + tmp113)*(tmp105 + tmp109 + tmp113)) - 0.0083014263265381374*tmp136*((tmp127 + tmp131 + tmp135)*(tmp127 + tmp131 + tmp135)) - 0.0046087252711240149*tmp158*((tmp149 + tmp153 + tmp157)*(tmp149 + tmp153 + tmp157)) - 0.00086342639172544801*tmp184*((tmp175 + tmp179 + tmp183)*(tmp175 + tmp179 + tmp183)) - 0.0189596024771399*tmp210*((-tmp201 - tmp205 - tmp209)*(-tmp201 - tmp205 - tmp209)) - 0.0010527630257759059*tmp236*((-tmp227 - tmp231 - tmp235)*(-tmp227 - tmp231 - tmp235)) - 0.0021173907985490219*tmp262*((-tmp253 - tmp257 - tmp261)*(-tmp253 - tmp257 - tmp261)) - 0.013831107702793295*tmp288*((-tmp279 - tmp283 - tmp287)*(-tmp279 - tmp283 - tmp287)) - 0.0056173340848133255*tmp314*((-tmp305 - tmp309 - tmp313)*(-tmp305 - tmp309 - tmp313)) - 0.0036149972514435908*tmp62*((tmp34 + tmp41 + tmp48)*(tmp34 + tmp41 + tmp48)) - 0.0022706683527901044*tmp88*((tmp79 + tmp83 + tmp87)*(tmp79 + tmp83 + tmp87));
      elMat(0,1) = -0.012584765868454714*tmp105*tmp319 + 0.0040819365333192512*tmp127*tmp321 - 0.0061987549215557864*tmp149*tmp323 + 0.0044998649071490461*tmp175*tmp325 + 0.0036548782978011126*tmp201*tmp317 + 0.010799549999884401*tmp227*tmp318 + 0.00083582139204094858*tmp253*tmp320 + 0.0045346636251092122*tmp279*tmp322 - 0.0045087419239184514*tmp305*tmp324 + 0.0072301427194886381*tmp315*tmp34 - 0.012344594760863713*tmp316*tmp79;
      elMat(0,2) = 0.010066964965131993*tmp109*tmp319 - 0.0097490714046835261*tmp131*tmp321 - 0.0056487878897383461*tmp153*tmp323 - 0.012093792842045984*tmp179*tmp325 + 0.0013137068218914037*tmp205*tmp317 - 0.0038818597778972029*tmp231*tmp318 - 0.0046804043242939224*tmp257*tmp320 + 0.0085077884791842431*tmp283*tmp322 + 0.005238393734043144*tmp309*tmp324 + 0.0067853652681886352*tmp315*tmp41 + 0.0041416969702195786*tmp316*tmp83;
      elMat(0,3) = -0.0071511654955033511*tmp113*tmp319 - 0.0027144532136395704*tmp135*tmp321 + 0.005883129944586717*tmp157*tmp323 + 0.0052886569726683132*tmp183*tmp325 + 0.0041246668394316508*tmp209*tmp317 - 0.0033267985952381263*tmp235*tmp318 + 0.010590168103918869*tmp261*tmp320 - 0.0019942799754541058*tmp287*tmp322 + 0.0053864900723149976*tmp313*tmp324 - 0.020554974928565235*tmp315*tmp48 + 0.0044685602754798454*tmp316*tmp87;
      elMat(0,4) = -tmp328*(tmp326 + tmp327) - tmp331*(tmp329 + tmp330) - tmp334*(tmp332 + tmp333) - tmp337*(tmp335 + tmp336) - tmp340*(tmp338 + tmp339) - tmp343*(tmp341 + tmp342) - tmp346*(tmp344 + tmp345) - tmp349*(tmp347 + tmp348) - tmp352*(tmp350 + tmp351) - tmp355*(tmp353 + tmp354) - tmp358*(tmp356 + tmp357);
      elMat(0,5) = -tmp328*(tmp359 + tmp360) - tmp331*(tmp361 + tmp362) - tmp334*(tmp363 + tmp364) - tmp337*(tmp365 + tmp366) - tmp340*(tmp367 + tmp368) - tmp343*(tmp369 + tmp370) - tmp346*(tmp371 + tmp372) - tmp349*(tmp373 + tmp374) - tmp352*(tmp375 + tmp376) - tmp355*(tmp377 + tmp378) - tmp358*(tmp379 + tmp380);
      elMat(0,6) = -tmp328*(tmp381 + tmp382) - tmp331*(tmp383 + tmp384) - tmp334*(tmp385 + tmp386) - tmp337*(tmp387 + tmp388) - tmp340*(tmp389 + tmp390) - tmp343*(tmp391 + tmp392) - tmp346*(tmp393 + tmp394) - tmp349*(tmp395 + tmp396) - tmp352*(tmp397 + tmp398) - tmp355*(tmp399 + tmp400) - tmp358*(tmp401 + tmp402);
      elMat(0,7) = -tmp328*(-tmp326 - tmp359 - 2.2903585922226259*tmp43 - 2.2903585922226259*tmp45 - 2.2903585922226259*tmp47) - tmp331*(0.11955133084429059*tmp17*tmp42*tmp64*tmp69 + 0.11955133084429059*tmp17*tmp44*tmp69*tmp73 + 0.11955133084429059*tmp17*tmp46*tmp69*tmp76 - tmp329 - tmp361) - tmp334*(3.030776123262295*tmp17*tmp186*tmp191*tmp42 + 3.030776123262295*tmp17*tmp191*tmp195*tmp44 + 3.030776123262295*tmp17*tmp191*tmp198*tmp46 - tmp332 - tmp363) - tmp337*(0.021561698496338266*tmp17*tmp212*tmp217*tmp42 + 0.021561698496338266*tmp17*tmp217*tmp221*tmp44 + 0.021561698496338266*tmp17*tmp217*tmp224*tmp46 - tmp335 - tmp365) - tmp340*(-0.97680333550942233*tmp110 - 0.97680333550942233*tmp111 - 0.97680333550942233*tmp112 - tmp338 - tmp367) - tmp343*(0.80668592322658683*tmp17*tmp238*tmp243*tmp42 + 0.80668592322658683*tmp17*tmp243*tmp247*tmp44 + 0.80668592322658683*tmp17*tmp243*tmp250*tmp46 - tmp341 - tmp369) - tmp346*(-1.3111976295201027*tmp132 - 1.3111976295201027*tmp133 - 1.3111976295201027*tmp134 - tmp344 - tmp371) - tmp349*(1.0259150868534226*tmp17*tmp264*tmp269*tmp42 + 1.0259150868534226*tmp17*tmp269*tmp273*tmp44 + 1.0259150868534226*tmp17*tmp269*tmp276*tmp46 - tmp347 - tmp373) - tmp352*(-0.010530396686001087*tmp154 - 0.010530396686001087*tmp155 - 0.010530396686001087*tmp156 - tmp350 - tmp375) - tmp355*(1.727318301866275*tmp17*tmp290*tmp295*tmp42 + 1.727318301866275*tmp17*tmp295*tmp299*tmp44 + 1.727318301866275*tmp17*tmp295*tmp302*tmp46 - tmp353 - tmp377) - tmp358*(0.48471985386318561*tmp160*tmp165*tmp17*tmp42 + 0.48471985386318561*tmp165*tmp169*tmp17*tmp44 + 0.48471985386318561*tmp165*tmp17*tmp172*tmp46 - tmp356 - tmp379);
      elMat(0,8) = -tmp328*(0.020786379341558803*tmp17*tmp22*tmp27*tmp37 + 0.020786379341558803*tmp17*tmp22*tmp31*tmp39 + 0.020786379341558803*tmp17*tmp22*tmp35*tmp6 - tmp327 - tmp381) - tmp331*(0.066329140985678992*tmp17*tmp35*tmp64*tmp69 + 0.066329140985678992*tmp17*tmp37*tmp69*tmp73 + 0.066329140985678992*tmp17*tmp39*tmp69*tmp76 - tmp330 - tmp383) - tmp334*(2.3862426959925824*tmp17*tmp186*tmp191*tmp35 + 2.3862426959925824*tmp17*tmp191*tmp195*tmp37 + 2.3862426959925824*tmp17*tmp191*tmp198*tmp39 - tmp333 - tmp385) - tmp337*(-0.023755899620671705*tmp228 - 0.023755899620671705*tmp229 - 0.023755899620671705*tmp230 - tmp336 - tmp387) - tmp340*(0.023113155683794462*tmp102*tmp17*tmp39*tmp95 + 0.023113155683794462*tmp17*tmp35*tmp90*tmp95 + 0.023113155683794462*tmp17*tmp37*tmp95*tmp99 - tmp339 - tmp389) - tmp343*(0.096099217150166227*tmp17*tmp238*tmp243*tmp35 + 0.096099217150166227*tmp17*tmp243*tmp247*tmp37 + 0.096099217150166227*tmp17*tmp243*tmp250*tmp39 - tmp342 - tmp391) - tmp346*(-2.1424647858349868*tmp128 - 2.1424647858349868*tmp129 - 2.1424647858349868*tmp130 - tmp345 - tmp393) - tmp349*(2.215926000198841*tmp17*tmp264*tmp269*tmp35 + 2.215926000198841*tmp17*tmp269*tmp273*tmp37 + 2.215926000198841*tmp17*tmp269*tmp276*tmp39 - tmp348 - tmp395) - tmp352*(-1.504517893413688*tmp150 - 1.504517893413688*tmp151 - 1.504517893413688*tmp152 - tmp351 - tmp397) - tmp355*(1.7050790859596399*tmp17*tmp290*tmp295*tmp35 + 1.7050790859596399*tmp17*tmp295*tmp299*tmp37 + 1.7050790859596399*tmp17*tmp295*tmp302*tmp39 - tmp354 - tmp399) - tmp358*(-2.339459955416912*tmp176 - 2.339459955416912*tmp177 - 2.339459955416912*tmp178 - tmp357 - tmp401);
      elMat(0,9) = -tmp328*(0.058384491239200198*tmp17*tmp22*tmp26*tmp27 + 0.058384491239200198*tmp17*tmp22*tmp30*tmp31 + 0.058384491239200198*tmp17*tmp22*tmp4*tmp6 - tmp360 - tmp382) - tmp331*(-tmp362 - tmp384 - 2.6180852134415042*tmp72 - 2.6180852134415042*tmp75 - 2.6180852134415042*tmp78) - tmp334*(2.923056903871144*tmp17*tmp186*tmp191*tmp4 + 2.923056903871144*tmp17*tmp191*tmp195*tmp26 + 2.923056903871144*tmp17*tmp191*tmp198*tmp30 - tmp364 - tmp386) - tmp337*(1.1748979585239958*tmp17*tmp212*tmp217*tmp4 + 1.1748979585239958*tmp17*tmp217*tmp221*tmp26 + 1.1748979585239958*tmp17*tmp217*tmp224*tmp30 - tmp366 - tmp388) - tmp340*(-1.292351334863308*tmp101 - 1.292351334863308*tmp104 - tmp368 - tmp390 - 1.292351334863308*tmp98) - tmp343*(0.35278616717586297*tmp17*tmp238*tmp243*tmp4 + 0.35278616717586297*tmp17*tmp243*tmp247*tmp26 + 0.35278616717586297*tmp17*tmp243*tmp250*tmp30 - tmp370 - tmp392) - tmp346*(-0.50808146532588383*tmp122 - 0.50808146532588383*tmp124 - 0.50808146532588383*tmp126 - tmp372 - tmp394) - tmp349*(1.7657230752364721*tmp17*tmp26*tmp269*tmp273 + 1.7657230752364721*tmp17*tmp264*tmp269*tmp4 + 1.7657230752364721*tmp17*tmp269*tmp276*tmp30 - tmp374 - tmp396) - tmp352*(-1.5757674358533722*tmp144 - 1.5757674358533722*tmp146 - 1.5757674358533722*tmp148 - tmp376 - tmp398) - tmp355*(0.24137878858456796*tmp17*tmp26*tmp295*tmp299 + 0.24137878858456796*tmp17*tmp290*tmp295*tmp4 + 0.24137878858456796*tmp17*tmp295*tmp30*tmp302 - tmp378 - tmp400) - tmp358*(0.35656239338404694*tmp160*tmp165*tmp17*tmp4 + 0.35656239338404694*tmp165*tmp169*tmp17*tmp26 + 0.35656239338404694*tmp165*tmp17*tmp172*tmp30 - tmp380 - tmp402);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(3,3) = 0;
      elMat(3,4) = 0;
      elMat(3,5) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(4,3) = 0;
      elMat(4,4) = 0;
      elMat(4,5) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
      elMat(5,3) = 0;
      elMat(5,4) = 0;
      elMat(5,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp8 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp7*J_B_1(2, 2) - tmp8*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp13*tmp4 - tmp16;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp30 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp10 - tmp17;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp12 + tmp15;
      const real_t tmp40 = tmp19 - tmp21;
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = 0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46;
      const real_t tmp48 = -J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp49 = tmp24*tmp48;
      const real_t tmp50 = tmp49*tmp6;
      const real_t tmp51 = tmp27*tmp49;
      const real_t tmp52 = J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp53 = tmp24*tmp52;
      const real_t tmp54 = tmp29*tmp53;
      const real_t tmp55 = tmp33*tmp53;
      const real_t tmp56 = tmp35*tmp49;
      const real_t tmp57 = tmp37*tmp53;
      const real_t tmp58 = -J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp59 = tmp24*tmp58;
      const real_t tmp60 = tmp39*tmp59;
      const real_t tmp61 = tmp43*tmp59;
      const real_t tmp62 = tmp45*tmp59;
      const real_t tmp63 = coords[0][0]*coords[1][1];
      const real_t tmp64 = coords[0][0]*coords[1][2];
      const real_t tmp65 = coords[2][1]*coords[3][2];
      const real_t tmp66 = coords[0][1]*coords[1][0];
      const real_t tmp67 = coords[0][1]*coords[1][2];
      const real_t tmp68 = coords[2][2]*coords[3][0];
      const real_t tmp69 = coords[0][2]*coords[1][0];
      const real_t tmp70 = coords[0][2]*coords[1][1];
      const real_t tmp71 = coords[2][0]*coords[3][1];
      const real_t tmp72 = coords[2][2]*coords[3][1];
      const real_t tmp73 = coords[2][0]*coords[3][2];
      const real_t tmp74 = coords[2][1]*coords[3][0];
      const real_t tmp75 = std::abs(coords[0][0]*tmp65 - coords[0][0]*tmp72 + coords[0][1]*tmp68 - coords[0][1]*tmp73 + coords[0][2]*tmp71 - coords[0][2]*tmp74 - coords[1][0]*tmp65 + coords[1][0]*tmp72 - coords[1][1]*tmp68 + coords[1][1]*tmp73 - coords[1][2]*tmp71 + coords[1][2]*tmp74 + coords[2][0]*tmp67 - coords[2][0]*tmp70 - coords[2][1]*tmp64 + coords[2][1]*tmp69 + coords[2][2]*tmp63 - coords[2][2]*tmp66 - coords[3][0]*tmp67 + coords[3][0]*tmp70 + coords[3][1]*tmp64 - coords[3][1]*tmp69 - coords[3][2]*tmp63 + coords[3][2]*tmp66);
      const real_t tmp76 = tmp75*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp77 = tmp76*(0.55279693041046674*tmp50 + 0.55279693041046674*tmp51 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62);
      const real_t tmp78 = 0.011829781572832234*tmp77;
      const real_t tmp79 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp80 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp81 = tmp79 - tmp80;
      const real_t tmp82 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp83 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp84 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp85 = tmp79*J_B_10(2, 2) - tmp80*J_B_10(2, 2) + tmp82*J_B_10(2, 0) - tmp83*J_B_10(2, 1) - tmp84*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp86 = 1.0 / (tmp85);
      const real_t tmp87 = tmp18*tmp86;
      const real_t tmp88 = tmp81*tmp87;
      const real_t tmp89 = tmp6*tmp88;
      const real_t tmp90 = tmp27*tmp88;
      const real_t tmp91 = -tmp83 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp92 = tmp87*tmp91;
      const real_t tmp93 = tmp29*tmp92;
      const real_t tmp94 = tmp33*tmp92;
      const real_t tmp95 = tmp35*tmp88;
      const real_t tmp96 = tmp37*tmp92;
      const real_t tmp97 = tmp82 - tmp84;
      const real_t tmp98 = tmp87*tmp97;
      const real_t tmp99 = tmp39*tmp98;
      const real_t tmp100 = tmp43*tmp98;
      const real_t tmp101 = tmp45*tmp98;
      const real_t tmp102 = 0.60805118540288361*tmp100 + 0.60805118540288361*tmp101 + 0.60805118540288361*tmp89 + 0.60805118540288361*tmp90 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp95 + 0.60805118540288361*tmp96 + 0.60805118540288361*tmp99;
      const real_t tmp103 = -J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp104 = tmp103*tmp87;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp108 = tmp107*tmp87;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = -J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp114 = tmp113*tmp87;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = tmp75*std::abs(tmp85)*ScalarCoeff0_10;
      const real_t tmp119 = tmp118*(0.60805118540288361*tmp105 + 0.60805118540288361*tmp106 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp111 + 0.60805118540288361*tmp112 + 0.60805118540288361*tmp115 + 0.60805118540288361*tmp116 + 0.60805118540288361*tmp117);
      const real_t tmp120 = 0.0061414854617707626*tmp119;
      const real_t tmp121 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp122 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp123 = tmp121 - tmp122;
      const real_t tmp124 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp125 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp126 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp127 = tmp121*J_B_11(2, 2) - tmp122*J_B_11(2, 2) + tmp124*J_B_11(2, 0) - tmp125*J_B_11(2, 1) - tmp126*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp128 = 1.0 / (tmp127);
      const real_t tmp129 = tmp128*tmp18;
      const real_t tmp130 = tmp123*tmp129;
      const real_t tmp131 = tmp130*tmp6;
      const real_t tmp132 = tmp130*tmp27;
      const real_t tmp133 = -tmp125 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp134 = tmp129*tmp133;
      const real_t tmp135 = tmp134*tmp29;
      const real_t tmp136 = tmp134*tmp33;
      const real_t tmp137 = tmp130*tmp35;
      const real_t tmp138 = tmp134*tmp37;
      const real_t tmp139 = tmp124 - tmp126;
      const real_t tmp140 = tmp129*tmp139;
      const real_t tmp141 = tmp140*tmp39;
      const real_t tmp142 = tmp140*tmp43;
      const real_t tmp143 = tmp140*tmp45;
      const real_t tmp144 = -2.0850189307815055*tmp131 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp136 - 2.0850189307815055*tmp137 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp141 - 2.0850189307815055*tmp142 - 2.0850189307815055*tmp143;
      const real_t tmp145 = -J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp146 = tmp129*tmp145;
      const real_t tmp147 = tmp146*tmp6;
      const real_t tmp148 = tmp146*tmp27;
      const real_t tmp149 = J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp150 = tmp129*tmp149;
      const real_t tmp151 = tmp150*tmp29;
      const real_t tmp152 = tmp150*tmp33;
      const real_t tmp153 = tmp146*tmp35;
      const real_t tmp154 = tmp150*tmp37;
      const real_t tmp155 = -J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp156 = tmp129*tmp155;
      const real_t tmp157 = tmp156*tmp39;
      const real_t tmp158 = tmp156*tmp43;
      const real_t tmp159 = tmp156*tmp45;
      const real_t tmp160 = tmp75*std::abs(tmp127)*ScalarCoeff0_11;
      const real_t tmp161 = tmp160*(-2.0850189307815055*tmp147 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp152 - 2.0850189307815055*tmp153 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp157 - 2.0850189307815055*tmp158 - 2.0850189307815055*tmp159);
      const real_t tmp162 = 0.0043612323249822204*tmp161;
      const real_t tmp163 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp164 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp165 = tmp163 - tmp164;
      const real_t tmp166 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp167 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp168 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp169 = tmp163*J_B_2(2, 2) - tmp164*J_B_2(2, 2) + tmp166*J_B_2(2, 0) - tmp167*J_B_2(2, 1) - tmp168*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp170 = 1.0 / (tmp169);
      const real_t tmp171 = tmp170*tmp18;
      const real_t tmp172 = tmp165*tmp171;
      const real_t tmp173 = tmp172*tmp6;
      const real_t tmp174 = tmp172*tmp27;
      const real_t tmp175 = -tmp167 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp176 = tmp171*tmp175;
      const real_t tmp177 = tmp176*tmp29;
      const real_t tmp178 = tmp176*tmp33;
      const real_t tmp179 = tmp172*tmp35;
      const real_t tmp180 = tmp176*tmp37;
      const real_t tmp181 = tmp166 - tmp168;
      const real_t tmp182 = tmp171*tmp181;
      const real_t tmp183 = tmp182*tmp39;
      const real_t tmp184 = tmp182*tmp43;
      const real_t tmp185 = tmp182*tmp45;
      const real_t tmp186 = -0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp177 - 0.29317593934991559*tmp178 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp183 - 0.29317593934991559*tmp184 - 0.29317593934991559*tmp185;
      const real_t tmp187 = -J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp188 = tmp171*tmp187;
      const real_t tmp189 = tmp188*tmp6;
      const real_t tmp190 = tmp188*tmp27;
      const real_t tmp191 = J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp192 = tmp171*tmp191;
      const real_t tmp193 = tmp192*tmp29;
      const real_t tmp194 = tmp192*tmp33;
      const real_t tmp195 = tmp188*tmp35;
      const real_t tmp196 = tmp192*tmp37;
      const real_t tmp197 = -J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp198 = tmp171*tmp197;
      const real_t tmp199 = tmp198*tmp39;
      const real_t tmp200 = tmp198*tmp43;
      const real_t tmp201 = tmp198*tmp45;
      const real_t tmp202 = tmp75*std::abs(tmp169)*ScalarCoeff0_2;
      const real_t tmp203 = tmp202*(-0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp193 - 0.29317593934991559*tmp194 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp199 - 0.29317593934991559*tmp200 - 0.29317593934991559*tmp201);
      const real_t tmp204 = 0.012248248047610821*tmp203;
      const real_t tmp205 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp206 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp207 = tmp205 - tmp206;
      const real_t tmp208 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp209 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp210 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp211 = tmp205*J_B_3(2, 2) - tmp206*J_B_3(2, 2) + tmp208*J_B_3(2, 0) - tmp209*J_B_3(2, 1) - tmp210*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp212 = 1.0 / (tmp211);
      const real_t tmp213 = tmp18*tmp212;
      const real_t tmp214 = tmp207*tmp213;
      const real_t tmp215 = tmp214*tmp6;
      const real_t tmp216 = tmp214*tmp27;
      const real_t tmp217 = -tmp209 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp218 = tmp213*tmp217;
      const real_t tmp219 = tmp218*tmp29;
      const real_t tmp220 = tmp218*tmp33;
      const real_t tmp221 = tmp214*tmp35;
      const real_t tmp222 = tmp218*tmp37;
      const real_t tmp223 = tmp208 - tmp210;
      const real_t tmp224 = tmp213*tmp223;
      const real_t tmp225 = tmp224*tmp39;
      const real_t tmp226 = tmp224*tmp43;
      const real_t tmp227 = tmp224*tmp45;
      const real_t tmp228 = 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp219 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222 + 0.56151037867223397*tmp225 + 0.56151037867223397*tmp226 + 0.56151037867223397*tmp227;
      const real_t tmp229 = -J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp230 = tmp213*tmp229;
      const real_t tmp231 = tmp230*tmp6;
      const real_t tmp232 = tmp230*tmp27;
      const real_t tmp233 = J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp234 = tmp213*tmp233;
      const real_t tmp235 = tmp234*tmp29;
      const real_t tmp236 = tmp234*tmp33;
      const real_t tmp237 = tmp230*tmp35;
      const real_t tmp238 = tmp234*tmp37;
      const real_t tmp239 = -J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp240 = tmp213*tmp239;
      const real_t tmp241 = tmp240*tmp39;
      const real_t tmp242 = tmp240*tmp43;
      const real_t tmp243 = tmp240*tmp45;
      const real_t tmp244 = tmp75*std::abs(tmp211)*ScalarCoeff0_3;
      const real_t tmp245 = tmp244*(0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp235 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238 + 0.56151037867223397*tmp241 + 0.56151037867223397*tmp242 + 0.56151037867223397*tmp243);
      const real_t tmp246 = 0.017219568446249611*tmp245;
      const real_t tmp247 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp248 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp249 = tmp247 - tmp248;
      const real_t tmp250 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp251 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp252 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp253 = tmp247*J_B_4(2, 2) - tmp248*J_B_4(2, 2) + tmp250*J_B_4(2, 0) - tmp251*J_B_4(2, 1) - tmp252*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp254 = 1.0 / (tmp253);
      const real_t tmp255 = tmp18*tmp254;
      const real_t tmp256 = tmp249*tmp255;
      const real_t tmp257 = tmp256*tmp6;
      const real_t tmp258 = tmp256*tmp27;
      const real_t tmp259 = -tmp251 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp260 = tmp255*tmp259;
      const real_t tmp261 = tmp260*tmp29;
      const real_t tmp262 = tmp260*tmp33;
      const real_t tmp263 = tmp256*tmp35;
      const real_t tmp264 = tmp260*tmp37;
      const real_t tmp265 = tmp250 - tmp252;
      const real_t tmp266 = tmp255*tmp265;
      const real_t tmp267 = tmp266*tmp39;
      const real_t tmp268 = tmp266*tmp43;
      const real_t tmp269 = tmp266*tmp45;
      const real_t tmp270 = -0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269;
      const real_t tmp271 = -J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp272 = tmp255*tmp271;
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp276 = tmp255*tmp275;
      const real_t tmp277 = tmp276*tmp29;
      const real_t tmp278 = tmp276*tmp33;
      const real_t tmp279 = tmp272*tmp35;
      const real_t tmp280 = tmp276*tmp37;
      const real_t tmp281 = -J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp282 = tmp255*tmp281;
      const real_t tmp283 = tmp282*tmp39;
      const real_t tmp284 = tmp282*tmp43;
      const real_t tmp285 = tmp282*tmp45;
      const real_t tmp286 = tmp75*std::abs(tmp253)*ScalarCoeff0_4;
      const real_t tmp287 = tmp286*(-0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279 - 0.31389282688815401*tmp280 - 0.31389282688815401*tmp283 - 0.31389282688815401*tmp284 - 0.31389282688815401*tmp285);
      const real_t tmp288 = 0.021490090227737114*tmp287;
      const real_t tmp289 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp290 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp291 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp292 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp293 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp294 = tmp289*J_B_5(2, 2) - tmp290*J_B_5(2, 2) + tmp291*J_B_5(2, 0) - tmp292*J_B_5(2, 1) - tmp293*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp295 = tmp18/tmp294;
      const real_t tmp296 = tmp295*(tmp289 - tmp290);
      const real_t tmp297 = tmp296*tmp6;
      const real_t tmp298 = tmp27*tmp296;
      const real_t tmp299 = tmp295*(-tmp292 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp300 = tmp29*tmp299;
      const real_t tmp301 = tmp299*tmp33;
      const real_t tmp302 = tmp296*tmp35;
      const real_t tmp303 = tmp299*tmp37;
      const real_t tmp304 = tmp295*(tmp291 - tmp293);
      const real_t tmp305 = tmp304*tmp39;
      const real_t tmp306 = tmp304*tmp43;
      const real_t tmp307 = tmp304*tmp45;
      const real_t tmp308 = 0.99043597017024343*tmp297 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp300 + 0.99043597017024343*tmp301 + 0.99043597017024343*tmp302 + 0.99043597017024343*tmp303 + 0.99043597017024343*tmp305 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307;
      const real_t tmp309 = tmp295*(-J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp310 = tmp309*tmp6;
      const real_t tmp311 = tmp27*tmp309;
      const real_t tmp312 = tmp295*(J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0));
      const real_t tmp313 = tmp29*tmp312;
      const real_t tmp314 = tmp312*tmp33;
      const real_t tmp315 = tmp309*tmp35;
      const real_t tmp316 = tmp312*tmp37;
      const real_t tmp317 = tmp295*(-J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp318 = tmp317*tmp39;
      const real_t tmp319 = tmp317*tmp43;
      const real_t tmp320 = tmp317*tmp45;
      const real_t tmp321 = tmp75*std::abs(tmp294)*ScalarCoeff0_5;
      const real_t tmp322 = tmp321*(0.99043597017024343*tmp310 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp313 + 0.99043597017024343*tmp314 + 0.99043597017024343*tmp315 + 0.99043597017024343*tmp316 + 0.99043597017024343*tmp318 + 0.99043597017024343*tmp319 + 0.99043597017024343*tmp320);
      const real_t tmp323 = 0.0084625239161731543*tmp322;
      const real_t tmp324 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp325 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp326 = tmp324 - tmp325;
      const real_t tmp327 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp328 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp329 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp330 = tmp324*J_B_6(2, 2) - tmp325*J_B_6(2, 2) + tmp327*J_B_6(2, 0) - tmp328*J_B_6(2, 1) - tmp329*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp331 = 1.0 / (tmp330);
      const real_t tmp332 = tmp18*tmp331;
      const real_t tmp333 = tmp326*tmp332;
      const real_t tmp334 = tmp333*tmp6;
      const real_t tmp335 = tmp27*tmp333;
      const real_t tmp336 = -tmp328 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp337 = tmp332*tmp336;
      const real_t tmp338 = tmp29*tmp337;
      const real_t tmp339 = tmp33*tmp337;
      const real_t tmp340 = tmp333*tmp35;
      const real_t tmp341 = tmp337*tmp37;
      const real_t tmp342 = tmp327 - tmp329;
      const real_t tmp343 = tmp332*tmp342;
      const real_t tmp344 = tmp343*tmp39;
      const real_t tmp345 = tmp343*tmp43;
      const real_t tmp346 = tmp343*tmp45;
      const real_t tmp347 = -1.2518910405721839*tmp334 - 1.2518910405721839*tmp335 - 1.2518910405721839*tmp338 - 1.2518910405721839*tmp339 - 1.2518910405721839*tmp340 - 1.2518910405721839*tmp341 - 1.2518910405721839*tmp344 - 1.2518910405721839*tmp345 - 1.2518910405721839*tmp346;
      const real_t tmp348 = -J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp349 = tmp332*tmp348;
      const real_t tmp350 = tmp349*tmp6;
      const real_t tmp351 = tmp27*tmp349;
      const real_t tmp352 = J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp353 = tmp332*tmp352;
      const real_t tmp354 = tmp29*tmp353;
      const real_t tmp355 = tmp33*tmp353;
      const real_t tmp356 = tmp349*tmp35;
      const real_t tmp357 = tmp353*tmp37;
      const real_t tmp358 = -J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp359 = tmp332*tmp358;
      const real_t tmp360 = tmp359*tmp39;
      const real_t tmp361 = tmp359*tmp43;
      const real_t tmp362 = tmp359*tmp45;
      const real_t tmp363 = tmp75*std::abs(tmp330)*ScalarCoeff0_6;
      const real_t tmp364 = tmp363*(-1.2518910405721839*tmp350 - 1.2518910405721839*tmp351 - 1.2518910405721839*tmp354 - 1.2518910405721839*tmp355 - 1.2518910405721839*tmp356 - 1.2518910405721839*tmp357 - 1.2518910405721839*tmp360 - 1.2518910405721839*tmp361 - 1.2518910405721839*tmp362);
      const real_t tmp365 = 0.0088251866742250357*tmp364;
      const real_t tmp366 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp367 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp368 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp369 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp370 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp371 = tmp366*J_B_7(2, 2) - tmp367*J_B_7(2, 2) + tmp368*J_B_7(2, 0) - tmp369*J_B_7(2, 1) - tmp370*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp372 = tmp18/tmp371;
      const real_t tmp373 = tmp372*(tmp366 - tmp367);
      const real_t tmp374 = tmp373*tmp6;
      const real_t tmp375 = tmp27*tmp373;
      const real_t tmp376 = tmp372*(-tmp369 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp377 = tmp29*tmp376;
      const real_t tmp378 = tmp33*tmp376;
      const real_t tmp379 = tmp35*tmp373;
      const real_t tmp380 = tmp37*tmp376;
      const real_t tmp381 = tmp372*(tmp368 - tmp370);
      const real_t tmp382 = tmp381*tmp39;
      const real_t tmp383 = tmp381*tmp43;
      const real_t tmp384 = tmp381*tmp45;
      const real_t tmp385 = 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375 + 0.77270393148826533*tmp377 + 0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp380 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384;
      const real_t tmp386 = tmp372*(-J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp387 = tmp386*tmp6;
      const real_t tmp388 = tmp27*tmp386;
      const real_t tmp389 = tmp372*(J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0));
      const real_t tmp390 = tmp29*tmp389;
      const real_t tmp391 = tmp33*tmp389;
      const real_t tmp392 = tmp35*tmp386;
      const real_t tmp393 = tmp37*tmp389;
      const real_t tmp394 = tmp372*(-J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp395 = tmp39*tmp394;
      const real_t tmp396 = tmp394*tmp43;
      const real_t tmp397 = tmp394*tmp45;
      const real_t tmp398 = tmp75*std::abs(tmp371)*ScalarCoeff0_7;
      const real_t tmp399 = tmp398*(0.77270393148826533*tmp387 + 0.77270393148826533*tmp388 + 0.77270393148826533*tmp390 + 0.77270393148826533*tmp391 + 0.77270393148826533*tmp392 + 0.77270393148826533*tmp393 + 0.77270393148826533*tmp395 + 0.77270393148826533*tmp396 + 0.77270393148826533*tmp397);
      const real_t tmp400 = 0.0077188851041817101*tmp399;
      const real_t tmp401 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp402 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp403 = tmp401 - tmp402;
      const real_t tmp404 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp405 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp406 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp407 = tmp401*J_B_8(2, 2) - tmp402*J_B_8(2, 2) + tmp404*J_B_8(2, 0) - tmp405*J_B_8(2, 1) - tmp406*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp408 = 1.0 / (tmp407);
      const real_t tmp409 = tmp18*tmp408;
      const real_t tmp410 = tmp403*tmp409;
      const real_t tmp411 = tmp410*tmp6;
      const real_t tmp412 = tmp27*tmp410;
      const real_t tmp413 = -tmp405 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp414 = tmp409*tmp413;
      const real_t tmp415 = tmp29*tmp414;
      const real_t tmp416 = tmp33*tmp414;
      const real_t tmp417 = tmp35*tmp410;
      const real_t tmp418 = tmp37*tmp414;
      const real_t tmp419 = tmp404 - tmp406;
      const real_t tmp420 = tmp409*tmp419;
      const real_t tmp421 = tmp39*tmp420;
      const real_t tmp422 = tmp420*tmp43;
      const real_t tmp423 = tmp420*tmp45;
      const real_t tmp424 = -0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp415 - 0.9184440441026207*tmp416 - 0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423;
      const real_t tmp425 = -J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp426 = tmp409*tmp425;
      const real_t tmp427 = tmp426*tmp6;
      const real_t tmp428 = tmp27*tmp426;
      const real_t tmp429 = J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp430 = tmp409*tmp429;
      const real_t tmp431 = tmp29*tmp430;
      const real_t tmp432 = tmp33*tmp430;
      const real_t tmp433 = tmp35*tmp426;
      const real_t tmp434 = tmp37*tmp430;
      const real_t tmp435 = -J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp436 = tmp409*tmp435;
      const real_t tmp437 = tmp39*tmp436;
      const real_t tmp438 = tmp43*tmp436;
      const real_t tmp439 = tmp436*tmp45;
      const real_t tmp440 = tmp75*std::abs(tmp407)*ScalarCoeff0_8;
      const real_t tmp441 = tmp440*(-0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp431 - 0.9184440441026207*tmp432 - 0.9184440441026207*tmp433 - 0.9184440441026207*tmp434 - 0.9184440441026207*tmp437 - 0.9184440441026207*tmp438 - 0.9184440441026207*tmp439);
      const real_t tmp442 = 0.006659242794062166*tmp441;
      const real_t tmp443 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp444 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp445 = tmp443 - tmp444;
      const real_t tmp446 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp447 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp448 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp449 = tmp443*J_B_9(2, 2) - tmp444*J_B_9(2, 2) + tmp446*J_B_9(2, 0) - tmp447*J_B_9(2, 1) - tmp448*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp450 = 1.0 / (tmp449);
      const real_t tmp451 = tmp18*tmp450;
      const real_t tmp452 = tmp445*tmp451;
      const real_t tmp453 = tmp452*tmp6;
      const real_t tmp454 = tmp27*tmp452;
      const real_t tmp455 = -tmp447 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp456 = tmp451*tmp455;
      const real_t tmp457 = tmp29*tmp456;
      const real_t tmp458 = tmp33*tmp456;
      const real_t tmp459 = tmp35*tmp452;
      const real_t tmp460 = tmp37*tmp456;
      const real_t tmp461 = tmp446 - tmp448;
      const real_t tmp462 = tmp451*tmp461;
      const real_t tmp463 = tmp39*tmp462;
      const real_t tmp464 = tmp43*tmp462;
      const real_t tmp465 = tmp45*tmp462;
      const real_t tmp466 = 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454 + 0.37454442704241986*tmp457 + 0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp460 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465;
      const real_t tmp467 = -J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp468 = tmp451*tmp467;
      const real_t tmp469 = tmp468*tmp6;
      const real_t tmp470 = tmp27*tmp468;
      const real_t tmp471 = J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp472 = tmp451*tmp471;
      const real_t tmp473 = tmp29*tmp472;
      const real_t tmp474 = tmp33*tmp472;
      const real_t tmp475 = tmp35*tmp468;
      const real_t tmp476 = tmp37*tmp472;
      const real_t tmp477 = -J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp478 = tmp451*tmp477;
      const real_t tmp479 = tmp39*tmp478;
      const real_t tmp480 = tmp43*tmp478;
      const real_t tmp481 = tmp45*tmp478;
      const real_t tmp482 = tmp75*std::abs(tmp449)*ScalarCoeff0_9;
      const real_t tmp483 = tmp482*(0.37454442704241986*tmp469 + 0.37454442704241986*tmp470 + 0.37454442704241986*tmp473 + 0.37454442704241986*tmp474 + 0.37454442704241986*tmp475 + 0.37454442704241986*tmp476 + 0.37454442704241986*tmp479 + 0.37454442704241986*tmp480 + 0.37454442704241986*tmp481);
      const real_t tmp484 = 0.0061548665412862651*tmp483;
      const real_t tmp485 = tmp36 + tmp38 + tmp46;
      const real_t tmp486 = 0.0072301427194886381*tmp485;
      const real_t tmp487 = tmp101 + tmp95 + tmp96;
      const real_t tmp488 = 0.012344594760863713*tmp487;
      const real_t tmp489 = tmp137 + tmp138 + tmp143;
      const real_t tmp490 = 0.0036548782978011126*tmp489;
      const real_t tmp491 = tmp179 + tmp180 + tmp185;
      const real_t tmp492 = 0.010799549999884401*tmp491;
      const real_t tmp493 = tmp221 + tmp222 + tmp227;
      const real_t tmp494 = 0.012584765868454714*tmp493;
      const real_t tmp495 = tmp263 + tmp264 + tmp269;
      const real_t tmp496 = 0.00083582139204094858*tmp495;
      const real_t tmp497 = tmp302 + tmp303 + tmp307;
      const real_t tmp498 = 0.0040819365333192512*tmp497;
      const real_t tmp499 = tmp340 + tmp341 + tmp346;
      const real_t tmp500 = 0.0045346636251092122*tmp499;
      const real_t tmp501 = tmp379 + tmp380 + tmp384;
      const real_t tmp502 = 0.0061987549215557864*tmp501;
      const real_t tmp503 = tmp417 + tmp418 + tmp423;
      const real_t tmp504 = 0.0045087419239184514*tmp503;
      const real_t tmp505 = tmp459 + tmp460 + tmp465;
      const real_t tmp506 = 0.0044998649071490461*tmp505;
      const real_t tmp507 = tmp28 + tmp34 + tmp44;
      const real_t tmp508 = 0.0067853652681886352*tmp507;
      const real_t tmp509 = tmp100 + tmp90 + tmp94;
      const real_t tmp510 = 0.0041416969702195786*tmp509;
      const real_t tmp511 = tmp132 + tmp136 + tmp142;
      const real_t tmp512 = 0.0013137068218914037*tmp511;
      const real_t tmp513 = tmp174 + tmp178 + tmp184;
      const real_t tmp514 = 0.0038818597778972029*tmp513;
      const real_t tmp515 = tmp216 + tmp220 + tmp226;
      const real_t tmp516 = 0.010066964965131993*tmp515;
      const real_t tmp517 = tmp258 + tmp262 + tmp268;
      const real_t tmp518 = 0.0046804043242939224*tmp517;
      const real_t tmp519 = tmp298 + tmp301 + tmp306;
      const real_t tmp520 = 0.0097490714046835261*tmp519;
      const real_t tmp521 = tmp335 + tmp339 + tmp345;
      const real_t tmp522 = 0.0085077884791842431*tmp521;
      const real_t tmp523 = tmp375 + tmp378 + tmp383;
      const real_t tmp524 = 0.0056487878897383461*tmp523;
      const real_t tmp525 = tmp412 + tmp416 + tmp422;
      const real_t tmp526 = 0.005238393734043144*tmp525;
      const real_t tmp527 = tmp454 + tmp458 + tmp464;
      const real_t tmp528 = 0.012093792842045984*tmp527;
      const real_t tmp529 = tmp26 + tmp32 + tmp42;
      const real_t tmp530 = 0.020554974928565235*tmp529;
      const real_t tmp531 = tmp89 + tmp93 + tmp99;
      const real_t tmp532 = 0.0044685602754798454*tmp531;
      const real_t tmp533 = tmp131 + tmp135 + tmp141;
      const real_t tmp534 = 0.0041246668394316508*tmp533;
      const real_t tmp535 = tmp173 + tmp177 + tmp183;
      const real_t tmp536 = 0.0033267985952381263*tmp535;
      const real_t tmp537 = tmp215 + tmp219 + tmp225;
      const real_t tmp538 = 0.0071511654955033511*tmp537;
      const real_t tmp539 = tmp257 + tmp261 + tmp267;
      const real_t tmp540 = 0.010590168103918869*tmp539;
      const real_t tmp541 = tmp297 + tmp300 + tmp305;
      const real_t tmp542 = 0.0027144532136395704*tmp541;
      const real_t tmp543 = tmp334 + tmp338 + tmp344;
      const real_t tmp544 = 0.0019942799754541058*tmp543;
      const real_t tmp545 = tmp374 + tmp377 + tmp382;
      const real_t tmp546 = 0.005883129944586717*tmp545;
      const real_t tmp547 = tmp411 + tmp415 + tmp421;
      const real_t tmp548 = 0.0053864900723149976*tmp547;
      const real_t tmp549 = tmp453 + tmp457 + tmp463;
      const real_t tmp550 = 0.0052886569726683132*tmp549;
      const real_t tmp551 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp552 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp553 = tmp551 + tmp552;
      const real_t tmp554 = 0.2723974837528258*tmp100 + 0.2723974837528258*tmp90 + 0.2723974837528258*tmp94;
      const real_t tmp555 = 0.3256196736114374*tmp89 + 0.3256196736114374*tmp93 + 0.3256196736114374*tmp99;
      const real_t tmp556 = tmp554 + tmp555;
      const real_t tmp557 = 0.054242807519210512*tmp132 + 0.054242807519210512*tmp136 + 0.054242807519210512*tmp142;
      const real_t tmp558 = 0.69877623478892303*tmp131 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp141;
      const real_t tmp559 = tmp557 + tmp558;
      const real_t tmp560 = 1.2716142408535775*tmp174 + 1.2716142408535775*tmp178 + 1.2716142408535775*tmp184;
      const real_t tmp561 = 1.3169318389705873*tmp173 + 1.3169318389705873*tmp177 + 1.3169318389705873*tmp183;
      const real_t tmp562 = tmp560 + tmp561;
      const real_t tmp563 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp220 + 1.4152929568371884*tmp226;
      const real_t tmp564 = 0.41537646564397157*tmp215 + 0.41537646564397157*tmp219 + 0.41537646564397157*tmp225;
      const real_t tmp565 = tmp563 + tmp564;
      const real_t tmp566 = 0.50720690366156718*tmp258 + 0.50720690366156718*tmp262 + 0.50720690366156718*tmp268;
      const real_t tmp567 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp261 + 1.2177936097379878*tmp267;
      const real_t tmp568 = tmp566 + tmp567;
      const real_t tmp569 = 1.3207616593498592*tmp298 + 1.3207616593498592*tmp301 + 1.3207616593498592*tmp306;
      const real_t tmp570 = 2.1520288156647434*tmp297 + 2.1520288156647434*tmp300 + 2.1520288156647434*tmp305;
      const real_t tmp571 = tmp569 + tmp570;
      const real_t tmp572 = 1.2259759537187613*tmp335 + 1.2259759537187613*tmp339 + 1.2259759537187613*tmp345;
      const real_t tmp573 = 0.035965040373342916*tmp334 + 0.035965040373342916*tmp338 + 0.035965040373342916*tmp344;
      const real_t tmp574 = tmp572 + tmp573;
      const real_t tmp575 = 0.23782646519773576*tmp375 + 0.23782646519773576*tmp378 + 0.23782646519773576*tmp383;
      const real_t tmp576 = 1.7318139619254227*tmp374 + 1.7318139619254227*tmp377 + 1.7318139619254227*tmp382;
      const real_t tmp577 = tmp575 + tmp576;
      const real_t tmp578 = 0.19112574223634571*tmp412 + 0.19112574223634571*tmp416 + 0.19112574223634571*tmp422;
      const real_t tmp579 = 0.21336495814298084*tmp411 + 0.21336495814298084*tmp415 + 0.21336495814298084*tmp421;
      const real_t tmp580 = tmp578 + tmp579;
      const real_t tmp581 = 0.14073571909439453*tmp454 + 0.14073571909439453*tmp458 + 0.14073571909439453*tmp464;
      const real_t tmp582 = 2.9649155283744921*tmp453 + 2.9649155283744921*tmp457 + 2.9649155283744921*tmp463;
      const real_t tmp583 = tmp581 + tmp582;
      const real_t tmp584 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp585 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp586 = tmp584 + tmp585;
      const real_t tmp587 = 0.2723974837528258*tmp101 + 0.2723974837528258*tmp95 + 0.2723974837528258*tmp96;
      const real_t tmp588 = 3.0100340280386204*tmp89 + 3.0100340280386204*tmp93 + 3.0100340280386204*tmp99;
      const real_t tmp589 = tmp587 + tmp588;
      const real_t tmp590 = 0.054242807519210512*tmp137 + 0.054242807519210512*tmp138 + 0.054242807519210512*tmp143;
      const real_t tmp591 = 0.16196202691036121*tmp131 + 0.16196202691036121*tmp135 + 0.16196202691036121*tmp141;
      const real_t tmp592 = tmp590 + tmp591;
      const real_t tmp593 = 1.2716142408535775*tmp179 + 1.2716142408535775*tmp180 + 1.2716142408535775*tmp185;
      const real_t tmp594 = 0.11827798082591956*tmp173 + 0.11827798082591956*tmp177 + 0.11827798082591956*tmp183;
      const real_t tmp595 = tmp593 + tmp594;
      const real_t tmp596 = 1.4152929568371884*tmp221 + 1.4152929568371884*tmp222 + 1.4152929568371884*tmp227;
      const real_t tmp597 = 1.730840956191074*tmp215 + 1.730840956191074*tmp219 + 1.730840956191074*tmp225;
      const real_t tmp598 = tmp596 + tmp597;
      const real_t tmp599 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp269;
      const real_t tmp600 = 0.96110665971229103*tmp257 + 0.96110665971229103*tmp261 + 0.96110665971229103*tmp267;
      const real_t tmp601 = tmp599 + tmp600;
      const real_t tmp602 = 1.3207616593498592*tmp302 + 1.3207616593498592*tmp303 + 1.3207616593498592*tmp307;
      const real_t tmp603 = 0.51764549515564062*tmp297 + 0.51764549515564062*tmp300 + 0.51764549515564062*tmp305;
      const real_t tmp604 = tmp602 + tmp603;
      const real_t tmp605 = 1.2259759537187613*tmp340 + 1.2259759537187613*tmp341 + 1.2259759537187613*tmp346;
      const real_t tmp606 = 0.48616796533571183*tmp334 + 0.48616796533571183*tmp338 + 0.48616796533571183*tmp344;
      const real_t tmp607 = tmp605 + tmp606;
      const real_t tmp608 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp380 + 0.23782646519773576*tmp384;
      const real_t tmp609 = 1.8030635043651069*tmp374 + 1.8030635043651069*tmp377 + 1.8030635043651069*tmp382;
      const real_t tmp610 = tmp608 + tmp609;
      const real_t tmp611 = 0.19112574223634571*tmp417 + 0.19112574223634571*tmp418 + 0.19112574223634571*tmp423;
      const real_t tmp612 = 1.6770652555180527*tmp411 + 1.6770652555180527*tmp415 + 1.6770652555180527*tmp421;
      const real_t tmp613 = tmp611 + tmp612;
      const real_t tmp614 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp460 + 0.14073571909439453*tmp465;
      const real_t tmp615 = 0.2688931795735332*tmp453 + 0.2688931795735332*tmp457 + 0.2688931795735332*tmp463;
      const real_t tmp616 = tmp614 + tmp615;
      const real_t tmp617 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp618 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp619 = tmp617 + tmp618;
      const real_t tmp620 = 0.3256196736114374*tmp101 + 0.3256196736114374*tmp95 + 0.3256196736114374*tmp96;
      const real_t tmp621 = 3.0100340280386204*tmp100 + 3.0100340280386204*tmp90 + 3.0100340280386204*tmp94;
      const real_t tmp622 = tmp620 + tmp621;
      const real_t tmp623 = 0.69877623478892303*tmp137 + 0.69877623478892303*tmp138 + 0.69877623478892303*tmp143;
      const real_t tmp624 = 0.16196202691036121*tmp132 + 0.16196202691036121*tmp136 + 0.16196202691036121*tmp142;
      const real_t tmp625 = tmp623 + tmp624;
      const real_t tmp626 = 1.3169318389705873*tmp179 + 1.3169318389705873*tmp180 + 1.3169318389705873*tmp185;
      const real_t tmp627 = 0.11827798082591956*tmp174 + 0.11827798082591956*tmp178 + 0.11827798082591956*tmp184;
      const real_t tmp628 = tmp626 + tmp627;
      const real_t tmp629 = 0.41537646564397157*tmp221 + 0.41537646564397157*tmp222 + 0.41537646564397157*tmp227;
      const real_t tmp630 = 1.730840956191074*tmp216 + 1.730840956191074*tmp220 + 1.730840956191074*tmp226;
      const real_t tmp631 = tmp629 + tmp630;
      const real_t tmp632 = 1.2177936097379878*tmp263 + 1.2177936097379878*tmp264 + 1.2177936097379878*tmp269;
      const real_t tmp633 = 0.96110665971229103*tmp258 + 0.96110665971229103*tmp262 + 0.96110665971229103*tmp268;
      const real_t tmp634 = tmp632 + tmp633;
      const real_t tmp635 = 2.1520288156647434*tmp302 + 2.1520288156647434*tmp303 + 2.1520288156647434*tmp307;
      const real_t tmp636 = 0.51764549515564062*tmp298 + 0.51764549515564062*tmp301 + 0.51764549515564062*tmp306;
      const real_t tmp637 = tmp635 + tmp636;
      const real_t tmp638 = 0.035965040373342916*tmp340 + 0.035965040373342916*tmp341 + 0.035965040373342916*tmp346;
      const real_t tmp639 = 0.48616796533571183*tmp335 + 0.48616796533571183*tmp339 + 0.48616796533571183*tmp345;
      const real_t tmp640 = tmp638 + tmp639;
      const real_t tmp641 = 1.7318139619254227*tmp379 + 1.7318139619254227*tmp380 + 1.7318139619254227*tmp384;
      const real_t tmp642 = 1.8030635043651069*tmp375 + 1.8030635043651069*tmp378 + 1.8030635043651069*tmp383;
      const real_t tmp643 = tmp641 + tmp642;
      const real_t tmp644 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp418 + 0.21336495814298084*tmp423;
      const real_t tmp645 = 1.6770652555180527*tmp412 + 1.6770652555180527*tmp416 + 1.6770652555180527*tmp422;
      const real_t tmp646 = tmp644 + tmp645;
      const real_t tmp647 = 2.9649155283744921*tmp459 + 2.9649155283744921*tmp460 + 2.9649155283744921*tmp465;
      const real_t tmp648 = 0.2688931795735332*tmp454 + 0.2688931795735332*tmp458 + 0.2688931795735332*tmp464;
      const real_t tmp649 = tmp647 + tmp648;
      const real_t tmp650 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - 2.2903585922226259*tmp42 - tmp551 - tmp584;
      const real_t tmp651 = 0.11955133084429059*tmp18*tmp29*tmp86*tmp91 + 0.11955133084429059*tmp18*tmp39*tmp86*tmp97 + 0.11955133084429059*tmp18*tmp6*tmp81*tmp86 - tmp554 - tmp587;
      const real_t tmp652 = 3.030776123262295*tmp123*tmp128*tmp18*tmp6 + 3.030776123262295*tmp128*tmp133*tmp18*tmp29 + 3.030776123262295*tmp128*tmp139*tmp18*tmp39 - tmp557 - tmp590;
      const real_t tmp653 = 0.021561698496338266*tmp165*tmp170*tmp18*tmp6 + 0.021561698496338266*tmp170*tmp175*tmp18*tmp29 + 0.021561698496338266*tmp170*tmp18*tmp181*tmp39 - tmp560 - tmp593;
      const real_t tmp654 = -0.97680333550942233*tmp215 - 0.97680333550942233*tmp219 - 0.97680333550942233*tmp225 - tmp563 - tmp596;
      const real_t tmp655 = 0.80668592322658683*tmp18*tmp249*tmp254*tmp6 + 0.80668592322658683*tmp18*tmp254*tmp259*tmp29 + 0.80668592322658683*tmp18*tmp254*tmp265*tmp39 - tmp566 - tmp599;
      const real_t tmp656 = -1.3111976295201027*tmp297 - 1.3111976295201027*tmp300 - 1.3111976295201027*tmp305 - tmp569 - tmp602;
      const real_t tmp657 = 1.0259150868534226*tmp18*tmp29*tmp331*tmp336 + 1.0259150868534226*tmp18*tmp326*tmp331*tmp6 + 1.0259150868534226*tmp18*tmp331*tmp342*tmp39 - tmp572 - tmp605;
      const real_t tmp658 = -0.010530396686001087*tmp374 - 0.010530396686001087*tmp377 - 0.010530396686001087*tmp382 - tmp575 - tmp608;
      const real_t tmp659 = 1.727318301866275*tmp18*tmp29*tmp408*tmp413 + 1.727318301866275*tmp18*tmp39*tmp408*tmp419 + 1.727318301866275*tmp18*tmp403*tmp408*tmp6 - tmp578 - tmp611;
      const real_t tmp660 = 0.48471985386318561*tmp18*tmp29*tmp450*tmp455 + 0.48471985386318561*tmp18*tmp39*tmp450*tmp461 + 0.48471985386318561*tmp18*tmp445*tmp450*tmp6 - tmp581 - tmp614;
      const real_t tmp661 = 0.020786379341558803*tmp18*tmp23*tmp27*tmp9 + 0.020786379341558803*tmp18*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp18*tmp23*tmp40*tmp43 - tmp552 - tmp617;
      const real_t tmp662 = 0.066329140985678992*tmp18*tmp27*tmp81*tmp86 + 0.066329140985678992*tmp18*tmp33*tmp86*tmp91 + 0.066329140985678992*tmp18*tmp43*tmp86*tmp97 - tmp555 - tmp620;
      const real_t tmp663 = 2.3862426959925824*tmp123*tmp128*tmp18*tmp27 + 2.3862426959925824*tmp128*tmp133*tmp18*tmp33 + 2.3862426959925824*tmp128*tmp139*tmp18*tmp43 - tmp558 - tmp623;
      const real_t tmp664 = -0.023755899620671705*tmp174 - 0.023755899620671705*tmp178 - 0.023755899620671705*tmp184 - tmp561 - tmp626;
      const real_t tmp665 = 0.023113155683794462*tmp18*tmp207*tmp212*tmp27 + 0.023113155683794462*tmp18*tmp212*tmp217*tmp33 + 0.023113155683794462*tmp18*tmp212*tmp223*tmp43 - tmp564 - tmp629;
      const real_t tmp666 = 0.096099217150166227*tmp18*tmp249*tmp254*tmp27 + 0.096099217150166227*tmp18*tmp254*tmp259*tmp33 + 0.096099217150166227*tmp18*tmp254*tmp265*tmp43 - tmp567 - tmp632;
      const real_t tmp667 = -2.1424647858349868*tmp298 - 2.1424647858349868*tmp301 - 2.1424647858349868*tmp306 - tmp570 - tmp635;
      const real_t tmp668 = 2.215926000198841*tmp18*tmp27*tmp326*tmp331 + 2.215926000198841*tmp18*tmp33*tmp331*tmp336 + 2.215926000198841*tmp18*tmp331*tmp342*tmp43 - tmp573 - tmp638;
      const real_t tmp669 = -1.504517893413688*tmp375 - 1.504517893413688*tmp378 - 1.504517893413688*tmp383 - tmp576 - tmp641;
      const real_t tmp670 = 1.7050790859596399*tmp18*tmp27*tmp403*tmp408 + 1.7050790859596399*tmp18*tmp33*tmp408*tmp413 + 1.7050790859596399*tmp18*tmp408*tmp419*tmp43 - tmp579 - tmp644;
      const real_t tmp671 = -2.339459955416912*tmp454 - 2.339459955416912*tmp458 - 2.339459955416912*tmp464 - tmp582 - tmp647;
      const real_t tmp672 = 0.058384491239200198*tmp18*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp18*tmp23*tmp35*tmp9 + 0.058384491239200198*tmp18*tmp23*tmp40*tmp45 - tmp585 - tmp618;
      const real_t tmp673 = -2.6180852134415042*tmp101 - tmp588 - tmp621 - 2.6180852134415042*tmp95 - 2.6180852134415042*tmp96;
      const real_t tmp674 = 2.923056903871144*tmp123*tmp128*tmp18*tmp35 + 2.923056903871144*tmp128*tmp133*tmp18*tmp37 + 2.923056903871144*tmp128*tmp139*tmp18*tmp45 - tmp591 - tmp624;
      const real_t tmp675 = 1.1748979585239958*tmp165*tmp170*tmp18*tmp35 + 1.1748979585239958*tmp170*tmp175*tmp18*tmp37 + 1.1748979585239958*tmp170*tmp18*tmp181*tmp45 - tmp594 - tmp627;
      const real_t tmp676 = -1.292351334863308*tmp221 - 1.292351334863308*tmp222 - 1.292351334863308*tmp227 - tmp597 - tmp630;
      const real_t tmp677 = 0.35278616717586297*tmp18*tmp249*tmp254*tmp35 + 0.35278616717586297*tmp18*tmp254*tmp259*tmp37 + 0.35278616717586297*tmp18*tmp254*tmp265*tmp45 - tmp600 - tmp633;
      const real_t tmp678 = -0.50808146532588383*tmp302 - 0.50808146532588383*tmp303 - 0.50808146532588383*tmp307 - tmp603 - tmp636;
      const real_t tmp679 = 1.7657230752364721*tmp18*tmp326*tmp331*tmp35 + 1.7657230752364721*tmp18*tmp331*tmp336*tmp37 + 1.7657230752364721*tmp18*tmp331*tmp342*tmp45 - tmp606 - tmp639;
      const real_t tmp680 = -1.5757674358533722*tmp379 - 1.5757674358533722*tmp380 - 1.5757674358533722*tmp384 - tmp609 - tmp642;
      const real_t tmp681 = 0.24137878858456796*tmp18*tmp35*tmp403*tmp408 + 0.24137878858456796*tmp18*tmp37*tmp408*tmp413 + 0.24137878858456796*tmp18*tmp408*tmp419*tmp45 - tmp612 - tmp645;
      const real_t tmp682 = 0.35656239338404694*tmp18*tmp35*tmp445*tmp450 + 0.35656239338404694*tmp18*tmp37*tmp450*tmp455 + 0.35656239338404694*tmp18*tmp45*tmp450*tmp461 - tmp615 - tmp648;
      const real_t tmp683 = tmp76*(tmp56 + tmp57 + tmp62);
      const real_t tmp684 = 0.0072301427194886381*tmp683;
      const real_t tmp685 = tmp118*(tmp111 + tmp112 + tmp117);
      const real_t tmp686 = 0.012344594760863713*tmp685;
      const real_t tmp687 = tmp160*(tmp153 + tmp154 + tmp159);
      const real_t tmp688 = 0.0036548782978011126*tmp687;
      const real_t tmp689 = tmp202*(tmp195 + tmp196 + tmp201);
      const real_t tmp690 = 0.010799549999884401*tmp689;
      const real_t tmp691 = tmp244*(tmp237 + tmp238 + tmp243);
      const real_t tmp692 = 0.012584765868454714*tmp691;
      const real_t tmp693 = tmp286*(tmp279 + tmp280 + tmp285);
      const real_t tmp694 = 0.00083582139204094858*tmp693;
      const real_t tmp695 = tmp321*(tmp315 + tmp316 + tmp320);
      const real_t tmp696 = 0.0040819365333192512*tmp695;
      const real_t tmp697 = tmp363*(tmp356 + tmp357 + tmp362);
      const real_t tmp698 = 0.0045346636251092122*tmp697;
      const real_t tmp699 = tmp398*(tmp392 + tmp393 + tmp397);
      const real_t tmp700 = 0.0061987549215557864*tmp699;
      const real_t tmp701 = tmp440*(tmp433 + tmp434 + tmp439);
      const real_t tmp702 = 0.0045087419239184514*tmp701;
      const real_t tmp703 = tmp482*(tmp475 + tmp476 + tmp481);
      const real_t tmp704 = 0.0044998649071490461*tmp703;
      const real_t tmp705 = tmp76*(tmp51 + tmp55 + tmp61);
      const real_t tmp706 = 0.0067853652681886352*tmp705;
      const real_t tmp707 = tmp118*(tmp106 + tmp110 + tmp116);
      const real_t tmp708 = 0.0041416969702195786*tmp707;
      const real_t tmp709 = tmp160*(tmp148 + tmp152 + tmp158);
      const real_t tmp710 = 0.0013137068218914037*tmp709;
      const real_t tmp711 = tmp202*(tmp190 + tmp194 + tmp200);
      const real_t tmp712 = 0.0038818597778972029*tmp711;
      const real_t tmp713 = tmp244*(tmp232 + tmp236 + tmp242);
      const real_t tmp714 = 0.010066964965131993*tmp713;
      const real_t tmp715 = tmp286*(tmp274 + tmp278 + tmp284);
      const real_t tmp716 = 0.0046804043242939224*tmp715;
      const real_t tmp717 = tmp321*(tmp311 + tmp314 + tmp319);
      const real_t tmp718 = 0.0097490714046835261*tmp717;
      const real_t tmp719 = tmp363*(tmp351 + tmp355 + tmp361);
      const real_t tmp720 = 0.0085077884791842431*tmp719;
      const real_t tmp721 = tmp398*(tmp388 + tmp391 + tmp396);
      const real_t tmp722 = 0.0056487878897383461*tmp721;
      const real_t tmp723 = tmp440*(tmp428 + tmp432 + tmp438);
      const real_t tmp724 = 0.005238393734043144*tmp723;
      const real_t tmp725 = tmp482*(tmp470 + tmp474 + tmp480);
      const real_t tmp726 = 0.012093792842045984*tmp725;
      const real_t tmp727 = tmp76*(tmp50 + tmp54 + tmp60);
      const real_t tmp728 = 0.020554974928565235*tmp727;
      const real_t tmp729 = tmp118*(tmp105 + tmp109 + tmp115);
      const real_t tmp730 = 0.0044685602754798454*tmp729;
      const real_t tmp731 = tmp160*(tmp147 + tmp151 + tmp157);
      const real_t tmp732 = 0.0041246668394316508*tmp731;
      const real_t tmp733 = tmp202*(tmp189 + tmp193 + tmp199);
      const real_t tmp734 = 0.0033267985952381263*tmp733;
      const real_t tmp735 = tmp244*(tmp231 + tmp235 + tmp241);
      const real_t tmp736 = 0.0071511654955033511*tmp735;
      const real_t tmp737 = tmp286*(tmp273 + tmp277 + tmp283);
      const real_t tmp738 = 0.010590168103918869*tmp737;
      const real_t tmp739 = tmp321*(tmp310 + tmp313 + tmp318);
      const real_t tmp740 = 0.0027144532136395704*tmp739;
      const real_t tmp741 = tmp363*(tmp350 + tmp354 + tmp360);
      const real_t tmp742 = 0.0019942799754541058*tmp741;
      const real_t tmp743 = tmp398*(tmp387 + tmp390 + tmp395);
      const real_t tmp744 = 0.005883129944586717*tmp743;
      const real_t tmp745 = tmp440*(tmp427 + tmp431 + tmp437);
      const real_t tmp746 = 0.0053864900723149976*tmp745;
      const real_t tmp747 = tmp482*(tmp469 + tmp473 + tmp479);
      const real_t tmp748 = 0.0052886569726683132*tmp747;
      const real_t tmp749 = 2.7375616618121592*tmp51 + 2.7375616618121592*tmp55 + 2.7375616618121592*tmp61;
      const real_t tmp750 = 0.42641669024797446*tmp50 + 0.42641669024797446*tmp54 + 0.42641669024797446*tmp60;
      const real_t tmp751 = tmp76*(tmp749 + tmp750);
      const real_t tmp752 = 0.011829781572832234*tmp751;
      const real_t tmp753 = 0.2723974837528258*tmp106 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp116;
      const real_t tmp754 = 0.3256196736114374*tmp105 + 0.3256196736114374*tmp109 + 0.3256196736114374*tmp115;
      const real_t tmp755 = tmp118*(tmp753 + tmp754);
      const real_t tmp756 = 0.0061414854617707626*tmp755;
      const real_t tmp757 = 0.054242807519210512*tmp148 + 0.054242807519210512*tmp152 + 0.054242807519210512*tmp158;
      const real_t tmp758 = 0.69877623478892303*tmp147 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp157;
      const real_t tmp759 = tmp160*(tmp757 + tmp758);
      const real_t tmp760 = 0.0043612323249822204*tmp759;
      const real_t tmp761 = 1.2716142408535775*tmp190 + 1.2716142408535775*tmp194 + 1.2716142408535775*tmp200;
      const real_t tmp762 = 1.3169318389705873*tmp189 + 1.3169318389705873*tmp193 + 1.3169318389705873*tmp199;
      const real_t tmp763 = tmp202*(tmp761 + tmp762);
      const real_t tmp764 = 0.012248248047610821*tmp763;
      const real_t tmp765 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp236 + 1.4152929568371884*tmp242;
      const real_t tmp766 = 0.41537646564397157*tmp231 + 0.41537646564397157*tmp235 + 0.41537646564397157*tmp241;
      const real_t tmp767 = tmp244*(tmp765 + tmp766);
      const real_t tmp768 = 0.017219568446249611*tmp767;
      const real_t tmp769 = 0.50720690366156718*tmp274 + 0.50720690366156718*tmp278 + 0.50720690366156718*tmp284;
      const real_t tmp770 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp277 + 1.2177936097379878*tmp283;
      const real_t tmp771 = tmp286*(tmp769 + tmp770);
      const real_t tmp772 = 0.021490090227737114*tmp771;
      const real_t tmp773 = 1.3207616593498592*tmp311 + 1.3207616593498592*tmp314 + 1.3207616593498592*tmp319;
      const real_t tmp774 = 2.1520288156647434*tmp310 + 2.1520288156647434*tmp313 + 2.1520288156647434*tmp318;
      const real_t tmp775 = tmp321*(tmp773 + tmp774);
      const real_t tmp776 = 0.0084625239161731543*tmp775;
      const real_t tmp777 = 1.2259759537187613*tmp351 + 1.2259759537187613*tmp355 + 1.2259759537187613*tmp361;
      const real_t tmp778 = 0.035965040373342916*tmp350 + 0.035965040373342916*tmp354 + 0.035965040373342916*tmp360;
      const real_t tmp779 = tmp363*(tmp777 + tmp778);
      const real_t tmp780 = 0.0088251866742250357*tmp779;
      const real_t tmp781 = 0.23782646519773576*tmp388 + 0.23782646519773576*tmp391 + 0.23782646519773576*tmp396;
      const real_t tmp782 = 1.7318139619254227*tmp387 + 1.7318139619254227*tmp390 + 1.7318139619254227*tmp395;
      const real_t tmp783 = tmp398*(tmp781 + tmp782);
      const real_t tmp784 = 0.0077188851041817101*tmp783;
      const real_t tmp785 = 0.19112574223634571*tmp428 + 0.19112574223634571*tmp432 + 0.19112574223634571*tmp438;
      const real_t tmp786 = 0.21336495814298084*tmp427 + 0.21336495814298084*tmp431 + 0.21336495814298084*tmp437;
      const real_t tmp787 = tmp440*(tmp785 + tmp786);
      const real_t tmp788 = 0.006659242794062166*tmp787;
      const real_t tmp789 = 0.14073571909439453*tmp470 + 0.14073571909439453*tmp474 + 0.14073571909439453*tmp480;
      const real_t tmp790 = 2.9649155283744921*tmp469 + 2.9649155283744921*tmp473 + 2.9649155283744921*tmp479;
      const real_t tmp791 = tmp482*(tmp789 + tmp790);
      const real_t tmp792 = 0.0061548665412862651*tmp791;
      const real_t tmp793 = 2.7375616618121592*tmp56 + 2.7375616618121592*tmp57 + 2.7375616618121592*tmp62;
      const real_t tmp794 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp795 = tmp76*(tmp793 + tmp794);
      const real_t tmp796 = 0.011829781572832234*tmp795;
      const real_t tmp797 = 0.2723974837528258*tmp111 + 0.2723974837528258*tmp112 + 0.2723974837528258*tmp117;
      const real_t tmp798 = 3.0100340280386204*tmp105 + 3.0100340280386204*tmp109 + 3.0100340280386204*tmp115;
      const real_t tmp799 = tmp118*(tmp797 + tmp798);
      const real_t tmp800 = 0.0061414854617707626*tmp799;
      const real_t tmp801 = 0.054242807519210512*tmp153 + 0.054242807519210512*tmp154 + 0.054242807519210512*tmp159;
      const real_t tmp802 = 0.16196202691036121*tmp147 + 0.16196202691036121*tmp151 + 0.16196202691036121*tmp157;
      const real_t tmp803 = tmp160*(tmp801 + tmp802);
      const real_t tmp804 = 0.0043612323249822204*tmp803;
      const real_t tmp805 = 1.2716142408535775*tmp195 + 1.2716142408535775*tmp196 + 1.2716142408535775*tmp201;
      const real_t tmp806 = 0.11827798082591956*tmp189 + 0.11827798082591956*tmp193 + 0.11827798082591956*tmp199;
      const real_t tmp807 = tmp202*(tmp805 + tmp806);
      const real_t tmp808 = 0.012248248047610821*tmp807;
      const real_t tmp809 = 1.4152929568371884*tmp237 + 1.4152929568371884*tmp238 + 1.4152929568371884*tmp243;
      const real_t tmp810 = 1.730840956191074*tmp231 + 1.730840956191074*tmp235 + 1.730840956191074*tmp241;
      const real_t tmp811 = tmp244*(tmp809 + tmp810);
      const real_t tmp812 = 0.017219568446249611*tmp811;
      const real_t tmp813 = 0.50720690366156718*tmp279 + 0.50720690366156718*tmp280 + 0.50720690366156718*tmp285;
      const real_t tmp814 = 0.96110665971229103*tmp273 + 0.96110665971229103*tmp277 + 0.96110665971229103*tmp283;
      const real_t tmp815 = tmp286*(tmp813 + tmp814);
      const real_t tmp816 = 0.021490090227737114*tmp815;
      const real_t tmp817 = 1.3207616593498592*tmp315 + 1.3207616593498592*tmp316 + 1.3207616593498592*tmp320;
      const real_t tmp818 = 0.51764549515564062*tmp310 + 0.51764549515564062*tmp313 + 0.51764549515564062*tmp318;
      const real_t tmp819 = tmp321*(tmp817 + tmp818);
      const real_t tmp820 = 0.0084625239161731543*tmp819;
      const real_t tmp821 = 1.2259759537187613*tmp356 + 1.2259759537187613*tmp357 + 1.2259759537187613*tmp362;
      const real_t tmp822 = 0.48616796533571183*tmp350 + 0.48616796533571183*tmp354 + 0.48616796533571183*tmp360;
      const real_t tmp823 = tmp363*(tmp821 + tmp822);
      const real_t tmp824 = 0.0088251866742250357*tmp823;
      const real_t tmp825 = 0.23782646519773576*tmp392 + 0.23782646519773576*tmp393 + 0.23782646519773576*tmp397;
      const real_t tmp826 = 1.8030635043651069*tmp387 + 1.8030635043651069*tmp390 + 1.8030635043651069*tmp395;
      const real_t tmp827 = tmp398*(tmp825 + tmp826);
      const real_t tmp828 = 0.0077188851041817101*tmp827;
      const real_t tmp829 = 0.19112574223634571*tmp433 + 0.19112574223634571*tmp434 + 0.19112574223634571*tmp439;
      const real_t tmp830 = 1.6770652555180527*tmp427 + 1.6770652555180527*tmp431 + 1.6770652555180527*tmp437;
      const real_t tmp831 = tmp440*(tmp829 + tmp830);
      const real_t tmp832 = 0.006659242794062166*tmp831;
      const real_t tmp833 = 0.14073571909439453*tmp475 + 0.14073571909439453*tmp476 + 0.14073571909439453*tmp481;
      const real_t tmp834 = 0.2688931795735332*tmp469 + 0.2688931795735332*tmp473 + 0.2688931795735332*tmp479;
      const real_t tmp835 = tmp482*(tmp833 + tmp834);
      const real_t tmp836 = 0.0061548665412862651*tmp835;
      const real_t tmp837 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp57 + 0.42641669024797446*tmp62;
      const real_t tmp838 = 0.38881857835033307*tmp51 + 0.38881857835033307*tmp55 + 0.38881857835033307*tmp61;
      const real_t tmp839 = tmp76*(tmp837 + tmp838);
      const real_t tmp840 = 0.011829781572832234*tmp839;
      const real_t tmp841 = 0.3256196736114374*tmp111 + 0.3256196736114374*tmp112 + 0.3256196736114374*tmp117;
      const real_t tmp842 = 3.0100340280386204*tmp106 + 3.0100340280386204*tmp110 + 3.0100340280386204*tmp116;
      const real_t tmp843 = tmp118*(tmp841 + tmp842);
      const real_t tmp844 = 0.0061414854617707626*tmp843;
      const real_t tmp845 = 0.69877623478892303*tmp153 + 0.69877623478892303*tmp154 + 0.69877623478892303*tmp159;
      const real_t tmp846 = 0.16196202691036121*tmp148 + 0.16196202691036121*tmp152 + 0.16196202691036121*tmp158;
      const real_t tmp847 = tmp160*(tmp845 + tmp846);
      const real_t tmp848 = 0.0043612323249822204*tmp847;
      const real_t tmp849 = 1.3169318389705873*tmp195 + 1.3169318389705873*tmp196 + 1.3169318389705873*tmp201;
      const real_t tmp850 = 0.11827798082591956*tmp190 + 0.11827798082591956*tmp194 + 0.11827798082591956*tmp200;
      const real_t tmp851 = tmp202*(tmp849 + tmp850);
      const real_t tmp852 = 0.012248248047610821*tmp851;
      const real_t tmp853 = 0.41537646564397157*tmp237 + 0.41537646564397157*tmp238 + 0.41537646564397157*tmp243;
      const real_t tmp854 = 1.730840956191074*tmp232 + 1.730840956191074*tmp236 + 1.730840956191074*tmp242;
      const real_t tmp855 = tmp244*(tmp853 + tmp854);
      const real_t tmp856 = 0.017219568446249611*tmp855;
      const real_t tmp857 = 1.2177936097379878*tmp279 + 1.2177936097379878*tmp280 + 1.2177936097379878*tmp285;
      const real_t tmp858 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp278 + 0.96110665971229103*tmp284;
      const real_t tmp859 = tmp286*(tmp857 + tmp858);
      const real_t tmp860 = 0.021490090227737114*tmp859;
      const real_t tmp861 = 2.1520288156647434*tmp315 + 2.1520288156647434*tmp316 + 2.1520288156647434*tmp320;
      const real_t tmp862 = 0.51764549515564062*tmp311 + 0.51764549515564062*tmp314 + 0.51764549515564062*tmp319;
      const real_t tmp863 = tmp321*(tmp861 + tmp862);
      const real_t tmp864 = 0.0084625239161731543*tmp863;
      const real_t tmp865 = 0.035965040373342916*tmp356 + 0.035965040373342916*tmp357 + 0.035965040373342916*tmp362;
      const real_t tmp866 = 0.48616796533571183*tmp351 + 0.48616796533571183*tmp355 + 0.48616796533571183*tmp361;
      const real_t tmp867 = tmp363*(tmp865 + tmp866);
      const real_t tmp868 = 0.0088251866742250357*tmp867;
      const real_t tmp869 = 1.7318139619254227*tmp392 + 1.7318139619254227*tmp393 + 1.7318139619254227*tmp397;
      const real_t tmp870 = 1.8030635043651069*tmp388 + 1.8030635043651069*tmp391 + 1.8030635043651069*tmp396;
      const real_t tmp871 = tmp398*(tmp869 + tmp870);
      const real_t tmp872 = 0.0077188851041817101*tmp871;
      const real_t tmp873 = 0.21336495814298084*tmp433 + 0.21336495814298084*tmp434 + 0.21336495814298084*tmp439;
      const real_t tmp874 = 1.6770652555180527*tmp428 + 1.6770652555180527*tmp432 + 1.6770652555180527*tmp438;
      const real_t tmp875 = tmp440*(tmp873 + tmp874);
      const real_t tmp876 = 0.006659242794062166*tmp875;
      const real_t tmp877 = 2.9649155283744921*tmp475 + 2.9649155283744921*tmp476 + 2.9649155283744921*tmp481;
      const real_t tmp878 = 0.2688931795735332*tmp470 + 0.2688931795735332*tmp474 + 0.2688931795735332*tmp480;
      const real_t tmp879 = tmp482*(tmp877 + tmp878);
      const real_t tmp880 = 0.0061548665412862651*tmp879;
      const real_t tmp881 = tmp76*(-2.2903585922226259*tmp50 - 2.2903585922226259*tmp54 - 2.2903585922226259*tmp60 - tmp749 - tmp793);
      const real_t tmp882 = 0.011829781572832234*tmp881;
      const real_t tmp883 = tmp118*(0.11955133084429059*tmp103*tmp18*tmp6*tmp86 + 0.11955133084429059*tmp107*tmp18*tmp29*tmp86 + 0.11955133084429059*tmp113*tmp18*tmp39*tmp86 - tmp753 - tmp797);
      const real_t tmp884 = 0.0061414854617707626*tmp883;
      const real_t tmp885 = tmp160*(3.030776123262295*tmp128*tmp145*tmp18*tmp6 + 3.030776123262295*tmp128*tmp149*tmp18*tmp29 + 3.030776123262295*tmp128*tmp155*tmp18*tmp39 - tmp757 - tmp801);
      const real_t tmp886 = 0.0043612323249822204*tmp885;
      const real_t tmp887 = tmp202*(0.021561698496338266*tmp170*tmp18*tmp187*tmp6 + 0.021561698496338266*tmp170*tmp18*tmp191*tmp29 + 0.021561698496338266*tmp170*tmp18*tmp197*tmp39 - tmp761 - tmp805);
      const real_t tmp888 = 0.012248248047610821*tmp887;
      const real_t tmp889 = tmp244*(-0.97680333550942233*tmp231 - 0.97680333550942233*tmp235 - 0.97680333550942233*tmp241 - tmp765 - tmp809);
      const real_t tmp890 = 0.017219568446249611*tmp889;
      const real_t tmp891 = tmp286*(0.80668592322658683*tmp18*tmp254*tmp271*tmp6 + 0.80668592322658683*tmp18*tmp254*tmp275*tmp29 + 0.80668592322658683*tmp18*tmp254*tmp281*tmp39 - tmp769 - tmp813);
      const real_t tmp892 = 0.021490090227737114*tmp891;
      const real_t tmp893 = tmp321*(-1.3111976295201027*tmp310 - 1.3111976295201027*tmp313 - 1.3111976295201027*tmp318 - tmp773 - tmp817);
      const real_t tmp894 = 0.0084625239161731543*tmp893;
      const real_t tmp895 = tmp363*(1.0259150868534226*tmp18*tmp29*tmp331*tmp352 + 1.0259150868534226*tmp18*tmp331*tmp348*tmp6 + 1.0259150868534226*tmp18*tmp331*tmp358*tmp39 - tmp777 - tmp821);
      const real_t tmp896 = 0.0088251866742250357*tmp895;
      const real_t tmp897 = tmp398*(-0.010530396686001087*tmp387 - 0.010530396686001087*tmp390 - 0.010530396686001087*tmp395 - tmp781 - tmp825);
      const real_t tmp898 = 0.0077188851041817101*tmp897;
      const real_t tmp899 = tmp440*(1.727318301866275*tmp18*tmp29*tmp408*tmp429 + 1.727318301866275*tmp18*tmp39*tmp408*tmp435 + 1.727318301866275*tmp18*tmp408*tmp425*tmp6 - tmp785 - tmp829);
      const real_t tmp900 = 0.006659242794062166*tmp899;
      const real_t tmp901 = tmp482*(0.48471985386318561*tmp18*tmp29*tmp450*tmp471 + 0.48471985386318561*tmp18*tmp39*tmp450*tmp477 + 0.48471985386318561*tmp18*tmp450*tmp467*tmp6 - tmp789 - tmp833);
      const real_t tmp902 = 0.0061548665412862651*tmp901;
      const real_t tmp903 = tmp76*(0.020786379341558803*tmp18*tmp23*tmp27*tmp48 + 0.020786379341558803*tmp18*tmp23*tmp33*tmp52 + 0.020786379341558803*tmp18*tmp23*tmp43*tmp58 - tmp750 - tmp837);
      const real_t tmp904 = 0.011829781572832234*tmp903;
      const real_t tmp905 = tmp118*(0.066329140985678992*tmp103*tmp18*tmp27*tmp86 + 0.066329140985678992*tmp107*tmp18*tmp33*tmp86 + 0.066329140985678992*tmp113*tmp18*tmp43*tmp86 - tmp754 - tmp841);
      const real_t tmp906 = 0.0061414854617707626*tmp905;
      const real_t tmp907 = tmp160*(2.3862426959925824*tmp128*tmp145*tmp18*tmp27 + 2.3862426959925824*tmp128*tmp149*tmp18*tmp33 + 2.3862426959925824*tmp128*tmp155*tmp18*tmp43 - tmp758 - tmp845);
      const real_t tmp908 = 0.0043612323249822204*tmp907;
      const real_t tmp909 = tmp202*(-0.023755899620671705*tmp190 - 0.023755899620671705*tmp194 - 0.023755899620671705*tmp200 - tmp762 - tmp849);
      const real_t tmp910 = 0.012248248047610821*tmp909;
      const real_t tmp911 = tmp244*(0.023113155683794462*tmp18*tmp212*tmp229*tmp27 + 0.023113155683794462*tmp18*tmp212*tmp233*tmp33 + 0.023113155683794462*tmp18*tmp212*tmp239*tmp43 - tmp766 - tmp853);
      const real_t tmp912 = 0.017219568446249611*tmp911;
      const real_t tmp913 = tmp286*(0.096099217150166227*tmp18*tmp254*tmp27*tmp271 + 0.096099217150166227*tmp18*tmp254*tmp275*tmp33 + 0.096099217150166227*tmp18*tmp254*tmp281*tmp43 - tmp770 - tmp857);
      const real_t tmp914 = 0.021490090227737114*tmp913;
      const real_t tmp915 = tmp321*(-2.1424647858349868*tmp311 - 2.1424647858349868*tmp314 - 2.1424647858349868*tmp319 - tmp774 - tmp861);
      const real_t tmp916 = 0.0084625239161731543*tmp915;
      const real_t tmp917 = tmp363*(2.215926000198841*tmp18*tmp27*tmp331*tmp348 + 2.215926000198841*tmp18*tmp33*tmp331*tmp352 + 2.215926000198841*tmp18*tmp331*tmp358*tmp43 - tmp778 - tmp865);
      const real_t tmp918 = 0.0088251866742250357*tmp917;
      const real_t tmp919 = tmp398*(-1.504517893413688*tmp388 - 1.504517893413688*tmp391 - 1.504517893413688*tmp396 - tmp782 - tmp869);
      const real_t tmp920 = 0.0077188851041817101*tmp919;
      const real_t tmp921 = tmp440*(1.7050790859596399*tmp18*tmp27*tmp408*tmp425 + 1.7050790859596399*tmp18*tmp33*tmp408*tmp429 + 1.7050790859596399*tmp18*tmp408*tmp43*tmp435 - tmp786 - tmp873);
      const real_t tmp922 = 0.006659242794062166*tmp921;
      const real_t tmp923 = tmp482*(-2.339459955416912*tmp470 - 2.339459955416912*tmp474 - 2.339459955416912*tmp480 - tmp790 - tmp877);
      const real_t tmp924 = 0.0061548665412862651*tmp923;
      const real_t tmp925 = tmp76*(0.058384491239200198*tmp18*tmp23*tmp35*tmp48 + 0.058384491239200198*tmp18*tmp23*tmp37*tmp52 + 0.058384491239200198*tmp18*tmp23*tmp45*tmp58 - tmp794 - tmp838);
      const real_t tmp926 = 0.011829781572832234*tmp925;
      const real_t tmp927 = tmp118*(-2.6180852134415042*tmp111 - 2.6180852134415042*tmp112 - 2.6180852134415042*tmp117 - tmp798 - tmp842);
      const real_t tmp928 = 0.0061414854617707626*tmp927;
      const real_t tmp929 = tmp160*(2.923056903871144*tmp128*tmp145*tmp18*tmp35 + 2.923056903871144*tmp128*tmp149*tmp18*tmp37 + 2.923056903871144*tmp128*tmp155*tmp18*tmp45 - tmp802 - tmp846);
      const real_t tmp930 = 0.0043612323249822204*tmp929;
      const real_t tmp931 = tmp202*(1.1748979585239958*tmp170*tmp18*tmp187*tmp35 + 1.1748979585239958*tmp170*tmp18*tmp191*tmp37 + 1.1748979585239958*tmp170*tmp18*tmp197*tmp45 - tmp806 - tmp850);
      const real_t tmp932 = 0.012248248047610821*tmp931;
      const real_t tmp933 = tmp244*(-1.292351334863308*tmp237 - 1.292351334863308*tmp238 - 1.292351334863308*tmp243 - tmp810 - tmp854);
      const real_t tmp934 = 0.017219568446249611*tmp933;
      const real_t tmp935 = tmp286*(0.35278616717586297*tmp18*tmp254*tmp271*tmp35 + 0.35278616717586297*tmp18*tmp254*tmp275*tmp37 + 0.35278616717586297*tmp18*tmp254*tmp281*tmp45 - tmp814 - tmp858);
      const real_t tmp936 = 0.021490090227737114*tmp935;
      const real_t tmp937 = tmp321*(-0.50808146532588383*tmp315 - 0.50808146532588383*tmp316 - 0.50808146532588383*tmp320 - tmp818 - tmp862);
      const real_t tmp938 = 0.0084625239161731543*tmp937;
      const real_t tmp939 = tmp363*(1.7657230752364721*tmp18*tmp331*tmp348*tmp35 + 1.7657230752364721*tmp18*tmp331*tmp352*tmp37 + 1.7657230752364721*tmp18*tmp331*tmp358*tmp45 - tmp822 - tmp866);
      const real_t tmp940 = 0.0088251866742250357*tmp939;
      const real_t tmp941 = tmp398*(-1.5757674358533722*tmp392 - 1.5757674358533722*tmp393 - 1.5757674358533722*tmp397 - tmp826 - tmp870);
      const real_t tmp942 = 0.0077188851041817101*tmp941;
      const real_t tmp943 = tmp440*(0.24137878858456796*tmp18*tmp35*tmp408*tmp425 + 0.24137878858456796*tmp18*tmp37*tmp408*tmp429 + 0.24137878858456796*tmp18*tmp408*tmp435*tmp45 - tmp830 - tmp874);
      const real_t tmp944 = 0.006659242794062166*tmp943;
      const real_t tmp945 = tmp482*(0.35656239338404694*tmp18*tmp35*tmp450*tmp467 + 0.35656239338404694*tmp18*tmp37*tmp450*tmp471 + 0.35656239338404694*tmp18*tmp45*tmp450*tmp477 - tmp834 - tmp878);
      const real_t tmp946 = 0.0061548665412862651*tmp945;
      elMat(0,0) = -tmp102*tmp120 - tmp144*tmp162 - tmp186*tmp204 - tmp228*tmp246 - tmp270*tmp288 - tmp308*tmp323 - tmp347*tmp365 - tmp385*tmp400 - tmp424*tmp442 - tmp466*tmp484 - tmp47*tmp78;
      elMat(0,1) = -tmp119*tmp488 + tmp161*tmp490 + tmp203*tmp492 - tmp245*tmp494 + tmp287*tmp496 + tmp322*tmp498 + tmp364*tmp500 - tmp399*tmp502 - tmp441*tmp504 + tmp483*tmp506 + tmp486*tmp77;
      elMat(0,2) = tmp119*tmp510 + tmp161*tmp512 - tmp203*tmp514 + tmp245*tmp516 - tmp287*tmp518 - tmp322*tmp520 + tmp364*tmp522 - tmp399*tmp524 + tmp441*tmp526 - tmp483*tmp528 + tmp508*tmp77;
      elMat(0,3) = tmp119*tmp532 + tmp161*tmp534 - tmp203*tmp536 - tmp245*tmp538 + tmp287*tmp540 - tmp322*tmp542 - tmp364*tmp544 + tmp399*tmp546 + tmp441*tmp548 + tmp483*tmp550 - tmp530*tmp77;
      elMat(0,4) = -tmp120*tmp556 - tmp162*tmp559 - tmp204*tmp562 - tmp246*tmp565 - tmp288*tmp568 - tmp323*tmp571 - tmp365*tmp574 - tmp400*tmp577 - tmp442*tmp580 - tmp484*tmp583 - tmp553*tmp78;
      elMat(0,5) = -tmp120*tmp589 - tmp162*tmp592 - tmp204*tmp595 - tmp246*tmp598 - tmp288*tmp601 - tmp323*tmp604 - tmp365*tmp607 - tmp400*tmp610 - tmp442*tmp613 - tmp484*tmp616 - tmp586*tmp78;
      elMat(0,6) = -tmp120*tmp622 - tmp162*tmp625 - tmp204*tmp628 - tmp246*tmp631 - tmp288*tmp634 - tmp323*tmp637 - tmp365*tmp640 - tmp400*tmp643 - tmp442*tmp646 - tmp484*tmp649 - tmp619*tmp78;
      elMat(0,7) = -tmp120*tmp651 - tmp162*tmp652 - tmp204*tmp653 - tmp246*tmp654 - tmp288*tmp655 - tmp323*tmp656 - tmp365*tmp657 - tmp400*tmp658 - tmp442*tmp659 - tmp484*tmp660 - tmp650*tmp78;
      elMat(0,8) = -tmp120*tmp662 - tmp162*tmp663 - tmp204*tmp664 - tmp246*tmp665 - tmp288*tmp666 - tmp323*tmp667 - tmp365*tmp668 - tmp400*tmp669 - tmp442*tmp670 - tmp484*tmp671 - tmp661*tmp78;
      elMat(0,9) = -tmp120*tmp673 - tmp162*tmp674 - tmp204*tmp675 - tmp246*tmp676 - tmp288*tmp677 - tmp323*tmp678 - tmp365*tmp679 - tmp400*tmp680 - tmp442*tmp681 - tmp484*tmp682 - tmp672*tmp78;
      elMat(1,0) = -tmp102*tmp686 + tmp144*tmp688 + tmp186*tmp690 - tmp228*tmp692 + tmp270*tmp694 + tmp308*tmp696 + tmp347*tmp698 - tmp385*tmp700 - tmp424*tmp702 + tmp466*tmp704 + tmp47*tmp684;
      elMat(1,1) = -0.0044189289060270545*tmp485*tmp683 - 0.024813055531683337*tmp487*tmp685 - 0.0030629268005785541*tmp489*tmp687 - 0.0095222010320695129*tmp491*tmp689 - 0.0091974623207422349*tmp493*tmp691 - 3.2507885820395218e-5*tmp495*tmp693 - 0.0019689404753353082*tmp497*tmp695 - 0.0023300554370080033*tmp499*tmp697 - 0.0049779938500050438*tmp501*tmp699 - 0.0030527125027828036*tmp503*tmp701 - 0.0032898819246143778*tmp505*tmp703;
      elMat(1,2) = -0.0041470891910238041*tmp507*tmp683 + 0.008324951843965811*tmp509*tmp685 - 0.001100936202251903*tmp511*tmp687 + 0.0034227212415181688*tmp513*tmp689 + 0.0073573503010591077*tmp515*tmp691 + 0.00018203655806882805*tmp517*tmp693 + 0.0047025085100984255*tmp519*tmp695 - 0.00437157426475263*tmp521*tmp697 - 0.0045363353981484533*tmp523*tmp699 + 0.0035467343920440879*tmp525*tmp701 + 0.0088418544316446034*tmp527*tmp703;
      elMat(1,3) = 0.012562818798813762*tmp529*tmp683 + 0.00898195821005612*tmp531*tmp685 - 0.003456627437787347*tmp533*tmp687 + 0.0029333115747788548*tmp535*tmp689 - 0.0052263646286142846*tmp537*tmp691 - 0.00041188701176975823*tmp539*tmp693 + 0.0013093287357882949*tmp541*tmp695 + 0.0010247249374778298*tmp543*tmp697 + 0.0047245269499351069*tmp545*tmp699 + 0.0036470052771574082*tmp547*tmp701 - 0.0038665731836137946*tmp549*tmp703;
      elMat(1,4) = tmp553*tmp684 - tmp556*tmp686 + tmp559*tmp688 + tmp562*tmp690 - tmp565*tmp692 + tmp568*tmp694 + tmp571*tmp696 + tmp574*tmp698 - tmp577*tmp700 - tmp580*tmp702 + tmp583*tmp704;
      elMat(1,5) = tmp586*tmp684 - tmp589*tmp686 + tmp592*tmp688 + tmp595*tmp690 - tmp598*tmp692 + tmp601*tmp694 + tmp604*tmp696 + tmp607*tmp698 - tmp610*tmp700 - tmp613*tmp702 + tmp616*tmp704;
      elMat(1,6) = tmp619*tmp684 - tmp622*tmp686 + tmp625*tmp688 + tmp628*tmp690 - tmp631*tmp692 + tmp634*tmp694 + tmp637*tmp696 + tmp640*tmp698 - tmp643*tmp700 - tmp646*tmp702 + tmp649*tmp704;
      elMat(1,7) = tmp650*tmp684 - tmp651*tmp686 + tmp652*tmp688 + tmp653*tmp690 - tmp654*tmp692 + tmp655*tmp694 + tmp656*tmp696 + tmp657*tmp698 - tmp658*tmp700 - tmp659*tmp702 + tmp660*tmp704;
      elMat(1,8) = tmp661*tmp684 - tmp662*tmp686 + tmp663*tmp688 + tmp664*tmp690 - tmp665*tmp692 + tmp666*tmp694 + tmp667*tmp696 + tmp668*tmp698 - tmp669*tmp700 - tmp670*tmp702 + tmp671*tmp704;
      elMat(1,9) = tmp672*tmp684 - tmp673*tmp686 + tmp674*tmp688 + tmp675*tmp690 - tmp676*tmp692 + tmp677*tmp694 + tmp678*tmp696 + tmp679*tmp698 - tmp680*tmp700 - tmp681*tmp702 + tmp682*tmp704;
      elMat(2,0) = tmp102*tmp708 + tmp144*tmp710 - tmp186*tmp712 + tmp228*tmp714 - tmp270*tmp716 - tmp308*tmp718 + tmp347*tmp720 - tmp385*tmp722 + tmp424*tmp724 - tmp466*tmp726 + tmp47*tmp706;
      elMat(2,1) = -0.0041470891910238041*tmp485*tmp705 + 0.008324951843965811*tmp487*tmp707 - 0.001100936202251903*tmp489*tmp709 + 0.0034227212415181688*tmp491*tmp711 + 0.0073573503010591077*tmp493*tmp713 + 0.00018203655806882805*tmp495*tmp715 + 0.0047025085100984255*tmp497*tmp717 - 0.00437157426475263*tmp499*tmp719 - 0.0045363353981484533*tmp501*tmp721 + 0.0035467343920440879*tmp503*tmp723 + 0.0088418544316446034*tmp505*tmp725;
      elMat(2,2) = -0.0038919722684040777*tmp507*tmp705 - 0.0027930789545792005*tmp509*tmp707 - 0.00039571971527360629*tmp511*tmp709 - 0.001230284958034916*tmp513*tmp711 - 0.0058853846381537785*tmp515*tmp713 - 0.0010193621528212606*tmp517*tmp715 - 0.011231211184168578*tmp519*tmp717 - 0.0082018055230425203*tmp521*tmp719 - 0.0041338618456657665*tmp523*tmp721 - 0.0041207040742425758*tmp525*tmp723 - 0.023763281352280435*tmp527*tmp725;
      elMat(2,3) = 0.011789990551396352*tmp529*tmp705 - 0.003013509137065063*tmp531*tmp707 - 0.0012424476756148744*tmp533*tmp709 - 0.0010543683966735859*tmp535*tmp711 + 0.0041807396467460484*tmp537*tmp713 + 0.0023064709390845928*tmp539*tmp715 - 0.0031271283208865507*tmp541*tmp717 + 0.0019225556156211496*tmp543*tmp719 + 0.0043053566332700976*tmp545*tmp721 - 0.0042372018434979264*tmp547*tmp723 + 0.010391764209842001*tmp549*tmp725;
      elMat(2,4) = tmp553*tmp706 + tmp556*tmp708 + tmp559*tmp710 - tmp562*tmp712 + tmp565*tmp714 - tmp568*tmp716 - tmp571*tmp718 + tmp574*tmp720 - tmp577*tmp722 + tmp580*tmp724 - tmp583*tmp726;
      elMat(2,5) = tmp586*tmp706 + tmp589*tmp708 + tmp592*tmp710 - tmp595*tmp712 + tmp598*tmp714 - tmp601*tmp716 - tmp604*tmp718 + tmp607*tmp720 - tmp610*tmp722 + tmp613*tmp724 - tmp616*tmp726;
      elMat(2,6) = tmp619*tmp706 + tmp622*tmp708 + tmp625*tmp710 - tmp628*tmp712 + tmp631*tmp714 - tmp634*tmp716 - tmp637*tmp718 + tmp640*tmp720 - tmp643*tmp722 + tmp646*tmp724 - tmp649*tmp726;
      elMat(2,7) = tmp650*tmp706 + tmp651*tmp708 + tmp652*tmp710 - tmp653*tmp712 + tmp654*tmp714 - tmp655*tmp716 - tmp656*tmp718 + tmp657*tmp720 - tmp658*tmp722 + tmp659*tmp724 - tmp660*tmp726;
      elMat(2,8) = tmp661*tmp706 + tmp662*tmp708 + tmp663*tmp710 - tmp664*tmp712 + tmp665*tmp714 - tmp666*tmp716 - tmp667*tmp718 + tmp668*tmp720 - tmp669*tmp722 + tmp670*tmp724 - tmp671*tmp726;
      elMat(2,9) = tmp672*tmp706 + tmp673*tmp708 + tmp674*tmp710 - tmp675*tmp712 + tmp676*tmp714 - tmp677*tmp716 - tmp678*tmp718 + tmp679*tmp720 - tmp680*tmp722 + tmp681*tmp724 - tmp682*tmp726;
      elMat(3,0) = tmp102*tmp730 + tmp144*tmp732 - tmp186*tmp734 - tmp228*tmp736 + tmp270*tmp738 - tmp308*tmp740 - tmp347*tmp742 + tmp385*tmp744 + tmp424*tmp746 + tmp466*tmp748 - tmp47*tmp728;
      elMat(3,1) = 0.012562818798813762*tmp485*tmp727 + 0.00898195821005612*tmp487*tmp729 - 0.003456627437787347*tmp489*tmp731 + 0.0029333115747788548*tmp491*tmp733 - 0.0052263646286142846*tmp493*tmp735 - 0.00041188701176975823*tmp495*tmp737 + 0.0013093287357882949*tmp497*tmp739 + 0.0010247249374778298*tmp499*tmp741 + 0.0047245269499351069*tmp501*tmp743 + 0.0036470052771574082*tmp503*tmp745 - 0.0038665731836137946*tmp505*tmp747;
      elMat(3,2) = 0.011789990551396352*tmp507*tmp727 - 0.003013509137065063*tmp509*tmp729 - 0.0012424476756148744*tmp511*tmp731 - 0.0010543683966735859*tmp513*tmp733 + 0.0041807396467460484*tmp515*tmp735 + 0.0023064709390845928*tmp517*tmp737 - 0.0031271283208865507*tmp519*tmp739 + 0.0019225556156211496*tmp521*tmp741 + 0.0043053566332700976*tmp523*tmp743 - 0.0042372018434979264*tmp525*tmp745 + 0.010391764209842001*tmp527*tmp747;
      elMat(3,3) = -0.035715536395385078*tmp529*tmp727 - 0.0032513357004413015*tmp531*tmp729 - 0.0039009333299794896*tmp533*tmp731 - 0.00090360587491835199*tmp535*tmp733 - 0.0029698286634596638*tmp537*tmp735 - 0.0052187617306746906*tmp539*tmp737 - 0.00087069251703458632*tmp541*tmp739 - 0.00045065931943546946*tmp543*tmp741 - 0.0044839659455667077*tmp545*tmp743 - 0.0043569931591950859*tmp547*tmp745 - 0.0045443540305762555*tmp549*tmp747;
      elMat(3,4) = -tmp553*tmp728 + tmp556*tmp730 + tmp559*tmp732 - tmp562*tmp734 - tmp565*tmp736 + tmp568*tmp738 - tmp571*tmp740 - tmp574*tmp742 + tmp577*tmp744 + tmp580*tmp746 + tmp583*tmp748;
      elMat(3,5) = -tmp586*tmp728 + tmp589*tmp730 + tmp592*tmp732 - tmp595*tmp734 - tmp598*tmp736 + tmp601*tmp738 - tmp604*tmp740 - tmp607*tmp742 + tmp610*tmp744 + tmp613*tmp746 + tmp616*tmp748;
      elMat(3,6) = -tmp619*tmp728 + tmp622*tmp730 + tmp625*tmp732 - tmp628*tmp734 - tmp631*tmp736 + tmp634*tmp738 - tmp637*tmp740 - tmp640*tmp742 + tmp643*tmp744 + tmp646*tmp746 + tmp649*tmp748;
      elMat(3,7) = -tmp650*tmp728 + tmp651*tmp730 + tmp652*tmp732 - tmp653*tmp734 - tmp654*tmp736 + tmp655*tmp738 - tmp656*tmp740 - tmp657*tmp742 + tmp658*tmp744 + tmp659*tmp746 + tmp660*tmp748;
      elMat(3,8) = -tmp661*tmp728 + tmp662*tmp730 + tmp663*tmp732 - tmp664*tmp734 - tmp665*tmp736 + tmp666*tmp738 - tmp667*tmp740 - tmp668*tmp742 + tmp669*tmp744 + tmp670*tmp746 + tmp671*tmp748;
      elMat(3,9) = -tmp672*tmp728 + tmp673*tmp730 + tmp674*tmp732 - tmp675*tmp734 - tmp676*tmp736 + tmp677*tmp738 - tmp678*tmp740 - tmp679*tmp742 + tmp680*tmp744 + tmp681*tmp746 + tmp682*tmp748;
      elMat(4,0) = -tmp102*tmp756 - tmp144*tmp760 - tmp186*tmp764 - tmp228*tmp768 - tmp270*tmp772 - tmp308*tmp776 - tmp347*tmp780 - tmp385*tmp784 - tmp424*tmp788 - tmp466*tmp792 - tmp47*tmp752;
      elMat(4,1) = tmp486*tmp751 - tmp488*tmp755 + tmp490*tmp759 + tmp492*tmp763 - tmp494*tmp767 + tmp496*tmp771 + tmp498*tmp775 + tmp500*tmp779 - tmp502*tmp783 - tmp504*tmp787 + tmp506*tmp791;
      elMat(4,2) = tmp508*tmp751 + tmp510*tmp755 + tmp512*tmp759 - tmp514*tmp763 + tmp516*tmp767 - tmp518*tmp771 - tmp520*tmp775 + tmp522*tmp779 - tmp524*tmp783 + tmp526*tmp787 - tmp528*tmp791;
      elMat(4,3) = -tmp530*tmp751 + tmp532*tmp755 + tmp534*tmp759 - tmp536*tmp763 - tmp538*tmp767 + tmp540*tmp771 - tmp542*tmp775 - tmp544*tmp779 + tmp546*tmp783 + tmp548*tmp787 + tmp550*tmp791;
      elMat(4,4) = -tmp553*tmp752 - tmp556*tmp756 - tmp559*tmp760 - tmp562*tmp764 - tmp565*tmp768 - tmp568*tmp772 - tmp571*tmp776 - tmp574*tmp780 - tmp577*tmp784 - tmp580*tmp788 - tmp583*tmp792;
      elMat(4,5) = -tmp586*tmp752 - tmp589*tmp756 - tmp592*tmp760 - tmp595*tmp764 - tmp598*tmp768 - tmp601*tmp772 - tmp604*tmp776 - tmp607*tmp780 - tmp610*tmp784 - tmp613*tmp788 - tmp616*tmp792;
      elMat(4,6) = -tmp619*tmp752 - tmp622*tmp756 - tmp625*tmp760 - tmp628*tmp764 - tmp631*tmp768 - tmp634*tmp772 - tmp637*tmp776 - tmp640*tmp780 - tmp643*tmp784 - tmp646*tmp788 - tmp649*tmp792;
      elMat(4,7) = -tmp650*tmp752 - tmp651*tmp756 - tmp652*tmp760 - tmp653*tmp764 - tmp654*tmp768 - tmp655*tmp772 - tmp656*tmp776 - tmp657*tmp780 - tmp658*tmp784 - tmp659*tmp788 - tmp660*tmp792;
      elMat(4,8) = -tmp661*tmp752 - tmp662*tmp756 - tmp663*tmp760 - tmp664*tmp764 - tmp665*tmp768 - tmp666*tmp772 - tmp667*tmp776 - tmp668*tmp780 - tmp669*tmp784 - tmp670*tmp788 - tmp671*tmp792;
      elMat(4,9) = -tmp672*tmp752 - tmp673*tmp756 - tmp674*tmp760 - tmp675*tmp764 - tmp676*tmp768 - tmp677*tmp772 - tmp678*tmp776 - tmp679*tmp780 - tmp680*tmp784 - tmp681*tmp788 - tmp682*tmp792;
      elMat(5,0) = -tmp102*tmp800 - tmp144*tmp804 - tmp186*tmp808 - tmp228*tmp812 - tmp270*tmp816 - tmp308*tmp820 - tmp347*tmp824 - tmp385*tmp828 - tmp424*tmp832 - tmp466*tmp836 - tmp47*tmp796;
      elMat(5,1) = tmp486*tmp795 - tmp488*tmp799 + tmp490*tmp803 + tmp492*tmp807 - tmp494*tmp811 + tmp496*tmp815 + tmp498*tmp819 + tmp500*tmp823 - tmp502*tmp827 - tmp504*tmp831 + tmp506*tmp835;
      elMat(5,2) = tmp508*tmp795 + tmp510*tmp799 + tmp512*tmp803 - tmp514*tmp807 + tmp516*tmp811 - tmp518*tmp815 - tmp520*tmp819 + tmp522*tmp823 - tmp524*tmp827 + tmp526*tmp831 - tmp528*tmp835;
      elMat(5,3) = -tmp530*tmp795 + tmp532*tmp799 + tmp534*tmp803 - tmp536*tmp807 - tmp538*tmp811 + tmp540*tmp815 - tmp542*tmp819 - tmp544*tmp823 + tmp546*tmp827 + tmp548*tmp831 + tmp550*tmp835;
      elMat(5,4) = -tmp553*tmp796 - tmp556*tmp800 - tmp559*tmp804 - tmp562*tmp808 - tmp565*tmp812 - tmp568*tmp816 - tmp571*tmp820 - tmp574*tmp824 - tmp577*tmp828 - tmp580*tmp832 - tmp583*tmp836;
      elMat(5,5) = -tmp586*tmp796 - tmp589*tmp800 - tmp592*tmp804 - tmp595*tmp808 - tmp598*tmp812 - tmp601*tmp816 - tmp604*tmp820 - tmp607*tmp824 - tmp610*tmp828 - tmp613*tmp832 - tmp616*tmp836;
      elMat(5,6) = -tmp619*tmp796 - tmp622*tmp800 - tmp625*tmp804 - tmp628*tmp808 - tmp631*tmp812 - tmp634*tmp816 - tmp637*tmp820 - tmp640*tmp824 - tmp643*tmp828 - tmp646*tmp832 - tmp649*tmp836;
      elMat(5,7) = -tmp650*tmp796 - tmp651*tmp800 - tmp652*tmp804 - tmp653*tmp808 - tmp654*tmp812 - tmp655*tmp816 - tmp656*tmp820 - tmp657*tmp824 - tmp658*tmp828 - tmp659*tmp832 - tmp660*tmp836;
      elMat(5,8) = -tmp661*tmp796 - tmp662*tmp800 - tmp663*tmp804 - tmp664*tmp808 - tmp665*tmp812 - tmp666*tmp816 - tmp667*tmp820 - tmp668*tmp824 - tmp669*tmp828 - tmp670*tmp832 - tmp671*tmp836;
      elMat(5,9) = -tmp672*tmp796 - tmp673*tmp800 - tmp674*tmp804 - tmp675*tmp808 - tmp676*tmp812 - tmp677*tmp816 - tmp678*tmp820 - tmp679*tmp824 - tmp680*tmp828 - tmp681*tmp832 - tmp682*tmp836;
      elMat(6,0) = -tmp102*tmp844 - tmp144*tmp848 - tmp186*tmp852 - tmp228*tmp856 - tmp270*tmp860 - tmp308*tmp864 - tmp347*tmp868 - tmp385*tmp872 - tmp424*tmp876 - tmp466*tmp880 - tmp47*tmp840;
      elMat(6,1) = tmp486*tmp839 - tmp488*tmp843 + tmp490*tmp847 + tmp492*tmp851 - tmp494*tmp855 + tmp496*tmp859 + tmp498*tmp863 + tmp500*tmp867 - tmp502*tmp871 - tmp504*tmp875 + tmp506*tmp879;
      elMat(6,2) = tmp508*tmp839 + tmp510*tmp843 + tmp512*tmp847 - tmp514*tmp851 + tmp516*tmp855 - tmp518*tmp859 - tmp520*tmp863 + tmp522*tmp867 - tmp524*tmp871 + tmp526*tmp875 - tmp528*tmp879;
      elMat(6,3) = -tmp530*tmp839 + tmp532*tmp843 + tmp534*tmp847 - tmp536*tmp851 - tmp538*tmp855 + tmp540*tmp859 - tmp542*tmp863 - tmp544*tmp867 + tmp546*tmp871 + tmp548*tmp875 + tmp550*tmp879;
      elMat(6,4) = -tmp553*tmp840 - tmp556*tmp844 - tmp559*tmp848 - tmp562*tmp852 - tmp565*tmp856 - tmp568*tmp860 - tmp571*tmp864 - tmp574*tmp868 - tmp577*tmp872 - tmp580*tmp876 - tmp583*tmp880;
      elMat(6,5) = -tmp586*tmp840 - tmp589*tmp844 - tmp592*tmp848 - tmp595*tmp852 - tmp598*tmp856 - tmp601*tmp860 - tmp604*tmp864 - tmp607*tmp868 - tmp610*tmp872 - tmp613*tmp876 - tmp616*tmp880;
      elMat(6,6) = -tmp619*tmp840 - tmp622*tmp844 - tmp625*tmp848 - tmp628*tmp852 - tmp631*tmp856 - tmp634*tmp860 - tmp637*tmp864 - tmp640*tmp868 - tmp643*tmp872 - tmp646*tmp876 - tmp649*tmp880;
      elMat(6,7) = -tmp650*tmp840 - tmp651*tmp844 - tmp652*tmp848 - tmp653*tmp852 - tmp654*tmp856 - tmp655*tmp860 - tmp656*tmp864 - tmp657*tmp868 - tmp658*tmp872 - tmp659*tmp876 - tmp660*tmp880;
      elMat(6,8) = -tmp661*tmp840 - tmp662*tmp844 - tmp663*tmp848 - tmp664*tmp852 - tmp665*tmp856 - tmp666*tmp860 - tmp667*tmp864 - tmp668*tmp868 - tmp669*tmp872 - tmp670*tmp876 - tmp671*tmp880;
      elMat(6,9) = -tmp672*tmp840 - tmp673*tmp844 - tmp674*tmp848 - tmp675*tmp852 - tmp676*tmp856 - tmp677*tmp860 - tmp678*tmp864 - tmp679*tmp868 - tmp680*tmp872 - tmp681*tmp876 - tmp682*tmp880;
      elMat(7,0) = -tmp102*tmp884 - tmp144*tmp886 - tmp186*tmp888 - tmp228*tmp890 - tmp270*tmp892 - tmp308*tmp894 - tmp347*tmp896 - tmp385*tmp898 - tmp424*tmp900 - tmp466*tmp902 - tmp47*tmp882;
      elMat(7,1) = tmp486*tmp881 - tmp488*tmp883 + tmp490*tmp885 + tmp492*tmp887 - tmp494*tmp889 + tmp496*tmp891 + tmp498*tmp893 + tmp500*tmp895 - tmp502*tmp897 - tmp504*tmp899 + tmp506*tmp901;
      elMat(7,2) = tmp508*tmp881 + tmp510*tmp883 + tmp512*tmp885 - tmp514*tmp887 + tmp516*tmp889 - tmp518*tmp891 - tmp520*tmp893 + tmp522*tmp895 - tmp524*tmp897 + tmp526*tmp899 - tmp528*tmp901;
      elMat(7,3) = -tmp530*tmp881 + tmp532*tmp883 + tmp534*tmp885 - tmp536*tmp887 - tmp538*tmp889 + tmp540*tmp891 - tmp542*tmp893 - tmp544*tmp895 + tmp546*tmp897 + tmp548*tmp899 + tmp550*tmp901;
      elMat(7,4) = -tmp553*tmp882 - tmp556*tmp884 - tmp559*tmp886 - tmp562*tmp888 - tmp565*tmp890 - tmp568*tmp892 - tmp571*tmp894 - tmp574*tmp896 - tmp577*tmp898 - tmp580*tmp900 - tmp583*tmp902;
      elMat(7,5) = -tmp586*tmp882 - tmp589*tmp884 - tmp592*tmp886 - tmp595*tmp888 - tmp598*tmp890 - tmp601*tmp892 - tmp604*tmp894 - tmp607*tmp896 - tmp610*tmp898 - tmp613*tmp900 - tmp616*tmp902;
      elMat(7,6) = -tmp619*tmp882 - tmp622*tmp884 - tmp625*tmp886 - tmp628*tmp888 - tmp631*tmp890 - tmp634*tmp892 - tmp637*tmp894 - tmp640*tmp896 - tmp643*tmp898 - tmp646*tmp900 - tmp649*tmp902;
      elMat(7,7) = -tmp650*tmp882 - tmp651*tmp884 - tmp652*tmp886 - tmp653*tmp888 - tmp654*tmp890 - tmp655*tmp892 - tmp656*tmp894 - tmp657*tmp896 - tmp658*tmp898 - tmp659*tmp900 - tmp660*tmp902;
      elMat(7,8) = -tmp661*tmp882 - tmp662*tmp884 - tmp663*tmp886 - tmp664*tmp888 - tmp665*tmp890 - tmp666*tmp892 - tmp667*tmp894 - tmp668*tmp896 - tmp669*tmp898 - tmp670*tmp900 - tmp671*tmp902;
      elMat(7,9) = -tmp672*tmp882 - tmp673*tmp884 - tmp674*tmp886 - tmp675*tmp888 - tmp676*tmp890 - tmp677*tmp892 - tmp678*tmp894 - tmp679*tmp896 - tmp680*tmp898 - tmp681*tmp900 - tmp682*tmp902;
      elMat(8,0) = -tmp102*tmp906 - tmp144*tmp908 - tmp186*tmp910 - tmp228*tmp912 - tmp270*tmp914 - tmp308*tmp916 - tmp347*tmp918 - tmp385*tmp920 - tmp424*tmp922 - tmp466*tmp924 - tmp47*tmp904;
      elMat(8,1) = tmp486*tmp903 - tmp488*tmp905 + tmp490*tmp907 + tmp492*tmp909 - tmp494*tmp911 + tmp496*tmp913 + tmp498*tmp915 + tmp500*tmp917 - tmp502*tmp919 - tmp504*tmp921 + tmp506*tmp923;
      elMat(8,2) = tmp508*tmp903 + tmp510*tmp905 + tmp512*tmp907 - tmp514*tmp909 + tmp516*tmp911 - tmp518*tmp913 - tmp520*tmp915 + tmp522*tmp917 - tmp524*tmp919 + tmp526*tmp921 - tmp528*tmp923;
      elMat(8,3) = -tmp530*tmp903 + tmp532*tmp905 + tmp534*tmp907 - tmp536*tmp909 - tmp538*tmp911 + tmp540*tmp913 - tmp542*tmp915 - tmp544*tmp917 + tmp546*tmp919 + tmp548*tmp921 + tmp550*tmp923;
      elMat(8,4) = -tmp553*tmp904 - tmp556*tmp906 - tmp559*tmp908 - tmp562*tmp910 - tmp565*tmp912 - tmp568*tmp914 - tmp571*tmp916 - tmp574*tmp918 - tmp577*tmp920 - tmp580*tmp922 - tmp583*tmp924;
      elMat(8,5) = -tmp586*tmp904 - tmp589*tmp906 - tmp592*tmp908 - tmp595*tmp910 - tmp598*tmp912 - tmp601*tmp914 - tmp604*tmp916 - tmp607*tmp918 - tmp610*tmp920 - tmp613*tmp922 - tmp616*tmp924;
      elMat(8,6) = -tmp619*tmp904 - tmp622*tmp906 - tmp625*tmp908 - tmp628*tmp910 - tmp631*tmp912 - tmp634*tmp914 - tmp637*tmp916 - tmp640*tmp918 - tmp643*tmp920 - tmp646*tmp922 - tmp649*tmp924;
      elMat(8,7) = -tmp650*tmp904 - tmp651*tmp906 - tmp652*tmp908 - tmp653*tmp910 - tmp654*tmp912 - tmp655*tmp914 - tmp656*tmp916 - tmp657*tmp918 - tmp658*tmp920 - tmp659*tmp922 - tmp660*tmp924;
      elMat(8,8) = -tmp661*tmp904 - tmp662*tmp906 - tmp663*tmp908 - tmp664*tmp910 - tmp665*tmp912 - tmp666*tmp914 - tmp667*tmp916 - tmp668*tmp918 - tmp669*tmp920 - tmp670*tmp922 - tmp671*tmp924;
      elMat(8,9) = -tmp672*tmp904 - tmp673*tmp906 - tmp674*tmp908 - tmp675*tmp910 - tmp676*tmp912 - tmp677*tmp914 - tmp678*tmp916 - tmp679*tmp918 - tmp680*tmp920 - tmp681*tmp922 - tmp682*tmp924;
      elMat(9,0) = -tmp102*tmp928 - tmp144*tmp930 - tmp186*tmp932 - tmp228*tmp934 - tmp270*tmp936 - tmp308*tmp938 - tmp347*tmp940 - tmp385*tmp942 - tmp424*tmp944 - tmp466*tmp946 - tmp47*tmp926;
      elMat(9,1) = tmp486*tmp925 - tmp488*tmp927 + tmp490*tmp929 + tmp492*tmp931 - tmp494*tmp933 + tmp496*tmp935 + tmp498*tmp937 + tmp500*tmp939 - tmp502*tmp941 - tmp504*tmp943 + tmp506*tmp945;
      elMat(9,2) = tmp508*tmp925 + tmp510*tmp927 + tmp512*tmp929 - tmp514*tmp931 + tmp516*tmp933 - tmp518*tmp935 - tmp520*tmp937 + tmp522*tmp939 - tmp524*tmp941 + tmp526*tmp943 - tmp528*tmp945;
      elMat(9,3) = -tmp530*tmp925 + tmp532*tmp927 + tmp534*tmp929 - tmp536*tmp931 - tmp538*tmp933 + tmp540*tmp935 - tmp542*tmp937 - tmp544*tmp939 + tmp546*tmp941 + tmp548*tmp943 + tmp550*tmp945;
      elMat(9,4) = -tmp553*tmp926 - tmp556*tmp928 - tmp559*tmp930 - tmp562*tmp932 - tmp565*tmp934 - tmp568*tmp936 - tmp571*tmp938 - tmp574*tmp940 - tmp577*tmp942 - tmp580*tmp944 - tmp583*tmp946;
      elMat(9,5) = -tmp586*tmp926 - tmp589*tmp928 - tmp592*tmp930 - tmp595*tmp932 - tmp598*tmp934 - tmp601*tmp936 - tmp604*tmp938 - tmp607*tmp940 - tmp610*tmp942 - tmp613*tmp944 - tmp616*tmp946;
      elMat(9,6) = -tmp619*tmp926 - tmp622*tmp928 - tmp625*tmp930 - tmp628*tmp932 - tmp631*tmp934 - tmp634*tmp936 - tmp637*tmp938 - tmp640*tmp940 - tmp643*tmp942 - tmp646*tmp944 - tmp649*tmp946;
      elMat(9,7) = -tmp650*tmp926 - tmp651*tmp928 - tmp652*tmp930 - tmp653*tmp932 - tmp654*tmp934 - tmp655*tmp936 - tmp656*tmp938 - tmp657*tmp940 - tmp658*tmp942 - tmp659*tmp944 - tmp660*tmp946;
      elMat(9,8) = -tmp661*tmp926 - tmp662*tmp928 - tmp663*tmp930 - tmp664*tmp932 - tmp665*tmp934 - tmp666*tmp936 - tmp667*tmp938 - tmp668*tmp940 - tmp669*tmp942 - tmp670*tmp944 - tmp671*tmp946;
      elMat(9,9) = -tmp672*tmp926 - tmp673*tmp928 - tmp674*tmp930 - tmp675*tmp932 - tmp676*tmp934 - tmp677*tmp936 - tmp678*tmp938 - tmp679*tmp940 - tmp680*tmp942 - tmp681*tmp944 - tmp682*tmp946;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_1_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp8 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp7*J_B_1(2, 2) - tmp8*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp13*tmp4 - tmp16;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp30 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp10 - tmp17;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp12 + tmp15;
      const real_t tmp40 = tmp19 - tmp21;
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = coords[0][0]*coords[1][1];
      const real_t tmp48 = coords[0][0]*coords[1][2];
      const real_t tmp49 = coords[2][1]*coords[3][2];
      const real_t tmp50 = coords[0][1]*coords[1][0];
      const real_t tmp51 = coords[0][1]*coords[1][2];
      const real_t tmp52 = coords[2][2]*coords[3][0];
      const real_t tmp53 = coords[0][2]*coords[1][0];
      const real_t tmp54 = coords[0][2]*coords[1][1];
      const real_t tmp55 = coords[2][0]*coords[3][1];
      const real_t tmp56 = coords[2][2]*coords[3][1];
      const real_t tmp57 = coords[2][0]*coords[3][2];
      const real_t tmp58 = coords[2][1]*coords[3][0];
      const real_t tmp59 = std::abs(coords[0][0]*tmp49 - coords[0][0]*tmp56 + coords[0][1]*tmp52 - coords[0][1]*tmp57 + coords[0][2]*tmp55 - coords[0][2]*tmp58 - coords[1][0]*tmp49 + coords[1][0]*tmp56 - coords[1][1]*tmp52 + coords[1][1]*tmp57 - coords[1][2]*tmp55 + coords[1][2]*tmp58 + coords[2][0]*tmp51 - coords[2][0]*tmp54 - coords[2][1]*tmp48 + coords[2][1]*tmp53 + coords[2][2]*tmp47 - coords[2][2]*tmp50 - coords[3][0]*tmp51 + coords[3][0]*tmp54 + coords[3][1]*tmp48 - coords[3][1]*tmp53 - coords[3][2]*tmp47 + coords[3][2]*tmp50);
      const real_t tmp60 = 0.55279693041046674*tmp24;
      const real_t tmp61 = tmp60*(-J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0));
      const real_t tmp62 = tmp60*(J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0));
      const real_t tmp63 = tmp60*(-J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1));
      const real_t tmp64 = tmp59*(tmp27*tmp61 + tmp29*tmp62 + tmp33*tmp62 + tmp35*tmp61 + tmp37*tmp62 + tmp39*tmp63 + tmp43*tmp63 + tmp45*tmp63 + tmp6*tmp61)*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = 0.011829781572832234*tmp64;
      const real_t tmp66 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp67 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp68 = tmp66 - tmp67;
      const real_t tmp69 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp70 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp71 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp72 = tmp66*J_B_10(2, 2) - tmp67*J_B_10(2, 2) + tmp69*J_B_10(2, 0) - tmp70*J_B_10(2, 1) - tmp71*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp73 = 1.0 / (tmp72);
      const real_t tmp74 = tmp18*tmp73;
      const real_t tmp75 = tmp68*tmp74;
      const real_t tmp76 = tmp6*tmp75;
      const real_t tmp77 = tmp27*tmp75;
      const real_t tmp78 = -tmp70 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp79 = tmp74*tmp78;
      const real_t tmp80 = tmp29*tmp79;
      const real_t tmp81 = tmp33*tmp79;
      const real_t tmp82 = tmp35*tmp75;
      const real_t tmp83 = tmp37*tmp79;
      const real_t tmp84 = tmp69 - tmp71;
      const real_t tmp85 = tmp74*tmp84;
      const real_t tmp86 = tmp39*tmp85;
      const real_t tmp87 = tmp43*tmp85;
      const real_t tmp88 = tmp45*tmp85;
      const real_t tmp89 = 0.60805118540288361*tmp74;
      const real_t tmp90 = tmp89*(-J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0));
      const real_t tmp91 = tmp89*(J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0));
      const real_t tmp92 = tmp89*(-J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1));
      const real_t tmp93 = tmp59*(tmp27*tmp90 + tmp29*tmp91 + tmp33*tmp91 + tmp35*tmp90 + tmp37*tmp91 + tmp39*tmp92 + tmp43*tmp92 + tmp45*tmp92 + tmp6*tmp90)*std::abs(tmp72)*ScalarCoeff0_10;
      const real_t tmp94 = 0.0061414854617707626*tmp93;
      const real_t tmp95 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp96 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp97 = tmp95 - tmp96;
      const real_t tmp98 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp99 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp100 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp101 = -tmp100*J_B_11(2, 0) + tmp95*J_B_11(2, 2) - tmp96*J_B_11(2, 2) + tmp98*J_B_11(2, 0) - tmp99*J_B_11(2, 1) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp102 = 1.0 / (tmp101);
      const real_t tmp103 = tmp102*tmp18;
      const real_t tmp104 = tmp103*tmp97;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -tmp99 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp108 = tmp103*tmp107;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = -tmp100 + tmp98;
      const real_t tmp114 = tmp103*tmp113;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = 2.0850189307815055*tmp103;
      const real_t tmp119 = tmp118*(-J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0));
      const real_t tmp120 = tmp118*(J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0));
      const real_t tmp121 = tmp118*(-J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1));
      const real_t tmp122 = tmp59*(-tmp119*tmp27 - tmp119*tmp35 - tmp119*tmp6 - tmp120*tmp29 - tmp120*tmp33 - tmp120*tmp37 - tmp121*tmp39 - tmp121*tmp43 - tmp121*tmp45)*std::abs(tmp101)*ScalarCoeff0_11;
      const real_t tmp123 = 0.0043612323249822204*tmp122;
      const real_t tmp124 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp125 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp126 = tmp124 - tmp125;
      const real_t tmp127 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp128 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp129 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp130 = tmp124*J_B_2(2, 2) - tmp125*J_B_2(2, 2) + tmp127*J_B_2(2, 0) - tmp128*J_B_2(2, 1) - tmp129*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp131 = 1.0 / (tmp130);
      const real_t tmp132 = tmp131*tmp18;
      const real_t tmp133 = tmp126*tmp132;
      const real_t tmp134 = tmp133*tmp6;
      const real_t tmp135 = tmp133*tmp27;
      const real_t tmp136 = -tmp128 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp137 = tmp132*tmp136;
      const real_t tmp138 = tmp137*tmp29;
      const real_t tmp139 = tmp137*tmp33;
      const real_t tmp140 = tmp133*tmp35;
      const real_t tmp141 = tmp137*tmp37;
      const real_t tmp142 = tmp127 - tmp129;
      const real_t tmp143 = tmp132*tmp142;
      const real_t tmp144 = tmp143*tmp39;
      const real_t tmp145 = tmp143*tmp43;
      const real_t tmp146 = tmp143*tmp45;
      const real_t tmp147 = 0.29317593934991559*tmp132;
      const real_t tmp148 = tmp147*(-J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0));
      const real_t tmp149 = tmp147*(J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0));
      const real_t tmp150 = tmp147*(-J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1));
      const real_t tmp151 = tmp59*(-tmp148*tmp27 - tmp148*tmp35 - tmp148*tmp6 - tmp149*tmp29 - tmp149*tmp33 - tmp149*tmp37 - tmp150*tmp39 - tmp150*tmp43 - tmp150*tmp45)*std::abs(tmp130)*ScalarCoeff0_2;
      const real_t tmp152 = 0.012248248047610821*tmp151;
      const real_t tmp153 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp154 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp155 = tmp153 - tmp154;
      const real_t tmp156 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp157 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp158 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp159 = tmp153*J_B_3(2, 2) - tmp154*J_B_3(2, 2) + tmp156*J_B_3(2, 0) - tmp157*J_B_3(2, 1) - tmp158*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp160 = 1.0 / (tmp159);
      const real_t tmp161 = tmp160*tmp18;
      const real_t tmp162 = tmp155*tmp161;
      const real_t tmp163 = tmp162*tmp6;
      const real_t tmp164 = tmp162*tmp27;
      const real_t tmp165 = -tmp157 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp166 = tmp161*tmp165;
      const real_t tmp167 = tmp166*tmp29;
      const real_t tmp168 = tmp166*tmp33;
      const real_t tmp169 = tmp162*tmp35;
      const real_t tmp170 = tmp166*tmp37;
      const real_t tmp171 = tmp156 - tmp158;
      const real_t tmp172 = tmp161*tmp171;
      const real_t tmp173 = tmp172*tmp39;
      const real_t tmp174 = tmp172*tmp43;
      const real_t tmp175 = tmp172*tmp45;
      const real_t tmp176 = 0.56151037867223397*tmp161;
      const real_t tmp177 = tmp176*(-J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0));
      const real_t tmp178 = tmp176*(J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0));
      const real_t tmp179 = tmp176*(-J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1));
      const real_t tmp180 = tmp59*(tmp177*tmp27 + tmp177*tmp35 + tmp177*tmp6 + tmp178*tmp29 + tmp178*tmp33 + tmp178*tmp37 + tmp179*tmp39 + tmp179*tmp43 + tmp179*tmp45)*std::abs(tmp159)*ScalarCoeff0_3;
      const real_t tmp181 = 0.017219568446249611*tmp180;
      const real_t tmp182 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp183 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp184 = tmp182 - tmp183;
      const real_t tmp185 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp186 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp187 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp188 = tmp182*J_B_4(2, 2) - tmp183*J_B_4(2, 2) + tmp185*J_B_4(2, 0) - tmp186*J_B_4(2, 1) - tmp187*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp189 = 1.0 / (tmp188);
      const real_t tmp190 = tmp18*tmp189;
      const real_t tmp191 = tmp184*tmp190;
      const real_t tmp192 = tmp191*tmp6;
      const real_t tmp193 = tmp191*tmp27;
      const real_t tmp194 = -tmp186 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp195 = tmp190*tmp194;
      const real_t tmp196 = tmp195*tmp29;
      const real_t tmp197 = tmp195*tmp33;
      const real_t tmp198 = tmp191*tmp35;
      const real_t tmp199 = tmp195*tmp37;
      const real_t tmp200 = tmp185 - tmp187;
      const real_t tmp201 = tmp190*tmp200;
      const real_t tmp202 = tmp201*tmp39;
      const real_t tmp203 = tmp201*tmp43;
      const real_t tmp204 = tmp201*tmp45;
      const real_t tmp205 = 0.31389282688815401*tmp190;
      const real_t tmp206 = tmp205*(-J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0));
      const real_t tmp207 = tmp205*(J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0));
      const real_t tmp208 = tmp205*(-J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1));
      const real_t tmp209 = tmp59*(-tmp206*tmp27 - tmp206*tmp35 - tmp206*tmp6 - tmp207*tmp29 - tmp207*tmp33 - tmp207*tmp37 - tmp208*tmp39 - tmp208*tmp43 - tmp208*tmp45)*std::abs(tmp188)*ScalarCoeff0_4;
      const real_t tmp210 = 0.021490090227737114*tmp209;
      const real_t tmp211 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp212 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp213 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp214 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp215 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp216 = tmp211*J_B_5(2, 2) - tmp212*J_B_5(2, 2) + tmp213*J_B_5(2, 0) - tmp214*J_B_5(2, 1) - tmp215*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp217 = tmp18/tmp216;
      const real_t tmp218 = tmp217*(tmp211 - tmp212);
      const real_t tmp219 = tmp218*tmp6;
      const real_t tmp220 = tmp218*tmp27;
      const real_t tmp221 = tmp217*(-tmp214 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp222 = tmp221*tmp29;
      const real_t tmp223 = tmp221*tmp33;
      const real_t tmp224 = tmp218*tmp35;
      const real_t tmp225 = tmp221*tmp37;
      const real_t tmp226 = tmp217*(tmp213 - tmp215);
      const real_t tmp227 = tmp226*tmp39;
      const real_t tmp228 = tmp226*tmp43;
      const real_t tmp229 = tmp226*tmp45;
      const real_t tmp230 = 0.99043597017024343*tmp217;
      const real_t tmp231 = tmp230*(-J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp232 = tmp230*(J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0));
      const real_t tmp233 = tmp230*(-J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp234 = tmp59*(tmp231*tmp27 + tmp231*tmp35 + tmp231*tmp6 + tmp232*tmp29 + tmp232*tmp33 + tmp232*tmp37 + tmp233*tmp39 + tmp233*tmp43 + tmp233*tmp45)*std::abs(tmp216)*ScalarCoeff0_5;
      const real_t tmp235 = 0.0084625239161731543*tmp234;
      const real_t tmp236 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp237 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp238 = tmp236 - tmp237;
      const real_t tmp239 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp240 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp241 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp242 = tmp236*J_B_6(2, 2) - tmp237*J_B_6(2, 2) + tmp239*J_B_6(2, 0) - tmp240*J_B_6(2, 1) - tmp241*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp243 = 1.0 / (tmp242);
      const real_t tmp244 = tmp18*tmp243;
      const real_t tmp245 = tmp238*tmp244;
      const real_t tmp246 = tmp245*tmp6;
      const real_t tmp247 = tmp245*tmp27;
      const real_t tmp248 = -tmp240 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp249 = tmp244*tmp248;
      const real_t tmp250 = tmp249*tmp29;
      const real_t tmp251 = tmp249*tmp33;
      const real_t tmp252 = tmp245*tmp35;
      const real_t tmp253 = tmp249*tmp37;
      const real_t tmp254 = tmp239 - tmp241;
      const real_t tmp255 = tmp244*tmp254;
      const real_t tmp256 = tmp255*tmp39;
      const real_t tmp257 = tmp255*tmp43;
      const real_t tmp258 = tmp255*tmp45;
      const real_t tmp259 = 1.2518910405721839*tmp244;
      const real_t tmp260 = tmp259*(-J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0));
      const real_t tmp261 = tmp259*(J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0));
      const real_t tmp262 = tmp259*(-J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1));
      const real_t tmp263 = tmp59*(-tmp260*tmp27 - tmp260*tmp35 - tmp260*tmp6 - tmp261*tmp29 - tmp261*tmp33 - tmp261*tmp37 - tmp262*tmp39 - tmp262*tmp43 - tmp262*tmp45)*std::abs(tmp242)*ScalarCoeff0_6;
      const real_t tmp264 = 0.0088251866742250357*tmp263;
      const real_t tmp265 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp266 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp267 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp268 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp269 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp270 = tmp265*J_B_7(2, 2) - tmp266*J_B_7(2, 2) + tmp267*J_B_7(2, 0) - tmp268*J_B_7(2, 1) - tmp269*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp271 = tmp18/tmp270;
      const real_t tmp272 = tmp271*(tmp265 - tmp266);
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = tmp271*(-tmp268 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp276 = tmp275*tmp29;
      const real_t tmp277 = tmp275*tmp33;
      const real_t tmp278 = tmp272*tmp35;
      const real_t tmp279 = tmp275*tmp37;
      const real_t tmp280 = tmp271*(tmp267 - tmp269);
      const real_t tmp281 = tmp280*tmp39;
      const real_t tmp282 = tmp280*tmp43;
      const real_t tmp283 = tmp280*tmp45;
      const real_t tmp284 = 0.77270393148826533*tmp271;
      const real_t tmp285 = tmp284*(-J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp286 = tmp284*(J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0));
      const real_t tmp287 = tmp284*(-J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp288 = tmp59*(tmp27*tmp285 + tmp285*tmp35 + tmp285*tmp6 + tmp286*tmp29 + tmp286*tmp33 + tmp286*tmp37 + tmp287*tmp39 + tmp287*tmp43 + tmp287*tmp45)*std::abs(tmp270)*ScalarCoeff0_7;
      const real_t tmp289 = 0.0077188851041817101*tmp288;
      const real_t tmp290 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp291 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp292 = tmp290 - tmp291;
      const real_t tmp293 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp294 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp295 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp296 = tmp290*J_B_8(2, 2) - tmp291*J_B_8(2, 2) + tmp293*J_B_8(2, 0) - tmp294*J_B_8(2, 1) - tmp295*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp297 = 1.0 / (tmp296);
      const real_t tmp298 = tmp18*tmp297;
      const real_t tmp299 = tmp292*tmp298;
      const real_t tmp300 = tmp299*tmp6;
      const real_t tmp301 = tmp27*tmp299;
      const real_t tmp302 = -tmp294 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp303 = tmp298*tmp302;
      const real_t tmp304 = tmp29*tmp303;
      const real_t tmp305 = tmp303*tmp33;
      const real_t tmp306 = tmp299*tmp35;
      const real_t tmp307 = tmp303*tmp37;
      const real_t tmp308 = tmp293 - tmp295;
      const real_t tmp309 = tmp298*tmp308;
      const real_t tmp310 = tmp309*tmp39;
      const real_t tmp311 = tmp309*tmp43;
      const real_t tmp312 = tmp309*tmp45;
      const real_t tmp313 = 0.9184440441026207*tmp298;
      const real_t tmp314 = tmp313*(-J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0));
      const real_t tmp315 = tmp313*(J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0));
      const real_t tmp316 = tmp313*(-J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1));
      const real_t tmp317 = tmp59*(-tmp27*tmp314 - tmp29*tmp315 - tmp314*tmp35 - tmp314*tmp6 - tmp315*tmp33 - tmp315*tmp37 - tmp316*tmp39 - tmp316*tmp43 - tmp316*tmp45)*std::abs(tmp296)*ScalarCoeff0_8;
      const real_t tmp318 = 0.006659242794062166*tmp317;
      const real_t tmp319 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp320 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp321 = tmp319 - tmp320;
      const real_t tmp322 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp323 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp324 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp325 = tmp319*J_B_9(2, 2) - tmp320*J_B_9(2, 2) + tmp322*J_B_9(2, 0) - tmp323*J_B_9(2, 1) - tmp324*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp326 = 1.0 / (tmp325);
      const real_t tmp327 = tmp18*tmp326;
      const real_t tmp328 = tmp321*tmp327;
      const real_t tmp329 = tmp328*tmp6;
      const real_t tmp330 = tmp27*tmp328;
      const real_t tmp331 = -tmp323 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp332 = tmp327*tmp331;
      const real_t tmp333 = tmp29*tmp332;
      const real_t tmp334 = tmp33*tmp332;
      const real_t tmp335 = tmp328*tmp35;
      const real_t tmp336 = tmp332*tmp37;
      const real_t tmp337 = tmp322 - tmp324;
      const real_t tmp338 = tmp327*tmp337;
      const real_t tmp339 = tmp338*tmp39;
      const real_t tmp340 = tmp338*tmp43;
      const real_t tmp341 = tmp338*tmp45;
      const real_t tmp342 = 0.37454442704241986*tmp327;
      const real_t tmp343 = tmp342*(-J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0));
      const real_t tmp344 = tmp342*(J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0));
      const real_t tmp345 = tmp342*(-J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1));
      const real_t tmp346 = tmp59*(tmp27*tmp343 + tmp29*tmp344 + tmp33*tmp344 + tmp343*tmp35 + tmp343*tmp6 + tmp344*tmp37 + tmp345*tmp39 + tmp345*tmp43 + tmp345*tmp45)*std::abs(tmp325)*ScalarCoeff0_9;
      const real_t tmp347 = 0.0061548665412862651*tmp346;
      const real_t tmp348 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp349 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp350 = 0.2723974837528258*tmp77 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp87;
      const real_t tmp351 = 0.3256196736114374*tmp76 + 0.3256196736114374*tmp80 + 0.3256196736114374*tmp86;
      const real_t tmp352 = 0.054242807519210512*tmp106 + 0.054242807519210512*tmp110 + 0.054242807519210512*tmp116;
      const real_t tmp353 = 0.69877623478892303*tmp105 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp115;
      const real_t tmp354 = 1.2716142408535775*tmp135 + 1.2716142408535775*tmp139 + 1.2716142408535775*tmp145;
      const real_t tmp355 = 1.3169318389705873*tmp134 + 1.3169318389705873*tmp138 + 1.3169318389705873*tmp144;
      const real_t tmp356 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp168 + 1.4152929568371884*tmp174;
      const real_t tmp357 = 0.41537646564397157*tmp163 + 0.41537646564397157*tmp167 + 0.41537646564397157*tmp173;
      const real_t tmp358 = 0.50720690366156718*tmp193 + 0.50720690366156718*tmp197 + 0.50720690366156718*tmp203;
      const real_t tmp359 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp196 + 1.2177936097379878*tmp202;
      const real_t tmp360 = 1.3207616593498592*tmp220 + 1.3207616593498592*tmp223 + 1.3207616593498592*tmp228;
      const real_t tmp361 = 2.1520288156647434*tmp219 + 2.1520288156647434*tmp222 + 2.1520288156647434*tmp227;
      const real_t tmp362 = 1.2259759537187613*tmp247 + 1.2259759537187613*tmp251 + 1.2259759537187613*tmp257;
      const real_t tmp363 = 0.035965040373342916*tmp246 + 0.035965040373342916*tmp250 + 0.035965040373342916*tmp256;
      const real_t tmp364 = 0.23782646519773576*tmp274 + 0.23782646519773576*tmp277 + 0.23782646519773576*tmp282;
      const real_t tmp365 = 1.7318139619254227*tmp273 + 1.7318139619254227*tmp276 + 1.7318139619254227*tmp281;
      const real_t tmp366 = 0.19112574223634571*tmp301 + 0.19112574223634571*tmp305 + 0.19112574223634571*tmp311;
      const real_t tmp367 = 0.21336495814298084*tmp300 + 0.21336495814298084*tmp304 + 0.21336495814298084*tmp310;
      const real_t tmp368 = 0.14073571909439453*tmp330 + 0.14073571909439453*tmp334 + 0.14073571909439453*tmp340;
      const real_t tmp369 = 2.9649155283744921*tmp329 + 2.9649155283744921*tmp333 + 2.9649155283744921*tmp339;
      const real_t tmp370 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp371 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp372 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp88;
      const real_t tmp373 = 3.0100340280386204*tmp76 + 3.0100340280386204*tmp80 + 3.0100340280386204*tmp86;
      const real_t tmp374 = 0.054242807519210512*tmp111 + 0.054242807519210512*tmp112 + 0.054242807519210512*tmp117;
      const real_t tmp375 = 0.16196202691036121*tmp105 + 0.16196202691036121*tmp109 + 0.16196202691036121*tmp115;
      const real_t tmp376 = 1.2716142408535775*tmp140 + 1.2716142408535775*tmp141 + 1.2716142408535775*tmp146;
      const real_t tmp377 = 0.11827798082591956*tmp134 + 0.11827798082591956*tmp138 + 0.11827798082591956*tmp144;
      const real_t tmp378 = 1.4152929568371884*tmp169 + 1.4152929568371884*tmp170 + 1.4152929568371884*tmp175;
      const real_t tmp379 = 1.730840956191074*tmp163 + 1.730840956191074*tmp167 + 1.730840956191074*tmp173;
      const real_t tmp380 = 0.50720690366156718*tmp198 + 0.50720690366156718*tmp199 + 0.50720690366156718*tmp204;
      const real_t tmp381 = 0.96110665971229103*tmp192 + 0.96110665971229103*tmp196 + 0.96110665971229103*tmp202;
      const real_t tmp382 = 1.3207616593498592*tmp224 + 1.3207616593498592*tmp225 + 1.3207616593498592*tmp229;
      const real_t tmp383 = 0.51764549515564062*tmp219 + 0.51764549515564062*tmp222 + 0.51764549515564062*tmp227;
      const real_t tmp384 = 1.2259759537187613*tmp252 + 1.2259759537187613*tmp253 + 1.2259759537187613*tmp258;
      const real_t tmp385 = 0.48616796533571183*tmp246 + 0.48616796533571183*tmp250 + 0.48616796533571183*tmp256;
      const real_t tmp386 = 0.23782646519773576*tmp278 + 0.23782646519773576*tmp279 + 0.23782646519773576*tmp283;
      const real_t tmp387 = 1.8030635043651069*tmp273 + 1.8030635043651069*tmp276 + 1.8030635043651069*tmp281;
      const real_t tmp388 = 0.19112574223634571*tmp306 + 0.19112574223634571*tmp307 + 0.19112574223634571*tmp312;
      const real_t tmp389 = 1.6770652555180527*tmp300 + 1.6770652555180527*tmp304 + 1.6770652555180527*tmp310;
      const real_t tmp390 = 0.14073571909439453*tmp335 + 0.14073571909439453*tmp336 + 0.14073571909439453*tmp341;
      const real_t tmp391 = 0.2688931795735332*tmp329 + 0.2688931795735332*tmp333 + 0.2688931795735332*tmp339;
      const real_t tmp392 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp393 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp394 = 0.3256196736114374*tmp82 + 0.3256196736114374*tmp83 + 0.3256196736114374*tmp88;
      const real_t tmp395 = 3.0100340280386204*tmp77 + 3.0100340280386204*tmp81 + 3.0100340280386204*tmp87;
      const real_t tmp396 = 0.69877623478892303*tmp111 + 0.69877623478892303*tmp112 + 0.69877623478892303*tmp117;
      const real_t tmp397 = 0.16196202691036121*tmp106 + 0.16196202691036121*tmp110 + 0.16196202691036121*tmp116;
      const real_t tmp398 = 1.3169318389705873*tmp140 + 1.3169318389705873*tmp141 + 1.3169318389705873*tmp146;
      const real_t tmp399 = 0.11827798082591956*tmp135 + 0.11827798082591956*tmp139 + 0.11827798082591956*tmp145;
      const real_t tmp400 = 0.41537646564397157*tmp169 + 0.41537646564397157*tmp170 + 0.41537646564397157*tmp175;
      const real_t tmp401 = 1.730840956191074*tmp164 + 1.730840956191074*tmp168 + 1.730840956191074*tmp174;
      const real_t tmp402 = 1.2177936097379878*tmp198 + 1.2177936097379878*tmp199 + 1.2177936097379878*tmp204;
      const real_t tmp403 = 0.96110665971229103*tmp193 + 0.96110665971229103*tmp197 + 0.96110665971229103*tmp203;
      const real_t tmp404 = 2.1520288156647434*tmp224 + 2.1520288156647434*tmp225 + 2.1520288156647434*tmp229;
      const real_t tmp405 = 0.51764549515564062*tmp220 + 0.51764549515564062*tmp223 + 0.51764549515564062*tmp228;
      const real_t tmp406 = 0.035965040373342916*tmp252 + 0.035965040373342916*tmp253 + 0.035965040373342916*tmp258;
      const real_t tmp407 = 0.48616796533571183*tmp247 + 0.48616796533571183*tmp251 + 0.48616796533571183*tmp257;
      const real_t tmp408 = 1.7318139619254227*tmp278 + 1.7318139619254227*tmp279 + 1.7318139619254227*tmp283;
      const real_t tmp409 = 1.8030635043651069*tmp274 + 1.8030635043651069*tmp277 + 1.8030635043651069*tmp282;
      const real_t tmp410 = 0.21336495814298084*tmp306 + 0.21336495814298084*tmp307 + 0.21336495814298084*tmp312;
      const real_t tmp411 = 1.6770652555180527*tmp301 + 1.6770652555180527*tmp305 + 1.6770652555180527*tmp311;
      const real_t tmp412 = 2.9649155283744921*tmp335 + 2.9649155283744921*tmp336 + 2.9649155283744921*tmp341;
      const real_t tmp413 = 0.2688931795735332*tmp330 + 0.2688931795735332*tmp334 + 0.2688931795735332*tmp340;
      elMat(0,0) = -tmp123*(-2.0850189307815055*tmp105 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp110 - 2.0850189307815055*tmp111 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp115 - 2.0850189307815055*tmp116 - 2.0850189307815055*tmp117) - tmp152*(-0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp138 - 0.29317593934991559*tmp139 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp144 - 0.29317593934991559*tmp145 - 0.29317593934991559*tmp146) - tmp181*(0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp167 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170 + 0.56151037867223397*tmp173 + 0.56151037867223397*tmp174 + 0.56151037867223397*tmp175) - tmp210*(-0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198 - 0.31389282688815401*tmp199 - 0.31389282688815401*tmp202 - 0.31389282688815401*tmp203 - 0.31389282688815401*tmp204) - tmp235*(0.99043597017024343*tmp219 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp222 + 0.99043597017024343*tmp223 + 0.99043597017024343*tmp224 + 0.99043597017024343*tmp225 + 0.99043597017024343*tmp227 + 0.99043597017024343*tmp228 + 0.99043597017024343*tmp229) - tmp264*(-1.2518910405721839*tmp246 - 1.2518910405721839*tmp247 - 1.2518910405721839*tmp250 - 1.2518910405721839*tmp251 - 1.2518910405721839*tmp252 - 1.2518910405721839*tmp253 - 1.2518910405721839*tmp256 - 1.2518910405721839*tmp257 - 1.2518910405721839*tmp258) - tmp289*(0.77270393148826533*tmp273 + 0.77270393148826533*tmp274 + 0.77270393148826533*tmp276 + 0.77270393148826533*tmp277 + 0.77270393148826533*tmp278 + 0.77270393148826533*tmp279 + 0.77270393148826533*tmp281 + 0.77270393148826533*tmp282 + 0.77270393148826533*tmp283) - tmp318*(-0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp304 - 0.9184440441026207*tmp305 - 0.9184440441026207*tmp306 - 0.9184440441026207*tmp307 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp311 - 0.9184440441026207*tmp312) - tmp347*(0.37454442704241986*tmp329 + 0.37454442704241986*tmp330 + 0.37454442704241986*tmp333 + 0.37454442704241986*tmp334 + 0.37454442704241986*tmp335 + 0.37454442704241986*tmp336 + 0.37454442704241986*tmp339 + 0.37454442704241986*tmp340 + 0.37454442704241986*tmp341) - tmp65*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46) - tmp94*(0.60805118540288361*tmp76 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      elMat(0,1) = 0.0036548782978011126*tmp122*(tmp111 + tmp112 + tmp117) + 0.010799549999884401*tmp151*(tmp140 + tmp141 + tmp146) - 0.012584765868454714*tmp180*(tmp169 + tmp170 + tmp175) + 0.00083582139204094858*tmp209*(tmp198 + tmp199 + tmp204) + 0.0040819365333192512*tmp234*(tmp224 + tmp225 + tmp229) + 0.0045346636251092122*tmp263*(tmp252 + tmp253 + tmp258) - 0.0061987549215557864*tmp288*(tmp278 + tmp279 + tmp283) - 0.0045087419239184514*tmp317*(tmp306 + tmp307 + tmp312) + 0.0044998649071490461*tmp346*(tmp335 + tmp336 + tmp341) + 0.0072301427194886381*tmp64*(tmp36 + tmp38 + tmp46) - 0.012344594760863713*tmp93*(tmp82 + tmp83 + tmp88);
      elMat(0,2) = 0.0013137068218914037*tmp122*(tmp106 + tmp110 + tmp116) - 0.0038818597778972029*tmp151*(tmp135 + tmp139 + tmp145) + 0.010066964965131993*tmp180*(tmp164 + tmp168 + tmp174) - 0.0046804043242939224*tmp209*(tmp193 + tmp197 + tmp203) - 0.0097490714046835261*tmp234*(tmp220 + tmp223 + tmp228) + 0.0085077884791842431*tmp263*(tmp247 + tmp251 + tmp257) - 0.0056487878897383461*tmp288*(tmp274 + tmp277 + tmp282) + 0.005238393734043144*tmp317*(tmp301 + tmp305 + tmp311) - 0.012093792842045984*tmp346*(tmp330 + tmp334 + tmp340) + 0.0067853652681886352*tmp64*(tmp28 + tmp34 + tmp44) + 0.0041416969702195786*tmp93*(tmp77 + tmp81 + tmp87);
      elMat(0,3) = 0.0041246668394316508*tmp122*(tmp105 + tmp109 + tmp115) - 0.0033267985952381263*tmp151*(tmp134 + tmp138 + tmp144) - 0.0071511654955033511*tmp180*(tmp163 + tmp167 + tmp173) + 0.010590168103918869*tmp209*(tmp192 + tmp196 + tmp202) - 0.0027144532136395704*tmp234*(tmp219 + tmp222 + tmp227) - 0.0019942799754541058*tmp263*(tmp246 + tmp250 + tmp256) + 0.005883129944586717*tmp288*(tmp273 + tmp276 + tmp281) + 0.0053864900723149976*tmp317*(tmp300 + tmp304 + tmp310) + 0.0052886569726683132*tmp346*(tmp329 + tmp333 + tmp339) - 0.020554974928565235*tmp64*(tmp26 + tmp32 + tmp42) + 0.0044685602754798454*tmp93*(tmp76 + tmp80 + tmp86);
      elMat(0,4) = -tmp123*(tmp352 + tmp353) - tmp152*(tmp354 + tmp355) - tmp181*(tmp356 + tmp357) - tmp210*(tmp358 + tmp359) - tmp235*(tmp360 + tmp361) - tmp264*(tmp362 + tmp363) - tmp289*(tmp364 + tmp365) - tmp318*(tmp366 + tmp367) - tmp347*(tmp368 + tmp369) - tmp65*(tmp348 + tmp349) - tmp94*(tmp350 + tmp351);
      elMat(0,5) = -tmp123*(tmp374 + tmp375) - tmp152*(tmp376 + tmp377) - tmp181*(tmp378 + tmp379) - tmp210*(tmp380 + tmp381) - tmp235*(tmp382 + tmp383) - tmp264*(tmp384 + tmp385) - tmp289*(tmp386 + tmp387) - tmp318*(tmp388 + tmp389) - tmp347*(tmp390 + tmp391) - tmp65*(tmp370 + tmp371) - tmp94*(tmp372 + tmp373);
      elMat(0,6) = -tmp123*(tmp396 + tmp397) - tmp152*(tmp398 + tmp399) - tmp181*(tmp400 + tmp401) - tmp210*(tmp402 + tmp403) - tmp235*(tmp404 + tmp405) - tmp264*(tmp406 + tmp407) - tmp289*(tmp408 + tmp409) - tmp318*(tmp410 + tmp411) - tmp347*(tmp412 + tmp413) - tmp65*(tmp392 + tmp393) - tmp94*(tmp394 + tmp395);
      elMat(0,7) = -tmp123*(3.030776123262295*tmp102*tmp107*tmp18*tmp29 + 3.030776123262295*tmp102*tmp113*tmp18*tmp39 + 3.030776123262295*tmp102*tmp18*tmp6*tmp97 - tmp352 - tmp374) - tmp152*(0.021561698496338266*tmp126*tmp131*tmp18*tmp6 + 0.021561698496338266*tmp131*tmp136*tmp18*tmp29 + 0.021561698496338266*tmp131*tmp142*tmp18*tmp39 - tmp354 - tmp376) - tmp181*(-0.97680333550942233*tmp163 - 0.97680333550942233*tmp167 - 0.97680333550942233*tmp173 - tmp356 - tmp378) - tmp210*(0.80668592322658683*tmp18*tmp184*tmp189*tmp6 + 0.80668592322658683*tmp18*tmp189*tmp194*tmp29 + 0.80668592322658683*tmp18*tmp189*tmp200*tmp39 - tmp358 - tmp380) - tmp235*(-1.3111976295201027*tmp219 - 1.3111976295201027*tmp222 - 1.3111976295201027*tmp227 - tmp360 - tmp382) - tmp264*(1.0259150868534226*tmp18*tmp238*tmp243*tmp6 + 1.0259150868534226*tmp18*tmp243*tmp248*tmp29 + 1.0259150868534226*tmp18*tmp243*tmp254*tmp39 - tmp362 - tmp384) - tmp289*(-0.010530396686001087*tmp273 - 0.010530396686001087*tmp276 - 0.010530396686001087*tmp281 - tmp364 - tmp386) - tmp318*(1.727318301866275*tmp18*tmp29*tmp297*tmp302 + 1.727318301866275*tmp18*tmp292*tmp297*tmp6 + 1.727318301866275*tmp18*tmp297*tmp308*tmp39 - tmp366 - tmp388) - tmp347*(0.48471985386318561*tmp18*tmp29*tmp326*tmp331 + 0.48471985386318561*tmp18*tmp321*tmp326*tmp6 + 0.48471985386318561*tmp18*tmp326*tmp337*tmp39 - tmp368 - tmp390) - tmp65*(-2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - tmp348 - tmp370 - 2.2903585922226259*tmp42) - tmp94*(0.11955133084429059*tmp18*tmp29*tmp73*tmp78 + 0.11955133084429059*tmp18*tmp39*tmp73*tmp84 + 0.11955133084429059*tmp18*tmp6*tmp68*tmp73 - tmp350 - tmp372);
      elMat(0,8) = -tmp123*(2.3862426959925824*tmp102*tmp107*tmp18*tmp33 + 2.3862426959925824*tmp102*tmp113*tmp18*tmp43 + 2.3862426959925824*tmp102*tmp18*tmp27*tmp97 - tmp353 - tmp396) - tmp152*(-0.023755899620671705*tmp135 - 0.023755899620671705*tmp139 - 0.023755899620671705*tmp145 - tmp355 - tmp398) - tmp181*(0.023113155683794462*tmp155*tmp160*tmp18*tmp27 + 0.023113155683794462*tmp160*tmp165*tmp18*tmp33 + 0.023113155683794462*tmp160*tmp171*tmp18*tmp43 - tmp357 - tmp400) - tmp210*(0.096099217150166227*tmp18*tmp184*tmp189*tmp27 + 0.096099217150166227*tmp18*tmp189*tmp194*tmp33 + 0.096099217150166227*tmp18*tmp189*tmp200*tmp43 - tmp359 - tmp402) - tmp235*(-2.1424647858349868*tmp220 - 2.1424647858349868*tmp223 - 2.1424647858349868*tmp228 - tmp361 - tmp404) - tmp264*(2.215926000198841*tmp18*tmp238*tmp243*tmp27 + 2.215926000198841*tmp18*tmp243*tmp248*tmp33 + 2.215926000198841*tmp18*tmp243*tmp254*tmp43 - tmp363 - tmp406) - tmp289*(-1.504517893413688*tmp274 - 1.504517893413688*tmp277 - 1.504517893413688*tmp282 - tmp365 - tmp408) - tmp318*(1.7050790859596399*tmp18*tmp27*tmp292*tmp297 + 1.7050790859596399*tmp18*tmp297*tmp302*tmp33 + 1.7050790859596399*tmp18*tmp297*tmp308*tmp43 - tmp367 - tmp410) - tmp347*(-2.339459955416912*tmp330 - 2.339459955416912*tmp334 - 2.339459955416912*tmp340 - tmp369 - tmp412) - tmp65*(0.020786379341558803*tmp18*tmp23*tmp27*tmp9 + 0.020786379341558803*tmp18*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp18*tmp23*tmp40*tmp43 - tmp349 - tmp392) - tmp94*(0.066329140985678992*tmp18*tmp27*tmp68*tmp73 + 0.066329140985678992*tmp18*tmp33*tmp73*tmp78 + 0.066329140985678992*tmp18*tmp43*tmp73*tmp84 - tmp351 - tmp394);
      elMat(0,9) = -tmp123*(2.923056903871144*tmp102*tmp107*tmp18*tmp37 + 2.923056903871144*tmp102*tmp113*tmp18*tmp45 + 2.923056903871144*tmp102*tmp18*tmp35*tmp97 - tmp375 - tmp397) - tmp152*(1.1748979585239958*tmp126*tmp131*tmp18*tmp35 + 1.1748979585239958*tmp131*tmp136*tmp18*tmp37 + 1.1748979585239958*tmp131*tmp142*tmp18*tmp45 - tmp377 - tmp399) - tmp181*(-1.292351334863308*tmp169 - 1.292351334863308*tmp170 - 1.292351334863308*tmp175 - tmp379 - tmp401) - tmp210*(0.35278616717586297*tmp18*tmp184*tmp189*tmp35 + 0.35278616717586297*tmp18*tmp189*tmp194*tmp37 + 0.35278616717586297*tmp18*tmp189*tmp200*tmp45 - tmp381 - tmp403) - tmp235*(-0.50808146532588383*tmp224 - 0.50808146532588383*tmp225 - 0.50808146532588383*tmp229 - tmp383 - tmp405) - tmp264*(1.7657230752364721*tmp18*tmp238*tmp243*tmp35 + 1.7657230752364721*tmp18*tmp243*tmp248*tmp37 + 1.7657230752364721*tmp18*tmp243*tmp254*tmp45 - tmp385 - tmp407) - tmp289*(-1.5757674358533722*tmp278 - 1.5757674358533722*tmp279 - 1.5757674358533722*tmp283 - tmp387 - tmp409) - tmp318*(0.24137878858456796*tmp18*tmp292*tmp297*tmp35 + 0.24137878858456796*tmp18*tmp297*tmp302*tmp37 + 0.24137878858456796*tmp18*tmp297*tmp308*tmp45 - tmp389 - tmp411) - tmp347*(0.35656239338404694*tmp18*tmp321*tmp326*tmp35 + 0.35656239338404694*tmp18*tmp326*tmp331*tmp37 + 0.35656239338404694*tmp18*tmp326*tmp337*tmp45 - tmp391 - tmp413) - tmp65*(0.058384491239200198*tmp18*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp18*tmp23*tmp35*tmp9 + 0.058384491239200198*tmp18*tmp23*tmp40*tmp45 - tmp371 - tmp393) - tmp94*(-tmp373 - tmp395 - 2.6180852134415042*tmp82 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp88);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(3,3) = 0;
      elMat(3,4) = 0;
      elMat(3,5) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(4,3) = 0;
      elMat(4,4) = 0;
      elMat(4,5) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
      elMat(5,3) = 0;
      elMat(5,4) = 0;
      elMat(5,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_0_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp17*J_B_1(2, 2) + tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 2) - tmp21*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp16*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp11*tmp4 - tmp14;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp30 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp8 - tmp15;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp10 + tmp13;
      const real_t tmp40 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = 0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46;
      const real_t tmp48 = tmp17 - tmp20;
      const real_t tmp49 = tmp24*tmp48;
      const real_t tmp50 = tmp49*tmp6;
      const real_t tmp51 = tmp27*tmp49;
      const real_t tmp52 = -tmp19 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp53 = tmp24*tmp52;
      const real_t tmp54 = tmp29*tmp53;
      const real_t tmp55 = tmp33*tmp53;
      const real_t tmp56 = tmp35*tmp49;
      const real_t tmp57 = tmp37*tmp53;
      const real_t tmp58 = tmp18 - tmp21;
      const real_t tmp59 = tmp24*tmp58;
      const real_t tmp60 = tmp39*tmp59;
      const real_t tmp61 = tmp43*tmp59;
      const real_t tmp62 = tmp45*tmp59;
      const real_t tmp63 = coords[0][0]*coords[1][1];
      const real_t tmp64 = coords[0][0]*coords[1][2];
      const real_t tmp65 = coords[2][1]*coords[3][2];
      const real_t tmp66 = coords[0][1]*coords[1][0];
      const real_t tmp67 = coords[0][1]*coords[1][2];
      const real_t tmp68 = coords[2][2]*coords[3][0];
      const real_t tmp69 = coords[0][2]*coords[1][0];
      const real_t tmp70 = coords[0][2]*coords[1][1];
      const real_t tmp71 = coords[2][0]*coords[3][1];
      const real_t tmp72 = coords[2][2]*coords[3][1];
      const real_t tmp73 = coords[2][0]*coords[3][2];
      const real_t tmp74 = coords[2][1]*coords[3][0];
      const real_t tmp75 = std::abs(coords[0][0]*tmp65 - coords[0][0]*tmp72 + coords[0][1]*tmp68 - coords[0][1]*tmp73 + coords[0][2]*tmp71 - coords[0][2]*tmp74 - coords[1][0]*tmp65 + coords[1][0]*tmp72 - coords[1][1]*tmp68 + coords[1][1]*tmp73 - coords[1][2]*tmp71 + coords[1][2]*tmp74 + coords[2][0]*tmp67 - coords[2][0]*tmp70 - coords[2][1]*tmp64 + coords[2][1]*tmp69 + coords[2][2]*tmp63 - coords[2][2]*tmp66 - coords[3][0]*tmp67 + coords[3][0]*tmp70 + coords[3][1]*tmp64 - coords[3][1]*tmp69 - coords[3][2]*tmp63 + coords[3][2]*tmp66);
      const real_t tmp76 = tmp75*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp77 = tmp76*(0.55279693041046674*tmp50 + 0.55279693041046674*tmp51 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62);
      const real_t tmp78 = 0.011829781572832234*tmp77;
      const real_t tmp79 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp80 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp81 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp82 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp83 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp84 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp85 = tmp80*J_B_10(2, 2) + tmp81*J_B_10(2, 0) - tmp82*J_B_10(2, 1) - tmp83*J_B_10(2, 2) - tmp84*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp86 = 1.0 / (tmp85);
      const real_t tmp87 = tmp16*tmp86;
      const real_t tmp88 = tmp79*tmp87;
      const real_t tmp89 = tmp6*tmp88;
      const real_t tmp90 = tmp27*tmp88;
      const real_t tmp91 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp92 = tmp87*tmp91;
      const real_t tmp93 = tmp29*tmp92;
      const real_t tmp94 = tmp33*tmp92;
      const real_t tmp95 = tmp35*tmp88;
      const real_t tmp96 = tmp37*tmp92;
      const real_t tmp97 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp98 = tmp87*tmp97;
      const real_t tmp99 = tmp39*tmp98;
      const real_t tmp100 = tmp43*tmp98;
      const real_t tmp101 = tmp45*tmp98;
      const real_t tmp102 = 0.60805118540288361*tmp100 + 0.60805118540288361*tmp101 + 0.60805118540288361*tmp89 + 0.60805118540288361*tmp90 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp95 + 0.60805118540288361*tmp96 + 0.60805118540288361*tmp99;
      const real_t tmp103 = tmp80 - tmp83;
      const real_t tmp104 = tmp103*tmp87;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -tmp82 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp108 = tmp107*tmp87;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = tmp81 - tmp84;
      const real_t tmp114 = tmp113*tmp87;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = tmp75*std::abs(tmp85)*ScalarCoeff0_10;
      const real_t tmp119 = tmp118*(0.60805118540288361*tmp105 + 0.60805118540288361*tmp106 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp111 + 0.60805118540288361*tmp112 + 0.60805118540288361*tmp115 + 0.60805118540288361*tmp116 + 0.60805118540288361*tmp117);
      const real_t tmp120 = 0.0061414854617707626*tmp119;
      const real_t tmp121 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp122 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp123 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp124 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp125 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp126 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp127 = tmp122*J_B_11(2, 2) + tmp123*J_B_11(2, 0) - tmp124*J_B_11(2, 1) - tmp125*J_B_11(2, 2) - tmp126*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp128 = 1.0 / (tmp127);
      const real_t tmp129 = tmp128*tmp16;
      const real_t tmp130 = tmp121*tmp129;
      const real_t tmp131 = tmp130*tmp6;
      const real_t tmp132 = tmp130*tmp27;
      const real_t tmp133 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp134 = tmp129*tmp133;
      const real_t tmp135 = tmp134*tmp29;
      const real_t tmp136 = tmp134*tmp33;
      const real_t tmp137 = tmp130*tmp35;
      const real_t tmp138 = tmp134*tmp37;
      const real_t tmp139 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp140 = tmp129*tmp139;
      const real_t tmp141 = tmp140*tmp39;
      const real_t tmp142 = tmp140*tmp43;
      const real_t tmp143 = tmp140*tmp45;
      const real_t tmp144 = -2.0850189307815055*tmp131 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp136 - 2.0850189307815055*tmp137 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp141 - 2.0850189307815055*tmp142 - 2.0850189307815055*tmp143;
      const real_t tmp145 = tmp122 - tmp125;
      const real_t tmp146 = tmp129*tmp145;
      const real_t tmp147 = tmp146*tmp6;
      const real_t tmp148 = tmp146*tmp27;
      const real_t tmp149 = -tmp124 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp150 = tmp129*tmp149;
      const real_t tmp151 = tmp150*tmp29;
      const real_t tmp152 = tmp150*tmp33;
      const real_t tmp153 = tmp146*tmp35;
      const real_t tmp154 = tmp150*tmp37;
      const real_t tmp155 = tmp123 - tmp126;
      const real_t tmp156 = tmp129*tmp155;
      const real_t tmp157 = tmp156*tmp39;
      const real_t tmp158 = tmp156*tmp43;
      const real_t tmp159 = tmp156*tmp45;
      const real_t tmp160 = tmp75*std::abs(tmp127)*ScalarCoeff0_11;
      const real_t tmp161 = tmp160*(-2.0850189307815055*tmp147 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp152 - 2.0850189307815055*tmp153 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp157 - 2.0850189307815055*tmp158 - 2.0850189307815055*tmp159);
      const real_t tmp162 = 0.0043612323249822204*tmp161;
      const real_t tmp163 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp164 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp165 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp166 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp167 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp168 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp169 = tmp164*J_B_2(2, 2) + tmp165*J_B_2(2, 0) - tmp166*J_B_2(2, 1) - tmp167*J_B_2(2, 2) - tmp168*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp170 = 1.0 / (tmp169);
      const real_t tmp171 = tmp16*tmp170;
      const real_t tmp172 = tmp163*tmp171;
      const real_t tmp173 = tmp172*tmp6;
      const real_t tmp174 = tmp172*tmp27;
      const real_t tmp175 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp176 = tmp171*tmp175;
      const real_t tmp177 = tmp176*tmp29;
      const real_t tmp178 = tmp176*tmp33;
      const real_t tmp179 = tmp172*tmp35;
      const real_t tmp180 = tmp176*tmp37;
      const real_t tmp181 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp182 = tmp171*tmp181;
      const real_t tmp183 = tmp182*tmp39;
      const real_t tmp184 = tmp182*tmp43;
      const real_t tmp185 = tmp182*tmp45;
      const real_t tmp186 = -0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp177 - 0.29317593934991559*tmp178 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp183 - 0.29317593934991559*tmp184 - 0.29317593934991559*tmp185;
      const real_t tmp187 = tmp164 - tmp167;
      const real_t tmp188 = tmp171*tmp187;
      const real_t tmp189 = tmp188*tmp6;
      const real_t tmp190 = tmp188*tmp27;
      const real_t tmp191 = -tmp166 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp192 = tmp171*tmp191;
      const real_t tmp193 = tmp192*tmp29;
      const real_t tmp194 = tmp192*tmp33;
      const real_t tmp195 = tmp188*tmp35;
      const real_t tmp196 = tmp192*tmp37;
      const real_t tmp197 = tmp165 - tmp168;
      const real_t tmp198 = tmp171*tmp197;
      const real_t tmp199 = tmp198*tmp39;
      const real_t tmp200 = tmp198*tmp43;
      const real_t tmp201 = tmp198*tmp45;
      const real_t tmp202 = tmp75*std::abs(tmp169)*ScalarCoeff0_2;
      const real_t tmp203 = tmp202*(-0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp193 - 0.29317593934991559*tmp194 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp199 - 0.29317593934991559*tmp200 - 0.29317593934991559*tmp201);
      const real_t tmp204 = 0.012248248047610821*tmp203;
      const real_t tmp205 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp206 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp207 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp208 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp209 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp210 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp211 = tmp206*J_B_3(2, 2) + tmp207*J_B_3(2, 0) - tmp208*J_B_3(2, 1) - tmp209*J_B_3(2, 2) - tmp210*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp212 = 1.0 / (tmp211);
      const real_t tmp213 = tmp16*tmp212;
      const real_t tmp214 = tmp205*tmp213;
      const real_t tmp215 = tmp214*tmp6;
      const real_t tmp216 = tmp214*tmp27;
      const real_t tmp217 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp218 = tmp213*tmp217;
      const real_t tmp219 = tmp218*tmp29;
      const real_t tmp220 = tmp218*tmp33;
      const real_t tmp221 = tmp214*tmp35;
      const real_t tmp222 = tmp218*tmp37;
      const real_t tmp223 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp224 = tmp213*tmp223;
      const real_t tmp225 = tmp224*tmp39;
      const real_t tmp226 = tmp224*tmp43;
      const real_t tmp227 = tmp224*tmp45;
      const real_t tmp228 = 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp219 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222 + 0.56151037867223397*tmp225 + 0.56151037867223397*tmp226 + 0.56151037867223397*tmp227;
      const real_t tmp229 = tmp206 - tmp209;
      const real_t tmp230 = tmp213*tmp229;
      const real_t tmp231 = tmp230*tmp6;
      const real_t tmp232 = tmp230*tmp27;
      const real_t tmp233 = -tmp208 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp234 = tmp213*tmp233;
      const real_t tmp235 = tmp234*tmp29;
      const real_t tmp236 = tmp234*tmp33;
      const real_t tmp237 = tmp230*tmp35;
      const real_t tmp238 = tmp234*tmp37;
      const real_t tmp239 = tmp207 - tmp210;
      const real_t tmp240 = tmp213*tmp239;
      const real_t tmp241 = tmp240*tmp39;
      const real_t tmp242 = tmp240*tmp43;
      const real_t tmp243 = tmp240*tmp45;
      const real_t tmp244 = tmp75*std::abs(tmp211)*ScalarCoeff0_3;
      const real_t tmp245 = tmp244*(0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp235 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238 + 0.56151037867223397*tmp241 + 0.56151037867223397*tmp242 + 0.56151037867223397*tmp243);
      const real_t tmp246 = 0.017219568446249611*tmp245;
      const real_t tmp247 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp248 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp249 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp250 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp251 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp252 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp253 = tmp248*J_B_4(2, 2) + tmp249*J_B_4(2, 0) - tmp250*J_B_4(2, 1) - tmp251*J_B_4(2, 2) - tmp252*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp254 = 1.0 / (tmp253);
      const real_t tmp255 = tmp16*tmp254;
      const real_t tmp256 = tmp247*tmp255;
      const real_t tmp257 = tmp256*tmp6;
      const real_t tmp258 = tmp256*tmp27;
      const real_t tmp259 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp260 = tmp255*tmp259;
      const real_t tmp261 = tmp260*tmp29;
      const real_t tmp262 = tmp260*tmp33;
      const real_t tmp263 = tmp256*tmp35;
      const real_t tmp264 = tmp260*tmp37;
      const real_t tmp265 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp266 = tmp255*tmp265;
      const real_t tmp267 = tmp266*tmp39;
      const real_t tmp268 = tmp266*tmp43;
      const real_t tmp269 = tmp266*tmp45;
      const real_t tmp270 = -0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269;
      const real_t tmp271 = tmp248 - tmp251;
      const real_t tmp272 = tmp255*tmp271;
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = -tmp250 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp276 = tmp255*tmp275;
      const real_t tmp277 = tmp276*tmp29;
      const real_t tmp278 = tmp276*tmp33;
      const real_t tmp279 = tmp272*tmp35;
      const real_t tmp280 = tmp276*tmp37;
      const real_t tmp281 = tmp249 - tmp252;
      const real_t tmp282 = tmp255*tmp281;
      const real_t tmp283 = tmp282*tmp39;
      const real_t tmp284 = tmp282*tmp43;
      const real_t tmp285 = tmp282*tmp45;
      const real_t tmp286 = tmp75*std::abs(tmp253)*ScalarCoeff0_4;
      const real_t tmp287 = tmp286*(-0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279 - 0.31389282688815401*tmp280 - 0.31389282688815401*tmp283 - 0.31389282688815401*tmp284 - 0.31389282688815401*tmp285);
      const real_t tmp288 = 0.021490090227737114*tmp287;
      const real_t tmp289 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp290 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp291 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp292 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp293 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp294 = tmp289*J_B_5(2, 2) + tmp290*J_B_5(2, 0) - tmp291*J_B_5(2, 1) - tmp292*J_B_5(2, 2) - tmp293*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp295 = tmp16/tmp294;
      const real_t tmp296 = tmp295*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp297 = tmp296*tmp6;
      const real_t tmp298 = tmp27*tmp296;
      const real_t tmp299 = tmp295*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp300 = tmp29*tmp299;
      const real_t tmp301 = tmp299*tmp33;
      const real_t tmp302 = tmp296*tmp35;
      const real_t tmp303 = tmp299*tmp37;
      const real_t tmp304 = tmp295*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp305 = tmp304*tmp39;
      const real_t tmp306 = tmp304*tmp43;
      const real_t tmp307 = tmp304*tmp45;
      const real_t tmp308 = 0.99043597017024343*tmp297 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp300 + 0.99043597017024343*tmp301 + 0.99043597017024343*tmp302 + 0.99043597017024343*tmp303 + 0.99043597017024343*tmp305 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307;
      const real_t tmp309 = tmp295*(tmp289 - tmp292);
      const real_t tmp310 = tmp309*tmp6;
      const real_t tmp311 = tmp27*tmp309;
      const real_t tmp312 = tmp295*(-tmp291 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp313 = tmp29*tmp312;
      const real_t tmp314 = tmp312*tmp33;
      const real_t tmp315 = tmp309*tmp35;
      const real_t tmp316 = tmp312*tmp37;
      const real_t tmp317 = tmp295*(tmp290 - tmp293);
      const real_t tmp318 = tmp317*tmp39;
      const real_t tmp319 = tmp317*tmp43;
      const real_t tmp320 = tmp317*tmp45;
      const real_t tmp321 = tmp75*std::abs(tmp294)*ScalarCoeff0_5;
      const real_t tmp322 = tmp321*(0.99043597017024343*tmp310 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp313 + 0.99043597017024343*tmp314 + 0.99043597017024343*tmp315 + 0.99043597017024343*tmp316 + 0.99043597017024343*tmp318 + 0.99043597017024343*tmp319 + 0.99043597017024343*tmp320);
      const real_t tmp323 = 0.0084625239161731543*tmp322;
      const real_t tmp324 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp325 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp326 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp327 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp328 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp329 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp330 = tmp325*J_B_6(2, 2) + tmp326*J_B_6(2, 0) - tmp327*J_B_6(2, 1) - tmp328*J_B_6(2, 2) - tmp329*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp331 = 1.0 / (tmp330);
      const real_t tmp332 = tmp16*tmp331;
      const real_t tmp333 = tmp324*tmp332;
      const real_t tmp334 = tmp333*tmp6;
      const real_t tmp335 = tmp27*tmp333;
      const real_t tmp336 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp337 = tmp332*tmp336;
      const real_t tmp338 = tmp29*tmp337;
      const real_t tmp339 = tmp33*tmp337;
      const real_t tmp340 = tmp333*tmp35;
      const real_t tmp341 = tmp337*tmp37;
      const real_t tmp342 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp343 = tmp332*tmp342;
      const real_t tmp344 = tmp343*tmp39;
      const real_t tmp345 = tmp343*tmp43;
      const real_t tmp346 = tmp343*tmp45;
      const real_t tmp347 = -1.2518910405721839*tmp334 - 1.2518910405721839*tmp335 - 1.2518910405721839*tmp338 - 1.2518910405721839*tmp339 - 1.2518910405721839*tmp340 - 1.2518910405721839*tmp341 - 1.2518910405721839*tmp344 - 1.2518910405721839*tmp345 - 1.2518910405721839*tmp346;
      const real_t tmp348 = tmp325 - tmp328;
      const real_t tmp349 = tmp332*tmp348;
      const real_t tmp350 = tmp349*tmp6;
      const real_t tmp351 = tmp27*tmp349;
      const real_t tmp352 = -tmp327 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp353 = tmp332*tmp352;
      const real_t tmp354 = tmp29*tmp353;
      const real_t tmp355 = tmp33*tmp353;
      const real_t tmp356 = tmp349*tmp35;
      const real_t tmp357 = tmp353*tmp37;
      const real_t tmp358 = tmp326 - tmp329;
      const real_t tmp359 = tmp332*tmp358;
      const real_t tmp360 = tmp359*tmp39;
      const real_t tmp361 = tmp359*tmp43;
      const real_t tmp362 = tmp359*tmp45;
      const real_t tmp363 = tmp75*std::abs(tmp330)*ScalarCoeff0_6;
      const real_t tmp364 = tmp363*(-1.2518910405721839*tmp350 - 1.2518910405721839*tmp351 - 1.2518910405721839*tmp354 - 1.2518910405721839*tmp355 - 1.2518910405721839*tmp356 - 1.2518910405721839*tmp357 - 1.2518910405721839*tmp360 - 1.2518910405721839*tmp361 - 1.2518910405721839*tmp362);
      const real_t tmp365 = 0.0088251866742250357*tmp364;
      const real_t tmp366 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp367 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp368 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp369 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp370 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp371 = tmp366*J_B_7(2, 2) + tmp367*J_B_7(2, 0) - tmp368*J_B_7(2, 1) - tmp369*J_B_7(2, 2) - tmp370*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp372 = tmp16/tmp371;
      const real_t tmp373 = tmp372*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp374 = tmp373*tmp6;
      const real_t tmp375 = tmp27*tmp373;
      const real_t tmp376 = tmp372*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp377 = tmp29*tmp376;
      const real_t tmp378 = tmp33*tmp376;
      const real_t tmp379 = tmp35*tmp373;
      const real_t tmp380 = tmp37*tmp376;
      const real_t tmp381 = tmp372*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp382 = tmp381*tmp39;
      const real_t tmp383 = tmp381*tmp43;
      const real_t tmp384 = tmp381*tmp45;
      const real_t tmp385 = 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375 + 0.77270393148826533*tmp377 + 0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp380 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384;
      const real_t tmp386 = tmp372*(tmp366 - tmp369);
      const real_t tmp387 = tmp386*tmp6;
      const real_t tmp388 = tmp27*tmp386;
      const real_t tmp389 = tmp372*(-tmp368 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp390 = tmp29*tmp389;
      const real_t tmp391 = tmp33*tmp389;
      const real_t tmp392 = tmp35*tmp386;
      const real_t tmp393 = tmp37*tmp389;
      const real_t tmp394 = tmp372*(tmp367 - tmp370);
      const real_t tmp395 = tmp39*tmp394;
      const real_t tmp396 = tmp394*tmp43;
      const real_t tmp397 = tmp394*tmp45;
      const real_t tmp398 = tmp75*std::abs(tmp371)*ScalarCoeff0_7;
      const real_t tmp399 = tmp398*(0.77270393148826533*tmp387 + 0.77270393148826533*tmp388 + 0.77270393148826533*tmp390 + 0.77270393148826533*tmp391 + 0.77270393148826533*tmp392 + 0.77270393148826533*tmp393 + 0.77270393148826533*tmp395 + 0.77270393148826533*tmp396 + 0.77270393148826533*tmp397);
      const real_t tmp400 = 0.0077188851041817101*tmp399;
      const real_t tmp401 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp402 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp403 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp404 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp405 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp406 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp407 = tmp402*J_B_8(2, 2) + tmp403*J_B_8(2, 0) - tmp404*J_B_8(2, 1) - tmp405*J_B_8(2, 2) - tmp406*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp408 = 1.0 / (tmp407);
      const real_t tmp409 = tmp16*tmp408;
      const real_t tmp410 = tmp401*tmp409;
      const real_t tmp411 = tmp410*tmp6;
      const real_t tmp412 = tmp27*tmp410;
      const real_t tmp413 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp414 = tmp409*tmp413;
      const real_t tmp415 = tmp29*tmp414;
      const real_t tmp416 = tmp33*tmp414;
      const real_t tmp417 = tmp35*tmp410;
      const real_t tmp418 = tmp37*tmp414;
      const real_t tmp419 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp420 = tmp409*tmp419;
      const real_t tmp421 = tmp39*tmp420;
      const real_t tmp422 = tmp420*tmp43;
      const real_t tmp423 = tmp420*tmp45;
      const real_t tmp424 = -0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp415 - 0.9184440441026207*tmp416 - 0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423;
      const real_t tmp425 = tmp402 - tmp405;
      const real_t tmp426 = tmp409*tmp425;
      const real_t tmp427 = tmp426*tmp6;
      const real_t tmp428 = tmp27*tmp426;
      const real_t tmp429 = -tmp404 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp430 = tmp409*tmp429;
      const real_t tmp431 = tmp29*tmp430;
      const real_t tmp432 = tmp33*tmp430;
      const real_t tmp433 = tmp35*tmp426;
      const real_t tmp434 = tmp37*tmp430;
      const real_t tmp435 = tmp403 - tmp406;
      const real_t tmp436 = tmp409*tmp435;
      const real_t tmp437 = tmp39*tmp436;
      const real_t tmp438 = tmp43*tmp436;
      const real_t tmp439 = tmp436*tmp45;
      const real_t tmp440 = tmp75*std::abs(tmp407)*ScalarCoeff0_8;
      const real_t tmp441 = tmp440*(-0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp431 - 0.9184440441026207*tmp432 - 0.9184440441026207*tmp433 - 0.9184440441026207*tmp434 - 0.9184440441026207*tmp437 - 0.9184440441026207*tmp438 - 0.9184440441026207*tmp439);
      const real_t tmp442 = 0.006659242794062166*tmp441;
      const real_t tmp443 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp444 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp445 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp446 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp447 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp448 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp449 = tmp444*J_B_9(2, 2) + tmp445*J_B_9(2, 0) - tmp446*J_B_9(2, 1) - tmp447*J_B_9(2, 2) - tmp448*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp450 = 1.0 / (tmp449);
      const real_t tmp451 = tmp16*tmp450;
      const real_t tmp452 = tmp443*tmp451;
      const real_t tmp453 = tmp452*tmp6;
      const real_t tmp454 = tmp27*tmp452;
      const real_t tmp455 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp456 = tmp451*tmp455;
      const real_t tmp457 = tmp29*tmp456;
      const real_t tmp458 = tmp33*tmp456;
      const real_t tmp459 = tmp35*tmp452;
      const real_t tmp460 = tmp37*tmp456;
      const real_t tmp461 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp462 = tmp451*tmp461;
      const real_t tmp463 = tmp39*tmp462;
      const real_t tmp464 = tmp43*tmp462;
      const real_t tmp465 = tmp45*tmp462;
      const real_t tmp466 = 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454 + 0.37454442704241986*tmp457 + 0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp460 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465;
      const real_t tmp467 = tmp444 - tmp447;
      const real_t tmp468 = tmp451*tmp467;
      const real_t tmp469 = tmp468*tmp6;
      const real_t tmp470 = tmp27*tmp468;
      const real_t tmp471 = -tmp446 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp472 = tmp451*tmp471;
      const real_t tmp473 = tmp29*tmp472;
      const real_t tmp474 = tmp33*tmp472;
      const real_t tmp475 = tmp35*tmp468;
      const real_t tmp476 = tmp37*tmp472;
      const real_t tmp477 = tmp445 - tmp448;
      const real_t tmp478 = tmp451*tmp477;
      const real_t tmp479 = tmp39*tmp478;
      const real_t tmp480 = tmp43*tmp478;
      const real_t tmp481 = tmp45*tmp478;
      const real_t tmp482 = tmp75*std::abs(tmp449)*ScalarCoeff0_9;
      const real_t tmp483 = tmp482*(0.37454442704241986*tmp469 + 0.37454442704241986*tmp470 + 0.37454442704241986*tmp473 + 0.37454442704241986*tmp474 + 0.37454442704241986*tmp475 + 0.37454442704241986*tmp476 + 0.37454442704241986*tmp479 + 0.37454442704241986*tmp480 + 0.37454442704241986*tmp481);
      const real_t tmp484 = 0.0061548665412862651*tmp483;
      const real_t tmp485 = tmp36 + tmp38 + tmp46;
      const real_t tmp486 = 0.0072301427194886381*tmp485;
      const real_t tmp487 = tmp101 + tmp95 + tmp96;
      const real_t tmp488 = 0.012344594760863713*tmp487;
      const real_t tmp489 = tmp137 + tmp138 + tmp143;
      const real_t tmp490 = 0.0036548782978011126*tmp489;
      const real_t tmp491 = tmp179 + tmp180 + tmp185;
      const real_t tmp492 = 0.010799549999884401*tmp491;
      const real_t tmp493 = tmp221 + tmp222 + tmp227;
      const real_t tmp494 = 0.012584765868454714*tmp493;
      const real_t tmp495 = tmp263 + tmp264 + tmp269;
      const real_t tmp496 = 0.00083582139204094858*tmp495;
      const real_t tmp497 = tmp302 + tmp303 + tmp307;
      const real_t tmp498 = 0.0040819365333192512*tmp497;
      const real_t tmp499 = tmp340 + tmp341 + tmp346;
      const real_t tmp500 = 0.0045346636251092122*tmp499;
      const real_t tmp501 = tmp379 + tmp380 + tmp384;
      const real_t tmp502 = 0.0061987549215557864*tmp501;
      const real_t tmp503 = tmp417 + tmp418 + tmp423;
      const real_t tmp504 = 0.0045087419239184514*tmp503;
      const real_t tmp505 = tmp459 + tmp460 + tmp465;
      const real_t tmp506 = 0.0044998649071490461*tmp505;
      const real_t tmp507 = tmp28 + tmp34 + tmp44;
      const real_t tmp508 = 0.0067853652681886352*tmp507;
      const real_t tmp509 = tmp100 + tmp90 + tmp94;
      const real_t tmp510 = 0.0041416969702195786*tmp509;
      const real_t tmp511 = tmp132 + tmp136 + tmp142;
      const real_t tmp512 = 0.0013137068218914037*tmp511;
      const real_t tmp513 = tmp174 + tmp178 + tmp184;
      const real_t tmp514 = 0.0038818597778972029*tmp513;
      const real_t tmp515 = tmp216 + tmp220 + tmp226;
      const real_t tmp516 = 0.010066964965131993*tmp515;
      const real_t tmp517 = tmp258 + tmp262 + tmp268;
      const real_t tmp518 = 0.0046804043242939224*tmp517;
      const real_t tmp519 = tmp298 + tmp301 + tmp306;
      const real_t tmp520 = 0.0097490714046835261*tmp519;
      const real_t tmp521 = tmp335 + tmp339 + tmp345;
      const real_t tmp522 = 0.0085077884791842431*tmp521;
      const real_t tmp523 = tmp375 + tmp378 + tmp383;
      const real_t tmp524 = 0.0056487878897383461*tmp523;
      const real_t tmp525 = tmp412 + tmp416 + tmp422;
      const real_t tmp526 = 0.005238393734043144*tmp525;
      const real_t tmp527 = tmp454 + tmp458 + tmp464;
      const real_t tmp528 = 0.012093792842045984*tmp527;
      const real_t tmp529 = tmp26 + tmp32 + tmp42;
      const real_t tmp530 = 0.020554974928565235*tmp529;
      const real_t tmp531 = tmp89 + tmp93 + tmp99;
      const real_t tmp532 = 0.0044685602754798454*tmp531;
      const real_t tmp533 = tmp131 + tmp135 + tmp141;
      const real_t tmp534 = 0.0041246668394316508*tmp533;
      const real_t tmp535 = tmp173 + tmp177 + tmp183;
      const real_t tmp536 = 0.0033267985952381263*tmp535;
      const real_t tmp537 = tmp215 + tmp219 + tmp225;
      const real_t tmp538 = 0.0071511654955033511*tmp537;
      const real_t tmp539 = tmp257 + tmp261 + tmp267;
      const real_t tmp540 = 0.010590168103918869*tmp539;
      const real_t tmp541 = tmp297 + tmp300 + tmp305;
      const real_t tmp542 = 0.0027144532136395704*tmp541;
      const real_t tmp543 = tmp334 + tmp338 + tmp344;
      const real_t tmp544 = 0.0019942799754541058*tmp543;
      const real_t tmp545 = tmp374 + tmp377 + tmp382;
      const real_t tmp546 = 0.005883129944586717*tmp545;
      const real_t tmp547 = tmp411 + tmp415 + tmp421;
      const real_t tmp548 = 0.0053864900723149976*tmp547;
      const real_t tmp549 = tmp453 + tmp457 + tmp463;
      const real_t tmp550 = 0.0052886569726683132*tmp549;
      const real_t tmp551 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp552 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp553 = tmp551 + tmp552;
      const real_t tmp554 = 0.2723974837528258*tmp100 + 0.2723974837528258*tmp90 + 0.2723974837528258*tmp94;
      const real_t tmp555 = 0.3256196736114374*tmp89 + 0.3256196736114374*tmp93 + 0.3256196736114374*tmp99;
      const real_t tmp556 = tmp554 + tmp555;
      const real_t tmp557 = 0.054242807519210512*tmp132 + 0.054242807519210512*tmp136 + 0.054242807519210512*tmp142;
      const real_t tmp558 = 0.69877623478892303*tmp131 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp141;
      const real_t tmp559 = tmp557 + tmp558;
      const real_t tmp560 = 1.2716142408535775*tmp174 + 1.2716142408535775*tmp178 + 1.2716142408535775*tmp184;
      const real_t tmp561 = 1.3169318389705873*tmp173 + 1.3169318389705873*tmp177 + 1.3169318389705873*tmp183;
      const real_t tmp562 = tmp560 + tmp561;
      const real_t tmp563 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp220 + 1.4152929568371884*tmp226;
      const real_t tmp564 = 0.41537646564397157*tmp215 + 0.41537646564397157*tmp219 + 0.41537646564397157*tmp225;
      const real_t tmp565 = tmp563 + tmp564;
      const real_t tmp566 = 0.50720690366156718*tmp258 + 0.50720690366156718*tmp262 + 0.50720690366156718*tmp268;
      const real_t tmp567 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp261 + 1.2177936097379878*tmp267;
      const real_t tmp568 = tmp566 + tmp567;
      const real_t tmp569 = 1.3207616593498592*tmp298 + 1.3207616593498592*tmp301 + 1.3207616593498592*tmp306;
      const real_t tmp570 = 2.1520288156647434*tmp297 + 2.1520288156647434*tmp300 + 2.1520288156647434*tmp305;
      const real_t tmp571 = tmp569 + tmp570;
      const real_t tmp572 = 1.2259759537187613*tmp335 + 1.2259759537187613*tmp339 + 1.2259759537187613*tmp345;
      const real_t tmp573 = 0.035965040373342916*tmp334 + 0.035965040373342916*tmp338 + 0.035965040373342916*tmp344;
      const real_t tmp574 = tmp572 + tmp573;
      const real_t tmp575 = 0.23782646519773576*tmp375 + 0.23782646519773576*tmp378 + 0.23782646519773576*tmp383;
      const real_t tmp576 = 1.7318139619254227*tmp374 + 1.7318139619254227*tmp377 + 1.7318139619254227*tmp382;
      const real_t tmp577 = tmp575 + tmp576;
      const real_t tmp578 = 0.19112574223634571*tmp412 + 0.19112574223634571*tmp416 + 0.19112574223634571*tmp422;
      const real_t tmp579 = 0.21336495814298084*tmp411 + 0.21336495814298084*tmp415 + 0.21336495814298084*tmp421;
      const real_t tmp580 = tmp578 + tmp579;
      const real_t tmp581 = 0.14073571909439453*tmp454 + 0.14073571909439453*tmp458 + 0.14073571909439453*tmp464;
      const real_t tmp582 = 2.9649155283744921*tmp453 + 2.9649155283744921*tmp457 + 2.9649155283744921*tmp463;
      const real_t tmp583 = tmp581 + tmp582;
      const real_t tmp584 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp585 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp586 = tmp584 + tmp585;
      const real_t tmp587 = 0.2723974837528258*tmp101 + 0.2723974837528258*tmp95 + 0.2723974837528258*tmp96;
      const real_t tmp588 = 3.0100340280386204*tmp89 + 3.0100340280386204*tmp93 + 3.0100340280386204*tmp99;
      const real_t tmp589 = tmp587 + tmp588;
      const real_t tmp590 = 0.054242807519210512*tmp137 + 0.054242807519210512*tmp138 + 0.054242807519210512*tmp143;
      const real_t tmp591 = 0.16196202691036121*tmp131 + 0.16196202691036121*tmp135 + 0.16196202691036121*tmp141;
      const real_t tmp592 = tmp590 + tmp591;
      const real_t tmp593 = 1.2716142408535775*tmp179 + 1.2716142408535775*tmp180 + 1.2716142408535775*tmp185;
      const real_t tmp594 = 0.11827798082591956*tmp173 + 0.11827798082591956*tmp177 + 0.11827798082591956*tmp183;
      const real_t tmp595 = tmp593 + tmp594;
      const real_t tmp596 = 1.4152929568371884*tmp221 + 1.4152929568371884*tmp222 + 1.4152929568371884*tmp227;
      const real_t tmp597 = 1.730840956191074*tmp215 + 1.730840956191074*tmp219 + 1.730840956191074*tmp225;
      const real_t tmp598 = tmp596 + tmp597;
      const real_t tmp599 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp269;
      const real_t tmp600 = 0.96110665971229103*tmp257 + 0.96110665971229103*tmp261 + 0.96110665971229103*tmp267;
      const real_t tmp601 = tmp599 + tmp600;
      const real_t tmp602 = 1.3207616593498592*tmp302 + 1.3207616593498592*tmp303 + 1.3207616593498592*tmp307;
      const real_t tmp603 = 0.51764549515564062*tmp297 + 0.51764549515564062*tmp300 + 0.51764549515564062*tmp305;
      const real_t tmp604 = tmp602 + tmp603;
      const real_t tmp605 = 1.2259759537187613*tmp340 + 1.2259759537187613*tmp341 + 1.2259759537187613*tmp346;
      const real_t tmp606 = 0.48616796533571183*tmp334 + 0.48616796533571183*tmp338 + 0.48616796533571183*tmp344;
      const real_t tmp607 = tmp605 + tmp606;
      const real_t tmp608 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp380 + 0.23782646519773576*tmp384;
      const real_t tmp609 = 1.8030635043651069*tmp374 + 1.8030635043651069*tmp377 + 1.8030635043651069*tmp382;
      const real_t tmp610 = tmp608 + tmp609;
      const real_t tmp611 = 0.19112574223634571*tmp417 + 0.19112574223634571*tmp418 + 0.19112574223634571*tmp423;
      const real_t tmp612 = 1.6770652555180527*tmp411 + 1.6770652555180527*tmp415 + 1.6770652555180527*tmp421;
      const real_t tmp613 = tmp611 + tmp612;
      const real_t tmp614 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp460 + 0.14073571909439453*tmp465;
      const real_t tmp615 = 0.2688931795735332*tmp453 + 0.2688931795735332*tmp457 + 0.2688931795735332*tmp463;
      const real_t tmp616 = tmp614 + tmp615;
      const real_t tmp617 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp618 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp619 = tmp617 + tmp618;
      const real_t tmp620 = 0.3256196736114374*tmp101 + 0.3256196736114374*tmp95 + 0.3256196736114374*tmp96;
      const real_t tmp621 = 3.0100340280386204*tmp100 + 3.0100340280386204*tmp90 + 3.0100340280386204*tmp94;
      const real_t tmp622 = tmp620 + tmp621;
      const real_t tmp623 = 0.69877623478892303*tmp137 + 0.69877623478892303*tmp138 + 0.69877623478892303*tmp143;
      const real_t tmp624 = 0.16196202691036121*tmp132 + 0.16196202691036121*tmp136 + 0.16196202691036121*tmp142;
      const real_t tmp625 = tmp623 + tmp624;
      const real_t tmp626 = 1.3169318389705873*tmp179 + 1.3169318389705873*tmp180 + 1.3169318389705873*tmp185;
      const real_t tmp627 = 0.11827798082591956*tmp174 + 0.11827798082591956*tmp178 + 0.11827798082591956*tmp184;
      const real_t tmp628 = tmp626 + tmp627;
      const real_t tmp629 = 0.41537646564397157*tmp221 + 0.41537646564397157*tmp222 + 0.41537646564397157*tmp227;
      const real_t tmp630 = 1.730840956191074*tmp216 + 1.730840956191074*tmp220 + 1.730840956191074*tmp226;
      const real_t tmp631 = tmp629 + tmp630;
      const real_t tmp632 = 1.2177936097379878*tmp263 + 1.2177936097379878*tmp264 + 1.2177936097379878*tmp269;
      const real_t tmp633 = 0.96110665971229103*tmp258 + 0.96110665971229103*tmp262 + 0.96110665971229103*tmp268;
      const real_t tmp634 = tmp632 + tmp633;
      const real_t tmp635 = 2.1520288156647434*tmp302 + 2.1520288156647434*tmp303 + 2.1520288156647434*tmp307;
      const real_t tmp636 = 0.51764549515564062*tmp298 + 0.51764549515564062*tmp301 + 0.51764549515564062*tmp306;
      const real_t tmp637 = tmp635 + tmp636;
      const real_t tmp638 = 0.035965040373342916*tmp340 + 0.035965040373342916*tmp341 + 0.035965040373342916*tmp346;
      const real_t tmp639 = 0.48616796533571183*tmp335 + 0.48616796533571183*tmp339 + 0.48616796533571183*tmp345;
      const real_t tmp640 = tmp638 + tmp639;
      const real_t tmp641 = 1.7318139619254227*tmp379 + 1.7318139619254227*tmp380 + 1.7318139619254227*tmp384;
      const real_t tmp642 = 1.8030635043651069*tmp375 + 1.8030635043651069*tmp378 + 1.8030635043651069*tmp383;
      const real_t tmp643 = tmp641 + tmp642;
      const real_t tmp644 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp418 + 0.21336495814298084*tmp423;
      const real_t tmp645 = 1.6770652555180527*tmp412 + 1.6770652555180527*tmp416 + 1.6770652555180527*tmp422;
      const real_t tmp646 = tmp644 + tmp645;
      const real_t tmp647 = 2.9649155283744921*tmp459 + 2.9649155283744921*tmp460 + 2.9649155283744921*tmp465;
      const real_t tmp648 = 0.2688931795735332*tmp454 + 0.2688931795735332*tmp458 + 0.2688931795735332*tmp464;
      const real_t tmp649 = tmp647 + tmp648;
      const real_t tmp650 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - 2.2903585922226259*tmp42 - tmp551 - tmp584;
      const real_t tmp651 = 0.11955133084429059*tmp16*tmp29*tmp86*tmp91 + 0.11955133084429059*tmp16*tmp39*tmp86*tmp97 + 0.11955133084429059*tmp16*tmp6*tmp79*tmp86 - tmp554 - tmp587;
      const real_t tmp652 = 3.030776123262295*tmp121*tmp128*tmp16*tmp6 + 3.030776123262295*tmp128*tmp133*tmp16*tmp29 + 3.030776123262295*tmp128*tmp139*tmp16*tmp39 - tmp557 - tmp590;
      const real_t tmp653 = 0.021561698496338266*tmp16*tmp163*tmp170*tmp6 + 0.021561698496338266*tmp16*tmp170*tmp175*tmp29 + 0.021561698496338266*tmp16*tmp170*tmp181*tmp39 - tmp560 - tmp593;
      const real_t tmp654 = -0.97680333550942233*tmp215 - 0.97680333550942233*tmp219 - 0.97680333550942233*tmp225 - tmp563 - tmp596;
      const real_t tmp655 = 0.80668592322658683*tmp16*tmp247*tmp254*tmp6 + 0.80668592322658683*tmp16*tmp254*tmp259*tmp29 + 0.80668592322658683*tmp16*tmp254*tmp265*tmp39 - tmp566 - tmp599;
      const real_t tmp656 = -1.3111976295201027*tmp297 - 1.3111976295201027*tmp300 - 1.3111976295201027*tmp305 - tmp569 - tmp602;
      const real_t tmp657 = 1.0259150868534226*tmp16*tmp29*tmp331*tmp336 + 1.0259150868534226*tmp16*tmp324*tmp331*tmp6 + 1.0259150868534226*tmp16*tmp331*tmp342*tmp39 - tmp572 - tmp605;
      const real_t tmp658 = -0.010530396686001087*tmp374 - 0.010530396686001087*tmp377 - 0.010530396686001087*tmp382 - tmp575 - tmp608;
      const real_t tmp659 = 1.727318301866275*tmp16*tmp29*tmp408*tmp413 + 1.727318301866275*tmp16*tmp39*tmp408*tmp419 + 1.727318301866275*tmp16*tmp401*tmp408*tmp6 - tmp578 - tmp611;
      const real_t tmp660 = 0.48471985386318561*tmp16*tmp29*tmp450*tmp455 + 0.48471985386318561*tmp16*tmp39*tmp450*tmp461 + 0.48471985386318561*tmp16*tmp443*tmp450*tmp6 - tmp581 - tmp614;
      const real_t tmp661 = 0.020786379341558803*tmp16*tmp23*tmp27*tmp7 + 0.020786379341558803*tmp16*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp16*tmp23*tmp40*tmp43 - tmp552 - tmp617;
      const real_t tmp662 = 0.066329140985678992*tmp16*tmp27*tmp79*tmp86 + 0.066329140985678992*tmp16*tmp33*tmp86*tmp91 + 0.066329140985678992*tmp16*tmp43*tmp86*tmp97 - tmp555 - tmp620;
      const real_t tmp663 = 2.3862426959925824*tmp121*tmp128*tmp16*tmp27 + 2.3862426959925824*tmp128*tmp133*tmp16*tmp33 + 2.3862426959925824*tmp128*tmp139*tmp16*tmp43 - tmp558 - tmp623;
      const real_t tmp664 = -0.023755899620671705*tmp174 - 0.023755899620671705*tmp178 - 0.023755899620671705*tmp184 - tmp561 - tmp626;
      const real_t tmp665 = 0.023113155683794462*tmp16*tmp205*tmp212*tmp27 + 0.023113155683794462*tmp16*tmp212*tmp217*tmp33 + 0.023113155683794462*tmp16*tmp212*tmp223*tmp43 - tmp564 - tmp629;
      const real_t tmp666 = 0.096099217150166227*tmp16*tmp247*tmp254*tmp27 + 0.096099217150166227*tmp16*tmp254*tmp259*tmp33 + 0.096099217150166227*tmp16*tmp254*tmp265*tmp43 - tmp567 - tmp632;
      const real_t tmp667 = -2.1424647858349868*tmp298 - 2.1424647858349868*tmp301 - 2.1424647858349868*tmp306 - tmp570 - tmp635;
      const real_t tmp668 = 2.215926000198841*tmp16*tmp27*tmp324*tmp331 + 2.215926000198841*tmp16*tmp33*tmp331*tmp336 + 2.215926000198841*tmp16*tmp331*tmp342*tmp43 - tmp573 - tmp638;
      const real_t tmp669 = -1.504517893413688*tmp375 - 1.504517893413688*tmp378 - 1.504517893413688*tmp383 - tmp576 - tmp641;
      const real_t tmp670 = 1.7050790859596399*tmp16*tmp27*tmp401*tmp408 + 1.7050790859596399*tmp16*tmp33*tmp408*tmp413 + 1.7050790859596399*tmp16*tmp408*tmp419*tmp43 - tmp579 - tmp644;
      const real_t tmp671 = -2.339459955416912*tmp454 - 2.339459955416912*tmp458 - 2.339459955416912*tmp464 - tmp582 - tmp647;
      const real_t tmp672 = 0.058384491239200198*tmp16*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp16*tmp23*tmp35*tmp7 + 0.058384491239200198*tmp16*tmp23*tmp40*tmp45 - tmp585 - tmp618;
      const real_t tmp673 = -2.6180852134415042*tmp101 - tmp588 - tmp621 - 2.6180852134415042*tmp95 - 2.6180852134415042*tmp96;
      const real_t tmp674 = 2.923056903871144*tmp121*tmp128*tmp16*tmp35 + 2.923056903871144*tmp128*tmp133*tmp16*tmp37 + 2.923056903871144*tmp128*tmp139*tmp16*tmp45 - tmp591 - tmp624;
      const real_t tmp675 = 1.1748979585239958*tmp16*tmp163*tmp170*tmp35 + 1.1748979585239958*tmp16*tmp170*tmp175*tmp37 + 1.1748979585239958*tmp16*tmp170*tmp181*tmp45 - tmp594 - tmp627;
      const real_t tmp676 = -1.292351334863308*tmp221 - 1.292351334863308*tmp222 - 1.292351334863308*tmp227 - tmp597 - tmp630;
      const real_t tmp677 = 0.35278616717586297*tmp16*tmp247*tmp254*tmp35 + 0.35278616717586297*tmp16*tmp254*tmp259*tmp37 + 0.35278616717586297*tmp16*tmp254*tmp265*tmp45 - tmp600 - tmp633;
      const real_t tmp678 = -0.50808146532588383*tmp302 - 0.50808146532588383*tmp303 - 0.50808146532588383*tmp307 - tmp603 - tmp636;
      const real_t tmp679 = 1.7657230752364721*tmp16*tmp324*tmp331*tmp35 + 1.7657230752364721*tmp16*tmp331*tmp336*tmp37 + 1.7657230752364721*tmp16*tmp331*tmp342*tmp45 - tmp606 - tmp639;
      const real_t tmp680 = -1.5757674358533722*tmp379 - 1.5757674358533722*tmp380 - 1.5757674358533722*tmp384 - tmp609 - tmp642;
      const real_t tmp681 = 0.24137878858456796*tmp16*tmp35*tmp401*tmp408 + 0.24137878858456796*tmp16*tmp37*tmp408*tmp413 + 0.24137878858456796*tmp16*tmp408*tmp419*tmp45 - tmp612 - tmp645;
      const real_t tmp682 = 0.35656239338404694*tmp16*tmp35*tmp443*tmp450 + 0.35656239338404694*tmp16*tmp37*tmp450*tmp455 + 0.35656239338404694*tmp16*tmp45*tmp450*tmp461 - tmp615 - tmp648;
      const real_t tmp683 = tmp76*(tmp56 + tmp57 + tmp62);
      const real_t tmp684 = 0.0072301427194886381*tmp683;
      const real_t tmp685 = tmp118*(tmp111 + tmp112 + tmp117);
      const real_t tmp686 = 0.012344594760863713*tmp685;
      const real_t tmp687 = tmp160*(tmp153 + tmp154 + tmp159);
      const real_t tmp688 = 0.0036548782978011126*tmp687;
      const real_t tmp689 = tmp202*(tmp195 + tmp196 + tmp201);
      const real_t tmp690 = 0.010799549999884401*tmp689;
      const real_t tmp691 = tmp244*(tmp237 + tmp238 + tmp243);
      const real_t tmp692 = 0.012584765868454714*tmp691;
      const real_t tmp693 = tmp286*(tmp279 + tmp280 + tmp285);
      const real_t tmp694 = 0.00083582139204094858*tmp693;
      const real_t tmp695 = tmp321*(tmp315 + tmp316 + tmp320);
      const real_t tmp696 = 0.0040819365333192512*tmp695;
      const real_t tmp697 = tmp363*(tmp356 + tmp357 + tmp362);
      const real_t tmp698 = 0.0045346636251092122*tmp697;
      const real_t tmp699 = tmp398*(tmp392 + tmp393 + tmp397);
      const real_t tmp700 = 0.0061987549215557864*tmp699;
      const real_t tmp701 = tmp440*(tmp433 + tmp434 + tmp439);
      const real_t tmp702 = 0.0045087419239184514*tmp701;
      const real_t tmp703 = tmp482*(tmp475 + tmp476 + tmp481);
      const real_t tmp704 = 0.0044998649071490461*tmp703;
      const real_t tmp705 = tmp76*(tmp51 + tmp55 + tmp61);
      const real_t tmp706 = 0.0067853652681886352*tmp705;
      const real_t tmp707 = tmp118*(tmp106 + tmp110 + tmp116);
      const real_t tmp708 = 0.0041416969702195786*tmp707;
      const real_t tmp709 = tmp160*(tmp148 + tmp152 + tmp158);
      const real_t tmp710 = 0.0013137068218914037*tmp709;
      const real_t tmp711 = tmp202*(tmp190 + tmp194 + tmp200);
      const real_t tmp712 = 0.0038818597778972029*tmp711;
      const real_t tmp713 = tmp244*(tmp232 + tmp236 + tmp242);
      const real_t tmp714 = 0.010066964965131993*tmp713;
      const real_t tmp715 = tmp286*(tmp274 + tmp278 + tmp284);
      const real_t tmp716 = 0.0046804043242939224*tmp715;
      const real_t tmp717 = tmp321*(tmp311 + tmp314 + tmp319);
      const real_t tmp718 = 0.0097490714046835261*tmp717;
      const real_t tmp719 = tmp363*(tmp351 + tmp355 + tmp361);
      const real_t tmp720 = 0.0085077884791842431*tmp719;
      const real_t tmp721 = tmp398*(tmp388 + tmp391 + tmp396);
      const real_t tmp722 = 0.0056487878897383461*tmp721;
      const real_t tmp723 = tmp440*(tmp428 + tmp432 + tmp438);
      const real_t tmp724 = 0.005238393734043144*tmp723;
      const real_t tmp725 = tmp482*(tmp470 + tmp474 + tmp480);
      const real_t tmp726 = 0.012093792842045984*tmp725;
      const real_t tmp727 = tmp76*(tmp50 + tmp54 + tmp60);
      const real_t tmp728 = 0.020554974928565235*tmp727;
      const real_t tmp729 = tmp118*(tmp105 + tmp109 + tmp115);
      const real_t tmp730 = 0.0044685602754798454*tmp729;
      const real_t tmp731 = tmp160*(tmp147 + tmp151 + tmp157);
      const real_t tmp732 = 0.0041246668394316508*tmp731;
      const real_t tmp733 = tmp202*(tmp189 + tmp193 + tmp199);
      const real_t tmp734 = 0.0033267985952381263*tmp733;
      const real_t tmp735 = tmp244*(tmp231 + tmp235 + tmp241);
      const real_t tmp736 = 0.0071511654955033511*tmp735;
      const real_t tmp737 = tmp286*(tmp273 + tmp277 + tmp283);
      const real_t tmp738 = 0.010590168103918869*tmp737;
      const real_t tmp739 = tmp321*(tmp310 + tmp313 + tmp318);
      const real_t tmp740 = 0.0027144532136395704*tmp739;
      const real_t tmp741 = tmp363*(tmp350 + tmp354 + tmp360);
      const real_t tmp742 = 0.0019942799754541058*tmp741;
      const real_t tmp743 = tmp398*(tmp387 + tmp390 + tmp395);
      const real_t tmp744 = 0.005883129944586717*tmp743;
      const real_t tmp745 = tmp440*(tmp427 + tmp431 + tmp437);
      const real_t tmp746 = 0.0053864900723149976*tmp745;
      const real_t tmp747 = tmp482*(tmp469 + tmp473 + tmp479);
      const real_t tmp748 = 0.0052886569726683132*tmp747;
      const real_t tmp749 = 2.7375616618121592*tmp51 + 2.7375616618121592*tmp55 + 2.7375616618121592*tmp61;
      const real_t tmp750 = 0.42641669024797446*tmp50 + 0.42641669024797446*tmp54 + 0.42641669024797446*tmp60;
      const real_t tmp751 = tmp76*(tmp749 + tmp750);
      const real_t tmp752 = 0.011829781572832234*tmp751;
      const real_t tmp753 = 0.2723974837528258*tmp106 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp116;
      const real_t tmp754 = 0.3256196736114374*tmp105 + 0.3256196736114374*tmp109 + 0.3256196736114374*tmp115;
      const real_t tmp755 = tmp118*(tmp753 + tmp754);
      const real_t tmp756 = 0.0061414854617707626*tmp755;
      const real_t tmp757 = 0.054242807519210512*tmp148 + 0.054242807519210512*tmp152 + 0.054242807519210512*tmp158;
      const real_t tmp758 = 0.69877623478892303*tmp147 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp157;
      const real_t tmp759 = tmp160*(tmp757 + tmp758);
      const real_t tmp760 = 0.0043612323249822204*tmp759;
      const real_t tmp761 = 1.2716142408535775*tmp190 + 1.2716142408535775*tmp194 + 1.2716142408535775*tmp200;
      const real_t tmp762 = 1.3169318389705873*tmp189 + 1.3169318389705873*tmp193 + 1.3169318389705873*tmp199;
      const real_t tmp763 = tmp202*(tmp761 + tmp762);
      const real_t tmp764 = 0.012248248047610821*tmp763;
      const real_t tmp765 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp236 + 1.4152929568371884*tmp242;
      const real_t tmp766 = 0.41537646564397157*tmp231 + 0.41537646564397157*tmp235 + 0.41537646564397157*tmp241;
      const real_t tmp767 = tmp244*(tmp765 + tmp766);
      const real_t tmp768 = 0.017219568446249611*tmp767;
      const real_t tmp769 = 0.50720690366156718*tmp274 + 0.50720690366156718*tmp278 + 0.50720690366156718*tmp284;
      const real_t tmp770 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp277 + 1.2177936097379878*tmp283;
      const real_t tmp771 = tmp286*(tmp769 + tmp770);
      const real_t tmp772 = 0.021490090227737114*tmp771;
      const real_t tmp773 = 1.3207616593498592*tmp311 + 1.3207616593498592*tmp314 + 1.3207616593498592*tmp319;
      const real_t tmp774 = 2.1520288156647434*tmp310 + 2.1520288156647434*tmp313 + 2.1520288156647434*tmp318;
      const real_t tmp775 = tmp321*(tmp773 + tmp774);
      const real_t tmp776 = 0.0084625239161731543*tmp775;
      const real_t tmp777 = 1.2259759537187613*tmp351 + 1.2259759537187613*tmp355 + 1.2259759537187613*tmp361;
      const real_t tmp778 = 0.035965040373342916*tmp350 + 0.035965040373342916*tmp354 + 0.035965040373342916*tmp360;
      const real_t tmp779 = tmp363*(tmp777 + tmp778);
      const real_t tmp780 = 0.0088251866742250357*tmp779;
      const real_t tmp781 = 0.23782646519773576*tmp388 + 0.23782646519773576*tmp391 + 0.23782646519773576*tmp396;
      const real_t tmp782 = 1.7318139619254227*tmp387 + 1.7318139619254227*tmp390 + 1.7318139619254227*tmp395;
      const real_t tmp783 = tmp398*(tmp781 + tmp782);
      const real_t tmp784 = 0.0077188851041817101*tmp783;
      const real_t tmp785 = 0.19112574223634571*tmp428 + 0.19112574223634571*tmp432 + 0.19112574223634571*tmp438;
      const real_t tmp786 = 0.21336495814298084*tmp427 + 0.21336495814298084*tmp431 + 0.21336495814298084*tmp437;
      const real_t tmp787 = tmp440*(tmp785 + tmp786);
      const real_t tmp788 = 0.006659242794062166*tmp787;
      const real_t tmp789 = 0.14073571909439453*tmp470 + 0.14073571909439453*tmp474 + 0.14073571909439453*tmp480;
      const real_t tmp790 = 2.9649155283744921*tmp469 + 2.9649155283744921*tmp473 + 2.9649155283744921*tmp479;
      const real_t tmp791 = tmp482*(tmp789 + tmp790);
      const real_t tmp792 = 0.0061548665412862651*tmp791;
      const real_t tmp793 = 2.7375616618121592*tmp56 + 2.7375616618121592*tmp57 + 2.7375616618121592*tmp62;
      const real_t tmp794 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp795 = tmp76*(tmp793 + tmp794);
      const real_t tmp796 = 0.011829781572832234*tmp795;
      const real_t tmp797 = 0.2723974837528258*tmp111 + 0.2723974837528258*tmp112 + 0.2723974837528258*tmp117;
      const real_t tmp798 = 3.0100340280386204*tmp105 + 3.0100340280386204*tmp109 + 3.0100340280386204*tmp115;
      const real_t tmp799 = tmp118*(tmp797 + tmp798);
      const real_t tmp800 = 0.0061414854617707626*tmp799;
      const real_t tmp801 = 0.054242807519210512*tmp153 + 0.054242807519210512*tmp154 + 0.054242807519210512*tmp159;
      const real_t tmp802 = 0.16196202691036121*tmp147 + 0.16196202691036121*tmp151 + 0.16196202691036121*tmp157;
      const real_t tmp803 = tmp160*(tmp801 + tmp802);
      const real_t tmp804 = 0.0043612323249822204*tmp803;
      const real_t tmp805 = 1.2716142408535775*tmp195 + 1.2716142408535775*tmp196 + 1.2716142408535775*tmp201;
      const real_t tmp806 = 0.11827798082591956*tmp189 + 0.11827798082591956*tmp193 + 0.11827798082591956*tmp199;
      const real_t tmp807 = tmp202*(tmp805 + tmp806);
      const real_t tmp808 = 0.012248248047610821*tmp807;
      const real_t tmp809 = 1.4152929568371884*tmp237 + 1.4152929568371884*tmp238 + 1.4152929568371884*tmp243;
      const real_t tmp810 = 1.730840956191074*tmp231 + 1.730840956191074*tmp235 + 1.730840956191074*tmp241;
      const real_t tmp811 = tmp244*(tmp809 + tmp810);
      const real_t tmp812 = 0.017219568446249611*tmp811;
      const real_t tmp813 = 0.50720690366156718*tmp279 + 0.50720690366156718*tmp280 + 0.50720690366156718*tmp285;
      const real_t tmp814 = 0.96110665971229103*tmp273 + 0.96110665971229103*tmp277 + 0.96110665971229103*tmp283;
      const real_t tmp815 = tmp286*(tmp813 + tmp814);
      const real_t tmp816 = 0.021490090227737114*tmp815;
      const real_t tmp817 = 1.3207616593498592*tmp315 + 1.3207616593498592*tmp316 + 1.3207616593498592*tmp320;
      const real_t tmp818 = 0.51764549515564062*tmp310 + 0.51764549515564062*tmp313 + 0.51764549515564062*tmp318;
      const real_t tmp819 = tmp321*(tmp817 + tmp818);
      const real_t tmp820 = 0.0084625239161731543*tmp819;
      const real_t tmp821 = 1.2259759537187613*tmp356 + 1.2259759537187613*tmp357 + 1.2259759537187613*tmp362;
      const real_t tmp822 = 0.48616796533571183*tmp350 + 0.48616796533571183*tmp354 + 0.48616796533571183*tmp360;
      const real_t tmp823 = tmp363*(tmp821 + tmp822);
      const real_t tmp824 = 0.0088251866742250357*tmp823;
      const real_t tmp825 = 0.23782646519773576*tmp392 + 0.23782646519773576*tmp393 + 0.23782646519773576*tmp397;
      const real_t tmp826 = 1.8030635043651069*tmp387 + 1.8030635043651069*tmp390 + 1.8030635043651069*tmp395;
      const real_t tmp827 = tmp398*(tmp825 + tmp826);
      const real_t tmp828 = 0.0077188851041817101*tmp827;
      const real_t tmp829 = 0.19112574223634571*tmp433 + 0.19112574223634571*tmp434 + 0.19112574223634571*tmp439;
      const real_t tmp830 = 1.6770652555180527*tmp427 + 1.6770652555180527*tmp431 + 1.6770652555180527*tmp437;
      const real_t tmp831 = tmp440*(tmp829 + tmp830);
      const real_t tmp832 = 0.006659242794062166*tmp831;
      const real_t tmp833 = 0.14073571909439453*tmp475 + 0.14073571909439453*tmp476 + 0.14073571909439453*tmp481;
      const real_t tmp834 = 0.2688931795735332*tmp469 + 0.2688931795735332*tmp473 + 0.2688931795735332*tmp479;
      const real_t tmp835 = tmp482*(tmp833 + tmp834);
      const real_t tmp836 = 0.0061548665412862651*tmp835;
      const real_t tmp837 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp57 + 0.42641669024797446*tmp62;
      const real_t tmp838 = 0.38881857835033307*tmp51 + 0.38881857835033307*tmp55 + 0.38881857835033307*tmp61;
      const real_t tmp839 = tmp76*(tmp837 + tmp838);
      const real_t tmp840 = 0.011829781572832234*tmp839;
      const real_t tmp841 = 0.3256196736114374*tmp111 + 0.3256196736114374*tmp112 + 0.3256196736114374*tmp117;
      const real_t tmp842 = 3.0100340280386204*tmp106 + 3.0100340280386204*tmp110 + 3.0100340280386204*tmp116;
      const real_t tmp843 = tmp118*(tmp841 + tmp842);
      const real_t tmp844 = 0.0061414854617707626*tmp843;
      const real_t tmp845 = 0.69877623478892303*tmp153 + 0.69877623478892303*tmp154 + 0.69877623478892303*tmp159;
      const real_t tmp846 = 0.16196202691036121*tmp148 + 0.16196202691036121*tmp152 + 0.16196202691036121*tmp158;
      const real_t tmp847 = tmp160*(tmp845 + tmp846);
      const real_t tmp848 = 0.0043612323249822204*tmp847;
      const real_t tmp849 = 1.3169318389705873*tmp195 + 1.3169318389705873*tmp196 + 1.3169318389705873*tmp201;
      const real_t tmp850 = 0.11827798082591956*tmp190 + 0.11827798082591956*tmp194 + 0.11827798082591956*tmp200;
      const real_t tmp851 = tmp202*(tmp849 + tmp850);
      const real_t tmp852 = 0.012248248047610821*tmp851;
      const real_t tmp853 = 0.41537646564397157*tmp237 + 0.41537646564397157*tmp238 + 0.41537646564397157*tmp243;
      const real_t tmp854 = 1.730840956191074*tmp232 + 1.730840956191074*tmp236 + 1.730840956191074*tmp242;
      const real_t tmp855 = tmp244*(tmp853 + tmp854);
      const real_t tmp856 = 0.017219568446249611*tmp855;
      const real_t tmp857 = 1.2177936097379878*tmp279 + 1.2177936097379878*tmp280 + 1.2177936097379878*tmp285;
      const real_t tmp858 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp278 + 0.96110665971229103*tmp284;
      const real_t tmp859 = tmp286*(tmp857 + tmp858);
      const real_t tmp860 = 0.021490090227737114*tmp859;
      const real_t tmp861 = 2.1520288156647434*tmp315 + 2.1520288156647434*tmp316 + 2.1520288156647434*tmp320;
      const real_t tmp862 = 0.51764549515564062*tmp311 + 0.51764549515564062*tmp314 + 0.51764549515564062*tmp319;
      const real_t tmp863 = tmp321*(tmp861 + tmp862);
      const real_t tmp864 = 0.0084625239161731543*tmp863;
      const real_t tmp865 = 0.035965040373342916*tmp356 + 0.035965040373342916*tmp357 + 0.035965040373342916*tmp362;
      const real_t tmp866 = 0.48616796533571183*tmp351 + 0.48616796533571183*tmp355 + 0.48616796533571183*tmp361;
      const real_t tmp867 = tmp363*(tmp865 + tmp866);
      const real_t tmp868 = 0.0088251866742250357*tmp867;
      const real_t tmp869 = 1.7318139619254227*tmp392 + 1.7318139619254227*tmp393 + 1.7318139619254227*tmp397;
      const real_t tmp870 = 1.8030635043651069*tmp388 + 1.8030635043651069*tmp391 + 1.8030635043651069*tmp396;
      const real_t tmp871 = tmp398*(tmp869 + tmp870);
      const real_t tmp872 = 0.0077188851041817101*tmp871;
      const real_t tmp873 = 0.21336495814298084*tmp433 + 0.21336495814298084*tmp434 + 0.21336495814298084*tmp439;
      const real_t tmp874 = 1.6770652555180527*tmp428 + 1.6770652555180527*tmp432 + 1.6770652555180527*tmp438;
      const real_t tmp875 = tmp440*(tmp873 + tmp874);
      const real_t tmp876 = 0.006659242794062166*tmp875;
      const real_t tmp877 = 2.9649155283744921*tmp475 + 2.9649155283744921*tmp476 + 2.9649155283744921*tmp481;
      const real_t tmp878 = 0.2688931795735332*tmp470 + 0.2688931795735332*tmp474 + 0.2688931795735332*tmp480;
      const real_t tmp879 = tmp482*(tmp877 + tmp878);
      const real_t tmp880 = 0.0061548665412862651*tmp879;
      const real_t tmp881 = tmp76*(-2.2903585922226259*tmp50 - 2.2903585922226259*tmp54 - 2.2903585922226259*tmp60 - tmp749 - tmp793);
      const real_t tmp882 = 0.011829781572832234*tmp881;
      const real_t tmp883 = tmp118*(0.11955133084429059*tmp103*tmp16*tmp6*tmp86 + 0.11955133084429059*tmp107*tmp16*tmp29*tmp86 + 0.11955133084429059*tmp113*tmp16*tmp39*tmp86 - tmp753 - tmp797);
      const real_t tmp884 = 0.0061414854617707626*tmp883;
      const real_t tmp885 = tmp160*(3.030776123262295*tmp128*tmp145*tmp16*tmp6 + 3.030776123262295*tmp128*tmp149*tmp16*tmp29 + 3.030776123262295*tmp128*tmp155*tmp16*tmp39 - tmp757 - tmp801);
      const real_t tmp886 = 0.0043612323249822204*tmp885;
      const real_t tmp887 = tmp202*(0.021561698496338266*tmp16*tmp170*tmp187*tmp6 + 0.021561698496338266*tmp16*tmp170*tmp191*tmp29 + 0.021561698496338266*tmp16*tmp170*tmp197*tmp39 - tmp761 - tmp805);
      const real_t tmp888 = 0.012248248047610821*tmp887;
      const real_t tmp889 = tmp244*(-0.97680333550942233*tmp231 - 0.97680333550942233*tmp235 - 0.97680333550942233*tmp241 - tmp765 - tmp809);
      const real_t tmp890 = 0.017219568446249611*tmp889;
      const real_t tmp891 = tmp286*(0.80668592322658683*tmp16*tmp254*tmp271*tmp6 + 0.80668592322658683*tmp16*tmp254*tmp275*tmp29 + 0.80668592322658683*tmp16*tmp254*tmp281*tmp39 - tmp769 - tmp813);
      const real_t tmp892 = 0.021490090227737114*tmp891;
      const real_t tmp893 = tmp321*(-1.3111976295201027*tmp310 - 1.3111976295201027*tmp313 - 1.3111976295201027*tmp318 - tmp773 - tmp817);
      const real_t tmp894 = 0.0084625239161731543*tmp893;
      const real_t tmp895 = tmp363*(1.0259150868534226*tmp16*tmp29*tmp331*tmp352 + 1.0259150868534226*tmp16*tmp331*tmp348*tmp6 + 1.0259150868534226*tmp16*tmp331*tmp358*tmp39 - tmp777 - tmp821);
      const real_t tmp896 = 0.0088251866742250357*tmp895;
      const real_t tmp897 = tmp398*(-0.010530396686001087*tmp387 - 0.010530396686001087*tmp390 - 0.010530396686001087*tmp395 - tmp781 - tmp825);
      const real_t tmp898 = 0.0077188851041817101*tmp897;
      const real_t tmp899 = tmp440*(1.727318301866275*tmp16*tmp29*tmp408*tmp429 + 1.727318301866275*tmp16*tmp39*tmp408*tmp435 + 1.727318301866275*tmp16*tmp408*tmp425*tmp6 - tmp785 - tmp829);
      const real_t tmp900 = 0.006659242794062166*tmp899;
      const real_t tmp901 = tmp482*(0.48471985386318561*tmp16*tmp29*tmp450*tmp471 + 0.48471985386318561*tmp16*tmp39*tmp450*tmp477 + 0.48471985386318561*tmp16*tmp450*tmp467*tmp6 - tmp789 - tmp833);
      const real_t tmp902 = 0.0061548665412862651*tmp901;
      const real_t tmp903 = tmp76*(0.020786379341558803*tmp16*tmp23*tmp27*tmp48 + 0.020786379341558803*tmp16*tmp23*tmp33*tmp52 + 0.020786379341558803*tmp16*tmp23*tmp43*tmp58 - tmp750 - tmp837);
      const real_t tmp904 = 0.011829781572832234*tmp903;
      const real_t tmp905 = tmp118*(0.066329140985678992*tmp103*tmp16*tmp27*tmp86 + 0.066329140985678992*tmp107*tmp16*tmp33*tmp86 + 0.066329140985678992*tmp113*tmp16*tmp43*tmp86 - tmp754 - tmp841);
      const real_t tmp906 = 0.0061414854617707626*tmp905;
      const real_t tmp907 = tmp160*(2.3862426959925824*tmp128*tmp145*tmp16*tmp27 + 2.3862426959925824*tmp128*tmp149*tmp16*tmp33 + 2.3862426959925824*tmp128*tmp155*tmp16*tmp43 - tmp758 - tmp845);
      const real_t tmp908 = 0.0043612323249822204*tmp907;
      const real_t tmp909 = tmp202*(-0.023755899620671705*tmp190 - 0.023755899620671705*tmp194 - 0.023755899620671705*tmp200 - tmp762 - tmp849);
      const real_t tmp910 = 0.012248248047610821*tmp909;
      const real_t tmp911 = tmp244*(0.023113155683794462*tmp16*tmp212*tmp229*tmp27 + 0.023113155683794462*tmp16*tmp212*tmp233*tmp33 + 0.023113155683794462*tmp16*tmp212*tmp239*tmp43 - tmp766 - tmp853);
      const real_t tmp912 = 0.017219568446249611*tmp911;
      const real_t tmp913 = tmp286*(0.096099217150166227*tmp16*tmp254*tmp27*tmp271 + 0.096099217150166227*tmp16*tmp254*tmp275*tmp33 + 0.096099217150166227*tmp16*tmp254*tmp281*tmp43 - tmp770 - tmp857);
      const real_t tmp914 = 0.021490090227737114*tmp913;
      const real_t tmp915 = tmp321*(-2.1424647858349868*tmp311 - 2.1424647858349868*tmp314 - 2.1424647858349868*tmp319 - tmp774 - tmp861);
      const real_t tmp916 = 0.0084625239161731543*tmp915;
      const real_t tmp917 = tmp363*(2.215926000198841*tmp16*tmp27*tmp331*tmp348 + 2.215926000198841*tmp16*tmp33*tmp331*tmp352 + 2.215926000198841*tmp16*tmp331*tmp358*tmp43 - tmp778 - tmp865);
      const real_t tmp918 = 0.0088251866742250357*tmp917;
      const real_t tmp919 = tmp398*(-1.504517893413688*tmp388 - 1.504517893413688*tmp391 - 1.504517893413688*tmp396 - tmp782 - tmp869);
      const real_t tmp920 = 0.0077188851041817101*tmp919;
      const real_t tmp921 = tmp440*(1.7050790859596399*tmp16*tmp27*tmp408*tmp425 + 1.7050790859596399*tmp16*tmp33*tmp408*tmp429 + 1.7050790859596399*tmp16*tmp408*tmp43*tmp435 - tmp786 - tmp873);
      const real_t tmp922 = 0.006659242794062166*tmp921;
      const real_t tmp923 = tmp482*(-2.339459955416912*tmp470 - 2.339459955416912*tmp474 - 2.339459955416912*tmp480 - tmp790 - tmp877);
      const real_t tmp924 = 0.0061548665412862651*tmp923;
      const real_t tmp925 = tmp76*(0.058384491239200198*tmp16*tmp23*tmp35*tmp48 + 0.058384491239200198*tmp16*tmp23*tmp37*tmp52 + 0.058384491239200198*tmp16*tmp23*tmp45*tmp58 - tmp794 - tmp838);
      const real_t tmp926 = 0.011829781572832234*tmp925;
      const real_t tmp927 = tmp118*(-2.6180852134415042*tmp111 - 2.6180852134415042*tmp112 - 2.6180852134415042*tmp117 - tmp798 - tmp842);
      const real_t tmp928 = 0.0061414854617707626*tmp927;
      const real_t tmp929 = tmp160*(2.923056903871144*tmp128*tmp145*tmp16*tmp35 + 2.923056903871144*tmp128*tmp149*tmp16*tmp37 + 2.923056903871144*tmp128*tmp155*tmp16*tmp45 - tmp802 - tmp846);
      const real_t tmp930 = 0.0043612323249822204*tmp929;
      const real_t tmp931 = tmp202*(1.1748979585239958*tmp16*tmp170*tmp187*tmp35 + 1.1748979585239958*tmp16*tmp170*tmp191*tmp37 + 1.1748979585239958*tmp16*tmp170*tmp197*tmp45 - tmp806 - tmp850);
      const real_t tmp932 = 0.012248248047610821*tmp931;
      const real_t tmp933 = tmp244*(-1.292351334863308*tmp237 - 1.292351334863308*tmp238 - 1.292351334863308*tmp243 - tmp810 - tmp854);
      const real_t tmp934 = 0.017219568446249611*tmp933;
      const real_t tmp935 = tmp286*(0.35278616717586297*tmp16*tmp254*tmp271*tmp35 + 0.35278616717586297*tmp16*tmp254*tmp275*tmp37 + 0.35278616717586297*tmp16*tmp254*tmp281*tmp45 - tmp814 - tmp858);
      const real_t tmp936 = 0.021490090227737114*tmp935;
      const real_t tmp937 = tmp321*(-0.50808146532588383*tmp315 - 0.50808146532588383*tmp316 - 0.50808146532588383*tmp320 - tmp818 - tmp862);
      const real_t tmp938 = 0.0084625239161731543*tmp937;
      const real_t tmp939 = tmp363*(1.7657230752364721*tmp16*tmp331*tmp348*tmp35 + 1.7657230752364721*tmp16*tmp331*tmp352*tmp37 + 1.7657230752364721*tmp16*tmp331*tmp358*tmp45 - tmp822 - tmp866);
      const real_t tmp940 = 0.0088251866742250357*tmp939;
      const real_t tmp941 = tmp398*(-1.5757674358533722*tmp392 - 1.5757674358533722*tmp393 - 1.5757674358533722*tmp397 - tmp826 - tmp870);
      const real_t tmp942 = 0.0077188851041817101*tmp941;
      const real_t tmp943 = tmp440*(0.24137878858456796*tmp16*tmp35*tmp408*tmp425 + 0.24137878858456796*tmp16*tmp37*tmp408*tmp429 + 0.24137878858456796*tmp16*tmp408*tmp435*tmp45 - tmp830 - tmp874);
      const real_t tmp944 = 0.006659242794062166*tmp943;
      const real_t tmp945 = tmp482*(0.35656239338404694*tmp16*tmp35*tmp450*tmp467 + 0.35656239338404694*tmp16*tmp37*tmp450*tmp471 + 0.35656239338404694*tmp16*tmp45*tmp450*tmp477 - tmp834 - tmp878);
      const real_t tmp946 = 0.0061548665412862651*tmp945;
      elMat(0,0) = -tmp102*tmp120 - tmp144*tmp162 - tmp186*tmp204 - tmp228*tmp246 - tmp270*tmp288 - tmp308*tmp323 - tmp347*tmp365 - tmp385*tmp400 - tmp424*tmp442 - tmp466*tmp484 - tmp47*tmp78;
      elMat(0,1) = -tmp119*tmp488 + tmp161*tmp490 + tmp203*tmp492 - tmp245*tmp494 + tmp287*tmp496 + tmp322*tmp498 + tmp364*tmp500 - tmp399*tmp502 - tmp441*tmp504 + tmp483*tmp506 + tmp486*tmp77;
      elMat(0,2) = tmp119*tmp510 + tmp161*tmp512 - tmp203*tmp514 + tmp245*tmp516 - tmp287*tmp518 - tmp322*tmp520 + tmp364*tmp522 - tmp399*tmp524 + tmp441*tmp526 - tmp483*tmp528 + tmp508*tmp77;
      elMat(0,3) = tmp119*tmp532 + tmp161*tmp534 - tmp203*tmp536 - tmp245*tmp538 + tmp287*tmp540 - tmp322*tmp542 - tmp364*tmp544 + tmp399*tmp546 + tmp441*tmp548 + tmp483*tmp550 - tmp530*tmp77;
      elMat(0,4) = -tmp120*tmp556 - tmp162*tmp559 - tmp204*tmp562 - tmp246*tmp565 - tmp288*tmp568 - tmp323*tmp571 - tmp365*tmp574 - tmp400*tmp577 - tmp442*tmp580 - tmp484*tmp583 - tmp553*tmp78;
      elMat(0,5) = -tmp120*tmp589 - tmp162*tmp592 - tmp204*tmp595 - tmp246*tmp598 - tmp288*tmp601 - tmp323*tmp604 - tmp365*tmp607 - tmp400*tmp610 - tmp442*tmp613 - tmp484*tmp616 - tmp586*tmp78;
      elMat(0,6) = -tmp120*tmp622 - tmp162*tmp625 - tmp204*tmp628 - tmp246*tmp631 - tmp288*tmp634 - tmp323*tmp637 - tmp365*tmp640 - tmp400*tmp643 - tmp442*tmp646 - tmp484*tmp649 - tmp619*tmp78;
      elMat(0,7) = -tmp120*tmp651 - tmp162*tmp652 - tmp204*tmp653 - tmp246*tmp654 - tmp288*tmp655 - tmp323*tmp656 - tmp365*tmp657 - tmp400*tmp658 - tmp442*tmp659 - tmp484*tmp660 - tmp650*tmp78;
      elMat(0,8) = -tmp120*tmp662 - tmp162*tmp663 - tmp204*tmp664 - tmp246*tmp665 - tmp288*tmp666 - tmp323*tmp667 - tmp365*tmp668 - tmp400*tmp669 - tmp442*tmp670 - tmp484*tmp671 - tmp661*tmp78;
      elMat(0,9) = -tmp120*tmp673 - tmp162*tmp674 - tmp204*tmp675 - tmp246*tmp676 - tmp288*tmp677 - tmp323*tmp678 - tmp365*tmp679 - tmp400*tmp680 - tmp442*tmp681 - tmp484*tmp682 - tmp672*tmp78;
      elMat(1,0) = -tmp102*tmp686 + tmp144*tmp688 + tmp186*tmp690 - tmp228*tmp692 + tmp270*tmp694 + tmp308*tmp696 + tmp347*tmp698 - tmp385*tmp700 - tmp424*tmp702 + tmp466*tmp704 + tmp47*tmp684;
      elMat(1,1) = -0.0044189289060270545*tmp485*tmp683 - 0.024813055531683337*tmp487*tmp685 - 0.0030629268005785541*tmp489*tmp687 - 0.0095222010320695129*tmp491*tmp689 - 0.0091974623207422349*tmp493*tmp691 - 3.2507885820395218e-5*tmp495*tmp693 - 0.0019689404753353082*tmp497*tmp695 - 0.0023300554370080033*tmp499*tmp697 - 0.0049779938500050438*tmp501*tmp699 - 0.0030527125027828036*tmp503*tmp701 - 0.0032898819246143778*tmp505*tmp703;
      elMat(1,2) = -0.0041470891910238041*tmp507*tmp683 + 0.008324951843965811*tmp509*tmp685 - 0.001100936202251903*tmp511*tmp687 + 0.0034227212415181688*tmp513*tmp689 + 0.0073573503010591077*tmp515*tmp691 + 0.00018203655806882805*tmp517*tmp693 + 0.0047025085100984255*tmp519*tmp695 - 0.00437157426475263*tmp521*tmp697 - 0.0045363353981484533*tmp523*tmp699 + 0.0035467343920440879*tmp525*tmp701 + 0.0088418544316446034*tmp527*tmp703;
      elMat(1,3) = 0.012562818798813762*tmp529*tmp683 + 0.00898195821005612*tmp531*tmp685 - 0.003456627437787347*tmp533*tmp687 + 0.0029333115747788548*tmp535*tmp689 - 0.0052263646286142846*tmp537*tmp691 - 0.00041188701176975823*tmp539*tmp693 + 0.0013093287357882949*tmp541*tmp695 + 0.0010247249374778298*tmp543*tmp697 + 0.0047245269499351069*tmp545*tmp699 + 0.0036470052771574082*tmp547*tmp701 - 0.0038665731836137946*tmp549*tmp703;
      elMat(1,4) = tmp553*tmp684 - tmp556*tmp686 + tmp559*tmp688 + tmp562*tmp690 - tmp565*tmp692 + tmp568*tmp694 + tmp571*tmp696 + tmp574*tmp698 - tmp577*tmp700 - tmp580*tmp702 + tmp583*tmp704;
      elMat(1,5) = tmp586*tmp684 - tmp589*tmp686 + tmp592*tmp688 + tmp595*tmp690 - tmp598*tmp692 + tmp601*tmp694 + tmp604*tmp696 + tmp607*tmp698 - tmp610*tmp700 - tmp613*tmp702 + tmp616*tmp704;
      elMat(1,6) = tmp619*tmp684 - tmp622*tmp686 + tmp625*tmp688 + tmp628*tmp690 - tmp631*tmp692 + tmp634*tmp694 + tmp637*tmp696 + tmp640*tmp698 - tmp643*tmp700 - tmp646*tmp702 + tmp649*tmp704;
      elMat(1,7) = tmp650*tmp684 - tmp651*tmp686 + tmp652*tmp688 + tmp653*tmp690 - tmp654*tmp692 + tmp655*tmp694 + tmp656*tmp696 + tmp657*tmp698 - tmp658*tmp700 - tmp659*tmp702 + tmp660*tmp704;
      elMat(1,8) = tmp661*tmp684 - tmp662*tmp686 + tmp663*tmp688 + tmp664*tmp690 - tmp665*tmp692 + tmp666*tmp694 + tmp667*tmp696 + tmp668*tmp698 - tmp669*tmp700 - tmp670*tmp702 + tmp671*tmp704;
      elMat(1,9) = tmp672*tmp684 - tmp673*tmp686 + tmp674*tmp688 + tmp675*tmp690 - tmp676*tmp692 + tmp677*tmp694 + tmp678*tmp696 + tmp679*tmp698 - tmp680*tmp700 - tmp681*tmp702 + tmp682*tmp704;
      elMat(2,0) = tmp102*tmp708 + tmp144*tmp710 - tmp186*tmp712 + tmp228*tmp714 - tmp270*tmp716 - tmp308*tmp718 + tmp347*tmp720 - tmp385*tmp722 + tmp424*tmp724 - tmp466*tmp726 + tmp47*tmp706;
      elMat(2,1) = -0.0041470891910238041*tmp485*tmp705 + 0.008324951843965811*tmp487*tmp707 - 0.001100936202251903*tmp489*tmp709 + 0.0034227212415181688*tmp491*tmp711 + 0.0073573503010591077*tmp493*tmp713 + 0.00018203655806882805*tmp495*tmp715 + 0.0047025085100984255*tmp497*tmp717 - 0.00437157426475263*tmp499*tmp719 - 0.0045363353981484533*tmp501*tmp721 + 0.0035467343920440879*tmp503*tmp723 + 0.0088418544316446034*tmp505*tmp725;
      elMat(2,2) = -0.0038919722684040777*tmp507*tmp705 - 0.0027930789545792005*tmp509*tmp707 - 0.00039571971527360629*tmp511*tmp709 - 0.001230284958034916*tmp513*tmp711 - 0.0058853846381537785*tmp515*tmp713 - 0.0010193621528212606*tmp517*tmp715 - 0.011231211184168578*tmp519*tmp717 - 0.0082018055230425203*tmp521*tmp719 - 0.0041338618456657665*tmp523*tmp721 - 0.0041207040742425758*tmp525*tmp723 - 0.023763281352280435*tmp527*tmp725;
      elMat(2,3) = 0.011789990551396352*tmp529*tmp705 - 0.003013509137065063*tmp531*tmp707 - 0.0012424476756148744*tmp533*tmp709 - 0.0010543683966735859*tmp535*tmp711 + 0.0041807396467460484*tmp537*tmp713 + 0.0023064709390845928*tmp539*tmp715 - 0.0031271283208865507*tmp541*tmp717 + 0.0019225556156211496*tmp543*tmp719 + 0.0043053566332700976*tmp545*tmp721 - 0.0042372018434979264*tmp547*tmp723 + 0.010391764209842001*tmp549*tmp725;
      elMat(2,4) = tmp553*tmp706 + tmp556*tmp708 + tmp559*tmp710 - tmp562*tmp712 + tmp565*tmp714 - tmp568*tmp716 - tmp571*tmp718 + tmp574*tmp720 - tmp577*tmp722 + tmp580*tmp724 - tmp583*tmp726;
      elMat(2,5) = tmp586*tmp706 + tmp589*tmp708 + tmp592*tmp710 - tmp595*tmp712 + tmp598*tmp714 - tmp601*tmp716 - tmp604*tmp718 + tmp607*tmp720 - tmp610*tmp722 + tmp613*tmp724 - tmp616*tmp726;
      elMat(2,6) = tmp619*tmp706 + tmp622*tmp708 + tmp625*tmp710 - tmp628*tmp712 + tmp631*tmp714 - tmp634*tmp716 - tmp637*tmp718 + tmp640*tmp720 - tmp643*tmp722 + tmp646*tmp724 - tmp649*tmp726;
      elMat(2,7) = tmp650*tmp706 + tmp651*tmp708 + tmp652*tmp710 - tmp653*tmp712 + tmp654*tmp714 - tmp655*tmp716 - tmp656*tmp718 + tmp657*tmp720 - tmp658*tmp722 + tmp659*tmp724 - tmp660*tmp726;
      elMat(2,8) = tmp661*tmp706 + tmp662*tmp708 + tmp663*tmp710 - tmp664*tmp712 + tmp665*tmp714 - tmp666*tmp716 - tmp667*tmp718 + tmp668*tmp720 - tmp669*tmp722 + tmp670*tmp724 - tmp671*tmp726;
      elMat(2,9) = tmp672*tmp706 + tmp673*tmp708 + tmp674*tmp710 - tmp675*tmp712 + tmp676*tmp714 - tmp677*tmp716 - tmp678*tmp718 + tmp679*tmp720 - tmp680*tmp722 + tmp681*tmp724 - tmp682*tmp726;
      elMat(3,0) = tmp102*tmp730 + tmp144*tmp732 - tmp186*tmp734 - tmp228*tmp736 + tmp270*tmp738 - tmp308*tmp740 - tmp347*tmp742 + tmp385*tmp744 + tmp424*tmp746 + tmp466*tmp748 - tmp47*tmp728;
      elMat(3,1) = 0.012562818798813762*tmp485*tmp727 + 0.00898195821005612*tmp487*tmp729 - 0.003456627437787347*tmp489*tmp731 + 0.0029333115747788548*tmp491*tmp733 - 0.0052263646286142846*tmp493*tmp735 - 0.00041188701176975823*tmp495*tmp737 + 0.0013093287357882949*tmp497*tmp739 + 0.0010247249374778298*tmp499*tmp741 + 0.0047245269499351069*tmp501*tmp743 + 0.0036470052771574082*tmp503*tmp745 - 0.0038665731836137946*tmp505*tmp747;
      elMat(3,2) = 0.011789990551396352*tmp507*tmp727 - 0.003013509137065063*tmp509*tmp729 - 0.0012424476756148744*tmp511*tmp731 - 0.0010543683966735859*tmp513*tmp733 + 0.0041807396467460484*tmp515*tmp735 + 0.0023064709390845928*tmp517*tmp737 - 0.0031271283208865507*tmp519*tmp739 + 0.0019225556156211496*tmp521*tmp741 + 0.0043053566332700976*tmp523*tmp743 - 0.0042372018434979264*tmp525*tmp745 + 0.010391764209842001*tmp527*tmp747;
      elMat(3,3) = -0.035715536395385078*tmp529*tmp727 - 0.0032513357004413015*tmp531*tmp729 - 0.0039009333299794896*tmp533*tmp731 - 0.00090360587491835199*tmp535*tmp733 - 0.0029698286634596638*tmp537*tmp735 - 0.0052187617306746906*tmp539*tmp737 - 0.00087069251703458632*tmp541*tmp739 - 0.00045065931943546946*tmp543*tmp741 - 0.0044839659455667077*tmp545*tmp743 - 0.0043569931591950859*tmp547*tmp745 - 0.0045443540305762555*tmp549*tmp747;
      elMat(3,4) = -tmp553*tmp728 + tmp556*tmp730 + tmp559*tmp732 - tmp562*tmp734 - tmp565*tmp736 + tmp568*tmp738 - tmp571*tmp740 - tmp574*tmp742 + tmp577*tmp744 + tmp580*tmp746 + tmp583*tmp748;
      elMat(3,5) = -tmp586*tmp728 + tmp589*tmp730 + tmp592*tmp732 - tmp595*tmp734 - tmp598*tmp736 + tmp601*tmp738 - tmp604*tmp740 - tmp607*tmp742 + tmp610*tmp744 + tmp613*tmp746 + tmp616*tmp748;
      elMat(3,6) = -tmp619*tmp728 + tmp622*tmp730 + tmp625*tmp732 - tmp628*tmp734 - tmp631*tmp736 + tmp634*tmp738 - tmp637*tmp740 - tmp640*tmp742 + tmp643*tmp744 + tmp646*tmp746 + tmp649*tmp748;
      elMat(3,7) = -tmp650*tmp728 + tmp651*tmp730 + tmp652*tmp732 - tmp653*tmp734 - tmp654*tmp736 + tmp655*tmp738 - tmp656*tmp740 - tmp657*tmp742 + tmp658*tmp744 + tmp659*tmp746 + tmp660*tmp748;
      elMat(3,8) = -tmp661*tmp728 + tmp662*tmp730 + tmp663*tmp732 - tmp664*tmp734 - tmp665*tmp736 + tmp666*tmp738 - tmp667*tmp740 - tmp668*tmp742 + tmp669*tmp744 + tmp670*tmp746 + tmp671*tmp748;
      elMat(3,9) = -tmp672*tmp728 + tmp673*tmp730 + tmp674*tmp732 - tmp675*tmp734 - tmp676*tmp736 + tmp677*tmp738 - tmp678*tmp740 - tmp679*tmp742 + tmp680*tmp744 + tmp681*tmp746 + tmp682*tmp748;
      elMat(4,0) = -tmp102*tmp756 - tmp144*tmp760 - tmp186*tmp764 - tmp228*tmp768 - tmp270*tmp772 - tmp308*tmp776 - tmp347*tmp780 - tmp385*tmp784 - tmp424*tmp788 - tmp466*tmp792 - tmp47*tmp752;
      elMat(4,1) = tmp486*tmp751 - tmp488*tmp755 + tmp490*tmp759 + tmp492*tmp763 - tmp494*tmp767 + tmp496*tmp771 + tmp498*tmp775 + tmp500*tmp779 - tmp502*tmp783 - tmp504*tmp787 + tmp506*tmp791;
      elMat(4,2) = tmp508*tmp751 + tmp510*tmp755 + tmp512*tmp759 - tmp514*tmp763 + tmp516*tmp767 - tmp518*tmp771 - tmp520*tmp775 + tmp522*tmp779 - tmp524*tmp783 + tmp526*tmp787 - tmp528*tmp791;
      elMat(4,3) = -tmp530*tmp751 + tmp532*tmp755 + tmp534*tmp759 - tmp536*tmp763 - tmp538*tmp767 + tmp540*tmp771 - tmp542*tmp775 - tmp544*tmp779 + tmp546*tmp783 + tmp548*tmp787 + tmp550*tmp791;
      elMat(4,4) = -tmp553*tmp752 - tmp556*tmp756 - tmp559*tmp760 - tmp562*tmp764 - tmp565*tmp768 - tmp568*tmp772 - tmp571*tmp776 - tmp574*tmp780 - tmp577*tmp784 - tmp580*tmp788 - tmp583*tmp792;
      elMat(4,5) = -tmp586*tmp752 - tmp589*tmp756 - tmp592*tmp760 - tmp595*tmp764 - tmp598*tmp768 - tmp601*tmp772 - tmp604*tmp776 - tmp607*tmp780 - tmp610*tmp784 - tmp613*tmp788 - tmp616*tmp792;
      elMat(4,6) = -tmp619*tmp752 - tmp622*tmp756 - tmp625*tmp760 - tmp628*tmp764 - tmp631*tmp768 - tmp634*tmp772 - tmp637*tmp776 - tmp640*tmp780 - tmp643*tmp784 - tmp646*tmp788 - tmp649*tmp792;
      elMat(4,7) = -tmp650*tmp752 - tmp651*tmp756 - tmp652*tmp760 - tmp653*tmp764 - tmp654*tmp768 - tmp655*tmp772 - tmp656*tmp776 - tmp657*tmp780 - tmp658*tmp784 - tmp659*tmp788 - tmp660*tmp792;
      elMat(4,8) = -tmp661*tmp752 - tmp662*tmp756 - tmp663*tmp760 - tmp664*tmp764 - tmp665*tmp768 - tmp666*tmp772 - tmp667*tmp776 - tmp668*tmp780 - tmp669*tmp784 - tmp670*tmp788 - tmp671*tmp792;
      elMat(4,9) = -tmp672*tmp752 - tmp673*tmp756 - tmp674*tmp760 - tmp675*tmp764 - tmp676*tmp768 - tmp677*tmp772 - tmp678*tmp776 - tmp679*tmp780 - tmp680*tmp784 - tmp681*tmp788 - tmp682*tmp792;
      elMat(5,0) = -tmp102*tmp800 - tmp144*tmp804 - tmp186*tmp808 - tmp228*tmp812 - tmp270*tmp816 - tmp308*tmp820 - tmp347*tmp824 - tmp385*tmp828 - tmp424*tmp832 - tmp466*tmp836 - tmp47*tmp796;
      elMat(5,1) = tmp486*tmp795 - tmp488*tmp799 + tmp490*tmp803 + tmp492*tmp807 - tmp494*tmp811 + tmp496*tmp815 + tmp498*tmp819 + tmp500*tmp823 - tmp502*tmp827 - tmp504*tmp831 + tmp506*tmp835;
      elMat(5,2) = tmp508*tmp795 + tmp510*tmp799 + tmp512*tmp803 - tmp514*tmp807 + tmp516*tmp811 - tmp518*tmp815 - tmp520*tmp819 + tmp522*tmp823 - tmp524*tmp827 + tmp526*tmp831 - tmp528*tmp835;
      elMat(5,3) = -tmp530*tmp795 + tmp532*tmp799 + tmp534*tmp803 - tmp536*tmp807 - tmp538*tmp811 + tmp540*tmp815 - tmp542*tmp819 - tmp544*tmp823 + tmp546*tmp827 + tmp548*tmp831 + tmp550*tmp835;
      elMat(5,4) = -tmp553*tmp796 - tmp556*tmp800 - tmp559*tmp804 - tmp562*tmp808 - tmp565*tmp812 - tmp568*tmp816 - tmp571*tmp820 - tmp574*tmp824 - tmp577*tmp828 - tmp580*tmp832 - tmp583*tmp836;
      elMat(5,5) = -tmp586*tmp796 - tmp589*tmp800 - tmp592*tmp804 - tmp595*tmp808 - tmp598*tmp812 - tmp601*tmp816 - tmp604*tmp820 - tmp607*tmp824 - tmp610*tmp828 - tmp613*tmp832 - tmp616*tmp836;
      elMat(5,6) = -tmp619*tmp796 - tmp622*tmp800 - tmp625*tmp804 - tmp628*tmp808 - tmp631*tmp812 - tmp634*tmp816 - tmp637*tmp820 - tmp640*tmp824 - tmp643*tmp828 - tmp646*tmp832 - tmp649*tmp836;
      elMat(5,7) = -tmp650*tmp796 - tmp651*tmp800 - tmp652*tmp804 - tmp653*tmp808 - tmp654*tmp812 - tmp655*tmp816 - tmp656*tmp820 - tmp657*tmp824 - tmp658*tmp828 - tmp659*tmp832 - tmp660*tmp836;
      elMat(5,8) = -tmp661*tmp796 - tmp662*tmp800 - tmp663*tmp804 - tmp664*tmp808 - tmp665*tmp812 - tmp666*tmp816 - tmp667*tmp820 - tmp668*tmp824 - tmp669*tmp828 - tmp670*tmp832 - tmp671*tmp836;
      elMat(5,9) = -tmp672*tmp796 - tmp673*tmp800 - tmp674*tmp804 - tmp675*tmp808 - tmp676*tmp812 - tmp677*tmp816 - tmp678*tmp820 - tmp679*tmp824 - tmp680*tmp828 - tmp681*tmp832 - tmp682*tmp836;
      elMat(6,0) = -tmp102*tmp844 - tmp144*tmp848 - tmp186*tmp852 - tmp228*tmp856 - tmp270*tmp860 - tmp308*tmp864 - tmp347*tmp868 - tmp385*tmp872 - tmp424*tmp876 - tmp466*tmp880 - tmp47*tmp840;
      elMat(6,1) = tmp486*tmp839 - tmp488*tmp843 + tmp490*tmp847 + tmp492*tmp851 - tmp494*tmp855 + tmp496*tmp859 + tmp498*tmp863 + tmp500*tmp867 - tmp502*tmp871 - tmp504*tmp875 + tmp506*tmp879;
      elMat(6,2) = tmp508*tmp839 + tmp510*tmp843 + tmp512*tmp847 - tmp514*tmp851 + tmp516*tmp855 - tmp518*tmp859 - tmp520*tmp863 + tmp522*tmp867 - tmp524*tmp871 + tmp526*tmp875 - tmp528*tmp879;
      elMat(6,3) = -tmp530*tmp839 + tmp532*tmp843 + tmp534*tmp847 - tmp536*tmp851 - tmp538*tmp855 + tmp540*tmp859 - tmp542*tmp863 - tmp544*tmp867 + tmp546*tmp871 + tmp548*tmp875 + tmp550*tmp879;
      elMat(6,4) = -tmp553*tmp840 - tmp556*tmp844 - tmp559*tmp848 - tmp562*tmp852 - tmp565*tmp856 - tmp568*tmp860 - tmp571*tmp864 - tmp574*tmp868 - tmp577*tmp872 - tmp580*tmp876 - tmp583*tmp880;
      elMat(6,5) = -tmp586*tmp840 - tmp589*tmp844 - tmp592*tmp848 - tmp595*tmp852 - tmp598*tmp856 - tmp601*tmp860 - tmp604*tmp864 - tmp607*tmp868 - tmp610*tmp872 - tmp613*tmp876 - tmp616*tmp880;
      elMat(6,6) = -tmp619*tmp840 - tmp622*tmp844 - tmp625*tmp848 - tmp628*tmp852 - tmp631*tmp856 - tmp634*tmp860 - tmp637*tmp864 - tmp640*tmp868 - tmp643*tmp872 - tmp646*tmp876 - tmp649*tmp880;
      elMat(6,7) = -tmp650*tmp840 - tmp651*tmp844 - tmp652*tmp848 - tmp653*tmp852 - tmp654*tmp856 - tmp655*tmp860 - tmp656*tmp864 - tmp657*tmp868 - tmp658*tmp872 - tmp659*tmp876 - tmp660*tmp880;
      elMat(6,8) = -tmp661*tmp840 - tmp662*tmp844 - tmp663*tmp848 - tmp664*tmp852 - tmp665*tmp856 - tmp666*tmp860 - tmp667*tmp864 - tmp668*tmp868 - tmp669*tmp872 - tmp670*tmp876 - tmp671*tmp880;
      elMat(6,9) = -tmp672*tmp840 - tmp673*tmp844 - tmp674*tmp848 - tmp675*tmp852 - tmp676*tmp856 - tmp677*tmp860 - tmp678*tmp864 - tmp679*tmp868 - tmp680*tmp872 - tmp681*tmp876 - tmp682*tmp880;
      elMat(7,0) = -tmp102*tmp884 - tmp144*tmp886 - tmp186*tmp888 - tmp228*tmp890 - tmp270*tmp892 - tmp308*tmp894 - tmp347*tmp896 - tmp385*tmp898 - tmp424*tmp900 - tmp466*tmp902 - tmp47*tmp882;
      elMat(7,1) = tmp486*tmp881 - tmp488*tmp883 + tmp490*tmp885 + tmp492*tmp887 - tmp494*tmp889 + tmp496*tmp891 + tmp498*tmp893 + tmp500*tmp895 - tmp502*tmp897 - tmp504*tmp899 + tmp506*tmp901;
      elMat(7,2) = tmp508*tmp881 + tmp510*tmp883 + tmp512*tmp885 - tmp514*tmp887 + tmp516*tmp889 - tmp518*tmp891 - tmp520*tmp893 + tmp522*tmp895 - tmp524*tmp897 + tmp526*tmp899 - tmp528*tmp901;
      elMat(7,3) = -tmp530*tmp881 + tmp532*tmp883 + tmp534*tmp885 - tmp536*tmp887 - tmp538*tmp889 + tmp540*tmp891 - tmp542*tmp893 - tmp544*tmp895 + tmp546*tmp897 + tmp548*tmp899 + tmp550*tmp901;
      elMat(7,4) = -tmp553*tmp882 - tmp556*tmp884 - tmp559*tmp886 - tmp562*tmp888 - tmp565*tmp890 - tmp568*tmp892 - tmp571*tmp894 - tmp574*tmp896 - tmp577*tmp898 - tmp580*tmp900 - tmp583*tmp902;
      elMat(7,5) = -tmp586*tmp882 - tmp589*tmp884 - tmp592*tmp886 - tmp595*tmp888 - tmp598*tmp890 - tmp601*tmp892 - tmp604*tmp894 - tmp607*tmp896 - tmp610*tmp898 - tmp613*tmp900 - tmp616*tmp902;
      elMat(7,6) = -tmp619*tmp882 - tmp622*tmp884 - tmp625*tmp886 - tmp628*tmp888 - tmp631*tmp890 - tmp634*tmp892 - tmp637*tmp894 - tmp640*tmp896 - tmp643*tmp898 - tmp646*tmp900 - tmp649*tmp902;
      elMat(7,7) = -tmp650*tmp882 - tmp651*tmp884 - tmp652*tmp886 - tmp653*tmp888 - tmp654*tmp890 - tmp655*tmp892 - tmp656*tmp894 - tmp657*tmp896 - tmp658*tmp898 - tmp659*tmp900 - tmp660*tmp902;
      elMat(7,8) = -tmp661*tmp882 - tmp662*tmp884 - tmp663*tmp886 - tmp664*tmp888 - tmp665*tmp890 - tmp666*tmp892 - tmp667*tmp894 - tmp668*tmp896 - tmp669*tmp898 - tmp670*tmp900 - tmp671*tmp902;
      elMat(7,9) = -tmp672*tmp882 - tmp673*tmp884 - tmp674*tmp886 - tmp675*tmp888 - tmp676*tmp890 - tmp677*tmp892 - tmp678*tmp894 - tmp679*tmp896 - tmp680*tmp898 - tmp681*tmp900 - tmp682*tmp902;
      elMat(8,0) = -tmp102*tmp906 - tmp144*tmp908 - tmp186*tmp910 - tmp228*tmp912 - tmp270*tmp914 - tmp308*tmp916 - tmp347*tmp918 - tmp385*tmp920 - tmp424*tmp922 - tmp466*tmp924 - tmp47*tmp904;
      elMat(8,1) = tmp486*tmp903 - tmp488*tmp905 + tmp490*tmp907 + tmp492*tmp909 - tmp494*tmp911 + tmp496*tmp913 + tmp498*tmp915 + tmp500*tmp917 - tmp502*tmp919 - tmp504*tmp921 + tmp506*tmp923;
      elMat(8,2) = tmp508*tmp903 + tmp510*tmp905 + tmp512*tmp907 - tmp514*tmp909 + tmp516*tmp911 - tmp518*tmp913 - tmp520*tmp915 + tmp522*tmp917 - tmp524*tmp919 + tmp526*tmp921 - tmp528*tmp923;
      elMat(8,3) = -tmp530*tmp903 + tmp532*tmp905 + tmp534*tmp907 - tmp536*tmp909 - tmp538*tmp911 + tmp540*tmp913 - tmp542*tmp915 - tmp544*tmp917 + tmp546*tmp919 + tmp548*tmp921 + tmp550*tmp923;
      elMat(8,4) = -tmp553*tmp904 - tmp556*tmp906 - tmp559*tmp908 - tmp562*tmp910 - tmp565*tmp912 - tmp568*tmp914 - tmp571*tmp916 - tmp574*tmp918 - tmp577*tmp920 - tmp580*tmp922 - tmp583*tmp924;
      elMat(8,5) = -tmp586*tmp904 - tmp589*tmp906 - tmp592*tmp908 - tmp595*tmp910 - tmp598*tmp912 - tmp601*tmp914 - tmp604*tmp916 - tmp607*tmp918 - tmp610*tmp920 - tmp613*tmp922 - tmp616*tmp924;
      elMat(8,6) = -tmp619*tmp904 - tmp622*tmp906 - tmp625*tmp908 - tmp628*tmp910 - tmp631*tmp912 - tmp634*tmp914 - tmp637*tmp916 - tmp640*tmp918 - tmp643*tmp920 - tmp646*tmp922 - tmp649*tmp924;
      elMat(8,7) = -tmp650*tmp904 - tmp651*tmp906 - tmp652*tmp908 - tmp653*tmp910 - tmp654*tmp912 - tmp655*tmp914 - tmp656*tmp916 - tmp657*tmp918 - tmp658*tmp920 - tmp659*tmp922 - tmp660*tmp924;
      elMat(8,8) = -tmp661*tmp904 - tmp662*tmp906 - tmp663*tmp908 - tmp664*tmp910 - tmp665*tmp912 - tmp666*tmp914 - tmp667*tmp916 - tmp668*tmp918 - tmp669*tmp920 - tmp670*tmp922 - tmp671*tmp924;
      elMat(8,9) = -tmp672*tmp904 - tmp673*tmp906 - tmp674*tmp908 - tmp675*tmp910 - tmp676*tmp912 - tmp677*tmp914 - tmp678*tmp916 - tmp679*tmp918 - tmp680*tmp920 - tmp681*tmp922 - tmp682*tmp924;
      elMat(9,0) = -tmp102*tmp928 - tmp144*tmp930 - tmp186*tmp932 - tmp228*tmp934 - tmp270*tmp936 - tmp308*tmp938 - tmp347*tmp940 - tmp385*tmp942 - tmp424*tmp944 - tmp466*tmp946 - tmp47*tmp926;
      elMat(9,1) = tmp486*tmp925 - tmp488*tmp927 + tmp490*tmp929 + tmp492*tmp931 - tmp494*tmp933 + tmp496*tmp935 + tmp498*tmp937 + tmp500*tmp939 - tmp502*tmp941 - tmp504*tmp943 + tmp506*tmp945;
      elMat(9,2) = tmp508*tmp925 + tmp510*tmp927 + tmp512*tmp929 - tmp514*tmp931 + tmp516*tmp933 - tmp518*tmp935 - tmp520*tmp937 + tmp522*tmp939 - tmp524*tmp941 + tmp526*tmp943 - tmp528*tmp945;
      elMat(9,3) = -tmp530*tmp925 + tmp532*tmp927 + tmp534*tmp929 - tmp536*tmp931 - tmp538*tmp933 + tmp540*tmp935 - tmp542*tmp937 - tmp544*tmp939 + tmp546*tmp941 + tmp548*tmp943 + tmp550*tmp945;
      elMat(9,4) = -tmp553*tmp926 - tmp556*tmp928 - tmp559*tmp930 - tmp562*tmp932 - tmp565*tmp934 - tmp568*tmp936 - tmp571*tmp938 - tmp574*tmp940 - tmp577*tmp942 - tmp580*tmp944 - tmp583*tmp946;
      elMat(9,5) = -tmp586*tmp926 - tmp589*tmp928 - tmp592*tmp930 - tmp595*tmp932 - tmp598*tmp934 - tmp601*tmp936 - tmp604*tmp938 - tmp607*tmp940 - tmp610*tmp942 - tmp613*tmp944 - tmp616*tmp946;
      elMat(9,6) = -tmp619*tmp926 - tmp622*tmp928 - tmp625*tmp930 - tmp628*tmp932 - tmp631*tmp934 - tmp634*tmp936 - tmp637*tmp938 - tmp640*tmp940 - tmp643*tmp942 - tmp646*tmp944 - tmp649*tmp946;
      elMat(9,7) = -tmp650*tmp926 - tmp651*tmp928 - tmp652*tmp930 - tmp653*tmp932 - tmp654*tmp934 - tmp655*tmp936 - tmp656*tmp938 - tmp657*tmp940 - tmp658*tmp942 - tmp659*tmp944 - tmp660*tmp946;
      elMat(9,8) = -tmp661*tmp926 - tmp662*tmp928 - tmp663*tmp930 - tmp664*tmp932 - tmp665*tmp934 - tmp666*tmp936 - tmp667*tmp938 - tmp668*tmp940 - tmp669*tmp942 - tmp670*tmp944 - tmp671*tmp946;
      elMat(9,9) = -tmp672*tmp926 - tmp673*tmp928 - tmp674*tmp930 - tmp675*tmp932 - tmp676*tmp934 - tmp677*tmp936 - tmp678*tmp938 - tmp679*tmp940 - tmp680*tmp942 - tmp681*tmp944 - tmp682*tmp946;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_0_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp17*J_B_1(2, 2) + tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 2) - tmp21*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp16*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp11*tmp4 - tmp14;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp30 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp8 - tmp15;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp10 + tmp13;
      const real_t tmp40 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = coords[0][0]*coords[1][1];
      const real_t tmp48 = coords[0][0]*coords[1][2];
      const real_t tmp49 = coords[2][1]*coords[3][2];
      const real_t tmp50 = coords[0][1]*coords[1][0];
      const real_t tmp51 = coords[0][1]*coords[1][2];
      const real_t tmp52 = coords[2][2]*coords[3][0];
      const real_t tmp53 = coords[0][2]*coords[1][0];
      const real_t tmp54 = coords[0][2]*coords[1][1];
      const real_t tmp55 = coords[2][0]*coords[3][1];
      const real_t tmp56 = coords[2][2]*coords[3][1];
      const real_t tmp57 = coords[2][0]*coords[3][2];
      const real_t tmp58 = coords[2][1]*coords[3][0];
      const real_t tmp59 = std::abs(coords[0][0]*tmp49 - coords[0][0]*tmp56 + coords[0][1]*tmp52 - coords[0][1]*tmp57 + coords[0][2]*tmp55 - coords[0][2]*tmp58 - coords[1][0]*tmp49 + coords[1][0]*tmp56 - coords[1][1]*tmp52 + coords[1][1]*tmp57 - coords[1][2]*tmp55 + coords[1][2]*tmp58 + coords[2][0]*tmp51 - coords[2][0]*tmp54 - coords[2][1]*tmp48 + coords[2][1]*tmp53 + coords[2][2]*tmp47 - coords[2][2]*tmp50 - coords[3][0]*tmp51 + coords[3][0]*tmp54 + coords[3][1]*tmp48 - coords[3][1]*tmp53 - coords[3][2]*tmp47 + coords[3][2]*tmp50);
      const real_t tmp60 = 0.55279693041046674*tmp24;
      const real_t tmp61 = tmp60*(tmp17 - tmp20);
      const real_t tmp62 = tmp60*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp63 = tmp60*(tmp18 - tmp21);
      const real_t tmp64 = tmp59*(tmp27*tmp61 + tmp29*tmp62 + tmp33*tmp62 + tmp35*tmp61 + tmp37*tmp62 + tmp39*tmp63 + tmp43*tmp63 + tmp45*tmp63 + tmp6*tmp61)*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = 0.011829781572832234*tmp64;
      const real_t tmp66 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp67 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp68 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp69 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp70 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp71 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp72 = tmp67*J_B_10(2, 2) + tmp68*J_B_10(2, 0) - tmp69*J_B_10(2, 1) - tmp70*J_B_10(2, 2) - tmp71*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp73 = 1.0 / (tmp72);
      const real_t tmp74 = tmp16*tmp73;
      const real_t tmp75 = tmp66*tmp74;
      const real_t tmp76 = tmp6*tmp75;
      const real_t tmp77 = tmp27*tmp75;
      const real_t tmp78 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp79 = tmp74*tmp78;
      const real_t tmp80 = tmp29*tmp79;
      const real_t tmp81 = tmp33*tmp79;
      const real_t tmp82 = tmp35*tmp75;
      const real_t tmp83 = tmp37*tmp79;
      const real_t tmp84 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp85 = tmp74*tmp84;
      const real_t tmp86 = tmp39*tmp85;
      const real_t tmp87 = tmp43*tmp85;
      const real_t tmp88 = tmp45*tmp85;
      const real_t tmp89 = 0.60805118540288361*tmp74;
      const real_t tmp90 = tmp89*(tmp67 - tmp70);
      const real_t tmp91 = tmp89*(-tmp69 + J_B_10(0, 2)*J_B_10(1, 0));
      const real_t tmp92 = tmp89*(tmp68 - tmp71);
      const real_t tmp93 = tmp59*(tmp27*tmp90 + tmp29*tmp91 + tmp33*tmp91 + tmp35*tmp90 + tmp37*tmp91 + tmp39*tmp92 + tmp43*tmp92 + tmp45*tmp92 + tmp6*tmp90)*std::abs(tmp72)*ScalarCoeff0_10;
      const real_t tmp94 = 0.0061414854617707626*tmp93;
      const real_t tmp95 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp96 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp97 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp98 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp99 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp100 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp101 = -tmp100*J_B_11(2, 0) + tmp96*J_B_11(2, 2) + tmp97*J_B_11(2, 0) - tmp98*J_B_11(2, 1) - tmp99*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp102 = 1.0 / (tmp101);
      const real_t tmp103 = tmp102*tmp16;
      const real_t tmp104 = tmp103*tmp95;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp108 = tmp103*tmp107;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp114 = tmp103*tmp113;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = 2.0850189307815055*tmp103;
      const real_t tmp119 = tmp118*(tmp96 - tmp99);
      const real_t tmp120 = tmp118*(-tmp98 + J_B_11(0, 2)*J_B_11(1, 0));
      const real_t tmp121 = tmp118*(-tmp100 + tmp97);
      const real_t tmp122 = tmp59*(-tmp119*tmp27 - tmp119*tmp35 - tmp119*tmp6 - tmp120*tmp29 - tmp120*tmp33 - tmp120*tmp37 - tmp121*tmp39 - tmp121*tmp43 - tmp121*tmp45)*std::abs(tmp101)*ScalarCoeff0_11;
      const real_t tmp123 = 0.0043612323249822204*tmp122;
      const real_t tmp124 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp125 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp126 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp127 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp128 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp129 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp130 = tmp125*J_B_2(2, 2) + tmp126*J_B_2(2, 0) - tmp127*J_B_2(2, 1) - tmp128*J_B_2(2, 2) - tmp129*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp131 = 1.0 / (tmp130);
      const real_t tmp132 = tmp131*tmp16;
      const real_t tmp133 = tmp124*tmp132;
      const real_t tmp134 = tmp133*tmp6;
      const real_t tmp135 = tmp133*tmp27;
      const real_t tmp136 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp137 = tmp132*tmp136;
      const real_t tmp138 = tmp137*tmp29;
      const real_t tmp139 = tmp137*tmp33;
      const real_t tmp140 = tmp133*tmp35;
      const real_t tmp141 = tmp137*tmp37;
      const real_t tmp142 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp143 = tmp132*tmp142;
      const real_t tmp144 = tmp143*tmp39;
      const real_t tmp145 = tmp143*tmp43;
      const real_t tmp146 = tmp143*tmp45;
      const real_t tmp147 = 0.29317593934991559*tmp132;
      const real_t tmp148 = tmp147*(tmp125 - tmp128);
      const real_t tmp149 = tmp147*(-tmp127 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp150 = tmp147*(tmp126 - tmp129);
      const real_t tmp151 = tmp59*(-tmp148*tmp27 - tmp148*tmp35 - tmp148*tmp6 - tmp149*tmp29 - tmp149*tmp33 - tmp149*tmp37 - tmp150*tmp39 - tmp150*tmp43 - tmp150*tmp45)*std::abs(tmp130)*ScalarCoeff0_2;
      const real_t tmp152 = 0.012248248047610821*tmp151;
      const real_t tmp153 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp154 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp155 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp156 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp157 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp158 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp159 = tmp154*J_B_3(2, 2) + tmp155*J_B_3(2, 0) - tmp156*J_B_3(2, 1) - tmp157*J_B_3(2, 2) - tmp158*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp160 = 1.0 / (tmp159);
      const real_t tmp161 = tmp16*tmp160;
      const real_t tmp162 = tmp153*tmp161;
      const real_t tmp163 = tmp162*tmp6;
      const real_t tmp164 = tmp162*tmp27;
      const real_t tmp165 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp166 = tmp161*tmp165;
      const real_t tmp167 = tmp166*tmp29;
      const real_t tmp168 = tmp166*tmp33;
      const real_t tmp169 = tmp162*tmp35;
      const real_t tmp170 = tmp166*tmp37;
      const real_t tmp171 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp172 = tmp161*tmp171;
      const real_t tmp173 = tmp172*tmp39;
      const real_t tmp174 = tmp172*tmp43;
      const real_t tmp175 = tmp172*tmp45;
      const real_t tmp176 = 0.56151037867223397*tmp161;
      const real_t tmp177 = tmp176*(tmp154 - tmp157);
      const real_t tmp178 = tmp176*(-tmp156 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp179 = tmp176*(tmp155 - tmp158);
      const real_t tmp180 = tmp59*(tmp177*tmp27 + tmp177*tmp35 + tmp177*tmp6 + tmp178*tmp29 + tmp178*tmp33 + tmp178*tmp37 + tmp179*tmp39 + tmp179*tmp43 + tmp179*tmp45)*std::abs(tmp159)*ScalarCoeff0_3;
      const real_t tmp181 = 0.017219568446249611*tmp180;
      const real_t tmp182 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp183 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp184 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp185 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp186 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp187 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp188 = tmp183*J_B_4(2, 2) + tmp184*J_B_4(2, 0) - tmp185*J_B_4(2, 1) - tmp186*J_B_4(2, 2) - tmp187*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp189 = 1.0 / (tmp188);
      const real_t tmp190 = tmp16*tmp189;
      const real_t tmp191 = tmp182*tmp190;
      const real_t tmp192 = tmp191*tmp6;
      const real_t tmp193 = tmp191*tmp27;
      const real_t tmp194 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp195 = tmp190*tmp194;
      const real_t tmp196 = tmp195*tmp29;
      const real_t tmp197 = tmp195*tmp33;
      const real_t tmp198 = tmp191*tmp35;
      const real_t tmp199 = tmp195*tmp37;
      const real_t tmp200 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp201 = tmp190*tmp200;
      const real_t tmp202 = tmp201*tmp39;
      const real_t tmp203 = tmp201*tmp43;
      const real_t tmp204 = tmp201*tmp45;
      const real_t tmp205 = 0.31389282688815401*tmp190;
      const real_t tmp206 = tmp205*(tmp183 - tmp186);
      const real_t tmp207 = tmp205*(-tmp185 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp208 = tmp205*(tmp184 - tmp187);
      const real_t tmp209 = tmp59*(-tmp206*tmp27 - tmp206*tmp35 - tmp206*tmp6 - tmp207*tmp29 - tmp207*tmp33 - tmp207*tmp37 - tmp208*tmp39 - tmp208*tmp43 - tmp208*tmp45)*std::abs(tmp188)*ScalarCoeff0_4;
      const real_t tmp210 = 0.021490090227737114*tmp209;
      const real_t tmp211 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp212 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp213 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp214 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp215 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp216 = tmp211*J_B_5(2, 2) + tmp212*J_B_5(2, 0) - tmp213*J_B_5(2, 1) - tmp214*J_B_5(2, 2) - tmp215*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp217 = tmp16/tmp216;
      const real_t tmp218 = tmp217*(J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0));
      const real_t tmp219 = tmp218*tmp6;
      const real_t tmp220 = tmp218*tmp27;
      const real_t tmp221 = tmp217*(-J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0));
      const real_t tmp222 = tmp221*tmp29;
      const real_t tmp223 = tmp221*tmp33;
      const real_t tmp224 = tmp218*tmp35;
      const real_t tmp225 = tmp221*tmp37;
      const real_t tmp226 = tmp217*(J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1));
      const real_t tmp227 = tmp226*tmp39;
      const real_t tmp228 = tmp226*tmp43;
      const real_t tmp229 = tmp226*tmp45;
      const real_t tmp230 = 0.99043597017024343*tmp217;
      const real_t tmp231 = tmp230*(tmp211 - tmp214);
      const real_t tmp232 = tmp230*(-tmp213 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp233 = tmp230*(tmp212 - tmp215);
      const real_t tmp234 = tmp59*(tmp231*tmp27 + tmp231*tmp35 + tmp231*tmp6 + tmp232*tmp29 + tmp232*tmp33 + tmp232*tmp37 + tmp233*tmp39 + tmp233*tmp43 + tmp233*tmp45)*std::abs(tmp216)*ScalarCoeff0_5;
      const real_t tmp235 = 0.0084625239161731543*tmp234;
      const real_t tmp236 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp237 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp238 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp239 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp240 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp241 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp242 = tmp237*J_B_6(2, 2) + tmp238*J_B_6(2, 0) - tmp239*J_B_6(2, 1) - tmp240*J_B_6(2, 2) - tmp241*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp243 = 1.0 / (tmp242);
      const real_t tmp244 = tmp16*tmp243;
      const real_t tmp245 = tmp236*tmp244;
      const real_t tmp246 = tmp245*tmp6;
      const real_t tmp247 = tmp245*tmp27;
      const real_t tmp248 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp249 = tmp244*tmp248;
      const real_t tmp250 = tmp249*tmp29;
      const real_t tmp251 = tmp249*tmp33;
      const real_t tmp252 = tmp245*tmp35;
      const real_t tmp253 = tmp249*tmp37;
      const real_t tmp254 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp255 = tmp244*tmp254;
      const real_t tmp256 = tmp255*tmp39;
      const real_t tmp257 = tmp255*tmp43;
      const real_t tmp258 = tmp255*tmp45;
      const real_t tmp259 = 1.2518910405721839*tmp244;
      const real_t tmp260 = tmp259*(tmp237 - tmp240);
      const real_t tmp261 = tmp259*(-tmp239 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp262 = tmp259*(tmp238 - tmp241);
      const real_t tmp263 = tmp59*(-tmp260*tmp27 - tmp260*tmp35 - tmp260*tmp6 - tmp261*tmp29 - tmp261*tmp33 - tmp261*tmp37 - tmp262*tmp39 - tmp262*tmp43 - tmp262*tmp45)*std::abs(tmp242)*ScalarCoeff0_6;
      const real_t tmp264 = 0.0088251866742250357*tmp263;
      const real_t tmp265 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp266 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp267 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp268 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp269 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp270 = tmp265*J_B_7(2, 2) + tmp266*J_B_7(2, 0) - tmp267*J_B_7(2, 1) - tmp268*J_B_7(2, 2) - tmp269*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp271 = tmp16/tmp270;
      const real_t tmp272 = tmp271*(J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0));
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = tmp271*(-J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0));
      const real_t tmp276 = tmp275*tmp29;
      const real_t tmp277 = tmp275*tmp33;
      const real_t tmp278 = tmp272*tmp35;
      const real_t tmp279 = tmp275*tmp37;
      const real_t tmp280 = tmp271*(J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1));
      const real_t tmp281 = tmp280*tmp39;
      const real_t tmp282 = tmp280*tmp43;
      const real_t tmp283 = tmp280*tmp45;
      const real_t tmp284 = 0.77270393148826533*tmp271;
      const real_t tmp285 = tmp284*(tmp265 - tmp268);
      const real_t tmp286 = tmp284*(-tmp267 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp287 = tmp284*(tmp266 - tmp269);
      const real_t tmp288 = tmp59*(tmp27*tmp285 + tmp285*tmp35 + tmp285*tmp6 + tmp286*tmp29 + tmp286*tmp33 + tmp286*tmp37 + tmp287*tmp39 + tmp287*tmp43 + tmp287*tmp45)*std::abs(tmp270)*ScalarCoeff0_7;
      const real_t tmp289 = 0.0077188851041817101*tmp288;
      const real_t tmp290 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp291 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp292 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp293 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp294 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp295 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp296 = tmp291*J_B_8(2, 2) + tmp292*J_B_8(2, 0) - tmp293*J_B_8(2, 1) - tmp294*J_B_8(2, 2) - tmp295*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp297 = 1.0 / (tmp296);
      const real_t tmp298 = tmp16*tmp297;
      const real_t tmp299 = tmp290*tmp298;
      const real_t tmp300 = tmp299*tmp6;
      const real_t tmp301 = tmp27*tmp299;
      const real_t tmp302 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp303 = tmp298*tmp302;
      const real_t tmp304 = tmp29*tmp303;
      const real_t tmp305 = tmp303*tmp33;
      const real_t tmp306 = tmp299*tmp35;
      const real_t tmp307 = tmp303*tmp37;
      const real_t tmp308 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp309 = tmp298*tmp308;
      const real_t tmp310 = tmp309*tmp39;
      const real_t tmp311 = tmp309*tmp43;
      const real_t tmp312 = tmp309*tmp45;
      const real_t tmp313 = 0.9184440441026207*tmp298;
      const real_t tmp314 = tmp313*(tmp291 - tmp294);
      const real_t tmp315 = tmp313*(-tmp293 + J_B_8(0, 2)*J_B_8(1, 0));
      const real_t tmp316 = tmp313*(tmp292 - tmp295);
      const real_t tmp317 = tmp59*(-tmp27*tmp314 - tmp29*tmp315 - tmp314*tmp35 - tmp314*tmp6 - tmp315*tmp33 - tmp315*tmp37 - tmp316*tmp39 - tmp316*tmp43 - tmp316*tmp45)*std::abs(tmp296)*ScalarCoeff0_8;
      const real_t tmp318 = 0.006659242794062166*tmp317;
      const real_t tmp319 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp320 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp321 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp322 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp323 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp324 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp325 = tmp320*J_B_9(2, 2) + tmp321*J_B_9(2, 0) - tmp322*J_B_9(2, 1) - tmp323*J_B_9(2, 2) - tmp324*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp326 = 1.0 / (tmp325);
      const real_t tmp327 = tmp16*tmp326;
      const real_t tmp328 = tmp319*tmp327;
      const real_t tmp329 = tmp328*tmp6;
      const real_t tmp330 = tmp27*tmp328;
      const real_t tmp331 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp332 = tmp327*tmp331;
      const real_t tmp333 = tmp29*tmp332;
      const real_t tmp334 = tmp33*tmp332;
      const real_t tmp335 = tmp328*tmp35;
      const real_t tmp336 = tmp332*tmp37;
      const real_t tmp337 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp338 = tmp327*tmp337;
      const real_t tmp339 = tmp338*tmp39;
      const real_t tmp340 = tmp338*tmp43;
      const real_t tmp341 = tmp338*tmp45;
      const real_t tmp342 = 0.37454442704241986*tmp327;
      const real_t tmp343 = tmp342*(tmp320 - tmp323);
      const real_t tmp344 = tmp342*(-tmp322 + J_B_9(0, 2)*J_B_9(1, 0));
      const real_t tmp345 = tmp342*(tmp321 - tmp324);
      const real_t tmp346 = tmp59*(tmp27*tmp343 + tmp29*tmp344 + tmp33*tmp344 + tmp343*tmp35 + tmp343*tmp6 + tmp344*tmp37 + tmp345*tmp39 + tmp345*tmp43 + tmp345*tmp45)*std::abs(tmp325)*ScalarCoeff0_9;
      const real_t tmp347 = 0.0061548665412862651*tmp346;
      const real_t tmp348 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp349 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp350 = 0.2723974837528258*tmp77 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp87;
      const real_t tmp351 = 0.3256196736114374*tmp76 + 0.3256196736114374*tmp80 + 0.3256196736114374*tmp86;
      const real_t tmp352 = 0.054242807519210512*tmp106 + 0.054242807519210512*tmp110 + 0.054242807519210512*tmp116;
      const real_t tmp353 = 0.69877623478892303*tmp105 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp115;
      const real_t tmp354 = 1.2716142408535775*tmp135 + 1.2716142408535775*tmp139 + 1.2716142408535775*tmp145;
      const real_t tmp355 = 1.3169318389705873*tmp134 + 1.3169318389705873*tmp138 + 1.3169318389705873*tmp144;
      const real_t tmp356 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp168 + 1.4152929568371884*tmp174;
      const real_t tmp357 = 0.41537646564397157*tmp163 + 0.41537646564397157*tmp167 + 0.41537646564397157*tmp173;
      const real_t tmp358 = 0.50720690366156718*tmp193 + 0.50720690366156718*tmp197 + 0.50720690366156718*tmp203;
      const real_t tmp359 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp196 + 1.2177936097379878*tmp202;
      const real_t tmp360 = 1.3207616593498592*tmp220 + 1.3207616593498592*tmp223 + 1.3207616593498592*tmp228;
      const real_t tmp361 = 2.1520288156647434*tmp219 + 2.1520288156647434*tmp222 + 2.1520288156647434*tmp227;
      const real_t tmp362 = 1.2259759537187613*tmp247 + 1.2259759537187613*tmp251 + 1.2259759537187613*tmp257;
      const real_t tmp363 = 0.035965040373342916*tmp246 + 0.035965040373342916*tmp250 + 0.035965040373342916*tmp256;
      const real_t tmp364 = 0.23782646519773576*tmp274 + 0.23782646519773576*tmp277 + 0.23782646519773576*tmp282;
      const real_t tmp365 = 1.7318139619254227*tmp273 + 1.7318139619254227*tmp276 + 1.7318139619254227*tmp281;
      const real_t tmp366 = 0.19112574223634571*tmp301 + 0.19112574223634571*tmp305 + 0.19112574223634571*tmp311;
      const real_t tmp367 = 0.21336495814298084*tmp300 + 0.21336495814298084*tmp304 + 0.21336495814298084*tmp310;
      const real_t tmp368 = 0.14073571909439453*tmp330 + 0.14073571909439453*tmp334 + 0.14073571909439453*tmp340;
      const real_t tmp369 = 2.9649155283744921*tmp329 + 2.9649155283744921*tmp333 + 2.9649155283744921*tmp339;
      const real_t tmp370 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp371 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp372 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp88;
      const real_t tmp373 = 3.0100340280386204*tmp76 + 3.0100340280386204*tmp80 + 3.0100340280386204*tmp86;
      const real_t tmp374 = 0.054242807519210512*tmp111 + 0.054242807519210512*tmp112 + 0.054242807519210512*tmp117;
      const real_t tmp375 = 0.16196202691036121*tmp105 + 0.16196202691036121*tmp109 + 0.16196202691036121*tmp115;
      const real_t tmp376 = 1.2716142408535775*tmp140 + 1.2716142408535775*tmp141 + 1.2716142408535775*tmp146;
      const real_t tmp377 = 0.11827798082591956*tmp134 + 0.11827798082591956*tmp138 + 0.11827798082591956*tmp144;
      const real_t tmp378 = 1.4152929568371884*tmp169 + 1.4152929568371884*tmp170 + 1.4152929568371884*tmp175;
      const real_t tmp379 = 1.730840956191074*tmp163 + 1.730840956191074*tmp167 + 1.730840956191074*tmp173;
      const real_t tmp380 = 0.50720690366156718*tmp198 + 0.50720690366156718*tmp199 + 0.50720690366156718*tmp204;
      const real_t tmp381 = 0.96110665971229103*tmp192 + 0.96110665971229103*tmp196 + 0.96110665971229103*tmp202;
      const real_t tmp382 = 1.3207616593498592*tmp224 + 1.3207616593498592*tmp225 + 1.3207616593498592*tmp229;
      const real_t tmp383 = 0.51764549515564062*tmp219 + 0.51764549515564062*tmp222 + 0.51764549515564062*tmp227;
      const real_t tmp384 = 1.2259759537187613*tmp252 + 1.2259759537187613*tmp253 + 1.2259759537187613*tmp258;
      const real_t tmp385 = 0.48616796533571183*tmp246 + 0.48616796533571183*tmp250 + 0.48616796533571183*tmp256;
      const real_t tmp386 = 0.23782646519773576*tmp278 + 0.23782646519773576*tmp279 + 0.23782646519773576*tmp283;
      const real_t tmp387 = 1.8030635043651069*tmp273 + 1.8030635043651069*tmp276 + 1.8030635043651069*tmp281;
      const real_t tmp388 = 0.19112574223634571*tmp306 + 0.19112574223634571*tmp307 + 0.19112574223634571*tmp312;
      const real_t tmp389 = 1.6770652555180527*tmp300 + 1.6770652555180527*tmp304 + 1.6770652555180527*tmp310;
      const real_t tmp390 = 0.14073571909439453*tmp335 + 0.14073571909439453*tmp336 + 0.14073571909439453*tmp341;
      const real_t tmp391 = 0.2688931795735332*tmp329 + 0.2688931795735332*tmp333 + 0.2688931795735332*tmp339;
      const real_t tmp392 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp393 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp394 = 0.3256196736114374*tmp82 + 0.3256196736114374*tmp83 + 0.3256196736114374*tmp88;
      const real_t tmp395 = 3.0100340280386204*tmp77 + 3.0100340280386204*tmp81 + 3.0100340280386204*tmp87;
      const real_t tmp396 = 0.69877623478892303*tmp111 + 0.69877623478892303*tmp112 + 0.69877623478892303*tmp117;
      const real_t tmp397 = 0.16196202691036121*tmp106 + 0.16196202691036121*tmp110 + 0.16196202691036121*tmp116;
      const real_t tmp398 = 1.3169318389705873*tmp140 + 1.3169318389705873*tmp141 + 1.3169318389705873*tmp146;
      const real_t tmp399 = 0.11827798082591956*tmp135 + 0.11827798082591956*tmp139 + 0.11827798082591956*tmp145;
      const real_t tmp400 = 0.41537646564397157*tmp169 + 0.41537646564397157*tmp170 + 0.41537646564397157*tmp175;
      const real_t tmp401 = 1.730840956191074*tmp164 + 1.730840956191074*tmp168 + 1.730840956191074*tmp174;
      const real_t tmp402 = 1.2177936097379878*tmp198 + 1.2177936097379878*tmp199 + 1.2177936097379878*tmp204;
      const real_t tmp403 = 0.96110665971229103*tmp193 + 0.96110665971229103*tmp197 + 0.96110665971229103*tmp203;
      const real_t tmp404 = 2.1520288156647434*tmp224 + 2.1520288156647434*tmp225 + 2.1520288156647434*tmp229;
      const real_t tmp405 = 0.51764549515564062*tmp220 + 0.51764549515564062*tmp223 + 0.51764549515564062*tmp228;
      const real_t tmp406 = 0.035965040373342916*tmp252 + 0.035965040373342916*tmp253 + 0.035965040373342916*tmp258;
      const real_t tmp407 = 0.48616796533571183*tmp247 + 0.48616796533571183*tmp251 + 0.48616796533571183*tmp257;
      const real_t tmp408 = 1.7318139619254227*tmp278 + 1.7318139619254227*tmp279 + 1.7318139619254227*tmp283;
      const real_t tmp409 = 1.8030635043651069*tmp274 + 1.8030635043651069*tmp277 + 1.8030635043651069*tmp282;
      const real_t tmp410 = 0.21336495814298084*tmp306 + 0.21336495814298084*tmp307 + 0.21336495814298084*tmp312;
      const real_t tmp411 = 1.6770652555180527*tmp301 + 1.6770652555180527*tmp305 + 1.6770652555180527*tmp311;
      const real_t tmp412 = 2.9649155283744921*tmp335 + 2.9649155283744921*tmp336 + 2.9649155283744921*tmp341;
      const real_t tmp413 = 0.2688931795735332*tmp330 + 0.2688931795735332*tmp334 + 0.2688931795735332*tmp340;
      elMat(0,0) = -tmp123*(-2.0850189307815055*tmp105 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp110 - 2.0850189307815055*tmp111 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp115 - 2.0850189307815055*tmp116 - 2.0850189307815055*tmp117) - tmp152*(-0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp138 - 0.29317593934991559*tmp139 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp144 - 0.29317593934991559*tmp145 - 0.29317593934991559*tmp146) - tmp181*(0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp167 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170 + 0.56151037867223397*tmp173 + 0.56151037867223397*tmp174 + 0.56151037867223397*tmp175) - tmp210*(-0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198 - 0.31389282688815401*tmp199 - 0.31389282688815401*tmp202 - 0.31389282688815401*tmp203 - 0.31389282688815401*tmp204) - tmp235*(0.99043597017024343*tmp219 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp222 + 0.99043597017024343*tmp223 + 0.99043597017024343*tmp224 + 0.99043597017024343*tmp225 + 0.99043597017024343*tmp227 + 0.99043597017024343*tmp228 + 0.99043597017024343*tmp229) - tmp264*(-1.2518910405721839*tmp246 - 1.2518910405721839*tmp247 - 1.2518910405721839*tmp250 - 1.2518910405721839*tmp251 - 1.2518910405721839*tmp252 - 1.2518910405721839*tmp253 - 1.2518910405721839*tmp256 - 1.2518910405721839*tmp257 - 1.2518910405721839*tmp258) - tmp289*(0.77270393148826533*tmp273 + 0.77270393148826533*tmp274 + 0.77270393148826533*tmp276 + 0.77270393148826533*tmp277 + 0.77270393148826533*tmp278 + 0.77270393148826533*tmp279 + 0.77270393148826533*tmp281 + 0.77270393148826533*tmp282 + 0.77270393148826533*tmp283) - tmp318*(-0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp304 - 0.9184440441026207*tmp305 - 0.9184440441026207*tmp306 - 0.9184440441026207*tmp307 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp311 - 0.9184440441026207*tmp312) - tmp347*(0.37454442704241986*tmp329 + 0.37454442704241986*tmp330 + 0.37454442704241986*tmp333 + 0.37454442704241986*tmp334 + 0.37454442704241986*tmp335 + 0.37454442704241986*tmp336 + 0.37454442704241986*tmp339 + 0.37454442704241986*tmp340 + 0.37454442704241986*tmp341) - tmp65*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46) - tmp94*(0.60805118540288361*tmp76 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      elMat(0,1) = 0.0036548782978011126*tmp122*(tmp111 + tmp112 + tmp117) + 0.010799549999884401*tmp151*(tmp140 + tmp141 + tmp146) - 0.012584765868454714*tmp180*(tmp169 + tmp170 + tmp175) + 0.00083582139204094858*tmp209*(tmp198 + tmp199 + tmp204) + 0.0040819365333192512*tmp234*(tmp224 + tmp225 + tmp229) + 0.0045346636251092122*tmp263*(tmp252 + tmp253 + tmp258) - 0.0061987549215557864*tmp288*(tmp278 + tmp279 + tmp283) - 0.0045087419239184514*tmp317*(tmp306 + tmp307 + tmp312) + 0.0044998649071490461*tmp346*(tmp335 + tmp336 + tmp341) + 0.0072301427194886381*tmp64*(tmp36 + tmp38 + tmp46) - 0.012344594760863713*tmp93*(tmp82 + tmp83 + tmp88);
      elMat(0,2) = 0.0013137068218914037*tmp122*(tmp106 + tmp110 + tmp116) - 0.0038818597778972029*tmp151*(tmp135 + tmp139 + tmp145) + 0.010066964965131993*tmp180*(tmp164 + tmp168 + tmp174) - 0.0046804043242939224*tmp209*(tmp193 + tmp197 + tmp203) - 0.0097490714046835261*tmp234*(tmp220 + tmp223 + tmp228) + 0.0085077884791842431*tmp263*(tmp247 + tmp251 + tmp257) - 0.0056487878897383461*tmp288*(tmp274 + tmp277 + tmp282) + 0.005238393734043144*tmp317*(tmp301 + tmp305 + tmp311) - 0.012093792842045984*tmp346*(tmp330 + tmp334 + tmp340) + 0.0067853652681886352*tmp64*(tmp28 + tmp34 + tmp44) + 0.0041416969702195786*tmp93*(tmp77 + tmp81 + tmp87);
      elMat(0,3) = 0.0041246668394316508*tmp122*(tmp105 + tmp109 + tmp115) - 0.0033267985952381263*tmp151*(tmp134 + tmp138 + tmp144) - 0.0071511654955033511*tmp180*(tmp163 + tmp167 + tmp173) + 0.010590168103918869*tmp209*(tmp192 + tmp196 + tmp202) - 0.0027144532136395704*tmp234*(tmp219 + tmp222 + tmp227) - 0.0019942799754541058*tmp263*(tmp246 + tmp250 + tmp256) + 0.005883129944586717*tmp288*(tmp273 + tmp276 + tmp281) + 0.0053864900723149976*tmp317*(tmp300 + tmp304 + tmp310) + 0.0052886569726683132*tmp346*(tmp329 + tmp333 + tmp339) - 0.020554974928565235*tmp64*(tmp26 + tmp32 + tmp42) + 0.0044685602754798454*tmp93*(tmp76 + tmp80 + tmp86);
      elMat(0,4) = -tmp123*(tmp352 + tmp353) - tmp152*(tmp354 + tmp355) - tmp181*(tmp356 + tmp357) - tmp210*(tmp358 + tmp359) - tmp235*(tmp360 + tmp361) - tmp264*(tmp362 + tmp363) - tmp289*(tmp364 + tmp365) - tmp318*(tmp366 + tmp367) - tmp347*(tmp368 + tmp369) - tmp65*(tmp348 + tmp349) - tmp94*(tmp350 + tmp351);
      elMat(0,5) = -tmp123*(tmp374 + tmp375) - tmp152*(tmp376 + tmp377) - tmp181*(tmp378 + tmp379) - tmp210*(tmp380 + tmp381) - tmp235*(tmp382 + tmp383) - tmp264*(tmp384 + tmp385) - tmp289*(tmp386 + tmp387) - tmp318*(tmp388 + tmp389) - tmp347*(tmp390 + tmp391) - tmp65*(tmp370 + tmp371) - tmp94*(tmp372 + tmp373);
      elMat(0,6) = -tmp123*(tmp396 + tmp397) - tmp152*(tmp398 + tmp399) - tmp181*(tmp400 + tmp401) - tmp210*(tmp402 + tmp403) - tmp235*(tmp404 + tmp405) - tmp264*(tmp406 + tmp407) - tmp289*(tmp408 + tmp409) - tmp318*(tmp410 + tmp411) - tmp347*(tmp412 + tmp413) - tmp65*(tmp392 + tmp393) - tmp94*(tmp394 + tmp395);
      elMat(0,7) = -tmp123*(3.030776123262295*tmp102*tmp107*tmp16*tmp29 + 3.030776123262295*tmp102*tmp113*tmp16*tmp39 + 3.030776123262295*tmp102*tmp16*tmp6*tmp95 - tmp352 - tmp374) - tmp152*(0.021561698496338266*tmp124*tmp131*tmp16*tmp6 + 0.021561698496338266*tmp131*tmp136*tmp16*tmp29 + 0.021561698496338266*tmp131*tmp142*tmp16*tmp39 - tmp354 - tmp376) - tmp181*(-0.97680333550942233*tmp163 - 0.97680333550942233*tmp167 - 0.97680333550942233*tmp173 - tmp356 - tmp378) - tmp210*(0.80668592322658683*tmp16*tmp182*tmp189*tmp6 + 0.80668592322658683*tmp16*tmp189*tmp194*tmp29 + 0.80668592322658683*tmp16*tmp189*tmp200*tmp39 - tmp358 - tmp380) - tmp235*(-1.3111976295201027*tmp219 - 1.3111976295201027*tmp222 - 1.3111976295201027*tmp227 - tmp360 - tmp382) - tmp264*(1.0259150868534226*tmp16*tmp236*tmp243*tmp6 + 1.0259150868534226*tmp16*tmp243*tmp248*tmp29 + 1.0259150868534226*tmp16*tmp243*tmp254*tmp39 - tmp362 - tmp384) - tmp289*(-0.010530396686001087*tmp273 - 0.010530396686001087*tmp276 - 0.010530396686001087*tmp281 - tmp364 - tmp386) - tmp318*(1.727318301866275*tmp16*tmp29*tmp297*tmp302 + 1.727318301866275*tmp16*tmp290*tmp297*tmp6 + 1.727318301866275*tmp16*tmp297*tmp308*tmp39 - tmp366 - tmp388) - tmp347*(0.48471985386318561*tmp16*tmp29*tmp326*tmp331 + 0.48471985386318561*tmp16*tmp319*tmp326*tmp6 + 0.48471985386318561*tmp16*tmp326*tmp337*tmp39 - tmp368 - tmp390) - tmp65*(-2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - tmp348 - tmp370 - 2.2903585922226259*tmp42) - tmp94*(0.11955133084429059*tmp16*tmp29*tmp73*tmp78 + 0.11955133084429059*tmp16*tmp39*tmp73*tmp84 + 0.11955133084429059*tmp16*tmp6*tmp66*tmp73 - tmp350 - tmp372);
      elMat(0,8) = -tmp123*(2.3862426959925824*tmp102*tmp107*tmp16*tmp33 + 2.3862426959925824*tmp102*tmp113*tmp16*tmp43 + 2.3862426959925824*tmp102*tmp16*tmp27*tmp95 - tmp353 - tmp396) - tmp152*(-0.023755899620671705*tmp135 - 0.023755899620671705*tmp139 - 0.023755899620671705*tmp145 - tmp355 - tmp398) - tmp181*(0.023113155683794462*tmp153*tmp16*tmp160*tmp27 + 0.023113155683794462*tmp16*tmp160*tmp165*tmp33 + 0.023113155683794462*tmp16*tmp160*tmp171*tmp43 - tmp357 - tmp400) - tmp210*(0.096099217150166227*tmp16*tmp182*tmp189*tmp27 + 0.096099217150166227*tmp16*tmp189*tmp194*tmp33 + 0.096099217150166227*tmp16*tmp189*tmp200*tmp43 - tmp359 - tmp402) - tmp235*(-2.1424647858349868*tmp220 - 2.1424647858349868*tmp223 - 2.1424647858349868*tmp228 - tmp361 - tmp404) - tmp264*(2.215926000198841*tmp16*tmp236*tmp243*tmp27 + 2.215926000198841*tmp16*tmp243*tmp248*tmp33 + 2.215926000198841*tmp16*tmp243*tmp254*tmp43 - tmp363 - tmp406) - tmp289*(-1.504517893413688*tmp274 - 1.504517893413688*tmp277 - 1.504517893413688*tmp282 - tmp365 - tmp408) - tmp318*(1.7050790859596399*tmp16*tmp27*tmp290*tmp297 + 1.7050790859596399*tmp16*tmp297*tmp302*tmp33 + 1.7050790859596399*tmp16*tmp297*tmp308*tmp43 - tmp367 - tmp410) - tmp347*(-2.339459955416912*tmp330 - 2.339459955416912*tmp334 - 2.339459955416912*tmp340 - tmp369 - tmp412) - tmp65*(0.020786379341558803*tmp16*tmp23*tmp27*tmp7 + 0.020786379341558803*tmp16*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp16*tmp23*tmp40*tmp43 - tmp349 - tmp392) - tmp94*(0.066329140985678992*tmp16*tmp27*tmp66*tmp73 + 0.066329140985678992*tmp16*tmp33*tmp73*tmp78 + 0.066329140985678992*tmp16*tmp43*tmp73*tmp84 - tmp351 - tmp394);
      elMat(0,9) = -tmp123*(2.923056903871144*tmp102*tmp107*tmp16*tmp37 + 2.923056903871144*tmp102*tmp113*tmp16*tmp45 + 2.923056903871144*tmp102*tmp16*tmp35*tmp95 - tmp375 - tmp397) - tmp152*(1.1748979585239958*tmp124*tmp131*tmp16*tmp35 + 1.1748979585239958*tmp131*tmp136*tmp16*tmp37 + 1.1748979585239958*tmp131*tmp142*tmp16*tmp45 - tmp377 - tmp399) - tmp181*(-1.292351334863308*tmp169 - 1.292351334863308*tmp170 - 1.292351334863308*tmp175 - tmp379 - tmp401) - tmp210*(0.35278616717586297*tmp16*tmp182*tmp189*tmp35 + 0.35278616717586297*tmp16*tmp189*tmp194*tmp37 + 0.35278616717586297*tmp16*tmp189*tmp200*tmp45 - tmp381 - tmp403) - tmp235*(-0.50808146532588383*tmp224 - 0.50808146532588383*tmp225 - 0.50808146532588383*tmp229 - tmp383 - tmp405) - tmp264*(1.7657230752364721*tmp16*tmp236*tmp243*tmp35 + 1.7657230752364721*tmp16*tmp243*tmp248*tmp37 + 1.7657230752364721*tmp16*tmp243*tmp254*tmp45 - tmp385 - tmp407) - tmp289*(-1.5757674358533722*tmp278 - 1.5757674358533722*tmp279 - 1.5757674358533722*tmp283 - tmp387 - tmp409) - tmp318*(0.24137878858456796*tmp16*tmp290*tmp297*tmp35 + 0.24137878858456796*tmp16*tmp297*tmp302*tmp37 + 0.24137878858456796*tmp16*tmp297*tmp308*tmp45 - tmp389 - tmp411) - tmp347*(0.35656239338404694*tmp16*tmp319*tmp326*tmp35 + 0.35656239338404694*tmp16*tmp326*tmp331*tmp37 + 0.35656239338404694*tmp16*tmp326*tmp337*tmp45 - tmp391 - tmp413) - tmp65*(0.058384491239200198*tmp16*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp16*tmp23*tmp35*tmp7 + 0.058384491239200198*tmp16*tmp23*tmp40*tmp45 - tmp371 - tmp393) - tmp94*(-tmp373 - tmp395 - 2.6180852134415042*tmp82 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp88);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(3,3) = 0;
      elMat(3,4) = 0;
      elMat(3,5) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(4,3) = 0;
      elMat(4,4) = 0;
      elMat(4,5) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
      elMat(5,3) = 0;
      elMat(5,4) = 0;
      elMat(5,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_1_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = -J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp17*J_B_1(2, 2) + tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 2) - tmp21*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp16*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp11*tmp4 - tmp14;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp30 = J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp8 - tmp15;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp10 + tmp13;
      const real_t tmp40 = -J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = 0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46;
      const real_t tmp48 = tmp17 - tmp20;
      const real_t tmp49 = tmp24*tmp48;
      const real_t tmp50 = tmp49*tmp6;
      const real_t tmp51 = tmp27*tmp49;
      const real_t tmp52 = -tmp19 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp53 = tmp24*tmp52;
      const real_t tmp54 = tmp29*tmp53;
      const real_t tmp55 = tmp33*tmp53;
      const real_t tmp56 = tmp35*tmp49;
      const real_t tmp57 = tmp37*tmp53;
      const real_t tmp58 = tmp18 - tmp21;
      const real_t tmp59 = tmp24*tmp58;
      const real_t tmp60 = tmp39*tmp59;
      const real_t tmp61 = tmp43*tmp59;
      const real_t tmp62 = tmp45*tmp59;
      const real_t tmp63 = coords[0][0]*coords[1][1];
      const real_t tmp64 = coords[0][0]*coords[1][2];
      const real_t tmp65 = coords[2][1]*coords[3][2];
      const real_t tmp66 = coords[0][1]*coords[1][0];
      const real_t tmp67 = coords[0][1]*coords[1][2];
      const real_t tmp68 = coords[2][2]*coords[3][0];
      const real_t tmp69 = coords[0][2]*coords[1][0];
      const real_t tmp70 = coords[0][2]*coords[1][1];
      const real_t tmp71 = coords[2][0]*coords[3][1];
      const real_t tmp72 = coords[2][2]*coords[3][1];
      const real_t tmp73 = coords[2][0]*coords[3][2];
      const real_t tmp74 = coords[2][1]*coords[3][0];
      const real_t tmp75 = std::abs(coords[0][0]*tmp65 - coords[0][0]*tmp72 + coords[0][1]*tmp68 - coords[0][1]*tmp73 + coords[0][2]*tmp71 - coords[0][2]*tmp74 - coords[1][0]*tmp65 + coords[1][0]*tmp72 - coords[1][1]*tmp68 + coords[1][1]*tmp73 - coords[1][2]*tmp71 + coords[1][2]*tmp74 + coords[2][0]*tmp67 - coords[2][0]*tmp70 - coords[2][1]*tmp64 + coords[2][1]*tmp69 + coords[2][2]*tmp63 - coords[2][2]*tmp66 - coords[3][0]*tmp67 + coords[3][0]*tmp70 + coords[3][1]*tmp64 - coords[3][1]*tmp69 - coords[3][2]*tmp63 + coords[3][2]*tmp66);
      const real_t tmp76 = tmp75*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp77 = tmp76*(0.55279693041046674*tmp50 + 0.55279693041046674*tmp51 + 0.55279693041046674*tmp54 + 0.55279693041046674*tmp55 + 0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62);
      const real_t tmp78 = 0.011829781572832234*tmp77;
      const real_t tmp79 = -J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp80 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp81 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp82 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp83 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp84 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp85 = tmp80*J_B_10(2, 2) + tmp81*J_B_10(2, 0) - tmp82*J_B_10(2, 1) - tmp83*J_B_10(2, 2) - tmp84*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp86 = 1.0 / (tmp85);
      const real_t tmp87 = tmp16*tmp86;
      const real_t tmp88 = tmp79*tmp87;
      const real_t tmp89 = tmp6*tmp88;
      const real_t tmp90 = tmp27*tmp88;
      const real_t tmp91 = J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp92 = tmp87*tmp91;
      const real_t tmp93 = tmp29*tmp92;
      const real_t tmp94 = tmp33*tmp92;
      const real_t tmp95 = tmp35*tmp88;
      const real_t tmp96 = tmp37*tmp92;
      const real_t tmp97 = -J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp98 = tmp87*tmp97;
      const real_t tmp99 = tmp39*tmp98;
      const real_t tmp100 = tmp43*tmp98;
      const real_t tmp101 = tmp45*tmp98;
      const real_t tmp102 = 0.60805118540288361*tmp100 + 0.60805118540288361*tmp101 + 0.60805118540288361*tmp89 + 0.60805118540288361*tmp90 + 0.60805118540288361*tmp93 + 0.60805118540288361*tmp94 + 0.60805118540288361*tmp95 + 0.60805118540288361*tmp96 + 0.60805118540288361*tmp99;
      const real_t tmp103 = tmp80 - tmp83;
      const real_t tmp104 = tmp103*tmp87;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = -tmp82 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp108 = tmp107*tmp87;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = tmp81 - tmp84;
      const real_t tmp114 = tmp113*tmp87;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = tmp75*std::abs(tmp85)*ScalarCoeff0_10;
      const real_t tmp119 = tmp118*(0.60805118540288361*tmp105 + 0.60805118540288361*tmp106 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp110 + 0.60805118540288361*tmp111 + 0.60805118540288361*tmp112 + 0.60805118540288361*tmp115 + 0.60805118540288361*tmp116 + 0.60805118540288361*tmp117);
      const real_t tmp120 = 0.0061414854617707626*tmp119;
      const real_t tmp121 = -J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp122 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp123 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp124 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp125 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp126 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp127 = tmp122*J_B_11(2, 2) + tmp123*J_B_11(2, 0) - tmp124*J_B_11(2, 1) - tmp125*J_B_11(2, 2) - tmp126*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp128 = 1.0 / (tmp127);
      const real_t tmp129 = tmp128*tmp16;
      const real_t tmp130 = tmp121*tmp129;
      const real_t tmp131 = tmp130*tmp6;
      const real_t tmp132 = tmp130*tmp27;
      const real_t tmp133 = J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp134 = tmp129*tmp133;
      const real_t tmp135 = tmp134*tmp29;
      const real_t tmp136 = tmp134*tmp33;
      const real_t tmp137 = tmp130*tmp35;
      const real_t tmp138 = tmp134*tmp37;
      const real_t tmp139 = -J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp140 = tmp129*tmp139;
      const real_t tmp141 = tmp140*tmp39;
      const real_t tmp142 = tmp140*tmp43;
      const real_t tmp143 = tmp140*tmp45;
      const real_t tmp144 = -2.0850189307815055*tmp131 - 2.0850189307815055*tmp132 - 2.0850189307815055*tmp135 - 2.0850189307815055*tmp136 - 2.0850189307815055*tmp137 - 2.0850189307815055*tmp138 - 2.0850189307815055*tmp141 - 2.0850189307815055*tmp142 - 2.0850189307815055*tmp143;
      const real_t tmp145 = tmp122 - tmp125;
      const real_t tmp146 = tmp129*tmp145;
      const real_t tmp147 = tmp146*tmp6;
      const real_t tmp148 = tmp146*tmp27;
      const real_t tmp149 = -tmp124 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp150 = tmp129*tmp149;
      const real_t tmp151 = tmp150*tmp29;
      const real_t tmp152 = tmp150*tmp33;
      const real_t tmp153 = tmp146*tmp35;
      const real_t tmp154 = tmp150*tmp37;
      const real_t tmp155 = tmp123 - tmp126;
      const real_t tmp156 = tmp129*tmp155;
      const real_t tmp157 = tmp156*tmp39;
      const real_t tmp158 = tmp156*tmp43;
      const real_t tmp159 = tmp156*tmp45;
      const real_t tmp160 = tmp75*std::abs(tmp127)*ScalarCoeff0_11;
      const real_t tmp161 = tmp160*(-2.0850189307815055*tmp147 - 2.0850189307815055*tmp148 - 2.0850189307815055*tmp151 - 2.0850189307815055*tmp152 - 2.0850189307815055*tmp153 - 2.0850189307815055*tmp154 - 2.0850189307815055*tmp157 - 2.0850189307815055*tmp158 - 2.0850189307815055*tmp159);
      const real_t tmp162 = 0.0043612323249822204*tmp161;
      const real_t tmp163 = -J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp164 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp165 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp166 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp167 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp168 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp169 = tmp164*J_B_2(2, 2) + tmp165*J_B_2(2, 0) - tmp166*J_B_2(2, 1) - tmp167*J_B_2(2, 2) - tmp168*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp170 = 1.0 / (tmp169);
      const real_t tmp171 = tmp16*tmp170;
      const real_t tmp172 = tmp163*tmp171;
      const real_t tmp173 = tmp172*tmp6;
      const real_t tmp174 = tmp172*tmp27;
      const real_t tmp175 = J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp176 = tmp171*tmp175;
      const real_t tmp177 = tmp176*tmp29;
      const real_t tmp178 = tmp176*tmp33;
      const real_t tmp179 = tmp172*tmp35;
      const real_t tmp180 = tmp176*tmp37;
      const real_t tmp181 = -J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp182 = tmp171*tmp181;
      const real_t tmp183 = tmp182*tmp39;
      const real_t tmp184 = tmp182*tmp43;
      const real_t tmp185 = tmp182*tmp45;
      const real_t tmp186 = -0.29317593934991559*tmp173 - 0.29317593934991559*tmp174 - 0.29317593934991559*tmp177 - 0.29317593934991559*tmp178 - 0.29317593934991559*tmp179 - 0.29317593934991559*tmp180 - 0.29317593934991559*tmp183 - 0.29317593934991559*tmp184 - 0.29317593934991559*tmp185;
      const real_t tmp187 = tmp164 - tmp167;
      const real_t tmp188 = tmp171*tmp187;
      const real_t tmp189 = tmp188*tmp6;
      const real_t tmp190 = tmp188*tmp27;
      const real_t tmp191 = -tmp166 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp192 = tmp171*tmp191;
      const real_t tmp193 = tmp192*tmp29;
      const real_t tmp194 = tmp192*tmp33;
      const real_t tmp195 = tmp188*tmp35;
      const real_t tmp196 = tmp192*tmp37;
      const real_t tmp197 = tmp165 - tmp168;
      const real_t tmp198 = tmp171*tmp197;
      const real_t tmp199 = tmp198*tmp39;
      const real_t tmp200 = tmp198*tmp43;
      const real_t tmp201 = tmp198*tmp45;
      const real_t tmp202 = tmp75*std::abs(tmp169)*ScalarCoeff0_2;
      const real_t tmp203 = tmp202*(-0.29317593934991559*tmp189 - 0.29317593934991559*tmp190 - 0.29317593934991559*tmp193 - 0.29317593934991559*tmp194 - 0.29317593934991559*tmp195 - 0.29317593934991559*tmp196 - 0.29317593934991559*tmp199 - 0.29317593934991559*tmp200 - 0.29317593934991559*tmp201);
      const real_t tmp204 = 0.012248248047610821*tmp203;
      const real_t tmp205 = -J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp206 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp207 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp208 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp209 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp210 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp211 = tmp206*J_B_3(2, 2) + tmp207*J_B_3(2, 0) - tmp208*J_B_3(2, 1) - tmp209*J_B_3(2, 2) - tmp210*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp212 = 1.0 / (tmp211);
      const real_t tmp213 = tmp16*tmp212;
      const real_t tmp214 = tmp205*tmp213;
      const real_t tmp215 = tmp214*tmp6;
      const real_t tmp216 = tmp214*tmp27;
      const real_t tmp217 = J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp218 = tmp213*tmp217;
      const real_t tmp219 = tmp218*tmp29;
      const real_t tmp220 = tmp218*tmp33;
      const real_t tmp221 = tmp214*tmp35;
      const real_t tmp222 = tmp218*tmp37;
      const real_t tmp223 = -J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp224 = tmp213*tmp223;
      const real_t tmp225 = tmp224*tmp39;
      const real_t tmp226 = tmp224*tmp43;
      const real_t tmp227 = tmp224*tmp45;
      const real_t tmp228 = 0.56151037867223397*tmp215 + 0.56151037867223397*tmp216 + 0.56151037867223397*tmp219 + 0.56151037867223397*tmp220 + 0.56151037867223397*tmp221 + 0.56151037867223397*tmp222 + 0.56151037867223397*tmp225 + 0.56151037867223397*tmp226 + 0.56151037867223397*tmp227;
      const real_t tmp229 = tmp206 - tmp209;
      const real_t tmp230 = tmp213*tmp229;
      const real_t tmp231 = tmp230*tmp6;
      const real_t tmp232 = tmp230*tmp27;
      const real_t tmp233 = -tmp208 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp234 = tmp213*tmp233;
      const real_t tmp235 = tmp234*tmp29;
      const real_t tmp236 = tmp234*tmp33;
      const real_t tmp237 = tmp230*tmp35;
      const real_t tmp238 = tmp234*tmp37;
      const real_t tmp239 = tmp207 - tmp210;
      const real_t tmp240 = tmp213*tmp239;
      const real_t tmp241 = tmp240*tmp39;
      const real_t tmp242 = tmp240*tmp43;
      const real_t tmp243 = tmp240*tmp45;
      const real_t tmp244 = tmp75*std::abs(tmp211)*ScalarCoeff0_3;
      const real_t tmp245 = tmp244*(0.56151037867223397*tmp231 + 0.56151037867223397*tmp232 + 0.56151037867223397*tmp235 + 0.56151037867223397*tmp236 + 0.56151037867223397*tmp237 + 0.56151037867223397*tmp238 + 0.56151037867223397*tmp241 + 0.56151037867223397*tmp242 + 0.56151037867223397*tmp243);
      const real_t tmp246 = 0.017219568446249611*tmp245;
      const real_t tmp247 = -J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp248 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp249 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp250 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp251 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp252 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp253 = tmp248*J_B_4(2, 2) + tmp249*J_B_4(2, 0) - tmp250*J_B_4(2, 1) - tmp251*J_B_4(2, 2) - tmp252*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp254 = 1.0 / (tmp253);
      const real_t tmp255 = tmp16*tmp254;
      const real_t tmp256 = tmp247*tmp255;
      const real_t tmp257 = tmp256*tmp6;
      const real_t tmp258 = tmp256*tmp27;
      const real_t tmp259 = J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp260 = tmp255*tmp259;
      const real_t tmp261 = tmp260*tmp29;
      const real_t tmp262 = tmp260*tmp33;
      const real_t tmp263 = tmp256*tmp35;
      const real_t tmp264 = tmp260*tmp37;
      const real_t tmp265 = -J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp266 = tmp255*tmp265;
      const real_t tmp267 = tmp266*tmp39;
      const real_t tmp268 = tmp266*tmp43;
      const real_t tmp269 = tmp266*tmp45;
      const real_t tmp270 = -0.31389282688815401*tmp257 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp262 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269;
      const real_t tmp271 = tmp248 - tmp251;
      const real_t tmp272 = tmp255*tmp271;
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = -tmp250 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp276 = tmp255*tmp275;
      const real_t tmp277 = tmp276*tmp29;
      const real_t tmp278 = tmp276*tmp33;
      const real_t tmp279 = tmp272*tmp35;
      const real_t tmp280 = tmp276*tmp37;
      const real_t tmp281 = tmp249 - tmp252;
      const real_t tmp282 = tmp255*tmp281;
      const real_t tmp283 = tmp282*tmp39;
      const real_t tmp284 = tmp282*tmp43;
      const real_t tmp285 = tmp282*tmp45;
      const real_t tmp286 = tmp75*std::abs(tmp253)*ScalarCoeff0_4;
      const real_t tmp287 = tmp286*(-0.31389282688815401*tmp273 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp277 - 0.31389282688815401*tmp278 - 0.31389282688815401*tmp279 - 0.31389282688815401*tmp280 - 0.31389282688815401*tmp283 - 0.31389282688815401*tmp284 - 0.31389282688815401*tmp285);
      const real_t tmp288 = 0.021490090227737114*tmp287;
      const real_t tmp289 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp290 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp291 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp292 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp293 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp294 = tmp289*J_B_5(2, 2) + tmp290*J_B_5(2, 0) - tmp291*J_B_5(2, 1) - tmp292*J_B_5(2, 2) - tmp293*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp295 = tmp16/tmp294;
      const real_t tmp296 = tmp295*(-J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp297 = tmp296*tmp6;
      const real_t tmp298 = tmp27*tmp296;
      const real_t tmp299 = tmp295*(J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0));
      const real_t tmp300 = tmp29*tmp299;
      const real_t tmp301 = tmp299*tmp33;
      const real_t tmp302 = tmp296*tmp35;
      const real_t tmp303 = tmp299*tmp37;
      const real_t tmp304 = tmp295*(-J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp305 = tmp304*tmp39;
      const real_t tmp306 = tmp304*tmp43;
      const real_t tmp307 = tmp304*tmp45;
      const real_t tmp308 = 0.99043597017024343*tmp297 + 0.99043597017024343*tmp298 + 0.99043597017024343*tmp300 + 0.99043597017024343*tmp301 + 0.99043597017024343*tmp302 + 0.99043597017024343*tmp303 + 0.99043597017024343*tmp305 + 0.99043597017024343*tmp306 + 0.99043597017024343*tmp307;
      const real_t tmp309 = tmp295*(tmp289 - tmp292);
      const real_t tmp310 = tmp309*tmp6;
      const real_t tmp311 = tmp27*tmp309;
      const real_t tmp312 = tmp295*(-tmp291 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp313 = tmp29*tmp312;
      const real_t tmp314 = tmp312*tmp33;
      const real_t tmp315 = tmp309*tmp35;
      const real_t tmp316 = tmp312*tmp37;
      const real_t tmp317 = tmp295*(tmp290 - tmp293);
      const real_t tmp318 = tmp317*tmp39;
      const real_t tmp319 = tmp317*tmp43;
      const real_t tmp320 = tmp317*tmp45;
      const real_t tmp321 = tmp75*std::abs(tmp294)*ScalarCoeff0_5;
      const real_t tmp322 = tmp321*(0.99043597017024343*tmp310 + 0.99043597017024343*tmp311 + 0.99043597017024343*tmp313 + 0.99043597017024343*tmp314 + 0.99043597017024343*tmp315 + 0.99043597017024343*tmp316 + 0.99043597017024343*tmp318 + 0.99043597017024343*tmp319 + 0.99043597017024343*tmp320);
      const real_t tmp323 = 0.0084625239161731543*tmp322;
      const real_t tmp324 = -J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp325 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp326 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp327 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp328 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp329 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp330 = tmp325*J_B_6(2, 2) + tmp326*J_B_6(2, 0) - tmp327*J_B_6(2, 1) - tmp328*J_B_6(2, 2) - tmp329*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp331 = 1.0 / (tmp330);
      const real_t tmp332 = tmp16*tmp331;
      const real_t tmp333 = tmp324*tmp332;
      const real_t tmp334 = tmp333*tmp6;
      const real_t tmp335 = tmp27*tmp333;
      const real_t tmp336 = J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp337 = tmp332*tmp336;
      const real_t tmp338 = tmp29*tmp337;
      const real_t tmp339 = tmp33*tmp337;
      const real_t tmp340 = tmp333*tmp35;
      const real_t tmp341 = tmp337*tmp37;
      const real_t tmp342 = -J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp343 = tmp332*tmp342;
      const real_t tmp344 = tmp343*tmp39;
      const real_t tmp345 = tmp343*tmp43;
      const real_t tmp346 = tmp343*tmp45;
      const real_t tmp347 = -1.2518910405721839*tmp334 - 1.2518910405721839*tmp335 - 1.2518910405721839*tmp338 - 1.2518910405721839*tmp339 - 1.2518910405721839*tmp340 - 1.2518910405721839*tmp341 - 1.2518910405721839*tmp344 - 1.2518910405721839*tmp345 - 1.2518910405721839*tmp346;
      const real_t tmp348 = tmp325 - tmp328;
      const real_t tmp349 = tmp332*tmp348;
      const real_t tmp350 = tmp349*tmp6;
      const real_t tmp351 = tmp27*tmp349;
      const real_t tmp352 = -tmp327 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp353 = tmp332*tmp352;
      const real_t tmp354 = tmp29*tmp353;
      const real_t tmp355 = tmp33*tmp353;
      const real_t tmp356 = tmp349*tmp35;
      const real_t tmp357 = tmp353*tmp37;
      const real_t tmp358 = tmp326 - tmp329;
      const real_t tmp359 = tmp332*tmp358;
      const real_t tmp360 = tmp359*tmp39;
      const real_t tmp361 = tmp359*tmp43;
      const real_t tmp362 = tmp359*tmp45;
      const real_t tmp363 = tmp75*std::abs(tmp330)*ScalarCoeff0_6;
      const real_t tmp364 = tmp363*(-1.2518910405721839*tmp350 - 1.2518910405721839*tmp351 - 1.2518910405721839*tmp354 - 1.2518910405721839*tmp355 - 1.2518910405721839*tmp356 - 1.2518910405721839*tmp357 - 1.2518910405721839*tmp360 - 1.2518910405721839*tmp361 - 1.2518910405721839*tmp362);
      const real_t tmp365 = 0.0088251866742250357*tmp364;
      const real_t tmp366 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp367 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp368 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp369 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp370 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp371 = tmp366*J_B_7(2, 2) + tmp367*J_B_7(2, 0) - tmp368*J_B_7(2, 1) - tmp369*J_B_7(2, 2) - tmp370*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp372 = tmp16/tmp371;
      const real_t tmp373 = tmp372*(-J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp374 = tmp373*tmp6;
      const real_t tmp375 = tmp27*tmp373;
      const real_t tmp376 = tmp372*(J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0));
      const real_t tmp377 = tmp29*tmp376;
      const real_t tmp378 = tmp33*tmp376;
      const real_t tmp379 = tmp35*tmp373;
      const real_t tmp380 = tmp37*tmp376;
      const real_t tmp381 = tmp372*(-J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp382 = tmp381*tmp39;
      const real_t tmp383 = tmp381*tmp43;
      const real_t tmp384 = tmp381*tmp45;
      const real_t tmp385 = 0.77270393148826533*tmp374 + 0.77270393148826533*tmp375 + 0.77270393148826533*tmp377 + 0.77270393148826533*tmp378 + 0.77270393148826533*tmp379 + 0.77270393148826533*tmp380 + 0.77270393148826533*tmp382 + 0.77270393148826533*tmp383 + 0.77270393148826533*tmp384;
      const real_t tmp386 = tmp372*(tmp366 - tmp369);
      const real_t tmp387 = tmp386*tmp6;
      const real_t tmp388 = tmp27*tmp386;
      const real_t tmp389 = tmp372*(-tmp368 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp390 = tmp29*tmp389;
      const real_t tmp391 = tmp33*tmp389;
      const real_t tmp392 = tmp35*tmp386;
      const real_t tmp393 = tmp37*tmp389;
      const real_t tmp394 = tmp372*(tmp367 - tmp370);
      const real_t tmp395 = tmp39*tmp394;
      const real_t tmp396 = tmp394*tmp43;
      const real_t tmp397 = tmp394*tmp45;
      const real_t tmp398 = tmp75*std::abs(tmp371)*ScalarCoeff0_7;
      const real_t tmp399 = tmp398*(0.77270393148826533*tmp387 + 0.77270393148826533*tmp388 + 0.77270393148826533*tmp390 + 0.77270393148826533*tmp391 + 0.77270393148826533*tmp392 + 0.77270393148826533*tmp393 + 0.77270393148826533*tmp395 + 0.77270393148826533*tmp396 + 0.77270393148826533*tmp397);
      const real_t tmp400 = 0.0077188851041817101*tmp399;
      const real_t tmp401 = -J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp402 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp403 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp404 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp405 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp406 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp407 = tmp402*J_B_8(2, 2) + tmp403*J_B_8(2, 0) - tmp404*J_B_8(2, 1) - tmp405*J_B_8(2, 2) - tmp406*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp408 = 1.0 / (tmp407);
      const real_t tmp409 = tmp16*tmp408;
      const real_t tmp410 = tmp401*tmp409;
      const real_t tmp411 = tmp410*tmp6;
      const real_t tmp412 = tmp27*tmp410;
      const real_t tmp413 = J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp414 = tmp409*tmp413;
      const real_t tmp415 = tmp29*tmp414;
      const real_t tmp416 = tmp33*tmp414;
      const real_t tmp417 = tmp35*tmp410;
      const real_t tmp418 = tmp37*tmp414;
      const real_t tmp419 = -J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp420 = tmp409*tmp419;
      const real_t tmp421 = tmp39*tmp420;
      const real_t tmp422 = tmp420*tmp43;
      const real_t tmp423 = tmp420*tmp45;
      const real_t tmp424 = -0.9184440441026207*tmp411 - 0.9184440441026207*tmp412 - 0.9184440441026207*tmp415 - 0.9184440441026207*tmp416 - 0.9184440441026207*tmp417 - 0.9184440441026207*tmp418 - 0.9184440441026207*tmp421 - 0.9184440441026207*tmp422 - 0.9184440441026207*tmp423;
      const real_t tmp425 = tmp402 - tmp405;
      const real_t tmp426 = tmp409*tmp425;
      const real_t tmp427 = tmp426*tmp6;
      const real_t tmp428 = tmp27*tmp426;
      const real_t tmp429 = -tmp404 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp430 = tmp409*tmp429;
      const real_t tmp431 = tmp29*tmp430;
      const real_t tmp432 = tmp33*tmp430;
      const real_t tmp433 = tmp35*tmp426;
      const real_t tmp434 = tmp37*tmp430;
      const real_t tmp435 = tmp403 - tmp406;
      const real_t tmp436 = tmp409*tmp435;
      const real_t tmp437 = tmp39*tmp436;
      const real_t tmp438 = tmp43*tmp436;
      const real_t tmp439 = tmp436*tmp45;
      const real_t tmp440 = tmp75*std::abs(tmp407)*ScalarCoeff0_8;
      const real_t tmp441 = tmp440*(-0.9184440441026207*tmp427 - 0.9184440441026207*tmp428 - 0.9184440441026207*tmp431 - 0.9184440441026207*tmp432 - 0.9184440441026207*tmp433 - 0.9184440441026207*tmp434 - 0.9184440441026207*tmp437 - 0.9184440441026207*tmp438 - 0.9184440441026207*tmp439);
      const real_t tmp442 = 0.006659242794062166*tmp441;
      const real_t tmp443 = -J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp444 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp445 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp446 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp447 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp448 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp449 = tmp444*J_B_9(2, 2) + tmp445*J_B_9(2, 0) - tmp446*J_B_9(2, 1) - tmp447*J_B_9(2, 2) - tmp448*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp450 = 1.0 / (tmp449);
      const real_t tmp451 = tmp16*tmp450;
      const real_t tmp452 = tmp443*tmp451;
      const real_t tmp453 = tmp452*tmp6;
      const real_t tmp454 = tmp27*tmp452;
      const real_t tmp455 = J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp456 = tmp451*tmp455;
      const real_t tmp457 = tmp29*tmp456;
      const real_t tmp458 = tmp33*tmp456;
      const real_t tmp459 = tmp35*tmp452;
      const real_t tmp460 = tmp37*tmp456;
      const real_t tmp461 = -J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp462 = tmp451*tmp461;
      const real_t tmp463 = tmp39*tmp462;
      const real_t tmp464 = tmp43*tmp462;
      const real_t tmp465 = tmp45*tmp462;
      const real_t tmp466 = 0.37454442704241986*tmp453 + 0.37454442704241986*tmp454 + 0.37454442704241986*tmp457 + 0.37454442704241986*tmp458 + 0.37454442704241986*tmp459 + 0.37454442704241986*tmp460 + 0.37454442704241986*tmp463 + 0.37454442704241986*tmp464 + 0.37454442704241986*tmp465;
      const real_t tmp467 = tmp444 - tmp447;
      const real_t tmp468 = tmp451*tmp467;
      const real_t tmp469 = tmp468*tmp6;
      const real_t tmp470 = tmp27*tmp468;
      const real_t tmp471 = -tmp446 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp472 = tmp451*tmp471;
      const real_t tmp473 = tmp29*tmp472;
      const real_t tmp474 = tmp33*tmp472;
      const real_t tmp475 = tmp35*tmp468;
      const real_t tmp476 = tmp37*tmp472;
      const real_t tmp477 = tmp445 - tmp448;
      const real_t tmp478 = tmp451*tmp477;
      const real_t tmp479 = tmp39*tmp478;
      const real_t tmp480 = tmp43*tmp478;
      const real_t tmp481 = tmp45*tmp478;
      const real_t tmp482 = tmp75*std::abs(tmp449)*ScalarCoeff0_9;
      const real_t tmp483 = tmp482*(0.37454442704241986*tmp469 + 0.37454442704241986*tmp470 + 0.37454442704241986*tmp473 + 0.37454442704241986*tmp474 + 0.37454442704241986*tmp475 + 0.37454442704241986*tmp476 + 0.37454442704241986*tmp479 + 0.37454442704241986*tmp480 + 0.37454442704241986*tmp481);
      const real_t tmp484 = 0.0061548665412862651*tmp483;
      const real_t tmp485 = tmp36 + tmp38 + tmp46;
      const real_t tmp486 = 0.0072301427194886381*tmp485;
      const real_t tmp487 = tmp101 + tmp95 + tmp96;
      const real_t tmp488 = 0.012344594760863713*tmp487;
      const real_t tmp489 = tmp137 + tmp138 + tmp143;
      const real_t tmp490 = 0.0036548782978011126*tmp489;
      const real_t tmp491 = tmp179 + tmp180 + tmp185;
      const real_t tmp492 = 0.010799549999884401*tmp491;
      const real_t tmp493 = tmp221 + tmp222 + tmp227;
      const real_t tmp494 = 0.012584765868454714*tmp493;
      const real_t tmp495 = tmp263 + tmp264 + tmp269;
      const real_t tmp496 = 0.00083582139204094858*tmp495;
      const real_t tmp497 = tmp302 + tmp303 + tmp307;
      const real_t tmp498 = 0.0040819365333192512*tmp497;
      const real_t tmp499 = tmp340 + tmp341 + tmp346;
      const real_t tmp500 = 0.0045346636251092122*tmp499;
      const real_t tmp501 = tmp379 + tmp380 + tmp384;
      const real_t tmp502 = 0.0061987549215557864*tmp501;
      const real_t tmp503 = tmp417 + tmp418 + tmp423;
      const real_t tmp504 = 0.0045087419239184514*tmp503;
      const real_t tmp505 = tmp459 + tmp460 + tmp465;
      const real_t tmp506 = 0.0044998649071490461*tmp505;
      const real_t tmp507 = tmp28 + tmp34 + tmp44;
      const real_t tmp508 = 0.0067853652681886352*tmp507;
      const real_t tmp509 = tmp100 + tmp90 + tmp94;
      const real_t tmp510 = 0.0041416969702195786*tmp509;
      const real_t tmp511 = tmp132 + tmp136 + tmp142;
      const real_t tmp512 = 0.0013137068218914037*tmp511;
      const real_t tmp513 = tmp174 + tmp178 + tmp184;
      const real_t tmp514 = 0.0038818597778972029*tmp513;
      const real_t tmp515 = tmp216 + tmp220 + tmp226;
      const real_t tmp516 = 0.010066964965131993*tmp515;
      const real_t tmp517 = tmp258 + tmp262 + tmp268;
      const real_t tmp518 = 0.0046804043242939224*tmp517;
      const real_t tmp519 = tmp298 + tmp301 + tmp306;
      const real_t tmp520 = 0.0097490714046835261*tmp519;
      const real_t tmp521 = tmp335 + tmp339 + tmp345;
      const real_t tmp522 = 0.0085077884791842431*tmp521;
      const real_t tmp523 = tmp375 + tmp378 + tmp383;
      const real_t tmp524 = 0.0056487878897383461*tmp523;
      const real_t tmp525 = tmp412 + tmp416 + tmp422;
      const real_t tmp526 = 0.005238393734043144*tmp525;
      const real_t tmp527 = tmp454 + tmp458 + tmp464;
      const real_t tmp528 = 0.012093792842045984*tmp527;
      const real_t tmp529 = tmp26 + tmp32 + tmp42;
      const real_t tmp530 = 0.020554974928565235*tmp529;
      const real_t tmp531 = tmp89 + tmp93 + tmp99;
      const real_t tmp532 = 0.0044685602754798454*tmp531;
      const real_t tmp533 = tmp131 + tmp135 + tmp141;
      const real_t tmp534 = 0.0041246668394316508*tmp533;
      const real_t tmp535 = tmp173 + tmp177 + tmp183;
      const real_t tmp536 = 0.0033267985952381263*tmp535;
      const real_t tmp537 = tmp215 + tmp219 + tmp225;
      const real_t tmp538 = 0.0071511654955033511*tmp537;
      const real_t tmp539 = tmp257 + tmp261 + tmp267;
      const real_t tmp540 = 0.010590168103918869*tmp539;
      const real_t tmp541 = tmp297 + tmp300 + tmp305;
      const real_t tmp542 = 0.0027144532136395704*tmp541;
      const real_t tmp543 = tmp334 + tmp338 + tmp344;
      const real_t tmp544 = 0.0019942799754541058*tmp543;
      const real_t tmp545 = tmp374 + tmp377 + tmp382;
      const real_t tmp546 = 0.005883129944586717*tmp545;
      const real_t tmp547 = tmp411 + tmp415 + tmp421;
      const real_t tmp548 = 0.0053864900723149976*tmp547;
      const real_t tmp549 = tmp453 + tmp457 + tmp463;
      const real_t tmp550 = 0.0052886569726683132*tmp549;
      const real_t tmp551 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp552 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp553 = tmp551 + tmp552;
      const real_t tmp554 = 0.2723974837528258*tmp100 + 0.2723974837528258*tmp90 + 0.2723974837528258*tmp94;
      const real_t tmp555 = 0.3256196736114374*tmp89 + 0.3256196736114374*tmp93 + 0.3256196736114374*tmp99;
      const real_t tmp556 = tmp554 + tmp555;
      const real_t tmp557 = 0.054242807519210512*tmp132 + 0.054242807519210512*tmp136 + 0.054242807519210512*tmp142;
      const real_t tmp558 = 0.69877623478892303*tmp131 + 0.69877623478892303*tmp135 + 0.69877623478892303*tmp141;
      const real_t tmp559 = tmp557 + tmp558;
      const real_t tmp560 = 1.2716142408535775*tmp174 + 1.2716142408535775*tmp178 + 1.2716142408535775*tmp184;
      const real_t tmp561 = 1.3169318389705873*tmp173 + 1.3169318389705873*tmp177 + 1.3169318389705873*tmp183;
      const real_t tmp562 = tmp560 + tmp561;
      const real_t tmp563 = 1.4152929568371884*tmp216 + 1.4152929568371884*tmp220 + 1.4152929568371884*tmp226;
      const real_t tmp564 = 0.41537646564397157*tmp215 + 0.41537646564397157*tmp219 + 0.41537646564397157*tmp225;
      const real_t tmp565 = tmp563 + tmp564;
      const real_t tmp566 = 0.50720690366156718*tmp258 + 0.50720690366156718*tmp262 + 0.50720690366156718*tmp268;
      const real_t tmp567 = 1.2177936097379878*tmp257 + 1.2177936097379878*tmp261 + 1.2177936097379878*tmp267;
      const real_t tmp568 = tmp566 + tmp567;
      const real_t tmp569 = 1.3207616593498592*tmp298 + 1.3207616593498592*tmp301 + 1.3207616593498592*tmp306;
      const real_t tmp570 = 2.1520288156647434*tmp297 + 2.1520288156647434*tmp300 + 2.1520288156647434*tmp305;
      const real_t tmp571 = tmp569 + tmp570;
      const real_t tmp572 = 1.2259759537187613*tmp335 + 1.2259759537187613*tmp339 + 1.2259759537187613*tmp345;
      const real_t tmp573 = 0.035965040373342916*tmp334 + 0.035965040373342916*tmp338 + 0.035965040373342916*tmp344;
      const real_t tmp574 = tmp572 + tmp573;
      const real_t tmp575 = 0.23782646519773576*tmp375 + 0.23782646519773576*tmp378 + 0.23782646519773576*tmp383;
      const real_t tmp576 = 1.7318139619254227*tmp374 + 1.7318139619254227*tmp377 + 1.7318139619254227*tmp382;
      const real_t tmp577 = tmp575 + tmp576;
      const real_t tmp578 = 0.19112574223634571*tmp412 + 0.19112574223634571*tmp416 + 0.19112574223634571*tmp422;
      const real_t tmp579 = 0.21336495814298084*tmp411 + 0.21336495814298084*tmp415 + 0.21336495814298084*tmp421;
      const real_t tmp580 = tmp578 + tmp579;
      const real_t tmp581 = 0.14073571909439453*tmp454 + 0.14073571909439453*tmp458 + 0.14073571909439453*tmp464;
      const real_t tmp582 = 2.9649155283744921*tmp453 + 2.9649155283744921*tmp457 + 2.9649155283744921*tmp463;
      const real_t tmp583 = tmp581 + tmp582;
      const real_t tmp584 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp585 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp586 = tmp584 + tmp585;
      const real_t tmp587 = 0.2723974837528258*tmp101 + 0.2723974837528258*tmp95 + 0.2723974837528258*tmp96;
      const real_t tmp588 = 3.0100340280386204*tmp89 + 3.0100340280386204*tmp93 + 3.0100340280386204*tmp99;
      const real_t tmp589 = tmp587 + tmp588;
      const real_t tmp590 = 0.054242807519210512*tmp137 + 0.054242807519210512*tmp138 + 0.054242807519210512*tmp143;
      const real_t tmp591 = 0.16196202691036121*tmp131 + 0.16196202691036121*tmp135 + 0.16196202691036121*tmp141;
      const real_t tmp592 = tmp590 + tmp591;
      const real_t tmp593 = 1.2716142408535775*tmp179 + 1.2716142408535775*tmp180 + 1.2716142408535775*tmp185;
      const real_t tmp594 = 0.11827798082591956*tmp173 + 0.11827798082591956*tmp177 + 0.11827798082591956*tmp183;
      const real_t tmp595 = tmp593 + tmp594;
      const real_t tmp596 = 1.4152929568371884*tmp221 + 1.4152929568371884*tmp222 + 1.4152929568371884*tmp227;
      const real_t tmp597 = 1.730840956191074*tmp215 + 1.730840956191074*tmp219 + 1.730840956191074*tmp225;
      const real_t tmp598 = tmp596 + tmp597;
      const real_t tmp599 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp269;
      const real_t tmp600 = 0.96110665971229103*tmp257 + 0.96110665971229103*tmp261 + 0.96110665971229103*tmp267;
      const real_t tmp601 = tmp599 + tmp600;
      const real_t tmp602 = 1.3207616593498592*tmp302 + 1.3207616593498592*tmp303 + 1.3207616593498592*tmp307;
      const real_t tmp603 = 0.51764549515564062*tmp297 + 0.51764549515564062*tmp300 + 0.51764549515564062*tmp305;
      const real_t tmp604 = tmp602 + tmp603;
      const real_t tmp605 = 1.2259759537187613*tmp340 + 1.2259759537187613*tmp341 + 1.2259759537187613*tmp346;
      const real_t tmp606 = 0.48616796533571183*tmp334 + 0.48616796533571183*tmp338 + 0.48616796533571183*tmp344;
      const real_t tmp607 = tmp605 + tmp606;
      const real_t tmp608 = 0.23782646519773576*tmp379 + 0.23782646519773576*tmp380 + 0.23782646519773576*tmp384;
      const real_t tmp609 = 1.8030635043651069*tmp374 + 1.8030635043651069*tmp377 + 1.8030635043651069*tmp382;
      const real_t tmp610 = tmp608 + tmp609;
      const real_t tmp611 = 0.19112574223634571*tmp417 + 0.19112574223634571*tmp418 + 0.19112574223634571*tmp423;
      const real_t tmp612 = 1.6770652555180527*tmp411 + 1.6770652555180527*tmp415 + 1.6770652555180527*tmp421;
      const real_t tmp613 = tmp611 + tmp612;
      const real_t tmp614 = 0.14073571909439453*tmp459 + 0.14073571909439453*tmp460 + 0.14073571909439453*tmp465;
      const real_t tmp615 = 0.2688931795735332*tmp453 + 0.2688931795735332*tmp457 + 0.2688931795735332*tmp463;
      const real_t tmp616 = tmp614 + tmp615;
      const real_t tmp617 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp618 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp619 = tmp617 + tmp618;
      const real_t tmp620 = 0.3256196736114374*tmp101 + 0.3256196736114374*tmp95 + 0.3256196736114374*tmp96;
      const real_t tmp621 = 3.0100340280386204*tmp100 + 3.0100340280386204*tmp90 + 3.0100340280386204*tmp94;
      const real_t tmp622 = tmp620 + tmp621;
      const real_t tmp623 = 0.69877623478892303*tmp137 + 0.69877623478892303*tmp138 + 0.69877623478892303*tmp143;
      const real_t tmp624 = 0.16196202691036121*tmp132 + 0.16196202691036121*tmp136 + 0.16196202691036121*tmp142;
      const real_t tmp625 = tmp623 + tmp624;
      const real_t tmp626 = 1.3169318389705873*tmp179 + 1.3169318389705873*tmp180 + 1.3169318389705873*tmp185;
      const real_t tmp627 = 0.11827798082591956*tmp174 + 0.11827798082591956*tmp178 + 0.11827798082591956*tmp184;
      const real_t tmp628 = tmp626 + tmp627;
      const real_t tmp629 = 0.41537646564397157*tmp221 + 0.41537646564397157*tmp222 + 0.41537646564397157*tmp227;
      const real_t tmp630 = 1.730840956191074*tmp216 + 1.730840956191074*tmp220 + 1.730840956191074*tmp226;
      const real_t tmp631 = tmp629 + tmp630;
      const real_t tmp632 = 1.2177936097379878*tmp263 + 1.2177936097379878*tmp264 + 1.2177936097379878*tmp269;
      const real_t tmp633 = 0.96110665971229103*tmp258 + 0.96110665971229103*tmp262 + 0.96110665971229103*tmp268;
      const real_t tmp634 = tmp632 + tmp633;
      const real_t tmp635 = 2.1520288156647434*tmp302 + 2.1520288156647434*tmp303 + 2.1520288156647434*tmp307;
      const real_t tmp636 = 0.51764549515564062*tmp298 + 0.51764549515564062*tmp301 + 0.51764549515564062*tmp306;
      const real_t tmp637 = tmp635 + tmp636;
      const real_t tmp638 = 0.035965040373342916*tmp340 + 0.035965040373342916*tmp341 + 0.035965040373342916*tmp346;
      const real_t tmp639 = 0.48616796533571183*tmp335 + 0.48616796533571183*tmp339 + 0.48616796533571183*tmp345;
      const real_t tmp640 = tmp638 + tmp639;
      const real_t tmp641 = 1.7318139619254227*tmp379 + 1.7318139619254227*tmp380 + 1.7318139619254227*tmp384;
      const real_t tmp642 = 1.8030635043651069*tmp375 + 1.8030635043651069*tmp378 + 1.8030635043651069*tmp383;
      const real_t tmp643 = tmp641 + tmp642;
      const real_t tmp644 = 0.21336495814298084*tmp417 + 0.21336495814298084*tmp418 + 0.21336495814298084*tmp423;
      const real_t tmp645 = 1.6770652555180527*tmp412 + 1.6770652555180527*tmp416 + 1.6770652555180527*tmp422;
      const real_t tmp646 = tmp644 + tmp645;
      const real_t tmp647 = 2.9649155283744921*tmp459 + 2.9649155283744921*tmp460 + 2.9649155283744921*tmp465;
      const real_t tmp648 = 0.2688931795735332*tmp454 + 0.2688931795735332*tmp458 + 0.2688931795735332*tmp464;
      const real_t tmp649 = tmp647 + tmp648;
      const real_t tmp650 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - 2.2903585922226259*tmp42 - tmp551 - tmp584;
      const real_t tmp651 = 0.11955133084429059*tmp16*tmp29*tmp86*tmp91 + 0.11955133084429059*tmp16*tmp39*tmp86*tmp97 + 0.11955133084429059*tmp16*tmp6*tmp79*tmp86 - tmp554 - tmp587;
      const real_t tmp652 = 3.030776123262295*tmp121*tmp128*tmp16*tmp6 + 3.030776123262295*tmp128*tmp133*tmp16*tmp29 + 3.030776123262295*tmp128*tmp139*tmp16*tmp39 - tmp557 - tmp590;
      const real_t tmp653 = 0.021561698496338266*tmp16*tmp163*tmp170*tmp6 + 0.021561698496338266*tmp16*tmp170*tmp175*tmp29 + 0.021561698496338266*tmp16*tmp170*tmp181*tmp39 - tmp560 - tmp593;
      const real_t tmp654 = -0.97680333550942233*tmp215 - 0.97680333550942233*tmp219 - 0.97680333550942233*tmp225 - tmp563 - tmp596;
      const real_t tmp655 = 0.80668592322658683*tmp16*tmp247*tmp254*tmp6 + 0.80668592322658683*tmp16*tmp254*tmp259*tmp29 + 0.80668592322658683*tmp16*tmp254*tmp265*tmp39 - tmp566 - tmp599;
      const real_t tmp656 = -1.3111976295201027*tmp297 - 1.3111976295201027*tmp300 - 1.3111976295201027*tmp305 - tmp569 - tmp602;
      const real_t tmp657 = 1.0259150868534226*tmp16*tmp29*tmp331*tmp336 + 1.0259150868534226*tmp16*tmp324*tmp331*tmp6 + 1.0259150868534226*tmp16*tmp331*tmp342*tmp39 - tmp572 - tmp605;
      const real_t tmp658 = -0.010530396686001087*tmp374 - 0.010530396686001087*tmp377 - 0.010530396686001087*tmp382 - tmp575 - tmp608;
      const real_t tmp659 = 1.727318301866275*tmp16*tmp29*tmp408*tmp413 + 1.727318301866275*tmp16*tmp39*tmp408*tmp419 + 1.727318301866275*tmp16*tmp401*tmp408*tmp6 - tmp578 - tmp611;
      const real_t tmp660 = 0.48471985386318561*tmp16*tmp29*tmp450*tmp455 + 0.48471985386318561*tmp16*tmp39*tmp450*tmp461 + 0.48471985386318561*tmp16*tmp443*tmp450*tmp6 - tmp581 - tmp614;
      const real_t tmp661 = 0.020786379341558803*tmp16*tmp23*tmp27*tmp7 + 0.020786379341558803*tmp16*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp16*tmp23*tmp40*tmp43 - tmp552 - tmp617;
      const real_t tmp662 = 0.066329140985678992*tmp16*tmp27*tmp79*tmp86 + 0.066329140985678992*tmp16*tmp33*tmp86*tmp91 + 0.066329140985678992*tmp16*tmp43*tmp86*tmp97 - tmp555 - tmp620;
      const real_t tmp663 = 2.3862426959925824*tmp121*tmp128*tmp16*tmp27 + 2.3862426959925824*tmp128*tmp133*tmp16*tmp33 + 2.3862426959925824*tmp128*tmp139*tmp16*tmp43 - tmp558 - tmp623;
      const real_t tmp664 = -0.023755899620671705*tmp174 - 0.023755899620671705*tmp178 - 0.023755899620671705*tmp184 - tmp561 - tmp626;
      const real_t tmp665 = 0.023113155683794462*tmp16*tmp205*tmp212*tmp27 + 0.023113155683794462*tmp16*tmp212*tmp217*tmp33 + 0.023113155683794462*tmp16*tmp212*tmp223*tmp43 - tmp564 - tmp629;
      const real_t tmp666 = 0.096099217150166227*tmp16*tmp247*tmp254*tmp27 + 0.096099217150166227*tmp16*tmp254*tmp259*tmp33 + 0.096099217150166227*tmp16*tmp254*tmp265*tmp43 - tmp567 - tmp632;
      const real_t tmp667 = -2.1424647858349868*tmp298 - 2.1424647858349868*tmp301 - 2.1424647858349868*tmp306 - tmp570 - tmp635;
      const real_t tmp668 = 2.215926000198841*tmp16*tmp27*tmp324*tmp331 + 2.215926000198841*tmp16*tmp33*tmp331*tmp336 + 2.215926000198841*tmp16*tmp331*tmp342*tmp43 - tmp573 - tmp638;
      const real_t tmp669 = -1.504517893413688*tmp375 - 1.504517893413688*tmp378 - 1.504517893413688*tmp383 - tmp576 - tmp641;
      const real_t tmp670 = 1.7050790859596399*tmp16*tmp27*tmp401*tmp408 + 1.7050790859596399*tmp16*tmp33*tmp408*tmp413 + 1.7050790859596399*tmp16*tmp408*tmp419*tmp43 - tmp579 - tmp644;
      const real_t tmp671 = -2.339459955416912*tmp454 - 2.339459955416912*tmp458 - 2.339459955416912*tmp464 - tmp582 - tmp647;
      const real_t tmp672 = 0.058384491239200198*tmp16*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp16*tmp23*tmp35*tmp7 + 0.058384491239200198*tmp16*tmp23*tmp40*tmp45 - tmp585 - tmp618;
      const real_t tmp673 = -2.6180852134415042*tmp101 - tmp588 - tmp621 - 2.6180852134415042*tmp95 - 2.6180852134415042*tmp96;
      const real_t tmp674 = 2.923056903871144*tmp121*tmp128*tmp16*tmp35 + 2.923056903871144*tmp128*tmp133*tmp16*tmp37 + 2.923056903871144*tmp128*tmp139*tmp16*tmp45 - tmp591 - tmp624;
      const real_t tmp675 = 1.1748979585239958*tmp16*tmp163*tmp170*tmp35 + 1.1748979585239958*tmp16*tmp170*tmp175*tmp37 + 1.1748979585239958*tmp16*tmp170*tmp181*tmp45 - tmp594 - tmp627;
      const real_t tmp676 = -1.292351334863308*tmp221 - 1.292351334863308*tmp222 - 1.292351334863308*tmp227 - tmp597 - tmp630;
      const real_t tmp677 = 0.35278616717586297*tmp16*tmp247*tmp254*tmp35 + 0.35278616717586297*tmp16*tmp254*tmp259*tmp37 + 0.35278616717586297*tmp16*tmp254*tmp265*tmp45 - tmp600 - tmp633;
      const real_t tmp678 = -0.50808146532588383*tmp302 - 0.50808146532588383*tmp303 - 0.50808146532588383*tmp307 - tmp603 - tmp636;
      const real_t tmp679 = 1.7657230752364721*tmp16*tmp324*tmp331*tmp35 + 1.7657230752364721*tmp16*tmp331*tmp336*tmp37 + 1.7657230752364721*tmp16*tmp331*tmp342*tmp45 - tmp606 - tmp639;
      const real_t tmp680 = -1.5757674358533722*tmp379 - 1.5757674358533722*tmp380 - 1.5757674358533722*tmp384 - tmp609 - tmp642;
      const real_t tmp681 = 0.24137878858456796*tmp16*tmp35*tmp401*tmp408 + 0.24137878858456796*tmp16*tmp37*tmp408*tmp413 + 0.24137878858456796*tmp16*tmp408*tmp419*tmp45 - tmp612 - tmp645;
      const real_t tmp682 = 0.35656239338404694*tmp16*tmp35*tmp443*tmp450 + 0.35656239338404694*tmp16*tmp37*tmp450*tmp455 + 0.35656239338404694*tmp16*tmp45*tmp450*tmp461 - tmp615 - tmp648;
      const real_t tmp683 = tmp76*(tmp56 + tmp57 + tmp62);
      const real_t tmp684 = 0.0072301427194886381*tmp683;
      const real_t tmp685 = tmp118*(tmp111 + tmp112 + tmp117);
      const real_t tmp686 = 0.012344594760863713*tmp685;
      const real_t tmp687 = tmp160*(tmp153 + tmp154 + tmp159);
      const real_t tmp688 = 0.0036548782978011126*tmp687;
      const real_t tmp689 = tmp202*(tmp195 + tmp196 + tmp201);
      const real_t tmp690 = 0.010799549999884401*tmp689;
      const real_t tmp691 = tmp244*(tmp237 + tmp238 + tmp243);
      const real_t tmp692 = 0.012584765868454714*tmp691;
      const real_t tmp693 = tmp286*(tmp279 + tmp280 + tmp285);
      const real_t tmp694 = 0.00083582139204094858*tmp693;
      const real_t tmp695 = tmp321*(tmp315 + tmp316 + tmp320);
      const real_t tmp696 = 0.0040819365333192512*tmp695;
      const real_t tmp697 = tmp363*(tmp356 + tmp357 + tmp362);
      const real_t tmp698 = 0.0045346636251092122*tmp697;
      const real_t tmp699 = tmp398*(tmp392 + tmp393 + tmp397);
      const real_t tmp700 = 0.0061987549215557864*tmp699;
      const real_t tmp701 = tmp440*(tmp433 + tmp434 + tmp439);
      const real_t tmp702 = 0.0045087419239184514*tmp701;
      const real_t tmp703 = tmp482*(tmp475 + tmp476 + tmp481);
      const real_t tmp704 = 0.0044998649071490461*tmp703;
      const real_t tmp705 = tmp76*(tmp51 + tmp55 + tmp61);
      const real_t tmp706 = 0.0067853652681886352*tmp705;
      const real_t tmp707 = tmp118*(tmp106 + tmp110 + tmp116);
      const real_t tmp708 = 0.0041416969702195786*tmp707;
      const real_t tmp709 = tmp160*(tmp148 + tmp152 + tmp158);
      const real_t tmp710 = 0.0013137068218914037*tmp709;
      const real_t tmp711 = tmp202*(tmp190 + tmp194 + tmp200);
      const real_t tmp712 = 0.0038818597778972029*tmp711;
      const real_t tmp713 = tmp244*(tmp232 + tmp236 + tmp242);
      const real_t tmp714 = 0.010066964965131993*tmp713;
      const real_t tmp715 = tmp286*(tmp274 + tmp278 + tmp284);
      const real_t tmp716 = 0.0046804043242939224*tmp715;
      const real_t tmp717 = tmp321*(tmp311 + tmp314 + tmp319);
      const real_t tmp718 = 0.0097490714046835261*tmp717;
      const real_t tmp719 = tmp363*(tmp351 + tmp355 + tmp361);
      const real_t tmp720 = 0.0085077884791842431*tmp719;
      const real_t tmp721 = tmp398*(tmp388 + tmp391 + tmp396);
      const real_t tmp722 = 0.0056487878897383461*tmp721;
      const real_t tmp723 = tmp440*(tmp428 + tmp432 + tmp438);
      const real_t tmp724 = 0.005238393734043144*tmp723;
      const real_t tmp725 = tmp482*(tmp470 + tmp474 + tmp480);
      const real_t tmp726 = 0.012093792842045984*tmp725;
      const real_t tmp727 = tmp76*(tmp50 + tmp54 + tmp60);
      const real_t tmp728 = 0.020554974928565235*tmp727;
      const real_t tmp729 = tmp118*(tmp105 + tmp109 + tmp115);
      const real_t tmp730 = 0.0044685602754798454*tmp729;
      const real_t tmp731 = tmp160*(tmp147 + tmp151 + tmp157);
      const real_t tmp732 = 0.0041246668394316508*tmp731;
      const real_t tmp733 = tmp202*(tmp189 + tmp193 + tmp199);
      const real_t tmp734 = 0.0033267985952381263*tmp733;
      const real_t tmp735 = tmp244*(tmp231 + tmp235 + tmp241);
      const real_t tmp736 = 0.0071511654955033511*tmp735;
      const real_t tmp737 = tmp286*(tmp273 + tmp277 + tmp283);
      const real_t tmp738 = 0.010590168103918869*tmp737;
      const real_t tmp739 = tmp321*(tmp310 + tmp313 + tmp318);
      const real_t tmp740 = 0.0027144532136395704*tmp739;
      const real_t tmp741 = tmp363*(tmp350 + tmp354 + tmp360);
      const real_t tmp742 = 0.0019942799754541058*tmp741;
      const real_t tmp743 = tmp398*(tmp387 + tmp390 + tmp395);
      const real_t tmp744 = 0.005883129944586717*tmp743;
      const real_t tmp745 = tmp440*(tmp427 + tmp431 + tmp437);
      const real_t tmp746 = 0.0053864900723149976*tmp745;
      const real_t tmp747 = tmp482*(tmp469 + tmp473 + tmp479);
      const real_t tmp748 = 0.0052886569726683132*tmp747;
      const real_t tmp749 = 2.7375616618121592*tmp51 + 2.7375616618121592*tmp55 + 2.7375616618121592*tmp61;
      const real_t tmp750 = 0.42641669024797446*tmp50 + 0.42641669024797446*tmp54 + 0.42641669024797446*tmp60;
      const real_t tmp751 = tmp76*(tmp749 + tmp750);
      const real_t tmp752 = 0.011829781572832234*tmp751;
      const real_t tmp753 = 0.2723974837528258*tmp106 + 0.2723974837528258*tmp110 + 0.2723974837528258*tmp116;
      const real_t tmp754 = 0.3256196736114374*tmp105 + 0.3256196736114374*tmp109 + 0.3256196736114374*tmp115;
      const real_t tmp755 = tmp118*(tmp753 + tmp754);
      const real_t tmp756 = 0.0061414854617707626*tmp755;
      const real_t tmp757 = 0.054242807519210512*tmp148 + 0.054242807519210512*tmp152 + 0.054242807519210512*tmp158;
      const real_t tmp758 = 0.69877623478892303*tmp147 + 0.69877623478892303*tmp151 + 0.69877623478892303*tmp157;
      const real_t tmp759 = tmp160*(tmp757 + tmp758);
      const real_t tmp760 = 0.0043612323249822204*tmp759;
      const real_t tmp761 = 1.2716142408535775*tmp190 + 1.2716142408535775*tmp194 + 1.2716142408535775*tmp200;
      const real_t tmp762 = 1.3169318389705873*tmp189 + 1.3169318389705873*tmp193 + 1.3169318389705873*tmp199;
      const real_t tmp763 = tmp202*(tmp761 + tmp762);
      const real_t tmp764 = 0.012248248047610821*tmp763;
      const real_t tmp765 = 1.4152929568371884*tmp232 + 1.4152929568371884*tmp236 + 1.4152929568371884*tmp242;
      const real_t tmp766 = 0.41537646564397157*tmp231 + 0.41537646564397157*tmp235 + 0.41537646564397157*tmp241;
      const real_t tmp767 = tmp244*(tmp765 + tmp766);
      const real_t tmp768 = 0.017219568446249611*tmp767;
      const real_t tmp769 = 0.50720690366156718*tmp274 + 0.50720690366156718*tmp278 + 0.50720690366156718*tmp284;
      const real_t tmp770 = 1.2177936097379878*tmp273 + 1.2177936097379878*tmp277 + 1.2177936097379878*tmp283;
      const real_t tmp771 = tmp286*(tmp769 + tmp770);
      const real_t tmp772 = 0.021490090227737114*tmp771;
      const real_t tmp773 = 1.3207616593498592*tmp311 + 1.3207616593498592*tmp314 + 1.3207616593498592*tmp319;
      const real_t tmp774 = 2.1520288156647434*tmp310 + 2.1520288156647434*tmp313 + 2.1520288156647434*tmp318;
      const real_t tmp775 = tmp321*(tmp773 + tmp774);
      const real_t tmp776 = 0.0084625239161731543*tmp775;
      const real_t tmp777 = 1.2259759537187613*tmp351 + 1.2259759537187613*tmp355 + 1.2259759537187613*tmp361;
      const real_t tmp778 = 0.035965040373342916*tmp350 + 0.035965040373342916*tmp354 + 0.035965040373342916*tmp360;
      const real_t tmp779 = tmp363*(tmp777 + tmp778);
      const real_t tmp780 = 0.0088251866742250357*tmp779;
      const real_t tmp781 = 0.23782646519773576*tmp388 + 0.23782646519773576*tmp391 + 0.23782646519773576*tmp396;
      const real_t tmp782 = 1.7318139619254227*tmp387 + 1.7318139619254227*tmp390 + 1.7318139619254227*tmp395;
      const real_t tmp783 = tmp398*(tmp781 + tmp782);
      const real_t tmp784 = 0.0077188851041817101*tmp783;
      const real_t tmp785 = 0.19112574223634571*tmp428 + 0.19112574223634571*tmp432 + 0.19112574223634571*tmp438;
      const real_t tmp786 = 0.21336495814298084*tmp427 + 0.21336495814298084*tmp431 + 0.21336495814298084*tmp437;
      const real_t tmp787 = tmp440*(tmp785 + tmp786);
      const real_t tmp788 = 0.006659242794062166*tmp787;
      const real_t tmp789 = 0.14073571909439453*tmp470 + 0.14073571909439453*tmp474 + 0.14073571909439453*tmp480;
      const real_t tmp790 = 2.9649155283744921*tmp469 + 2.9649155283744921*tmp473 + 2.9649155283744921*tmp479;
      const real_t tmp791 = tmp482*(tmp789 + tmp790);
      const real_t tmp792 = 0.0061548665412862651*tmp791;
      const real_t tmp793 = 2.7375616618121592*tmp56 + 2.7375616618121592*tmp57 + 2.7375616618121592*tmp62;
      const real_t tmp794 = 0.38881857835033307*tmp50 + 0.38881857835033307*tmp54 + 0.38881857835033307*tmp60;
      const real_t tmp795 = tmp76*(tmp793 + tmp794);
      const real_t tmp796 = 0.011829781572832234*tmp795;
      const real_t tmp797 = 0.2723974837528258*tmp111 + 0.2723974837528258*tmp112 + 0.2723974837528258*tmp117;
      const real_t tmp798 = 3.0100340280386204*tmp105 + 3.0100340280386204*tmp109 + 3.0100340280386204*tmp115;
      const real_t tmp799 = tmp118*(tmp797 + tmp798);
      const real_t tmp800 = 0.0061414854617707626*tmp799;
      const real_t tmp801 = 0.054242807519210512*tmp153 + 0.054242807519210512*tmp154 + 0.054242807519210512*tmp159;
      const real_t tmp802 = 0.16196202691036121*tmp147 + 0.16196202691036121*tmp151 + 0.16196202691036121*tmp157;
      const real_t tmp803 = tmp160*(tmp801 + tmp802);
      const real_t tmp804 = 0.0043612323249822204*tmp803;
      const real_t tmp805 = 1.2716142408535775*tmp195 + 1.2716142408535775*tmp196 + 1.2716142408535775*tmp201;
      const real_t tmp806 = 0.11827798082591956*tmp189 + 0.11827798082591956*tmp193 + 0.11827798082591956*tmp199;
      const real_t tmp807 = tmp202*(tmp805 + tmp806);
      const real_t tmp808 = 0.012248248047610821*tmp807;
      const real_t tmp809 = 1.4152929568371884*tmp237 + 1.4152929568371884*tmp238 + 1.4152929568371884*tmp243;
      const real_t tmp810 = 1.730840956191074*tmp231 + 1.730840956191074*tmp235 + 1.730840956191074*tmp241;
      const real_t tmp811 = tmp244*(tmp809 + tmp810);
      const real_t tmp812 = 0.017219568446249611*tmp811;
      const real_t tmp813 = 0.50720690366156718*tmp279 + 0.50720690366156718*tmp280 + 0.50720690366156718*tmp285;
      const real_t tmp814 = 0.96110665971229103*tmp273 + 0.96110665971229103*tmp277 + 0.96110665971229103*tmp283;
      const real_t tmp815 = tmp286*(tmp813 + tmp814);
      const real_t tmp816 = 0.021490090227737114*tmp815;
      const real_t tmp817 = 1.3207616593498592*tmp315 + 1.3207616593498592*tmp316 + 1.3207616593498592*tmp320;
      const real_t tmp818 = 0.51764549515564062*tmp310 + 0.51764549515564062*tmp313 + 0.51764549515564062*tmp318;
      const real_t tmp819 = tmp321*(tmp817 + tmp818);
      const real_t tmp820 = 0.0084625239161731543*tmp819;
      const real_t tmp821 = 1.2259759537187613*tmp356 + 1.2259759537187613*tmp357 + 1.2259759537187613*tmp362;
      const real_t tmp822 = 0.48616796533571183*tmp350 + 0.48616796533571183*tmp354 + 0.48616796533571183*tmp360;
      const real_t tmp823 = tmp363*(tmp821 + tmp822);
      const real_t tmp824 = 0.0088251866742250357*tmp823;
      const real_t tmp825 = 0.23782646519773576*tmp392 + 0.23782646519773576*tmp393 + 0.23782646519773576*tmp397;
      const real_t tmp826 = 1.8030635043651069*tmp387 + 1.8030635043651069*tmp390 + 1.8030635043651069*tmp395;
      const real_t tmp827 = tmp398*(tmp825 + tmp826);
      const real_t tmp828 = 0.0077188851041817101*tmp827;
      const real_t tmp829 = 0.19112574223634571*tmp433 + 0.19112574223634571*tmp434 + 0.19112574223634571*tmp439;
      const real_t tmp830 = 1.6770652555180527*tmp427 + 1.6770652555180527*tmp431 + 1.6770652555180527*tmp437;
      const real_t tmp831 = tmp440*(tmp829 + tmp830);
      const real_t tmp832 = 0.006659242794062166*tmp831;
      const real_t tmp833 = 0.14073571909439453*tmp475 + 0.14073571909439453*tmp476 + 0.14073571909439453*tmp481;
      const real_t tmp834 = 0.2688931795735332*tmp469 + 0.2688931795735332*tmp473 + 0.2688931795735332*tmp479;
      const real_t tmp835 = tmp482*(tmp833 + tmp834);
      const real_t tmp836 = 0.0061548665412862651*tmp835;
      const real_t tmp837 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp57 + 0.42641669024797446*tmp62;
      const real_t tmp838 = 0.38881857835033307*tmp51 + 0.38881857835033307*tmp55 + 0.38881857835033307*tmp61;
      const real_t tmp839 = tmp76*(tmp837 + tmp838);
      const real_t tmp840 = 0.011829781572832234*tmp839;
      const real_t tmp841 = 0.3256196736114374*tmp111 + 0.3256196736114374*tmp112 + 0.3256196736114374*tmp117;
      const real_t tmp842 = 3.0100340280386204*tmp106 + 3.0100340280386204*tmp110 + 3.0100340280386204*tmp116;
      const real_t tmp843 = tmp118*(tmp841 + tmp842);
      const real_t tmp844 = 0.0061414854617707626*tmp843;
      const real_t tmp845 = 0.69877623478892303*tmp153 + 0.69877623478892303*tmp154 + 0.69877623478892303*tmp159;
      const real_t tmp846 = 0.16196202691036121*tmp148 + 0.16196202691036121*tmp152 + 0.16196202691036121*tmp158;
      const real_t tmp847 = tmp160*(tmp845 + tmp846);
      const real_t tmp848 = 0.0043612323249822204*tmp847;
      const real_t tmp849 = 1.3169318389705873*tmp195 + 1.3169318389705873*tmp196 + 1.3169318389705873*tmp201;
      const real_t tmp850 = 0.11827798082591956*tmp190 + 0.11827798082591956*tmp194 + 0.11827798082591956*tmp200;
      const real_t tmp851 = tmp202*(tmp849 + tmp850);
      const real_t tmp852 = 0.012248248047610821*tmp851;
      const real_t tmp853 = 0.41537646564397157*tmp237 + 0.41537646564397157*tmp238 + 0.41537646564397157*tmp243;
      const real_t tmp854 = 1.730840956191074*tmp232 + 1.730840956191074*tmp236 + 1.730840956191074*tmp242;
      const real_t tmp855 = tmp244*(tmp853 + tmp854);
      const real_t tmp856 = 0.017219568446249611*tmp855;
      const real_t tmp857 = 1.2177936097379878*tmp279 + 1.2177936097379878*tmp280 + 1.2177936097379878*tmp285;
      const real_t tmp858 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp278 + 0.96110665971229103*tmp284;
      const real_t tmp859 = tmp286*(tmp857 + tmp858);
      const real_t tmp860 = 0.021490090227737114*tmp859;
      const real_t tmp861 = 2.1520288156647434*tmp315 + 2.1520288156647434*tmp316 + 2.1520288156647434*tmp320;
      const real_t tmp862 = 0.51764549515564062*tmp311 + 0.51764549515564062*tmp314 + 0.51764549515564062*tmp319;
      const real_t tmp863 = tmp321*(tmp861 + tmp862);
      const real_t tmp864 = 0.0084625239161731543*tmp863;
      const real_t tmp865 = 0.035965040373342916*tmp356 + 0.035965040373342916*tmp357 + 0.035965040373342916*tmp362;
      const real_t tmp866 = 0.48616796533571183*tmp351 + 0.48616796533571183*tmp355 + 0.48616796533571183*tmp361;
      const real_t tmp867 = tmp363*(tmp865 + tmp866);
      const real_t tmp868 = 0.0088251866742250357*tmp867;
      const real_t tmp869 = 1.7318139619254227*tmp392 + 1.7318139619254227*tmp393 + 1.7318139619254227*tmp397;
      const real_t tmp870 = 1.8030635043651069*tmp388 + 1.8030635043651069*tmp391 + 1.8030635043651069*tmp396;
      const real_t tmp871 = tmp398*(tmp869 + tmp870);
      const real_t tmp872 = 0.0077188851041817101*tmp871;
      const real_t tmp873 = 0.21336495814298084*tmp433 + 0.21336495814298084*tmp434 + 0.21336495814298084*tmp439;
      const real_t tmp874 = 1.6770652555180527*tmp428 + 1.6770652555180527*tmp432 + 1.6770652555180527*tmp438;
      const real_t tmp875 = tmp440*(tmp873 + tmp874);
      const real_t tmp876 = 0.006659242794062166*tmp875;
      const real_t tmp877 = 2.9649155283744921*tmp475 + 2.9649155283744921*tmp476 + 2.9649155283744921*tmp481;
      const real_t tmp878 = 0.2688931795735332*tmp470 + 0.2688931795735332*tmp474 + 0.2688931795735332*tmp480;
      const real_t tmp879 = tmp482*(tmp877 + tmp878);
      const real_t tmp880 = 0.0061548665412862651*tmp879;
      const real_t tmp881 = tmp76*(-2.2903585922226259*tmp50 - 2.2903585922226259*tmp54 - 2.2903585922226259*tmp60 - tmp749 - tmp793);
      const real_t tmp882 = 0.011829781572832234*tmp881;
      const real_t tmp883 = tmp118*(0.11955133084429059*tmp103*tmp16*tmp6*tmp86 + 0.11955133084429059*tmp107*tmp16*tmp29*tmp86 + 0.11955133084429059*tmp113*tmp16*tmp39*tmp86 - tmp753 - tmp797);
      const real_t tmp884 = 0.0061414854617707626*tmp883;
      const real_t tmp885 = tmp160*(3.030776123262295*tmp128*tmp145*tmp16*tmp6 + 3.030776123262295*tmp128*tmp149*tmp16*tmp29 + 3.030776123262295*tmp128*tmp155*tmp16*tmp39 - tmp757 - tmp801);
      const real_t tmp886 = 0.0043612323249822204*tmp885;
      const real_t tmp887 = tmp202*(0.021561698496338266*tmp16*tmp170*tmp187*tmp6 + 0.021561698496338266*tmp16*tmp170*tmp191*tmp29 + 0.021561698496338266*tmp16*tmp170*tmp197*tmp39 - tmp761 - tmp805);
      const real_t tmp888 = 0.012248248047610821*tmp887;
      const real_t tmp889 = tmp244*(-0.97680333550942233*tmp231 - 0.97680333550942233*tmp235 - 0.97680333550942233*tmp241 - tmp765 - tmp809);
      const real_t tmp890 = 0.017219568446249611*tmp889;
      const real_t tmp891 = tmp286*(0.80668592322658683*tmp16*tmp254*tmp271*tmp6 + 0.80668592322658683*tmp16*tmp254*tmp275*tmp29 + 0.80668592322658683*tmp16*tmp254*tmp281*tmp39 - tmp769 - tmp813);
      const real_t tmp892 = 0.021490090227737114*tmp891;
      const real_t tmp893 = tmp321*(-1.3111976295201027*tmp310 - 1.3111976295201027*tmp313 - 1.3111976295201027*tmp318 - tmp773 - tmp817);
      const real_t tmp894 = 0.0084625239161731543*tmp893;
      const real_t tmp895 = tmp363*(1.0259150868534226*tmp16*tmp29*tmp331*tmp352 + 1.0259150868534226*tmp16*tmp331*tmp348*tmp6 + 1.0259150868534226*tmp16*tmp331*tmp358*tmp39 - tmp777 - tmp821);
      const real_t tmp896 = 0.0088251866742250357*tmp895;
      const real_t tmp897 = tmp398*(-0.010530396686001087*tmp387 - 0.010530396686001087*tmp390 - 0.010530396686001087*tmp395 - tmp781 - tmp825);
      const real_t tmp898 = 0.0077188851041817101*tmp897;
      const real_t tmp899 = tmp440*(1.727318301866275*tmp16*tmp29*tmp408*tmp429 + 1.727318301866275*tmp16*tmp39*tmp408*tmp435 + 1.727318301866275*tmp16*tmp408*tmp425*tmp6 - tmp785 - tmp829);
      const real_t tmp900 = 0.006659242794062166*tmp899;
      const real_t tmp901 = tmp482*(0.48471985386318561*tmp16*tmp29*tmp450*tmp471 + 0.48471985386318561*tmp16*tmp39*tmp450*tmp477 + 0.48471985386318561*tmp16*tmp450*tmp467*tmp6 - tmp789 - tmp833);
      const real_t tmp902 = 0.0061548665412862651*tmp901;
      const real_t tmp903 = tmp76*(0.020786379341558803*tmp16*tmp23*tmp27*tmp48 + 0.020786379341558803*tmp16*tmp23*tmp33*tmp52 + 0.020786379341558803*tmp16*tmp23*tmp43*tmp58 - tmp750 - tmp837);
      const real_t tmp904 = 0.011829781572832234*tmp903;
      const real_t tmp905 = tmp118*(0.066329140985678992*tmp103*tmp16*tmp27*tmp86 + 0.066329140985678992*tmp107*tmp16*tmp33*tmp86 + 0.066329140985678992*tmp113*tmp16*tmp43*tmp86 - tmp754 - tmp841);
      const real_t tmp906 = 0.0061414854617707626*tmp905;
      const real_t tmp907 = tmp160*(2.3862426959925824*tmp128*tmp145*tmp16*tmp27 + 2.3862426959925824*tmp128*tmp149*tmp16*tmp33 + 2.3862426959925824*tmp128*tmp155*tmp16*tmp43 - tmp758 - tmp845);
      const real_t tmp908 = 0.0043612323249822204*tmp907;
      const real_t tmp909 = tmp202*(-0.023755899620671705*tmp190 - 0.023755899620671705*tmp194 - 0.023755899620671705*tmp200 - tmp762 - tmp849);
      const real_t tmp910 = 0.012248248047610821*tmp909;
      const real_t tmp911 = tmp244*(0.023113155683794462*tmp16*tmp212*tmp229*tmp27 + 0.023113155683794462*tmp16*tmp212*tmp233*tmp33 + 0.023113155683794462*tmp16*tmp212*tmp239*tmp43 - tmp766 - tmp853);
      const real_t tmp912 = 0.017219568446249611*tmp911;
      const real_t tmp913 = tmp286*(0.096099217150166227*tmp16*tmp254*tmp27*tmp271 + 0.096099217150166227*tmp16*tmp254*tmp275*tmp33 + 0.096099217150166227*tmp16*tmp254*tmp281*tmp43 - tmp770 - tmp857);
      const real_t tmp914 = 0.021490090227737114*tmp913;
      const real_t tmp915 = tmp321*(-2.1424647858349868*tmp311 - 2.1424647858349868*tmp314 - 2.1424647858349868*tmp319 - tmp774 - tmp861);
      const real_t tmp916 = 0.0084625239161731543*tmp915;
      const real_t tmp917 = tmp363*(2.215926000198841*tmp16*tmp27*tmp331*tmp348 + 2.215926000198841*tmp16*tmp33*tmp331*tmp352 + 2.215926000198841*tmp16*tmp331*tmp358*tmp43 - tmp778 - tmp865);
      const real_t tmp918 = 0.0088251866742250357*tmp917;
      const real_t tmp919 = tmp398*(-1.504517893413688*tmp388 - 1.504517893413688*tmp391 - 1.504517893413688*tmp396 - tmp782 - tmp869);
      const real_t tmp920 = 0.0077188851041817101*tmp919;
      const real_t tmp921 = tmp440*(1.7050790859596399*tmp16*tmp27*tmp408*tmp425 + 1.7050790859596399*tmp16*tmp33*tmp408*tmp429 + 1.7050790859596399*tmp16*tmp408*tmp43*tmp435 - tmp786 - tmp873);
      const real_t tmp922 = 0.006659242794062166*tmp921;
      const real_t tmp923 = tmp482*(-2.339459955416912*tmp470 - 2.339459955416912*tmp474 - 2.339459955416912*tmp480 - tmp790 - tmp877);
      const real_t tmp924 = 0.0061548665412862651*tmp923;
      const real_t tmp925 = tmp76*(0.058384491239200198*tmp16*tmp23*tmp35*tmp48 + 0.058384491239200198*tmp16*tmp23*tmp37*tmp52 + 0.058384491239200198*tmp16*tmp23*tmp45*tmp58 - tmp794 - tmp838);
      const real_t tmp926 = 0.011829781572832234*tmp925;
      const real_t tmp927 = tmp118*(-2.6180852134415042*tmp111 - 2.6180852134415042*tmp112 - 2.6180852134415042*tmp117 - tmp798 - tmp842);
      const real_t tmp928 = 0.0061414854617707626*tmp927;
      const real_t tmp929 = tmp160*(2.923056903871144*tmp128*tmp145*tmp16*tmp35 + 2.923056903871144*tmp128*tmp149*tmp16*tmp37 + 2.923056903871144*tmp128*tmp155*tmp16*tmp45 - tmp802 - tmp846);
      const real_t tmp930 = 0.0043612323249822204*tmp929;
      const real_t tmp931 = tmp202*(1.1748979585239958*tmp16*tmp170*tmp187*tmp35 + 1.1748979585239958*tmp16*tmp170*tmp191*tmp37 + 1.1748979585239958*tmp16*tmp170*tmp197*tmp45 - tmp806 - tmp850);
      const real_t tmp932 = 0.012248248047610821*tmp931;
      const real_t tmp933 = tmp244*(-1.292351334863308*tmp237 - 1.292351334863308*tmp238 - 1.292351334863308*tmp243 - tmp810 - tmp854);
      const real_t tmp934 = 0.017219568446249611*tmp933;
      const real_t tmp935 = tmp286*(0.35278616717586297*tmp16*tmp254*tmp271*tmp35 + 0.35278616717586297*tmp16*tmp254*tmp275*tmp37 + 0.35278616717586297*tmp16*tmp254*tmp281*tmp45 - tmp814 - tmp858);
      const real_t tmp936 = 0.021490090227737114*tmp935;
      const real_t tmp937 = tmp321*(-0.50808146532588383*tmp315 - 0.50808146532588383*tmp316 - 0.50808146532588383*tmp320 - tmp818 - tmp862);
      const real_t tmp938 = 0.0084625239161731543*tmp937;
      const real_t tmp939 = tmp363*(1.7657230752364721*tmp16*tmp331*tmp348*tmp35 + 1.7657230752364721*tmp16*tmp331*tmp352*tmp37 + 1.7657230752364721*tmp16*tmp331*tmp358*tmp45 - tmp822 - tmp866);
      const real_t tmp940 = 0.0088251866742250357*tmp939;
      const real_t tmp941 = tmp398*(-1.5757674358533722*tmp392 - 1.5757674358533722*tmp393 - 1.5757674358533722*tmp397 - tmp826 - tmp870);
      const real_t tmp942 = 0.0077188851041817101*tmp941;
      const real_t tmp943 = tmp440*(0.24137878858456796*tmp16*tmp35*tmp408*tmp425 + 0.24137878858456796*tmp16*tmp37*tmp408*tmp429 + 0.24137878858456796*tmp16*tmp408*tmp435*tmp45 - tmp830 - tmp874);
      const real_t tmp944 = 0.006659242794062166*tmp943;
      const real_t tmp945 = tmp482*(0.35656239338404694*tmp16*tmp35*tmp450*tmp467 + 0.35656239338404694*tmp16*tmp37*tmp450*tmp471 + 0.35656239338404694*tmp16*tmp45*tmp450*tmp477 - tmp834 - tmp878);
      const real_t tmp946 = 0.0061548665412862651*tmp945;
      elMat(0,0) = -tmp102*tmp120 - tmp144*tmp162 - tmp186*tmp204 - tmp228*tmp246 - tmp270*tmp288 - tmp308*tmp323 - tmp347*tmp365 - tmp385*tmp400 - tmp424*tmp442 - tmp466*tmp484 - tmp47*tmp78;
      elMat(0,1) = -tmp119*tmp488 + tmp161*tmp490 + tmp203*tmp492 - tmp245*tmp494 + tmp287*tmp496 + tmp322*tmp498 + tmp364*tmp500 - tmp399*tmp502 - tmp441*tmp504 + tmp483*tmp506 + tmp486*tmp77;
      elMat(0,2) = tmp119*tmp510 + tmp161*tmp512 - tmp203*tmp514 + tmp245*tmp516 - tmp287*tmp518 - tmp322*tmp520 + tmp364*tmp522 - tmp399*tmp524 + tmp441*tmp526 - tmp483*tmp528 + tmp508*tmp77;
      elMat(0,3) = tmp119*tmp532 + tmp161*tmp534 - tmp203*tmp536 - tmp245*tmp538 + tmp287*tmp540 - tmp322*tmp542 - tmp364*tmp544 + tmp399*tmp546 + tmp441*tmp548 + tmp483*tmp550 - tmp530*tmp77;
      elMat(0,4) = -tmp120*tmp556 - tmp162*tmp559 - tmp204*tmp562 - tmp246*tmp565 - tmp288*tmp568 - tmp323*tmp571 - tmp365*tmp574 - tmp400*tmp577 - tmp442*tmp580 - tmp484*tmp583 - tmp553*tmp78;
      elMat(0,5) = -tmp120*tmp589 - tmp162*tmp592 - tmp204*tmp595 - tmp246*tmp598 - tmp288*tmp601 - tmp323*tmp604 - tmp365*tmp607 - tmp400*tmp610 - tmp442*tmp613 - tmp484*tmp616 - tmp586*tmp78;
      elMat(0,6) = -tmp120*tmp622 - tmp162*tmp625 - tmp204*tmp628 - tmp246*tmp631 - tmp288*tmp634 - tmp323*tmp637 - tmp365*tmp640 - tmp400*tmp643 - tmp442*tmp646 - tmp484*tmp649 - tmp619*tmp78;
      elMat(0,7) = -tmp120*tmp651 - tmp162*tmp652 - tmp204*tmp653 - tmp246*tmp654 - tmp288*tmp655 - tmp323*tmp656 - tmp365*tmp657 - tmp400*tmp658 - tmp442*tmp659 - tmp484*tmp660 - tmp650*tmp78;
      elMat(0,8) = -tmp120*tmp662 - tmp162*tmp663 - tmp204*tmp664 - tmp246*tmp665 - tmp288*tmp666 - tmp323*tmp667 - tmp365*tmp668 - tmp400*tmp669 - tmp442*tmp670 - tmp484*tmp671 - tmp661*tmp78;
      elMat(0,9) = -tmp120*tmp673 - tmp162*tmp674 - tmp204*tmp675 - tmp246*tmp676 - tmp288*tmp677 - tmp323*tmp678 - tmp365*tmp679 - tmp400*tmp680 - tmp442*tmp681 - tmp484*tmp682 - tmp672*tmp78;
      elMat(1,0) = -tmp102*tmp686 + tmp144*tmp688 + tmp186*tmp690 - tmp228*tmp692 + tmp270*tmp694 + tmp308*tmp696 + tmp347*tmp698 - tmp385*tmp700 - tmp424*tmp702 + tmp466*tmp704 + tmp47*tmp684;
      elMat(1,1) = -0.0044189289060270545*tmp485*tmp683 - 0.024813055531683337*tmp487*tmp685 - 0.0030629268005785541*tmp489*tmp687 - 0.0095222010320695129*tmp491*tmp689 - 0.0091974623207422349*tmp493*tmp691 - 3.2507885820395218e-5*tmp495*tmp693 - 0.0019689404753353082*tmp497*tmp695 - 0.0023300554370080033*tmp499*tmp697 - 0.0049779938500050438*tmp501*tmp699 - 0.0030527125027828036*tmp503*tmp701 - 0.0032898819246143778*tmp505*tmp703;
      elMat(1,2) = -0.0041470891910238041*tmp507*tmp683 + 0.008324951843965811*tmp509*tmp685 - 0.001100936202251903*tmp511*tmp687 + 0.0034227212415181688*tmp513*tmp689 + 0.0073573503010591077*tmp515*tmp691 + 0.00018203655806882805*tmp517*tmp693 + 0.0047025085100984255*tmp519*tmp695 - 0.00437157426475263*tmp521*tmp697 - 0.0045363353981484533*tmp523*tmp699 + 0.0035467343920440879*tmp525*tmp701 + 0.0088418544316446034*tmp527*tmp703;
      elMat(1,3) = 0.012562818798813762*tmp529*tmp683 + 0.00898195821005612*tmp531*tmp685 - 0.003456627437787347*tmp533*tmp687 + 0.0029333115747788548*tmp535*tmp689 - 0.0052263646286142846*tmp537*tmp691 - 0.00041188701176975823*tmp539*tmp693 + 0.0013093287357882949*tmp541*tmp695 + 0.0010247249374778298*tmp543*tmp697 + 0.0047245269499351069*tmp545*tmp699 + 0.0036470052771574082*tmp547*tmp701 - 0.0038665731836137946*tmp549*tmp703;
      elMat(1,4) = tmp553*tmp684 - tmp556*tmp686 + tmp559*tmp688 + tmp562*tmp690 - tmp565*tmp692 + tmp568*tmp694 + tmp571*tmp696 + tmp574*tmp698 - tmp577*tmp700 - tmp580*tmp702 + tmp583*tmp704;
      elMat(1,5) = tmp586*tmp684 - tmp589*tmp686 + tmp592*tmp688 + tmp595*tmp690 - tmp598*tmp692 + tmp601*tmp694 + tmp604*tmp696 + tmp607*tmp698 - tmp610*tmp700 - tmp613*tmp702 + tmp616*tmp704;
      elMat(1,6) = tmp619*tmp684 - tmp622*tmp686 + tmp625*tmp688 + tmp628*tmp690 - tmp631*tmp692 + tmp634*tmp694 + tmp637*tmp696 + tmp640*tmp698 - tmp643*tmp700 - tmp646*tmp702 + tmp649*tmp704;
      elMat(1,7) = tmp650*tmp684 - tmp651*tmp686 + tmp652*tmp688 + tmp653*tmp690 - tmp654*tmp692 + tmp655*tmp694 + tmp656*tmp696 + tmp657*tmp698 - tmp658*tmp700 - tmp659*tmp702 + tmp660*tmp704;
      elMat(1,8) = tmp661*tmp684 - tmp662*tmp686 + tmp663*tmp688 + tmp664*tmp690 - tmp665*tmp692 + tmp666*tmp694 + tmp667*tmp696 + tmp668*tmp698 - tmp669*tmp700 - tmp670*tmp702 + tmp671*tmp704;
      elMat(1,9) = tmp672*tmp684 - tmp673*tmp686 + tmp674*tmp688 + tmp675*tmp690 - tmp676*tmp692 + tmp677*tmp694 + tmp678*tmp696 + tmp679*tmp698 - tmp680*tmp700 - tmp681*tmp702 + tmp682*tmp704;
      elMat(2,0) = tmp102*tmp708 + tmp144*tmp710 - tmp186*tmp712 + tmp228*tmp714 - tmp270*tmp716 - tmp308*tmp718 + tmp347*tmp720 - tmp385*tmp722 + tmp424*tmp724 - tmp466*tmp726 + tmp47*tmp706;
      elMat(2,1) = -0.0041470891910238041*tmp485*tmp705 + 0.008324951843965811*tmp487*tmp707 - 0.001100936202251903*tmp489*tmp709 + 0.0034227212415181688*tmp491*tmp711 + 0.0073573503010591077*tmp493*tmp713 + 0.00018203655806882805*tmp495*tmp715 + 0.0047025085100984255*tmp497*tmp717 - 0.00437157426475263*tmp499*tmp719 - 0.0045363353981484533*tmp501*tmp721 + 0.0035467343920440879*tmp503*tmp723 + 0.0088418544316446034*tmp505*tmp725;
      elMat(2,2) = -0.0038919722684040777*tmp507*tmp705 - 0.0027930789545792005*tmp509*tmp707 - 0.00039571971527360629*tmp511*tmp709 - 0.001230284958034916*tmp513*tmp711 - 0.0058853846381537785*tmp515*tmp713 - 0.0010193621528212606*tmp517*tmp715 - 0.011231211184168578*tmp519*tmp717 - 0.0082018055230425203*tmp521*tmp719 - 0.0041338618456657665*tmp523*tmp721 - 0.0041207040742425758*tmp525*tmp723 - 0.023763281352280435*tmp527*tmp725;
      elMat(2,3) = 0.011789990551396352*tmp529*tmp705 - 0.003013509137065063*tmp531*tmp707 - 0.0012424476756148744*tmp533*tmp709 - 0.0010543683966735859*tmp535*tmp711 + 0.0041807396467460484*tmp537*tmp713 + 0.0023064709390845928*tmp539*tmp715 - 0.0031271283208865507*tmp541*tmp717 + 0.0019225556156211496*tmp543*tmp719 + 0.0043053566332700976*tmp545*tmp721 - 0.0042372018434979264*tmp547*tmp723 + 0.010391764209842001*tmp549*tmp725;
      elMat(2,4) = tmp553*tmp706 + tmp556*tmp708 + tmp559*tmp710 - tmp562*tmp712 + tmp565*tmp714 - tmp568*tmp716 - tmp571*tmp718 + tmp574*tmp720 - tmp577*tmp722 + tmp580*tmp724 - tmp583*tmp726;
      elMat(2,5) = tmp586*tmp706 + tmp589*tmp708 + tmp592*tmp710 - tmp595*tmp712 + tmp598*tmp714 - tmp601*tmp716 - tmp604*tmp718 + tmp607*tmp720 - tmp610*tmp722 + tmp613*tmp724 - tmp616*tmp726;
      elMat(2,6) = tmp619*tmp706 + tmp622*tmp708 + tmp625*tmp710 - tmp628*tmp712 + tmp631*tmp714 - tmp634*tmp716 - tmp637*tmp718 + tmp640*tmp720 - tmp643*tmp722 + tmp646*tmp724 - tmp649*tmp726;
      elMat(2,7) = tmp650*tmp706 + tmp651*tmp708 + tmp652*tmp710 - tmp653*tmp712 + tmp654*tmp714 - tmp655*tmp716 - tmp656*tmp718 + tmp657*tmp720 - tmp658*tmp722 + tmp659*tmp724 - tmp660*tmp726;
      elMat(2,8) = tmp661*tmp706 + tmp662*tmp708 + tmp663*tmp710 - tmp664*tmp712 + tmp665*tmp714 - tmp666*tmp716 - tmp667*tmp718 + tmp668*tmp720 - tmp669*tmp722 + tmp670*tmp724 - tmp671*tmp726;
      elMat(2,9) = tmp672*tmp706 + tmp673*tmp708 + tmp674*tmp710 - tmp675*tmp712 + tmp676*tmp714 - tmp677*tmp716 - tmp678*tmp718 + tmp679*tmp720 - tmp680*tmp722 + tmp681*tmp724 - tmp682*tmp726;
      elMat(3,0) = tmp102*tmp730 + tmp144*tmp732 - tmp186*tmp734 - tmp228*tmp736 + tmp270*tmp738 - tmp308*tmp740 - tmp347*tmp742 + tmp385*tmp744 + tmp424*tmp746 + tmp466*tmp748 - tmp47*tmp728;
      elMat(3,1) = 0.012562818798813762*tmp485*tmp727 + 0.00898195821005612*tmp487*tmp729 - 0.003456627437787347*tmp489*tmp731 + 0.0029333115747788548*tmp491*tmp733 - 0.0052263646286142846*tmp493*tmp735 - 0.00041188701176975823*tmp495*tmp737 + 0.0013093287357882949*tmp497*tmp739 + 0.0010247249374778298*tmp499*tmp741 + 0.0047245269499351069*tmp501*tmp743 + 0.0036470052771574082*tmp503*tmp745 - 0.0038665731836137946*tmp505*tmp747;
      elMat(3,2) = 0.011789990551396352*tmp507*tmp727 - 0.003013509137065063*tmp509*tmp729 - 0.0012424476756148744*tmp511*tmp731 - 0.0010543683966735859*tmp513*tmp733 + 0.0041807396467460484*tmp515*tmp735 + 0.0023064709390845928*tmp517*tmp737 - 0.0031271283208865507*tmp519*tmp739 + 0.0019225556156211496*tmp521*tmp741 + 0.0043053566332700976*tmp523*tmp743 - 0.0042372018434979264*tmp525*tmp745 + 0.010391764209842001*tmp527*tmp747;
      elMat(3,3) = -0.035715536395385078*tmp529*tmp727 - 0.0032513357004413015*tmp531*tmp729 - 0.0039009333299794896*tmp533*tmp731 - 0.00090360587491835199*tmp535*tmp733 - 0.0029698286634596638*tmp537*tmp735 - 0.0052187617306746906*tmp539*tmp737 - 0.00087069251703458632*tmp541*tmp739 - 0.00045065931943546946*tmp543*tmp741 - 0.0044839659455667077*tmp545*tmp743 - 0.0043569931591950859*tmp547*tmp745 - 0.0045443540305762555*tmp549*tmp747;
      elMat(3,4) = -tmp553*tmp728 + tmp556*tmp730 + tmp559*tmp732 - tmp562*tmp734 - tmp565*tmp736 + tmp568*tmp738 - tmp571*tmp740 - tmp574*tmp742 + tmp577*tmp744 + tmp580*tmp746 + tmp583*tmp748;
      elMat(3,5) = -tmp586*tmp728 + tmp589*tmp730 + tmp592*tmp732 - tmp595*tmp734 - tmp598*tmp736 + tmp601*tmp738 - tmp604*tmp740 - tmp607*tmp742 + tmp610*tmp744 + tmp613*tmp746 + tmp616*tmp748;
      elMat(3,6) = -tmp619*tmp728 + tmp622*tmp730 + tmp625*tmp732 - tmp628*tmp734 - tmp631*tmp736 + tmp634*tmp738 - tmp637*tmp740 - tmp640*tmp742 + tmp643*tmp744 + tmp646*tmp746 + tmp649*tmp748;
      elMat(3,7) = -tmp650*tmp728 + tmp651*tmp730 + tmp652*tmp732 - tmp653*tmp734 - tmp654*tmp736 + tmp655*tmp738 - tmp656*tmp740 - tmp657*tmp742 + tmp658*tmp744 + tmp659*tmp746 + tmp660*tmp748;
      elMat(3,8) = -tmp661*tmp728 + tmp662*tmp730 + tmp663*tmp732 - tmp664*tmp734 - tmp665*tmp736 + tmp666*tmp738 - tmp667*tmp740 - tmp668*tmp742 + tmp669*tmp744 + tmp670*tmp746 + tmp671*tmp748;
      elMat(3,9) = -tmp672*tmp728 + tmp673*tmp730 + tmp674*tmp732 - tmp675*tmp734 - tmp676*tmp736 + tmp677*tmp738 - tmp678*tmp740 - tmp679*tmp742 + tmp680*tmp744 + tmp681*tmp746 + tmp682*tmp748;
      elMat(4,0) = -tmp102*tmp756 - tmp144*tmp760 - tmp186*tmp764 - tmp228*tmp768 - tmp270*tmp772 - tmp308*tmp776 - tmp347*tmp780 - tmp385*tmp784 - tmp424*tmp788 - tmp466*tmp792 - tmp47*tmp752;
      elMat(4,1) = tmp486*tmp751 - tmp488*tmp755 + tmp490*tmp759 + tmp492*tmp763 - tmp494*tmp767 + tmp496*tmp771 + tmp498*tmp775 + tmp500*tmp779 - tmp502*tmp783 - tmp504*tmp787 + tmp506*tmp791;
      elMat(4,2) = tmp508*tmp751 + tmp510*tmp755 + tmp512*tmp759 - tmp514*tmp763 + tmp516*tmp767 - tmp518*tmp771 - tmp520*tmp775 + tmp522*tmp779 - tmp524*tmp783 + tmp526*tmp787 - tmp528*tmp791;
      elMat(4,3) = -tmp530*tmp751 + tmp532*tmp755 + tmp534*tmp759 - tmp536*tmp763 - tmp538*tmp767 + tmp540*tmp771 - tmp542*tmp775 - tmp544*tmp779 + tmp546*tmp783 + tmp548*tmp787 + tmp550*tmp791;
      elMat(4,4) = -tmp553*tmp752 - tmp556*tmp756 - tmp559*tmp760 - tmp562*tmp764 - tmp565*tmp768 - tmp568*tmp772 - tmp571*tmp776 - tmp574*tmp780 - tmp577*tmp784 - tmp580*tmp788 - tmp583*tmp792;
      elMat(4,5) = -tmp586*tmp752 - tmp589*tmp756 - tmp592*tmp760 - tmp595*tmp764 - tmp598*tmp768 - tmp601*tmp772 - tmp604*tmp776 - tmp607*tmp780 - tmp610*tmp784 - tmp613*tmp788 - tmp616*tmp792;
      elMat(4,6) = -tmp619*tmp752 - tmp622*tmp756 - tmp625*tmp760 - tmp628*tmp764 - tmp631*tmp768 - tmp634*tmp772 - tmp637*tmp776 - tmp640*tmp780 - tmp643*tmp784 - tmp646*tmp788 - tmp649*tmp792;
      elMat(4,7) = -tmp650*tmp752 - tmp651*tmp756 - tmp652*tmp760 - tmp653*tmp764 - tmp654*tmp768 - tmp655*tmp772 - tmp656*tmp776 - tmp657*tmp780 - tmp658*tmp784 - tmp659*tmp788 - tmp660*tmp792;
      elMat(4,8) = -tmp661*tmp752 - tmp662*tmp756 - tmp663*tmp760 - tmp664*tmp764 - tmp665*tmp768 - tmp666*tmp772 - tmp667*tmp776 - tmp668*tmp780 - tmp669*tmp784 - tmp670*tmp788 - tmp671*tmp792;
      elMat(4,9) = -tmp672*tmp752 - tmp673*tmp756 - tmp674*tmp760 - tmp675*tmp764 - tmp676*tmp768 - tmp677*tmp772 - tmp678*tmp776 - tmp679*tmp780 - tmp680*tmp784 - tmp681*tmp788 - tmp682*tmp792;
      elMat(5,0) = -tmp102*tmp800 - tmp144*tmp804 - tmp186*tmp808 - tmp228*tmp812 - tmp270*tmp816 - tmp308*tmp820 - tmp347*tmp824 - tmp385*tmp828 - tmp424*tmp832 - tmp466*tmp836 - tmp47*tmp796;
      elMat(5,1) = tmp486*tmp795 - tmp488*tmp799 + tmp490*tmp803 + tmp492*tmp807 - tmp494*tmp811 + tmp496*tmp815 + tmp498*tmp819 + tmp500*tmp823 - tmp502*tmp827 - tmp504*tmp831 + tmp506*tmp835;
      elMat(5,2) = tmp508*tmp795 + tmp510*tmp799 + tmp512*tmp803 - tmp514*tmp807 + tmp516*tmp811 - tmp518*tmp815 - tmp520*tmp819 + tmp522*tmp823 - tmp524*tmp827 + tmp526*tmp831 - tmp528*tmp835;
      elMat(5,3) = -tmp530*tmp795 + tmp532*tmp799 + tmp534*tmp803 - tmp536*tmp807 - tmp538*tmp811 + tmp540*tmp815 - tmp542*tmp819 - tmp544*tmp823 + tmp546*tmp827 + tmp548*tmp831 + tmp550*tmp835;
      elMat(5,4) = -tmp553*tmp796 - tmp556*tmp800 - tmp559*tmp804 - tmp562*tmp808 - tmp565*tmp812 - tmp568*tmp816 - tmp571*tmp820 - tmp574*tmp824 - tmp577*tmp828 - tmp580*tmp832 - tmp583*tmp836;
      elMat(5,5) = -tmp586*tmp796 - tmp589*tmp800 - tmp592*tmp804 - tmp595*tmp808 - tmp598*tmp812 - tmp601*tmp816 - tmp604*tmp820 - tmp607*tmp824 - tmp610*tmp828 - tmp613*tmp832 - tmp616*tmp836;
      elMat(5,6) = -tmp619*tmp796 - tmp622*tmp800 - tmp625*tmp804 - tmp628*tmp808 - tmp631*tmp812 - tmp634*tmp816 - tmp637*tmp820 - tmp640*tmp824 - tmp643*tmp828 - tmp646*tmp832 - tmp649*tmp836;
      elMat(5,7) = -tmp650*tmp796 - tmp651*tmp800 - tmp652*tmp804 - tmp653*tmp808 - tmp654*tmp812 - tmp655*tmp816 - tmp656*tmp820 - tmp657*tmp824 - tmp658*tmp828 - tmp659*tmp832 - tmp660*tmp836;
      elMat(5,8) = -tmp661*tmp796 - tmp662*tmp800 - tmp663*tmp804 - tmp664*tmp808 - tmp665*tmp812 - tmp666*tmp816 - tmp667*tmp820 - tmp668*tmp824 - tmp669*tmp828 - tmp670*tmp832 - tmp671*tmp836;
      elMat(5,9) = -tmp672*tmp796 - tmp673*tmp800 - tmp674*tmp804 - tmp675*tmp808 - tmp676*tmp812 - tmp677*tmp816 - tmp678*tmp820 - tmp679*tmp824 - tmp680*tmp828 - tmp681*tmp832 - tmp682*tmp836;
      elMat(6,0) = -tmp102*tmp844 - tmp144*tmp848 - tmp186*tmp852 - tmp228*tmp856 - tmp270*tmp860 - tmp308*tmp864 - tmp347*tmp868 - tmp385*tmp872 - tmp424*tmp876 - tmp466*tmp880 - tmp47*tmp840;
      elMat(6,1) = tmp486*tmp839 - tmp488*tmp843 + tmp490*tmp847 + tmp492*tmp851 - tmp494*tmp855 + tmp496*tmp859 + tmp498*tmp863 + tmp500*tmp867 - tmp502*tmp871 - tmp504*tmp875 + tmp506*tmp879;
      elMat(6,2) = tmp508*tmp839 + tmp510*tmp843 + tmp512*tmp847 - tmp514*tmp851 + tmp516*tmp855 - tmp518*tmp859 - tmp520*tmp863 + tmp522*tmp867 - tmp524*tmp871 + tmp526*tmp875 - tmp528*tmp879;
      elMat(6,3) = -tmp530*tmp839 + tmp532*tmp843 + tmp534*tmp847 - tmp536*tmp851 - tmp538*tmp855 + tmp540*tmp859 - tmp542*tmp863 - tmp544*tmp867 + tmp546*tmp871 + tmp548*tmp875 + tmp550*tmp879;
      elMat(6,4) = -tmp553*tmp840 - tmp556*tmp844 - tmp559*tmp848 - tmp562*tmp852 - tmp565*tmp856 - tmp568*tmp860 - tmp571*tmp864 - tmp574*tmp868 - tmp577*tmp872 - tmp580*tmp876 - tmp583*tmp880;
      elMat(6,5) = -tmp586*tmp840 - tmp589*tmp844 - tmp592*tmp848 - tmp595*tmp852 - tmp598*tmp856 - tmp601*tmp860 - tmp604*tmp864 - tmp607*tmp868 - tmp610*tmp872 - tmp613*tmp876 - tmp616*tmp880;
      elMat(6,6) = -tmp619*tmp840 - tmp622*tmp844 - tmp625*tmp848 - tmp628*tmp852 - tmp631*tmp856 - tmp634*tmp860 - tmp637*tmp864 - tmp640*tmp868 - tmp643*tmp872 - tmp646*tmp876 - tmp649*tmp880;
      elMat(6,7) = -tmp650*tmp840 - tmp651*tmp844 - tmp652*tmp848 - tmp653*tmp852 - tmp654*tmp856 - tmp655*tmp860 - tmp656*tmp864 - tmp657*tmp868 - tmp658*tmp872 - tmp659*tmp876 - tmp660*tmp880;
      elMat(6,8) = -tmp661*tmp840 - tmp662*tmp844 - tmp663*tmp848 - tmp664*tmp852 - tmp665*tmp856 - tmp666*tmp860 - tmp667*tmp864 - tmp668*tmp868 - tmp669*tmp872 - tmp670*tmp876 - tmp671*tmp880;
      elMat(6,9) = -tmp672*tmp840 - tmp673*tmp844 - tmp674*tmp848 - tmp675*tmp852 - tmp676*tmp856 - tmp677*tmp860 - tmp678*tmp864 - tmp679*tmp868 - tmp680*tmp872 - tmp681*tmp876 - tmp682*tmp880;
      elMat(7,0) = -tmp102*tmp884 - tmp144*tmp886 - tmp186*tmp888 - tmp228*tmp890 - tmp270*tmp892 - tmp308*tmp894 - tmp347*tmp896 - tmp385*tmp898 - tmp424*tmp900 - tmp466*tmp902 - tmp47*tmp882;
      elMat(7,1) = tmp486*tmp881 - tmp488*tmp883 + tmp490*tmp885 + tmp492*tmp887 - tmp494*tmp889 + tmp496*tmp891 + tmp498*tmp893 + tmp500*tmp895 - tmp502*tmp897 - tmp504*tmp899 + tmp506*tmp901;
      elMat(7,2) = tmp508*tmp881 + tmp510*tmp883 + tmp512*tmp885 - tmp514*tmp887 + tmp516*tmp889 - tmp518*tmp891 - tmp520*tmp893 + tmp522*tmp895 - tmp524*tmp897 + tmp526*tmp899 - tmp528*tmp901;
      elMat(7,3) = -tmp530*tmp881 + tmp532*tmp883 + tmp534*tmp885 - tmp536*tmp887 - tmp538*tmp889 + tmp540*tmp891 - tmp542*tmp893 - tmp544*tmp895 + tmp546*tmp897 + tmp548*tmp899 + tmp550*tmp901;
      elMat(7,4) = -tmp553*tmp882 - tmp556*tmp884 - tmp559*tmp886 - tmp562*tmp888 - tmp565*tmp890 - tmp568*tmp892 - tmp571*tmp894 - tmp574*tmp896 - tmp577*tmp898 - tmp580*tmp900 - tmp583*tmp902;
      elMat(7,5) = -tmp586*tmp882 - tmp589*tmp884 - tmp592*tmp886 - tmp595*tmp888 - tmp598*tmp890 - tmp601*tmp892 - tmp604*tmp894 - tmp607*tmp896 - tmp610*tmp898 - tmp613*tmp900 - tmp616*tmp902;
      elMat(7,6) = -tmp619*tmp882 - tmp622*tmp884 - tmp625*tmp886 - tmp628*tmp888 - tmp631*tmp890 - tmp634*tmp892 - tmp637*tmp894 - tmp640*tmp896 - tmp643*tmp898 - tmp646*tmp900 - tmp649*tmp902;
      elMat(7,7) = -tmp650*tmp882 - tmp651*tmp884 - tmp652*tmp886 - tmp653*tmp888 - tmp654*tmp890 - tmp655*tmp892 - tmp656*tmp894 - tmp657*tmp896 - tmp658*tmp898 - tmp659*tmp900 - tmp660*tmp902;
      elMat(7,8) = -tmp661*tmp882 - tmp662*tmp884 - tmp663*tmp886 - tmp664*tmp888 - tmp665*tmp890 - tmp666*tmp892 - tmp667*tmp894 - tmp668*tmp896 - tmp669*tmp898 - tmp670*tmp900 - tmp671*tmp902;
      elMat(7,9) = -tmp672*tmp882 - tmp673*tmp884 - tmp674*tmp886 - tmp675*tmp888 - tmp676*tmp890 - tmp677*tmp892 - tmp678*tmp894 - tmp679*tmp896 - tmp680*tmp898 - tmp681*tmp900 - tmp682*tmp902;
      elMat(8,0) = -tmp102*tmp906 - tmp144*tmp908 - tmp186*tmp910 - tmp228*tmp912 - tmp270*tmp914 - tmp308*tmp916 - tmp347*tmp918 - tmp385*tmp920 - tmp424*tmp922 - tmp466*tmp924 - tmp47*tmp904;
      elMat(8,1) = tmp486*tmp903 - tmp488*tmp905 + tmp490*tmp907 + tmp492*tmp909 - tmp494*tmp911 + tmp496*tmp913 + tmp498*tmp915 + tmp500*tmp917 - tmp502*tmp919 - tmp504*tmp921 + tmp506*tmp923;
      elMat(8,2) = tmp508*tmp903 + tmp510*tmp905 + tmp512*tmp907 - tmp514*tmp909 + tmp516*tmp911 - tmp518*tmp913 - tmp520*tmp915 + tmp522*tmp917 - tmp524*tmp919 + tmp526*tmp921 - tmp528*tmp923;
      elMat(8,3) = -tmp530*tmp903 + tmp532*tmp905 + tmp534*tmp907 - tmp536*tmp909 - tmp538*tmp911 + tmp540*tmp913 - tmp542*tmp915 - tmp544*tmp917 + tmp546*tmp919 + tmp548*tmp921 + tmp550*tmp923;
      elMat(8,4) = -tmp553*tmp904 - tmp556*tmp906 - tmp559*tmp908 - tmp562*tmp910 - tmp565*tmp912 - tmp568*tmp914 - tmp571*tmp916 - tmp574*tmp918 - tmp577*tmp920 - tmp580*tmp922 - tmp583*tmp924;
      elMat(8,5) = -tmp586*tmp904 - tmp589*tmp906 - tmp592*tmp908 - tmp595*tmp910 - tmp598*tmp912 - tmp601*tmp914 - tmp604*tmp916 - tmp607*tmp918 - tmp610*tmp920 - tmp613*tmp922 - tmp616*tmp924;
      elMat(8,6) = -tmp619*tmp904 - tmp622*tmp906 - tmp625*tmp908 - tmp628*tmp910 - tmp631*tmp912 - tmp634*tmp914 - tmp637*tmp916 - tmp640*tmp918 - tmp643*tmp920 - tmp646*tmp922 - tmp649*tmp924;
      elMat(8,7) = -tmp650*tmp904 - tmp651*tmp906 - tmp652*tmp908 - tmp653*tmp910 - tmp654*tmp912 - tmp655*tmp914 - tmp656*tmp916 - tmp657*tmp918 - tmp658*tmp920 - tmp659*tmp922 - tmp660*tmp924;
      elMat(8,8) = -tmp661*tmp904 - tmp662*tmp906 - tmp663*tmp908 - tmp664*tmp910 - tmp665*tmp912 - tmp666*tmp914 - tmp667*tmp916 - tmp668*tmp918 - tmp669*tmp920 - tmp670*tmp922 - tmp671*tmp924;
      elMat(8,9) = -tmp672*tmp904 - tmp673*tmp906 - tmp674*tmp908 - tmp675*tmp910 - tmp676*tmp912 - tmp677*tmp914 - tmp678*tmp916 - tmp679*tmp918 - tmp680*tmp920 - tmp681*tmp922 - tmp682*tmp924;
      elMat(9,0) = -tmp102*tmp928 - tmp144*tmp930 - tmp186*tmp932 - tmp228*tmp934 - tmp270*tmp936 - tmp308*tmp938 - tmp347*tmp940 - tmp385*tmp942 - tmp424*tmp944 - tmp466*tmp946 - tmp47*tmp926;
      elMat(9,1) = tmp486*tmp925 - tmp488*tmp927 + tmp490*tmp929 + tmp492*tmp931 - tmp494*tmp933 + tmp496*tmp935 + tmp498*tmp937 + tmp500*tmp939 - tmp502*tmp941 - tmp504*tmp943 + tmp506*tmp945;
      elMat(9,2) = tmp508*tmp925 + tmp510*tmp927 + tmp512*tmp929 - tmp514*tmp931 + tmp516*tmp933 - tmp518*tmp935 - tmp520*tmp937 + tmp522*tmp939 - tmp524*tmp941 + tmp526*tmp943 - tmp528*tmp945;
      elMat(9,3) = -tmp530*tmp925 + tmp532*tmp927 + tmp534*tmp929 - tmp536*tmp931 - tmp538*tmp933 + tmp540*tmp935 - tmp542*tmp937 - tmp544*tmp939 + tmp546*tmp941 + tmp548*tmp943 + tmp550*tmp945;
      elMat(9,4) = -tmp553*tmp926 - tmp556*tmp928 - tmp559*tmp930 - tmp562*tmp932 - tmp565*tmp934 - tmp568*tmp936 - tmp571*tmp938 - tmp574*tmp940 - tmp577*tmp942 - tmp580*tmp944 - tmp583*tmp946;
      elMat(9,5) = -tmp586*tmp926 - tmp589*tmp928 - tmp592*tmp930 - tmp595*tmp932 - tmp598*tmp934 - tmp601*tmp936 - tmp604*tmp938 - tmp607*tmp940 - tmp610*tmp942 - tmp613*tmp944 - tmp616*tmp946;
      elMat(9,6) = -tmp619*tmp926 - tmp622*tmp928 - tmp625*tmp930 - tmp628*tmp932 - tmp631*tmp934 - tmp634*tmp936 - tmp637*tmp938 - tmp640*tmp940 - tmp643*tmp942 - tmp646*tmp944 - tmp649*tmp946;
      elMat(9,7) = -tmp650*tmp926 - tmp651*tmp928 - tmp652*tmp930 - tmp653*tmp932 - tmp654*tmp934 - tmp655*tmp936 - tmp656*tmp938 - tmp657*tmp940 - tmp658*tmp942 - tmp659*tmp944 - tmp660*tmp946;
      elMat(9,8) = -tmp661*tmp926 - tmp662*tmp928 - tmp663*tmp930 - tmp664*tmp932 - tmp665*tmp934 - tmp666*tmp936 - tmp667*tmp938 - tmp668*tmp940 - tmp669*tmp942 - tmp670*tmp944 - tmp671*tmp946;
      elMat(9,9) = -tmp672*tmp926 - tmp673*tmp928 - tmp674*tmp930 - tmp675*tmp932 - tmp676*tmp934 - tmp677*tmp936 - tmp678*tmp938 - tmp679*tmp940 - tmp680*tmp942 - tmp681*tmp944 - tmp682*tmp946;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_1_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = -J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][1] + coords[3][1];
      const real_t tmp10 = -coords[0][2] + coords[1][2];
      const real_t tmp11 = -coords[0][0] + coords[3][0];
      const real_t tmp12 = -coords[0][2] + coords[2][2];
      const real_t tmp13 = tmp12*tmp4;
      const real_t tmp14 = tmp0*tmp9;
      const real_t tmp15 = tmp10*tmp11;
      const real_t tmp16 = 1.0 / (-tmp1*tmp15 + tmp10*tmp3*tmp9 + tmp11*tmp13 - tmp12*tmp14 + tmp2*tmp8 - tmp5*tmp8);
      const real_t tmp17 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp18 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp19 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp17*J_B_1(2, 2) + tmp18*J_B_1(2, 0) - tmp19*J_B_1(2, 1) - tmp20*J_B_1(2, 2) - tmp21*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp16*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = tmp11*tmp4 - tmp14;
      const real_t tmp28 = tmp25*tmp27;
      const real_t tmp29 = -tmp0*tmp12 + tmp10*tmp3;
      const real_t tmp30 = J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp31 = tmp24*tmp30;
      const real_t tmp32 = tmp29*tmp31;
      const real_t tmp33 = tmp0*tmp8 - tmp15;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = -tmp1*tmp11 + tmp3*tmp9;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp11*tmp12 - tmp3*tmp8;
      const real_t tmp38 = tmp31*tmp37;
      const real_t tmp39 = -tmp1*tmp10 + tmp13;
      const real_t tmp40 = -J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp41 = tmp24*tmp40;
      const real_t tmp42 = tmp39*tmp41;
      const real_t tmp43 = tmp10*tmp9 - tmp4*tmp8;
      const real_t tmp44 = tmp41*tmp43;
      const real_t tmp45 = tmp1*tmp8 - tmp12*tmp9;
      const real_t tmp46 = tmp41*tmp45;
      const real_t tmp47 = coords[0][0]*coords[1][1];
      const real_t tmp48 = coords[0][0]*coords[1][2];
      const real_t tmp49 = coords[2][1]*coords[3][2];
      const real_t tmp50 = coords[0][1]*coords[1][0];
      const real_t tmp51 = coords[0][1]*coords[1][2];
      const real_t tmp52 = coords[2][2]*coords[3][0];
      const real_t tmp53 = coords[0][2]*coords[1][0];
      const real_t tmp54 = coords[0][2]*coords[1][1];
      const real_t tmp55 = coords[2][0]*coords[3][1];
      const real_t tmp56 = coords[2][2]*coords[3][1];
      const real_t tmp57 = coords[2][0]*coords[3][2];
      const real_t tmp58 = coords[2][1]*coords[3][0];
      const real_t tmp59 = std::abs(coords[0][0]*tmp49 - coords[0][0]*tmp56 + coords[0][1]*tmp52 - coords[0][1]*tmp57 + coords[0][2]*tmp55 - coords[0][2]*tmp58 - coords[1][0]*tmp49 + coords[1][0]*tmp56 - coords[1][1]*tmp52 + coords[1][1]*tmp57 - coords[1][2]*tmp55 + coords[1][2]*tmp58 + coords[2][0]*tmp51 - coords[2][0]*tmp54 - coords[2][1]*tmp48 + coords[2][1]*tmp53 + coords[2][2]*tmp47 - coords[2][2]*tmp50 - coords[3][0]*tmp51 + coords[3][0]*tmp54 + coords[3][1]*tmp48 - coords[3][1]*tmp53 - coords[3][2]*tmp47 + coords[3][2]*tmp50);
      const real_t tmp60 = 0.55279693041046674*tmp24;
      const real_t tmp61 = tmp60*(tmp17 - tmp20);
      const real_t tmp62 = tmp60*(-tmp19 + J_B_1(0, 2)*J_B_1(1, 0));
      const real_t tmp63 = tmp60*(tmp18 - tmp21);
      const real_t tmp64 = tmp59*(tmp27*tmp61 + tmp29*tmp62 + tmp33*tmp62 + tmp35*tmp61 + tmp37*tmp62 + tmp39*tmp63 + tmp43*tmp63 + tmp45*tmp63 + tmp6*tmp61)*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = 0.011829781572832234*tmp64;
      const real_t tmp66 = -J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp67 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp68 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp69 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp70 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp71 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp72 = tmp67*J_B_10(2, 2) + tmp68*J_B_10(2, 0) - tmp69*J_B_10(2, 1) - tmp70*J_B_10(2, 2) - tmp71*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp73 = 1.0 / (tmp72);
      const real_t tmp74 = tmp16*tmp73;
      const real_t tmp75 = tmp66*tmp74;
      const real_t tmp76 = tmp6*tmp75;
      const real_t tmp77 = tmp27*tmp75;
      const real_t tmp78 = J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp79 = tmp74*tmp78;
      const real_t tmp80 = tmp29*tmp79;
      const real_t tmp81 = tmp33*tmp79;
      const real_t tmp82 = tmp35*tmp75;
      const real_t tmp83 = tmp37*tmp79;
      const real_t tmp84 = -J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp85 = tmp74*tmp84;
      const real_t tmp86 = tmp39*tmp85;
      const real_t tmp87 = tmp43*tmp85;
      const real_t tmp88 = tmp45*tmp85;
      const real_t tmp89 = 0.60805118540288361*tmp74;
      const real_t tmp90 = tmp89*(tmp67 - tmp70);
      const real_t tmp91 = tmp89*(-tmp69 + J_B_10(0, 2)*J_B_10(1, 0));
      const real_t tmp92 = tmp89*(tmp68 - tmp71);
      const real_t tmp93 = tmp59*(tmp27*tmp90 + tmp29*tmp91 + tmp33*tmp91 + tmp35*tmp90 + tmp37*tmp91 + tmp39*tmp92 + tmp43*tmp92 + tmp45*tmp92 + tmp6*tmp90)*std::abs(tmp72)*ScalarCoeff0_10;
      const real_t tmp94 = 0.0061414854617707626*tmp93;
      const real_t tmp95 = -J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp96 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp97 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp98 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp99 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp100 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp101 = -tmp100*J_B_11(2, 0) + tmp96*J_B_11(2, 2) + tmp97*J_B_11(2, 0) - tmp98*J_B_11(2, 1) - tmp99*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp102 = 1.0 / (tmp101);
      const real_t tmp103 = tmp102*tmp16;
      const real_t tmp104 = tmp103*tmp95;
      const real_t tmp105 = tmp104*tmp6;
      const real_t tmp106 = tmp104*tmp27;
      const real_t tmp107 = J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp108 = tmp103*tmp107;
      const real_t tmp109 = tmp108*tmp29;
      const real_t tmp110 = tmp108*tmp33;
      const real_t tmp111 = tmp104*tmp35;
      const real_t tmp112 = tmp108*tmp37;
      const real_t tmp113 = -J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp114 = tmp103*tmp113;
      const real_t tmp115 = tmp114*tmp39;
      const real_t tmp116 = tmp114*tmp43;
      const real_t tmp117 = tmp114*tmp45;
      const real_t tmp118 = 2.0850189307815055*tmp103;
      const real_t tmp119 = tmp118*(tmp96 - tmp99);
      const real_t tmp120 = tmp118*(-tmp98 + J_B_11(0, 2)*J_B_11(1, 0));
      const real_t tmp121 = tmp118*(-tmp100 + tmp97);
      const real_t tmp122 = tmp59*(-tmp119*tmp27 - tmp119*tmp35 - tmp119*tmp6 - tmp120*tmp29 - tmp120*tmp33 - tmp120*tmp37 - tmp121*tmp39 - tmp121*tmp43 - tmp121*tmp45)*std::abs(tmp101)*ScalarCoeff0_11;
      const real_t tmp123 = 0.0043612323249822204*tmp122;
      const real_t tmp124 = -J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp125 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp126 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp127 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp128 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp129 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp130 = tmp125*J_B_2(2, 2) + tmp126*J_B_2(2, 0) - tmp127*J_B_2(2, 1) - tmp128*J_B_2(2, 2) - tmp129*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp131 = 1.0 / (tmp130);
      const real_t tmp132 = tmp131*tmp16;
      const real_t tmp133 = tmp124*tmp132;
      const real_t tmp134 = tmp133*tmp6;
      const real_t tmp135 = tmp133*tmp27;
      const real_t tmp136 = J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp137 = tmp132*tmp136;
      const real_t tmp138 = tmp137*tmp29;
      const real_t tmp139 = tmp137*tmp33;
      const real_t tmp140 = tmp133*tmp35;
      const real_t tmp141 = tmp137*tmp37;
      const real_t tmp142 = -J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp143 = tmp132*tmp142;
      const real_t tmp144 = tmp143*tmp39;
      const real_t tmp145 = tmp143*tmp43;
      const real_t tmp146 = tmp143*tmp45;
      const real_t tmp147 = 0.29317593934991559*tmp132;
      const real_t tmp148 = tmp147*(tmp125 - tmp128);
      const real_t tmp149 = tmp147*(-tmp127 + J_B_2(0, 2)*J_B_2(1, 0));
      const real_t tmp150 = tmp147*(tmp126 - tmp129);
      const real_t tmp151 = tmp59*(-tmp148*tmp27 - tmp148*tmp35 - tmp148*tmp6 - tmp149*tmp29 - tmp149*tmp33 - tmp149*tmp37 - tmp150*tmp39 - tmp150*tmp43 - tmp150*tmp45)*std::abs(tmp130)*ScalarCoeff0_2;
      const real_t tmp152 = 0.012248248047610821*tmp151;
      const real_t tmp153 = -J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp154 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp155 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp156 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp157 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp158 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp159 = tmp154*J_B_3(2, 2) + tmp155*J_B_3(2, 0) - tmp156*J_B_3(2, 1) - tmp157*J_B_3(2, 2) - tmp158*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp160 = 1.0 / (tmp159);
      const real_t tmp161 = tmp16*tmp160;
      const real_t tmp162 = tmp153*tmp161;
      const real_t tmp163 = tmp162*tmp6;
      const real_t tmp164 = tmp162*tmp27;
      const real_t tmp165 = J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp166 = tmp161*tmp165;
      const real_t tmp167 = tmp166*tmp29;
      const real_t tmp168 = tmp166*tmp33;
      const real_t tmp169 = tmp162*tmp35;
      const real_t tmp170 = tmp166*tmp37;
      const real_t tmp171 = -J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp172 = tmp161*tmp171;
      const real_t tmp173 = tmp172*tmp39;
      const real_t tmp174 = tmp172*tmp43;
      const real_t tmp175 = tmp172*tmp45;
      const real_t tmp176 = 0.56151037867223397*tmp161;
      const real_t tmp177 = tmp176*(tmp154 - tmp157);
      const real_t tmp178 = tmp176*(-tmp156 + J_B_3(0, 2)*J_B_3(1, 0));
      const real_t tmp179 = tmp176*(tmp155 - tmp158);
      const real_t tmp180 = tmp59*(tmp177*tmp27 + tmp177*tmp35 + tmp177*tmp6 + tmp178*tmp29 + tmp178*tmp33 + tmp178*tmp37 + tmp179*tmp39 + tmp179*tmp43 + tmp179*tmp45)*std::abs(tmp159)*ScalarCoeff0_3;
      const real_t tmp181 = 0.017219568446249611*tmp180;
      const real_t tmp182 = -J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp183 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp184 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp185 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp186 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp187 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp188 = tmp183*J_B_4(2, 2) + tmp184*J_B_4(2, 0) - tmp185*J_B_4(2, 1) - tmp186*J_B_4(2, 2) - tmp187*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp189 = 1.0 / (tmp188);
      const real_t tmp190 = tmp16*tmp189;
      const real_t tmp191 = tmp182*tmp190;
      const real_t tmp192 = tmp191*tmp6;
      const real_t tmp193 = tmp191*tmp27;
      const real_t tmp194 = J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp195 = tmp190*tmp194;
      const real_t tmp196 = tmp195*tmp29;
      const real_t tmp197 = tmp195*tmp33;
      const real_t tmp198 = tmp191*tmp35;
      const real_t tmp199 = tmp195*tmp37;
      const real_t tmp200 = -J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp201 = tmp190*tmp200;
      const real_t tmp202 = tmp201*tmp39;
      const real_t tmp203 = tmp201*tmp43;
      const real_t tmp204 = tmp201*tmp45;
      const real_t tmp205 = 0.31389282688815401*tmp190;
      const real_t tmp206 = tmp205*(tmp183 - tmp186);
      const real_t tmp207 = tmp205*(-tmp185 + J_B_4(0, 2)*J_B_4(1, 0));
      const real_t tmp208 = tmp205*(tmp184 - tmp187);
      const real_t tmp209 = tmp59*(-tmp206*tmp27 - tmp206*tmp35 - tmp206*tmp6 - tmp207*tmp29 - tmp207*tmp33 - tmp207*tmp37 - tmp208*tmp39 - tmp208*tmp43 - tmp208*tmp45)*std::abs(tmp188)*ScalarCoeff0_4;
      const real_t tmp210 = 0.021490090227737114*tmp209;
      const real_t tmp211 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp212 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp213 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp214 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp215 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp216 = tmp211*J_B_5(2, 2) + tmp212*J_B_5(2, 0) - tmp213*J_B_5(2, 1) - tmp214*J_B_5(2, 2) - tmp215*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp217 = tmp16/tmp216;
      const real_t tmp218 = tmp217*(-J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0));
      const real_t tmp219 = tmp218*tmp6;
      const real_t tmp220 = tmp218*tmp27;
      const real_t tmp221 = tmp217*(J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0));
      const real_t tmp222 = tmp221*tmp29;
      const real_t tmp223 = tmp221*tmp33;
      const real_t tmp224 = tmp218*tmp35;
      const real_t tmp225 = tmp221*tmp37;
      const real_t tmp226 = tmp217*(-J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1));
      const real_t tmp227 = tmp226*tmp39;
      const real_t tmp228 = tmp226*tmp43;
      const real_t tmp229 = tmp226*tmp45;
      const real_t tmp230 = 0.99043597017024343*tmp217;
      const real_t tmp231 = tmp230*(tmp211 - tmp214);
      const real_t tmp232 = tmp230*(-tmp213 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp233 = tmp230*(tmp212 - tmp215);
      const real_t tmp234 = tmp59*(tmp231*tmp27 + tmp231*tmp35 + tmp231*tmp6 + tmp232*tmp29 + tmp232*tmp33 + tmp232*tmp37 + tmp233*tmp39 + tmp233*tmp43 + tmp233*tmp45)*std::abs(tmp216)*ScalarCoeff0_5;
      const real_t tmp235 = 0.0084625239161731543*tmp234;
      const real_t tmp236 = -J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp237 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp238 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp239 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp240 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp241 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp242 = tmp237*J_B_6(2, 2) + tmp238*J_B_6(2, 0) - tmp239*J_B_6(2, 1) - tmp240*J_B_6(2, 2) - tmp241*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp243 = 1.0 / (tmp242);
      const real_t tmp244 = tmp16*tmp243;
      const real_t tmp245 = tmp236*tmp244;
      const real_t tmp246 = tmp245*tmp6;
      const real_t tmp247 = tmp245*tmp27;
      const real_t tmp248 = J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp249 = tmp244*tmp248;
      const real_t tmp250 = tmp249*tmp29;
      const real_t tmp251 = tmp249*tmp33;
      const real_t tmp252 = tmp245*tmp35;
      const real_t tmp253 = tmp249*tmp37;
      const real_t tmp254 = -J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp255 = tmp244*tmp254;
      const real_t tmp256 = tmp255*tmp39;
      const real_t tmp257 = tmp255*tmp43;
      const real_t tmp258 = tmp255*tmp45;
      const real_t tmp259 = 1.2518910405721839*tmp244;
      const real_t tmp260 = tmp259*(tmp237 - tmp240);
      const real_t tmp261 = tmp259*(-tmp239 + J_B_6(0, 2)*J_B_6(1, 0));
      const real_t tmp262 = tmp259*(tmp238 - tmp241);
      const real_t tmp263 = tmp59*(-tmp260*tmp27 - tmp260*tmp35 - tmp260*tmp6 - tmp261*tmp29 - tmp261*tmp33 - tmp261*tmp37 - tmp262*tmp39 - tmp262*tmp43 - tmp262*tmp45)*std::abs(tmp242)*ScalarCoeff0_6;
      const real_t tmp264 = 0.0088251866742250357*tmp263;
      const real_t tmp265 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp266 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp267 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp268 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp269 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp270 = tmp265*J_B_7(2, 2) + tmp266*J_B_7(2, 0) - tmp267*J_B_7(2, 1) - tmp268*J_B_7(2, 2) - tmp269*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp271 = tmp16/tmp270;
      const real_t tmp272 = tmp271*(-J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0));
      const real_t tmp273 = tmp272*tmp6;
      const real_t tmp274 = tmp27*tmp272;
      const real_t tmp275 = tmp271*(J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0));
      const real_t tmp276 = tmp275*tmp29;
      const real_t tmp277 = tmp275*tmp33;
      const real_t tmp278 = tmp272*tmp35;
      const real_t tmp279 = tmp275*tmp37;
      const real_t tmp280 = tmp271*(-J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1));
      const real_t tmp281 = tmp280*tmp39;
      const real_t tmp282 = tmp280*tmp43;
      const real_t tmp283 = tmp280*tmp45;
      const real_t tmp284 = 0.77270393148826533*tmp271;
      const real_t tmp285 = tmp284*(tmp265 - tmp268);
      const real_t tmp286 = tmp284*(-tmp267 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp287 = tmp284*(tmp266 - tmp269);
      const real_t tmp288 = tmp59*(tmp27*tmp285 + tmp285*tmp35 + tmp285*tmp6 + tmp286*tmp29 + tmp286*tmp33 + tmp286*tmp37 + tmp287*tmp39 + tmp287*tmp43 + tmp287*tmp45)*std::abs(tmp270)*ScalarCoeff0_7;
      const real_t tmp289 = 0.0077188851041817101*tmp288;
      const real_t tmp290 = -J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp291 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp292 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp293 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp294 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp295 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp296 = tmp291*J_B_8(2, 2) + tmp292*J_B_8(2, 0) - tmp293*J_B_8(2, 1) - tmp294*J_B_8(2, 2) - tmp295*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp297 = 1.0 / (tmp296);
      const real_t tmp298 = tmp16*tmp297;
      const real_t tmp299 = tmp290*tmp298;
      const real_t tmp300 = tmp299*tmp6;
      const real_t tmp301 = tmp27*tmp299;
      const real_t tmp302 = J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp303 = tmp298*tmp302;
      const real_t tmp304 = tmp29*tmp303;
      const real_t tmp305 = tmp303*tmp33;
      const real_t tmp306 = tmp299*tmp35;
      const real_t tmp307 = tmp303*tmp37;
      const real_t tmp308 = -J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp309 = tmp298*tmp308;
      const real_t tmp310 = tmp309*tmp39;
      const real_t tmp311 = tmp309*tmp43;
      const real_t tmp312 = tmp309*tmp45;
      const real_t tmp313 = 0.9184440441026207*tmp298;
      const real_t tmp314 = tmp313*(tmp291 - tmp294);
      const real_t tmp315 = tmp313*(-tmp293 + J_B_8(0, 2)*J_B_8(1, 0));
      const real_t tmp316 = tmp313*(tmp292 - tmp295);
      const real_t tmp317 = tmp59*(-tmp27*tmp314 - tmp29*tmp315 - tmp314*tmp35 - tmp314*tmp6 - tmp315*tmp33 - tmp315*tmp37 - tmp316*tmp39 - tmp316*tmp43 - tmp316*tmp45)*std::abs(tmp296)*ScalarCoeff0_8;
      const real_t tmp318 = 0.006659242794062166*tmp317;
      const real_t tmp319 = -J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp320 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp321 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp322 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp323 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp324 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp325 = tmp320*J_B_9(2, 2) + tmp321*J_B_9(2, 0) - tmp322*J_B_9(2, 1) - tmp323*J_B_9(2, 2) - tmp324*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp326 = 1.0 / (tmp325);
      const real_t tmp327 = tmp16*tmp326;
      const real_t tmp328 = tmp319*tmp327;
      const real_t tmp329 = tmp328*tmp6;
      const real_t tmp330 = tmp27*tmp328;
      const real_t tmp331 = J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp332 = tmp327*tmp331;
      const real_t tmp333 = tmp29*tmp332;
      const real_t tmp334 = tmp33*tmp332;
      const real_t tmp335 = tmp328*tmp35;
      const real_t tmp336 = tmp332*tmp37;
      const real_t tmp337 = -J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp338 = tmp327*tmp337;
      const real_t tmp339 = tmp338*tmp39;
      const real_t tmp340 = tmp338*tmp43;
      const real_t tmp341 = tmp338*tmp45;
      const real_t tmp342 = 0.37454442704241986*tmp327;
      const real_t tmp343 = tmp342*(tmp320 - tmp323);
      const real_t tmp344 = tmp342*(-tmp322 + J_B_9(0, 2)*J_B_9(1, 0));
      const real_t tmp345 = tmp342*(tmp321 - tmp324);
      const real_t tmp346 = tmp59*(tmp27*tmp343 + tmp29*tmp344 + tmp33*tmp344 + tmp343*tmp35 + tmp343*tmp6 + tmp344*tmp37 + tmp345*tmp39 + tmp345*tmp43 + tmp345*tmp45)*std::abs(tmp325)*ScalarCoeff0_9;
      const real_t tmp347 = 0.0061548665412862651*tmp346;
      const real_t tmp348 = 2.7375616618121592*tmp28 + 2.7375616618121592*tmp34 + 2.7375616618121592*tmp44;
      const real_t tmp349 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp32 + 0.42641669024797446*tmp42;
      const real_t tmp350 = 0.2723974837528258*tmp77 + 0.2723974837528258*tmp81 + 0.2723974837528258*tmp87;
      const real_t tmp351 = 0.3256196736114374*tmp76 + 0.3256196736114374*tmp80 + 0.3256196736114374*tmp86;
      const real_t tmp352 = 0.054242807519210512*tmp106 + 0.054242807519210512*tmp110 + 0.054242807519210512*tmp116;
      const real_t tmp353 = 0.69877623478892303*tmp105 + 0.69877623478892303*tmp109 + 0.69877623478892303*tmp115;
      const real_t tmp354 = 1.2716142408535775*tmp135 + 1.2716142408535775*tmp139 + 1.2716142408535775*tmp145;
      const real_t tmp355 = 1.3169318389705873*tmp134 + 1.3169318389705873*tmp138 + 1.3169318389705873*tmp144;
      const real_t tmp356 = 1.4152929568371884*tmp164 + 1.4152929568371884*tmp168 + 1.4152929568371884*tmp174;
      const real_t tmp357 = 0.41537646564397157*tmp163 + 0.41537646564397157*tmp167 + 0.41537646564397157*tmp173;
      const real_t tmp358 = 0.50720690366156718*tmp193 + 0.50720690366156718*tmp197 + 0.50720690366156718*tmp203;
      const real_t tmp359 = 1.2177936097379878*tmp192 + 1.2177936097379878*tmp196 + 1.2177936097379878*tmp202;
      const real_t tmp360 = 1.3207616593498592*tmp220 + 1.3207616593498592*tmp223 + 1.3207616593498592*tmp228;
      const real_t tmp361 = 2.1520288156647434*tmp219 + 2.1520288156647434*tmp222 + 2.1520288156647434*tmp227;
      const real_t tmp362 = 1.2259759537187613*tmp247 + 1.2259759537187613*tmp251 + 1.2259759537187613*tmp257;
      const real_t tmp363 = 0.035965040373342916*tmp246 + 0.035965040373342916*tmp250 + 0.035965040373342916*tmp256;
      const real_t tmp364 = 0.23782646519773576*tmp274 + 0.23782646519773576*tmp277 + 0.23782646519773576*tmp282;
      const real_t tmp365 = 1.7318139619254227*tmp273 + 1.7318139619254227*tmp276 + 1.7318139619254227*tmp281;
      const real_t tmp366 = 0.19112574223634571*tmp301 + 0.19112574223634571*tmp305 + 0.19112574223634571*tmp311;
      const real_t tmp367 = 0.21336495814298084*tmp300 + 0.21336495814298084*tmp304 + 0.21336495814298084*tmp310;
      const real_t tmp368 = 0.14073571909439453*tmp330 + 0.14073571909439453*tmp334 + 0.14073571909439453*tmp340;
      const real_t tmp369 = 2.9649155283744921*tmp329 + 2.9649155283744921*tmp333 + 2.9649155283744921*tmp339;
      const real_t tmp370 = 2.7375616618121592*tmp36 + 2.7375616618121592*tmp38 + 2.7375616618121592*tmp46;
      const real_t tmp371 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp32 + 0.38881857835033307*tmp42;
      const real_t tmp372 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp88;
      const real_t tmp373 = 3.0100340280386204*tmp76 + 3.0100340280386204*tmp80 + 3.0100340280386204*tmp86;
      const real_t tmp374 = 0.054242807519210512*tmp111 + 0.054242807519210512*tmp112 + 0.054242807519210512*tmp117;
      const real_t tmp375 = 0.16196202691036121*tmp105 + 0.16196202691036121*tmp109 + 0.16196202691036121*tmp115;
      const real_t tmp376 = 1.2716142408535775*tmp140 + 1.2716142408535775*tmp141 + 1.2716142408535775*tmp146;
      const real_t tmp377 = 0.11827798082591956*tmp134 + 0.11827798082591956*tmp138 + 0.11827798082591956*tmp144;
      const real_t tmp378 = 1.4152929568371884*tmp169 + 1.4152929568371884*tmp170 + 1.4152929568371884*tmp175;
      const real_t tmp379 = 1.730840956191074*tmp163 + 1.730840956191074*tmp167 + 1.730840956191074*tmp173;
      const real_t tmp380 = 0.50720690366156718*tmp198 + 0.50720690366156718*tmp199 + 0.50720690366156718*tmp204;
      const real_t tmp381 = 0.96110665971229103*tmp192 + 0.96110665971229103*tmp196 + 0.96110665971229103*tmp202;
      const real_t tmp382 = 1.3207616593498592*tmp224 + 1.3207616593498592*tmp225 + 1.3207616593498592*tmp229;
      const real_t tmp383 = 0.51764549515564062*tmp219 + 0.51764549515564062*tmp222 + 0.51764549515564062*tmp227;
      const real_t tmp384 = 1.2259759537187613*tmp252 + 1.2259759537187613*tmp253 + 1.2259759537187613*tmp258;
      const real_t tmp385 = 0.48616796533571183*tmp246 + 0.48616796533571183*tmp250 + 0.48616796533571183*tmp256;
      const real_t tmp386 = 0.23782646519773576*tmp278 + 0.23782646519773576*tmp279 + 0.23782646519773576*tmp283;
      const real_t tmp387 = 1.8030635043651069*tmp273 + 1.8030635043651069*tmp276 + 1.8030635043651069*tmp281;
      const real_t tmp388 = 0.19112574223634571*tmp306 + 0.19112574223634571*tmp307 + 0.19112574223634571*tmp312;
      const real_t tmp389 = 1.6770652555180527*tmp300 + 1.6770652555180527*tmp304 + 1.6770652555180527*tmp310;
      const real_t tmp390 = 0.14073571909439453*tmp335 + 0.14073571909439453*tmp336 + 0.14073571909439453*tmp341;
      const real_t tmp391 = 0.2688931795735332*tmp329 + 0.2688931795735332*tmp333 + 0.2688931795735332*tmp339;
      const real_t tmp392 = 0.42641669024797446*tmp36 + 0.42641669024797446*tmp38 + 0.42641669024797446*tmp46;
      const real_t tmp393 = 0.38881857835033307*tmp28 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp44;
      const real_t tmp394 = 0.3256196736114374*tmp82 + 0.3256196736114374*tmp83 + 0.3256196736114374*tmp88;
      const real_t tmp395 = 3.0100340280386204*tmp77 + 3.0100340280386204*tmp81 + 3.0100340280386204*tmp87;
      const real_t tmp396 = 0.69877623478892303*tmp111 + 0.69877623478892303*tmp112 + 0.69877623478892303*tmp117;
      const real_t tmp397 = 0.16196202691036121*tmp106 + 0.16196202691036121*tmp110 + 0.16196202691036121*tmp116;
      const real_t tmp398 = 1.3169318389705873*tmp140 + 1.3169318389705873*tmp141 + 1.3169318389705873*tmp146;
      const real_t tmp399 = 0.11827798082591956*tmp135 + 0.11827798082591956*tmp139 + 0.11827798082591956*tmp145;
      const real_t tmp400 = 0.41537646564397157*tmp169 + 0.41537646564397157*tmp170 + 0.41537646564397157*tmp175;
      const real_t tmp401 = 1.730840956191074*tmp164 + 1.730840956191074*tmp168 + 1.730840956191074*tmp174;
      const real_t tmp402 = 1.2177936097379878*tmp198 + 1.2177936097379878*tmp199 + 1.2177936097379878*tmp204;
      const real_t tmp403 = 0.96110665971229103*tmp193 + 0.96110665971229103*tmp197 + 0.96110665971229103*tmp203;
      const real_t tmp404 = 2.1520288156647434*tmp224 + 2.1520288156647434*tmp225 + 2.1520288156647434*tmp229;
      const real_t tmp405 = 0.51764549515564062*tmp220 + 0.51764549515564062*tmp223 + 0.51764549515564062*tmp228;
      const real_t tmp406 = 0.035965040373342916*tmp252 + 0.035965040373342916*tmp253 + 0.035965040373342916*tmp258;
      const real_t tmp407 = 0.48616796533571183*tmp247 + 0.48616796533571183*tmp251 + 0.48616796533571183*tmp257;
      const real_t tmp408 = 1.7318139619254227*tmp278 + 1.7318139619254227*tmp279 + 1.7318139619254227*tmp283;
      const real_t tmp409 = 1.8030635043651069*tmp274 + 1.8030635043651069*tmp277 + 1.8030635043651069*tmp282;
      const real_t tmp410 = 0.21336495814298084*tmp306 + 0.21336495814298084*tmp307 + 0.21336495814298084*tmp312;
      const real_t tmp411 = 1.6770652555180527*tmp301 + 1.6770652555180527*tmp305 + 1.6770652555180527*tmp311;
      const real_t tmp412 = 2.9649155283744921*tmp335 + 2.9649155283744921*tmp336 + 2.9649155283744921*tmp341;
      const real_t tmp413 = 0.2688931795735332*tmp330 + 0.2688931795735332*tmp334 + 0.2688931795735332*tmp340;
      elMat(0,0) = -tmp123*(-2.0850189307815055*tmp105 - 2.0850189307815055*tmp106 - 2.0850189307815055*tmp109 - 2.0850189307815055*tmp110 - 2.0850189307815055*tmp111 - 2.0850189307815055*tmp112 - 2.0850189307815055*tmp115 - 2.0850189307815055*tmp116 - 2.0850189307815055*tmp117) - tmp152*(-0.29317593934991559*tmp134 - 0.29317593934991559*tmp135 - 0.29317593934991559*tmp138 - 0.29317593934991559*tmp139 - 0.29317593934991559*tmp140 - 0.29317593934991559*tmp141 - 0.29317593934991559*tmp144 - 0.29317593934991559*tmp145 - 0.29317593934991559*tmp146) - tmp181*(0.56151037867223397*tmp163 + 0.56151037867223397*tmp164 + 0.56151037867223397*tmp167 + 0.56151037867223397*tmp168 + 0.56151037867223397*tmp169 + 0.56151037867223397*tmp170 + 0.56151037867223397*tmp173 + 0.56151037867223397*tmp174 + 0.56151037867223397*tmp175) - tmp210*(-0.31389282688815401*tmp192 - 0.31389282688815401*tmp193 - 0.31389282688815401*tmp196 - 0.31389282688815401*tmp197 - 0.31389282688815401*tmp198 - 0.31389282688815401*tmp199 - 0.31389282688815401*tmp202 - 0.31389282688815401*tmp203 - 0.31389282688815401*tmp204) - tmp235*(0.99043597017024343*tmp219 + 0.99043597017024343*tmp220 + 0.99043597017024343*tmp222 + 0.99043597017024343*tmp223 + 0.99043597017024343*tmp224 + 0.99043597017024343*tmp225 + 0.99043597017024343*tmp227 + 0.99043597017024343*tmp228 + 0.99043597017024343*tmp229) - tmp264*(-1.2518910405721839*tmp246 - 1.2518910405721839*tmp247 - 1.2518910405721839*tmp250 - 1.2518910405721839*tmp251 - 1.2518910405721839*tmp252 - 1.2518910405721839*tmp253 - 1.2518910405721839*tmp256 - 1.2518910405721839*tmp257 - 1.2518910405721839*tmp258) - tmp289*(0.77270393148826533*tmp273 + 0.77270393148826533*tmp274 + 0.77270393148826533*tmp276 + 0.77270393148826533*tmp277 + 0.77270393148826533*tmp278 + 0.77270393148826533*tmp279 + 0.77270393148826533*tmp281 + 0.77270393148826533*tmp282 + 0.77270393148826533*tmp283) - tmp318*(-0.9184440441026207*tmp300 - 0.9184440441026207*tmp301 - 0.9184440441026207*tmp304 - 0.9184440441026207*tmp305 - 0.9184440441026207*tmp306 - 0.9184440441026207*tmp307 - 0.9184440441026207*tmp310 - 0.9184440441026207*tmp311 - 0.9184440441026207*tmp312) - tmp347*(0.37454442704241986*tmp329 + 0.37454442704241986*tmp330 + 0.37454442704241986*tmp333 + 0.37454442704241986*tmp334 + 0.37454442704241986*tmp335 + 0.37454442704241986*tmp336 + 0.37454442704241986*tmp339 + 0.37454442704241986*tmp340 + 0.37454442704241986*tmp341) - tmp65*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp28 + 0.55279693041046674*tmp32 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp36 + 0.55279693041046674*tmp38 + 0.55279693041046674*tmp42 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46) - tmp94*(0.60805118540288361*tmp76 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      elMat(0,1) = 0.0036548782978011126*tmp122*(tmp111 + tmp112 + tmp117) + 0.010799549999884401*tmp151*(tmp140 + tmp141 + tmp146) - 0.012584765868454714*tmp180*(tmp169 + tmp170 + tmp175) + 0.00083582139204094858*tmp209*(tmp198 + tmp199 + tmp204) + 0.0040819365333192512*tmp234*(tmp224 + tmp225 + tmp229) + 0.0045346636251092122*tmp263*(tmp252 + tmp253 + tmp258) - 0.0061987549215557864*tmp288*(tmp278 + tmp279 + tmp283) - 0.0045087419239184514*tmp317*(tmp306 + tmp307 + tmp312) + 0.0044998649071490461*tmp346*(tmp335 + tmp336 + tmp341) + 0.0072301427194886381*tmp64*(tmp36 + tmp38 + tmp46) - 0.012344594760863713*tmp93*(tmp82 + tmp83 + tmp88);
      elMat(0,2) = 0.0013137068218914037*tmp122*(tmp106 + tmp110 + tmp116) - 0.0038818597778972029*tmp151*(tmp135 + tmp139 + tmp145) + 0.010066964965131993*tmp180*(tmp164 + tmp168 + tmp174) - 0.0046804043242939224*tmp209*(tmp193 + tmp197 + tmp203) - 0.0097490714046835261*tmp234*(tmp220 + tmp223 + tmp228) + 0.0085077884791842431*tmp263*(tmp247 + tmp251 + tmp257) - 0.0056487878897383461*tmp288*(tmp274 + tmp277 + tmp282) + 0.005238393734043144*tmp317*(tmp301 + tmp305 + tmp311) - 0.012093792842045984*tmp346*(tmp330 + tmp334 + tmp340) + 0.0067853652681886352*tmp64*(tmp28 + tmp34 + tmp44) + 0.0041416969702195786*tmp93*(tmp77 + tmp81 + tmp87);
      elMat(0,3) = 0.0041246668394316508*tmp122*(tmp105 + tmp109 + tmp115) - 0.0033267985952381263*tmp151*(tmp134 + tmp138 + tmp144) - 0.0071511654955033511*tmp180*(tmp163 + tmp167 + tmp173) + 0.010590168103918869*tmp209*(tmp192 + tmp196 + tmp202) - 0.0027144532136395704*tmp234*(tmp219 + tmp222 + tmp227) - 0.0019942799754541058*tmp263*(tmp246 + tmp250 + tmp256) + 0.005883129944586717*tmp288*(tmp273 + tmp276 + tmp281) + 0.0053864900723149976*tmp317*(tmp300 + tmp304 + tmp310) + 0.0052886569726683132*tmp346*(tmp329 + tmp333 + tmp339) - 0.020554974928565235*tmp64*(tmp26 + tmp32 + tmp42) + 0.0044685602754798454*tmp93*(tmp76 + tmp80 + tmp86);
      elMat(0,4) = -tmp123*(tmp352 + tmp353) - tmp152*(tmp354 + tmp355) - tmp181*(tmp356 + tmp357) - tmp210*(tmp358 + tmp359) - tmp235*(tmp360 + tmp361) - tmp264*(tmp362 + tmp363) - tmp289*(tmp364 + tmp365) - tmp318*(tmp366 + tmp367) - tmp347*(tmp368 + tmp369) - tmp65*(tmp348 + tmp349) - tmp94*(tmp350 + tmp351);
      elMat(0,5) = -tmp123*(tmp374 + tmp375) - tmp152*(tmp376 + tmp377) - tmp181*(tmp378 + tmp379) - tmp210*(tmp380 + tmp381) - tmp235*(tmp382 + tmp383) - tmp264*(tmp384 + tmp385) - tmp289*(tmp386 + tmp387) - tmp318*(tmp388 + tmp389) - tmp347*(tmp390 + tmp391) - tmp65*(tmp370 + tmp371) - tmp94*(tmp372 + tmp373);
      elMat(0,6) = -tmp123*(tmp396 + tmp397) - tmp152*(tmp398 + tmp399) - tmp181*(tmp400 + tmp401) - tmp210*(tmp402 + tmp403) - tmp235*(tmp404 + tmp405) - tmp264*(tmp406 + tmp407) - tmp289*(tmp408 + tmp409) - tmp318*(tmp410 + tmp411) - tmp347*(tmp412 + tmp413) - tmp65*(tmp392 + tmp393) - tmp94*(tmp394 + tmp395);
      elMat(0,7) = -tmp123*(3.030776123262295*tmp102*tmp107*tmp16*tmp29 + 3.030776123262295*tmp102*tmp113*tmp16*tmp39 + 3.030776123262295*tmp102*tmp16*tmp6*tmp95 - tmp352 - tmp374) - tmp152*(0.021561698496338266*tmp124*tmp131*tmp16*tmp6 + 0.021561698496338266*tmp131*tmp136*tmp16*tmp29 + 0.021561698496338266*tmp131*tmp142*tmp16*tmp39 - tmp354 - tmp376) - tmp181*(-0.97680333550942233*tmp163 - 0.97680333550942233*tmp167 - 0.97680333550942233*tmp173 - tmp356 - tmp378) - tmp210*(0.80668592322658683*tmp16*tmp182*tmp189*tmp6 + 0.80668592322658683*tmp16*tmp189*tmp194*tmp29 + 0.80668592322658683*tmp16*tmp189*tmp200*tmp39 - tmp358 - tmp380) - tmp235*(-1.3111976295201027*tmp219 - 1.3111976295201027*tmp222 - 1.3111976295201027*tmp227 - tmp360 - tmp382) - tmp264*(1.0259150868534226*tmp16*tmp236*tmp243*tmp6 + 1.0259150868534226*tmp16*tmp243*tmp248*tmp29 + 1.0259150868534226*tmp16*tmp243*tmp254*tmp39 - tmp362 - tmp384) - tmp289*(-0.010530396686001087*tmp273 - 0.010530396686001087*tmp276 - 0.010530396686001087*tmp281 - tmp364 - tmp386) - tmp318*(1.727318301866275*tmp16*tmp29*tmp297*tmp302 + 1.727318301866275*tmp16*tmp290*tmp297*tmp6 + 1.727318301866275*tmp16*tmp297*tmp308*tmp39 - tmp366 - tmp388) - tmp347*(0.48471985386318561*tmp16*tmp29*tmp326*tmp331 + 0.48471985386318561*tmp16*tmp319*tmp326*tmp6 + 0.48471985386318561*tmp16*tmp326*tmp337*tmp39 - tmp368 - tmp390) - tmp65*(-2.2903585922226259*tmp26 - 2.2903585922226259*tmp32 - tmp348 - tmp370 - 2.2903585922226259*tmp42) - tmp94*(0.11955133084429059*tmp16*tmp29*tmp73*tmp78 + 0.11955133084429059*tmp16*tmp39*tmp73*tmp84 + 0.11955133084429059*tmp16*tmp6*tmp66*tmp73 - tmp350 - tmp372);
      elMat(0,8) = -tmp123*(2.3862426959925824*tmp102*tmp107*tmp16*tmp33 + 2.3862426959925824*tmp102*tmp113*tmp16*tmp43 + 2.3862426959925824*tmp102*tmp16*tmp27*tmp95 - tmp353 - tmp396) - tmp152*(-0.023755899620671705*tmp135 - 0.023755899620671705*tmp139 - 0.023755899620671705*tmp145 - tmp355 - tmp398) - tmp181*(0.023113155683794462*tmp153*tmp16*tmp160*tmp27 + 0.023113155683794462*tmp16*tmp160*tmp165*tmp33 + 0.023113155683794462*tmp16*tmp160*tmp171*tmp43 - tmp357 - tmp400) - tmp210*(0.096099217150166227*tmp16*tmp182*tmp189*tmp27 + 0.096099217150166227*tmp16*tmp189*tmp194*tmp33 + 0.096099217150166227*tmp16*tmp189*tmp200*tmp43 - tmp359 - tmp402) - tmp235*(-2.1424647858349868*tmp220 - 2.1424647858349868*tmp223 - 2.1424647858349868*tmp228 - tmp361 - tmp404) - tmp264*(2.215926000198841*tmp16*tmp236*tmp243*tmp27 + 2.215926000198841*tmp16*tmp243*tmp248*tmp33 + 2.215926000198841*tmp16*tmp243*tmp254*tmp43 - tmp363 - tmp406) - tmp289*(-1.504517893413688*tmp274 - 1.504517893413688*tmp277 - 1.504517893413688*tmp282 - tmp365 - tmp408) - tmp318*(1.7050790859596399*tmp16*tmp27*tmp290*tmp297 + 1.7050790859596399*tmp16*tmp297*tmp302*tmp33 + 1.7050790859596399*tmp16*tmp297*tmp308*tmp43 - tmp367 - tmp410) - tmp347*(-2.339459955416912*tmp330 - 2.339459955416912*tmp334 - 2.339459955416912*tmp340 - tmp369 - tmp412) - tmp65*(0.020786379341558803*tmp16*tmp23*tmp27*tmp7 + 0.020786379341558803*tmp16*tmp23*tmp30*tmp33 + 0.020786379341558803*tmp16*tmp23*tmp40*tmp43 - tmp349 - tmp392) - tmp94*(0.066329140985678992*tmp16*tmp27*tmp66*tmp73 + 0.066329140985678992*tmp16*tmp33*tmp73*tmp78 + 0.066329140985678992*tmp16*tmp43*tmp73*tmp84 - tmp351 - tmp394);
      elMat(0,9) = -tmp123*(2.923056903871144*tmp102*tmp107*tmp16*tmp37 + 2.923056903871144*tmp102*tmp113*tmp16*tmp45 + 2.923056903871144*tmp102*tmp16*tmp35*tmp95 - tmp375 - tmp397) - tmp152*(1.1748979585239958*tmp124*tmp131*tmp16*tmp35 + 1.1748979585239958*tmp131*tmp136*tmp16*tmp37 + 1.1748979585239958*tmp131*tmp142*tmp16*tmp45 - tmp377 - tmp399) - tmp181*(-1.292351334863308*tmp169 - 1.292351334863308*tmp170 - 1.292351334863308*tmp175 - tmp379 - tmp401) - tmp210*(0.35278616717586297*tmp16*tmp182*tmp189*tmp35 + 0.35278616717586297*tmp16*tmp189*tmp194*tmp37 + 0.35278616717586297*tmp16*tmp189*tmp200*tmp45 - tmp381 - tmp403) - tmp235*(-0.50808146532588383*tmp224 - 0.50808146532588383*tmp225 - 0.50808146532588383*tmp229 - tmp383 - tmp405) - tmp264*(1.7657230752364721*tmp16*tmp236*tmp243*tmp35 + 1.7657230752364721*tmp16*tmp243*tmp248*tmp37 + 1.7657230752364721*tmp16*tmp243*tmp254*tmp45 - tmp385 - tmp407) - tmp289*(-1.5757674358533722*tmp278 - 1.5757674358533722*tmp279 - 1.5757674358533722*tmp283 - tmp387 - tmp409) - tmp318*(0.24137878858456796*tmp16*tmp290*tmp297*tmp35 + 0.24137878858456796*tmp16*tmp297*tmp302*tmp37 + 0.24137878858456796*tmp16*tmp297*tmp308*tmp45 - tmp389 - tmp411) - tmp347*(0.35656239338404694*tmp16*tmp319*tmp326*tmp35 + 0.35656239338404694*tmp16*tmp326*tmp331*tmp37 + 0.35656239338404694*tmp16*tmp326*tmp337*tmp45 - tmp391 - tmp413) - tmp65*(0.058384491239200198*tmp16*tmp23*tmp30*tmp37 + 0.058384491239200198*tmp16*tmp23*tmp35*tmp7 + 0.058384491239200198*tmp16*tmp23*tmp40*tmp45 - tmp371 - tmp393) - tmp94*(-tmp373 - tmp395 - 2.6180852134415042*tmp82 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp88);
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
      elMat(1,0) = 0;
      elMat(1,1) = 0;
      elMat(1,2) = 0;
      elMat(1,3) = 0;
      elMat(1,4) = 0;
      elMat(1,5) = 0;
      elMat(2,0) = 0;
      elMat(2,1) = 0;
      elMat(2,2) = 0;
      elMat(2,3) = 0;
      elMat(2,4) = 0;
      elMat(2,5) = 0;
      elMat(3,0) = 0;
      elMat(3,1) = 0;
      elMat(3,2) = 0;
      elMat(3,3) = 0;
      elMat(3,4) = 0;
      elMat(3,5) = 0;
      elMat(4,0) = 0;
      elMat(4,1) = 0;
      elMat(4,2) = 0;
      elMat(4,3) = 0;
      elMat(4,4) = 0;
      elMat(4,5) = 0;
      elMat(5,0) = 0;
      elMat(5,1) = 0;
      elMat(5,2) = 0;
      elMat(5,3) = 0;
      elMat(5,4) = 0;
      elMat(5,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      (void)(coords);
      Point3D PoI_affine_0((1.0/3.0)*coords[0][0] + (1.0/3.0)*coords[1][0] + (1.0/3.0)*coords[2][0], (1.0/3.0)*coords[0][1] + (1.0/3.0)*coords[1][1] + (1.0/3.0)*coords[2][1], 0);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], 0), PoI_blending_0);
      elMat(0,0) = 0;
      elMat(0,1) = 0;
      elMat(0,2) = 0;
      elMat(0,3) = 0;
      elMat(0,4) = 0;
      elMat(0,5) = 0;
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_2_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[1][0];
      const real_t tmp1 = -coords[0][1] + coords[2][1];
      const real_t tmp2 = tmp0*tmp1;
      const real_t tmp3 = -coords[0][0] + coords[2][0];
      const real_t tmp4 = -coords[0][1] + coords[1][1];
      const real_t tmp5 = tmp3*tmp4;
      const real_t tmp6 = tmp2 - tmp5;
      const real_t tmp7 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp8 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp9 = tmp7 - tmp8;
      const real_t tmp10 = -coords[0][2] + coords[3][2];
      const real_t tmp11 = -coords[0][1] + coords[3][1];
      const real_t tmp12 = -coords[0][2] + coords[1][2];
      const real_t tmp13 = -coords[0][0] + coords[3][0];
      const real_t tmp14 = -coords[0][2] + coords[2][2];
      const real_t tmp15 = tmp14*tmp4;
      const real_t tmp16 = tmp0*tmp11;
      const real_t tmp17 = tmp12*tmp13;
      const real_t tmp18 = 1.0 / (-tmp1*tmp17 + tmp10*tmp2 - tmp10*tmp5 + tmp11*tmp12*tmp3 + tmp13*tmp15 - tmp14*tmp16);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp7*J_B_1(2, 2) - tmp8*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp9;
      const real_t tmp26 = tmp25*tmp6;
      const real_t tmp27 = -tmp0*tmp14 + tmp12*tmp3;
      const real_t tmp28 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp29 = tmp24*tmp28;
      const real_t tmp30 = tmp27*tmp29;
      const real_t tmp31 = -tmp1*tmp12 + tmp15;
      const real_t tmp32 = tmp19 - tmp21;
      const real_t tmp33 = tmp24*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp26 + tmp30 + tmp34;
      const real_t tmp36 = -tmp1*tmp13 + tmp11*tmp3;
      const real_t tmp37 = tmp25*tmp36;
      const real_t tmp38 = -tmp10*tmp3 + tmp13*tmp14;
      const real_t tmp39 = tmp29*tmp38;
      const real_t tmp40 = tmp1*tmp10 - tmp11*tmp14;
      const real_t tmp41 = tmp33*tmp40;
      const real_t tmp42 = tmp37 + tmp39 + tmp41;
      const real_t tmp43 = tmp13*tmp4 - tmp16;
      const real_t tmp44 = tmp25*tmp43;
      const real_t tmp45 = tmp0*tmp10 - tmp17;
      const real_t tmp46 = tmp29*tmp45;
      const real_t tmp47 = -tmp10*tmp4 + tmp11*tmp12;
      const real_t tmp48 = tmp33*tmp47;
      const real_t tmp49 = tmp44 + tmp46 + tmp48;
      const real_t tmp50 = tmp42 + tmp49;
      const real_t tmp51 = coords[0][0]*coords[1][1];
      const real_t tmp52 = coords[0][0]*coords[1][2];
      const real_t tmp53 = coords[2][1]*coords[3][2];
      const real_t tmp54 = coords[0][1]*coords[1][0];
      const real_t tmp55 = coords[0][1]*coords[1][2];
      const real_t tmp56 = coords[2][2]*coords[3][0];
      const real_t tmp57 = coords[0][2]*coords[1][0];
      const real_t tmp58 = coords[0][2]*coords[1][1];
      const real_t tmp59 = coords[2][0]*coords[3][1];
      const real_t tmp60 = coords[2][2]*coords[3][1];
      const real_t tmp61 = coords[2][0]*coords[3][2];
      const real_t tmp62 = coords[2][1]*coords[3][0];
      const real_t tmp63 = std::abs(coords[0][0]*tmp53 - coords[0][0]*tmp60 + coords[0][1]*tmp56 - coords[0][1]*tmp61 + coords[0][2]*tmp59 - coords[0][2]*tmp62 - coords[1][0]*tmp53 + coords[1][0]*tmp60 - coords[1][1]*tmp56 + coords[1][1]*tmp61 - coords[1][2]*tmp59 + coords[1][2]*tmp62 + coords[2][0]*tmp55 - coords[2][0]*tmp58 - coords[2][1]*tmp52 + coords[2][1]*tmp57 + coords[2][2]*tmp51 - coords[2][2]*tmp54 - coords[3][0]*tmp55 + coords[3][0]*tmp58 + coords[3][1]*tmp52 - coords[3][1]*tmp57 - coords[3][2]*tmp51 + coords[3][2]*tmp54);
      const real_t tmp64 = tmp63*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp65 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp66 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp67 = tmp65 - tmp66;
      const real_t tmp68 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp69 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp70 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp71 = tmp65*J_B_10(2, 2) - tmp66*J_B_10(2, 2) + tmp68*J_B_10(2, 0) - tmp69*J_B_10(2, 1) - tmp70*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp72 = 1.0 / (tmp71);
      const real_t tmp73 = tmp18*tmp72;
      const real_t tmp74 = tmp67*tmp73;
      const real_t tmp75 = tmp6*tmp74;
      const real_t tmp76 = -tmp69 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp77 = tmp73*tmp76;
      const real_t tmp78 = tmp27*tmp77;
      const real_t tmp79 = tmp68 - tmp70;
      const real_t tmp80 = tmp73*tmp79;
      const real_t tmp81 = tmp31*tmp80;
      const real_t tmp82 = tmp75 + tmp78 + tmp81;
      const real_t tmp83 = tmp36*tmp74;
      const real_t tmp84 = tmp38*tmp77;
      const real_t tmp85 = tmp40*tmp80;
      const real_t tmp86 = tmp83 + tmp84 + tmp85;
      const real_t tmp87 = tmp43*tmp74;
      const real_t tmp88 = tmp45*tmp77;
      const real_t tmp89 = tmp47*tmp80;
      const real_t tmp90 = tmp87 + tmp88 + tmp89;
      const real_t tmp91 = tmp86 + tmp90;
      const real_t tmp92 = tmp63*std::abs(tmp71)*ScalarCoeff0_10;
      const real_t tmp93 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp94 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp95 = tmp93 - tmp94;
      const real_t tmp96 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp97 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp98 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp99 = tmp93*J_B_3(2, 2) - tmp94*J_B_3(2, 2) + tmp96*J_B_3(2, 0) - tmp97*J_B_3(2, 1) - tmp98*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp100 = 1.0 / (tmp99);
      const real_t tmp101 = tmp100*tmp18;
      const real_t tmp102 = tmp101*tmp95;
      const real_t tmp103 = tmp102*tmp6;
      const real_t tmp104 = -tmp97 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp105 = tmp101*tmp104;
      const real_t tmp106 = tmp105*tmp27;
      const real_t tmp107 = tmp96 - tmp98;
      const real_t tmp108 = tmp101*tmp107;
      const real_t tmp109 = tmp108*tmp31;
      const real_t tmp110 = tmp103 + tmp106 + tmp109;
      const real_t tmp111 = tmp102*tmp36;
      const real_t tmp112 = tmp105*tmp38;
      const real_t tmp113 = tmp108*tmp40;
      const real_t tmp114 = tmp111 + tmp112 + tmp113;
      const real_t tmp115 = tmp102*tmp43;
      const real_t tmp116 = tmp105*tmp45;
      const real_t tmp117 = tmp108*tmp47;
      const real_t tmp118 = tmp115 + tmp116 + tmp117;
      const real_t tmp119 = tmp114 + tmp118;
      const real_t tmp120 = tmp63*std::abs(tmp99)*ScalarCoeff0_3;
      const real_t tmp121 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp122 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp123 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp124 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp125 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp126 = tmp121*J_B_5(2, 2) - tmp122*J_B_5(2, 2) + tmp123*J_B_5(2, 0) - tmp124*J_B_5(2, 1) - tmp125*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp127 = tmp18/tmp126;
      const real_t tmp128 = tmp127*(tmp121 - tmp122);
      const real_t tmp129 = tmp128*tmp6;
      const real_t tmp130 = tmp127*(-tmp124 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp131 = tmp130*tmp27;
      const real_t tmp132 = tmp127*(tmp123 - tmp125);
      const real_t tmp133 = tmp132*tmp31;
      const real_t tmp134 = tmp129 + tmp131 + tmp133;
      const real_t tmp135 = tmp128*tmp36;
      const real_t tmp136 = tmp130*tmp38;
      const real_t tmp137 = tmp132*tmp40;
      const real_t tmp138 = tmp135 + tmp136 + tmp137;
      const real_t tmp139 = tmp128*tmp43;
      const real_t tmp140 = tmp130*tmp45;
      const real_t tmp141 = tmp132*tmp47;
      const real_t tmp142 = tmp139 + tmp140 + tmp141;
      const real_t tmp143 = tmp138 + tmp142;
      const real_t tmp144 = tmp63*std::abs(tmp126)*ScalarCoeff0_5;
      const real_t tmp145 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp146 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp147 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp148 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp149 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp150 = tmp145*J_B_7(2, 2) - tmp146*J_B_7(2, 2) + tmp147*J_B_7(2, 0) - tmp148*J_B_7(2, 1) - tmp149*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp151 = tmp18/tmp150;
      const real_t tmp152 = tmp151*(tmp145 - tmp146);
      const real_t tmp153 = tmp152*tmp6;
      const real_t tmp154 = tmp151*(-tmp148 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp155 = tmp154*tmp27;
      const real_t tmp156 = tmp151*(tmp147 - tmp149);
      const real_t tmp157 = tmp156*tmp31;
      const real_t tmp158 = tmp153 + tmp155 + tmp157;
      const real_t tmp159 = tmp152*tmp36;
      const real_t tmp160 = tmp154*tmp38;
      const real_t tmp161 = tmp156*tmp40;
      const real_t tmp162 = tmp159 + tmp160 + tmp161;
      const real_t tmp163 = tmp152*tmp43;
      const real_t tmp164 = tmp154*tmp45;
      const real_t tmp165 = tmp156*tmp47;
      const real_t tmp166 = tmp163 + tmp164 + tmp165;
      const real_t tmp167 = tmp162 + tmp166;
      const real_t tmp168 = tmp63*std::abs(tmp150)*ScalarCoeff0_7;
      const real_t tmp169 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp170 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp171 = tmp169 - tmp170;
      const real_t tmp172 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp173 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp174 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp175 = tmp169*J_B_9(2, 2) - tmp170*J_B_9(2, 2) + tmp172*J_B_9(2, 0) - tmp173*J_B_9(2, 1) - tmp174*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp176 = 1.0 / (tmp175);
      const real_t tmp177 = tmp176*tmp18;
      const real_t tmp178 = tmp171*tmp177;
      const real_t tmp179 = tmp178*tmp43;
      const real_t tmp180 = -tmp173 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp181 = tmp177*tmp180;
      const real_t tmp182 = tmp181*tmp45;
      const real_t tmp183 = tmp172 - tmp174;
      const real_t tmp184 = tmp177*tmp183;
      const real_t tmp185 = tmp184*tmp47;
      const real_t tmp186 = tmp179 + tmp182 + tmp185;
      const real_t tmp187 = tmp178*tmp36;
      const real_t tmp188 = tmp181*tmp38;
      const real_t tmp189 = tmp184*tmp40;
      const real_t tmp190 = tmp187 + tmp188 + tmp189;
      const real_t tmp191 = tmp178*tmp6;
      const real_t tmp192 = tmp181*tmp27;
      const real_t tmp193 = tmp184*tmp31;
      const real_t tmp194 = tmp191 + tmp192 + tmp193;
      const real_t tmp195 = tmp190 + tmp194;
      const real_t tmp196 = tmp63*std::abs(tmp175)*ScalarCoeff0_9;
      const real_t tmp197 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp198 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp199 = tmp197 - tmp198;
      const real_t tmp200 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp201 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp202 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp203 = tmp197*J_B_11(2, 2) - tmp198*J_B_11(2, 2) + tmp200*J_B_11(2, 0) - tmp201*J_B_11(2, 1) - tmp202*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp204 = 1.0 / (tmp203);
      const real_t tmp205 = tmp18*tmp204;
      const real_t tmp206 = tmp199*tmp205;
      const real_t tmp207 = tmp206*tmp36;
      const real_t tmp208 = -tmp201 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp209 = tmp205*tmp208;
      const real_t tmp210 = tmp209*tmp38;
      const real_t tmp211 = tmp200 - tmp202;
      const real_t tmp212 = tmp205*tmp211;
      const real_t tmp213 = tmp212*tmp40;
      const real_t tmp214 = tmp207 + tmp210 + tmp213;
      const real_t tmp215 = tmp206*tmp43;
      const real_t tmp216 = tmp209*tmp45;
      const real_t tmp217 = tmp212*tmp47;
      const real_t tmp218 = tmp215 + tmp216 + tmp217;
      const real_t tmp219 = tmp206*tmp6;
      const real_t tmp220 = tmp209*tmp27;
      const real_t tmp221 = tmp212*tmp31;
      const real_t tmp222 = tmp219 + tmp220 + tmp221;
      const real_t tmp223 = tmp63*std::abs(tmp203)*ScalarCoeff0_11;
      const real_t tmp224 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp225 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp226 = tmp224 - tmp225;
      const real_t tmp227 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp228 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp229 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp230 = tmp224*J_B_2(2, 2) - tmp225*J_B_2(2, 2) + tmp227*J_B_2(2, 0) - tmp228*J_B_2(2, 1) - tmp229*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp231 = 1.0 / (tmp230);
      const real_t tmp232 = tmp18*tmp231;
      const real_t tmp233 = tmp226*tmp232;
      const real_t tmp234 = tmp233*tmp6;
      const real_t tmp235 = -tmp228 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp236 = tmp232*tmp235;
      const real_t tmp237 = tmp236*tmp27;
      const real_t tmp238 = tmp227 - tmp229;
      const real_t tmp239 = tmp232*tmp238;
      const real_t tmp240 = tmp239*tmp31;
      const real_t tmp241 = tmp234 + tmp237 + tmp240;
      const real_t tmp242 = tmp233*tmp36;
      const real_t tmp243 = tmp236*tmp38;
      const real_t tmp244 = tmp239*tmp40;
      const real_t tmp245 = tmp242 + tmp243 + tmp244;
      const real_t tmp246 = tmp233*tmp43;
      const real_t tmp247 = tmp236*tmp45;
      const real_t tmp248 = tmp239*tmp47;
      const real_t tmp249 = tmp246 + tmp247 + tmp248;
      const real_t tmp250 = tmp245 + tmp249;
      const real_t tmp251 = tmp63*std::abs(tmp230)*ScalarCoeff0_2;
      const real_t tmp252 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp253 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp254 = tmp252 - tmp253;
      const real_t tmp255 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp256 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp257 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp258 = tmp252*J_B_4(2, 2) - tmp253*J_B_4(2, 2) + tmp255*J_B_4(2, 0) - tmp256*J_B_4(2, 1) - tmp257*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp259 = 1.0 / (tmp258);
      const real_t tmp260 = tmp18*tmp259;
      const real_t tmp261 = tmp254*tmp260;
      const real_t tmp262 = tmp261*tmp43;
      const real_t tmp263 = -tmp256 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp264 = tmp260*tmp263;
      const real_t tmp265 = tmp264*tmp45;
      const real_t tmp266 = tmp255 - tmp257;
      const real_t tmp267 = tmp260*tmp266;
      const real_t tmp268 = tmp267*tmp47;
      const real_t tmp269 = tmp262 + tmp265 + tmp268;
      const real_t tmp270 = tmp261*tmp36;
      const real_t tmp271 = tmp264*tmp38;
      const real_t tmp272 = tmp267*tmp40;
      const real_t tmp273 = tmp270 + tmp271 + tmp272;
      const real_t tmp274 = tmp261*tmp6;
      const real_t tmp275 = tmp264*tmp27;
      const real_t tmp276 = tmp267*tmp31;
      const real_t tmp277 = tmp274 + tmp275 + tmp276;
      const real_t tmp278 = tmp273 + tmp277;
      const real_t tmp279 = tmp63*std::abs(tmp258)*ScalarCoeff0_4;
      const real_t tmp280 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp281 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp282 = tmp280 - tmp281;
      const real_t tmp283 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp284 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp285 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp286 = tmp280*J_B_6(2, 2) - tmp281*J_B_6(2, 2) + tmp283*J_B_6(2, 0) - tmp284*J_B_6(2, 1) - tmp285*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp287 = 1.0 / (tmp286);
      const real_t tmp288 = tmp18*tmp287;
      const real_t tmp289 = tmp282*tmp288;
      const real_t tmp290 = tmp289*tmp6;
      const real_t tmp291 = -tmp284 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp292 = tmp288*tmp291;
      const real_t tmp293 = tmp27*tmp292;
      const real_t tmp294 = tmp283 - tmp285;
      const real_t tmp295 = tmp288*tmp294;
      const real_t tmp296 = tmp295*tmp31;
      const real_t tmp297 = tmp290 + tmp293 + tmp296;
      const real_t tmp298 = tmp289*tmp36;
      const real_t tmp299 = tmp292*tmp38;
      const real_t tmp300 = tmp295*tmp40;
      const real_t tmp301 = tmp298 + tmp299 + tmp300;
      const real_t tmp302 = tmp289*tmp43;
      const real_t tmp303 = tmp292*tmp45;
      const real_t tmp304 = tmp295*tmp47;
      const real_t tmp305 = tmp302 + tmp303 + tmp304;
      const real_t tmp306 = tmp301 + tmp305;
      const real_t tmp307 = tmp63*std::abs(tmp286)*ScalarCoeff0_6;
      const real_t tmp308 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp309 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp310 = tmp308 - tmp309;
      const real_t tmp311 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp312 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp313 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp314 = tmp308*J_B_8(2, 2) - tmp309*J_B_8(2, 2) + tmp311*J_B_8(2, 0) - tmp312*J_B_8(2, 1) - tmp313*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp315 = 1.0 / (tmp314);
      const real_t tmp316 = tmp18*tmp315;
      const real_t tmp317 = tmp310*tmp316;
      const real_t tmp318 = tmp317*tmp36;
      const real_t tmp319 = -tmp312 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp320 = tmp316*tmp319;
      const real_t tmp321 = tmp320*tmp38;
      const real_t tmp322 = tmp311 - tmp313;
      const real_t tmp323 = tmp316*tmp322;
      const real_t tmp324 = tmp323*tmp40;
      const real_t tmp325 = tmp318 + tmp321 + tmp324;
      const real_t tmp326 = tmp317*tmp43;
      const real_t tmp327 = tmp320*tmp45;
      const real_t tmp328 = tmp323*tmp47;
      const real_t tmp329 = tmp326 + tmp327 + tmp328;
      const real_t tmp330 = tmp317*tmp6;
      const real_t tmp331 = tmp27*tmp320;
      const real_t tmp332 = tmp31*tmp323;
      const real_t tmp333 = tmp330 + tmp331 + tmp332;
      const real_t tmp334 = tmp329 + tmp333;
      const real_t tmp335 = tmp63*std::abs(tmp314)*ScalarCoeff0_8;
      const real_t tmp336 = tmp64*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp39 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46 + 0.55279693041046674*tmp48);
      const real_t tmp337 = 0.0072301427194886381*tmp42;
      const real_t tmp338 = tmp92*(0.60805118540288361*tmp75 + 0.60805118540288361*tmp78 + 0.60805118540288361*tmp81 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp85 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88 + 0.60805118540288361*tmp89);
      const real_t tmp339 = 0.012344594760863713*tmp86;
      const real_t tmp340 = tmp223*(-2.0850189307815055*tmp207 - 2.0850189307815055*tmp210 - 2.0850189307815055*tmp213 - 2.0850189307815055*tmp215 - 2.0850189307815055*tmp216 - 2.0850189307815055*tmp217 - 2.0850189307815055*tmp219 - 2.0850189307815055*tmp220 - 2.0850189307815055*tmp221);
      const real_t tmp341 = 0.0036548782978011126*tmp214;
      const real_t tmp342 = tmp251*(-0.29317593934991559*tmp234 - 0.29317593934991559*tmp237 - 0.29317593934991559*tmp240 - 0.29317593934991559*tmp242 - 0.29317593934991559*tmp243 - 0.29317593934991559*tmp244 - 0.29317593934991559*tmp246 - 0.29317593934991559*tmp247 - 0.29317593934991559*tmp248);
      const real_t tmp343 = 0.010799549999884401*tmp245;
      const real_t tmp344 = tmp120*(0.56151037867223397*tmp103 + 0.56151037867223397*tmp106 + 0.56151037867223397*tmp109 + 0.56151037867223397*tmp111 + 0.56151037867223397*tmp112 + 0.56151037867223397*tmp113 + 0.56151037867223397*tmp115 + 0.56151037867223397*tmp116 + 0.56151037867223397*tmp117);
      const real_t tmp345 = 0.012584765868454714*tmp114;
      const real_t tmp346 = tmp279*(-0.31389282688815401*tmp262 - 0.31389282688815401*tmp265 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp270 - 0.31389282688815401*tmp271 - 0.31389282688815401*tmp272 - 0.31389282688815401*tmp274 - 0.31389282688815401*tmp275 - 0.31389282688815401*tmp276);
      const real_t tmp347 = 0.00083582139204094858*tmp273;
      const real_t tmp348 = tmp144*(0.99043597017024343*tmp129 + 0.99043597017024343*tmp131 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp135 + 0.99043597017024343*tmp136 + 0.99043597017024343*tmp137 + 0.99043597017024343*tmp139 + 0.99043597017024343*tmp140 + 0.99043597017024343*tmp141);
      const real_t tmp349 = 0.0040819365333192512*tmp138;
      const real_t tmp350 = tmp307*(-1.2518910405721839*tmp290 - 1.2518910405721839*tmp293 - 1.2518910405721839*tmp296 - 1.2518910405721839*tmp298 - 1.2518910405721839*tmp299 - 1.2518910405721839*tmp300 - 1.2518910405721839*tmp302 - 1.2518910405721839*tmp303 - 1.2518910405721839*tmp304);
      const real_t tmp351 = 0.0045346636251092122*tmp301;
      const real_t tmp352 = tmp168*(0.77270393148826533*tmp153 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp157 + 0.77270393148826533*tmp159 + 0.77270393148826533*tmp160 + 0.77270393148826533*tmp161 + 0.77270393148826533*tmp163 + 0.77270393148826533*tmp164 + 0.77270393148826533*tmp165);
      const real_t tmp353 = 0.0061987549215557864*tmp162;
      const real_t tmp354 = tmp335*(-0.9184440441026207*tmp318 - 0.9184440441026207*tmp321 - 0.9184440441026207*tmp324 - 0.9184440441026207*tmp326 - 0.9184440441026207*tmp327 - 0.9184440441026207*tmp328 - 0.9184440441026207*tmp330 - 0.9184440441026207*tmp331 - 0.9184440441026207*tmp332);
      const real_t tmp355 = 0.0045087419239184514*tmp325;
      const real_t tmp356 = tmp196*(0.37454442704241986*tmp179 + 0.37454442704241986*tmp182 + 0.37454442704241986*tmp185 + 0.37454442704241986*tmp187 + 0.37454442704241986*tmp188 + 0.37454442704241986*tmp189 + 0.37454442704241986*tmp191 + 0.37454442704241986*tmp192 + 0.37454442704241986*tmp193);
      const real_t tmp357 = 0.0044998649071490461*tmp190;
      const real_t tmp358 = tmp336*tmp337 - tmp338*tmp339 + tmp340*tmp341 + tmp342*tmp343 - tmp344*tmp345 + tmp346*tmp347 + tmp348*tmp349 + tmp350*tmp351 - tmp352*tmp353 - tmp354*tmp355 + tmp356*tmp357;
      const real_t tmp359 = 0.0067853652681886352*tmp49;
      const real_t tmp360 = 0.0041416969702195786*tmp90;
      const real_t tmp361 = 0.0013137068218914037*tmp218;
      const real_t tmp362 = 0.0038818597778972029*tmp249;
      const real_t tmp363 = 0.010066964965131993*tmp118;
      const real_t tmp364 = 0.0046804043242939224*tmp269;
      const real_t tmp365 = 0.0097490714046835261*tmp142;
      const real_t tmp366 = 0.0085077884791842431*tmp305;
      const real_t tmp367 = 0.0056487878897383461*tmp166;
      const real_t tmp368 = 0.005238393734043144*tmp329;
      const real_t tmp369 = 0.012093792842045984*tmp186;
      const real_t tmp370 = tmp336*tmp359 + tmp338*tmp360 + tmp340*tmp361 - tmp342*tmp362 + tmp344*tmp363 - tmp346*tmp364 - tmp348*tmp365 + tmp350*tmp366 - tmp352*tmp367 + tmp354*tmp368 - tmp356*tmp369;
      const real_t tmp371 = 0.020554974928565235*tmp35;
      const real_t tmp372 = 0.0044685602754798454*tmp82;
      const real_t tmp373 = 0.0041246668394316508*tmp222;
      const real_t tmp374 = 0.0033267985952381263*tmp241;
      const real_t tmp375 = 0.0071511654955033511*tmp110;
      const real_t tmp376 = 0.010590168103918869*tmp277;
      const real_t tmp377 = 0.0027144532136395704*tmp134;
      const real_t tmp378 = 0.0019942799754541058*tmp297;
      const real_t tmp379 = 0.005883129944586717*tmp158;
      const real_t tmp380 = 0.0053864900723149976*tmp333;
      const real_t tmp381 = 0.0052886569726683132*tmp194;
      const real_t tmp382 = -tmp336*tmp371 + tmp338*tmp372 + tmp340*tmp373 - tmp342*tmp374 - tmp344*tmp375 + tmp346*tmp376 - tmp348*tmp377 - tmp350*tmp378 + tmp352*tmp379 + tmp354*tmp380 + tmp356*tmp381;
      const real_t tmp383 = 2.7375616618121592*tmp44 + 2.7375616618121592*tmp46 + 2.7375616618121592*tmp48;
      const real_t tmp384 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp30 + 0.42641669024797446*tmp34;
      const real_t tmp385 = tmp383 + tmp384;
      const real_t tmp386 = 0.011829781572832234*tmp336;
      const real_t tmp387 = 0.2723974837528258*tmp87 + 0.2723974837528258*tmp88 + 0.2723974837528258*tmp89;
      const real_t tmp388 = 0.3256196736114374*tmp75 + 0.3256196736114374*tmp78 + 0.3256196736114374*tmp81;
      const real_t tmp389 = tmp387 + tmp388;
      const real_t tmp390 = 0.0061414854617707626*tmp338;
      const real_t tmp391 = 0.054242807519210512*tmp215 + 0.054242807519210512*tmp216 + 0.054242807519210512*tmp217;
      const real_t tmp392 = 0.69877623478892303*tmp219 + 0.69877623478892303*tmp220 + 0.69877623478892303*tmp221;
      const real_t tmp393 = tmp391 + tmp392;
      const real_t tmp394 = 0.0043612323249822204*tmp340;
      const real_t tmp395 = 1.2716142408535775*tmp246 + 1.2716142408535775*tmp247 + 1.2716142408535775*tmp248;
      const real_t tmp396 = 1.3169318389705873*tmp234 + 1.3169318389705873*tmp237 + 1.3169318389705873*tmp240;
      const real_t tmp397 = tmp395 + tmp396;
      const real_t tmp398 = 0.012248248047610821*tmp342;
      const real_t tmp399 = 1.4152929568371884*tmp115 + 1.4152929568371884*tmp116 + 1.4152929568371884*tmp117;
      const real_t tmp400 = 0.41537646564397157*tmp103 + 0.41537646564397157*tmp106 + 0.41537646564397157*tmp109;
      const real_t tmp401 = tmp399 + tmp400;
      const real_t tmp402 = 0.017219568446249611*tmp344;
      const real_t tmp403 = 0.50720690366156718*tmp262 + 0.50720690366156718*tmp265 + 0.50720690366156718*tmp268;
      const real_t tmp404 = 1.2177936097379878*tmp274 + 1.2177936097379878*tmp275 + 1.2177936097379878*tmp276;
      const real_t tmp405 = tmp403 + tmp404;
      const real_t tmp406 = 0.021490090227737114*tmp346;
      const real_t tmp407 = 1.3207616593498592*tmp139 + 1.3207616593498592*tmp140 + 1.3207616593498592*tmp141;
      const real_t tmp408 = 2.1520288156647434*tmp129 + 2.1520288156647434*tmp131 + 2.1520288156647434*tmp133;
      const real_t tmp409 = tmp407 + tmp408;
      const real_t tmp410 = 0.0084625239161731543*tmp348;
      const real_t tmp411 = 1.2259759537187613*tmp302 + 1.2259759537187613*tmp303 + 1.2259759537187613*tmp304;
      const real_t tmp412 = 0.035965040373342916*tmp290 + 0.035965040373342916*tmp293 + 0.035965040373342916*tmp296;
      const real_t tmp413 = tmp411 + tmp412;
      const real_t tmp414 = 0.0088251866742250357*tmp350;
      const real_t tmp415 = 0.23782646519773576*tmp163 + 0.23782646519773576*tmp164 + 0.23782646519773576*tmp165;
      const real_t tmp416 = 1.7318139619254227*tmp153 + 1.7318139619254227*tmp155 + 1.7318139619254227*tmp157;
      const real_t tmp417 = tmp415 + tmp416;
      const real_t tmp418 = 0.0077188851041817101*tmp352;
      const real_t tmp419 = 0.19112574223634571*tmp326 + 0.19112574223634571*tmp327 + 0.19112574223634571*tmp328;
      const real_t tmp420 = 0.21336495814298084*tmp330 + 0.21336495814298084*tmp331 + 0.21336495814298084*tmp332;
      const real_t tmp421 = tmp419 + tmp420;
      const real_t tmp422 = 0.006659242794062166*tmp354;
      const real_t tmp423 = 0.14073571909439453*tmp179 + 0.14073571909439453*tmp182 + 0.14073571909439453*tmp185;
      const real_t tmp424 = 2.9649155283744921*tmp191 + 2.9649155283744921*tmp192 + 2.9649155283744921*tmp193;
      const real_t tmp425 = tmp423 + tmp424;
      const real_t tmp426 = 0.0061548665412862651*tmp356;
      const real_t tmp427 = -tmp385*tmp386 - tmp389*tmp390 - tmp393*tmp394 - tmp397*tmp398 - tmp401*tmp402 - tmp405*tmp406 - tmp409*tmp410 - tmp413*tmp414 - tmp417*tmp418 - tmp421*tmp422 - tmp425*tmp426;
      const real_t tmp428 = 2.7375616618121592*tmp37 + 2.7375616618121592*tmp39 + 2.7375616618121592*tmp41;
      const real_t tmp429 = 0.38881857835033307*tmp26 + 0.38881857835033307*tmp30 + 0.38881857835033307*tmp34;
      const real_t tmp430 = tmp428 + tmp429;
      const real_t tmp431 = 0.2723974837528258*tmp83 + 0.2723974837528258*tmp84 + 0.2723974837528258*tmp85;
      const real_t tmp432 = 3.0100340280386204*tmp75 + 3.0100340280386204*tmp78 + 3.0100340280386204*tmp81;
      const real_t tmp433 = tmp431 + tmp432;
      const real_t tmp434 = 0.054242807519210512*tmp207 + 0.054242807519210512*tmp210 + 0.054242807519210512*tmp213;
      const real_t tmp435 = 0.16196202691036121*tmp219 + 0.16196202691036121*tmp220 + 0.16196202691036121*tmp221;
      const real_t tmp436 = tmp434 + tmp435;
      const real_t tmp437 = 1.2716142408535775*tmp242 + 1.2716142408535775*tmp243 + 1.2716142408535775*tmp244;
      const real_t tmp438 = 0.11827798082591956*tmp234 + 0.11827798082591956*tmp237 + 0.11827798082591956*tmp240;
      const real_t tmp439 = tmp437 + tmp438;
      const real_t tmp440 = 1.4152929568371884*tmp111 + 1.4152929568371884*tmp112 + 1.4152929568371884*tmp113;
      const real_t tmp441 = 1.730840956191074*tmp103 + 1.730840956191074*tmp106 + 1.730840956191074*tmp109;
      const real_t tmp442 = tmp440 + tmp441;
      const real_t tmp443 = 0.50720690366156718*tmp270 + 0.50720690366156718*tmp271 + 0.50720690366156718*tmp272;
      const real_t tmp444 = 0.96110665971229103*tmp274 + 0.96110665971229103*tmp275 + 0.96110665971229103*tmp276;
      const real_t tmp445 = tmp443 + tmp444;
      const real_t tmp446 = 1.3207616593498592*tmp135 + 1.3207616593498592*tmp136 + 1.3207616593498592*tmp137;
      const real_t tmp447 = 0.51764549515564062*tmp129 + 0.51764549515564062*tmp131 + 0.51764549515564062*tmp133;
      const real_t tmp448 = tmp446 + tmp447;
      const real_t tmp449 = 1.2259759537187613*tmp298 + 1.2259759537187613*tmp299 + 1.2259759537187613*tmp300;
      const real_t tmp450 = 0.48616796533571183*tmp290 + 0.48616796533571183*tmp293 + 0.48616796533571183*tmp296;
      const real_t tmp451 = tmp449 + tmp450;
      const real_t tmp452 = 0.23782646519773576*tmp159 + 0.23782646519773576*tmp160 + 0.23782646519773576*tmp161;
      const real_t tmp453 = 1.8030635043651069*tmp153 + 1.8030635043651069*tmp155 + 1.8030635043651069*tmp157;
      const real_t tmp454 = tmp452 + tmp453;
      const real_t tmp455 = 0.19112574223634571*tmp318 + 0.19112574223634571*tmp321 + 0.19112574223634571*tmp324;
      const real_t tmp456 = 1.6770652555180527*tmp330 + 1.6770652555180527*tmp331 + 1.6770652555180527*tmp332;
      const real_t tmp457 = tmp455 + tmp456;
      const real_t tmp458 = 0.14073571909439453*tmp187 + 0.14073571909439453*tmp188 + 0.14073571909439453*tmp189;
      const real_t tmp459 = 0.2688931795735332*tmp191 + 0.2688931795735332*tmp192 + 0.2688931795735332*tmp193;
      const real_t tmp460 = tmp458 + tmp459;
      const real_t tmp461 = -tmp386*tmp430 - tmp390*tmp433 - tmp394*tmp436 - tmp398*tmp439 - tmp402*tmp442 - tmp406*tmp445 - tmp410*tmp448 - tmp414*tmp451 - tmp418*tmp454 - tmp422*tmp457 - tmp426*tmp460;
      const real_t tmp462 = 0.42641669024797446*tmp37 + 0.42641669024797446*tmp39 + 0.42641669024797446*tmp41;
      const real_t tmp463 = 0.38881857835033307*tmp44 + 0.38881857835033307*tmp46 + 0.38881857835033307*tmp48;
      const real_t tmp464 = tmp462 + tmp463;
      const real_t tmp465 = 0.3256196736114374*tmp83 + 0.3256196736114374*tmp84 + 0.3256196736114374*tmp85;
      const real_t tmp466 = 3.0100340280386204*tmp87 + 3.0100340280386204*tmp88 + 3.0100340280386204*tmp89;
      const real_t tmp467 = tmp465 + tmp466;
      const real_t tmp468 = 0.69877623478892303*tmp207 + 0.69877623478892303*tmp210 + 0.69877623478892303*tmp213;
      const real_t tmp469 = 0.16196202691036121*tmp215 + 0.16196202691036121*tmp216 + 0.16196202691036121*tmp217;
      const real_t tmp470 = tmp468 + tmp469;
      const real_t tmp471 = 1.3169318389705873*tmp242 + 1.3169318389705873*tmp243 + 1.3169318389705873*tmp244;
      const real_t tmp472 = 0.11827798082591956*tmp246 + 0.11827798082591956*tmp247 + 0.11827798082591956*tmp248;
      const real_t tmp473 = tmp471 + tmp472;
      const real_t tmp474 = 0.41537646564397157*tmp111 + 0.41537646564397157*tmp112 + 0.41537646564397157*tmp113;
      const real_t tmp475 = 1.730840956191074*tmp115 + 1.730840956191074*tmp116 + 1.730840956191074*tmp117;
      const real_t tmp476 = tmp474 + tmp475;
      const real_t tmp477 = 1.2177936097379878*tmp270 + 1.2177936097379878*tmp271 + 1.2177936097379878*tmp272;
      const real_t tmp478 = 0.96110665971229103*tmp262 + 0.96110665971229103*tmp265 + 0.96110665971229103*tmp268;
      const real_t tmp479 = tmp477 + tmp478;
      const real_t tmp480 = 2.1520288156647434*tmp135 + 2.1520288156647434*tmp136 + 2.1520288156647434*tmp137;
      const real_t tmp481 = 0.51764549515564062*tmp139 + 0.51764549515564062*tmp140 + 0.51764549515564062*tmp141;
      const real_t tmp482 = tmp480 + tmp481;
      const real_t tmp483 = 0.035965040373342916*tmp298 + 0.035965040373342916*tmp299 + 0.035965040373342916*tmp300;
      const real_t tmp484 = 0.48616796533571183*tmp302 + 0.48616796533571183*tmp303 + 0.48616796533571183*tmp304;
      const real_t tmp485 = tmp483 + tmp484;
      const real_t tmp486 = 1.7318139619254227*tmp159 + 1.7318139619254227*tmp160 + 1.7318139619254227*tmp161;
      const real_t tmp487 = 1.8030635043651069*tmp163 + 1.8030635043651069*tmp164 + 1.8030635043651069*tmp165;
      const real_t tmp488 = tmp486 + tmp487;
      const real_t tmp489 = 0.21336495814298084*tmp318 + 0.21336495814298084*tmp321 + 0.21336495814298084*tmp324;
      const real_t tmp490 = 1.6770652555180527*tmp326 + 1.6770652555180527*tmp327 + 1.6770652555180527*tmp328;
      const real_t tmp491 = tmp489 + tmp490;
      const real_t tmp492 = 2.9649155283744921*tmp187 + 2.9649155283744921*tmp188 + 2.9649155283744921*tmp189;
      const real_t tmp493 = 0.2688931795735332*tmp179 + 0.2688931795735332*tmp182 + 0.2688931795735332*tmp185;
      const real_t tmp494 = tmp492 + tmp493;
      const real_t tmp495 = -tmp386*tmp464 - tmp390*tmp467 - tmp394*tmp470 - tmp398*tmp473 - tmp402*tmp476 - tmp406*tmp479 - tmp410*tmp482 - tmp414*tmp485 - tmp418*tmp488 - tmp422*tmp491 - tmp426*tmp494;
      const real_t tmp496 = -2.2903585922226259*tmp26 - 2.2903585922226259*tmp30 - 2.2903585922226259*tmp34 - tmp383 - tmp428;
      const real_t tmp497 = 0.11955133084429059*tmp18*tmp27*tmp72*tmp76 + 0.11955133084429059*tmp18*tmp31*tmp72*tmp79 + 0.11955133084429059*tmp18*tmp6*tmp67*tmp72 - tmp387 - tmp431;
      const real_t tmp498 = 3.030776123262295*tmp18*tmp199*tmp204*tmp6 + 3.030776123262295*tmp18*tmp204*tmp208*tmp27 + 3.030776123262295*tmp18*tmp204*tmp211*tmp31 - tmp391 - tmp434;
      const real_t tmp499 = 0.021561698496338266*tmp18*tmp226*tmp231*tmp6 + 0.021561698496338266*tmp18*tmp231*tmp235*tmp27 + 0.021561698496338266*tmp18*tmp231*tmp238*tmp31 - tmp395 - tmp437;
      const real_t tmp500 = -0.97680333550942233*tmp103 - 0.97680333550942233*tmp106 - 0.97680333550942233*tmp109 - tmp399 - tmp440;
      const real_t tmp501 = 0.80668592322658683*tmp18*tmp254*tmp259*tmp6 + 0.80668592322658683*tmp18*tmp259*tmp263*tmp27 + 0.80668592322658683*tmp18*tmp259*tmp266*tmp31 - tmp403 - tmp443;
      const real_t tmp502 = -1.3111976295201027*tmp129 - 1.3111976295201027*tmp131 - 1.3111976295201027*tmp133 - tmp407 - tmp446;
      const real_t tmp503 = 1.0259150868534226*tmp18*tmp27*tmp287*tmp291 + 1.0259150868534226*tmp18*tmp282*tmp287*tmp6 + 1.0259150868534226*tmp18*tmp287*tmp294*tmp31 - tmp411 - tmp449;
      const real_t tmp504 = -0.010530396686001087*tmp153 - 0.010530396686001087*tmp155 - 0.010530396686001087*tmp157 - tmp415 - tmp452;
      const real_t tmp505 = 1.727318301866275*tmp18*tmp27*tmp315*tmp319 + 1.727318301866275*tmp18*tmp31*tmp315*tmp322 + 1.727318301866275*tmp18*tmp310*tmp315*tmp6 - tmp419 - tmp455;
      const real_t tmp506 = 0.48471985386318561*tmp171*tmp176*tmp18*tmp6 + 0.48471985386318561*tmp176*tmp18*tmp180*tmp27 + 0.48471985386318561*tmp176*tmp18*tmp183*tmp31 - tmp423 - tmp458;
      const real_t tmp507 = -tmp386*tmp496 - tmp390*tmp497 - tmp394*tmp498 - tmp398*tmp499 - tmp402*tmp500 - tmp406*tmp501 - tmp410*tmp502 - tmp414*tmp503 - tmp418*tmp504 - tmp422*tmp505 - tmp426*tmp506;
      const real_t tmp508 = 0.020786379341558803*tmp18*tmp23*tmp28*tmp45 + 0.020786379341558803*tmp18*tmp23*tmp32*tmp47 + 0.020786379341558803*tmp18*tmp23*tmp43*tmp9 - tmp384 - tmp462;
      const real_t tmp509 = 0.066329140985678992*tmp18*tmp43*tmp67*tmp72 + 0.066329140985678992*tmp18*tmp45*tmp72*tmp76 + 0.066329140985678992*tmp18*tmp47*tmp72*tmp79 - tmp388 - tmp465;
      const real_t tmp510 = 2.3862426959925824*tmp18*tmp199*tmp204*tmp43 + 2.3862426959925824*tmp18*tmp204*tmp208*tmp45 + 2.3862426959925824*tmp18*tmp204*tmp211*tmp47 - tmp392 - tmp468;
      const real_t tmp511 = -0.023755899620671705*tmp246 - 0.023755899620671705*tmp247 - 0.023755899620671705*tmp248 - tmp396 - tmp471;
      const real_t tmp512 = 0.023113155683794462*tmp100*tmp104*tmp18*tmp45 + 0.023113155683794462*tmp100*tmp107*tmp18*tmp47 + 0.023113155683794462*tmp100*tmp18*tmp43*tmp95 - tmp400 - tmp474;
      const real_t tmp513 = 0.096099217150166227*tmp18*tmp254*tmp259*tmp43 + 0.096099217150166227*tmp18*tmp259*tmp263*tmp45 + 0.096099217150166227*tmp18*tmp259*tmp266*tmp47 - tmp404 - tmp477;
      const real_t tmp514 = -2.1424647858349868*tmp139 - 2.1424647858349868*tmp140 - 2.1424647858349868*tmp141 - tmp408 - tmp480;
      const real_t tmp515 = 2.215926000198841*tmp18*tmp282*tmp287*tmp43 + 2.215926000198841*tmp18*tmp287*tmp291*tmp45 + 2.215926000198841*tmp18*tmp287*tmp294*tmp47 - tmp412 - tmp483;
      const real_t tmp516 = -1.504517893413688*tmp163 - 1.504517893413688*tmp164 - 1.504517893413688*tmp165 - tmp416 - tmp486;
      const real_t tmp517 = 1.7050790859596399*tmp18*tmp310*tmp315*tmp43 + 1.7050790859596399*tmp18*tmp315*tmp319*tmp45 + 1.7050790859596399*tmp18*tmp315*tmp322*tmp47 - tmp420 - tmp489;
      const real_t tmp518 = -2.339459955416912*tmp179 - 2.339459955416912*tmp182 - 2.339459955416912*tmp185 - tmp424 - tmp492;
      const real_t tmp519 = -tmp386*tmp508 - tmp390*tmp509 - tmp394*tmp510 - tmp398*tmp511 - tmp402*tmp512 - tmp406*tmp513 - tmp410*tmp514 - tmp414*tmp515 - tmp418*tmp516 - tmp422*tmp517 - tmp426*tmp518;
      const real_t tmp520 = 0.058384491239200198*tmp18*tmp23*tmp28*tmp38 + 0.058384491239200198*tmp18*tmp23*tmp32*tmp40 + 0.058384491239200198*tmp18*tmp23*tmp36*tmp9 - tmp429 - tmp463;
      const real_t tmp521 = -tmp432 - tmp466 - 2.6180852134415042*tmp83 - 2.6180852134415042*tmp84 - 2.6180852134415042*tmp85;
      const real_t tmp522 = 2.923056903871144*tmp18*tmp199*tmp204*tmp36 + 2.923056903871144*tmp18*tmp204*tmp208*tmp38 + 2.923056903871144*tmp18*tmp204*tmp211*tmp40 - tmp435 - tmp469;
      const real_t tmp523 = 1.1748979585239958*tmp18*tmp226*tmp231*tmp36 + 1.1748979585239958*tmp18*tmp231*tmp235*tmp38 + 1.1748979585239958*tmp18*tmp231*tmp238*tmp40 - tmp438 - tmp472;
      const real_t tmp524 = -1.292351334863308*tmp111 - 1.292351334863308*tmp112 - 1.292351334863308*tmp113 - tmp441 - tmp475;
      const real_t tmp525 = 0.35278616717586297*tmp18*tmp254*tmp259*tmp36 + 0.35278616717586297*tmp18*tmp259*tmp263*tmp38 + 0.35278616717586297*tmp18*tmp259*tmp266*tmp40 - tmp444 - tmp478;
      const real_t tmp526 = -0.50808146532588383*tmp135 - 0.50808146532588383*tmp136 - 0.50808146532588383*tmp137 - tmp447 - tmp481;
      const real_t tmp527 = 1.7657230752364721*tmp18*tmp282*tmp287*tmp36 + 1.7657230752364721*tmp18*tmp287*tmp291*tmp38 + 1.7657230752364721*tmp18*tmp287*tmp294*tmp40 - tmp450 - tmp484;
      const real_t tmp528 = -1.5757674358533722*tmp159 - 1.5757674358533722*tmp160 - 1.5757674358533722*tmp161 - tmp453 - tmp487;
      const real_t tmp529 = 0.24137878858456796*tmp18*tmp310*tmp315*tmp36 + 0.24137878858456796*tmp18*tmp315*tmp319*tmp38 + 0.24137878858456796*tmp18*tmp315*tmp322*tmp40 - tmp456 - tmp490;
      const real_t tmp530 = 0.35656239338404694*tmp171*tmp176*tmp18*tmp36 + 0.35656239338404694*tmp176*tmp18*tmp180*tmp38 + 0.35656239338404694*tmp176*tmp18*tmp183*tmp40 - tmp459 - tmp493;
      const real_t tmp531 = -tmp386*tmp520 - tmp390*tmp521 - tmp394*tmp522 - tmp398*tmp523 - tmp402*tmp524 - tmp406*tmp525 - tmp410*tmp526 - tmp414*tmp527 - tmp418*tmp528 - tmp422*tmp529 - tmp426*tmp530;
      const real_t tmp532 = tmp42*tmp64;
      const real_t tmp533 = tmp86*tmp92;
      const real_t tmp534 = tmp214*tmp223;
      const real_t tmp535 = tmp245*tmp251;
      const real_t tmp536 = tmp114*tmp120;
      const real_t tmp537 = tmp273*tmp279;
      const real_t tmp538 = tmp138*tmp144;
      const real_t tmp539 = tmp301*tmp307;
      const real_t tmp540 = tmp162*tmp168;
      const real_t tmp541 = tmp325*tmp335;
      const real_t tmp542 = tmp190*tmp196;
      const real_t tmp543 = 0.0073573503010591077*tmp118*tmp536 + 0.0047025085100984255*tmp142*tmp538 - 0.0045363353981484533*tmp166*tmp540 + 0.0088418544316446034*tmp186*tmp542 - 0.001100936202251903*tmp218*tmp534 + 0.0034227212415181688*tmp249*tmp535 + 0.00018203655806882805*tmp269*tmp537 - 0.00437157426475263*tmp305*tmp539 + 0.0035467343920440879*tmp329*tmp541 - 0.0041470891910238041*tmp49*tmp532 + 0.008324951843965811*tmp533*tmp90;
      const real_t tmp544 = -0.0052263646286142846*tmp110*tmp536 + 0.0013093287357882949*tmp134*tmp538 + 0.0047245269499351069*tmp158*tmp540 - 0.0038665731836137946*tmp194*tmp542 - 0.003456627437787347*tmp222*tmp534 + 0.0029333115747788548*tmp241*tmp535 - 0.00041188701176975823*tmp277*tmp537 + 0.0010247249374778298*tmp297*tmp539 + 0.0036470052771574082*tmp333*tmp541 + 0.012562818798813762*tmp35*tmp532 + 0.00898195821005612*tmp533*tmp82;
      const real_t tmp545 = tmp337*tmp64;
      const real_t tmp546 = tmp339*tmp92;
      const real_t tmp547 = tmp223*tmp341;
      const real_t tmp548 = tmp251*tmp343;
      const real_t tmp549 = tmp120*tmp345;
      const real_t tmp550 = tmp279*tmp347;
      const real_t tmp551 = tmp144*tmp349;
      const real_t tmp552 = tmp307*tmp351;
      const real_t tmp553 = tmp168*tmp353;
      const real_t tmp554 = tmp335*tmp355;
      const real_t tmp555 = tmp196*tmp357;
      const real_t tmp556 = tmp385*tmp545 - tmp389*tmp546 + tmp393*tmp547 + tmp397*tmp548 - tmp401*tmp549 + tmp405*tmp550 + tmp409*tmp551 + tmp413*tmp552 - tmp417*tmp553 - tmp421*tmp554 + tmp425*tmp555;
      const real_t tmp557 = tmp430*tmp545 - tmp433*tmp546 + tmp436*tmp547 + tmp439*tmp548 - tmp442*tmp549 + tmp445*tmp550 + tmp448*tmp551 + tmp451*tmp552 - tmp454*tmp553 - tmp457*tmp554 + tmp460*tmp555;
      const real_t tmp558 = tmp464*tmp545 - tmp467*tmp546 + tmp470*tmp547 + tmp473*tmp548 - tmp476*tmp549 + tmp479*tmp550 + tmp482*tmp551 + tmp485*tmp552 - tmp488*tmp553 - tmp491*tmp554 + tmp494*tmp555;
      const real_t tmp559 = tmp496*tmp545 - tmp497*tmp546 + tmp498*tmp547 + tmp499*tmp548 - tmp500*tmp549 + tmp501*tmp550 + tmp502*tmp551 + tmp503*tmp552 - tmp504*tmp553 - tmp505*tmp554 + tmp506*tmp555;
      const real_t tmp560 = tmp508*tmp545 - tmp509*tmp546 + tmp510*tmp547 + tmp511*tmp548 - tmp512*tmp549 + tmp513*tmp550 + tmp514*tmp551 + tmp515*tmp552 - tmp516*tmp553 - tmp517*tmp554 + tmp518*tmp555;
      const real_t tmp561 = tmp520*tmp545 - tmp521*tmp546 + tmp522*tmp547 + tmp523*tmp548 - tmp524*tmp549 + tmp525*tmp550 + tmp526*tmp551 + tmp527*tmp552 - tmp528*tmp553 - tmp529*tmp554 + tmp530*tmp555;
      const real_t tmp562 = 0.0041807396467460484*tmp110*tmp118*tmp120 - 0.0031271283208865507*tmp134*tmp142*tmp144 + 0.0043053566332700976*tmp158*tmp166*tmp168 + 0.010391764209842001*tmp186*tmp194*tmp196 - 0.0012424476756148744*tmp218*tmp222*tmp223 - 0.0010543683966735859*tmp241*tmp249*tmp251 + 0.0023064709390845928*tmp269*tmp277*tmp279 + 0.0019225556156211496*tmp297*tmp305*tmp307 - 0.0042372018434979264*tmp329*tmp333*tmp335 + 0.011789990551396352*tmp35*tmp49*tmp64 - 0.003013509137065063*tmp82*tmp90*tmp92;
      const real_t tmp563 = tmp359*tmp64;
      const real_t tmp564 = tmp360*tmp92;
      const real_t tmp565 = tmp223*tmp361;
      const real_t tmp566 = tmp251*tmp362;
      const real_t tmp567 = tmp120*tmp363;
      const real_t tmp568 = tmp279*tmp364;
      const real_t tmp569 = tmp144*tmp365;
      const real_t tmp570 = tmp307*tmp366;
      const real_t tmp571 = tmp168*tmp367;
      const real_t tmp572 = tmp335*tmp368;
      const real_t tmp573 = tmp196*tmp369;
      const real_t tmp574 = tmp385*tmp563 + tmp389*tmp564 + tmp393*tmp565 - tmp397*tmp566 + tmp401*tmp567 - tmp405*tmp568 - tmp409*tmp569 + tmp413*tmp570 - tmp417*tmp571 + tmp421*tmp572 - tmp425*tmp573;
      const real_t tmp575 = tmp430*tmp563 + tmp433*tmp564 + tmp436*tmp565 - tmp439*tmp566 + tmp442*tmp567 - tmp445*tmp568 - tmp448*tmp569 + tmp451*tmp570 - tmp454*tmp571 + tmp457*tmp572 - tmp460*tmp573;
      const real_t tmp576 = tmp464*tmp563 + tmp467*tmp564 + tmp470*tmp565 - tmp473*tmp566 + tmp476*tmp567 - tmp479*tmp568 - tmp482*tmp569 + tmp485*tmp570 - tmp488*tmp571 + tmp491*tmp572 - tmp494*tmp573;
      const real_t tmp577 = tmp496*tmp563 + tmp497*tmp564 + tmp498*tmp565 - tmp499*tmp566 + tmp500*tmp567 - tmp501*tmp568 - tmp502*tmp569 + tmp503*tmp570 - tmp504*tmp571 + tmp505*tmp572 - tmp506*tmp573;
      const real_t tmp578 = tmp508*tmp563 + tmp509*tmp564 + tmp510*tmp565 - tmp511*tmp566 + tmp512*tmp567 - tmp513*tmp568 - tmp514*tmp569 + tmp515*tmp570 - tmp516*tmp571 + tmp517*tmp572 - tmp518*tmp573;
      const real_t tmp579 = tmp520*tmp563 + tmp521*tmp564 + tmp522*tmp565 - tmp523*tmp566 + tmp524*tmp567 - tmp525*tmp568 - tmp526*tmp569 + tmp527*tmp570 - tmp528*tmp571 + tmp529*tmp572 - tmp530*tmp573;
      const real_t tmp580 = tmp371*tmp64;
      const real_t tmp581 = tmp372*tmp92;
      const real_t tmp582 = tmp223*tmp373;
      const real_t tmp583 = tmp251*tmp374;
      const real_t tmp584 = tmp120*tmp375;
      const real_t tmp585 = tmp279*tmp376;
      const real_t tmp586 = tmp144*tmp377;
      const real_t tmp587 = tmp307*tmp378;
      const real_t tmp588 = tmp168*tmp379;
      const real_t tmp589 = tmp335*tmp380;
      const real_t tmp590 = tmp196*tmp381;
      const real_t tmp591 = -tmp385*tmp580 + tmp389*tmp581 + tmp393*tmp582 - tmp397*tmp583 - tmp401*tmp584 + tmp405*tmp585 - tmp409*tmp586 - tmp413*tmp587 + tmp417*tmp588 + tmp421*tmp589 + tmp425*tmp590;
      const real_t tmp592 = -tmp430*tmp580 + tmp433*tmp581 + tmp436*tmp582 - tmp439*tmp583 - tmp442*tmp584 + tmp445*tmp585 - tmp448*tmp586 - tmp451*tmp587 + tmp454*tmp588 + tmp457*tmp589 + tmp460*tmp590;
      const real_t tmp593 = -tmp464*tmp580 + tmp467*tmp581 + tmp470*tmp582 - tmp473*tmp583 - tmp476*tmp584 + tmp479*tmp585 - tmp482*tmp586 - tmp485*tmp587 + tmp488*tmp588 + tmp491*tmp589 + tmp494*tmp590;
      const real_t tmp594 = -tmp496*tmp580 + tmp497*tmp581 + tmp498*tmp582 - tmp499*tmp583 - tmp500*tmp584 + tmp501*tmp585 - tmp502*tmp586 - tmp503*tmp587 + tmp504*tmp588 + tmp505*tmp589 + tmp506*tmp590;
      const real_t tmp595 = -tmp508*tmp580 + tmp509*tmp581 + tmp510*tmp582 - tmp511*tmp583 - tmp512*tmp584 + tmp513*tmp585 - tmp514*tmp586 - tmp515*tmp587 + tmp516*tmp588 + tmp517*tmp589 + tmp518*tmp590;
      const real_t tmp596 = -tmp520*tmp580 + tmp521*tmp581 + tmp522*tmp582 - tmp523*tmp583 - tmp524*tmp584 + tmp525*tmp585 - tmp526*tmp586 - tmp527*tmp587 + tmp528*tmp588 + tmp529*tmp589 + tmp530*tmp590;
      const real_t tmp597 = 0.088655267825347786*tmp64;
      const real_t tmp598 = 0.00065117047591080519*tmp92;
      const real_t tmp599 = 0.0021295383964730196*tmp223;
      const real_t tmp600 = 0.021242252561440141*tmp251;
      const real_t tmp601 = 0.034491728100715977*tmp120;
      const real_t tmp602 = 0.031870261029146217*tmp279;
      const real_t tmp603 = 0.039191877909708787*tmp144;
      const real_t tmp604 = 0.013264405944568717*tmp307;
      const real_t tmp605 = 0.023150322729324171*tmp168;
      const real_t tmp606 = 0.054105733577658674*tmp196;
      const real_t tmp607 = 0.011829781572832234*tmp64;
      const real_t tmp608 = tmp385*tmp607;
      const real_t tmp609 = 0.0061414854617707626*tmp92;
      const real_t tmp610 = tmp389*tmp609;
      const real_t tmp611 = 0.0043612323249822204*tmp223;
      const real_t tmp612 = tmp393*tmp611;
      const real_t tmp613 = 0.012248248047610821*tmp251;
      const real_t tmp614 = tmp397*tmp613;
      const real_t tmp615 = 0.017219568446249611*tmp120;
      const real_t tmp616 = tmp401*tmp615;
      const real_t tmp617 = 0.021490090227737114*tmp279;
      const real_t tmp618 = tmp405*tmp617;
      const real_t tmp619 = 0.0084625239161731543*tmp144;
      const real_t tmp620 = tmp409*tmp619;
      const real_t tmp621 = 0.0088251866742250357*tmp307;
      const real_t tmp622 = tmp413*tmp621;
      const real_t tmp623 = 0.0077188851041817101*tmp168;
      const real_t tmp624 = tmp417*tmp623;
      const real_t tmp625 = 0.006659242794062166*tmp335;
      const real_t tmp626 = tmp421*tmp625;
      const real_t tmp627 = 0.0061548665412862651*tmp196;
      const real_t tmp628 = tmp425*tmp627;
      const real_t tmp629 = -tmp430*tmp608 - tmp433*tmp610 - tmp436*tmp612 - tmp439*tmp614 - tmp442*tmp616 - tmp445*tmp618 - tmp448*tmp620 - tmp451*tmp622 - tmp454*tmp624 - tmp457*tmp626 - tmp460*tmp628;
      const real_t tmp630 = -tmp464*tmp608 - tmp467*tmp610 - tmp470*tmp612 - tmp473*tmp614 - tmp476*tmp616 - tmp479*tmp618 - tmp482*tmp620 - tmp485*tmp622 - tmp488*tmp624 - tmp491*tmp626 - tmp494*tmp628;
      const real_t tmp631 = -tmp496*tmp608 - tmp497*tmp610 - tmp498*tmp612 - tmp499*tmp614 - tmp500*tmp616 - tmp501*tmp618 - tmp502*tmp620 - tmp503*tmp622 - tmp504*tmp624 - tmp505*tmp626 - tmp506*tmp628;
      const real_t tmp632 = -tmp508*tmp608 - tmp509*tmp610 - tmp510*tmp612 - tmp511*tmp614 - tmp512*tmp616 - tmp513*tmp618 - tmp514*tmp620 - tmp515*tmp622 - tmp516*tmp624 - tmp517*tmp626 - tmp518*tmp628;
      const real_t tmp633 = -tmp520*tmp608 - tmp521*tmp610 - tmp522*tmp612 - tmp523*tmp614 - tmp524*tmp616 - tmp525*tmp618 - tmp526*tmp620 - tmp527*tmp622 - tmp528*tmp624 - tmp529*tmp626 - tmp530*tmp628;
      const real_t tmp634 = 0.055643730515181525*tmp92;
      const real_t tmp635 = 0.019805451113005423*tmp251;
      const real_t tmp636 = 0.051586562503901277*tmp120;
      const real_t tmp637 = 0.01985095532947561*tmp279;
      const real_t tmp638 = 0.014762122860486882*tmp144;
      const real_t tmp639 = 0.025094388797298327*tmp168;
      const real_t tmp640 = 0.018729439144681871*tmp335;
      const real_t tmp641 = tmp430*tmp607;
      const real_t tmp642 = tmp433*tmp609;
      const real_t tmp643 = tmp436*tmp611;
      const real_t tmp644 = tmp439*tmp613;
      const real_t tmp645 = tmp442*tmp615;
      const real_t tmp646 = tmp445*tmp617;
      const real_t tmp647 = tmp448*tmp619;
      const real_t tmp648 = tmp451*tmp621;
      const real_t tmp649 = tmp454*tmp623;
      const real_t tmp650 = tmp457*tmp625;
      const real_t tmp651 = tmp460*tmp627;
      const real_t tmp652 = -tmp464*tmp641 - tmp467*tmp642 - tmp470*tmp643 - tmp473*tmp644 - tmp476*tmp645 - tmp479*tmp646 - tmp482*tmp647 - tmp485*tmp648 - tmp488*tmp649 - tmp491*tmp650 - tmp494*tmp651;
      const real_t tmp653 = -tmp496*tmp641 - tmp497*tmp642 - tmp498*tmp643 - tmp499*tmp644 - tmp500*tmp645 - tmp501*tmp646 - tmp502*tmp647 - tmp503*tmp648 - tmp504*tmp649 - tmp505*tmp650 - tmp506*tmp651;
      const real_t tmp654 = -tmp508*tmp641 - tmp509*tmp642 - tmp510*tmp643 - tmp511*tmp644 - tmp512*tmp645 - tmp513*tmp646 - tmp514*tmp647 - tmp515*tmp648 - tmp516*tmp649 - tmp517*tmp650 - tmp518*tmp651;
      const real_t tmp655 = -tmp520*tmp641 - tmp521*tmp642 - tmp522*tmp643 - tmp523*tmp644 - tmp524*tmp645 - tmp525*tmp646 - tmp526*tmp647 - tmp527*tmp648 - tmp528*tmp649 - tmp529*tmp650 - tmp530*tmp651;
      const real_t tmp656 = 0.0021510233048590414*tmp64;
      const real_t tmp657 = tmp464*tmp607;
      const real_t tmp658 = tmp467*tmp609;
      const real_t tmp659 = tmp470*tmp611;
      const real_t tmp660 = tmp473*tmp613;
      const real_t tmp661 = tmp476*tmp615;
      const real_t tmp662 = tmp479*tmp617;
      const real_t tmp663 = tmp482*tmp619;
      const real_t tmp664 = tmp485*tmp621;
      const real_t tmp665 = tmp488*tmp623;
      const real_t tmp666 = tmp491*tmp625;
      const real_t tmp667 = tmp494*tmp627;
      const real_t tmp668 = -tmp496*tmp657 - tmp497*tmp658 - tmp498*tmp659 - tmp499*tmp660 - tmp500*tmp661 - tmp501*tmp662 - tmp502*tmp663 - tmp503*tmp664 - tmp504*tmp665 - tmp505*tmp666 - tmp506*tmp667;
      const real_t tmp669 = -tmp508*tmp657 - tmp509*tmp658 - tmp510*tmp659 - tmp511*tmp660 - tmp512*tmp661 - tmp513*tmp662 - tmp514*tmp663 - tmp515*tmp664 - tmp516*tmp665 - tmp517*tmp666 - tmp518*tmp667;
      const real_t tmp670 = -tmp520*tmp657 - tmp521*tmp658 - tmp522*tmp659 - tmp523*tmp660 - tmp524*tmp661 - tmp525*tmp662 - tmp526*tmp663 - tmp527*tmp664 - tmp528*tmp665 - tmp529*tmp666 - tmp530*tmp667;
      const real_t tmp671 = tmp496*tmp607;
      const real_t tmp672 = tmp497*tmp609;
      const real_t tmp673 = tmp498*tmp611;
      const real_t tmp674 = tmp499*tmp613;
      const real_t tmp675 = tmp500*tmp615;
      const real_t tmp676 = tmp501*tmp617;
      const real_t tmp677 = tmp502*tmp619;
      const real_t tmp678 = tmp503*tmp621;
      const real_t tmp679 = tmp504*tmp623;
      const real_t tmp680 = tmp505*tmp625;
      const real_t tmp681 = tmp506*tmp627;
      const real_t tmp682 = -tmp508*tmp671 - tmp509*tmp672 - tmp510*tmp673 - tmp511*tmp674 - tmp512*tmp675 - tmp513*tmp676 - tmp514*tmp677 - tmp515*tmp678 - tmp516*tmp679 - tmp517*tmp680 - tmp518*tmp681;
      const real_t tmp683 = -tmp520*tmp671 - tmp521*tmp672 - tmp522*tmp673 - tmp523*tmp674 - tmp524*tmp675 - tmp525*tmp676 - tmp526*tmp677 - tmp527*tmp678 - tmp528*tmp679 - tmp529*tmp680 - tmp530*tmp681;
      const real_t tmp684 = -tmp508*tmp520*tmp607 - tmp509*tmp521*tmp609 - tmp510*tmp522*tmp611 - tmp511*tmp523*tmp613 - tmp512*tmp524*tmp615 - tmp513*tmp525*tmp617 - tmp514*tmp526*tmp619 - tmp515*tmp527*tmp621 - tmp516*tmp528*tmp623 - tmp517*tmp529*tmp625 - tmp518*tmp530*tmp627;
      elMat(0,0) = -0.0054292249839739343*tmp120*((tmp110 + tmp119)*(tmp110 + tmp119)) - 0.0083014263265381374*tmp144*((tmp134 + tmp143)*(tmp134 + tmp143)) - 0.0046087252711240149*tmp168*((tmp158 + tmp167)*(tmp158 + tmp167)) - 0.00086342639172544801*tmp196*((tmp186 + tmp195)*(tmp186 + tmp195)) - 0.0189596024771399*tmp223*((-tmp214 - tmp218 - tmp222)*(-tmp214 - tmp218 - tmp222)) - 0.0010527630257759059*tmp251*((-tmp241 - tmp250)*(-tmp241 - tmp250)) - 0.0021173907985490219*tmp279*((-tmp269 - tmp278)*(-tmp269 - tmp278)) - 0.013831107702793295*tmp307*((-tmp297 - tmp306)*(-tmp297 - tmp306)) - 0.0056173340848133255*tmp335*((-tmp325 - tmp334)*(-tmp325 - tmp334)) - 0.0036149972514435908*tmp64*((tmp35 + tmp50)*(tmp35 + tmp50)) - 0.0022706683527901044*tmp92*((tmp82 + tmp91)*(tmp82 + tmp91));
      elMat(0,1) = tmp358;
      elMat(0,2) = tmp370;
      elMat(0,3) = tmp382;
      elMat(0,4) = tmp427;
      elMat(0,5) = tmp461;
      elMat(0,6) = tmp495;
      elMat(0,7) = tmp507;
      elMat(0,8) = tmp519;
      elMat(0,9) = tmp531;
      elMat(1,0) = tmp358;
      elMat(1,1) = -0.0091974623207422349*(tmp114*tmp114)*tmp120 - 0.0019689404753353082*(tmp138*tmp138)*tmp144 - 0.0049779938500050438*(tmp162*tmp162)*tmp168 - 0.0032898819246143778*(tmp190*tmp190)*tmp196 - 0.0030629268005785541*(tmp214*tmp214)*tmp223 - 0.0095222010320695129*(tmp245*tmp245)*tmp251 - 3.2507885820395218e-5*(tmp273*tmp273)*tmp279 - 0.0023300554370080033*(tmp301*tmp301)*tmp307 - 0.0030527125027828036*(tmp325*tmp325)*tmp335 - 0.0044189289060270545*(tmp42*tmp42)*tmp64 - 0.024813055531683337*(tmp86*tmp86)*tmp92;
      elMat(1,2) = tmp543;
      elMat(1,3) = tmp544;
      elMat(1,4) = tmp556;
      elMat(1,5) = tmp557;
      elMat(1,6) = tmp558;
      elMat(1,7) = tmp559;
      elMat(1,8) = tmp560;
      elMat(1,9) = tmp561;
      elMat(2,0) = tmp370;
      elMat(2,1) = tmp543;
      elMat(2,2) = -0.0058853846381537785*(tmp118*tmp118)*tmp120 - 0.011231211184168578*(tmp142*tmp142)*tmp144 - 0.0041338618456657665*(tmp166*tmp166)*tmp168 - 0.023763281352280435*(tmp186*tmp186)*tmp196 - 0.00039571971527360629*(tmp218*tmp218)*tmp223 - 0.001230284958034916*(tmp249*tmp249)*tmp251 - 0.0010193621528212606*(tmp269*tmp269)*tmp279 - 0.0082018055230425203*(tmp305*tmp305)*tmp307 - 0.0041207040742425758*(tmp329*tmp329)*tmp335 - 0.0038919722684040777*(tmp49*tmp49)*tmp64 - 0.0027930789545792005*(tmp90*tmp90)*tmp92;
      elMat(2,3) = tmp562;
      elMat(2,4) = tmp574;
      elMat(2,5) = tmp575;
      elMat(2,6) = tmp576;
      elMat(2,7) = tmp577;
      elMat(2,8) = tmp578;
      elMat(2,9) = tmp579;
      elMat(3,0) = tmp382;
      elMat(3,1) = tmp544;
      elMat(3,2) = tmp562;
      elMat(3,3) = -0.0029698286634596638*(tmp110*tmp110)*tmp120 - 0.00087069251703458632*(tmp134*tmp134)*tmp144 - 0.0044839659455667077*(tmp158*tmp158)*tmp168 - 0.0045443540305762555*(tmp194*tmp194)*tmp196 - 0.0039009333299794896*(tmp222*tmp222)*tmp223 - 0.00090360587491835199*(tmp241*tmp241)*tmp251 - 0.0052187617306746906*(tmp277*tmp277)*tmp279 - 0.00045065931943546946*(tmp297*tmp297)*tmp307 - 0.0043569931591950859*(tmp333*tmp333)*tmp335 - 0.035715536395385078*(tmp35*tmp35)*tmp64 - 0.0032513357004413015*(tmp82*tmp82)*tmp92;
      elMat(3,4) = tmp591;
      elMat(3,5) = tmp592;
      elMat(3,6) = tmp593;
      elMat(3,7) = tmp594;
      elMat(3,8) = tmp595;
      elMat(3,9) = tmp596;
      elMat(4,0) = tmp427;
      elMat(4,1) = tmp556;
      elMat(4,2) = tmp574;
      elMat(4,3) = tmp591;
      elMat(4,4) = -0.00030315940021845202*tmp335*((0.89576912675729947*tmp326 + 0.89576912675729947*tmp327 + 0.89576912675729947*tmp328 + tmp333)*(0.89576912675729947*tmp326 + 0.89576912675729947*tmp327 + 0.89576912675729947*tmp328 + tmp333)) - tmp597*((0.15576514538332015*tmp26 + 0.15576514538332015*tmp30 + 0.15576514538332015*tmp34 + tmp49)*(0.15576514538332015*tmp26 + 0.15576514538332015*tmp30 + 0.15576514538332015*tmp34 + tmp49)) - tmp598*((tmp82 + 0.83655106195419338*tmp87 + 0.83655106195419338*tmp88 + 0.83655106195419338*tmp89)*(tmp82 + 0.83655106195419338*tmp87 + 0.83655106195419338*tmp88 + 0.83655106195419338*tmp89)) - tmp599*((0.077625432604466651*tmp215 + 0.077625432604466651*tmp216 + 0.077625432604466651*tmp217 + tmp222)*(0.077625432604466651*tmp215 + 0.077625432604466651*tmp216 + 0.077625432604466651*tmp217 + tmp222)) - tmp600*((tmp241 + 0.96558850141216623*tmp246 + 0.96558850141216623*tmp247 + 0.96558850141216623*tmp248)*(tmp241 + 0.96558850141216623*tmp246 + 0.96558850141216623*tmp247 + 0.96558850141216623*tmp248)) - tmp601*((0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + 0.29349150904575255*tmp109 + tmp118)*(0.29349150904575255*tmp103 + 0.29349150904575255*tmp106 + 0.29349150904575255*tmp109 + tmp118)) - tmp602*((0.41649660468385474*tmp262 + 0.41649660468385474*tmp265 + 0.41649660468385474*tmp268 + tmp277)*(0.41649660468385474*tmp262 + 0.41649660468385474*tmp265 + 0.41649660468385474*tmp268 + tmp277)) - tmp603*((tmp134 + 0.61372861261706069*tmp139 + 0.61372861261706069*tmp140 + 0.61372861261706069*tmp141)*(tmp134 + 0.61372861261706069*tmp139 + 0.61372861261706069*tmp140 + 0.61372861261706069*tmp141)) - tmp604*((0.029335844854256651*tmp290 + 0.029335844854256651*tmp293 + 0.029335844854256651*tmp296 + tmp305)*(0.029335844854256651*tmp290 + 0.029335844854256651*tmp293 + 0.029335844854256651*tmp296 + tmp305)) - tmp605*((tmp158 + 0.13732795232423314*tmp163 + 0.13732795232423314*tmp164 + 0.13732795232423314*tmp165)*(tmp158 + 0.13732795232423314*tmp163 + 0.13732795232423314*tmp164 + 0.13732795232423314*tmp165)) - tmp606*((0.047467024860419059*tmp179 + 0.047467024860419059*tmp182 + 0.047467024860419059*tmp185 + tmp194)*(0.047467024860419059*tmp179 + 0.047467024860419059*tmp182 + 0.047467024860419059*tmp185 + tmp194));
      elMat(4,5) = tmp629;
      elMat(4,6) = tmp630;
      elMat(4,7) = tmp631;
      elMat(4,8) = tmp632;
      elMat(4,9) = tmp633;
      elMat(5,0) = tmp461;
      elMat(5,1) = tmp557;
      elMat(5,2) = tmp575;
      elMat(5,3) = tmp592;
      elMat(5,4) = tmp629;
      elMat(5,5) = -0.00044501865160255012*tmp196*((0.52338895065171431*tmp187 + 0.52338895065171431*tmp188 + 0.52338895065171431*tmp189 + tmp194)*(0.52338895065171431*tmp187 + 0.52338895065171431*tmp188 + 0.52338895065171431*tmp189 + tmp194)) - 0.00011440252995854856*tmp223*((0.3349106488351834*tmp207 + 0.3349106488351834*tmp210 + 0.3349106488351834*tmp213 + tmp222)*(0.3349106488351834*tmp207 + 0.3349106488351834*tmp210 + 0.3349106488351834*tmp213 + tmp222)) - tmp597*((0.14203098464381267*tmp26 + 0.14203098464381267*tmp30 + 0.14203098464381267*tmp34 + tmp42)*(0.14203098464381267*tmp26 + 0.14203098464381267*tmp30 + 0.14203098464381267*tmp34 + tmp42)) - tmp604*((0.39655587359688027*tmp290 + 0.39655587359688027*tmp293 + 0.39655587359688027*tmp296 + tmp301)*(0.39655587359688027*tmp290 + 0.39655587359688027*tmp293 + 0.39655587359688027*tmp296 + tmp301)) - tmp634*((tmp82 + 0.090496479845553021*tmp83 + 0.090496479845553021*tmp84 + 0.090496479845553021*tmp85)*(tmp82 + 0.090496479845553021*tmp83 + 0.090496479845553021*tmp84 + 0.090496479845553021*tmp85)) - tmp635*((0.09301404232979088*tmp234 + 0.09301404232979088*tmp237 + 0.09301404232979088*tmp240 + tmp245)*(0.09301404232979088*tmp234 + 0.09301404232979088*tmp237 + 0.09301404232979088*tmp240 + tmp245)) - tmp636*((tmp110 + 0.81769093328581299*tmp111 + 0.81769093328581299*tmp112 + 0.81769093328581299*tmp113)*(tmp110 + 0.81769093328581299*tmp111 + 0.81769093328581299*tmp112 + 0.81769093328581299*tmp113)) - tmp637*((0.52773217055160193*tmp270 + 0.52773217055160193*tmp271 + 0.52773217055160193*tmp272 + tmp277)*(0.52773217055160193*tmp270 + 0.52773217055160193*tmp271 + 0.52773217055160193*tmp272 + tmp277)) - tmp638*((0.3919295290646535*tmp129 + 0.3919295290646535*tmp131 + 0.3919295290646535*tmp133 + tmp138)*(0.3919295290646535*tmp129 + 0.3919295290646535*tmp131 + 0.3919295290646535*tmp133 + tmp138)) - tmp639*((tmp158 + 0.13190132495165721*tmp159 + 0.13190132495165721*tmp160 + 0.13190132495165721*tmp161)*(tmp158 + 0.13190132495165721*tmp159 + 0.13190132495165721*tmp160 + 0.13190132495165721*tmp161)) - tmp640*((0.11396440395356359*tmp318 + 0.11396440395356359*tmp321 + 0.11396440395356359*tmp324 + tmp333)*(0.11396440395356359*tmp318 + 0.11396440395356359*tmp321 + 0.11396440395356359*tmp324 + tmp333));
      elMat(5,6) = tmp652;
      elMat(5,7) = tmp653;
      elMat(5,8) = tmp654;
      elMat(5,9) = tmp655;
      elMat(6,0) = tmp495;
      elMat(6,1) = tmp558;
      elMat(6,2) = tmp576;
      elMat(6,3) = tmp593;
      elMat(6,4) = tmp630;
      elMat(6,5) = tmp652;
      elMat(6,6) = -0.0020859148610146137*tmp307*((0.073976573813348864*tmp298 + 0.073976573813348864*tmp299 + 0.073976573813348864*tmp300 + tmp305)*(0.073976573813348864*tmp298 + 0.073976573813348864*tmp299 + 0.073976573813348864*tmp300 + tmp305)) - tmp599*((tmp214 + 0.23177952947882455*tmp215 + 0.23177952947882455*tmp216 + 0.23177952947882455*tmp217)*(tmp214 + 0.23177952947882455*tmp215 + 0.23177952947882455*tmp216 + 0.23177952947882455*tmp217)) - tmp600*((tmp245 + 0.089813289743510563*tmp246 + 0.089813289743510563*tmp247 + 0.089813289743510563*tmp248)*(tmp245 + 0.089813289743510563*tmp246 + 0.089813289743510563*tmp247 + 0.089813289743510563*tmp248)) - tmp602*((0.78921966089071216*tmp262 + 0.78921966089071216*tmp265 + 0.78921966089071216*tmp268 + tmp273)*(0.78921966089071216*tmp262 + 0.78921966089071216*tmp265 + 0.78921966089071216*tmp268 + tmp273)) - tmp603*((tmp138 + 0.24053836611650775*tmp139 + 0.24053836611650775*tmp140 + 0.24053836611650775*tmp141)*(tmp138 + 0.24053836611650775*tmp139 + 0.24053836611650775*tmp140 + 0.24053836611650775*tmp141)) - tmp606*((0.090691683118862151*tmp179 + 0.090691683118862151*tmp182 + 0.090691683118862151*tmp185 + tmp190)*(0.090691683118862151*tmp179 + 0.090691683118862151*tmp182 + 0.090691683118862151*tmp185 + tmp190)) - tmp634*((0.10817807060593786*tmp83 + 0.10817807060593786*tmp84 + 0.10817807060593786*tmp85 + tmp90)*(0.10817807060593786*tmp83 + 0.10817807060593786*tmp84 + 0.10817807060593786*tmp85 + tmp90)) - tmp636*((0.23998534594308307*tmp111 + 0.23998534594308307*tmp112 + 0.23998534594308307*tmp113 + tmp118)*(0.23998534594308307*tmp111 + 0.23998534594308307*tmp112 + 0.23998534594308307*tmp113 + tmp118)) - tmp639*((0.96048417470200387*tmp159 + 0.96048417470200387*tmp160 + 0.96048417470200387*tmp161 + tmp166)*(0.96048417470200387*tmp159 + 0.96048417470200387*tmp160 + 0.96048417470200387*tmp161 + tmp166)) - tmp640*((0.12722519737436899*tmp318 + 0.12722519737436899*tmp321 + 0.12722519737436899*tmp324 + tmp329)*(0.12722519737436899*tmp318 + 0.12722519737436899*tmp321 + 0.12722519737436899*tmp324 + tmp329)) - tmp656*((tmp42 + 0.91182776669511478*tmp44 + 0.91182776669511478*tmp46 + 0.91182776669511478*tmp48)*(tmp42 + 0.91182776669511478*tmp44 + 0.91182776669511478*tmp46 + 0.91182776669511478*tmp48));
      elMat(6,7) = tmp668;
      elMat(6,8) = tmp669;
      elMat(6,9) = tmp670;
      elMat(7,0) = tmp507;
      elMat(7,1) = tmp559;
      elMat(7,2) = tmp577;
      elMat(7,3) = tmp594;
      elMat(7,4) = tmp631;
      elMat(7,5) = tmp653;
      elMat(7,6) = tmp668;
      elMat(7,7) = -0.0004365911605749823*tmp168*((-0.044277648735374389*tmp153 - 0.044277648735374389*tmp155 - 0.044277648735374389*tmp157 - tmp167)*(-0.044277648735374389*tmp153 - 0.044277648735374389*tmp155 - 0.044277648735374389*tmp157 - tmp167)) - 0.0014461064309977984*tmp196*((-0.29034444942318749*tmp179 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp185 - 0.29034444942318749*tmp187 - 0.29034444942318749*tmp188 - 0.29034444942318749*tmp189 + tmp191 + tmp192 + tmp193)*(-0.29034444942318749*tmp179 - 0.29034444942318749*tmp182 - 0.29034444942318749*tmp185 - 0.29034444942318749*tmp187 - 0.29034444942318749*tmp188 - 0.29034444942318749*tmp189 + tmp191 + tmp192 + tmp193)) - 0.040060552693882812*tmp223*((-0.017897332337706334*tmp207 - 0.017897332337706334*tmp210 - 0.017897332337706334*tmp213 - 0.017897332337706334*tmp215 - 0.017897332337706334*tmp216 - 0.017897332337706334*tmp217 + tmp219 + tmp220 + tmp221)*(-0.017897332337706334*tmp207 - 0.017897332337706334*tmp210 - 0.017897332337706334*tmp213 - 0.017897332337706334*tmp215 - 0.017897332337706334*tmp216 - 0.017897332337706334*tmp217 + tmp219 + tmp220 + tmp221)) - 0.013984508135943425*tmp279*((-0.62875387936960425*tmp262 - 0.62875387936960425*tmp265 - 0.62875387936960425*tmp268 - 0.62875387936960425*tmp270 - 0.62875387936960425*tmp271 - 0.62875387936960425*tmp272 + tmp274 + tmp275 + tmp276)*(-0.62875387936960425*tmp262 - 0.62875387936960425*tmp265 - 0.62875387936960425*tmp268 - 0.62875387936960425*tmp270 - 0.62875387936960425*tmp271 - 0.62875387936960425*tmp272 + tmp274 + tmp275 + tmp276)) - 0.019868706695079622*tmp335*((-0.11064882600377972*tmp318 - 0.11064882600377972*tmp321 - 0.11064882600377972*tmp324 - 0.11064882600377972*tmp326 - 0.11064882600377972*tmp327 - 0.11064882600377972*tmp328 + tmp330 + tmp331 + tmp332)*(-0.11064882600377972*tmp318 - 0.11064882600377972*tmp321 - 0.11064882600377972*tmp324 - 0.11064882600377972*tmp326 - 0.11064882600377972*tmp327 - 0.11064882600377972*tmp328 + tmp330 + tmp331 + tmp332)) - tmp597*((-0.83664182771558016*tmp26 - 0.83664182771558016*tmp30 - 0.83664182771558016*tmp34 - tmp50)*(-0.83664182771558016*tmp26 - 0.83664182771558016*tmp30 - 0.83664182771558016*tmp34 - tmp50)) - tmp601*((-0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - 0.69017748642819765*tmp109 - tmp119)*(-0.69017748642819765*tmp103 - 0.69017748642819765*tmp106 - 0.69017748642819765*tmp109 - tmp119)) - tmp604*((0.83681501561389293*tmp18*tmp27*tmp287*tmp291 + 0.83681501561389293*tmp18*tmp282*tmp287*tmp6 + 0.83681501561389293*tmp18*tmp287*tmp294*tmp31 - tmp306)*(0.83681501561389293*tmp18*tmp27*tmp287*tmp291 + 0.83681501561389293*tmp18*tmp282*tmp287*tmp6 + 0.83681501561389293*tmp18*tmp287*tmp294*tmp31 - tmp306)) - tmp635*((0.01695616312213118*tmp18*tmp226*tmp231*tmp6 + 0.01695616312213118*tmp18*tmp231*tmp235*tmp27 + 0.01695616312213118*tmp18*tmp231*tmp238*tmp31 - tmp250)*(0.01695616312213118*tmp18*tmp226*tmp231*tmp6 + 0.01695616312213118*tmp18*tmp231*tmp235*tmp27 + 0.01695616312213118*tmp18*tmp231*tmp238*tmp31 - tmp250)) - tmp638*((-0.99275870119180742*tmp129 - 0.99275870119180742*tmp131 - 0.99275870119180742*tmp133 - tmp143)*(-0.99275870119180742*tmp129 - 0.99275870119180742*tmp131 - 0.99275870119180742*tmp133 - tmp143)) - 0.00045570061125237317*tmp92*((0.43888559173612551*tmp18*tmp27*tmp72*tmp76 + 0.43888559173612551*tmp18*tmp31*tmp72*tmp79 + 0.43888559173612551*tmp18*tmp6*tmp67*tmp72 - tmp91)*(0.43888559173612551*tmp18*tmp27*tmp72*tmp76 + 0.43888559173612551*tmp18*tmp31*tmp72*tmp79 + 0.43888559173612551*tmp18*tmp6*tmp67*tmp72 - tmp91));
      elMat(7,8) = tmp682;
      elMat(7,9) = tmp683;
      elMat(8,0) = tmp519;
      elMat(8,1) = tmp560;
      elMat(8,2) = tmp578;
      elMat(8,3) = tmp595;
      elMat(8,4) = tmp632;
      elMat(8,5) = tmp654;
      elMat(8,6) = tmp669;
      elMat(8,7) = tmp682;
      elMat(8,8) = -0.0029710231541394041*tmp120*((0.055643873920399871*tmp100*tmp104*tmp18*tmp45 + 0.055643873920399871*tmp100*tmp107*tmp18*tmp47 + 0.055643873920399871*tmp100*tmp18*tmp43*tmp95 - tmp110 - tmp114)*(0.055643873920399871*tmp100*tmp104*tmp18*tmp45 + 0.055643873920399871*tmp100*tmp107*tmp18*tmp47 + 0.055643873920399871*tmp100*tmp18*tmp43*tmp95 - tmp110 - tmp114)) - 0.024833529378694281*tmp223*((-0.29283535826529156*tmp207 - 0.29283535826529156*tmp210 - 0.29283535826529156*tmp213 + tmp215 + tmp216 + tmp217 - 0.29283535826529156*tmp219 - 0.29283535826529156*tmp220 - 0.29283535826529156*tmp221)*(-0.29283535826529156*tmp207 - 0.29283535826529156*tmp210 - 0.29283535826529156*tmp213 + tmp215 + tmp216 + tmp217 - 0.29283535826529156*tmp219 - 0.29283535826529156*tmp220 - 0.29283535826529156*tmp221)) - 0.043334561570183817*tmp307*((-0.016230253343349765*tmp290 - 0.016230253343349765*tmp293 - 0.016230253343349765*tmp296 - 0.016230253343349765*tmp298 - 0.016230253343349765*tmp299 - 0.016230253343349765*tmp300 + tmp302 + tmp303 + tmp304)*(-0.016230253343349765*tmp290 - 0.016230253343349765*tmp293 - 0.016230253343349765*tmp296 - 0.016230253343349765*tmp298 - 0.016230253343349765*tmp299 - 0.016230253343349765*tmp300 + tmp302 + tmp303 + tmp304)) - 0.019360381210448731*tmp335*((-0.12513493356403252*tmp318 - 0.12513493356403252*tmp321 - 0.12513493356403252*tmp324 + tmp326 + tmp327 + tmp328 - 0.12513493356403252*tmp330 - 0.12513493356403252*tmp331 - 0.12513493356403252*tmp332)*(-0.12513493356403252*tmp318 - 0.12513493356403252*tmp321 - 0.12513493356403252*tmp324 + tmp326 + tmp327 + tmp328 - 0.12513493356403252*tmp330 - 0.12513493356403252*tmp331 - 0.12513493356403252*tmp332)) - tmp598*((0.20370126979744377*tmp18*tmp43*tmp67*tmp72 + 0.20370126979744377*tmp18*tmp45*tmp72*tmp76 + 0.20370126979744377*tmp18*tmp47*tmp72*tmp79 - tmp82 - tmp86)*(0.20370126979744377*tmp18*tmp43*tmp67*tmp72 + 0.20370126979744377*tmp18*tmp45*tmp72*tmp76 + 0.20370126979744377*tmp18*tmp47*tmp72*tmp79 - tmp82 - tmp86)) - tmp600*((-tmp241 - tmp245 - 0.018038822449035097*tmp246 - 0.018038822449035097*tmp247 - 0.018038822449035097*tmp248)*(-tmp241 - tmp245 - 0.018038822449035097*tmp246 - 0.018038822449035097*tmp247 - 0.018038822449035097*tmp248)) - tmp602*((0.078912564807136973*tmp18*tmp254*tmp259*tmp43 + 0.078912564807136973*tmp18*tmp259*tmp263*tmp45 + 0.078912564807136973*tmp18*tmp259*tmp266*tmp47 - tmp278)*(0.078912564807136973*tmp18*tmp254*tmp259*tmp43 + 0.078912564807136973*tmp18*tmp259*tmp263*tmp45 + 0.078912564807136973*tmp18*tmp259*tmp266*tmp47 - tmp278)) - tmp603*((-tmp134 - tmp138 - 0.9955558077289024*tmp139 - 0.9955558077289024*tmp140 - 0.9955558077289024*tmp141)*(-tmp134 - tmp138 - 0.9955558077289024*tmp139 - 0.9955558077289024*tmp140 - 0.9955558077289024*tmp141)) - tmp605*((-tmp158 - tmp162 - 0.86875260651032749*tmp163 - 0.86875260651032749*tmp164 - 0.86875260651032749*tmp165)*(-tmp158 - tmp162 - 0.86875260651032749*tmp163 - 0.86875260651032749*tmp164 - 0.86875260651032749*tmp165)) - tmp606*((-0.78904775971796914*tmp179 - 0.78904775971796914*tmp182 - 0.78904775971796914*tmp185 - tmp195)*(-0.78904775971796914*tmp179 - 0.78904775971796914*tmp182 - 0.78904775971796914*tmp185 - tmp195)) - tmp656*((0.04874663636986367*tmp18*tmp23*tmp28*tmp45 + 0.04874663636986367*tmp18*tmp23*tmp32*tmp47 + 0.04874663636986367*tmp18*tmp23*tmp43*tmp9 - tmp35 - tmp42)*(0.04874663636986367*tmp18*tmp23*tmp28*tmp45 + 0.04874663636986367*tmp18*tmp23*tmp32*tmp47 + 0.04874663636986367*tmp18*tmp23*tmp43*tmp9 - tmp35 - tmp42));
      elMat(8,9) = tmp684;
      elMat(9,0) = tmp531;
      elMat(9,1) = tmp561;
      elMat(9,2) = tmp579;
      elMat(9,3) = tmp596;
      elMat(9,4) = tmp633;
      elMat(9,5) = tmp655;
      elMat(9,6) = tmp670;
      elMat(9,7) = tmp683;
      elMat(9,8) = tmp684;
      elMat(9,9) = -0.002267591324869961*tmp144*((-tmp134 - 0.98152397747249553*tmp135 - 0.98152397747249553*tmp136 - 0.98152397747249553*tmp137 - tmp142)*(-tmp134 - 0.98152397747249553*tmp135 - 0.98152397747249553*tmp136 - 0.98152397747249553*tmp137 - tmp142)) - 0.00078250966950696281*tmp196*((-0.75412658362967966*tmp179 - 0.75412658362967966*tmp182 - 0.75412658362967966*tmp185 + tmp187 + tmp188 + tmp189 - 0.75412658362967966*tmp191 - 0.75412658362967966*tmp192 - 0.75412658362967966*tmp193)*(-0.75412658362967966*tmp179 - 0.75412658362967966*tmp182 - 0.75412658362967966*tmp185 + tmp187 + tmp188 + tmp189 - 0.75412658362967966*tmp191 - 0.75412658362967966*tmp192 - 0.75412658362967966*tmp193)) - 0.037263510158954058*tmp223*((tmp207 + tmp210 + tmp213 - 0.055408441312198596*tmp215 - 0.055408441312198596*tmp216 - 0.055408441312198596*tmp217 - 0.055408441312198596*tmp219 - 0.055408441312198596*tmp220 - 0.055408441312198596*tmp221)*(tmp207 + tmp210 + tmp213 - 0.055408441312198596*tmp215 - 0.055408441312198596*tmp216 - 0.055408441312198596*tmp217 - 0.055408441312198596*tmp219 - 0.055408441312198596*tmp220 - 0.055408441312198596*tmp221)) - 0.016907300489390396*tmp251*((-0.10067085398165995*tmp234 - 0.10067085398165995*tmp237 - 0.10067085398165995*tmp240 + tmp242 + tmp243 + tmp244 - 0.10067085398165995*tmp246 - 0.10067085398165995*tmp247 - 0.10067085398165995*tmp248)*(-0.10067085398165995*tmp234 - 0.10067085398165995*tmp237 - 0.10067085398165995*tmp240 + tmp242 + tmp243 + tmp244 - 0.10067085398165995*tmp246 - 0.10067085398165995*tmp247 - 0.10067085398165995*tmp248)) - 0.027514972668366906*tmp307*((-0.27533647385256177*tmp290 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp296 + tmp298 + tmp299 + tmp300 - 0.27533647385256177*tmp302 - 0.27533647385256177*tmp303 - 0.27533647385256177*tmp304)*(-0.27533647385256177*tmp290 - 0.27533647385256177*tmp293 - 0.27533647385256177*tmp296 + tmp298 + tmp299 + tmp300 - 0.27533647385256177*tmp302 - 0.27533647385256177*tmp303 - 0.27533647385256177*tmp304)) - tmp634*((-tmp82 - 0.86978591904739511*tmp83 - 0.86978591904739511*tmp84 - 0.86978591904739511*tmp85 - tmp90)*(-tmp82 - 0.86978591904739511*tmp83 - 0.86978591904739511*tmp84 - 0.86978591904739511*tmp85 - tmp90)) - tmp636*((-tmp110 - 0.74666093972451641*tmp111 - 0.74666093972451641*tmp112 - 0.74666093972451641*tmp113 - tmp118)*(-tmp110 - 0.74666093972451641*tmp111 - 0.74666093972451641*tmp112 - 0.74666093972451641*tmp113 - tmp118)) - tmp637*((0.36706245202948667*tmp18*tmp254*tmp259*tmp36 + 0.36706245202948667*tmp18*tmp259*tmp263*tmp38 + 0.36706245202948667*tmp18*tmp259*tmp266*tmp40 - tmp269 - tmp277)*(0.36706245202948667*tmp18*tmp254*tmp259*tmp36 + 0.36706245202948667*tmp18*tmp259*tmp263*tmp38 + 0.36706245202948667*tmp18*tmp259*tmp266*tmp40 - tmp269 - tmp277)) - tmp639*((-tmp158 - 0.87393895558228274*tmp159 - 0.87393895558228274*tmp160 - 0.87393895558228274*tmp161 - tmp166)*(-tmp158 - 0.87393895558228274*tmp159 - 0.87393895558228274*tmp160 - 0.87393895558228274*tmp161 - tmp166)) - 0.0017884250398820132*tmp64*((0.15015869737220899*tmp18*tmp23*tmp28*tmp38 + 0.15015869737220899*tmp18*tmp23*tmp32*tmp40 + 0.15015869737220899*tmp18*tmp23*tmp36*tmp9 - tmp35 - tmp49)*(0.15015869737220899*tmp18*tmp23*tmp28*tmp38 + 0.15015869737220899*tmp18*tmp23*tmp32*tmp40 + 0.15015869737220899*tmp18*tmp23*tmp36*tmp9 - tmp35 - tmp49)) - tmp640*((0.1439292763298021*tmp18*tmp310*tmp315*tmp36 + 0.1439292763298021*tmp18*tmp315*tmp319*tmp38 + 0.1439292763298021*tmp18*tmp315*tmp322*tmp40 - tmp334)*(0.1439292763298021*tmp18*tmp310*tmp315*tmp36 + 0.1439292763298021*tmp18*tmp315*tmp319*tmp38 + 0.1439292763298021*tmp18*tmp315*tmp322*tmp40 - tmp334));
   }

   void p2_divdiv_stokes_T_p2_dep_eta_centroid_2_2_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Point3D PoI_affine_0((1.0/4.0)*coords[0][0] + (1.0/4.0)*coords[1][0] + (1.0/4.0)*coords[2][0] + (1.0/4.0)*coords[3][0], (1.0/4.0)*coords[0][1] + (1.0/4.0)*coords[1][1] + (1.0/4.0)*coords[2][1] + (1.0/4.0)*coords[3][1], (1.0/4.0)*coords[0][2] + (1.0/4.0)*coords[1][2] + (1.0/4.0)*coords[2][2] + (1.0/4.0)*coords[3][2]);
      Point3D PoI_blending_0;
      geometryMap_->evalF(Point3D(PoI_affine_0[0], PoI_affine_0[1], PoI_affine_0[2]), PoI_blending_0);
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = eta_(Point3D(B_1[0], B_1[1], B_1[2]), -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_2 = eta_(Point3D(B_2[0], B_2[1], B_2[2]), -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_3 = eta_(Point3D(B_3[0], B_3[1], B_3[2]), -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_4 = eta_(Point3D(B_4[0], B_4[1], B_4[2]), -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_5 = eta_(Point3D(B_5[0], B_5[1], B_5[2]), -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_6 = eta_(Point3D(B_6[0], B_6[1], B_6[2]), 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_7 = eta_(Point3D(B_7[0], B_7[1], B_7[2]), -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_8 = eta_(Point3D(B_8[0], B_8[1], B_8[2]), -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_9 = eta_(Point3D(B_9[0], B_9[1], B_9[2]), -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_10 = eta_(Point3D(B_10[0], B_10[1], B_10[2]), -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      real_t ScalarCoeff0_11 = eta_(Point3D(B_11[0], B_11[1], B_11[2]), 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9], -1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9], PoI_blending_0[0], PoI_blending_0[1], PoI_blending_0[2]);
      const real_t tmp0 = -coords[0][0] + coords[2][0];
      const real_t tmp1 = -coords[0][1] + coords[3][1];
      const real_t tmp2 = -coords[0][0] + coords[3][0];
      const real_t tmp3 = -coords[0][1] + coords[2][1];
      const real_t tmp4 = tmp0*tmp1 - tmp2*tmp3;
      const real_t tmp5 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp6 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = tmp5 - tmp6;
      const real_t tmp8 = -coords[0][2] + coords[3][2];
      const real_t tmp9 = -coords[0][0] + coords[1][0];
      const real_t tmp10 = tmp3*tmp9;
      const real_t tmp11 = -coords[0][2] + coords[1][2];
      const real_t tmp12 = -coords[0][1] + coords[1][1];
      const real_t tmp13 = -coords[0][2] + coords[2][2];
      const real_t tmp14 = tmp12*tmp13;
      const real_t tmp15 = tmp1*tmp9;
      const real_t tmp16 = tmp0*tmp12;
      const real_t tmp17 = tmp11*tmp2;
      const real_t tmp18 = 1.0 / (tmp0*tmp1*tmp11 + tmp10*tmp8 - tmp13*tmp15 + tmp14*tmp2 - tmp16*tmp8 - tmp17*tmp3);
      const real_t tmp19 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp20 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp22 = tmp19*J_B_1(2, 0) - tmp20*J_B_1(2, 1) - tmp21*J_B_1(2, 0) + tmp5*J_B_1(2, 2) - tmp6*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp23 = 1.0 / (tmp22);
      const real_t tmp24 = tmp18*tmp23;
      const real_t tmp25 = tmp24*tmp7;
      const real_t tmp26 = tmp25*tmp4;
      const real_t tmp27 = -tmp0*tmp8 + tmp13*tmp2;
      const real_t tmp28 = -tmp20 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp29 = tmp24*tmp28;
      const real_t tmp30 = tmp27*tmp29;
      const real_t tmp31 = -tmp1*tmp13 + tmp3*tmp8;
      const real_t tmp32 = tmp19 - tmp21;
      const real_t tmp33 = tmp24*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp26 + tmp30 + tmp34;
      const real_t tmp36 = tmp12*tmp2 - tmp15;
      const real_t tmp37 = tmp25*tmp36;
      const real_t tmp38 = -tmp17 + tmp8*tmp9;
      const real_t tmp39 = tmp29*tmp38;
      const real_t tmp40 = tmp1*tmp11 - tmp12*tmp8;
      const real_t tmp41 = tmp33*tmp40;
      const real_t tmp42 = tmp37 + tmp39 + tmp41;
      const real_t tmp43 = tmp10 - tmp16;
      const real_t tmp44 = tmp25*tmp43;
      const real_t tmp45 = tmp0*tmp11 - tmp13*tmp9;
      const real_t tmp46 = tmp29*tmp45;
      const real_t tmp47 = -tmp11*tmp3 + tmp14;
      const real_t tmp48 = tmp33*tmp47;
      const real_t tmp49 = tmp44 + tmp46 + tmp48;
      const real_t tmp50 = coords[0][0]*coords[1][1];
      const real_t tmp51 = coords[0][0]*coords[1][2];
      const real_t tmp52 = coords[2][1]*coords[3][2];
      const real_t tmp53 = coords[0][1]*coords[1][0];
      const real_t tmp54 = coords[0][1]*coords[1][2];
      const real_t tmp55 = coords[2][2]*coords[3][0];
      const real_t tmp56 = coords[0][2]*coords[1][0];
      const real_t tmp57 = coords[0][2]*coords[1][1];
      const real_t tmp58 = coords[2][0]*coords[3][1];
      const real_t tmp59 = coords[2][2]*coords[3][1];
      const real_t tmp60 = coords[2][0]*coords[3][2];
      const real_t tmp61 = coords[2][1]*coords[3][0];
      const real_t tmp62 = std::abs(coords[0][0]*tmp52 - coords[0][0]*tmp59 + coords[0][1]*tmp55 - coords[0][1]*tmp60 + coords[0][2]*tmp58 - coords[0][2]*tmp61 - coords[1][0]*tmp52 + coords[1][0]*tmp59 - coords[1][1]*tmp55 + coords[1][1]*tmp60 - coords[1][2]*tmp58 + coords[1][2]*tmp61 + coords[2][0]*tmp54 - coords[2][0]*tmp57 - coords[2][1]*tmp51 + coords[2][1]*tmp56 + coords[2][2]*tmp50 - coords[2][2]*tmp53 - coords[3][0]*tmp54 + coords[3][0]*tmp57 + coords[3][1]*tmp51 - coords[3][1]*tmp56 - coords[3][2]*tmp50 + coords[3][2]*tmp53);
      const real_t tmp63 = tmp62*std::abs(tmp22)*ScalarCoeff0_1;
      const real_t tmp64 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp65 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp66 = tmp64 - tmp65;
      const real_t tmp67 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp68 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp69 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp70 = tmp64*J_B_10(2, 2) - tmp65*J_B_10(2, 2) + tmp67*J_B_10(2, 0) - tmp68*J_B_10(2, 1) - tmp69*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp71 = 1.0 / (tmp70);
      const real_t tmp72 = tmp18*tmp71;
      const real_t tmp73 = tmp66*tmp72;
      const real_t tmp74 = tmp4*tmp73;
      const real_t tmp75 = -tmp68 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp76 = tmp72*tmp75;
      const real_t tmp77 = tmp27*tmp76;
      const real_t tmp78 = tmp67 - tmp69;
      const real_t tmp79 = tmp72*tmp78;
      const real_t tmp80 = tmp31*tmp79;
      const real_t tmp81 = tmp74 + tmp77 + tmp80;
      const real_t tmp82 = tmp36*tmp73;
      const real_t tmp83 = tmp38*tmp76;
      const real_t tmp84 = tmp40*tmp79;
      const real_t tmp85 = tmp82 + tmp83 + tmp84;
      const real_t tmp86 = tmp43*tmp73;
      const real_t tmp87 = tmp45*tmp76;
      const real_t tmp88 = tmp47*tmp79;
      const real_t tmp89 = tmp86 + tmp87 + tmp88;
      const real_t tmp90 = tmp62*std::abs(tmp70)*ScalarCoeff0_10;
      const real_t tmp91 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp92 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp93 = tmp91 - tmp92;
      const real_t tmp94 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp95 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp96 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp97 = tmp91*J_B_3(2, 2) - tmp92*J_B_3(2, 2) + tmp94*J_B_3(2, 0) - tmp95*J_B_3(2, 1) - tmp96*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp98 = 1.0 / (tmp97);
      const real_t tmp99 = tmp18*tmp98;
      const real_t tmp100 = tmp93*tmp99;
      const real_t tmp101 = tmp100*tmp4;
      const real_t tmp102 = -tmp95 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp103 = tmp102*tmp99;
      const real_t tmp104 = tmp103*tmp27;
      const real_t tmp105 = tmp94 - tmp96;
      const real_t tmp106 = tmp105*tmp99;
      const real_t tmp107 = tmp106*tmp31;
      const real_t tmp108 = tmp101 + tmp104 + tmp107;
      const real_t tmp109 = tmp100*tmp36;
      const real_t tmp110 = tmp103*tmp38;
      const real_t tmp111 = tmp106*tmp40;
      const real_t tmp112 = tmp109 + tmp110 + tmp111;
      const real_t tmp113 = tmp100*tmp43;
      const real_t tmp114 = tmp103*tmp45;
      const real_t tmp115 = tmp106*tmp47;
      const real_t tmp116 = tmp113 + tmp114 + tmp115;
      const real_t tmp117 = tmp62*std::abs(tmp97)*ScalarCoeff0_3;
      const real_t tmp118 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp119 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp120 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp121 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp122 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp123 = tmp118*J_B_5(2, 2) - tmp119*J_B_5(2, 2) + tmp120*J_B_5(2, 0) - tmp121*J_B_5(2, 1) - tmp122*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp124 = tmp18/tmp123;
      const real_t tmp125 = tmp124*(tmp118 - tmp119);
      const real_t tmp126 = tmp125*tmp4;
      const real_t tmp127 = tmp124*(-tmp121 + J_B_5(0, 2)*J_B_5(1, 0));
      const real_t tmp128 = tmp127*tmp27;
      const real_t tmp129 = tmp124*(tmp120 - tmp122);
      const real_t tmp130 = tmp129*tmp31;
      const real_t tmp131 = tmp126 + tmp128 + tmp130;
      const real_t tmp132 = tmp125*tmp36;
      const real_t tmp133 = tmp127*tmp38;
      const real_t tmp134 = tmp129*tmp40;
      const real_t tmp135 = tmp132 + tmp133 + tmp134;
      const real_t tmp136 = tmp125*tmp43;
      const real_t tmp137 = tmp127*tmp45;
      const real_t tmp138 = tmp129*tmp47;
      const real_t tmp139 = tmp136 + tmp137 + tmp138;
      const real_t tmp140 = tmp62*std::abs(tmp123)*ScalarCoeff0_5;
      const real_t tmp141 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp142 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp143 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp144 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp145 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp146 = tmp141*J_B_7(2, 2) - tmp142*J_B_7(2, 2) + tmp143*J_B_7(2, 0) - tmp144*J_B_7(2, 1) - tmp145*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp147 = tmp18/tmp146;
      const real_t tmp148 = tmp147*(tmp141 - tmp142);
      const real_t tmp149 = tmp148*tmp4;
      const real_t tmp150 = tmp147*(-tmp144 + J_B_7(0, 2)*J_B_7(1, 0));
      const real_t tmp151 = tmp150*tmp27;
      const real_t tmp152 = tmp147*(tmp143 - tmp145);
      const real_t tmp153 = tmp152*tmp31;
      const real_t tmp154 = tmp149 + tmp151 + tmp153;
      const real_t tmp155 = tmp148*tmp36;
      const real_t tmp156 = tmp150*tmp38;
      const real_t tmp157 = tmp152*tmp40;
      const real_t tmp158 = tmp155 + tmp156 + tmp157;
      const real_t tmp159 = tmp148*tmp43;
      const real_t tmp160 = tmp150*tmp45;
      const real_t tmp161 = tmp152*tmp47;
      const real_t tmp162 = tmp159 + tmp160 + tmp161;
      const real_t tmp163 = tmp62*std::abs(tmp146)*ScalarCoeff0_7;
      const real_t tmp164 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp165 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp166 = tmp164 - tmp165;
      const real_t tmp167 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp168 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp169 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp170 = tmp164*J_B_9(2, 2) - tmp165*J_B_9(2, 2) + tmp167*J_B_9(2, 0) - tmp168*J_B_9(2, 1) - tmp169*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp171 = 1.0 / (tmp170);
      const real_t tmp172 = tmp171*tmp18;
      const real_t tmp173 = tmp166*tmp172;
      const real_t tmp174 = tmp173*tmp4;
      const real_t tmp175 = -tmp168 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp176 = tmp172*tmp175;
      const real_t tmp177 = tmp176*tmp27;
      const real_t tmp178 = tmp167 - tmp169;
      const real_t tmp179 = tmp172*tmp178;
      const real_t tmp180 = tmp179*tmp31;
      const real_t tmp181 = tmp174 + tmp177 + tmp180;
      const real_t tmp182 = tmp173*tmp36;
      const real_t tmp183 = tmp176*tmp38;
      const real_t tmp184 = tmp179*tmp40;
      const real_t tmp185 = tmp182 + tmp183 + tmp184;
      const real_t tmp186 = tmp173*tmp43;
      const real_t tmp187 = tmp176*tmp45;
      const real_t tmp188 = tmp179*tmp47;
      const real_t tmp189 = tmp186 + tmp187 + tmp188;
      const real_t tmp190 = tmp62*std::abs(tmp170)*ScalarCoeff0_9;
      const real_t tmp191 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp192 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp193 = tmp191 - tmp192;
      const real_t tmp194 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp195 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp196 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp197 = tmp191*J_B_11(2, 2) - tmp192*J_B_11(2, 2) + tmp194*J_B_11(2, 0) - tmp195*J_B_11(2, 1) - tmp196*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp198 = 1.0 / (tmp197);
      const real_t tmp199 = tmp18*tmp198;
      const real_t tmp200 = tmp193*tmp199;
      const real_t tmp201 = tmp200*tmp4;
      const real_t tmp202 = -tmp195 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp203 = tmp199*tmp202;
      const real_t tmp204 = tmp203*tmp27;
      const real_t tmp205 = tmp194 - tmp196;
      const real_t tmp206 = tmp199*tmp205;
      const real_t tmp207 = tmp206*tmp31;
      const real_t tmp208 = tmp201 + tmp204 + tmp207;
      const real_t tmp209 = tmp200*tmp36;
      const real_t tmp210 = tmp203*tmp38;
      const real_t tmp211 = tmp206*tmp40;
      const real_t tmp212 = tmp209 + tmp210 + tmp211;
      const real_t tmp213 = tmp200*tmp43;
      const real_t tmp214 = tmp203*tmp45;
      const real_t tmp215 = tmp206*tmp47;
      const real_t tmp216 = tmp213 + tmp214 + tmp215;
      const real_t tmp217 = tmp62*std::abs(tmp197)*ScalarCoeff0_11;
      const real_t tmp218 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp219 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp220 = tmp218 - tmp219;
      const real_t tmp221 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp222 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp223 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp224 = tmp218*J_B_2(2, 2) - tmp219*J_B_2(2, 2) + tmp221*J_B_2(2, 0) - tmp222*J_B_2(2, 1) - tmp223*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp225 = 1.0 / (tmp224);
      const real_t tmp226 = tmp18*tmp225;
      const real_t tmp227 = tmp220*tmp226;
      const real_t tmp228 = tmp227*tmp4;
      const real_t tmp229 = -tmp222 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp230 = tmp226*tmp229;
      const real_t tmp231 = tmp230*tmp27;
      const real_t tmp232 = tmp221 - tmp223;
      const real_t tmp233 = tmp226*tmp232;
      const real_t tmp234 = tmp233*tmp31;
      const real_t tmp235 = tmp228 + tmp231 + tmp234;
      const real_t tmp236 = tmp227*tmp36;
      const real_t tmp237 = tmp230*tmp38;
      const real_t tmp238 = tmp233*tmp40;
      const real_t tmp239 = tmp236 + tmp237 + tmp238;
      const real_t tmp240 = tmp227*tmp43;
      const real_t tmp241 = tmp230*tmp45;
      const real_t tmp242 = tmp233*tmp47;
      const real_t tmp243 = tmp240 + tmp241 + tmp242;
      const real_t tmp244 = tmp62*std::abs(tmp224)*ScalarCoeff0_2;
      const real_t tmp245 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp246 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp247 = tmp245 - tmp246;
      const real_t tmp248 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp249 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp250 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp251 = tmp245*J_B_4(2, 2) - tmp246*J_B_4(2, 2) + tmp248*J_B_4(2, 0) - tmp249*J_B_4(2, 1) - tmp250*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp252 = 1.0 / (tmp251);
      const real_t tmp253 = tmp18*tmp252;
      const real_t tmp254 = tmp247*tmp253;
      const real_t tmp255 = tmp254*tmp4;
      const real_t tmp256 = -tmp249 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp257 = tmp253*tmp256;
      const real_t tmp258 = tmp257*tmp27;
      const real_t tmp259 = tmp248 - tmp250;
      const real_t tmp260 = tmp253*tmp259;
      const real_t tmp261 = tmp260*tmp31;
      const real_t tmp262 = tmp255 + tmp258 + tmp261;
      const real_t tmp263 = tmp254*tmp36;
      const real_t tmp264 = tmp257*tmp38;
      const real_t tmp265 = tmp260*tmp40;
      const real_t tmp266 = tmp263 + tmp264 + tmp265;
      const real_t tmp267 = tmp254*tmp43;
      const real_t tmp268 = tmp257*tmp45;
      const real_t tmp269 = tmp260*tmp47;
      const real_t tmp270 = tmp267 + tmp268 + tmp269;
      const real_t tmp271 = tmp62*std::abs(tmp251)*ScalarCoeff0_4;
      const real_t tmp272 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp273 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp274 = tmp272 - tmp273;
      const real_t tmp275 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp276 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp277 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp278 = tmp272*J_B_6(2, 2) - tmp273*J_B_6(2, 2) + tmp275*J_B_6(2, 0) - tmp276*J_B_6(2, 1) - tmp277*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp279 = 1.0 / (tmp278);
      const real_t tmp280 = tmp18*tmp279;
      const real_t tmp281 = tmp274*tmp280;
      const real_t tmp282 = tmp281*tmp4;
      const real_t tmp283 = -tmp276 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp284 = tmp280*tmp283;
      const real_t tmp285 = tmp27*tmp284;
      const real_t tmp286 = tmp275 - tmp277;
      const real_t tmp287 = tmp280*tmp286;
      const real_t tmp288 = tmp287*tmp31;
      const real_t tmp289 = tmp282 + tmp285 + tmp288;
      const real_t tmp290 = tmp281*tmp36;
      const real_t tmp291 = tmp284*tmp38;
      const real_t tmp292 = tmp287*tmp40;
      const real_t tmp293 = tmp290 + tmp291 + tmp292;
      const real_t tmp294 = tmp281*tmp43;
      const real_t tmp295 = tmp284*tmp45;
      const real_t tmp296 = tmp287*tmp47;
      const real_t tmp297 = tmp294 + tmp295 + tmp296;
      const real_t tmp298 = tmp62*std::abs(tmp278)*ScalarCoeff0_6;
      const real_t tmp299 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp300 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp301 = tmp299 - tmp300;
      const real_t tmp302 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp303 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp304 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp305 = tmp299*J_B_8(2, 2) - tmp300*J_B_8(2, 2) + tmp302*J_B_8(2, 0) - tmp303*J_B_8(2, 1) - tmp304*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp306 = 1.0 / (tmp305);
      const real_t tmp307 = tmp18*tmp306;
      const real_t tmp308 = tmp301*tmp307;
      const real_t tmp309 = tmp308*tmp4;
      const real_t tmp310 = -tmp303 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp311 = tmp307*tmp310;
      const real_t tmp312 = tmp27*tmp311;
      const real_t tmp313 = tmp302 - tmp304;
      const real_t tmp314 = tmp307*tmp313;
      const real_t tmp315 = tmp31*tmp314;
      const real_t tmp316 = tmp309 + tmp312 + tmp315;
      const real_t tmp317 = tmp308*tmp36;
      const real_t tmp318 = tmp311*tmp38;
      const real_t tmp319 = tmp314*tmp40;
      const real_t tmp320 = tmp317 + tmp318 + tmp319;
      const real_t tmp321 = tmp308*tmp43;
      const real_t tmp322 = tmp311*tmp45;
      const real_t tmp323 = tmp314*tmp47;
      const real_t tmp324 = tmp321 + tmp322 + tmp323;
      const real_t tmp325 = tmp62*std::abs(tmp305)*ScalarCoeff0_8;
      const real_t tmp326 = tmp63*(0.55279693041046674*tmp26 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp39 + 0.55279693041046674*tmp41 + 0.55279693041046674*tmp44 + 0.55279693041046674*tmp46 + 0.55279693041046674*tmp48);
      const real_t tmp327 = tmp90*(0.60805118540288361*tmp74 + 0.60805118540288361*tmp77 + 0.60805118540288361*tmp80 + 0.60805118540288361*tmp82 + 0.60805118540288361*tmp83 + 0.60805118540288361*tmp84 + 0.60805118540288361*tmp86 + 0.60805118540288361*tmp87 + 0.60805118540288361*tmp88);
      const real_t tmp328 = tmp217*(-2.0850189307815055*tmp201 - 2.0850189307815055*tmp204 - 2.0850189307815055*tmp207 - 2.0850189307815055*tmp209 - 2.0850189307815055*tmp210 - 2.0850189307815055*tmp211 - 2.0850189307815055*tmp213 - 2.0850189307815055*tmp214 - 2.0850189307815055*tmp215);
      const real_t tmp329 = tmp244*(-0.29317593934991559*tmp228 - 0.29317593934991559*tmp231 - 0.29317593934991559*tmp234 - 0.29317593934991559*tmp236 - 0.29317593934991559*tmp237 - 0.29317593934991559*tmp238 - 0.29317593934991559*tmp240 - 0.29317593934991559*tmp241 - 0.29317593934991559*tmp242);
      const real_t tmp330 = tmp117*(0.56151037867223397*tmp101 + 0.56151037867223397*tmp104 + 0.56151037867223397*tmp107 + 0.56151037867223397*tmp109 + 0.56151037867223397*tmp110 + 0.56151037867223397*tmp111 + 0.56151037867223397*tmp113 + 0.56151037867223397*tmp114 + 0.56151037867223397*tmp115);
      const real_t tmp331 = tmp271*(-0.31389282688815401*tmp255 - 0.31389282688815401*tmp258 - 0.31389282688815401*tmp261 - 0.31389282688815401*tmp263 - 0.31389282688815401*tmp264 - 0.31389282688815401*tmp265 - 0.31389282688815401*tmp267 - 0.31389282688815401*tmp268 - 0.31389282688815401*tmp269);
      const real_t tmp332 = tmp140*(0.99043597017024343*tmp126 + 0.99043597017024343*tmp128 + 0.99043597017024343*tmp130 + 0.99043597017024343*tmp132 + 0.99043597017024343*tmp133 + 0.99043597017024343*tmp134 + 0.99043597017024343*tmp136 + 0.99043597017024343*tmp137 + 0.99043597017024343*tmp138);
      const real_t tmp333 = tmp298*(-1.2518910405721839*tmp282 - 1.2518910405721839*tmp285 - 1.2518910405721839*tmp288 - 1.2518910405721839*tmp290 - 1.2518910405721839*tmp291 - 1.2518910405721839*tmp292 - 1.2518910405721839*tmp294 - 1.2518910405721839*tmp295 - 1.2518910405721839*tmp296);
      const real_t tmp334 = tmp163*(0.77270393148826533*tmp149 + 0.77270393148826533*tmp151 + 0.77270393148826533*tmp153 + 0.77270393148826533*tmp155 + 0.77270393148826533*tmp156 + 0.77270393148826533*tmp157 + 0.77270393148826533*tmp159 + 0.77270393148826533*tmp160 + 0.77270393148826533*tmp161);
      const real_t tmp335 = tmp325*(-0.9184440441026207*tmp309 - 0.9184440441026207*tmp312 - 0.9184440441026207*tmp315 - 0.9184440441026207*tmp317 - 0.9184440441026207*tmp318 - 0.9184440441026207*tmp319 - 0.9184440441026207*tmp321 - 0.9184440441026207*tmp322 - 0.9184440441026207*tmp323);
      const real_t tmp336 = tmp190*(0.37454442704241986*tmp174 + 0.37454442704241986*tmp177 + 0.37454442704241986*tmp180 + 0.37454442704241986*tmp182 + 0.37454442704241986*tmp183 + 0.37454442704241986*tmp184 + 0.37454442704241986*tmp186 + 0.37454442704241986*tmp187 + 0.37454442704241986*tmp188);
      const real_t tmp337 = 2.7375616618121592*tmp37 + 2.7375616618121592*tmp39 + 2.7375616618121592*tmp41;
      const real_t tmp338 = 0.42641669024797446*tmp44 + 0.42641669024797446*tmp46 + 0.42641669024797446*tmp48;
      const real_t tmp339 = 0.011829781572832234*tmp326;
      const real_t tmp340 = 0.2723974837528258*tmp82 + 0.2723974837528258*tmp83 + 0.2723974837528258*tmp84;
      const real_t tmp341 = 0.3256196736114374*tmp86 + 0.3256196736114374*tmp87 + 0.3256196736114374*tmp88;
      const real_t tmp342 = 0.0061414854617707626*tmp327;
      const real_t tmp343 = 0.054242807519210512*tmp209 + 0.054242807519210512*tmp210 + 0.054242807519210512*tmp211;
      const real_t tmp344 = 0.69877623478892303*tmp213 + 0.69877623478892303*tmp214 + 0.69877623478892303*tmp215;
      const real_t tmp345 = 0.0043612323249822204*tmp328;
      const real_t tmp346 = 1.2716142408535775*tmp236 + 1.2716142408535775*tmp237 + 1.2716142408535775*tmp238;
      const real_t tmp347 = 1.3169318389705873*tmp240 + 1.3169318389705873*tmp241 + 1.3169318389705873*tmp242;
      const real_t tmp348 = 0.012248248047610821*tmp329;
      const real_t tmp349 = 1.4152929568371884*tmp109 + 1.4152929568371884*tmp110 + 1.4152929568371884*tmp111;
      const real_t tmp350 = 0.41537646564397157*tmp113 + 0.41537646564397157*tmp114 + 0.41537646564397157*tmp115;
      const real_t tmp351 = 0.017219568446249611*tmp330;
      const real_t tmp352 = 0.50720690366156718*tmp263 + 0.50720690366156718*tmp264 + 0.50720690366156718*tmp265;
      const real_t tmp353 = 1.2177936097379878*tmp267 + 1.2177936097379878*tmp268 + 1.2177936097379878*tmp269;
      const real_t tmp354 = 0.021490090227737114*tmp331;
      const real_t tmp355 = 1.3207616593498592*tmp132 + 1.3207616593498592*tmp133 + 1.3207616593498592*tmp134;
      const real_t tmp356 = 2.1520288156647434*tmp136 + 2.1520288156647434*tmp137 + 2.1520288156647434*tmp138;
      const real_t tmp357 = 0.0084625239161731543*tmp332;
      const real_t tmp358 = 1.2259759537187613*tmp290 + 1.2259759537187613*tmp291 + 1.2259759537187613*tmp292;
      const real_t tmp359 = 0.035965040373342916*tmp294 + 0.035965040373342916*tmp295 + 0.035965040373342916*tmp296;
      const real_t tmp360 = 0.0088251866742250357*tmp333;
      const real_t tmp361 = 0.23782646519773576*tmp155 + 0.23782646519773576*tmp156 + 0.23782646519773576*tmp157;
      const real_t tmp362 = 1.7318139619254227*tmp159 + 1.7318139619254227*tmp160 + 1.7318139619254227*tmp161;
      const real_t tmp363 = 0.0077188851041817101*tmp334;
      const real_t tmp364 = 0.19112574223634571*tmp317 + 0.19112574223634571*tmp318 + 0.19112574223634571*tmp319;
      const real_t tmp365 = 0.21336495814298084*tmp321 + 0.21336495814298084*tmp322 + 0.21336495814298084*tmp323;
      const real_t tmp366 = 0.006659242794062166*tmp335;
      const real_t tmp367 = 0.14073571909439453*tmp182 + 0.14073571909439453*tmp183 + 0.14073571909439453*tmp184;
      const real_t tmp368 = 2.9649155283744921*tmp186 + 2.9649155283744921*tmp187 + 2.9649155283744921*tmp188;
      const real_t tmp369 = 0.0061548665412862651*tmp336;
      const real_t tmp370 = 2.7375616618121592*tmp26 + 2.7375616618121592*tmp30 + 2.7375616618121592*tmp34;
      const real_t tmp371 = 0.38881857835033307*tmp44 + 0.38881857835033307*tmp46 + 0.38881857835033307*tmp48;
      const real_t tmp372 = 0.2723974837528258*tmp74 + 0.2723974837528258*tmp77 + 0.2723974837528258*tmp80;
      const real_t tmp373 = 3.0100340280386204*tmp86 + 3.0100340280386204*tmp87 + 3.0100340280386204*tmp88;
      const real_t tmp374 = 0.054242807519210512*tmp201 + 0.054242807519210512*tmp204 + 0.054242807519210512*tmp207;
      const real_t tmp375 = 0.16196202691036121*tmp213 + 0.16196202691036121*tmp214 + 0.16196202691036121*tmp215;
      const real_t tmp376 = 1.2716142408535775*tmp228 + 1.2716142408535775*tmp231 + 1.2716142408535775*tmp234;
      const real_t tmp377 = 0.11827798082591956*tmp240 + 0.11827798082591956*tmp241 + 0.11827798082591956*tmp242;
      const real_t tmp378 = 1.4152929568371884*tmp101 + 1.4152929568371884*tmp104 + 1.4152929568371884*tmp107;
      const real_t tmp379 = 1.730840956191074*tmp113 + 1.730840956191074*tmp114 + 1.730840956191074*tmp115;
      const real_t tmp380 = 0.50720690366156718*tmp255 + 0.50720690366156718*tmp258 + 0.50720690366156718*tmp261;
      const real_t tmp381 = 0.96110665971229103*tmp267 + 0.96110665971229103*tmp268 + 0.96110665971229103*tmp269;
      const real_t tmp382 = 1.3207616593498592*tmp126 + 1.3207616593498592*tmp128 + 1.3207616593498592*tmp130;
      const real_t tmp383 = 0.51764549515564062*tmp136 + 0.51764549515564062*tmp137 + 0.51764549515564062*tmp138;
      const real_t tmp384 = 1.2259759537187613*tmp282 + 1.2259759537187613*tmp285 + 1.2259759537187613*tmp288;
      const real_t tmp385 = 0.48616796533571183*tmp294 + 0.48616796533571183*tmp295 + 0.48616796533571183*tmp296;
      const real_t tmp386 = 0.23782646519773576*tmp149 + 0.23782646519773576*tmp151 + 0.23782646519773576*tmp153;
      const real_t tmp387 = 1.8030635043651069*tmp159 + 1.8030635043651069*tmp160 + 1.8030635043651069*tmp161;
      const real_t tmp388 = 0.19112574223634571*tmp309 + 0.19112574223634571*tmp312 + 0.19112574223634571*tmp315;
      const real_t tmp389 = 1.6770652555180527*tmp321 + 1.6770652555180527*tmp322 + 1.6770652555180527*tmp323;
      const real_t tmp390 = 0.14073571909439453*tmp174 + 0.14073571909439453*tmp177 + 0.14073571909439453*tmp180;
      const real_t tmp391 = 0.2688931795735332*tmp186 + 0.2688931795735332*tmp187 + 0.2688931795735332*tmp188;
      const real_t tmp392 = 0.42641669024797446*tmp26 + 0.42641669024797446*tmp30 + 0.42641669024797446*tmp34;
      const real_t tmp393 = 0.38881857835033307*tmp37 + 0.38881857835033307*tmp39 + 0.38881857835033307*tmp41;
      const real_t tmp394 = 0.3256196736114374*tmp74 + 0.3256196736114374*tmp77 + 0.3256196736114374*tmp80;
      const real_t tmp395 = 3.0100340280386204*tmp82 + 3.0100340280386204*tmp83 + 3.0100340280386204*tmp84;
      const real_t tmp396 = 0.69877623478892303*tmp201 + 0.69877623478892303*tmp204 + 0.69877623478892303*tmp207;
      const real_t tmp397 = 0.16196202691036121*tmp209 + 0.16196202691036121*tmp210 + 0.16196202691036121*tmp211;
      const real_t tmp398 = 1.3169318389705873*tmp228 + 1.3169318389705873*tmp231 + 1.3169318389705873*tmp234;
      const real_t tmp399 = 0.11827798082591956*tmp236 + 0.11827798082591956*tmp237 + 0.11827798082591956*tmp238;
      const real_t tmp400 = 0.41537646564397157*tmp101 + 0.41537646564397157*tmp104 + 0.41537646564397157*tmp107;
      const real_t tmp401 = 1.730840956191074*tmp109 + 1.730840956191074*tmp110 + 1.730840956191074*tmp111;
      const real_t tmp402 = 1.2177936097379878*tmp255 + 1.2177936097379878*tmp258 + 1.2177936097379878*tmp261;
      const real_t tmp403 = 0.96110665971229103*tmp263 + 0.96110665971229103*tmp264 + 0.96110665971229103*tmp265;
      const real_t tmp404 = 2.1520288156647434*tmp126 + 2.1520288156647434*tmp128 + 2.1520288156647434*tmp130;
      const real_t tmp405 = 0.51764549515564062*tmp132 + 0.51764549515564062*tmp133 + 0.51764549515564062*tmp134;
      const real_t tmp406 = 0.035965040373342916*tmp282 + 0.035965040373342916*tmp285 + 0.035965040373342916*tmp288;
      const real_t tmp407 = 0.48616796533571183*tmp290 + 0.48616796533571183*tmp291 + 0.48616796533571183*tmp292;
      const real_t tmp408 = 1.7318139619254227*tmp149 + 1.7318139619254227*tmp151 + 1.7318139619254227*tmp153;
      const real_t tmp409 = 1.8030635043651069*tmp155 + 1.8030635043651069*tmp156 + 1.8030635043651069*tmp157;
      const real_t tmp410 = 0.21336495814298084*tmp309 + 0.21336495814298084*tmp312 + 0.21336495814298084*tmp315;
      const real_t tmp411 = 1.6770652555180527*tmp317 + 1.6770652555180527*tmp318 + 1.6770652555180527*tmp319;
      const real_t tmp412 = 2.9649155283744921*tmp174 + 2.9649155283744921*tmp177 + 2.9649155283744921*tmp180;
      const real_t tmp413 = 0.2688931795735332*tmp182 + 0.2688931795735332*tmp183 + 0.2688931795735332*tmp184;
      elMat(0,0) = -0.0054292249839739343*tmp117*((tmp108 + tmp112 + tmp116)*(tmp108 + tmp112 + tmp116)) - 0.0083014263265381374*tmp140*((tmp131 + tmp135 + tmp139)*(tmp131 + tmp135 + tmp139)) - 0.0046087252711240149*tmp163*((tmp154 + tmp158 + tmp162)*(tmp154 + tmp158 + tmp162)) - 0.00086342639172544801*tmp190*((tmp181 + tmp185 + tmp189)*(tmp181 + tmp185 + tmp189)) - 0.0189596024771399*tmp217*((-tmp208 - tmp212 - tmp216)*(-tmp208 - tmp212 - tmp216)) - 0.0010527630257759059*tmp244*((-tmp235 - tmp239 - tmp243)*(-tmp235 - tmp239 - tmp243)) - 0.0021173907985490219*tmp271*((-tmp262 - tmp266 - tmp270)*(-tmp262 - tmp266 - tmp270)) - 0.013831107702793295*tmp298*((-tmp289 - tmp293 - tmp297)*(-tmp289 - tmp293 - tmp297)) - 0.0056173340848133255*tmp325*((-tmp316 - tmp320 - tmp324)*(-tmp316 - tmp320 - tmp324)) - 0.0036149972514435908*tmp63*((tmp35 + tmp42 + tmp49)*(tmp35 + tmp42 + tmp49)) - 0.0022706683527901044*tmp90*((tmp81 + tmp85 + tmp89)*(tmp81 + tmp85 + tmp89));
      elMat(0,1) = -0.012584765868454714*tmp108*tmp330 + 0.0040819365333192512*tmp131*tmp332 - 0.0061987549215557864*tmp154*tmp334 + 0.0044998649071490461*tmp181*tmp336 + 0.0036548782978011126*tmp208*tmp328 + 0.010799549999884401*tmp235*tmp329 + 0.00083582139204094858*tmp262*tmp331 + 0.0045346636251092122*tmp289*tmp333 - 0.0045087419239184514*tmp316*tmp335 + 0.0072301427194886381*tmp326*tmp35 - 0.012344594760863713*tmp327*tmp81;
      elMat(0,2) = 0.010066964965131993*tmp112*tmp330 - 0.0097490714046835261*tmp135*tmp332 - 0.0056487878897383461*tmp158*tmp334 - 0.012093792842045984*tmp185*tmp336 + 0.0013137068218914037*tmp212*tmp328 - 0.0038818597778972029*tmp239*tmp329 - 0.0046804043242939224*tmp266*tmp331 + 0.0085077884791842431*tmp293*tmp333 + 0.005238393734043144*tmp320*tmp335 + 0.0067853652681886352*tmp326*tmp42 + 0.0041416969702195786*tmp327*tmp85;
      elMat(0,3) = -0.0071511654955033511*tmp116*tmp330 - 0.0027144532136395704*tmp139*tmp332 + 0.005883129944586717*tmp162*tmp334 + 0.0052886569726683132*tmp189*tmp336 + 0.0041246668394316508*tmp216*tmp328 - 0.0033267985952381263*tmp243*tmp329 + 0.010590168103918869*tmp270*tmp331 - 0.0019942799754541058*tmp297*tmp333 + 0.0053864900723149976*tmp324*tmp335 - 0.020554974928565235*tmp326*tmp49 + 0.0044685602754798454*tmp327*tmp89;
      elMat(0,4) = -tmp339*(tmp337 + tmp338) - tmp342*(tmp340 + tmp341) - tmp345*(tmp343 + tmp344) - tmp348*(tmp346 + tmp347) - tmp351*(tmp349 + tmp350) - tmp354*(tmp352 + tmp353) - tmp357*(tmp355 + tmp356) - tmp360*(tmp358 + tmp359) - tmp363*(tmp361 + tmp362) - tmp366*(tmp364 + tmp365) - tmp369*(tmp367 + tmp368);
      elMat(0,5) = -tmp339*(tmp370 + tmp371) - tmp342*(tmp372 + tmp373) - tmp345*(tmp374 + tmp375) - tmp348*(tmp376 + tmp377) - tmp351*(tmp378 + tmp379) - tmp354*(tmp380 + tmp381) - tmp357*(tmp382 + tmp383) - tmp360*(tmp384 + tmp385) - tmp363*(tmp386 + tmp387) - tmp366*(tmp388 + tmp389) - tmp369*(tmp390 + tmp391);
      elMat(0,6) = -tmp339*(tmp392 + tmp393) - tmp342*(tmp394 + tmp395) - tmp345*(tmp396 + tmp397) - tmp348*(tmp398 + tmp399) - tmp351*(tmp400 + tmp401) - tmp354*(tmp402 + tmp403) - tmp357*(tmp404 + tmp405) - tmp360*(tmp406 + tmp407) - tmp363*(tmp408 + tmp409) - tmp366*(tmp410 + tmp411) - tmp369*(tmp412 + tmp413);
      elMat(0,7) = -tmp339*(-tmp337 - tmp370 - 2.2903585922226259*tmp44 - 2.2903585922226259*tmp46 - 2.2903585922226259*tmp48) - tmp342*(0.11955133084429059*tmp18*tmp43*tmp66*tmp71 + 0.11955133084429059*tmp18*tmp45*tmp71*tmp75 + 0.11955133084429059*tmp18*tmp47*tmp71*tmp78 - tmp340 - tmp372) - tmp345*(3.030776123262295*tmp18*tmp193*tmp198*tmp43 + 3.030776123262295*tmp18*tmp198*tmp202*tmp45 + 3.030776123262295*tmp18*tmp198*tmp205*tmp47 - tmp343 - tmp374) - tmp348*(0.021561698496338266*tmp18*tmp220*tmp225*tmp43 + 0.021561698496338266*tmp18*tmp225*tmp229*tmp45 + 0.021561698496338266*tmp18*tmp225*tmp232*tmp47 - tmp346 - tmp376) - tmp351*(-0.97680333550942233*tmp113 - 0.97680333550942233*tmp114 - 0.97680333550942233*tmp115 - tmp349 - tmp378) - tmp354*(0.80668592322658683*tmp18*tmp247*tmp252*tmp43 + 0.80668592322658683*tmp18*tmp252*tmp256*tmp45 + 0.80668592322658683*tmp18*tmp252*tmp259*tmp47 - tmp352 - tmp380) - tmp357*(-1.3111976295201027*tmp136 - 1.3111976295201027*tmp137 - 1.3111976295201027*tmp138 - tmp355 - tmp382) - tmp360*(1.0259150868534226*tmp18*tmp274*tmp279*tmp43 + 1.0259150868534226*tmp18*tmp279*tmp283*tmp45 + 1.0259150868534226*tmp18*tmp279*tmp286*tmp47 - tmp358 - tmp384) - tmp363*(-0.010530396686001087*tmp159 - 0.010530396686001087*tmp160 - 0.010530396686001087*tmp161 - tmp361 - tmp386) - tmp366*(1.727318301866275*tmp18*tmp301*tmp306*tmp43 + 1.727318301866275*tmp18*tmp306*tmp310*tmp45 + 1.727318301866275*tmp18*tmp306*tmp313*tmp47 - tmp364 - tmp388) - tmp369*(0.48471985386318561*tmp166*tmp171*tmp18*tmp43 + 0.48471985386318561*tmp171*tmp175*tmp18*tmp45 + 0.48471985386318561*tmp171*tmp178*tmp18*tmp47 - tmp367 - tmp390);
      elMat(0,8) = -tmp339*(0.020786379341558803*tmp18*tmp23*tmp28*tmp38 + 0.020786379341558803*tmp18*tmp23*tmp32*tmp40 + 0.020786379341558803*tmp18*tmp23*tmp36*tmp7 - tmp338 - tmp392) - tmp342*(0.066329140985678992*tmp18*tmp36*tmp66*tmp71 + 0.066329140985678992*tmp18*tmp38*tmp71*tmp75 + 0.066329140985678992*tmp18*tmp40*tmp71*tmp78 - tmp341 - tmp394) - tmp345*(2.3862426959925824*tmp18*tmp193*tmp198*tmp36 + 2.3862426959925824*tmp18*tmp198*tmp202*tmp38 + 2.3862426959925824*tmp18*tmp198*tmp205*tmp40 - tmp344 - tmp396) - tmp348*(-0.023755899620671705*tmp236 - 0.023755899620671705*tmp237 - 0.023755899620671705*tmp238 - tmp347 - tmp398) - tmp351*(0.023113155683794462*tmp102*tmp18*tmp38*tmp98 + 0.023113155683794462*tmp105*tmp18*tmp40*tmp98 + 0.023113155683794462*tmp18*tmp36*tmp93*tmp98 - tmp350 - tmp400) - tmp354*(0.096099217150166227*tmp18*tmp247*tmp252*tmp36 + 0.096099217150166227*tmp18*tmp252*tmp256*tmp38 + 0.096099217150166227*tmp18*tmp252*tmp259*tmp40 - tmp353 - tmp402) - tmp357*(-2.1424647858349868*tmp132 - 2.1424647858349868*tmp133 - 2.1424647858349868*tmp134 - tmp356 - tmp404) - tmp360*(2.215926000198841*tmp18*tmp274*tmp279*tmp36 + 2.215926000198841*tmp18*tmp279*tmp283*tmp38 + 2.215926000198841*tmp18*tmp279*tmp286*tmp40 - tmp359 - tmp406) - tmp363*(-1.504517893413688*tmp155 - 1.504517893413688*tmp156 - 1.504517893413688*tmp157 - tmp362 - tmp408) - tmp366*(1.7050790859596399*tmp18*tmp301*tmp306*tmp36 + 1.7050790859596399*tmp18*tmp306*tmp310*tmp38 + 1.7050790859596399*tmp18*tmp306*tmp313*tmp40 - tmp365 - tmp410) - tmp369*(-2.339459955416912*tmp182 - 2.339459955416912*tmp183 - 2.339459955416912*tmp184 - tmp368 - tmp412);
      elMat(0,9) = -tmp339*(0.058384491239200198*tmp18*tmp23*tmp27*tmp28 + 0.058384491239200198*tmp18*tmp23*tmp31*tmp32 + 0.058384491239200198*tmp18*tmp23*tmp4*tmp7 - tmp371 - tmp393) - tmp342*(-tmp373 - tmp395 - 2.6180852134415042*tmp74 - 2.6180852134415042*tmp77 - 2.6180852134415042*tmp80) - tmp345*(2.923056903871144*tmp18*tmp193*tmp198*tmp4 + 2.923056903871144*tmp18*tmp198*tmp202*tmp27 + 2.923056903871144*tmp18*tmp198*tmp205*tmp31 - tmp375 - tmp397) - tmp348*(1.1748979585239958*tmp18*tmp220*tmp225*tmp4 + 1.1748979585239958*tmp18*tmp225*tmp229*tmp27 + 1.1748979585239958*tmp18*tmp225*tmp232*tmp31 - tmp377 - tmp399) - tmp351*(-1.292351334863308*tmp101 - 1.292351334863308*tmp104 - 1.292351334863308*tmp107 - tmp379 - tmp401) - tmp354*(0.35278616717586297*tmp18*tmp247*tmp252*tmp4 + 0.35278616717586297*tmp18*tmp252*tmp256*tmp27 + 0.35278616717586297*tmp18*tmp252*tmp259*tmp31 - tmp381 - tmp403) - tmp357*(-0.50808146532588383*tmp126 - 0.50808146532588383*tmp128 - 0.50808146532588383*tmp130 - tmp383 - tmp405) - tmp360*(1.7657230752364721*tmp18*tmp27*tmp279*tmp283 + 1.7657230752364721*tmp18*tmp274*tmp279*tmp4 + 1.7657230752364721*tmp18*tmp279*tmp286*tmp31 - tmp385 - tmp407) - tmp363*(-1.5757674358533722*tmp149 - 1.5757674358533722*tmp151 - 1.5757674358533722*tmp153 - tmp387 - tmp409) - tmp366*(0.24137878858456796*tmp18*tmp27*tmp306*tmp310 + 0.24137878858456796*tmp18*tmp301*tmp306*tmp4 + 0.24137878858456796*tmp18*tmp306*tmp31*tmp313 - tmp389 - tmp411) - tmp369*(0.35656239338404694*tmp166*tmp171*tmp18*tmp4 + 0.35656239338404694*tmp171*tmp175*tmp18*tmp27 + 0.35656239338404694*tmp171*tmp178*tmp18*tmp31 - tmp391 - tmp413);
   }

} // namespace hyteg