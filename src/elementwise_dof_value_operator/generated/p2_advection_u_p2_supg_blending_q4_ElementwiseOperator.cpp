/*
* Copyright (c) 2023 Andreas Burkhart
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

// This file has been generated with the AHFC. If buggy try fixing the generator itself.

#include "p2_advection_u_p2_supg_blending_q4_ElementwiseOperator.hpp"

namespace hyteg {
   void p2_advection_u_p2_supg_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 3 >& coords, Matrix< real_t, 6, 6 >& elMat ) const
   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = advection_supg_scaling_(Point3D(B_1[0], B_1[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_2 = advection_supg_scaling_(Point3D(B_2[0], B_2[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_3 = advection_supg_scaling_(Point3D(B_3[0], B_3[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_4 = advection_supg_scaling_(Point3D(B_4[0], B_4[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_5 = advection_supg_scaling_(Point3D(B_5[0], B_5[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_6 = advection_supg_scaling_(Point3D(B_6[0], B_6[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      const real_t tmp0 = 0.19283351126204792*DoFValues_[10] + 0.79548022620090586*DoFValues_[11] - 0.048208377815511919*DoFValues_[6] - 0.048208377815512009*DoFValues_[7] - 0.084730493093977885*DoFValues_[8] + 0.19283351126204792*DoFValues_[9];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][0] - coords[2][0];
      const real_t tmp4 = coords[0][1] - coords[1][1];
      const real_t tmp5 = 1.0 / (tmp1*tmp2 - tmp3*tmp4);
      const real_t tmp6 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = 1.0 / (tmp6);
      const real_t tmp8 = tmp5*tmp7;
      const real_t tmp9 = tmp1*tmp8;
      const real_t tmp10 = tmp9*J_B_1(0, 0);
      const real_t tmp11 = tmp3*tmp8;
      const real_t tmp12 = tmp11*J_B_1(0, 0);
      const real_t tmp13 = -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5];
      const real_t tmp14 = tmp9*J_B_1(1, 0);
      const real_t tmp15 = tmp11*J_B_1(1, 0);
      const real_t tmp16 = tmp2*tmp8;
      const real_t tmp17 = tmp16*J_B_1(1, 1);
      const real_t tmp18 = tmp4*tmp8;
      const real_t tmp19 = tmp18*J_B_1(1, 1);
      const real_t tmp20 = tmp0*(-0.78379396366386*tmp10 - 0.78379396366386*tmp12 + 0.78379396366386*tmp2*tmp5*tmp7*J_B_1(0, 1) + 0.78379396366386*tmp4*tmp5*tmp7*J_B_1(0, 1)) + tmp13*(0.78379396366386*tmp14 + 0.78379396366386*tmp15 - 0.78379396366386*tmp17 - 0.78379396366386*tmp19);
      const real_t tmp21 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp22 = 0.11169079483900564*tmp21;
      const real_t tmp23 = std::abs(tmp6)*ScalarCoeff0_1;
      const real_t tmp24 = tmp22*tmp23;
      const real_t tmp25 = 0.1928335112620479*DoFValues_[10] + 0.19283351126204812*DoFValues_[11] - 0.084730493093977954*DoFValues_[6] - 0.048208377815511835*DoFValues_[7] - 0.048208377815512224*DoFValues_[8] + 0.79548022620090575*DoFValues_[9];
      const real_t tmp26 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp27 = 1.0 / (tmp26);
      const real_t tmp28 = tmp27*tmp5;
      const real_t tmp29 = tmp1*tmp28;
      const real_t tmp30 = tmp29*J_B_2(0, 0);
      const real_t tmp31 = tmp28*tmp3;
      const real_t tmp32 = tmp31*J_B_2(0, 0);
      const real_t tmp33 = tmp2*tmp28;
      const real_t tmp34 = tmp33*J_B_2(0, 1);
      const real_t tmp35 = tmp28*tmp4;
      const real_t tmp36 = tmp35*J_B_2(0, 1);
      const real_t tmp37 = -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5];
      const real_t tmp38 = tmp29*J_B_2(1, 0);
      const real_t tmp39 = tmp31*J_B_2(1, 0);
      const real_t tmp40 = tmp25*(0.56758792732771934*tmp30 + 0.56758792732771934*tmp32 - 0.56758792732771934*tmp34 - 0.56758792732771934*tmp36) + tmp37*(0.56758792732771934*tmp2*tmp27*tmp5*J_B_2(1, 1) + 0.56758792732771934*tmp27*tmp4*tmp5*J_B_2(1, 1) - 0.56758792732771934*tmp38 - 0.56758792732771934*tmp39);
      const real_t tmp41 = std::abs(tmp26)*ScalarCoeff0_2;
      const real_t tmp42 = tmp22*tmp41;
      const real_t tmp43 = 0.7954802262009063*DoFValues_[10] + 0.19283351126204759*DoFValues_[11] - 0.048208377815512016*DoFValues_[6] - 0.084730493093977788*DoFValues_[7] - 0.048208377815511745*DoFValues_[8] + 0.19283351126204779*DoFValues_[9];
      const real_t tmp44 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp45 = 1.0 / (tmp44);
      const real_t tmp46 = tmp45*tmp5;
      const real_t tmp47 = tmp1*tmp46;
      const real_t tmp48 = tmp47*J_B_3(0, 0);
      const real_t tmp49 = tmp3*tmp46;
      const real_t tmp50 = tmp49*J_B_3(0, 0);
      const real_t tmp51 = -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5];
      const real_t tmp52 = tmp47*J_B_3(1, 0);
      const real_t tmp53 = tmp49*J_B_3(1, 0);
      const real_t tmp54 = tmp2*tmp46;
      const real_t tmp55 = tmp54*J_B_3(1, 1);
      const real_t tmp56 = tmp4*tmp46;
      const real_t tmp57 = tmp56*J_B_3(1, 1);
      const real_t tmp58 = tmp43*(0.78379396366385934*tmp2*tmp45*tmp5*J_B_3(0, 1) + 0.78379396366385934*tmp4*tmp45*tmp5*J_B_3(0, 1) - 0.78379396366385934*tmp48 - 0.78379396366385934*tmp50) + tmp51*(0.78379396366385934*tmp52 + 0.78379396366385934*tmp53 - 0.78379396366385934*tmp55 - 0.78379396366385934*tmp57);
      const real_t tmp59 = std::abs(tmp44)*ScalarCoeff0_3;
      const real_t tmp60 = tmp22*tmp59;
      const real_t tmp61 = 0.29921523099278485*DoFValues_[10] + 0.29921523099278774*DoFValues_[11] + 0.51763234198767205*DoFValues_[6] - 0.074803807748196866*DoFValues_[7] - 0.074803807748196297*DoFValues_[8] + 0.033544811523148553*DoFValues_[9];
      const real_t tmp62 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp63 = 1.0 / (tmp62);
      const real_t tmp64 = tmp5*tmp63;
      const real_t tmp65 = tmp1*tmp64;
      const real_t tmp66 = tmp65*J_B_4(0, 0);
      const real_t tmp67 = tmp3*tmp64;
      const real_t tmp68 = tmp67*J_B_4(0, 0);
      const real_t tmp69 = 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5];
      const real_t tmp70 = tmp65*J_B_4(1, 0);
      const real_t tmp71 = tmp67*J_B_4(1, 0);
      const real_t tmp72 = tmp2*tmp64;
      const real_t tmp73 = tmp72*J_B_4(1, 1);
      const real_t tmp74 = tmp4*tmp64;
      const real_t tmp75 = tmp74*J_B_4(1, 1);
      const real_t tmp76 = tmp61*(2.2673902919218332*tmp2*tmp5*tmp63*J_B_4(0, 1) + 2.2673902919218332*tmp4*tmp5*tmp63*J_B_4(0, 1) - 2.2673902919218332*tmp66 - 2.2673902919218332*tmp68) + tmp69*(2.2673902919218332*tmp70 + 2.2673902919218332*tmp71 - 2.2673902919218332*tmp73 - 2.2673902919218332*tmp75);
      const real_t tmp77 = 0.054975871827660817*tmp21;
      const real_t tmp78 = std::abs(tmp62)*ScalarCoeff0_4;
      const real_t tmp79 = tmp77*tmp78;
      const real_t tmp80 = 0.03354481152314847*DoFValues_[10] + 0.2992152309927853*DoFValues_[11] - 0.07480380774819613*DoFValues_[6] + 0.5176323419876725*DoFValues_[7] - 0.074803807748196643*DoFValues_[8] + 0.29921523099278674*DoFValues_[9];
      const real_t tmp81 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp82 = 1.0 / (tmp81);
      const real_t tmp83 = tmp5*tmp82;
      const real_t tmp84 = tmp1*tmp83;
      const real_t tmp85 = tmp84*J_B_5(0, 0);
      const real_t tmp86 = tmp3*tmp83;
      const real_t tmp87 = tmp86*J_B_5(0, 0);
      const real_t tmp88 = tmp2*tmp83;
      const real_t tmp89 = tmp88*J_B_5(0, 1);
      const real_t tmp90 = tmp4*tmp83;
      const real_t tmp91 = tmp90*J_B_5(0, 1);
      const real_t tmp92 = -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5];
      const real_t tmp93 = tmp84*J_B_5(1, 0);
      const real_t tmp94 = tmp86*J_B_5(1, 0);
      const real_t tmp95 = tmp80*(0.63369514596091792*tmp85 + 0.63369514596091792*tmp87 - 0.63369514596091792*tmp89 - 0.63369514596091792*tmp91) + tmp92*(0.63369514596091792*tmp2*tmp5*tmp82*J_B_5(1, 1) + 0.63369514596091792*tmp4*tmp5*tmp82*J_B_5(1, 1) - 0.63369514596091792*tmp93 - 0.63369514596091792*tmp94);
      const real_t tmp96 = std::abs(tmp81)*ScalarCoeff0_5;
      const real_t tmp97 = tmp77*tmp96;
      const real_t tmp98 = 0.29921523099278574*DoFValues_[10] + 0.033544811523148386*DoFValues_[11] - 0.074803807748196505*DoFValues_[6] - 0.074803807748196435*DoFValues_[7] + 0.51763234198767294*DoFValues_[8] + 0.29921523099278574*DoFValues_[9];
      const real_t tmp99 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp100 = 1.0 / (tmp99);
      const real_t tmp101 = tmp100*tmp5;
      const real_t tmp102 = tmp1*tmp101;
      const real_t tmp103 = tmp102*J_B_6(0, 0);
      const real_t tmp104 = tmp101*tmp3;
      const real_t tmp105 = tmp104*J_B_6(0, 0);
      const real_t tmp106 = tmp101*tmp2;
      const real_t tmp107 = tmp106*J_B_6(0, 1);
      const real_t tmp108 = tmp101*tmp4;
      const real_t tmp109 = tmp108*J_B_6(0, 1);
      const real_t tmp110 = -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5];
      const real_t tmp111 = tmp102*J_B_6(1, 0);
      const real_t tmp112 = tmp104*J_B_6(1, 0);
      const real_t tmp113 = tmp110*(0.63369514596091747*tmp100*tmp2*tmp5*J_B_6(1, 1) + 0.63369514596091747*tmp100*tmp4*tmp5*J_B_6(1, 1) - 0.63369514596091747*tmp111 - 0.63369514596091747*tmp112) + tmp98*(0.63369514596091747*tmp103 + 0.63369514596091747*tmp105 - 0.63369514596091747*tmp107 - 0.63369514596091747*tmp109);
      const real_t tmp114 = std::abs(tmp99)*ScalarCoeff0_6;
      const real_t tmp115 = tmp114*tmp77;
      const real_t tmp116 = tmp16*J_B_1(0, 1);
      const real_t tmp117 = tmp0*(-tmp116 + tmp12);
      const real_t tmp118 = tmp13*(-tmp15 + tmp2*tmp5*tmp7*J_B_1(1, 1));
      const real_t tmp119 = 0.78379396366385978*tmp117 + 0.78379396366385978*tmp118;
      const real_t tmp120 = tmp20*tmp24;
      const real_t tmp121 = tmp25*(tmp32 - tmp34);
      const real_t tmp122 = tmp37*(tmp2*tmp27*tmp5*J_B_2(1, 1) - tmp39);
      const real_t tmp123 = 0.78379396366386067*tmp121 + 0.78379396366386067*tmp122;
      const real_t tmp124 = tmp40*tmp42;
      const real_t tmp125 = tmp54*J_B_3(0, 1);
      const real_t tmp126 = tmp43*(-tmp125 + tmp50);
      const real_t tmp127 = tmp51*(tmp2*tmp45*tmp5*J_B_3(1, 1) - tmp53);
      const real_t tmp128 = -0.56758792732772045*tmp126 - 0.56758792732772045*tmp127;
      const real_t tmp129 = tmp58*tmp60;
      const real_t tmp130 = tmp72*J_B_4(0, 1);
      const real_t tmp131 = tmp61*(-tmp130 + tmp68);
      const real_t tmp132 = tmp69*(tmp2*tmp5*tmp63*J_B_4(1, 1) - tmp71);
      const real_t tmp133 = -0.63369514596091481*tmp131 - 0.63369514596091481*tmp132;
      const real_t tmp134 = tmp76*tmp79;
      const real_t tmp135 = tmp80*(tmp87 - tmp89);
      const real_t tmp136 = tmp92*(tmp2*tmp5*tmp82*J_B_5(1, 1) - tmp94);
      const real_t tmp137 = 2.2673902919218341*tmp135 + 2.2673902919218341*tmp136;
      const real_t tmp138 = tmp95*tmp97;
      const real_t tmp139 = tmp98*(tmp105 - tmp107);
      const real_t tmp140 = tmp110*(tmp100*tmp2*tmp5*J_B_6(1, 1) - tmp112);
      const real_t tmp141 = -0.63369514596091747*tmp139 - 0.63369514596091747*tmp140;
      const real_t tmp142 = tmp113*tmp115;
      const real_t tmp143 = tmp119*tmp120 + tmp123*tmp124 + tmp128*tmp129 + tmp133*tmp134 + tmp137*tmp138 + tmp141*tmp142;
      const real_t tmp144 = tmp18*J_B_1(0, 1);
      const real_t tmp145 = tmp0*(tmp10 - tmp144);
      const real_t tmp146 = tmp13*(-tmp14 + tmp4*tmp5*tmp7*J_B_1(1, 1));
      const real_t tmp147 = -0.56758792732771979*tmp145 - 0.56758792732771979*tmp146;
      const real_t tmp148 = tmp25*(tmp30 - tmp36);
      const real_t tmp149 = tmp37*(tmp27*tmp4*tmp5*J_B_2(1, 1) - tmp38);
      const real_t tmp150 = 0.78379396366385867*tmp148 + 0.78379396366385867*tmp149;
      const real_t tmp151 = tmp56*J_B_3(0, 1);
      const real_t tmp152 = tmp43*(-tmp151 + tmp48);
      const real_t tmp153 = tmp51*(tmp4*tmp45*tmp5*J_B_3(1, 1) - tmp52);
      const real_t tmp154 = 0.78379396366386112*tmp152 + 0.78379396366386112*tmp153;
      const real_t tmp155 = tmp74*J_B_4(0, 1);
      const real_t tmp156 = tmp61*(-tmp155 + tmp66);
      const real_t tmp157 = tmp69*(tmp4*tmp5*tmp63*J_B_4(1, 1) - tmp70);
      const real_t tmp158 = -0.63369514596091836*tmp156 - 0.63369514596091836*tmp157;
      const real_t tmp159 = tmp80*(tmp85 - tmp91);
      const real_t tmp160 = tmp92*(tmp4*tmp5*tmp82*J_B_5(1, 1) - tmp93);
      const real_t tmp161 = -0.63369514596091614*tmp159 - 0.63369514596091614*tmp160;
      const real_t tmp162 = tmp98*(tmp103 - tmp109);
      const real_t tmp163 = tmp110*(tmp100*tmp4*tmp5*J_B_6(1, 1) - tmp111);
      const real_t tmp164 = 2.2673902919218349*tmp162 + 2.2673902919218349*tmp163;
      const real_t tmp165 = tmp120*tmp147 + tmp124*tmp150 + tmp129*tmp154 + tmp134*tmp158 + tmp138*tmp161 + tmp142*tmp164;
      const real_t tmp166 = 0.43241207267228021*tmp12;
      const real_t tmp167 = 0.43241207267228021*tmp116;
      const real_t tmp168 = 1.7837939636638598*tmp10 - 1.7837939636638598*tmp144;
      const real_t tmp169 = 0.43241207267228021*tmp15;
      const real_t tmp170 = 0.43241207267228021*tmp17;
      const real_t tmp171 = 1.7837939636638598*tmp14 - 1.7837939636638598*tmp19;
      const real_t tmp172 = tmp0*(tmp166 - tmp167 + tmp168) + tmp13*(-tmp169 + tmp170 - tmp171);
      const real_t tmp173 = 1.7837939636638587*tmp32 - 1.7837939636638587*tmp34;
      const real_t tmp174 = 1.7837939636638607*tmp30 - 1.7837939636638607*tmp36;
      const real_t tmp175 = tmp33*J_B_2(1, 1);
      const real_t tmp176 = -1.7837939636638587*tmp175 + 1.7837939636638587*tmp39;
      const real_t tmp177 = tmp35*J_B_2(1, 1);
      const real_t tmp178 = -1.7837939636638607*tmp177 + 1.7837939636638607*tmp38;
      const real_t tmp179 = tmp25*(tmp173 + tmp174) + tmp37*(-tmp176 - tmp178);
      const real_t tmp180 = -1.7837939636638611*tmp125 + 1.7837939636638611*tmp50;
      const real_t tmp181 = -0.43241207267227955*tmp151 + 0.43241207267227955*tmp48;
      const real_t tmp182 = 1.7837939636638611*tmp53 - 1.7837939636638611*tmp55;
      const real_t tmp183 = 0.43241207267227955*tmp52 - 0.43241207267227955*tmp57;
      const real_t tmp184 = tmp43*(tmp180 + tmp181) + tmp51*(-tmp182 - tmp183);
      const real_t tmp185 = 0.36630485403908164*tmp68;
      const real_t tmp186 = 0.36630485403908164*tmp130;
      const real_t tmp187 = -0.36630485403908519*tmp155 + 0.36630485403908519*tmp66;
      const real_t tmp188 = 0.36630485403908164*tmp71;
      const real_t tmp189 = 0.36630485403908164*tmp73;
      const real_t tmp190 = 0.36630485403908519*tmp70 - 0.36630485403908519*tmp75;
      const real_t tmp191 = tmp61*(tmp185 - tmp186 + tmp187) + tmp69*(-tmp188 + tmp189 - tmp190);
      const real_t tmp192 = 0.36630485403908386*tmp87 - 0.36630485403908386*tmp89;
      const real_t tmp193 = 3.2673902919218341*tmp85 - 3.2673902919218341*tmp91;
      const real_t tmp194 = tmp88*J_B_5(1, 1);
      const real_t tmp195 = -0.36630485403908386*tmp194 + 0.36630485403908386*tmp94;
      const real_t tmp196 = tmp90*J_B_5(1, 1);
      const real_t tmp197 = -3.2673902919218341*tmp196 + 3.2673902919218341*tmp93;
      const real_t tmp198 = tmp80*(tmp192 + tmp193) + tmp92*(-tmp195 - tmp197);
      const real_t tmp199 = 0.36630485403908253*tmp103 - 0.36630485403908253*tmp109;
      const real_t tmp200 = 3.2673902919218349*tmp105 - 3.2673902919218349*tmp107;
      const real_t tmp201 = tmp108*J_B_6(1, 1);
      const real_t tmp202 = 0.36630485403908253*tmp111 - 0.36630485403908253*tmp201;
      const real_t tmp203 = -3.2673902919218349*tmp106*J_B_6(1, 1) + 3.2673902919218349*tmp112;
      const real_t tmp204 = tmp110*(-tmp202 - tmp203) + tmp98*(tmp199 + tmp200);
      const real_t tmp205 = tmp120*tmp172 + tmp124*tmp179 + tmp129*tmp184 + tmp134*tmp191 + tmp138*tmp198 + tmp142*tmp204;
      const real_t tmp206 = tmp0*(1.3513818909915796*tmp10 - 1.3513818909915796*tmp144 - tmp166 + tmp167) + tmp13*(-1.3513818909915796*tmp14 + tmp169 - tmp170 + 1.3513818909915796*tmp4*tmp5*tmp7*J_B_1(1, 1));
      const real_t tmp207 = tmp25*(-tmp173 + 1.3513818909915782*tmp27*tmp4*tmp5*J_B_2(0, 1) - 1.3513818909915782*tmp30) + tmp37*(tmp176 - 1.3513818909915782*tmp177 + 1.3513818909915782*tmp38);
      const real_t tmp208 = tmp43*(-tmp180 + 1.7763568394002505e-15*tmp4*tmp45*tmp5*J_B_3(0, 1) - 1.7763568394002505e-15*tmp48) + tmp51*(tmp182 + 1.7763568394002505e-15*tmp52 - 1.7763568394002505e-15*tmp57);
      const real_t tmp209 = tmp61*(-2.9010854378827515*tmp155 - tmp185 + tmp186 + 2.9010854378827515*tmp66) + tmp69*(tmp188 - tmp189 + 2.9010854378827515*tmp4*tmp5*tmp63*J_B_4(1, 1) - 2.9010854378827515*tmp70);
      const real_t tmp210 = tmp80*(-tmp192 + 1.7763568394002505e-15*tmp4*tmp5*tmp82*J_B_5(0, 1) - 1.7763568394002505e-15*tmp85) + tmp92*(tmp195 - 1.7763568394002505e-15*tmp196 + 1.7763568394002505e-15*tmp93);
      const real_t tmp211 = tmp110*(2.9010854378827524*tmp111 - 2.9010854378827524*tmp201 + tmp203) + tmp98*(2.9010854378827524*tmp100*tmp4*tmp5*J_B_6(0, 1) - 2.9010854378827524*tmp103 - tmp200);
      const real_t tmp212 = tmp120*tmp206 + tmp124*tmp207 + tmp129*tmp208 + tmp134*tmp209 + tmp138*tmp210 + tmp142*tmp211;
      const real_t tmp213 = tmp110*tmp202 - tmp199*tmp98;
      const real_t tmp214 = tmp0*(-2.2204460492503131e-16*tmp116 - tmp168 + 2.2204460492503131e-16*tmp3*tmp5*tmp7*J_B_1(0, 0)) + tmp13*(-2.2204460492503131e-16*tmp15 + 2.2204460492503131e-16*tmp17 + tmp171);
      const real_t tmp215 = tmp25*(-tmp174 + 1.35138189099158*tmp2*tmp27*tmp5*J_B_2(0, 1) - 1.35138189099158*tmp32) + tmp37*(-1.35138189099158*tmp175 + tmp178 + 1.35138189099158*tmp39);
      const real_t tmp216 = tmp43*(-1.3513818909915798*tmp125 - tmp181 + 1.3513818909915798*tmp3*tmp45*tmp5*J_B_3(0, 0)) + tmp51*(tmp183 - 1.3513818909915798*tmp53 + 1.3513818909915798*tmp55);
      const real_t tmp217 = tmp61*(-2.901085437882748*tmp130 - tmp187 + 2.901085437882748*tmp3*tmp5*tmp63*J_B_4(0, 0)) + tmp69*(tmp190 - 2.901085437882748*tmp71 + 2.901085437882748*tmp73);
      const real_t tmp218 = tmp80*(-tmp193 + 2.901085437882752*tmp2*tmp5*tmp82*J_B_5(0, 1) - 2.901085437882752*tmp87) + tmp92*(-2.901085437882752*tmp194 + tmp197 + 2.901085437882752*tmp94);
      const real_t tmp219 = tmp120*tmp214 + tmp124*tmp215 + tmp129*tmp216 + tmp134*tmp217 + tmp138*tmp218 + tmp142*tmp213;
      const real_t tmp220 = tmp21*tmp23;
      const real_t tmp221 = tmp21*tmp41;
      const real_t tmp222 = tmp21*tmp96;
      const real_t tmp223 = tmp21*tmp59;
      const real_t tmp224 = tmp21*tmp78;
      const real_t tmp225 = tmp114*tmp21;
      const real_t tmp226 = tmp119*tmp24;
      const real_t tmp227 = tmp123*tmp42;
      const real_t tmp228 = tmp128*tmp60;
      const real_t tmp229 = tmp133*tmp79;
      const real_t tmp230 = tmp137*tmp97;
      const real_t tmp231 = tmp115*tmp141;
      const real_t tmp232 = tmp147*tmp226 + tmp150*tmp227 + tmp154*tmp228 + tmp158*tmp229 + tmp161*tmp230 + tmp164*tmp231;
      const real_t tmp233 = tmp172*tmp226 + tmp179*tmp227 + tmp184*tmp228 + tmp191*tmp229 + tmp198*tmp230 + tmp204*tmp231;
      const real_t tmp234 = tmp206*tmp226 + tmp207*tmp227 + tmp208*tmp228 + tmp209*tmp229 + tmp210*tmp230 + tmp211*tmp231;
      const real_t tmp235 = tmp213*tmp231 + tmp214*tmp226 + tmp215*tmp227 + tmp216*tmp228 + tmp217*tmp229 + tmp218*tmp230;
      const real_t tmp236 = tmp147*tmp24;
      const real_t tmp237 = tmp150*tmp42;
      const real_t tmp238 = tmp154*tmp60;
      const real_t tmp239 = tmp158*tmp79;
      const real_t tmp240 = tmp161*tmp97;
      const real_t tmp241 = tmp115*tmp164;
      const real_t tmp242 = tmp172*tmp236 + tmp179*tmp237 + tmp184*tmp238 + tmp191*tmp239 + tmp198*tmp240 + tmp204*tmp241;
      const real_t tmp243 = tmp206*tmp236 + tmp207*tmp237 + tmp208*tmp238 + tmp209*tmp239 + tmp210*tmp240 + tmp211*tmp241;
      const real_t tmp244 = tmp213*tmp241 + tmp214*tmp236 + tmp215*tmp237 + tmp216*tmp238 + tmp217*tmp239 + tmp218*tmp240;
      const real_t tmp245 = tmp172*tmp24;
      const real_t tmp246 = tmp179*tmp42;
      const real_t tmp247 = tmp184*tmp60;
      const real_t tmp248 = tmp191*tmp79;
      const real_t tmp249 = tmp198*tmp97;
      const real_t tmp250 = tmp115*tmp204;
      const real_t tmp251 = tmp206*tmp245 + tmp207*tmp246 + tmp208*tmp247 + tmp209*tmp248 + tmp210*tmp249 + tmp211*tmp250;
      const real_t tmp252 = tmp213*tmp250 + tmp214*tmp245 + tmp215*tmp246 + tmp216*tmp247 + tmp217*tmp248 + tmp218*tmp249;
      const real_t tmp253 = tmp115*tmp211*tmp213 + tmp206*tmp214*tmp24 + tmp207*tmp215*tmp42 + tmp208*tmp216*tmp60 + tmp209*tmp217*tmp79 + tmp210*tmp218*tmp97;
      elMat(0,0) = (tmp113*tmp113)*tmp115 + (tmp20*tmp20)*tmp24 + (tmp40*tmp40)*tmp42 + (tmp58*tmp58)*tmp60 + (tmp76*tmp76)*tmp79 + (tmp95*tmp95)*tmp97;
      elMat(0,1) = tmp143;
      elMat(0,2) = tmp165;
      elMat(0,3) = tmp205;
      elMat(0,4) = tmp212;
      elMat(0,5) = tmp219;
      elMat(1,0) = tmp143;
      elMat(1,1) = 0.068615338550096661*tmp220*((tmp117 + tmp118)*(tmp117 + tmp118)) + 0.068615338550096813*tmp221*((tmp121 + tmp122)*(tmp121 + tmp122)) + 0.2826341861233902*tmp222*((tmp135 + tmp136)*(tmp135 + tmp136)) + 0.035981865872867579*tmp223*((-tmp126 - tmp127)*(-tmp126 - tmp127)) + 0.022076635451774004*tmp224*((-tmp131 - tmp132)*(-tmp131 - tmp132)) + 0.022076635451774192*tmp225*((-tmp139 - tmp140)*(-tmp139 - tmp140));
      elMat(1,2) = tmp232;
      elMat(1,3) = tmp233;
      elMat(1,4) = tmp234;
      elMat(1,5) = tmp235;
      elMat(2,0) = tmp165;
      elMat(2,1) = tmp232;
      elMat(2,2) = 0.035981865872867495*tmp220*((-tmp145 - tmp146)*(-tmp145 - tmp146)) + 0.068615338550096466*tmp221*((tmp148 + tmp149)*(tmp148 + tmp149)) + 0.022076635451774095*tmp222*((-tmp159 - tmp160)*(-tmp159 - tmp160)) + 0.068615338550096883*tmp223*((tmp152 + tmp153)*(tmp152 + tmp153)) + 0.022076635451774251*tmp224*((-tmp156 - tmp157)*(-tmp156 - tmp157)) + 0.28263418612339042*tmp225*((tmp162 + tmp163)*(tmp162 + tmp163));
      elMat(2,3) = tmp242;
      elMat(2,4) = tmp243;
      elMat(2,5) = tmp244;
      elMat(3,0) = tmp205;
      elMat(3,1) = tmp233;
      elMat(3,2) = tmp242;
      elMat(3,3) = tmp115*(tmp204*tmp204) + (tmp172*tmp172)*tmp24 + (tmp179*tmp179)*tmp42 + (tmp184*tmp184)*tmp60 + (tmp191*tmp191)*tmp79 + (tmp198*tmp198)*tmp97;
      elMat(3,4) = tmp251;
      elMat(3,5) = tmp252;
      elMat(4,0) = tmp212;
      elMat(4,1) = tmp234;
      elMat(4,2) = tmp243;
      elMat(4,3) = tmp251;
      elMat(4,4) = tmp115*(tmp211*tmp211) + (tmp206*tmp206)*tmp24 + (tmp207*tmp207)*tmp42 + (tmp208*tmp208)*tmp60 + (tmp209*tmp209)*tmp79 + (tmp210*tmp210)*tmp97;
      elMat(4,5) = tmp253;
      elMat(5,0) = tmp219;
      elMat(5,1) = tmp235;
      elMat(5,2) = tmp244;
      elMat(5,3) = tmp252;
      elMat(5,4) = tmp253;
      elMat(5,5) = tmp115*(tmp213*tmp213) + (tmp214*tmp214)*tmp24 + (tmp215*tmp215)*tmp42 + (tmp216*tmp216)*tmp60 + (tmp217*tmp217)*tmp79 + (tmp218*tmp218)*tmp97;
   }

   void p2_advection_u_p2_supg_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 3 >& coords, Matrix< real_t, 1, 6 >& elMat ) const   {
      Matrix2r J_B_1;
      geometryMap_->evalDF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), J_B_1);
      Matrix2r J_B_2;
      geometryMap_->evalDF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), J_B_2);
      Matrix2r J_B_3;
      geometryMap_->evalDF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), J_B_3);
      Matrix2r J_B_4;
      geometryMap_->evalDF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), J_B_4);
      Matrix2r J_B_5;
      geometryMap_->evalDF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), J_B_5);
      Matrix2r J_B_6;
      geometryMap_->evalDF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), J_B_6);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.44594849091596495*coords[0][0] + 0.44594849091596495*coords[1][0] + 0.10810301816807005*coords[2][0], 0.44594849091596495*coords[0][1] + 0.44594849091596495*coords[1][1] + 0.10810301816807005*coords[2][1], 0), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.10810301816807011*coords[0][0] + 0.44594849091596517*coords[1][0] + 0.44594849091596467*coords[2][0], 0.10810301816807011*coords[0][1] + 0.44594849091596517*coords[1][1] + 0.44594849091596467*coords[2][1], 0), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.44594849091596483*coords[0][0] + 0.10810301816806989*coords[1][0] + 0.44594849091596528*coords[2][0], 0.44594849091596483*coords[0][1] + 0.10810301816806989*coords[1][1] + 0.44594849091596528*coords[2][1], 0), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.81684757298045829*coords[0][0] + 0.091576213509771298*coords[1][0] + 0.09157621350977041*coords[2][0], 0.81684757298045829*coords[0][1] + 0.091576213509771298*coords[1][1] + 0.09157621350977041*coords[2][1], 0), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.091576213509770521*coords[0][0] + 0.81684757298045851*coords[1][0] + 0.091576213509770965*coords[2][0], 0.091576213509770521*coords[0][1] + 0.81684757298045851*coords[1][1] + 0.091576213509770965*coords[2][1], 0), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.091576213509770632*coords[0][0] + 0.091576213509770632*coords[1][0] + 0.81684757298045874*coords[2][0], 0.091576213509770632*coords[0][1] + 0.091576213509770632*coords[1][1] + 0.81684757298045874*coords[2][1], 0), B_6);
      real_t ScalarCoeff0_1 = advection_supg_scaling_(Point3D(B_1[0], B_1[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_2 = advection_supg_scaling_(Point3D(B_2[0], B_2[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_3 = advection_supg_scaling_(Point3D(B_3[0], B_3[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_4 = advection_supg_scaling_(Point3D(B_4[0], B_4[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_5 = advection_supg_scaling_(Point3D(B_5[0], B_5[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      real_t ScalarCoeff0_6 = advection_supg_scaling_(Point3D(B_6[0], B_6[1], 0), std::pow(((-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])*(-1.0/9.0*DoFValues_[0] - 1.0/9.0*DoFValues_[1] - 1.0/9.0*DoFValues_[2] + (4.0/9.0)*DoFValues_[3] + (4.0/9.0)*DoFValues_[4] + (4.0/9.0)*DoFValues_[5])) + (((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])*((4.0/9.0)*DoFValues_[10] + (4.0/9.0)*DoFValues_[11] - 1.0/9.0*DoFValues_[6] - 1.0/9.0*DoFValues_[7] - 1.0/9.0*DoFValues_[8] + (4.0/9.0)*DoFValues_[9])), 1.0/2.0));
      const real_t tmp0 = 0.19283351126204792*DoFValues_[10] + 0.79548022620090586*DoFValues_[11] - 0.048208377815511919*DoFValues_[6] - 0.048208377815512009*DoFValues_[7] - 0.084730493093977885*DoFValues_[8] + 0.19283351126204792*DoFValues_[9];
      const real_t tmp1 = -coords[0][0] + coords[1][0];
      const real_t tmp2 = -coords[0][1] + coords[2][1];
      const real_t tmp3 = coords[0][0] - coords[2][0];
      const real_t tmp4 = coords[0][1] - coords[1][1];
      const real_t tmp5 = 1.0 / (tmp1*tmp2 - tmp3*tmp4);
      const real_t tmp6 = J_B_1(0, 0)*J_B_1(1, 1) - J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp7 = 1.0 / (tmp6);
      const real_t tmp8 = tmp5*tmp7;
      const real_t tmp9 = tmp1*tmp8;
      const real_t tmp10 = tmp9*J_B_1(0, 0);
      const real_t tmp11 = tmp3*tmp8;
      const real_t tmp12 = tmp11*J_B_1(0, 0);
      const real_t tmp13 = -0.048208377815511919*DoFValues_[0] - 0.048208377815512009*DoFValues_[1] - 0.084730493093977885*DoFValues_[2] + 0.19283351126204792*DoFValues_[3] + 0.19283351126204792*DoFValues_[4] + 0.79548022620090586*DoFValues_[5];
      const real_t tmp14 = tmp9*J_B_1(1, 0);
      const real_t tmp15 = tmp11*J_B_1(1, 0);
      const real_t tmp16 = tmp2*tmp8;
      const real_t tmp17 = tmp16*J_B_1(1, 1);
      const real_t tmp18 = tmp4*tmp8;
      const real_t tmp19 = tmp18*J_B_1(1, 1);
      const real_t tmp20 = tmp0*(-0.78379396366386*tmp10 - 0.78379396366386*tmp12 + 0.78379396366386*tmp2*tmp5*tmp7*J_B_1(0, 1) + 0.78379396366386*tmp4*tmp5*tmp7*J_B_1(0, 1)) + tmp13*(0.78379396366386*tmp14 + 0.78379396366386*tmp15 - 0.78379396366386*tmp17 - 0.78379396366386*tmp19);
      const real_t tmp21 = std::abs(coords[0][0]*coords[1][1] - coords[0][0]*coords[2][1] - coords[0][1]*coords[1][0] + coords[0][1]*coords[2][0] + coords[1][0]*coords[2][1] - coords[1][1]*coords[2][0]);
      const real_t tmp22 = 0.11169079483900564*tmp21;
      const real_t tmp23 = tmp22*std::abs(tmp6)*ScalarCoeff0_1;
      const real_t tmp24 = 0.1928335112620479*DoFValues_[10] + 0.19283351126204812*DoFValues_[11] - 0.084730493093977954*DoFValues_[6] - 0.048208377815511835*DoFValues_[7] - 0.048208377815512224*DoFValues_[8] + 0.79548022620090575*DoFValues_[9];
      const real_t tmp25 = J_B_2(0, 0)*J_B_2(1, 1) - J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp26 = 1.0 / (tmp25);
      const real_t tmp27 = tmp26*tmp5;
      const real_t tmp28 = tmp1*tmp27;
      const real_t tmp29 = tmp28*J_B_2(0, 0);
      const real_t tmp30 = tmp27*tmp3;
      const real_t tmp31 = tmp30*J_B_2(0, 0);
      const real_t tmp32 = tmp2*tmp27;
      const real_t tmp33 = tmp32*J_B_2(0, 1);
      const real_t tmp34 = tmp27*tmp4;
      const real_t tmp35 = tmp34*J_B_2(0, 1);
      const real_t tmp36 = -0.084730493093977954*DoFValues_[0] - 0.048208377815511835*DoFValues_[1] - 0.048208377815512224*DoFValues_[2] + 0.79548022620090575*DoFValues_[3] + 0.1928335112620479*DoFValues_[4] + 0.19283351126204812*DoFValues_[5];
      const real_t tmp37 = tmp28*J_B_2(1, 0);
      const real_t tmp38 = tmp30*J_B_2(1, 0);
      const real_t tmp39 = tmp24*(0.56758792732771934*tmp29 + 0.56758792732771934*tmp31 - 0.56758792732771934*tmp33 - 0.56758792732771934*tmp35) + tmp36*(0.56758792732771934*tmp2*tmp26*tmp5*J_B_2(1, 1) + 0.56758792732771934*tmp26*tmp4*tmp5*J_B_2(1, 1) - 0.56758792732771934*tmp37 - 0.56758792732771934*tmp38);
      const real_t tmp40 = tmp22*std::abs(tmp25)*ScalarCoeff0_2;
      const real_t tmp41 = 0.7954802262009063*DoFValues_[10] + 0.19283351126204759*DoFValues_[11] - 0.048208377815512016*DoFValues_[6] - 0.084730493093977788*DoFValues_[7] - 0.048208377815511745*DoFValues_[8] + 0.19283351126204779*DoFValues_[9];
      const real_t tmp42 = J_B_3(0, 0)*J_B_3(1, 1) - J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp43 = 1.0 / (tmp42);
      const real_t tmp44 = tmp43*tmp5;
      const real_t tmp45 = tmp1*tmp44;
      const real_t tmp46 = tmp45*J_B_3(0, 0);
      const real_t tmp47 = tmp3*tmp44;
      const real_t tmp48 = tmp47*J_B_3(0, 0);
      const real_t tmp49 = -0.048208377815512016*DoFValues_[0] - 0.084730493093977788*DoFValues_[1] - 0.048208377815511745*DoFValues_[2] + 0.19283351126204779*DoFValues_[3] + 0.7954802262009063*DoFValues_[4] + 0.19283351126204759*DoFValues_[5];
      const real_t tmp50 = tmp45*J_B_3(1, 0);
      const real_t tmp51 = tmp47*J_B_3(1, 0);
      const real_t tmp52 = tmp2*tmp44;
      const real_t tmp53 = tmp52*J_B_3(1, 1);
      const real_t tmp54 = tmp4*tmp44;
      const real_t tmp55 = tmp54*J_B_3(1, 1);
      const real_t tmp56 = tmp41*(0.78379396366385934*tmp2*tmp43*tmp5*J_B_3(0, 1) + 0.78379396366385934*tmp4*tmp43*tmp5*J_B_3(0, 1) - 0.78379396366385934*tmp46 - 0.78379396366385934*tmp48) + tmp49*(0.78379396366385934*tmp50 + 0.78379396366385934*tmp51 - 0.78379396366385934*tmp53 - 0.78379396366385934*tmp55);
      const real_t tmp57 = tmp22*std::abs(tmp42)*ScalarCoeff0_3;
      const real_t tmp58 = 0.29921523099278485*DoFValues_[10] + 0.29921523099278774*DoFValues_[11] + 0.51763234198767205*DoFValues_[6] - 0.074803807748196866*DoFValues_[7] - 0.074803807748196297*DoFValues_[8] + 0.033544811523148553*DoFValues_[9];
      const real_t tmp59 = J_B_4(0, 0)*J_B_4(1, 1) - J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp60 = 1.0 / (tmp59);
      const real_t tmp61 = tmp5*tmp60;
      const real_t tmp62 = tmp1*tmp61;
      const real_t tmp63 = tmp62*J_B_4(0, 0);
      const real_t tmp64 = tmp3*tmp61;
      const real_t tmp65 = tmp64*J_B_4(0, 0);
      const real_t tmp66 = 0.51763234198767205*DoFValues_[0] - 0.074803807748196866*DoFValues_[1] - 0.074803807748196297*DoFValues_[2] + 0.033544811523148553*DoFValues_[3] + 0.29921523099278485*DoFValues_[4] + 0.29921523099278774*DoFValues_[5];
      const real_t tmp67 = tmp62*J_B_4(1, 0);
      const real_t tmp68 = tmp64*J_B_4(1, 0);
      const real_t tmp69 = tmp2*tmp61;
      const real_t tmp70 = tmp69*J_B_4(1, 1);
      const real_t tmp71 = tmp4*tmp61;
      const real_t tmp72 = tmp71*J_B_4(1, 1);
      const real_t tmp73 = tmp58*(2.2673902919218332*tmp2*tmp5*tmp60*J_B_4(0, 1) + 2.2673902919218332*tmp4*tmp5*tmp60*J_B_4(0, 1) - 2.2673902919218332*tmp63 - 2.2673902919218332*tmp65) + tmp66*(2.2673902919218332*tmp67 + 2.2673902919218332*tmp68 - 2.2673902919218332*tmp70 - 2.2673902919218332*tmp72);
      const real_t tmp74 = 0.054975871827660817*tmp21;
      const real_t tmp75 = tmp74*std::abs(tmp59)*ScalarCoeff0_4;
      const real_t tmp76 = 0.03354481152314847*DoFValues_[10] + 0.2992152309927853*DoFValues_[11] - 0.07480380774819613*DoFValues_[6] + 0.5176323419876725*DoFValues_[7] - 0.074803807748196643*DoFValues_[8] + 0.29921523099278674*DoFValues_[9];
      const real_t tmp77 = J_B_5(0, 0)*J_B_5(1, 1) - J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp78 = 1.0 / (tmp77);
      const real_t tmp79 = tmp5*tmp78;
      const real_t tmp80 = tmp1*tmp79;
      const real_t tmp81 = tmp80*J_B_5(0, 0);
      const real_t tmp82 = tmp3*tmp79;
      const real_t tmp83 = tmp82*J_B_5(0, 0);
      const real_t tmp84 = tmp2*tmp79;
      const real_t tmp85 = tmp84*J_B_5(0, 1);
      const real_t tmp86 = tmp4*tmp79;
      const real_t tmp87 = tmp86*J_B_5(0, 1);
      const real_t tmp88 = -0.07480380774819613*DoFValues_[0] + 0.5176323419876725*DoFValues_[1] - 0.074803807748196643*DoFValues_[2] + 0.29921523099278674*DoFValues_[3] + 0.03354481152314847*DoFValues_[4] + 0.2992152309927853*DoFValues_[5];
      const real_t tmp89 = tmp80*J_B_5(1, 0);
      const real_t tmp90 = tmp82*J_B_5(1, 0);
      const real_t tmp91 = tmp76*(0.63369514596091792*tmp81 + 0.63369514596091792*tmp83 - 0.63369514596091792*tmp85 - 0.63369514596091792*tmp87) + tmp88*(0.63369514596091792*tmp2*tmp5*tmp78*J_B_5(1, 1) + 0.63369514596091792*tmp4*tmp5*tmp78*J_B_5(1, 1) - 0.63369514596091792*tmp89 - 0.63369514596091792*tmp90);
      const real_t tmp92 = tmp74*std::abs(tmp77)*ScalarCoeff0_5;
      const real_t tmp93 = 0.29921523099278574*DoFValues_[10] + 0.033544811523148386*DoFValues_[11] - 0.074803807748196505*DoFValues_[6] - 0.074803807748196435*DoFValues_[7] + 0.51763234198767294*DoFValues_[8] + 0.29921523099278574*DoFValues_[9];
      const real_t tmp94 = J_B_6(0, 0)*J_B_6(1, 1) - J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp95 = 1.0 / (tmp94);
      const real_t tmp96 = tmp5*tmp95;
      const real_t tmp97 = tmp1*tmp96;
      const real_t tmp98 = tmp97*J_B_6(0, 0);
      const real_t tmp99 = tmp3*tmp96;
      const real_t tmp100 = tmp99*J_B_6(0, 0);
      const real_t tmp101 = tmp2*tmp96;
      const real_t tmp102 = tmp101*J_B_6(0, 1);
      const real_t tmp103 = tmp4*tmp96;
      const real_t tmp104 = tmp103*J_B_6(0, 1);
      const real_t tmp105 = -0.074803807748196505*DoFValues_[0] - 0.074803807748196435*DoFValues_[1] + 0.51763234198767294*DoFValues_[2] + 0.29921523099278574*DoFValues_[3] + 0.29921523099278574*DoFValues_[4] + 0.033544811523148386*DoFValues_[5];
      const real_t tmp106 = tmp97*J_B_6(1, 0);
      const real_t tmp107 = tmp99*J_B_6(1, 0);
      const real_t tmp108 = tmp105*(-0.63369514596091747*tmp106 - 0.63369514596091747*tmp107 + 0.63369514596091747*tmp2*tmp5*tmp95*J_B_6(1, 1) + 0.63369514596091747*tmp4*tmp5*tmp95*J_B_6(1, 1)) + tmp93*(0.63369514596091747*tmp100 - 0.63369514596091747*tmp102 - 0.63369514596091747*tmp104 + 0.63369514596091747*tmp98);
      const real_t tmp109 = tmp74*std::abs(tmp94)*ScalarCoeff0_6;
      const real_t tmp110 = tmp16*J_B_1(0, 1);
      const real_t tmp111 = tmp20*tmp23;
      const real_t tmp112 = tmp39*tmp40;
      const real_t tmp113 = tmp52*J_B_3(0, 1);
      const real_t tmp114 = tmp56*tmp57;
      const real_t tmp115 = tmp69*J_B_4(0, 1);
      const real_t tmp116 = tmp73*tmp75;
      const real_t tmp117 = tmp91*tmp92;
      const real_t tmp118 = tmp108*tmp109;
      const real_t tmp119 = tmp18*J_B_1(0, 1);
      const real_t tmp120 = tmp54*J_B_3(0, 1);
      const real_t tmp121 = tmp71*J_B_4(0, 1);
      const real_t tmp122 = 0.43241207267228021*tmp12;
      const real_t tmp123 = 0.43241207267228021*tmp110;
      const real_t tmp124 = 1.7837939636638598*tmp10 - 1.7837939636638598*tmp119;
      const real_t tmp125 = 0.43241207267228021*tmp15;
      const real_t tmp126 = 0.43241207267228021*tmp17;
      const real_t tmp127 = 1.7837939636638598*tmp14 - 1.7837939636638598*tmp19;
      const real_t tmp128 = 1.7837939636638587*tmp31 - 1.7837939636638587*tmp33;
      const real_t tmp129 = 1.7837939636638607*tmp29 - 1.7837939636638607*tmp35;
      const real_t tmp130 = tmp32*J_B_2(1, 1);
      const real_t tmp131 = -1.7837939636638587*tmp130 + 1.7837939636638587*tmp38;
      const real_t tmp132 = tmp34*J_B_2(1, 1);
      const real_t tmp133 = -1.7837939636638607*tmp132 + 1.7837939636638607*tmp37;
      const real_t tmp134 = -1.7837939636638611*tmp113 + 1.7837939636638611*tmp48;
      const real_t tmp135 = -0.43241207267227955*tmp120 + 0.43241207267227955*tmp46;
      const real_t tmp136 = 1.7837939636638611*tmp51 - 1.7837939636638611*tmp53;
      const real_t tmp137 = 0.43241207267227955*tmp50 - 0.43241207267227955*tmp55;
      const real_t tmp138 = 0.36630485403908164*tmp65;
      const real_t tmp139 = 0.36630485403908164*tmp115;
      const real_t tmp140 = -0.36630485403908519*tmp121 + 0.36630485403908519*tmp63;
      const real_t tmp141 = 0.36630485403908164*tmp68;
      const real_t tmp142 = 0.36630485403908164*tmp70;
      const real_t tmp143 = 0.36630485403908519*tmp67 - 0.36630485403908519*tmp72;
      const real_t tmp144 = 0.36630485403908386*tmp83 - 0.36630485403908386*tmp85;
      const real_t tmp145 = 3.2673902919218341*tmp81 - 3.2673902919218341*tmp87;
      const real_t tmp146 = tmp84*J_B_5(1, 1);
      const real_t tmp147 = -0.36630485403908386*tmp146 + 0.36630485403908386*tmp90;
      const real_t tmp148 = tmp86*J_B_5(1, 1);
      const real_t tmp149 = -3.2673902919218341*tmp148 + 3.2673902919218341*tmp89;
      const real_t tmp150 = -0.36630485403908253*tmp104 + 0.36630485403908253*tmp98;
      const real_t tmp151 = 3.2673902919218349*tmp100 - 3.2673902919218349*tmp102;
      const real_t tmp152 = tmp103*J_B_6(1, 1);
      const real_t tmp153 = 0.36630485403908253*tmp106 - 0.36630485403908253*tmp152;
      const real_t tmp154 = -3.2673902919218349*tmp101*J_B_6(1, 1) + 3.2673902919218349*tmp107;
      elMat(0,0) = (tmp108*tmp108)*tmp109 + (tmp20*tmp20)*tmp23 + (tmp39*tmp39)*tmp40 + (tmp56*tmp56)*tmp57 + (tmp73*tmp73)*tmp75 + (tmp91*tmp91)*tmp92;
      elMat(0,1) = tmp111*(0.78379396366385978*tmp0*(-tmp110 + tmp12) + 0.78379396366385978*tmp13*(-tmp15 + tmp2*tmp5*tmp7*J_B_1(1, 1))) + tmp112*(0.78379396366386067*tmp24*(tmp31 - tmp33) + 0.78379396366386067*tmp36*(tmp2*tmp26*tmp5*J_B_2(1, 1) - tmp38)) + tmp114*(-0.56758792732772045*tmp41*(-tmp113 + tmp48) - 0.56758792732772045*tmp49*(tmp2*tmp43*tmp5*J_B_3(1, 1) - tmp51)) + tmp116*(-0.63369514596091481*tmp58*(-tmp115 + tmp65) - 0.63369514596091481*tmp66*(tmp2*tmp5*tmp60*J_B_4(1, 1) - tmp68)) + tmp117*(2.2673902919218341*tmp76*(tmp83 - tmp85) + 2.2673902919218341*tmp88*(tmp2*tmp5*tmp78*J_B_5(1, 1) - tmp90)) + tmp118*(-0.63369514596091747*tmp105*(-tmp107 + tmp2*tmp5*tmp95*J_B_6(1, 1)) - 0.63369514596091747*tmp93*(tmp100 - tmp102));
      elMat(0,2) = tmp111*(-0.56758792732771979*tmp0*(tmp10 - tmp119) - 0.56758792732771979*tmp13*(-tmp14 + tmp4*tmp5*tmp7*J_B_1(1, 1))) + tmp112*(0.78379396366385867*tmp24*(tmp29 - tmp35) + 0.78379396366385867*tmp36*(tmp26*tmp4*tmp5*J_B_2(1, 1) - tmp37)) + tmp114*(0.78379396366386112*tmp41*(-tmp120 + tmp46) + 0.78379396366386112*tmp49*(tmp4*tmp43*tmp5*J_B_3(1, 1) - tmp50)) + tmp116*(-0.63369514596091836*tmp58*(-tmp121 + tmp63) - 0.63369514596091836*tmp66*(tmp4*tmp5*tmp60*J_B_4(1, 1) - tmp67)) + tmp117*(-0.63369514596091614*tmp76*(tmp81 - tmp87) - 0.63369514596091614*tmp88*(tmp4*tmp5*tmp78*J_B_5(1, 1) - tmp89)) + tmp118*(2.2673902919218349*tmp105*(-tmp106 + tmp4*tmp5*tmp95*J_B_6(1, 1)) + 2.2673902919218349*tmp93*(-tmp104 + tmp98));
      elMat(0,3) = tmp111*(tmp0*(tmp122 - tmp123 + tmp124) + tmp13*(-tmp125 + tmp126 - tmp127)) + tmp112*(tmp24*(tmp128 + tmp129) + tmp36*(-tmp131 - tmp133)) + tmp114*(tmp41*(tmp134 + tmp135) + tmp49*(-tmp136 - tmp137)) + tmp116*(tmp58*(tmp138 - tmp139 + tmp140) + tmp66*(-tmp141 + tmp142 - tmp143)) + tmp117*(tmp76*(tmp144 + tmp145) + tmp88*(-tmp147 - tmp149)) + tmp118*(tmp105*(-tmp153 - tmp154) + tmp93*(tmp150 + tmp151));
      elMat(0,4) = tmp111*(tmp0*(1.3513818909915796*tmp10 - 1.3513818909915796*tmp119 - tmp122 + tmp123) + tmp13*(tmp125 - tmp126 - 1.3513818909915796*tmp14 + 1.3513818909915796*tmp4*tmp5*tmp7*J_B_1(1, 1))) + tmp112*(tmp24*(-tmp128 + 1.3513818909915782*tmp26*tmp4*tmp5*J_B_2(0, 1) - 1.3513818909915782*tmp29) + tmp36*(tmp131 - 1.3513818909915782*tmp132 + 1.3513818909915782*tmp37)) + tmp114*(tmp41*(-tmp134 + 1.7763568394002505e-15*tmp4*tmp43*tmp5*J_B_3(0, 1) - 1.7763568394002505e-15*tmp46) + tmp49*(tmp136 + 1.7763568394002505e-15*tmp50 - 1.7763568394002505e-15*tmp55)) + tmp116*(tmp58*(-2.9010854378827515*tmp121 - tmp138 + tmp139 + 2.9010854378827515*tmp63) + tmp66*(tmp141 - tmp142 + 2.9010854378827515*tmp4*tmp5*tmp60*J_B_4(1, 1) - 2.9010854378827515*tmp67)) + tmp117*(tmp76*(-tmp144 + 1.7763568394002505e-15*tmp4*tmp5*tmp78*J_B_5(0, 1) - 1.7763568394002505e-15*tmp81) + tmp88*(tmp147 - 1.7763568394002505e-15*tmp148 + 1.7763568394002505e-15*tmp89)) + tmp118*(tmp105*(2.9010854378827524*tmp106 - 2.9010854378827524*tmp152 + tmp154) + tmp93*(-tmp151 + 2.9010854378827524*tmp4*tmp5*tmp95*J_B_6(0, 1) - 2.9010854378827524*tmp98));
      elMat(0,5) = tmp111*(tmp0*(-2.2204460492503131e-16*tmp110 - tmp124 + 2.2204460492503131e-16*tmp3*tmp5*tmp7*J_B_1(0, 0)) + tmp13*(tmp127 - 2.2204460492503131e-16*tmp15 + 2.2204460492503131e-16*tmp17)) + tmp112*(tmp24*(-tmp129 + 1.35138189099158*tmp2*tmp26*tmp5*J_B_2(0, 1) - 1.35138189099158*tmp31) + tmp36*(-1.35138189099158*tmp130 + tmp133 + 1.35138189099158*tmp38)) + tmp114*(tmp41*(-1.3513818909915798*tmp113 - tmp135 + 1.3513818909915798*tmp3*tmp43*tmp5*J_B_3(0, 0)) + tmp49*(tmp137 - 1.3513818909915798*tmp51 + 1.3513818909915798*tmp53)) + tmp116*(tmp58*(-2.901085437882748*tmp115 - tmp140 + 2.901085437882748*tmp3*tmp5*tmp60*J_B_4(0, 0)) + tmp66*(tmp143 - 2.901085437882748*tmp68 + 2.901085437882748*tmp70)) + tmp117*(tmp76*(-tmp145 + 2.901085437882752*tmp2*tmp5*tmp78*J_B_5(0, 1) - 2.901085437882752*tmp83) + tmp88*(-2.901085437882752*tmp146 + tmp149 + 2.901085437882752*tmp90)) + tmp118*(tmp105*tmp153 - tmp150*tmp93);
   }

   void p2_advection_u_p2_supg_blending_q4_ElementwiseOperator::integrateAll( const std::array< Point3D, 4 >& coords, Matrix< real_t, 10, 10 >& elMat ) const
   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = advection_supg_scaling_(Point3D(B_1[0], B_1[1], B_1[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_2 = advection_supg_scaling_(Point3D(B_2[0], B_2[1], B_2[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_3 = advection_supg_scaling_(Point3D(B_3[0], B_3[1], B_3[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_4 = advection_supg_scaling_(Point3D(B_4[0], B_4[1], B_4[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_5 = advection_supg_scaling_(Point3D(B_5[0], B_5[1], B_5[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_6 = advection_supg_scaling_(Point3D(B_6[0], B_6[1], B_6[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_7 = advection_supg_scaling_(Point3D(B_7[0], B_7[1], B_7[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_8 = advection_supg_scaling_(Point3D(B_8[0], B_8[1], B_8[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_9 = advection_supg_scaling_(Point3D(B_9[0], B_9[1], B_9[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_10 = advection_supg_scaling_(Point3D(B_10[0], B_10[1], B_10[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_11 = advection_supg_scaling_(Point3D(B_11[0], B_11[1], B_11[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      const real_t tmp0 = -0.086801944216095439*DoFValues_[20] - 0.078307158728786505*DoFValues_[21] - 0.083875273346738985*DoFValues_[22] + 0.25239006607492903*DoFValues_[23] + 0.29183549579492141*DoFValues_[24] + 0.26610370837304476*DoFValues_[25] + 0.04144968282176794*DoFValues_[26] + 0.30606149458825532*DoFValues_[27] + 0.04767371320077584*DoFValues_[28] + 0.043470215437926847*DoFValues_[29];
      const real_t tmp1 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp2 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp3 = tmp1 - tmp2;
      const real_t tmp4 = -coords[0][0] + coords[1][0];
      const real_t tmp5 = -coords[0][1] + coords[2][1];
      const real_t tmp6 = tmp4*tmp5;
      const real_t tmp7 = -coords[0][0] + coords[2][0];
      const real_t tmp8 = -coords[0][1] + coords[1][1];
      const real_t tmp9 = tmp7*tmp8;
      const real_t tmp10 = tmp6 - tmp9;
      const real_t tmp11 = -coords[0][2] + coords[3][2];
      const real_t tmp12 = -coords[0][1] + coords[3][1];
      const real_t tmp13 = -coords[0][2] + coords[1][2];
      const real_t tmp14 = -coords[0][0] + coords[3][0];
      const real_t tmp15 = -coords[0][2] + coords[2][2];
      const real_t tmp16 = tmp15*tmp8;
      const real_t tmp17 = tmp12*tmp4;
      const real_t tmp18 = tmp13*tmp14;
      const real_t tmp19 = 1.0 / (tmp11*tmp6 - tmp11*tmp9 + tmp12*tmp13*tmp7 + tmp14*tmp16 - tmp15*tmp17 - tmp18*tmp5);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp22 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp23 = tmp1*J_B_1(2, 2) - tmp2*J_B_1(2, 2) + tmp20*J_B_1(2, 0) - tmp21*J_B_1(2, 1) - tmp22*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp24 = 1.0 / (tmp23);
      const real_t tmp25 = tmp19*tmp24;
      const real_t tmp26 = tmp10*tmp25;
      const real_t tmp27 = tmp26*tmp3;
      const real_t tmp28 = tmp14*tmp8 - tmp17;
      const real_t tmp29 = tmp25*tmp28;
      const real_t tmp30 = tmp29*tmp3;
      const real_t tmp31 = -tmp21 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp32 = tmp13*tmp7 - tmp15*tmp4;
      const real_t tmp33 = tmp25*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp11*tmp4 - tmp18;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp31*tmp36;
      const real_t tmp38 = tmp12*tmp7 - tmp14*tmp5;
      const real_t tmp39 = tmp25*tmp38;
      const real_t tmp40 = tmp3*tmp39;
      const real_t tmp41 = -tmp11*tmp7 + tmp14*tmp15;
      const real_t tmp42 = tmp25*tmp41;
      const real_t tmp43 = tmp31*tmp42;
      const real_t tmp44 = tmp20 - tmp22;
      const real_t tmp45 = -tmp13*tmp5 + tmp16;
      const real_t tmp46 = tmp25*tmp45;
      const real_t tmp47 = tmp44*tmp46;
      const real_t tmp48 = -tmp11*tmp8 + tmp12*tmp13;
      const real_t tmp49 = tmp25*tmp48;
      const real_t tmp50 = tmp44*tmp49;
      const real_t tmp51 = tmp11*tmp5 - tmp12*tmp15;
      const real_t tmp52 = tmp25*tmp51;
      const real_t tmp53 = tmp44*tmp52;
      const real_t tmp54 = -0.086801944216095439*DoFValues_[10] - 0.078307158728786505*DoFValues_[11] - 0.083875273346738985*DoFValues_[12] + 0.25239006607492903*DoFValues_[13] + 0.29183549579492141*DoFValues_[14] + 0.26610370837304476*DoFValues_[15] + 0.04144968282176794*DoFValues_[16] + 0.30606149458825532*DoFValues_[17] + 0.04767371320077584*DoFValues_[18] + 0.043470215437926847*DoFValues_[19];
      const real_t tmp55 = -J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp56 = tmp26*tmp55;
      const real_t tmp57 = tmp29*tmp55;
      const real_t tmp58 = J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp59 = tmp33*tmp58;
      const real_t tmp60 = tmp36*tmp58;
      const real_t tmp61 = tmp39*tmp55;
      const real_t tmp62 = tmp42*tmp58;
      const real_t tmp63 = -J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp64 = tmp46*tmp63;
      const real_t tmp65 = tmp49*tmp63;
      const real_t tmp66 = tmp52*tmp63;
      const real_t tmp67 = -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9];
      const real_t tmp68 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp69 = tmp26*tmp68;
      const real_t tmp70 = tmp29*tmp68;
      const real_t tmp71 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp72 = tmp33*tmp71;
      const real_t tmp73 = tmp36*tmp71;
      const real_t tmp74 = tmp39*tmp68;
      const real_t tmp75 = tmp42*tmp71;
      const real_t tmp76 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp77 = tmp46*tmp76;
      const real_t tmp78 = tmp49*tmp76;
      const real_t tmp79 = tmp52*tmp76;
      const real_t tmp80 = tmp0*(0.55279693041046674*tmp27 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp40 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp47 + 0.55279693041046674*tmp50 + 0.55279693041046674*tmp53) + tmp54*(0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp59 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62 + 0.55279693041046674*tmp64 + 0.55279693041046674*tmp65 + 0.55279693041046674*tmp66) + tmp67*(0.55279693041046674*tmp69 + 0.55279693041046674*tmp70 + 0.55279693041046674*tmp72 + 0.55279693041046674*tmp73 + 0.55279693041046674*tmp74 + 0.55279693041046674*tmp75 + 0.55279693041046674*tmp77 + 0.55279693041046674*tmp78 + 0.55279693041046674*tmp79);
      const real_t tmp81 = coords[0][0]*coords[1][1];
      const real_t tmp82 = coords[0][0]*coords[1][2];
      const real_t tmp83 = coords[2][1]*coords[3][2];
      const real_t tmp84 = coords[0][1]*coords[1][0];
      const real_t tmp85 = coords[0][1]*coords[1][2];
      const real_t tmp86 = coords[2][2]*coords[3][0];
      const real_t tmp87 = coords[0][2]*coords[1][0];
      const real_t tmp88 = coords[0][2]*coords[1][1];
      const real_t tmp89 = coords[2][0]*coords[3][1];
      const real_t tmp90 = coords[2][2]*coords[3][1];
      const real_t tmp91 = coords[2][0]*coords[3][2];
      const real_t tmp92 = coords[2][1]*coords[3][0];
      const real_t tmp93 = std::abs(coords[0][0]*tmp83 - coords[0][0]*tmp90 + coords[0][1]*tmp86 - coords[0][1]*tmp91 + coords[0][2]*tmp89 - coords[0][2]*tmp92 - coords[1][0]*tmp83 + coords[1][0]*tmp90 - coords[1][1]*tmp86 + coords[1][1]*tmp91 - coords[1][2]*tmp89 + coords[1][2]*tmp92 + coords[2][0]*tmp85 - coords[2][0]*tmp88 - coords[2][1]*tmp82 + coords[2][1]*tmp87 + coords[2][2]*tmp81 - coords[2][2]*tmp84 - coords[3][0]*tmp85 + coords[3][0]*tmp88 + coords[3][1]*tmp82 - coords[3][1]*tmp87 - coords[3][2]*tmp81 + coords[3][2]*tmp84);
      const real_t tmp94 = tmp93*std::abs(tmp23)*ScalarCoeff0_1;
      const real_t tmp95 = 0.017744672359248353*tmp94;
      const real_t tmp96 = -0.07878421949126832*DoFValues_[20] + 0.3800295992341452*DoFValues_[21] - 0.068151396922506977*DoFValues_[22] - 0.058824322293847577*DoFValues_[23] + 0.02217449493804299*DoFValues_[24] + 0.20498142381202572*DoFValues_[25] + 0.24503157444231394*DoFValues_[26] + 0.026691467714039335*DoFValues_[27] + 0.031906561270375708*DoFValues_[28] + 0.29494481729668015*DoFValues_[29];
      const real_t tmp97 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp98 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp99 = tmp97 - tmp98;
      const real_t tmp100 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp101 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp102 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp103 = tmp100*J_B_10(2, 0) - tmp101*J_B_10(2, 1) - tmp102*J_B_10(2, 0) + tmp97*J_B_10(2, 2) - tmp98*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp104 = 1.0 / (tmp103);
      const real_t tmp105 = tmp104*tmp19;
      const real_t tmp106 = tmp10*tmp105;
      const real_t tmp107 = tmp106*tmp99;
      const real_t tmp108 = tmp105*tmp28;
      const real_t tmp109 = tmp108*tmp99;
      const real_t tmp110 = -tmp101 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp111 = tmp105*tmp32;
      const real_t tmp112 = tmp110*tmp111;
      const real_t tmp113 = tmp105*tmp35;
      const real_t tmp114 = tmp110*tmp113;
      const real_t tmp115 = tmp105*tmp38;
      const real_t tmp116 = tmp115*tmp99;
      const real_t tmp117 = tmp105*tmp41;
      const real_t tmp118 = tmp110*tmp117;
      const real_t tmp119 = tmp100 - tmp102;
      const real_t tmp120 = tmp105*tmp45;
      const real_t tmp121 = tmp119*tmp120;
      const real_t tmp122 = tmp105*tmp48;
      const real_t tmp123 = tmp119*tmp122;
      const real_t tmp124 = tmp105*tmp51;
      const real_t tmp125 = tmp119*tmp124;
      const real_t tmp126 = -0.07878421949126832*DoFValues_[10] + 0.3800295992341452*DoFValues_[11] - 0.068151396922506977*DoFValues_[12] - 0.058824322293847577*DoFValues_[13] + 0.02217449493804299*DoFValues_[14] + 0.20498142381202572*DoFValues_[15] + 0.24503157444231394*DoFValues_[16] + 0.026691467714039335*DoFValues_[17] + 0.031906561270375708*DoFValues_[18] + 0.29494481729668015*DoFValues_[19];
      const real_t tmp127 = -J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp128 = tmp106*tmp127;
      const real_t tmp129 = tmp108*tmp127;
      const real_t tmp130 = J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp131 = tmp111*tmp130;
      const real_t tmp132 = tmp113*tmp130;
      const real_t tmp133 = tmp115*tmp127;
      const real_t tmp134 = tmp117*tmp130;
      const real_t tmp135 = -J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp136 = tmp120*tmp135;
      const real_t tmp137 = tmp122*tmp135;
      const real_t tmp138 = tmp124*tmp135;
      const real_t tmp139 = -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9];
      const real_t tmp140 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp141 = tmp106*tmp140;
      const real_t tmp142 = tmp108*tmp140;
      const real_t tmp143 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp144 = tmp111*tmp143;
      const real_t tmp145 = tmp113*tmp143;
      const real_t tmp146 = tmp115*tmp140;
      const real_t tmp147 = tmp117*tmp143;
      const real_t tmp148 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp149 = tmp120*tmp148;
      const real_t tmp150 = tmp122*tmp148;
      const real_t tmp151 = tmp124*tmp148;
      const real_t tmp152 = tmp126*(0.60805118540288361*tmp128 + 0.60805118540288361*tmp129 + 0.60805118540288361*tmp131 + 0.60805118540288361*tmp132 + 0.60805118540288361*tmp133 + 0.60805118540288361*tmp134 + 0.60805118540288361*tmp136 + 0.60805118540288361*tmp137 + 0.60805118540288361*tmp138) + tmp139*(0.60805118540288361*tmp141 + 0.60805118540288361*tmp142 + 0.60805118540288361*tmp144 + 0.60805118540288361*tmp145 + 0.60805118540288361*tmp146 + 0.60805118540288361*tmp147 + 0.60805118540288361*tmp149 + 0.60805118540288361*tmp150 + 0.60805118540288361*tmp151) + tmp96*(0.60805118540288361*tmp107 + 0.60805118540288361*tmp109 + 0.60805118540288361*tmp112 + 0.60805118540288361*tmp114 + 0.60805118540288361*tmp116 + 0.60805118540288361*tmp118 + 0.60805118540288361*tmp121 + 0.60805118540288361*tmp123 + 0.60805118540288361*tmp125);
      const real_t tmp153 = tmp93*std::abs(tmp103)*ScalarCoeff0_10;
      const real_t tmp154 = 0.0092122281926561439*tmp153;
      const real_t tmp155 = 0.41841299271465621*DoFValues_[20] - 0.03721154445747623*DoFValues_[21] - 0.11365803040900775*DoFValues_[22] - 0.013192916608856863*DoFValues_[23] + 0.009475896200663551*DoFValues_[24] + 0.002196318762779979*DoFValues_[25] + 0.028293803835801108*DoFValues_[26] + 0.041835022013875456*DoFValues_[27] + 0.53893447817601237*DoFValues_[28] + 0.12491397977155198*DoFValues_[29];
      const real_t tmp156 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp157 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp158 = tmp156 - tmp157;
      const real_t tmp159 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp160 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp161 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp162 = tmp156*J_B_11(2, 2) - tmp157*J_B_11(2, 2) + tmp159*J_B_11(2, 0) - tmp160*J_B_11(2, 1) - tmp161*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp163 = 1.0 / (tmp162);
      const real_t tmp164 = tmp163*tmp19;
      const real_t tmp165 = tmp10*tmp164;
      const real_t tmp166 = tmp158*tmp165;
      const real_t tmp167 = tmp164*tmp28;
      const real_t tmp168 = tmp158*tmp167;
      const real_t tmp169 = -tmp160 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp170 = tmp164*tmp32;
      const real_t tmp171 = tmp169*tmp170;
      const real_t tmp172 = tmp164*tmp35;
      const real_t tmp173 = tmp169*tmp172;
      const real_t tmp174 = tmp164*tmp38;
      const real_t tmp175 = tmp158*tmp174;
      const real_t tmp176 = tmp164*tmp41;
      const real_t tmp177 = tmp169*tmp176;
      const real_t tmp178 = tmp159 - tmp161;
      const real_t tmp179 = tmp164*tmp45;
      const real_t tmp180 = tmp178*tmp179;
      const real_t tmp181 = tmp164*tmp48;
      const real_t tmp182 = tmp178*tmp181;
      const real_t tmp183 = tmp164*tmp51;
      const real_t tmp184 = tmp178*tmp183;
      const real_t tmp185 = 0.41841299271465621*DoFValues_[10] - 0.03721154445747623*DoFValues_[11] - 0.11365803040900775*DoFValues_[12] - 0.013192916608856863*DoFValues_[13] + 0.009475896200663551*DoFValues_[14] + 0.002196318762779979*DoFValues_[15] + 0.028293803835801108*DoFValues_[16] + 0.041835022013875456*DoFValues_[17] + 0.53893447817601237*DoFValues_[18] + 0.12491397977155198*DoFValues_[19];
      const real_t tmp186 = -J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp187 = tmp165*tmp186;
      const real_t tmp188 = tmp167*tmp186;
      const real_t tmp189 = J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp190 = tmp170*tmp189;
      const real_t tmp191 = tmp172*tmp189;
      const real_t tmp192 = tmp174*tmp186;
      const real_t tmp193 = tmp176*tmp189;
      const real_t tmp194 = -J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp195 = tmp179*tmp194;
      const real_t tmp196 = tmp181*tmp194;
      const real_t tmp197 = tmp183*tmp194;
      const real_t tmp198 = 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9];
      const real_t tmp199 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp200 = tmp165*tmp199;
      const real_t tmp201 = tmp167*tmp199;
      const real_t tmp202 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp203 = tmp170*tmp202;
      const real_t tmp204 = tmp172*tmp202;
      const real_t tmp205 = tmp174*tmp199;
      const real_t tmp206 = tmp176*tmp202;
      const real_t tmp207 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp208 = tmp179*tmp207;
      const real_t tmp209 = tmp181*tmp207;
      const real_t tmp210 = tmp183*tmp207;
      const real_t tmp211 = tmp155*(-2.0850189307815055*tmp166 - 2.0850189307815055*tmp168 - 2.0850189307815055*tmp171 - 2.0850189307815055*tmp173 - 2.0850189307815055*tmp175 - 2.0850189307815055*tmp177 - 2.0850189307815055*tmp180 - 2.0850189307815055*tmp182 - 2.0850189307815055*tmp184) + tmp185*(-2.0850189307815055*tmp187 - 2.0850189307815055*tmp188 - 2.0850189307815055*tmp190 - 2.0850189307815055*tmp191 - 2.0850189307815055*tmp192 - 2.0850189307815055*tmp193 - 2.0850189307815055*tmp195 - 2.0850189307815055*tmp196 - 2.0850189307815055*tmp197) + tmp198*(-2.0850189307815055*tmp200 - 2.0850189307815055*tmp201 - 2.0850189307815055*tmp203 - 2.0850189307815055*tmp204 - 2.0850189307815055*tmp205 - 2.0850189307815055*tmp206 - 2.0850189307815055*tmp208 - 2.0850189307815055*tmp209 - 2.0850189307815055*tmp210);
      const real_t tmp212 = tmp93*std::abs(tmp162)*ScalarCoeff0_11;
      const real_t tmp213 = 0.0065418484874733311*tmp212;
      const real_t tmp214 = -0.11425598357328687*DoFValues_[20] - 0.027820785112947815*DoFValues_[21] - 0.11244427618084021*DoFValues_[22] - 0.11577821302069184*DoFValues_[23] + 0.41865732016712232*DoFValues_[24] + 0.037600991199411425*DoFValues_[25] + 0.038941009699701525*DoFValues_[26] + 0.41110523510163882*DoFValues_[27] + 0.42575614198015033*DoFValues_[28] + 0.038238559739742467*DoFValues_[29];
      const real_t tmp215 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp216 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp217 = tmp215 - tmp216;
      const real_t tmp218 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp219 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp220 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp221 = tmp215*J_B_2(2, 2) - tmp216*J_B_2(2, 2) + tmp218*J_B_2(2, 0) - tmp219*J_B_2(2, 1) - tmp220*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp222 = 1.0 / (tmp221);
      const real_t tmp223 = tmp19*tmp222;
      const real_t tmp224 = tmp10*tmp223;
      const real_t tmp225 = tmp217*tmp224;
      const real_t tmp226 = tmp223*tmp28;
      const real_t tmp227 = tmp217*tmp226;
      const real_t tmp228 = -tmp219 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp229 = tmp223*tmp32;
      const real_t tmp230 = tmp228*tmp229;
      const real_t tmp231 = tmp223*tmp35;
      const real_t tmp232 = tmp228*tmp231;
      const real_t tmp233 = tmp223*tmp38;
      const real_t tmp234 = tmp217*tmp233;
      const real_t tmp235 = tmp223*tmp41;
      const real_t tmp236 = tmp228*tmp235;
      const real_t tmp237 = tmp218 - tmp220;
      const real_t tmp238 = tmp223*tmp45;
      const real_t tmp239 = tmp237*tmp238;
      const real_t tmp240 = tmp223*tmp48;
      const real_t tmp241 = tmp237*tmp240;
      const real_t tmp242 = tmp223*tmp51;
      const real_t tmp243 = tmp237*tmp242;
      const real_t tmp244 = -0.11425598357328687*DoFValues_[10] - 0.027820785112947815*DoFValues_[11] - 0.11244427618084021*DoFValues_[12] - 0.11577821302069184*DoFValues_[13] + 0.41865732016712232*DoFValues_[14] + 0.037600991199411425*DoFValues_[15] + 0.038941009699701525*DoFValues_[16] + 0.41110523510163882*DoFValues_[17] + 0.42575614198015033*DoFValues_[18] + 0.038238559739742467*DoFValues_[19];
      const real_t tmp245 = -J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp246 = tmp224*tmp245;
      const real_t tmp247 = tmp226*tmp245;
      const real_t tmp248 = J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp249 = tmp229*tmp248;
      const real_t tmp250 = tmp231*tmp248;
      const real_t tmp251 = tmp233*tmp245;
      const real_t tmp252 = tmp235*tmp248;
      const real_t tmp253 = -J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp254 = tmp238*tmp253;
      const real_t tmp255 = tmp240*tmp253;
      const real_t tmp256 = tmp242*tmp253;
      const real_t tmp257 = -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9];
      const real_t tmp258 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp259 = tmp224*tmp258;
      const real_t tmp260 = tmp226*tmp258;
      const real_t tmp261 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp262 = tmp229*tmp261;
      const real_t tmp263 = tmp231*tmp261;
      const real_t tmp264 = tmp233*tmp258;
      const real_t tmp265 = tmp235*tmp261;
      const real_t tmp266 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp267 = tmp238*tmp266;
      const real_t tmp268 = tmp240*tmp266;
      const real_t tmp269 = tmp242*tmp266;
      const real_t tmp270 = tmp214*(-0.29317593934991559*tmp225 - 0.29317593934991559*tmp227 - 0.29317593934991559*tmp230 - 0.29317593934991559*tmp232 - 0.29317593934991559*tmp234 - 0.29317593934991559*tmp236 - 0.29317593934991559*tmp239 - 0.29317593934991559*tmp241 - 0.29317593934991559*tmp243) + tmp244*(-0.29317593934991559*tmp246 - 0.29317593934991559*tmp247 - 0.29317593934991559*tmp249 - 0.29317593934991559*tmp250 - 0.29317593934991559*tmp251 - 0.29317593934991559*tmp252 - 0.29317593934991559*tmp254 - 0.29317593934991559*tmp255 - 0.29317593934991559*tmp256) + tmp257*(-0.29317593934991559*tmp259 - 0.29317593934991559*tmp260 - 0.29317593934991559*tmp262 - 0.29317593934991559*tmp263 - 0.29317593934991559*tmp264 - 0.29317593934991559*tmp265 - 0.29317593934991559*tmp267 - 0.29317593934991559*tmp268 - 0.29317593934991559*tmp269);
      const real_t tmp271 = tmp93*std::abs(tmp221)*ScalarCoeff0_2;
      const real_t tmp272 = 0.018372372071416232*tmp271;
      const real_t tmp273 = -0.085588261830420675*DoFValues_[20] - 0.058233937094214573*DoFValues_[21] - 0.082276915384633206*DoFValues_[22] - 0.10344147000017816*DoFValues_[23] + 0.14696984656545933*DoFValues_[24] + 0.61241175367564293*DoFValues_[25] + 0.17973764974362014*DoFValues_[26] + 0.15514781817784826*DoFValues_[27] + 0.045534567282172728*DoFValues_[28] + 0.18973894886470313*DoFValues_[29];
      const real_t tmp274 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp275 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp276 = tmp274 - tmp275;
      const real_t tmp277 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp278 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp279 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp280 = tmp274*J_B_3(2, 2) - tmp275*J_B_3(2, 2) + tmp277*J_B_3(2, 0) - tmp278*J_B_3(2, 1) - tmp279*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp281 = 1.0 / (tmp280);
      const real_t tmp282 = tmp19*tmp281;
      const real_t tmp283 = tmp10*tmp282;
      const real_t tmp284 = tmp276*tmp283;
      const real_t tmp285 = tmp28*tmp282;
      const real_t tmp286 = tmp276*tmp285;
      const real_t tmp287 = -tmp278 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp288 = tmp282*tmp32;
      const real_t tmp289 = tmp287*tmp288;
      const real_t tmp290 = tmp282*tmp35;
      const real_t tmp291 = tmp287*tmp290;
      const real_t tmp292 = tmp282*tmp38;
      const real_t tmp293 = tmp276*tmp292;
      const real_t tmp294 = tmp282*tmp41;
      const real_t tmp295 = tmp287*tmp294;
      const real_t tmp296 = tmp277 - tmp279;
      const real_t tmp297 = tmp282*tmp45;
      const real_t tmp298 = tmp296*tmp297;
      const real_t tmp299 = tmp282*tmp48;
      const real_t tmp300 = tmp296*tmp299;
      const real_t tmp301 = tmp282*tmp51;
      const real_t tmp302 = tmp296*tmp301;
      const real_t tmp303 = -0.085588261830420675*DoFValues_[10] - 0.058233937094214573*DoFValues_[11] - 0.082276915384633206*DoFValues_[12] - 0.10344147000017816*DoFValues_[13] + 0.14696984656545933*DoFValues_[14] + 0.61241175367564293*DoFValues_[15] + 0.17973764974362014*DoFValues_[16] + 0.15514781817784826*DoFValues_[17] + 0.045534567282172728*DoFValues_[18] + 0.18973894886470313*DoFValues_[19];
      const real_t tmp304 = -J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp305 = tmp283*tmp304;
      const real_t tmp306 = tmp285*tmp304;
      const real_t tmp307 = J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp308 = tmp288*tmp307;
      const real_t tmp309 = tmp290*tmp307;
      const real_t tmp310 = tmp292*tmp304;
      const real_t tmp311 = tmp294*tmp307;
      const real_t tmp312 = -J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp313 = tmp297*tmp312;
      const real_t tmp314 = tmp299*tmp312;
      const real_t tmp315 = tmp301*tmp312;
      const real_t tmp316 = -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9];
      const real_t tmp317 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp318 = tmp283*tmp317;
      const real_t tmp319 = tmp285*tmp317;
      const real_t tmp320 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp321 = tmp288*tmp320;
      const real_t tmp322 = tmp290*tmp320;
      const real_t tmp323 = tmp292*tmp317;
      const real_t tmp324 = tmp294*tmp320;
      const real_t tmp325 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp326 = tmp297*tmp325;
      const real_t tmp327 = tmp299*tmp325;
      const real_t tmp328 = tmp301*tmp325;
      const real_t tmp329 = tmp273*(0.56151037867223397*tmp284 + 0.56151037867223397*tmp286 + 0.56151037867223397*tmp289 + 0.56151037867223397*tmp291 + 0.56151037867223397*tmp293 + 0.56151037867223397*tmp295 + 0.56151037867223397*tmp298 + 0.56151037867223397*tmp300 + 0.56151037867223397*tmp302) + tmp303*(0.56151037867223397*tmp305 + 0.56151037867223397*tmp306 + 0.56151037867223397*tmp308 + 0.56151037867223397*tmp309 + 0.56151037867223397*tmp310 + 0.56151037867223397*tmp311 + 0.56151037867223397*tmp313 + 0.56151037867223397*tmp314 + 0.56151037867223397*tmp315) + tmp316*(0.56151037867223397*tmp318 + 0.56151037867223397*tmp319 + 0.56151037867223397*tmp321 + 0.56151037867223397*tmp322 + 0.56151037867223397*tmp323 + 0.56151037867223397*tmp324 + 0.56151037867223397*tmp326 + 0.56151037867223397*tmp327 + 0.56151037867223397*tmp328);
      const real_t tmp330 = tmp93*std::abs(tmp280)*ScalarCoeff0_3;
      const real_t tmp331 = 0.02582935266937442*tmp330;
      const real_t tmp332 = -0.1126839116535204*DoFValues_[20] - 0.12481091351015806*DoFValues_[21] - 0.11907074294466213*DoFValues_[22] - 0.094644370525147514*DoFValues_[23] + 0.15441833152351192*DoFValues_[24] + 0.12186998324029566*DoFValues_[25] + 0.29260738711856271*DoFValues_[26] + 0.16660387811727101*DoFValues_[27] + 0.40001257211624353*DoFValues_[28] + 0.31569778651760327*DoFValues_[29];
      const real_t tmp333 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp334 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp335 = tmp333 - tmp334;
      const real_t tmp336 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp337 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp338 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp339 = tmp333*J_B_4(2, 2) - tmp334*J_B_4(2, 2) + tmp336*J_B_4(2, 0) - tmp337*J_B_4(2, 1) - tmp338*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp340 = 1.0 / (tmp339);
      const real_t tmp341 = tmp19*tmp340;
      const real_t tmp342 = tmp10*tmp341;
      const real_t tmp343 = tmp335*tmp342;
      const real_t tmp344 = tmp28*tmp341;
      const real_t tmp345 = tmp335*tmp344;
      const real_t tmp346 = -tmp337 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp347 = tmp32*tmp341;
      const real_t tmp348 = tmp346*tmp347;
      const real_t tmp349 = tmp341*tmp35;
      const real_t tmp350 = tmp346*tmp349;
      const real_t tmp351 = tmp341*tmp38;
      const real_t tmp352 = tmp335*tmp351;
      const real_t tmp353 = tmp341*tmp41;
      const real_t tmp354 = tmp346*tmp353;
      const real_t tmp355 = tmp336 - tmp338;
      const real_t tmp356 = tmp341*tmp45;
      const real_t tmp357 = tmp355*tmp356;
      const real_t tmp358 = tmp341*tmp48;
      const real_t tmp359 = tmp355*tmp358;
      const real_t tmp360 = tmp341*tmp51;
      const real_t tmp361 = tmp355*tmp360;
      const real_t tmp362 = -0.1126839116535204*DoFValues_[10] - 0.12481091351015806*DoFValues_[11] - 0.11907074294466213*DoFValues_[12] - 0.094644370525147514*DoFValues_[13] + 0.15441833152351192*DoFValues_[14] + 0.12186998324029566*DoFValues_[15] + 0.29260738711856271*DoFValues_[16] + 0.16660387811727101*DoFValues_[17] + 0.40001257211624353*DoFValues_[18] + 0.31569778651760327*DoFValues_[19];
      const real_t tmp363 = -J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp364 = tmp342*tmp363;
      const real_t tmp365 = tmp344*tmp363;
      const real_t tmp366 = J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp367 = tmp347*tmp366;
      const real_t tmp368 = tmp349*tmp366;
      const real_t tmp369 = tmp351*tmp363;
      const real_t tmp370 = tmp353*tmp366;
      const real_t tmp371 = -J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp372 = tmp356*tmp371;
      const real_t tmp373 = tmp358*tmp371;
      const real_t tmp374 = tmp360*tmp371;
      const real_t tmp375 = -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9];
      const real_t tmp376 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp377 = tmp342*tmp376;
      const real_t tmp378 = tmp344*tmp376;
      const real_t tmp379 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp380 = tmp347*tmp379;
      const real_t tmp381 = tmp349*tmp379;
      const real_t tmp382 = tmp351*tmp376;
      const real_t tmp383 = tmp353*tmp379;
      const real_t tmp384 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp385 = tmp356*tmp384;
      const real_t tmp386 = tmp358*tmp384;
      const real_t tmp387 = tmp360*tmp384;
      const real_t tmp388 = tmp332*(-0.31389282688815401*tmp343 - 0.31389282688815401*tmp345 - 0.31389282688815401*tmp348 - 0.31389282688815401*tmp350 - 0.31389282688815401*tmp352 - 0.31389282688815401*tmp354 - 0.31389282688815401*tmp357 - 0.31389282688815401*tmp359 - 0.31389282688815401*tmp361) + tmp362*(-0.31389282688815401*tmp364 - 0.31389282688815401*tmp365 - 0.31389282688815401*tmp367 - 0.31389282688815401*tmp368 - 0.31389282688815401*tmp369 - 0.31389282688815401*tmp370 - 0.31389282688815401*tmp372 - 0.31389282688815401*tmp373 - 0.31389282688815401*tmp374) + tmp375*(-0.31389282688815401*tmp377 - 0.31389282688815401*tmp378 - 0.31389282688815401*tmp380 - 0.31389282688815401*tmp381 - 0.31389282688815401*tmp382 - 0.31389282688815401*tmp383 - 0.31389282688815401*tmp385 - 0.31389282688815401*tmp386 - 0.31389282688815401*tmp387);
      const real_t tmp389 = tmp93*std::abs(tmp339)*ScalarCoeff0_4;
      const real_t tmp390 = 0.032235135341605672*tmp389;
      const real_t tmp391 = -0.0023795736241157134*DoFValues_[20] - 0.095916766457044111*DoFValues_[21] + 0.040896299015238904*DoFValues_[22] - 0.11213899473639061*DoFValues_[23] + 0.71057928738651965*DoFValues_[24] + 0.17092158078418584*DoFValues_[25] + 0.27849700546849571*DoFValues_[26] + 0.0031579509770052099*DoFValues_[27] + 0.0051455169468783276*DoFValues_[28] + 0.0012376942392269142*DoFValues_[29];
      const real_t tmp392 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp393 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp394 = tmp392 - tmp393;
      const real_t tmp395 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp396 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp397 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp398 = tmp392*J_B_5(2, 2) - tmp393*J_B_5(2, 2) + tmp395*J_B_5(2, 0) - tmp396*J_B_5(2, 1) - tmp397*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp399 = tmp19/tmp398;
      const real_t tmp400 = tmp10*tmp399;
      const real_t tmp401 = tmp394*tmp400;
      const real_t tmp402 = tmp28*tmp399;
      const real_t tmp403 = tmp394*tmp402;
      const real_t tmp404 = -tmp396 + J_B_5(0, 2)*J_B_5(1, 0);
      const real_t tmp405 = tmp32*tmp399;
      const real_t tmp406 = tmp404*tmp405;
      const real_t tmp407 = tmp35*tmp399;
      const real_t tmp408 = tmp404*tmp407;
      const real_t tmp409 = tmp38*tmp399;
      const real_t tmp410 = tmp394*tmp409;
      const real_t tmp411 = tmp399*tmp41;
      const real_t tmp412 = tmp404*tmp411;
      const real_t tmp413 = tmp395 - tmp397;
      const real_t tmp414 = tmp399*tmp45;
      const real_t tmp415 = tmp413*tmp414;
      const real_t tmp416 = tmp399*tmp48;
      const real_t tmp417 = tmp413*tmp416;
      const real_t tmp418 = tmp399*tmp51;
      const real_t tmp419 = tmp413*tmp418;
      const real_t tmp420 = -0.0023795736241157134*DoFValues_[10] - 0.095916766457044111*DoFValues_[11] + 0.040896299015238904*DoFValues_[12] - 0.11213899473639061*DoFValues_[13] + 0.71057928738651965*DoFValues_[14] + 0.17092158078418584*DoFValues_[15] + 0.27849700546849571*DoFValues_[16] + 0.0031579509770052099*DoFValues_[17] + 0.0051455169468783276*DoFValues_[18] + 0.0012376942392269142*DoFValues_[19];
      const real_t tmp421 = -J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0);
      const real_t tmp422 = tmp400*tmp421;
      const real_t tmp423 = tmp402*tmp421;
      const real_t tmp424 = J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp425 = tmp405*tmp424;
      const real_t tmp426 = tmp407*tmp424;
      const real_t tmp427 = tmp409*tmp421;
      const real_t tmp428 = tmp411*tmp424;
      const real_t tmp429 = -J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1);
      const real_t tmp430 = tmp414*tmp429;
      const real_t tmp431 = tmp416*tmp429;
      const real_t tmp432 = tmp418*tmp429;
      const real_t tmp433 = -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9];
      const real_t tmp434 = J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp435 = tmp400*tmp434;
      const real_t tmp436 = tmp402*tmp434;
      const real_t tmp437 = -J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp438 = tmp405*tmp437;
      const real_t tmp439 = tmp407*tmp437;
      const real_t tmp440 = tmp409*tmp434;
      const real_t tmp441 = tmp411*tmp437;
      const real_t tmp442 = J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp443 = tmp414*tmp442;
      const real_t tmp444 = tmp416*tmp442;
      const real_t tmp445 = tmp418*tmp442;
      const real_t tmp446 = tmp391*(0.99043597017024343*tmp401 + 0.99043597017024343*tmp403 + 0.99043597017024343*tmp406 + 0.99043597017024343*tmp408 + 0.99043597017024343*tmp410 + 0.99043597017024343*tmp412 + 0.99043597017024343*tmp415 + 0.99043597017024343*tmp417 + 0.99043597017024343*tmp419) + tmp420*(0.99043597017024343*tmp422 + 0.99043597017024343*tmp423 + 0.99043597017024343*tmp425 + 0.99043597017024343*tmp426 + 0.99043597017024343*tmp427 + 0.99043597017024343*tmp428 + 0.99043597017024343*tmp430 + 0.99043597017024343*tmp431 + 0.99043597017024343*tmp432) + tmp433*(0.99043597017024343*tmp435 + 0.99043597017024343*tmp436 + 0.99043597017024343*tmp438 + 0.99043597017024343*tmp439 + 0.99043597017024343*tmp440 + 0.99043597017024343*tmp441 + 0.99043597017024343*tmp443 + 0.99043597017024343*tmp444 + 0.99043597017024343*tmp445);
      const real_t tmp447 = tmp93*std::abs(tmp398)*ScalarCoeff0_5;
      const real_t tmp448 = 0.012693785874259733*tmp447;
      const real_t tmp449 = 0.070903897183113185*DoFValues_[20] - 0.091997080019094721*DoFValues_[21] - 0.0088295745772037065*DoFValues_[22] - 0.11861685854261203*DoFValues_[23] + 0.01102306866806071*DoFValues_[24] + 0.14900755874248975*DoFValues_[25] + 0.0043712626253812137*DoFValues_[26] + 0.69019106653405426*DoFValues_[27] + 0.020247338047636947*DoFValues_[28] + 0.27369932133817437*DoFValues_[29];
      const real_t tmp450 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp451 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp452 = tmp450 - tmp451;
      const real_t tmp453 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp454 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp455 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp456 = tmp450*J_B_6(2, 2) - tmp451*J_B_6(2, 2) + tmp453*J_B_6(2, 0) - tmp454*J_B_6(2, 1) - tmp455*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp457 = 1.0 / (tmp456);
      const real_t tmp458 = tmp19*tmp457;
      const real_t tmp459 = tmp10*tmp458;
      const real_t tmp460 = tmp452*tmp459;
      const real_t tmp461 = tmp28*tmp458;
      const real_t tmp462 = tmp452*tmp461;
      const real_t tmp463 = -tmp454 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp464 = tmp32*tmp458;
      const real_t tmp465 = tmp463*tmp464;
      const real_t tmp466 = tmp35*tmp458;
      const real_t tmp467 = tmp463*tmp466;
      const real_t tmp468 = tmp38*tmp458;
      const real_t tmp469 = tmp452*tmp468;
      const real_t tmp470 = tmp41*tmp458;
      const real_t tmp471 = tmp463*tmp470;
      const real_t tmp472 = tmp453 - tmp455;
      const real_t tmp473 = tmp45*tmp458;
      const real_t tmp474 = tmp472*tmp473;
      const real_t tmp475 = tmp458*tmp48;
      const real_t tmp476 = tmp472*tmp475;
      const real_t tmp477 = tmp458*tmp51;
      const real_t tmp478 = tmp472*tmp477;
      const real_t tmp479 = 0.070903897183113185*DoFValues_[10] - 0.091997080019094721*DoFValues_[11] - 0.0088295745772037065*DoFValues_[12] - 0.11861685854261203*DoFValues_[13] + 0.01102306866806071*DoFValues_[14] + 0.14900755874248975*DoFValues_[15] + 0.0043712626253812137*DoFValues_[16] + 0.69019106653405426*DoFValues_[17] + 0.020247338047636947*DoFValues_[18] + 0.27369932133817437*DoFValues_[19];
      const real_t tmp480 = -J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp481 = tmp459*tmp480;
      const real_t tmp482 = tmp461*tmp480;
      const real_t tmp483 = J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp484 = tmp464*tmp483;
      const real_t tmp485 = tmp466*tmp483;
      const real_t tmp486 = tmp468*tmp480;
      const real_t tmp487 = tmp470*tmp483;
      const real_t tmp488 = -J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp489 = tmp473*tmp488;
      const real_t tmp490 = tmp475*tmp488;
      const real_t tmp491 = tmp477*tmp488;
      const real_t tmp492 = 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9];
      const real_t tmp493 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp494 = tmp459*tmp493;
      const real_t tmp495 = tmp461*tmp493;
      const real_t tmp496 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp497 = tmp464*tmp496;
      const real_t tmp498 = tmp466*tmp496;
      const real_t tmp499 = tmp468*tmp493;
      const real_t tmp500 = tmp470*tmp496;
      const real_t tmp501 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp502 = tmp473*tmp501;
      const real_t tmp503 = tmp475*tmp501;
      const real_t tmp504 = tmp477*tmp501;
      const real_t tmp505 = tmp449*(-1.2518910405721839*tmp460 - 1.2518910405721839*tmp462 - 1.2518910405721839*tmp465 - 1.2518910405721839*tmp467 - 1.2518910405721839*tmp469 - 1.2518910405721839*tmp471 - 1.2518910405721839*tmp474 - 1.2518910405721839*tmp476 - 1.2518910405721839*tmp478) + tmp479*(-1.2518910405721839*tmp481 - 1.2518910405721839*tmp482 - 1.2518910405721839*tmp484 - 1.2518910405721839*tmp485 - 1.2518910405721839*tmp486 - 1.2518910405721839*tmp487 - 1.2518910405721839*tmp489 - 1.2518910405721839*tmp490 - 1.2518910405721839*tmp491) + tmp492*(-1.2518910405721839*tmp494 - 1.2518910405721839*tmp495 - 1.2518910405721839*tmp497 - 1.2518910405721839*tmp498 - 1.2518910405721839*tmp499 - 1.2518910405721839*tmp500 - 1.2518910405721839*tmp502 - 1.2518910405721839*tmp503 - 1.2518910405721839*tmp504);
      const real_t tmp506 = tmp93*std::abs(tmp456)*ScalarCoeff0_6;
      const real_t tmp507 = 0.013237780011337553*tmp506;
      const real_t tmp508 = -0.050366079282822225*DoFValues_[20] - 0.044386125994604245*DoFValues_[21] - 0.058056040641376996*DoFValues_[22] - 0.05238643785587771*DoFValues_[23] + 0.10296779823620235*DoFValues_[24] + 0.10720405494254889*DoFValues_[25] + 0.78064263777441811*DoFValues_[26] + 0.013514255131872058*DoFValues_[27] + 0.098408626234844879*DoFValues_[28] + 0.10245731145479493*DoFValues_[29];
      const real_t tmp509 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp510 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp511 = tmp509 - tmp510;
      const real_t tmp512 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp513 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp514 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp515 = tmp509*J_B_7(2, 2) - tmp510*J_B_7(2, 2) + tmp512*J_B_7(2, 0) - tmp513*J_B_7(2, 1) - tmp514*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp516 = tmp19/tmp515;
      const real_t tmp517 = tmp10*tmp516;
      const real_t tmp518 = tmp511*tmp517;
      const real_t tmp519 = tmp28*tmp516;
      const real_t tmp520 = tmp511*tmp519;
      const real_t tmp521 = -tmp513 + J_B_7(0, 2)*J_B_7(1, 0);
      const real_t tmp522 = tmp32*tmp516;
      const real_t tmp523 = tmp521*tmp522;
      const real_t tmp524 = tmp35*tmp516;
      const real_t tmp525 = tmp521*tmp524;
      const real_t tmp526 = tmp38*tmp516;
      const real_t tmp527 = tmp511*tmp526;
      const real_t tmp528 = tmp41*tmp516;
      const real_t tmp529 = tmp521*tmp528;
      const real_t tmp530 = tmp512 - tmp514;
      const real_t tmp531 = tmp45*tmp516;
      const real_t tmp532 = tmp530*tmp531;
      const real_t tmp533 = tmp48*tmp516;
      const real_t tmp534 = tmp530*tmp533;
      const real_t tmp535 = tmp51*tmp516;
      const real_t tmp536 = tmp530*tmp535;
      const real_t tmp537 = -0.050366079282822225*DoFValues_[10] - 0.044386125994604245*DoFValues_[11] - 0.058056040641376996*DoFValues_[12] - 0.05238643785587771*DoFValues_[13] + 0.10296779823620235*DoFValues_[14] + 0.10720405494254889*DoFValues_[15] + 0.78064263777441811*DoFValues_[16] + 0.013514255131872058*DoFValues_[17] + 0.098408626234844879*DoFValues_[18] + 0.10245731145479493*DoFValues_[19];
      const real_t tmp538 = -J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0);
      const real_t tmp539 = tmp517*tmp538;
      const real_t tmp540 = tmp519*tmp538;
      const real_t tmp541 = J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp542 = tmp522*tmp541;
      const real_t tmp543 = tmp524*tmp541;
      const real_t tmp544 = tmp526*tmp538;
      const real_t tmp545 = tmp528*tmp541;
      const real_t tmp546 = -J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1);
      const real_t tmp547 = tmp531*tmp546;
      const real_t tmp548 = tmp533*tmp546;
      const real_t tmp549 = tmp535*tmp546;
      const real_t tmp550 = -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9];
      const real_t tmp551 = J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0);
      const real_t tmp552 = tmp517*tmp551;
      const real_t tmp553 = tmp519*tmp551;
      const real_t tmp554 = -J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0);
      const real_t tmp555 = tmp522*tmp554;
      const real_t tmp556 = tmp524*tmp554;
      const real_t tmp557 = tmp526*tmp551;
      const real_t tmp558 = tmp528*tmp554;
      const real_t tmp559 = J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1);
      const real_t tmp560 = tmp531*tmp559;
      const real_t tmp561 = tmp533*tmp559;
      const real_t tmp562 = tmp535*tmp559;
      const real_t tmp563 = tmp508*(0.77270393148826533*tmp518 + 0.77270393148826533*tmp520 + 0.77270393148826533*tmp523 + 0.77270393148826533*tmp525 + 0.77270393148826533*tmp527 + 0.77270393148826533*tmp529 + 0.77270393148826533*tmp532 + 0.77270393148826533*tmp534 + 0.77270393148826533*tmp536) + tmp537*(0.77270393148826533*tmp539 + 0.77270393148826533*tmp540 + 0.77270393148826533*tmp542 + 0.77270393148826533*tmp543 + 0.77270393148826533*tmp544 + 0.77270393148826533*tmp545 + 0.77270393148826533*tmp547 + 0.77270393148826533*tmp548 + 0.77270393148826533*tmp549) + tmp550*(0.77270393148826533*tmp552 + 0.77270393148826533*tmp553 + 0.77270393148826533*tmp555 + 0.77270393148826533*tmp556 + 0.77270393148826533*tmp557 + 0.77270393148826533*tmp558 + 0.77270393148826533*tmp560 + 0.77270393148826533*tmp561 + 0.77270393148826533*tmp562);
      const real_t tmp564 = tmp93*std::abs(tmp515)*ScalarCoeff0_7;
      const real_t tmp565 = 0.011578327656272565*tmp564;
      const real_t tmp566 = -0.019557567231552921*DoFValues_[20] - 0.067697829971284249*DoFValues_[21] - 0.047650663865325717*DoFValues_[22] - 0.043215304390912167*DoFValues_[23] + 0.010194883998076013*DoFValues_[24] + 0.080132585434918649*DoFValues_[25] + 0.089456739511664204*DoFValues_[26] + 0.091666010467002526*DoFValues_[27] + 0.10233218329240164*DoFValues_[28] + 0.80433896275501204*DoFValues_[29];
      const real_t tmp567 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp568 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp569 = tmp567 - tmp568;
      const real_t tmp570 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp571 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp572 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp573 = tmp567*J_B_8(2, 2) - tmp568*J_B_8(2, 2) + tmp570*J_B_8(2, 0) - tmp571*J_B_8(2, 1) - tmp572*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp574 = 1.0 / (tmp573);
      const real_t tmp575 = tmp19*tmp574;
      const real_t tmp576 = tmp10*tmp575;
      const real_t tmp577 = tmp569*tmp576;
      const real_t tmp578 = tmp28*tmp575;
      const real_t tmp579 = tmp569*tmp578;
      const real_t tmp580 = -tmp571 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp581 = tmp32*tmp575;
      const real_t tmp582 = tmp580*tmp581;
      const real_t tmp583 = tmp35*tmp575;
      const real_t tmp584 = tmp580*tmp583;
      const real_t tmp585 = tmp38*tmp575;
      const real_t tmp586 = tmp569*tmp585;
      const real_t tmp587 = tmp41*tmp575;
      const real_t tmp588 = tmp580*tmp587;
      const real_t tmp589 = tmp570 - tmp572;
      const real_t tmp590 = tmp45*tmp575;
      const real_t tmp591 = tmp589*tmp590;
      const real_t tmp592 = tmp48*tmp575;
      const real_t tmp593 = tmp589*tmp592;
      const real_t tmp594 = tmp51*tmp575;
      const real_t tmp595 = tmp589*tmp594;
      const real_t tmp596 = -0.019557567231552921*DoFValues_[10] - 0.067697829971284249*DoFValues_[11] - 0.047650663865325717*DoFValues_[12] - 0.043215304390912167*DoFValues_[13] + 0.010194883998076013*DoFValues_[14] + 0.080132585434918649*DoFValues_[15] + 0.089456739511664204*DoFValues_[16] + 0.091666010467002526*DoFValues_[17] + 0.10233218329240164*DoFValues_[18] + 0.80433896275501204*DoFValues_[19];
      const real_t tmp597 = -J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp598 = tmp576*tmp597;
      const real_t tmp599 = tmp578*tmp597;
      const real_t tmp600 = J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp601 = tmp581*tmp600;
      const real_t tmp602 = tmp583*tmp600;
      const real_t tmp603 = tmp585*tmp597;
      const real_t tmp604 = tmp587*tmp600;
      const real_t tmp605 = -J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp606 = tmp590*tmp605;
      const real_t tmp607 = tmp592*tmp605;
      const real_t tmp608 = tmp594*tmp605;
      const real_t tmp609 = -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9];
      const real_t tmp610 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp611 = tmp576*tmp610;
      const real_t tmp612 = tmp578*tmp610;
      const real_t tmp613 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp614 = tmp581*tmp613;
      const real_t tmp615 = tmp583*tmp613;
      const real_t tmp616 = tmp585*tmp610;
      const real_t tmp617 = tmp587*tmp613;
      const real_t tmp618 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp619 = tmp590*tmp618;
      const real_t tmp620 = tmp592*tmp618;
      const real_t tmp621 = tmp594*tmp618;
      const real_t tmp622 = tmp566*(-0.9184440441026207*tmp577 - 0.9184440441026207*tmp579 - 0.9184440441026207*tmp582 - 0.9184440441026207*tmp584 - 0.9184440441026207*tmp586 - 0.9184440441026207*tmp588 - 0.9184440441026207*tmp591 - 0.9184440441026207*tmp593 - 0.9184440441026207*tmp595) + tmp596*(-0.9184440441026207*tmp598 - 0.9184440441026207*tmp599 - 0.9184440441026207*tmp601 - 0.9184440441026207*tmp602 - 0.9184440441026207*tmp603 - 0.9184440441026207*tmp604 - 0.9184440441026207*tmp606 - 0.9184440441026207*tmp607 - 0.9184440441026207*tmp608) + tmp609*(-0.9184440441026207*tmp611 - 0.9184440441026207*tmp612 - 0.9184440441026207*tmp614 - 0.9184440441026207*tmp615 - 0.9184440441026207*tmp616 - 0.9184440441026207*tmp617 - 0.9184440441026207*tmp619 - 0.9184440441026207*tmp620 - 0.9184440441026207*tmp621);
      const real_t tmp623 = tmp93*std::abs(tmp573)*ScalarCoeff0_8;
      const real_t tmp624 = 0.0099888641910932489*tmp623;
      const real_t tmp625 = -0.10746455902143294*DoFValues_[20] - 0.058185352140737757*DoFValues_[21] + 0.35761162920590117*DoFValues_[22] - 0.032708111944971592*DoFValues_[23] + 0.10431737973498022*DoFValues_[24] + 0.0094607187467148392*DoFValues_[25] + 0.19931139089788985*DoFValues_[26] + 0.022005984955445396*DoFValues_[27] + 0.46360573514257358*DoFValues_[28] + 0.042045184423637423*DoFValues_[29];
      const real_t tmp626 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp627 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp628 = tmp626 - tmp627;
      const real_t tmp629 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp630 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp631 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp632 = tmp626*J_B_9(2, 2) - tmp627*J_B_9(2, 2) + tmp629*J_B_9(2, 0) - tmp630*J_B_9(2, 1) - tmp631*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp633 = 1.0 / (tmp632);
      const real_t tmp634 = tmp19*tmp633;
      const real_t tmp635 = tmp10*tmp634;
      const real_t tmp636 = tmp628*tmp635;
      const real_t tmp637 = tmp28*tmp634;
      const real_t tmp638 = tmp628*tmp637;
      const real_t tmp639 = -tmp630 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp640 = tmp32*tmp634;
      const real_t tmp641 = tmp639*tmp640;
      const real_t tmp642 = tmp35*tmp634;
      const real_t tmp643 = tmp639*tmp642;
      const real_t tmp644 = tmp38*tmp634;
      const real_t tmp645 = tmp628*tmp644;
      const real_t tmp646 = tmp41*tmp634;
      const real_t tmp647 = tmp639*tmp646;
      const real_t tmp648 = tmp629 - tmp631;
      const real_t tmp649 = tmp45*tmp634;
      const real_t tmp650 = tmp648*tmp649;
      const real_t tmp651 = tmp48*tmp634;
      const real_t tmp652 = tmp648*tmp651;
      const real_t tmp653 = tmp51*tmp634;
      const real_t tmp654 = tmp648*tmp653;
      const real_t tmp655 = -0.10746455902143294*DoFValues_[10] - 0.058185352140737757*DoFValues_[11] + 0.35761162920590117*DoFValues_[12] - 0.032708111944971592*DoFValues_[13] + 0.10431737973498022*DoFValues_[14] + 0.0094607187467148392*DoFValues_[15] + 0.19931139089788985*DoFValues_[16] + 0.022005984955445396*DoFValues_[17] + 0.46360573514257358*DoFValues_[18] + 0.042045184423637423*DoFValues_[19];
      const real_t tmp656 = -J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp657 = tmp635*tmp656;
      const real_t tmp658 = tmp637*tmp656;
      const real_t tmp659 = J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp660 = tmp640*tmp659;
      const real_t tmp661 = tmp642*tmp659;
      const real_t tmp662 = tmp644*tmp656;
      const real_t tmp663 = tmp646*tmp659;
      const real_t tmp664 = -J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp665 = tmp649*tmp664;
      const real_t tmp666 = tmp651*tmp664;
      const real_t tmp667 = tmp653*tmp664;
      const real_t tmp668 = -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9];
      const real_t tmp669 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp670 = tmp635*tmp669;
      const real_t tmp671 = tmp637*tmp669;
      const real_t tmp672 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp673 = tmp640*tmp672;
      const real_t tmp674 = tmp642*tmp672;
      const real_t tmp675 = tmp644*tmp669;
      const real_t tmp676 = tmp646*tmp672;
      const real_t tmp677 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp678 = tmp649*tmp677;
      const real_t tmp679 = tmp651*tmp677;
      const real_t tmp680 = tmp653*tmp677;
      const real_t tmp681 = tmp625*(0.37454442704241986*tmp636 + 0.37454442704241986*tmp638 + 0.37454442704241986*tmp641 + 0.37454442704241986*tmp643 + 0.37454442704241986*tmp645 + 0.37454442704241986*tmp647 + 0.37454442704241986*tmp650 + 0.37454442704241986*tmp652 + 0.37454442704241986*tmp654) + tmp655*(0.37454442704241986*tmp657 + 0.37454442704241986*tmp658 + 0.37454442704241986*tmp660 + 0.37454442704241986*tmp661 + 0.37454442704241986*tmp662 + 0.37454442704241986*tmp663 + 0.37454442704241986*tmp665 + 0.37454442704241986*tmp666 + 0.37454442704241986*tmp667) + tmp668*(0.37454442704241986*tmp670 + 0.37454442704241986*tmp671 + 0.37454442704241986*tmp673 + 0.37454442704241986*tmp674 + 0.37454442704241986*tmp675 + 0.37454442704241986*tmp676 + 0.37454442704241986*tmp678 + 0.37454442704241986*tmp679 + 0.37454442704241986*tmp680);
      const real_t tmp682 = tmp93*std::abs(tmp632)*ScalarCoeff0_9;
      const real_t tmp683 = 0.0092322998119293981*tmp682;
      const real_t tmp684 = tmp0*(tmp40 + tmp43 + tmp53);
      const real_t tmp685 = tmp54*(tmp61 + tmp62 + tmp66);
      const real_t tmp686 = tmp67*(tmp74 + tmp75 + tmp79);
      const real_t tmp687 = -0.61118142164966693*tmp684 - 0.61118142164966693*tmp685 - 0.61118142164966693*tmp686;
      const real_t tmp688 = tmp80*tmp95;
      const real_t tmp689 = tmp96*(tmp116 + tmp118 + tmp125);
      const real_t tmp690 = tmp126*(tmp133 + tmp134 + tmp138);
      const real_t tmp691 = tmp139*(tmp146 + tmp147 + tmp151);
      const real_t tmp692 = 2.0100340280386204*tmp689 + 2.0100340280386204*tmp690 + 2.0100340280386204*tmp691;
      const real_t tmp693 = tmp152*tmp154;
      const real_t tmp694 = tmp155*(tmp175 + tmp177 + tmp184);
      const real_t tmp695 = tmp185*(tmp192 + tmp193 + tmp197);
      const real_t tmp696 = tmp198*(tmp205 + tmp206 + tmp210);
      const real_t tmp697 = -0.83803797308963879*tmp694 - 0.83803797308963879*tmp695 - 0.83803797308963879*tmp696;
      const real_t tmp698 = tmp211*tmp213;
      const real_t tmp699 = tmp214*(tmp234 + tmp236 + tmp243);
      const real_t tmp700 = tmp244*(tmp251 + tmp252 + tmp256);
      const real_t tmp701 = tmp257*(tmp264 + tmp265 + tmp269);
      const real_t tmp702 = -0.88172201917408044*tmp699 - 0.88172201917408044*tmp700 - 0.88172201917408044*tmp701;
      const real_t tmp703 = tmp270*tmp272;
      const real_t tmp704 = tmp273*(tmp293 + tmp295 + tmp302);
      const real_t tmp705 = tmp303*(tmp310 + tmp311 + tmp315);
      const real_t tmp706 = tmp316*(tmp323 + tmp324 + tmp328);
      const real_t tmp707 = 0.73084095619107403*tmp704 + 0.73084095619107403*tmp705 + 0.73084095619107403*tmp706;
      const real_t tmp708 = tmp329*tmp331;
      const real_t tmp709 = tmp332*(tmp352 + tmp354 + tmp361);
      const real_t tmp710 = tmp362*(tmp369 + tmp370 + tmp374);
      const real_t tmp711 = tmp375*(tmp382 + tmp383 + tmp387);
      const real_t tmp712 = -0.038893340287708966*tmp709 - 0.038893340287708966*tmp710 - 0.038893340287708966*tmp711;
      const real_t tmp713 = tmp388*tmp390;
      const real_t tmp714 = tmp391*(tmp410 + tmp412 + tmp419);
      const real_t tmp715 = tmp420*(tmp427 + tmp428 + tmp432);
      const real_t tmp716 = tmp433*(tmp440 + tmp441 + tmp445);
      const real_t tmp717 = -0.48235450484435938*tmp714 - 0.48235450484435938*tmp715 - 0.48235450484435938*tmp716;
      const real_t tmp718 = tmp446*tmp448;
      const real_t tmp719 = tmp449*(tmp469 + tmp471 + tmp478);
      const real_t tmp720 = tmp479*(tmp486 + tmp487 + tmp491);
      const real_t tmp721 = tmp492*(tmp499 + tmp500 + tmp504);
      const real_t tmp722 = -0.51383203466428817*tmp719 - 0.51383203466428817*tmp720 - 0.51383203466428817*tmp721;
      const real_t tmp723 = tmp505*tmp507;
      const real_t tmp724 = tmp508*(tmp527 + tmp529 + tmp536);
      const real_t tmp725 = tmp537*(tmp544 + tmp545 + tmp549);
      const real_t tmp726 = tmp550*(tmp557 + tmp558 + tmp562);
      const real_t tmp727 = 0.80306350436510687*tmp724 + 0.80306350436510687*tmp725 + 0.80306350436510687*tmp726;
      const real_t tmp728 = tmp563*tmp565;
      const real_t tmp729 = tmp566*(tmp586 + tmp588 + tmp595);
      const real_t tmp730 = tmp596*(tmp603 + tmp604 + tmp608);
      const real_t tmp731 = tmp609*(tmp616 + tmp617 + tmp621);
      const real_t tmp732 = 0.67706525551805274*tmp729 + 0.67706525551805274*tmp730 + 0.67706525551805274*tmp731;
      const real_t tmp733 = tmp622*tmp624;
      const real_t tmp734 = tmp625*(tmp645 + tmp647 + tmp654);
      const real_t tmp735 = tmp655*(tmp662 + tmp663 + tmp667);
      const real_t tmp736 = tmp668*(tmp675 + tmp676 + tmp680);
      const real_t tmp737 = -0.7311068204264668*tmp734 - 0.7311068204264668*tmp735 - 0.7311068204264668*tmp736;
      const real_t tmp738 = tmp681*tmp683;
      const real_t tmp739 = tmp687*tmp688 + tmp692*tmp693 + tmp697*tmp698 + tmp702*tmp703 + tmp707*tmp708 + tmp712*tmp713 + tmp717*tmp718 + tmp722*tmp723 + tmp727*tmp728 + tmp732*tmp733 + tmp737*tmp738;
      const real_t tmp740 = tmp0*(tmp30 + tmp37 + tmp50);
      const real_t tmp741 = tmp54*(tmp57 + tmp60 + tmp65);
      const real_t tmp742 = tmp67*(tmp70 + tmp73 + tmp78);
      const real_t tmp743 = -0.57358330975202554*tmp740 - 0.57358330975202554*tmp741 - 0.57358330975202554*tmp742;
      const real_t tmp744 = tmp96*(tmp109 + tmp114 + tmp123);
      const real_t tmp745 = tmp126*(tmp129 + tmp132 + tmp137);
      const real_t tmp746 = tmp139*(tmp142 + tmp145 + tmp150);
      const real_t tmp747 = -0.6743803263885626*tmp744 - 0.6743803263885626*tmp745 - 0.6743803263885626*tmp746;
      const real_t tmp748 = tmp155*(tmp168 + tmp173 + tmp182);
      const real_t tmp749 = tmp185*(tmp188 + tmp191 + tmp196);
      const real_t tmp750 = tmp198*(tmp201 + tmp204 + tmp209);
      const real_t tmp751 = -0.30122376521107697*tmp748 - 0.30122376521107697*tmp749 - 0.30122376521107697*tmp750;
      const real_t tmp752 = tmp214*(tmp227 + tmp232 + tmp241);
      const real_t tmp753 = tmp244*(tmp247 + tmp250 + tmp255);
      const real_t tmp754 = tmp257*(tmp260 + tmp263 + tmp268);
      const real_t tmp755 = 0.3169318389705873*tmp752 + 0.3169318389705873*tmp753 + 0.3169318389705873*tmp754;
      const real_t tmp756 = tmp273*(tmp286 + tmp291 + tmp300);
      const real_t tmp757 = tmp303*(tmp306 + tmp309 + tmp314);
      const real_t tmp758 = tmp316*(tmp319 + tmp322 + tmp327);
      const real_t tmp759 = -0.58462353435602843*tmp756 - 0.58462353435602843*tmp757 - 0.58462353435602843*tmp758;
      const real_t tmp760 = tmp332*(tmp345 + tmp350 + tmp359);
      const real_t tmp761 = tmp362*(tmp365 + tmp368 + tmp373);
      const real_t tmp762 = tmp375*(tmp378 + tmp381 + tmp386);
      const real_t tmp763 = 0.21779360973798778*tmp760 + 0.21779360973798778*tmp761 + 0.21779360973798778*tmp762;
      const real_t tmp764 = tmp391*(tmp403 + tmp408 + tmp417);
      const real_t tmp765 = tmp420*(tmp423 + tmp426 + tmp431);
      const real_t tmp766 = tmp433*(tmp436 + tmp439 + tmp444);
      const real_t tmp767 = 1.1520288156647434*tmp764 + 1.1520288156647434*tmp765 + 1.1520288156647434*tmp766;
      const real_t tmp768 = tmp449*(tmp462 + tmp467 + tmp476);
      const real_t tmp769 = tmp479*(tmp482 + tmp485 + tmp490);
      const real_t tmp770 = tmp492*(tmp495 + tmp498 + tmp503);
      const real_t tmp771 = -0.96403495962665708*tmp768 - 0.96403495962665708*tmp769 - 0.96403495962665708*tmp770;
      const real_t tmp772 = tmp508*(tmp520 + tmp525 + tmp534);
      const real_t tmp773 = tmp537*(tmp540 + tmp543 + tmp548);
      const real_t tmp774 = tmp550*(tmp553 + tmp556 + tmp561);
      const real_t tmp775 = 0.7318139619254227*tmp772 + 0.7318139619254227*tmp773 + 0.7318139619254227*tmp774;
      const real_t tmp776 = tmp566*(tmp579 + tmp584 + tmp593);
      const real_t tmp777 = tmp596*(tmp599 + tmp602 + tmp607);
      const real_t tmp778 = tmp609*(tmp612 + tmp615 + tmp620);
      const real_t tmp779 = -0.78663504185701916*tmp776 - 0.78663504185701916*tmp777 - 0.78663504185701916*tmp778;
      const real_t tmp780 = tmp625*(tmp638 + tmp643 + tmp652);
      const real_t tmp781 = tmp655*(tmp658 + tmp661 + tmp666);
      const real_t tmp782 = tmp668*(tmp671 + tmp674 + tmp679);
      const real_t tmp783 = 1.9649155283744921*tmp780 + 1.9649155283744921*tmp781 + 1.9649155283744921*tmp782;
      const real_t tmp784 = tmp688*tmp743 + tmp693*tmp747 + tmp698*tmp751 + tmp703*tmp755 + tmp708*tmp759 + tmp713*tmp763 + tmp718*tmp767 + tmp723*tmp771 + tmp728*tmp775 + tmp733*tmp779 + tmp738*tmp783;
      const real_t tmp785 = tmp0*(tmp27 + tmp34 + tmp47);
      const real_t tmp786 = tmp54*(tmp56 + tmp59 + tmp64);
      const real_t tmp787 = tmp67*(tmp69 + tmp72 + tmp77);
      const real_t tmp788 = 1.7375616618121592*tmp785 + 1.7375616618121592*tmp786 + 1.7375616618121592*tmp787;
      const real_t tmp789 = tmp96*(tmp107 + tmp112 + tmp121);
      const real_t tmp790 = tmp126*(tmp128 + tmp131 + tmp136);
      const real_t tmp791 = tmp139*(tmp141 + tmp144 + tmp149);
      const real_t tmp792 = -0.7276025162471742*tmp789 - 0.7276025162471742*tmp790 - 0.7276025162471742*tmp791;
      const real_t tmp793 = tmp155*(tmp166 + tmp171 + tmp180);
      const real_t tmp794 = tmp185*(tmp187 + tmp190 + tmp195);
      const real_t tmp795 = tmp198*(tmp200 + tmp203 + tmp208);
      const real_t tmp796 = -0.94575719248078949*tmp793 - 0.94575719248078949*tmp794 - 0.94575719248078949*tmp795;
      const real_t tmp797 = tmp214*(tmp225 + tmp230 + tmp239);
      const real_t tmp798 = tmp244*(tmp246 + tmp249 + tmp254);
      const real_t tmp799 = tmp257*(tmp259 + tmp262 + tmp267);
      const real_t tmp800 = 0.27161424085357755*tmp797 + 0.27161424085357755*tmp798 + 0.27161424085357755*tmp799;
      const real_t tmp801 = tmp273*(tmp284 + tmp289 + tmp298);
      const real_t tmp802 = tmp303*(tmp305 + tmp308 + tmp313);
      const real_t tmp803 = tmp316*(tmp318 + tmp321 + tmp326);
      const real_t tmp804 = 0.41529295683718837*tmp801 + 0.41529295683718837*tmp802 + 0.41529295683718837*tmp803;
      const real_t tmp805 = tmp332*(tmp343 + tmp348 + tmp357);
      const real_t tmp806 = tmp362*(tmp364 + tmp367 + tmp372);
      const real_t tmp807 = tmp375*(tmp377 + tmp380 + tmp385);
      const real_t tmp808 = -0.49279309633843282*tmp805 - 0.49279309633843282*tmp806 - 0.49279309633843282*tmp807;
      const real_t tmp809 = tmp391*(tmp401 + tmp406 + tmp415);
      const real_t tmp810 = tmp420*(tmp422 + tmp425 + tmp430);
      const real_t tmp811 = tmp433*(tmp435 + tmp438 + tmp443);
      const real_t tmp812 = 0.32076165934985923*tmp809 + 0.32076165934985923*tmp810 + 0.32076165934985923*tmp811;
      const real_t tmp813 = tmp449*(tmp460 + tmp465 + tmp474);
      const real_t tmp814 = tmp479*(tmp481 + tmp484 + tmp489);
      const real_t tmp815 = tmp492*(tmp494 + tmp497 + tmp502);
      const real_t tmp816 = 0.22597595371876134*tmp813 + 0.22597595371876134*tmp814 + 0.22597595371876134*tmp815;
      const real_t tmp817 = tmp508*(tmp518 + tmp523 + tmp532);
      const real_t tmp818 = tmp537*(tmp539 + tmp542 + tmp547);
      const real_t tmp819 = tmp550*(tmp552 + tmp555 + tmp560);
      const real_t tmp820 = -0.76217353480226424*tmp817 - 0.76217353480226424*tmp818 - 0.76217353480226424*tmp819;
      const real_t tmp821 = tmp566*(tmp577 + tmp582 + tmp591);
      const real_t tmp822 = tmp596*(tmp598 + tmp601 + tmp606);
      const real_t tmp823 = tmp609*(tmp611 + tmp614 + tmp619);
      const real_t tmp824 = -0.80887425776365429*tmp821 - 0.80887425776365429*tmp822 - 0.80887425776365429*tmp823;
      const real_t tmp825 = tmp625*(tmp636 + tmp641 + tmp650);
      const real_t tmp826 = tmp655*(tmp657 + tmp660 + tmp665);
      const real_t tmp827 = tmp668*(tmp670 + tmp673 + tmp678);
      const real_t tmp828 = -0.85926428090560547*tmp825 - 0.85926428090560547*tmp826 - 0.85926428090560547*tmp827;
      const real_t tmp829 = tmp688*tmp788 + tmp693*tmp792 + tmp698*tmp796 + tmp703*tmp800 + tmp708*tmp804 + tmp713*tmp808 + tmp718*tmp812 + tmp723*tmp816 + tmp728*tmp820 + tmp733*tmp824 + tmp738*tmp828;
      const real_t tmp830 = 2.7375616618121592*tmp30 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp50;
      const real_t tmp831 = 0.42641669024797446*tmp27 + 0.42641669024797446*tmp34 + 0.42641669024797446*tmp47;
      const real_t tmp832 = 2.7375616618121592*tmp57 + 2.7375616618121592*tmp60 + 2.7375616618121592*tmp65;
      const real_t tmp833 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp59 + 0.42641669024797446*tmp64;
      const real_t tmp834 = 2.7375616618121592*tmp70 + 2.7375616618121592*tmp73 + 2.7375616618121592*tmp78;
      const real_t tmp835 = 0.42641669024797446*tmp69 + 0.42641669024797446*tmp72 + 0.42641669024797446*tmp77;
      const real_t tmp836 = tmp0*(tmp830 + tmp831) + tmp54*(tmp832 + tmp833) + tmp67*(tmp834 + tmp835);
      const real_t tmp837 = 0.2723974837528258*tmp109 + 0.2723974837528258*tmp114 + 0.2723974837528258*tmp123;
      const real_t tmp838 = 0.3256196736114374*tmp107 + 0.3256196736114374*tmp112 + 0.3256196736114374*tmp121;
      const real_t tmp839 = 0.2723974837528258*tmp129 + 0.2723974837528258*tmp132 + 0.2723974837528258*tmp137;
      const real_t tmp840 = 0.3256196736114374*tmp128 + 0.3256196736114374*tmp131 + 0.3256196736114374*tmp136;
      const real_t tmp841 = 0.2723974837528258*tmp142 + 0.2723974837528258*tmp145 + 0.2723974837528258*tmp150;
      const real_t tmp842 = 0.3256196736114374*tmp141 + 0.3256196736114374*tmp144 + 0.3256196736114374*tmp149;
      const real_t tmp843 = tmp126*(tmp839 + tmp840) + tmp139*(tmp841 + tmp842) + tmp96*(tmp837 + tmp838);
      const real_t tmp844 = 0.054242807519210512*tmp168 + 0.054242807519210512*tmp173 + 0.054242807519210512*tmp182;
      const real_t tmp845 = 0.69877623478892303*tmp166 + 0.69877623478892303*tmp171 + 0.69877623478892303*tmp180;
      const real_t tmp846 = 0.054242807519210512*tmp188 + 0.054242807519210512*tmp191 + 0.054242807519210512*tmp196;
      const real_t tmp847 = 0.69877623478892303*tmp187 + 0.69877623478892303*tmp190 + 0.69877623478892303*tmp195;
      const real_t tmp848 = 0.054242807519210512*tmp201 + 0.054242807519210512*tmp204 + 0.054242807519210512*tmp209;
      const real_t tmp849 = 0.69877623478892303*tmp200 + 0.69877623478892303*tmp203 + 0.69877623478892303*tmp208;
      const real_t tmp850 = tmp155*(tmp844 + tmp845) + tmp185*(tmp846 + tmp847) + tmp198*(tmp848 + tmp849);
      const real_t tmp851 = 1.2716142408535775*tmp227 + 1.2716142408535775*tmp232 + 1.2716142408535775*tmp241;
      const real_t tmp852 = 1.3169318389705873*tmp225 + 1.3169318389705873*tmp230 + 1.3169318389705873*tmp239;
      const real_t tmp853 = 1.2716142408535775*tmp247 + 1.2716142408535775*tmp250 + 1.2716142408535775*tmp255;
      const real_t tmp854 = 1.3169318389705873*tmp246 + 1.3169318389705873*tmp249 + 1.3169318389705873*tmp254;
      const real_t tmp855 = 1.2716142408535775*tmp260 + 1.2716142408535775*tmp263 + 1.2716142408535775*tmp268;
      const real_t tmp856 = 1.3169318389705873*tmp259 + 1.3169318389705873*tmp262 + 1.3169318389705873*tmp267;
      const real_t tmp857 = tmp214*(tmp851 + tmp852) + tmp244*(tmp853 + tmp854) + tmp257*(tmp855 + tmp856);
      const real_t tmp858 = 1.4152929568371884*tmp286 + 1.4152929568371884*tmp291 + 1.4152929568371884*tmp300;
      const real_t tmp859 = 0.41537646564397157*tmp284 + 0.41537646564397157*tmp289 + 0.41537646564397157*tmp298;
      const real_t tmp860 = 1.4152929568371884*tmp306 + 1.4152929568371884*tmp309 + 1.4152929568371884*tmp314;
      const real_t tmp861 = 0.41537646564397157*tmp305 + 0.41537646564397157*tmp308 + 0.41537646564397157*tmp313;
      const real_t tmp862 = 1.4152929568371884*tmp319 + 1.4152929568371884*tmp322 + 1.4152929568371884*tmp327;
      const real_t tmp863 = 0.41537646564397157*tmp318 + 0.41537646564397157*tmp321 + 0.41537646564397157*tmp326;
      const real_t tmp864 = tmp273*(tmp858 + tmp859) + tmp303*(tmp860 + tmp861) + tmp316*(tmp862 + tmp863);
      const real_t tmp865 = 0.50720690366156718*tmp345 + 0.50720690366156718*tmp350 + 0.50720690366156718*tmp359;
      const real_t tmp866 = 1.2177936097379878*tmp343 + 1.2177936097379878*tmp348 + 1.2177936097379878*tmp357;
      const real_t tmp867 = 0.50720690366156718*tmp365 + 0.50720690366156718*tmp368 + 0.50720690366156718*tmp373;
      const real_t tmp868 = 1.2177936097379878*tmp364 + 1.2177936097379878*tmp367 + 1.2177936097379878*tmp372;
      const real_t tmp869 = 0.50720690366156718*tmp378 + 0.50720690366156718*tmp381 + 0.50720690366156718*tmp386;
      const real_t tmp870 = 1.2177936097379878*tmp377 + 1.2177936097379878*tmp380 + 1.2177936097379878*tmp385;
      const real_t tmp871 = tmp332*(tmp865 + tmp866) + tmp362*(tmp867 + tmp868) + tmp375*(tmp869 + tmp870);
      const real_t tmp872 = 1.3207616593498592*tmp403 + 1.3207616593498592*tmp408 + 1.3207616593498592*tmp417;
      const real_t tmp873 = 2.1520288156647434*tmp401 + 2.1520288156647434*tmp406 + 2.1520288156647434*tmp415;
      const real_t tmp874 = 1.3207616593498592*tmp423 + 1.3207616593498592*tmp426 + 1.3207616593498592*tmp431;
      const real_t tmp875 = 2.1520288156647434*tmp422 + 2.1520288156647434*tmp425 + 2.1520288156647434*tmp430;
      const real_t tmp876 = 1.3207616593498592*tmp436 + 1.3207616593498592*tmp439 + 1.3207616593498592*tmp444;
      const real_t tmp877 = 2.1520288156647434*tmp435 + 2.1520288156647434*tmp438 + 2.1520288156647434*tmp443;
      const real_t tmp878 = tmp391*(tmp872 + tmp873) + tmp420*(tmp874 + tmp875) + tmp433*(tmp876 + tmp877);
      const real_t tmp879 = 1.2259759537187613*tmp462 + 1.2259759537187613*tmp467 + 1.2259759537187613*tmp476;
      const real_t tmp880 = 0.035965040373342916*tmp460 + 0.035965040373342916*tmp465 + 0.035965040373342916*tmp474;
      const real_t tmp881 = 1.2259759537187613*tmp482 + 1.2259759537187613*tmp485 + 1.2259759537187613*tmp490;
      const real_t tmp882 = 0.035965040373342916*tmp481 + 0.035965040373342916*tmp484 + 0.035965040373342916*tmp489;
      const real_t tmp883 = 1.2259759537187613*tmp495 + 1.2259759537187613*tmp498 + 1.2259759537187613*tmp503;
      const real_t tmp884 = 0.035965040373342916*tmp494 + 0.035965040373342916*tmp497 + 0.035965040373342916*tmp502;
      const real_t tmp885 = tmp449*(tmp879 + tmp880) + tmp479*(tmp881 + tmp882) + tmp492*(tmp883 + tmp884);
      const real_t tmp886 = 0.23782646519773576*tmp520 + 0.23782646519773576*tmp525 + 0.23782646519773576*tmp534;
      const real_t tmp887 = 1.7318139619254227*tmp518 + 1.7318139619254227*tmp523 + 1.7318139619254227*tmp532;
      const real_t tmp888 = 0.23782646519773576*tmp540 + 0.23782646519773576*tmp543 + 0.23782646519773576*tmp548;
      const real_t tmp889 = 1.7318139619254227*tmp539 + 1.7318139619254227*tmp542 + 1.7318139619254227*tmp547;
      const real_t tmp890 = 0.23782646519773576*tmp553 + 0.23782646519773576*tmp556 + 0.23782646519773576*tmp561;
      const real_t tmp891 = 1.7318139619254227*tmp552 + 1.7318139619254227*tmp555 + 1.7318139619254227*tmp560;
      const real_t tmp892 = tmp508*(tmp886 + tmp887) + tmp537*(tmp888 + tmp889) + tmp550*(tmp890 + tmp891);
      const real_t tmp893 = 0.19112574223634571*tmp579 + 0.19112574223634571*tmp584 + 0.19112574223634571*tmp593;
      const real_t tmp894 = 0.21336495814298084*tmp577 + 0.21336495814298084*tmp582 + 0.21336495814298084*tmp591;
      const real_t tmp895 = 0.19112574223634571*tmp599 + 0.19112574223634571*tmp602 + 0.19112574223634571*tmp607;
      const real_t tmp896 = 0.21336495814298084*tmp598 + 0.21336495814298084*tmp601 + 0.21336495814298084*tmp606;
      const real_t tmp897 = 0.19112574223634571*tmp612 + 0.19112574223634571*tmp615 + 0.19112574223634571*tmp620;
      const real_t tmp898 = 0.21336495814298084*tmp611 + 0.21336495814298084*tmp614 + 0.21336495814298084*tmp619;
      const real_t tmp899 = tmp566*(tmp893 + tmp894) + tmp596*(tmp895 + tmp896) + tmp609*(tmp897 + tmp898);
      const real_t tmp900 = 0.14073571909439453*tmp638 + 0.14073571909439453*tmp643 + 0.14073571909439453*tmp652;
      const real_t tmp901 = 2.9649155283744921*tmp636 + 2.9649155283744921*tmp641 + 2.9649155283744921*tmp650;
      const real_t tmp902 = 0.14073571909439453*tmp658 + 0.14073571909439453*tmp661 + 0.14073571909439453*tmp666;
      const real_t tmp903 = 2.9649155283744921*tmp657 + 2.9649155283744921*tmp660 + 2.9649155283744921*tmp665;
      const real_t tmp904 = 0.14073571909439453*tmp671 + 0.14073571909439453*tmp674 + 0.14073571909439453*tmp679;
      const real_t tmp905 = 2.9649155283744921*tmp670 + 2.9649155283744921*tmp673 + 2.9649155283744921*tmp678;
      const real_t tmp906 = tmp625*(tmp900 + tmp901) + tmp655*(tmp902 + tmp903) + tmp668*(tmp904 + tmp905);
      const real_t tmp907 = tmp688*tmp836 + tmp693*tmp843 + tmp698*tmp850 + tmp703*tmp857 + tmp708*tmp864 + tmp713*tmp871 + tmp718*tmp878 + tmp723*tmp885 + tmp728*tmp892 + tmp733*tmp899 + tmp738*tmp906;
      const real_t tmp908 = 2.7375616618121592*tmp40 + 2.7375616618121592*tmp43 + 2.7375616618121592*tmp53;
      const real_t tmp909 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp47;
      const real_t tmp910 = 2.7375616618121592*tmp61 + 2.7375616618121592*tmp62 + 2.7375616618121592*tmp66;
      const real_t tmp911 = 0.38881857835033307*tmp56 + 0.38881857835033307*tmp59 + 0.38881857835033307*tmp64;
      const real_t tmp912 = 2.7375616618121592*tmp74 + 2.7375616618121592*tmp75 + 2.7375616618121592*tmp79;
      const real_t tmp913 = 0.38881857835033307*tmp69 + 0.38881857835033307*tmp72 + 0.38881857835033307*tmp77;
      const real_t tmp914 = tmp0*(tmp908 + tmp909) + tmp54*(tmp910 + tmp911) + tmp67*(tmp912 + tmp913);
      const real_t tmp915 = 0.2723974837528258*tmp116 + 0.2723974837528258*tmp118 + 0.2723974837528258*tmp125;
      const real_t tmp916 = 3.0100340280386204*tmp107 + 3.0100340280386204*tmp112 + 3.0100340280386204*tmp121;
      const real_t tmp917 = 0.2723974837528258*tmp133 + 0.2723974837528258*tmp134 + 0.2723974837528258*tmp138;
      const real_t tmp918 = 3.0100340280386204*tmp128 + 3.0100340280386204*tmp131 + 3.0100340280386204*tmp136;
      const real_t tmp919 = 0.2723974837528258*tmp146 + 0.2723974837528258*tmp147 + 0.2723974837528258*tmp151;
      const real_t tmp920 = 3.0100340280386204*tmp141 + 3.0100340280386204*tmp144 + 3.0100340280386204*tmp149;
      const real_t tmp921 = tmp126*(tmp917 + tmp918) + tmp139*(tmp919 + tmp920) + tmp96*(tmp915 + tmp916);
      const real_t tmp922 = 0.054242807519210512*tmp175 + 0.054242807519210512*tmp177 + 0.054242807519210512*tmp184;
      const real_t tmp923 = 0.16196202691036121*tmp166 + 0.16196202691036121*tmp171 + 0.16196202691036121*tmp180;
      const real_t tmp924 = 0.054242807519210512*tmp192 + 0.054242807519210512*tmp193 + 0.054242807519210512*tmp197;
      const real_t tmp925 = 0.16196202691036121*tmp187 + 0.16196202691036121*tmp190 + 0.16196202691036121*tmp195;
      const real_t tmp926 = 0.054242807519210512*tmp205 + 0.054242807519210512*tmp206 + 0.054242807519210512*tmp210;
      const real_t tmp927 = 0.16196202691036121*tmp200 + 0.16196202691036121*tmp203 + 0.16196202691036121*tmp208;
      const real_t tmp928 = tmp155*(tmp922 + tmp923) + tmp185*(tmp924 + tmp925) + tmp198*(tmp926 + tmp927);
      const real_t tmp929 = 1.2716142408535775*tmp234 + 1.2716142408535775*tmp236 + 1.2716142408535775*tmp243;
      const real_t tmp930 = 0.11827798082591956*tmp225 + 0.11827798082591956*tmp230 + 0.11827798082591956*tmp239;
      const real_t tmp931 = 1.2716142408535775*tmp251 + 1.2716142408535775*tmp252 + 1.2716142408535775*tmp256;
      const real_t tmp932 = 0.11827798082591956*tmp246 + 0.11827798082591956*tmp249 + 0.11827798082591956*tmp254;
      const real_t tmp933 = 1.2716142408535775*tmp264 + 1.2716142408535775*tmp265 + 1.2716142408535775*tmp269;
      const real_t tmp934 = 0.11827798082591956*tmp259 + 0.11827798082591956*tmp262 + 0.11827798082591956*tmp267;
      const real_t tmp935 = tmp214*(tmp929 + tmp930) + tmp244*(tmp931 + tmp932) + tmp257*(tmp933 + tmp934);
      const real_t tmp936 = 1.4152929568371884*tmp293 + 1.4152929568371884*tmp295 + 1.4152929568371884*tmp302;
      const real_t tmp937 = 1.730840956191074*tmp284 + 1.730840956191074*tmp289 + 1.730840956191074*tmp298;
      const real_t tmp938 = 1.4152929568371884*tmp310 + 1.4152929568371884*tmp311 + 1.4152929568371884*tmp315;
      const real_t tmp939 = 1.730840956191074*tmp305 + 1.730840956191074*tmp308 + 1.730840956191074*tmp313;
      const real_t tmp940 = 1.4152929568371884*tmp323 + 1.4152929568371884*tmp324 + 1.4152929568371884*tmp328;
      const real_t tmp941 = 1.730840956191074*tmp318 + 1.730840956191074*tmp321 + 1.730840956191074*tmp326;
      const real_t tmp942 = tmp273*(tmp936 + tmp937) + tmp303*(tmp938 + tmp939) + tmp316*(tmp940 + tmp941);
      const real_t tmp943 = 0.50720690366156718*tmp352 + 0.50720690366156718*tmp354 + 0.50720690366156718*tmp361;
      const real_t tmp944 = 0.96110665971229103*tmp343 + 0.96110665971229103*tmp348 + 0.96110665971229103*tmp357;
      const real_t tmp945 = 0.50720690366156718*tmp369 + 0.50720690366156718*tmp370 + 0.50720690366156718*tmp374;
      const real_t tmp946 = 0.96110665971229103*tmp364 + 0.96110665971229103*tmp367 + 0.96110665971229103*tmp372;
      const real_t tmp947 = 0.50720690366156718*tmp382 + 0.50720690366156718*tmp383 + 0.50720690366156718*tmp387;
      const real_t tmp948 = 0.96110665971229103*tmp377 + 0.96110665971229103*tmp380 + 0.96110665971229103*tmp385;
      const real_t tmp949 = tmp332*(tmp943 + tmp944) + tmp362*(tmp945 + tmp946) + tmp375*(tmp947 + tmp948);
      const real_t tmp950 = 1.3207616593498592*tmp410 + 1.3207616593498592*tmp412 + 1.3207616593498592*tmp419;
      const real_t tmp951 = 0.51764549515564062*tmp401 + 0.51764549515564062*tmp406 + 0.51764549515564062*tmp415;
      const real_t tmp952 = 1.3207616593498592*tmp427 + 1.3207616593498592*tmp428 + 1.3207616593498592*tmp432;
      const real_t tmp953 = 0.51764549515564062*tmp422 + 0.51764549515564062*tmp425 + 0.51764549515564062*tmp430;
      const real_t tmp954 = 1.3207616593498592*tmp440 + 1.3207616593498592*tmp441 + 1.3207616593498592*tmp445;
      const real_t tmp955 = 0.51764549515564062*tmp435 + 0.51764549515564062*tmp438 + 0.51764549515564062*tmp443;
      const real_t tmp956 = tmp391*(tmp950 + tmp951) + tmp420*(tmp952 + tmp953) + tmp433*(tmp954 + tmp955);
      const real_t tmp957 = 1.2259759537187613*tmp469 + 1.2259759537187613*tmp471 + 1.2259759537187613*tmp478;
      const real_t tmp958 = 0.48616796533571183*tmp460 + 0.48616796533571183*tmp465 + 0.48616796533571183*tmp474;
      const real_t tmp959 = 1.2259759537187613*tmp486 + 1.2259759537187613*tmp487 + 1.2259759537187613*tmp491;
      const real_t tmp960 = 0.48616796533571183*tmp481 + 0.48616796533571183*tmp484 + 0.48616796533571183*tmp489;
      const real_t tmp961 = 1.2259759537187613*tmp499 + 1.2259759537187613*tmp500 + 1.2259759537187613*tmp504;
      const real_t tmp962 = 0.48616796533571183*tmp494 + 0.48616796533571183*tmp497 + 0.48616796533571183*tmp502;
      const real_t tmp963 = tmp449*(tmp957 + tmp958) + tmp479*(tmp959 + tmp960) + tmp492*(tmp961 + tmp962);
      const real_t tmp964 = 0.23782646519773576*tmp527 + 0.23782646519773576*tmp529 + 0.23782646519773576*tmp536;
      const real_t tmp965 = 1.8030635043651069*tmp518 + 1.8030635043651069*tmp523 + 1.8030635043651069*tmp532;
      const real_t tmp966 = 0.23782646519773576*tmp544 + 0.23782646519773576*tmp545 + 0.23782646519773576*tmp549;
      const real_t tmp967 = 1.8030635043651069*tmp539 + 1.8030635043651069*tmp542 + 1.8030635043651069*tmp547;
      const real_t tmp968 = 0.23782646519773576*tmp557 + 0.23782646519773576*tmp558 + 0.23782646519773576*tmp562;
      const real_t tmp969 = 1.8030635043651069*tmp552 + 1.8030635043651069*tmp555 + 1.8030635043651069*tmp560;
      const real_t tmp970 = tmp508*(tmp964 + tmp965) + tmp537*(tmp966 + tmp967) + tmp550*(tmp968 + tmp969);
      const real_t tmp971 = 0.19112574223634571*tmp586 + 0.19112574223634571*tmp588 + 0.19112574223634571*tmp595;
      const real_t tmp972 = 1.6770652555180527*tmp577 + 1.6770652555180527*tmp582 + 1.6770652555180527*tmp591;
      const real_t tmp973 = 0.19112574223634571*tmp603 + 0.19112574223634571*tmp604 + 0.19112574223634571*tmp608;
      const real_t tmp974 = 1.6770652555180527*tmp598 + 1.6770652555180527*tmp601 + 1.6770652555180527*tmp606;
      const real_t tmp975 = 0.19112574223634571*tmp616 + 0.19112574223634571*tmp617 + 0.19112574223634571*tmp621;
      const real_t tmp976 = 1.6770652555180527*tmp611 + 1.6770652555180527*tmp614 + 1.6770652555180527*tmp619;
      const real_t tmp977 = tmp566*(tmp971 + tmp972) + tmp596*(tmp973 + tmp974) + tmp609*(tmp975 + tmp976);
      const real_t tmp978 = 0.14073571909439453*tmp645 + 0.14073571909439453*tmp647 + 0.14073571909439453*tmp654;
      const real_t tmp979 = 0.2688931795735332*tmp636 + 0.2688931795735332*tmp641 + 0.2688931795735332*tmp650;
      const real_t tmp980 = 0.14073571909439453*tmp662 + 0.14073571909439453*tmp663 + 0.14073571909439453*tmp667;
      const real_t tmp981 = 0.2688931795735332*tmp657 + 0.2688931795735332*tmp660 + 0.2688931795735332*tmp665;
      const real_t tmp982 = 0.14073571909439453*tmp675 + 0.14073571909439453*tmp676 + 0.14073571909439453*tmp680;
      const real_t tmp983 = 0.2688931795735332*tmp670 + 0.2688931795735332*tmp673 + 0.2688931795735332*tmp678;
      const real_t tmp984 = tmp625*(tmp978 + tmp979) + tmp655*(tmp980 + tmp981) + tmp668*(tmp982 + tmp983);
      const real_t tmp985 = tmp688*tmp914 + tmp693*tmp921 + tmp698*tmp928 + tmp703*tmp935 + tmp708*tmp942 + tmp713*tmp949 + tmp718*tmp956 + tmp723*tmp963 + tmp728*tmp970 + tmp733*tmp977 + tmp738*tmp984;
      const real_t tmp986 = 0.42641669024797446*tmp40 + 0.42641669024797446*tmp43 + 0.42641669024797446*tmp53;
      const real_t tmp987 = 0.38881857835033307*tmp30 + 0.38881857835033307*tmp37 + 0.38881857835033307*tmp50;
      const real_t tmp988 = 0.42641669024797446*tmp61 + 0.42641669024797446*tmp62 + 0.42641669024797446*tmp66;
      const real_t tmp989 = 0.38881857835033307*tmp57 + 0.38881857835033307*tmp60 + 0.38881857835033307*tmp65;
      const real_t tmp990 = 0.42641669024797446*tmp74 + 0.42641669024797446*tmp75 + 0.42641669024797446*tmp79;
      const real_t tmp991 = 0.38881857835033307*tmp70 + 0.38881857835033307*tmp73 + 0.38881857835033307*tmp78;
      const real_t tmp992 = tmp0*(tmp986 + tmp987) + tmp54*(tmp988 + tmp989) + tmp67*(tmp990 + tmp991);
      const real_t tmp993 = 0.3256196736114374*tmp116 + 0.3256196736114374*tmp118 + 0.3256196736114374*tmp125;
      const real_t tmp994 = 3.0100340280386204*tmp109 + 3.0100340280386204*tmp114 + 3.0100340280386204*tmp123;
      const real_t tmp995 = 0.3256196736114374*tmp133 + 0.3256196736114374*tmp134 + 0.3256196736114374*tmp138;
      const real_t tmp996 = 3.0100340280386204*tmp129 + 3.0100340280386204*tmp132 + 3.0100340280386204*tmp137;
      const real_t tmp997 = 0.3256196736114374*tmp146 + 0.3256196736114374*tmp147 + 0.3256196736114374*tmp151;
      const real_t tmp998 = 3.0100340280386204*tmp142 + 3.0100340280386204*tmp145 + 3.0100340280386204*tmp150;
      const real_t tmp999 = tmp126*(tmp995 + tmp996) + tmp139*(tmp997 + tmp998) + tmp96*(tmp993 + tmp994);
      const real_t tmp1000 = 0.69877623478892303*tmp175 + 0.69877623478892303*tmp177 + 0.69877623478892303*tmp184;
      const real_t tmp1001 = 0.16196202691036121*tmp168 + 0.16196202691036121*tmp173 + 0.16196202691036121*tmp182;
      const real_t tmp1002 = 0.69877623478892303*tmp192 + 0.69877623478892303*tmp193 + 0.69877623478892303*tmp197;
      const real_t tmp1003 = 0.16196202691036121*tmp188 + 0.16196202691036121*tmp191 + 0.16196202691036121*tmp196;
      const real_t tmp1004 = 0.69877623478892303*tmp205 + 0.69877623478892303*tmp206 + 0.69877623478892303*tmp210;
      const real_t tmp1005 = 0.16196202691036121*tmp201 + 0.16196202691036121*tmp204 + 0.16196202691036121*tmp209;
      const real_t tmp1006 = tmp155*(tmp1000 + tmp1001) + tmp185*(tmp1002 + tmp1003) + tmp198*(tmp1004 + tmp1005);
      const real_t tmp1007 = 1.3169318389705873*tmp234 + 1.3169318389705873*tmp236 + 1.3169318389705873*tmp243;
      const real_t tmp1008 = 0.11827798082591956*tmp227 + 0.11827798082591956*tmp232 + 0.11827798082591956*tmp241;
      const real_t tmp1009 = 1.3169318389705873*tmp251 + 1.3169318389705873*tmp252 + 1.3169318389705873*tmp256;
      const real_t tmp1010 = 0.11827798082591956*tmp247 + 0.11827798082591956*tmp250 + 0.11827798082591956*tmp255;
      const real_t tmp1011 = 1.3169318389705873*tmp264 + 1.3169318389705873*tmp265 + 1.3169318389705873*tmp269;
      const real_t tmp1012 = 0.11827798082591956*tmp260 + 0.11827798082591956*tmp263 + 0.11827798082591956*tmp268;
      const real_t tmp1013 = tmp214*(tmp1007 + tmp1008) + tmp244*(tmp1009 + tmp1010) + tmp257*(tmp1011 + tmp1012);
      const real_t tmp1014 = 0.41537646564397157*tmp293 + 0.41537646564397157*tmp295 + 0.41537646564397157*tmp302;
      const real_t tmp1015 = 1.730840956191074*tmp286 + 1.730840956191074*tmp291 + 1.730840956191074*tmp300;
      const real_t tmp1016 = 0.41537646564397157*tmp310 + 0.41537646564397157*tmp311 + 0.41537646564397157*tmp315;
      const real_t tmp1017 = 1.730840956191074*tmp306 + 1.730840956191074*tmp309 + 1.730840956191074*tmp314;
      const real_t tmp1018 = 0.41537646564397157*tmp323 + 0.41537646564397157*tmp324 + 0.41537646564397157*tmp328;
      const real_t tmp1019 = 1.730840956191074*tmp319 + 1.730840956191074*tmp322 + 1.730840956191074*tmp327;
      const real_t tmp1020 = tmp273*(tmp1014 + tmp1015) + tmp303*(tmp1016 + tmp1017) + tmp316*(tmp1018 + tmp1019);
      const real_t tmp1021 = 1.2177936097379878*tmp352 + 1.2177936097379878*tmp354 + 1.2177936097379878*tmp361;
      const real_t tmp1022 = 0.96110665971229103*tmp345 + 0.96110665971229103*tmp350 + 0.96110665971229103*tmp359;
      const real_t tmp1023 = 1.2177936097379878*tmp369 + 1.2177936097379878*tmp370 + 1.2177936097379878*tmp374;
      const real_t tmp1024 = 0.96110665971229103*tmp365 + 0.96110665971229103*tmp368 + 0.96110665971229103*tmp373;
      const real_t tmp1025 = 1.2177936097379878*tmp382 + 1.2177936097379878*tmp383 + 1.2177936097379878*tmp387;
      const real_t tmp1026 = 0.96110665971229103*tmp378 + 0.96110665971229103*tmp381 + 0.96110665971229103*tmp386;
      const real_t tmp1027 = tmp332*(tmp1021 + tmp1022) + tmp362*(tmp1023 + tmp1024) + tmp375*(tmp1025 + tmp1026);
      const real_t tmp1028 = 2.1520288156647434*tmp410 + 2.1520288156647434*tmp412 + 2.1520288156647434*tmp419;
      const real_t tmp1029 = 0.51764549515564062*tmp403 + 0.51764549515564062*tmp408 + 0.51764549515564062*tmp417;
      const real_t tmp1030 = 2.1520288156647434*tmp427 + 2.1520288156647434*tmp428 + 2.1520288156647434*tmp432;
      const real_t tmp1031 = 0.51764549515564062*tmp423 + 0.51764549515564062*tmp426 + 0.51764549515564062*tmp431;
      const real_t tmp1032 = 2.1520288156647434*tmp440 + 2.1520288156647434*tmp441 + 2.1520288156647434*tmp445;
      const real_t tmp1033 = 0.51764549515564062*tmp436 + 0.51764549515564062*tmp439 + 0.51764549515564062*tmp444;
      const real_t tmp1034 = tmp391*(tmp1028 + tmp1029) + tmp420*(tmp1030 + tmp1031) + tmp433*(tmp1032 + tmp1033);
      const real_t tmp1035 = 0.035965040373342916*tmp469 + 0.035965040373342916*tmp471 + 0.035965040373342916*tmp478;
      const real_t tmp1036 = 0.48616796533571183*tmp462 + 0.48616796533571183*tmp467 + 0.48616796533571183*tmp476;
      const real_t tmp1037 = 0.035965040373342916*tmp486 + 0.035965040373342916*tmp487 + 0.035965040373342916*tmp491;
      const real_t tmp1038 = 0.48616796533571183*tmp482 + 0.48616796533571183*tmp485 + 0.48616796533571183*tmp490;
      const real_t tmp1039 = 0.035965040373342916*tmp499 + 0.035965040373342916*tmp500 + 0.035965040373342916*tmp504;
      const real_t tmp1040 = 0.48616796533571183*tmp495 + 0.48616796533571183*tmp498 + 0.48616796533571183*tmp503;
      const real_t tmp1041 = tmp449*(tmp1035 + tmp1036) + tmp479*(tmp1037 + tmp1038) + tmp492*(tmp1039 + tmp1040);
      const real_t tmp1042 = 1.7318139619254227*tmp527 + 1.7318139619254227*tmp529 + 1.7318139619254227*tmp536;
      const real_t tmp1043 = 1.8030635043651069*tmp520 + 1.8030635043651069*tmp525 + 1.8030635043651069*tmp534;
      const real_t tmp1044 = 1.7318139619254227*tmp544 + 1.7318139619254227*tmp545 + 1.7318139619254227*tmp549;
      const real_t tmp1045 = 1.8030635043651069*tmp540 + 1.8030635043651069*tmp543 + 1.8030635043651069*tmp548;
      const real_t tmp1046 = 1.7318139619254227*tmp557 + 1.7318139619254227*tmp558 + 1.7318139619254227*tmp562;
      const real_t tmp1047 = 1.8030635043651069*tmp553 + 1.8030635043651069*tmp556 + 1.8030635043651069*tmp561;
      const real_t tmp1048 = tmp508*(tmp1042 + tmp1043) + tmp537*(tmp1044 + tmp1045) + tmp550*(tmp1046 + tmp1047);
      const real_t tmp1049 = 0.21336495814298084*tmp586 + 0.21336495814298084*tmp588 + 0.21336495814298084*tmp595;
      const real_t tmp1050 = 1.6770652555180527*tmp579 + 1.6770652555180527*tmp584 + 1.6770652555180527*tmp593;
      const real_t tmp1051 = 0.21336495814298084*tmp603 + 0.21336495814298084*tmp604 + 0.21336495814298084*tmp608;
      const real_t tmp1052 = 1.6770652555180527*tmp599 + 1.6770652555180527*tmp602 + 1.6770652555180527*tmp607;
      const real_t tmp1053 = 0.21336495814298084*tmp616 + 0.21336495814298084*tmp617 + 0.21336495814298084*tmp621;
      const real_t tmp1054 = 1.6770652555180527*tmp612 + 1.6770652555180527*tmp615 + 1.6770652555180527*tmp620;
      const real_t tmp1055 = tmp566*(tmp1049 + tmp1050) + tmp596*(tmp1051 + tmp1052) + tmp609*(tmp1053 + tmp1054);
      const real_t tmp1056 = 2.9649155283744921*tmp645 + 2.9649155283744921*tmp647 + 2.9649155283744921*tmp654;
      const real_t tmp1057 = 0.2688931795735332*tmp638 + 0.2688931795735332*tmp643 + 0.2688931795735332*tmp652;
      const real_t tmp1058 = 2.9649155283744921*tmp662 + 2.9649155283744921*tmp663 + 2.9649155283744921*tmp667;
      const real_t tmp1059 = 0.2688931795735332*tmp658 + 0.2688931795735332*tmp661 + 0.2688931795735332*tmp666;
      const real_t tmp1060 = 2.9649155283744921*tmp675 + 2.9649155283744921*tmp676 + 2.9649155283744921*tmp680;
      const real_t tmp1061 = 0.2688931795735332*tmp671 + 0.2688931795735332*tmp674 + 0.2688931795735332*tmp679;
      const real_t tmp1062 = tmp625*(tmp1056 + tmp1057) + tmp655*(tmp1058 + tmp1059) + tmp668*(tmp1060 + tmp1061);
      const real_t tmp1063 = tmp1006*tmp698 + tmp1013*tmp703 + tmp1020*tmp708 + tmp1027*tmp713 + tmp1034*tmp718 + tmp1041*tmp723 + tmp1048*tmp728 + tmp1055*tmp733 + tmp1062*tmp738 + tmp688*tmp992 + tmp693*tmp999;
      const real_t tmp1064 = tmp0*(-2.2903585922226259*tmp27 - 2.2903585922226259*tmp34 - 2.2903585922226259*tmp47 - tmp830 - tmp908) + tmp54*(-2.2903585922226259*tmp56 - 2.2903585922226259*tmp59 - 2.2903585922226259*tmp64 - tmp832 - tmp910) + tmp67*(-2.2903585922226259*tmp69 - 2.2903585922226259*tmp72 - 2.2903585922226259*tmp77 - tmp834 - tmp912);
      const real_t tmp1065 = tmp126*(0.11955133084429059*tmp10*tmp104*tmp127*tmp19 + 0.11955133084429059*tmp104*tmp130*tmp19*tmp32 + 0.11955133084429059*tmp104*tmp135*tmp19*tmp45 - tmp839 - tmp917) + tmp139*(0.11955133084429059*tmp10*tmp104*tmp140*tmp19 + 0.11955133084429059*tmp104*tmp143*tmp19*tmp32 + 0.11955133084429059*tmp104*tmp148*tmp19*tmp45 - tmp841 - tmp919) + tmp96*(0.11955133084429059*tmp10*tmp104*tmp19*tmp99 + 0.11955133084429059*tmp104*tmp110*tmp19*tmp32 + 0.11955133084429059*tmp104*tmp119*tmp19*tmp45 - tmp837 - tmp915);
      const real_t tmp1066 = tmp155*(3.030776123262295*tmp10*tmp158*tmp163*tmp19 + 3.030776123262295*tmp163*tmp169*tmp19*tmp32 + 3.030776123262295*tmp163*tmp178*tmp19*tmp45 - tmp844 - tmp922) + tmp185*(3.030776123262295*tmp10*tmp163*tmp186*tmp19 + 3.030776123262295*tmp163*tmp189*tmp19*tmp32 + 3.030776123262295*tmp163*tmp19*tmp194*tmp45 - tmp846 - tmp924) + tmp198*(3.030776123262295*tmp10*tmp163*tmp19*tmp199 + 3.030776123262295*tmp163*tmp19*tmp202*tmp32 + 3.030776123262295*tmp163*tmp19*tmp207*tmp45 - tmp848 - tmp926);
      const real_t tmp1067 = tmp214*(0.021561698496338266*tmp10*tmp19*tmp217*tmp222 + 0.021561698496338266*tmp19*tmp222*tmp228*tmp32 + 0.021561698496338266*tmp19*tmp222*tmp237*tmp45 - tmp851 - tmp929) + tmp244*(0.021561698496338266*tmp10*tmp19*tmp222*tmp245 + 0.021561698496338266*tmp19*tmp222*tmp248*tmp32 + 0.021561698496338266*tmp19*tmp222*tmp253*tmp45 - tmp853 - tmp931) + tmp257*(0.021561698496338266*tmp10*tmp19*tmp222*tmp258 + 0.021561698496338266*tmp19*tmp222*tmp261*tmp32 + 0.021561698496338266*tmp19*tmp222*tmp266*tmp45 - tmp855 - tmp933);
      const real_t tmp1068 = tmp273*(-0.97680333550942233*tmp284 - 0.97680333550942233*tmp289 - 0.97680333550942233*tmp298 - tmp858 - tmp936) + tmp303*(-0.97680333550942233*tmp305 - 0.97680333550942233*tmp308 - 0.97680333550942233*tmp313 - tmp860 - tmp938) + tmp316*(-0.97680333550942233*tmp318 - 0.97680333550942233*tmp321 - 0.97680333550942233*tmp326 - tmp862 - tmp940);
      const real_t tmp1069 = tmp332*(0.80668592322658683*tmp10*tmp19*tmp335*tmp340 + 0.80668592322658683*tmp19*tmp32*tmp340*tmp346 + 0.80668592322658683*tmp19*tmp340*tmp355*tmp45 - tmp865 - tmp943) + tmp362*(0.80668592322658683*tmp10*tmp19*tmp340*tmp363 + 0.80668592322658683*tmp19*tmp32*tmp340*tmp366 + 0.80668592322658683*tmp19*tmp340*tmp371*tmp45 - tmp867 - tmp945) + tmp375*(0.80668592322658683*tmp10*tmp19*tmp340*tmp376 + 0.80668592322658683*tmp19*tmp32*tmp340*tmp379 + 0.80668592322658683*tmp19*tmp340*tmp384*tmp45 - tmp869 - tmp947);
      const real_t tmp1070 = tmp391*(-1.3111976295201027*tmp401 - 1.3111976295201027*tmp406 - 1.3111976295201027*tmp415 - tmp872 - tmp950) + tmp420*(-1.3111976295201027*tmp422 - 1.3111976295201027*tmp425 - 1.3111976295201027*tmp430 - tmp874 - tmp952) + tmp433*(-1.3111976295201027*tmp435 - 1.3111976295201027*tmp438 - 1.3111976295201027*tmp443 - tmp876 - tmp954);
      const real_t tmp1071 = tmp449*(1.0259150868534226*tmp10*tmp19*tmp452*tmp457 + 1.0259150868534226*tmp19*tmp32*tmp457*tmp463 + 1.0259150868534226*tmp19*tmp45*tmp457*tmp472 - tmp879 - tmp957) + tmp479*(1.0259150868534226*tmp10*tmp19*tmp457*tmp480 + 1.0259150868534226*tmp19*tmp32*tmp457*tmp483 + 1.0259150868534226*tmp19*tmp45*tmp457*tmp488 - tmp881 - tmp959) + tmp492*(1.0259150868534226*tmp10*tmp19*tmp457*tmp493 + 1.0259150868534226*tmp19*tmp32*tmp457*tmp496 + 1.0259150868534226*tmp19*tmp45*tmp457*tmp501 - tmp883 - tmp961);
      const real_t tmp1072 = tmp508*(-0.010530396686001087*tmp518 - 0.010530396686001087*tmp523 - 0.010530396686001087*tmp532 - tmp886 - tmp964) + tmp537*(-0.010530396686001087*tmp539 - 0.010530396686001087*tmp542 - 0.010530396686001087*tmp547 - tmp888 - tmp966) + tmp550*(-0.010530396686001087*tmp552 - 0.010530396686001087*tmp555 - 0.010530396686001087*tmp560 - tmp890 - tmp968);
      const real_t tmp1073 = tmp566*(1.727318301866275*tmp10*tmp19*tmp569*tmp574 + 1.727318301866275*tmp19*tmp32*tmp574*tmp580 + 1.727318301866275*tmp19*tmp45*tmp574*tmp589 - tmp893 - tmp971) + tmp596*(1.727318301866275*tmp10*tmp19*tmp574*tmp597 + 1.727318301866275*tmp19*tmp32*tmp574*tmp600 + 1.727318301866275*tmp19*tmp45*tmp574*tmp605 - tmp895 - tmp973) + tmp609*(1.727318301866275*tmp10*tmp19*tmp574*tmp610 + 1.727318301866275*tmp19*tmp32*tmp574*tmp613 + 1.727318301866275*tmp19*tmp45*tmp574*tmp618 - tmp897 - tmp975);
      const real_t tmp1074 = tmp625*(0.48471985386318561*tmp10*tmp19*tmp628*tmp633 + 0.48471985386318561*tmp19*tmp32*tmp633*tmp639 + 0.48471985386318561*tmp19*tmp45*tmp633*tmp648 - tmp900 - tmp978) + tmp655*(0.48471985386318561*tmp10*tmp19*tmp633*tmp656 + 0.48471985386318561*tmp19*tmp32*tmp633*tmp659 + 0.48471985386318561*tmp19*tmp45*tmp633*tmp664 - tmp902 - tmp980) + tmp668*(0.48471985386318561*tmp10*tmp19*tmp633*tmp669 + 0.48471985386318561*tmp19*tmp32*tmp633*tmp672 + 0.48471985386318561*tmp19*tmp45*tmp633*tmp677 - tmp904 - tmp982);
      const real_t tmp1075 = tmp1064*tmp688 + tmp1065*tmp693 + tmp1066*tmp698 + tmp1067*tmp703 + tmp1068*tmp708 + tmp1069*tmp713 + tmp1070*tmp718 + tmp1071*tmp723 + tmp1072*tmp728 + tmp1073*tmp733 + tmp1074*tmp738;
      const real_t tmp1076 = tmp0*(0.020786379341558803*tmp19*tmp24*tmp28*tmp3 + 0.020786379341558803*tmp19*tmp24*tmp31*tmp35 + 0.020786379341558803*tmp19*tmp24*tmp44*tmp48 - tmp831 - tmp986) + tmp54*(0.020786379341558803*tmp19*tmp24*tmp28*tmp55 + 0.020786379341558803*tmp19*tmp24*tmp35*tmp58 + 0.020786379341558803*tmp19*tmp24*tmp48*tmp63 - tmp833 - tmp988) + tmp67*(0.020786379341558803*tmp19*tmp24*tmp28*tmp68 + 0.020786379341558803*tmp19*tmp24*tmp35*tmp71 + 0.020786379341558803*tmp19*tmp24*tmp48*tmp76 - tmp835 - tmp990);
      const real_t tmp1077 = tmp126*(0.066329140985678992*tmp104*tmp127*tmp19*tmp28 + 0.066329140985678992*tmp104*tmp130*tmp19*tmp35 + 0.066329140985678992*tmp104*tmp135*tmp19*tmp48 - tmp840 - tmp995) + tmp139*(0.066329140985678992*tmp104*tmp140*tmp19*tmp28 + 0.066329140985678992*tmp104*tmp143*tmp19*tmp35 + 0.066329140985678992*tmp104*tmp148*tmp19*tmp48 - tmp842 - tmp997) + tmp96*(0.066329140985678992*tmp104*tmp110*tmp19*tmp35 + 0.066329140985678992*tmp104*tmp119*tmp19*tmp48 + 0.066329140985678992*tmp104*tmp19*tmp28*tmp99 - tmp838 - tmp993);
      const real_t tmp1078 = tmp155*(-tmp1000 + 2.3862426959925824*tmp158*tmp163*tmp19*tmp28 + 2.3862426959925824*tmp163*tmp169*tmp19*tmp35 + 2.3862426959925824*tmp163*tmp178*tmp19*tmp48 - tmp845) + tmp185*(-tmp1002 + 2.3862426959925824*tmp163*tmp186*tmp19*tmp28 + 2.3862426959925824*tmp163*tmp189*tmp19*tmp35 + 2.3862426959925824*tmp163*tmp19*tmp194*tmp48 - tmp847) + tmp198*(-tmp1004 + 2.3862426959925824*tmp163*tmp19*tmp199*tmp28 + 2.3862426959925824*tmp163*tmp19*tmp202*tmp35 + 2.3862426959925824*tmp163*tmp19*tmp207*tmp48 - tmp849);
      const real_t tmp1079 = tmp214*(-tmp1007 - 0.023755899620671705*tmp227 - 0.023755899620671705*tmp232 - 0.023755899620671705*tmp241 - tmp852) + tmp244*(-tmp1009 - 0.023755899620671705*tmp247 - 0.023755899620671705*tmp250 - 0.023755899620671705*tmp255 - tmp854) + tmp257*(-tmp1011 - 0.023755899620671705*tmp260 - 0.023755899620671705*tmp263 - 0.023755899620671705*tmp268 - tmp856);
      const real_t tmp1080 = tmp273*(-tmp1014 + 0.023113155683794462*tmp19*tmp276*tmp28*tmp281 + 0.023113155683794462*tmp19*tmp281*tmp287*tmp35 + 0.023113155683794462*tmp19*tmp281*tmp296*tmp48 - tmp859) + tmp303*(-tmp1016 + 0.023113155683794462*tmp19*tmp28*tmp281*tmp304 + 0.023113155683794462*tmp19*tmp281*tmp307*tmp35 + 0.023113155683794462*tmp19*tmp281*tmp312*tmp48 - tmp861) + tmp316*(-tmp1018 + 0.023113155683794462*tmp19*tmp28*tmp281*tmp317 + 0.023113155683794462*tmp19*tmp281*tmp320*tmp35 + 0.023113155683794462*tmp19*tmp281*tmp325*tmp48 - tmp863);
      const real_t tmp1081 = tmp332*(-tmp1021 + 0.096099217150166227*tmp19*tmp28*tmp335*tmp340 + 0.096099217150166227*tmp19*tmp340*tmp346*tmp35 + 0.096099217150166227*tmp19*tmp340*tmp355*tmp48 - tmp866) + tmp362*(-tmp1023 + 0.096099217150166227*tmp19*tmp28*tmp340*tmp363 + 0.096099217150166227*tmp19*tmp340*tmp35*tmp366 + 0.096099217150166227*tmp19*tmp340*tmp371*tmp48 - tmp868) + tmp375*(-tmp1025 + 0.096099217150166227*tmp19*tmp28*tmp340*tmp376 + 0.096099217150166227*tmp19*tmp340*tmp35*tmp379 + 0.096099217150166227*tmp19*tmp340*tmp384*tmp48 - tmp870);
      const real_t tmp1082 = tmp391*(-tmp1028 - 2.1424647858349868*tmp403 - 2.1424647858349868*tmp408 - 2.1424647858349868*tmp417 - tmp873) + tmp420*(-tmp1030 - 2.1424647858349868*tmp423 - 2.1424647858349868*tmp426 - 2.1424647858349868*tmp431 - tmp875) + tmp433*(-tmp1032 - 2.1424647858349868*tmp436 - 2.1424647858349868*tmp439 - 2.1424647858349868*tmp444 - tmp877);
      const real_t tmp1083 = tmp449*(-tmp1035 + 2.215926000198841*tmp19*tmp28*tmp452*tmp457 + 2.215926000198841*tmp19*tmp35*tmp457*tmp463 + 2.215926000198841*tmp19*tmp457*tmp472*tmp48 - tmp880) + tmp479*(-tmp1037 + 2.215926000198841*tmp19*tmp28*tmp457*tmp480 + 2.215926000198841*tmp19*tmp35*tmp457*tmp483 + 2.215926000198841*tmp19*tmp457*tmp48*tmp488 - tmp882) + tmp492*(-tmp1039 + 2.215926000198841*tmp19*tmp28*tmp457*tmp493 + 2.215926000198841*tmp19*tmp35*tmp457*tmp496 + 2.215926000198841*tmp19*tmp457*tmp48*tmp501 - tmp884);
      const real_t tmp1084 = tmp508*(-tmp1042 - 1.504517893413688*tmp520 - 1.504517893413688*tmp525 - 1.504517893413688*tmp534 - tmp887) + tmp537*(-tmp1044 - 1.504517893413688*tmp540 - 1.504517893413688*tmp543 - 1.504517893413688*tmp548 - tmp889) + tmp550*(-tmp1046 - 1.504517893413688*tmp553 - 1.504517893413688*tmp556 - 1.504517893413688*tmp561 - tmp891);
      const real_t tmp1085 = tmp566*(-tmp1049 + 1.7050790859596399*tmp19*tmp28*tmp569*tmp574 + 1.7050790859596399*tmp19*tmp35*tmp574*tmp580 + 1.7050790859596399*tmp19*tmp48*tmp574*tmp589 - tmp894) + tmp596*(-tmp1051 + 1.7050790859596399*tmp19*tmp28*tmp574*tmp597 + 1.7050790859596399*tmp19*tmp35*tmp574*tmp600 + 1.7050790859596399*tmp19*tmp48*tmp574*tmp605 - tmp896) + tmp609*(-tmp1053 + 1.7050790859596399*tmp19*tmp28*tmp574*tmp610 + 1.7050790859596399*tmp19*tmp35*tmp574*tmp613 + 1.7050790859596399*tmp19*tmp48*tmp574*tmp618 - tmp898);
      const real_t tmp1086 = tmp625*(-tmp1056 - 2.339459955416912*tmp638 - 2.339459955416912*tmp643 - 2.339459955416912*tmp652 - tmp901) + tmp655*(-tmp1058 - 2.339459955416912*tmp658 - 2.339459955416912*tmp661 - 2.339459955416912*tmp666 - tmp903) + tmp668*(-tmp1060 - 2.339459955416912*tmp671 - 2.339459955416912*tmp674 - 2.339459955416912*tmp679 - tmp905);
      const real_t tmp1087 = tmp1076*tmp688 + tmp1077*tmp693 + tmp1078*tmp698 + tmp1079*tmp703 + tmp1080*tmp708 + tmp1081*tmp713 + tmp1082*tmp718 + tmp1083*tmp723 + tmp1084*tmp728 + tmp1085*tmp733 + tmp1086*tmp738;
      const real_t tmp1088 = tmp0*(0.058384491239200198*tmp19*tmp24*tmp3*tmp38 + 0.058384491239200198*tmp19*tmp24*tmp31*tmp41 + 0.058384491239200198*tmp19*tmp24*tmp44*tmp51 - tmp909 - tmp987) + tmp54*(0.058384491239200198*tmp19*tmp24*tmp38*tmp55 + 0.058384491239200198*tmp19*tmp24*tmp41*tmp58 + 0.058384491239200198*tmp19*tmp24*tmp51*tmp63 - tmp911 - tmp989) + tmp67*(0.058384491239200198*tmp19*tmp24*tmp38*tmp68 + 0.058384491239200198*tmp19*tmp24*tmp41*tmp71 + 0.058384491239200198*tmp19*tmp24*tmp51*tmp76 - tmp913 - tmp991);
      const real_t tmp1089 = tmp126*(-2.6180852134415042*tmp133 - 2.6180852134415042*tmp134 - 2.6180852134415042*tmp138 - tmp918 - tmp996) + tmp139*(-2.6180852134415042*tmp146 - 2.6180852134415042*tmp147 - 2.6180852134415042*tmp151 - tmp920 - tmp998) + tmp96*(-2.6180852134415042*tmp116 - 2.6180852134415042*tmp118 - 2.6180852134415042*tmp125 - tmp916 - tmp994);
      const real_t tmp1090 = tmp155*(-tmp1001 + 2.923056903871144*tmp158*tmp163*tmp19*tmp38 + 2.923056903871144*tmp163*tmp169*tmp19*tmp41 + 2.923056903871144*tmp163*tmp178*tmp19*tmp51 - tmp923) + tmp185*(-tmp1003 + 2.923056903871144*tmp163*tmp186*tmp19*tmp38 + 2.923056903871144*tmp163*tmp189*tmp19*tmp41 + 2.923056903871144*tmp163*tmp19*tmp194*tmp51 - tmp925) + tmp198*(-tmp1005 + 2.923056903871144*tmp163*tmp19*tmp199*tmp38 + 2.923056903871144*tmp163*tmp19*tmp202*tmp41 + 2.923056903871144*tmp163*tmp19*tmp207*tmp51 - tmp927);
      const real_t tmp1091 = tmp214*(-tmp1008 + 1.1748979585239958*tmp19*tmp217*tmp222*tmp38 + 1.1748979585239958*tmp19*tmp222*tmp228*tmp41 + 1.1748979585239958*tmp19*tmp222*tmp237*tmp51 - tmp930) + tmp244*(-tmp1010 + 1.1748979585239958*tmp19*tmp222*tmp245*tmp38 + 1.1748979585239958*tmp19*tmp222*tmp248*tmp41 + 1.1748979585239958*tmp19*tmp222*tmp253*tmp51 - tmp932) + tmp257*(-tmp1012 + 1.1748979585239958*tmp19*tmp222*tmp258*tmp38 + 1.1748979585239958*tmp19*tmp222*tmp261*tmp41 + 1.1748979585239958*tmp19*tmp222*tmp266*tmp51 - tmp934);
      const real_t tmp1092 = tmp273*(-tmp1015 - 1.292351334863308*tmp293 - 1.292351334863308*tmp295 - 1.292351334863308*tmp302 - tmp937) + tmp303*(-tmp1017 - 1.292351334863308*tmp310 - 1.292351334863308*tmp311 - 1.292351334863308*tmp315 - tmp939) + tmp316*(-tmp1019 - 1.292351334863308*tmp323 - 1.292351334863308*tmp324 - 1.292351334863308*tmp328 - tmp941);
      const real_t tmp1093 = tmp332*(-tmp1022 + 0.35278616717586297*tmp19*tmp335*tmp340*tmp38 + 0.35278616717586297*tmp19*tmp340*tmp346*tmp41 + 0.35278616717586297*tmp19*tmp340*tmp355*tmp51 - tmp944) + tmp362*(-tmp1024 + 0.35278616717586297*tmp19*tmp340*tmp363*tmp38 + 0.35278616717586297*tmp19*tmp340*tmp366*tmp41 + 0.35278616717586297*tmp19*tmp340*tmp371*tmp51 - tmp946) + tmp375*(-tmp1026 + 0.35278616717586297*tmp19*tmp340*tmp376*tmp38 + 0.35278616717586297*tmp19*tmp340*tmp379*tmp41 + 0.35278616717586297*tmp19*tmp340*tmp384*tmp51 - tmp948);
      const real_t tmp1094 = tmp391*(-tmp1029 - 0.50808146532588383*tmp410 - 0.50808146532588383*tmp412 - 0.50808146532588383*tmp419 - tmp951) + tmp420*(-tmp1031 - 0.50808146532588383*tmp427 - 0.50808146532588383*tmp428 - 0.50808146532588383*tmp432 - tmp953) + tmp433*(-tmp1033 - 0.50808146532588383*tmp440 - 0.50808146532588383*tmp441 - 0.50808146532588383*tmp445 - tmp955);
      const real_t tmp1095 = tmp449*(-tmp1036 + 1.7657230752364721*tmp19*tmp38*tmp452*tmp457 + 1.7657230752364721*tmp19*tmp41*tmp457*tmp463 + 1.7657230752364721*tmp19*tmp457*tmp472*tmp51 - tmp958) + tmp479*(-tmp1038 + 1.7657230752364721*tmp19*tmp38*tmp457*tmp480 + 1.7657230752364721*tmp19*tmp41*tmp457*tmp483 + 1.7657230752364721*tmp19*tmp457*tmp488*tmp51 - tmp960) + tmp492*(-tmp1040 + 1.7657230752364721*tmp19*tmp38*tmp457*tmp493 + 1.7657230752364721*tmp19*tmp41*tmp457*tmp496 + 1.7657230752364721*tmp19*tmp457*tmp501*tmp51 - tmp962);
      const real_t tmp1096 = tmp508*(-tmp1043 - 1.5757674358533722*tmp527 - 1.5757674358533722*tmp529 - 1.5757674358533722*tmp536 - tmp965) + tmp537*(-tmp1045 - 1.5757674358533722*tmp544 - 1.5757674358533722*tmp545 - 1.5757674358533722*tmp549 - tmp967) + tmp550*(-tmp1047 - 1.5757674358533722*tmp557 - 1.5757674358533722*tmp558 - 1.5757674358533722*tmp562 - tmp969);
      const real_t tmp1097 = tmp566*(-tmp1050 + 0.24137878858456796*tmp19*tmp38*tmp569*tmp574 + 0.24137878858456796*tmp19*tmp41*tmp574*tmp580 + 0.24137878858456796*tmp19*tmp51*tmp574*tmp589 - tmp972) + tmp596*(-tmp1052 + 0.24137878858456796*tmp19*tmp38*tmp574*tmp597 + 0.24137878858456796*tmp19*tmp41*tmp574*tmp600 + 0.24137878858456796*tmp19*tmp51*tmp574*tmp605 - tmp974) + tmp609*(-tmp1054 + 0.24137878858456796*tmp19*tmp38*tmp574*tmp610 + 0.24137878858456796*tmp19*tmp41*tmp574*tmp613 + 0.24137878858456796*tmp19*tmp51*tmp574*tmp618 - tmp976);
      const real_t tmp1098 = tmp625*(-tmp1057 + 0.35656239338404694*tmp19*tmp38*tmp628*tmp633 + 0.35656239338404694*tmp19*tmp41*tmp633*tmp639 + 0.35656239338404694*tmp19*tmp51*tmp633*tmp648 - tmp979) + tmp655*(-tmp1059 + 0.35656239338404694*tmp19*tmp38*tmp633*tmp656 + 0.35656239338404694*tmp19*tmp41*tmp633*tmp659 + 0.35656239338404694*tmp19*tmp51*tmp633*tmp664 - tmp981) + tmp668*(-tmp1061 + 0.35656239338404694*tmp19*tmp38*tmp633*tmp669 + 0.35656239338404694*tmp19*tmp41*tmp633*tmp672 + 0.35656239338404694*tmp19*tmp51*tmp633*tmp677 - tmp983);
      const real_t tmp1099 = tmp1088*tmp688 + tmp1089*tmp693 + tmp1090*tmp698 + tmp1091*tmp703 + tmp1092*tmp708 + tmp1093*tmp713 + tmp1094*tmp718 + tmp1095*tmp723 + tmp1096*tmp728 + tmp1097*tmp733 + tmp1098*tmp738;
      const real_t tmp1100 = tmp687*tmp95;
      const real_t tmp1101 = tmp154*tmp692;
      const real_t tmp1102 = tmp213*tmp697;
      const real_t tmp1103 = tmp272*tmp702;
      const real_t tmp1104 = tmp331*tmp707;
      const real_t tmp1105 = tmp390*tmp712;
      const real_t tmp1106 = tmp448*tmp717;
      const real_t tmp1107 = tmp507*tmp722;
      const real_t tmp1108 = tmp565*tmp727;
      const real_t tmp1109 = tmp624*tmp732;
      const real_t tmp1110 = tmp683*tmp737;
      const real_t tmp1111 = tmp1100*tmp743 + tmp1101*tmp747 + tmp1102*tmp751 + tmp1103*tmp755 + tmp1104*tmp759 + tmp1105*tmp763 + tmp1106*tmp767 + tmp1107*tmp771 + tmp1108*tmp775 + tmp1109*tmp779 + tmp1110*tmp783;
      const real_t tmp1112 = tmp1100*tmp788 + tmp1101*tmp792 + tmp1102*tmp796 + tmp1103*tmp800 + tmp1104*tmp804 + tmp1105*tmp808 + tmp1106*tmp812 + tmp1107*tmp816 + tmp1108*tmp820 + tmp1109*tmp824 + tmp1110*tmp828;
      const real_t tmp1113 = tmp1100*tmp836 + tmp1101*tmp843 + tmp1102*tmp850 + tmp1103*tmp857 + tmp1104*tmp864 + tmp1105*tmp871 + tmp1106*tmp878 + tmp1107*tmp885 + tmp1108*tmp892 + tmp1109*tmp899 + tmp1110*tmp906;
      const real_t tmp1114 = tmp1100*tmp914 + tmp1101*tmp921 + tmp1102*tmp928 + tmp1103*tmp935 + tmp1104*tmp942 + tmp1105*tmp949 + tmp1106*tmp956 + tmp1107*tmp963 + tmp1108*tmp970 + tmp1109*tmp977 + tmp1110*tmp984;
      const real_t tmp1115 = tmp1006*tmp1102 + tmp1013*tmp1103 + tmp1020*tmp1104 + tmp1027*tmp1105 + tmp1034*tmp1106 + tmp1041*tmp1107 + tmp1048*tmp1108 + tmp1055*tmp1109 + tmp1062*tmp1110 + tmp1100*tmp992 + tmp1101*tmp999;
      const real_t tmp1116 = tmp1064*tmp1100 + tmp1065*tmp1101 + tmp1066*tmp1102 + tmp1067*tmp1103 + tmp1068*tmp1104 + tmp1069*tmp1105 + tmp1070*tmp1106 + tmp1071*tmp1107 + tmp1072*tmp1108 + tmp1073*tmp1109 + tmp1074*tmp1110;
      const real_t tmp1117 = tmp1076*tmp1100 + tmp1077*tmp1101 + tmp1078*tmp1102 + tmp1079*tmp1103 + tmp1080*tmp1104 + tmp1081*tmp1105 + tmp1082*tmp1106 + tmp1083*tmp1107 + tmp1084*tmp1108 + tmp1085*tmp1109 + tmp1086*tmp1110;
      const real_t tmp1118 = tmp1088*tmp1100 + tmp1089*tmp1101 + tmp1090*tmp1102 + tmp1091*tmp1103 + tmp1092*tmp1104 + tmp1093*tmp1105 + tmp1094*tmp1106 + tmp1095*tmp1107 + tmp1096*tmp1108 + tmp1097*tmp1109 + tmp1098*tmp1110;
      const real_t tmp1119 = tmp743*tmp95;
      const real_t tmp1120 = tmp154*tmp747;
      const real_t tmp1121 = tmp213*tmp751;
      const real_t tmp1122 = tmp272*tmp755;
      const real_t tmp1123 = tmp331*tmp759;
      const real_t tmp1124 = tmp390*tmp763;
      const real_t tmp1125 = tmp448*tmp767;
      const real_t tmp1126 = tmp507*tmp771;
      const real_t tmp1127 = tmp565*tmp775;
      const real_t tmp1128 = tmp624*tmp779;
      const real_t tmp1129 = tmp683*tmp783;
      const real_t tmp1130 = tmp1119*tmp788 + tmp1120*tmp792 + tmp1121*tmp796 + tmp1122*tmp800 + tmp1123*tmp804 + tmp1124*tmp808 + tmp1125*tmp812 + tmp1126*tmp816 + tmp1127*tmp820 + tmp1128*tmp824 + tmp1129*tmp828;
      const real_t tmp1131 = tmp1119*tmp836 + tmp1120*tmp843 + tmp1121*tmp850 + tmp1122*tmp857 + tmp1123*tmp864 + tmp1124*tmp871 + tmp1125*tmp878 + tmp1126*tmp885 + tmp1127*tmp892 + tmp1128*tmp899 + tmp1129*tmp906;
      const real_t tmp1132 = tmp1119*tmp914 + tmp1120*tmp921 + tmp1121*tmp928 + tmp1122*tmp935 + tmp1123*tmp942 + tmp1124*tmp949 + tmp1125*tmp956 + tmp1126*tmp963 + tmp1127*tmp970 + tmp1128*tmp977 + tmp1129*tmp984;
      const real_t tmp1133 = tmp1006*tmp1121 + tmp1013*tmp1122 + tmp1020*tmp1123 + tmp1027*tmp1124 + tmp1034*tmp1125 + tmp1041*tmp1126 + tmp1048*tmp1127 + tmp1055*tmp1128 + tmp1062*tmp1129 + tmp1119*tmp992 + tmp1120*tmp999;
      const real_t tmp1134 = tmp1064*tmp1119 + tmp1065*tmp1120 + tmp1066*tmp1121 + tmp1067*tmp1122 + tmp1068*tmp1123 + tmp1069*tmp1124 + tmp1070*tmp1125 + tmp1071*tmp1126 + tmp1072*tmp1127 + tmp1073*tmp1128 + tmp1074*tmp1129;
      const real_t tmp1135 = tmp1076*tmp1119 + tmp1077*tmp1120 + tmp1078*tmp1121 + tmp1079*tmp1122 + tmp1080*tmp1123 + tmp1081*tmp1124 + tmp1082*tmp1125 + tmp1083*tmp1126 + tmp1084*tmp1127 + tmp1085*tmp1128 + tmp1086*tmp1129;
      const real_t tmp1136 = tmp1088*tmp1119 + tmp1089*tmp1120 + tmp1090*tmp1121 + tmp1091*tmp1122 + tmp1092*tmp1123 + tmp1093*tmp1124 + tmp1094*tmp1125 + tmp1095*tmp1126 + tmp1096*tmp1127 + tmp1097*tmp1128 + tmp1098*tmp1129;
      const real_t tmp1137 = tmp788*tmp95;
      const real_t tmp1138 = tmp154*tmp792;
      const real_t tmp1139 = tmp213*tmp796;
      const real_t tmp1140 = tmp272*tmp800;
      const real_t tmp1141 = tmp331*tmp804;
      const real_t tmp1142 = tmp390*tmp808;
      const real_t tmp1143 = tmp448*tmp812;
      const real_t tmp1144 = tmp507*tmp816;
      const real_t tmp1145 = tmp565*tmp820;
      const real_t tmp1146 = tmp624*tmp824;
      const real_t tmp1147 = tmp683*tmp828;
      const real_t tmp1148 = tmp1137*tmp836 + tmp1138*tmp843 + tmp1139*tmp850 + tmp1140*tmp857 + tmp1141*tmp864 + tmp1142*tmp871 + tmp1143*tmp878 + tmp1144*tmp885 + tmp1145*tmp892 + tmp1146*tmp899 + tmp1147*tmp906;
      const real_t tmp1149 = tmp1137*tmp914 + tmp1138*tmp921 + tmp1139*tmp928 + tmp1140*tmp935 + tmp1141*tmp942 + tmp1142*tmp949 + tmp1143*tmp956 + tmp1144*tmp963 + tmp1145*tmp970 + tmp1146*tmp977 + tmp1147*tmp984;
      const real_t tmp1150 = tmp1006*tmp1139 + tmp1013*tmp1140 + tmp1020*tmp1141 + tmp1027*tmp1142 + tmp1034*tmp1143 + tmp1041*tmp1144 + tmp1048*tmp1145 + tmp1055*tmp1146 + tmp1062*tmp1147 + tmp1137*tmp992 + tmp1138*tmp999;
      const real_t tmp1151 = tmp1064*tmp1137 + tmp1065*tmp1138 + tmp1066*tmp1139 + tmp1067*tmp1140 + tmp1068*tmp1141 + tmp1069*tmp1142 + tmp1070*tmp1143 + tmp1071*tmp1144 + tmp1072*tmp1145 + tmp1073*tmp1146 + tmp1074*tmp1147;
      const real_t tmp1152 = tmp1076*tmp1137 + tmp1077*tmp1138 + tmp1078*tmp1139 + tmp1079*tmp1140 + tmp1080*tmp1141 + tmp1081*tmp1142 + tmp1082*tmp1143 + tmp1083*tmp1144 + tmp1084*tmp1145 + tmp1085*tmp1146 + tmp1086*tmp1147;
      const real_t tmp1153 = tmp1088*tmp1137 + tmp1089*tmp1138 + tmp1090*tmp1139 + tmp1091*tmp1140 + tmp1092*tmp1141 + tmp1093*tmp1142 + tmp1094*tmp1143 + tmp1095*tmp1144 + tmp1096*tmp1145 + tmp1097*tmp1146 + tmp1098*tmp1147;
      const real_t tmp1154 = tmp836*tmp95;
      const real_t tmp1155 = tmp154*tmp843;
      const real_t tmp1156 = tmp213*tmp850;
      const real_t tmp1157 = tmp272*tmp857;
      const real_t tmp1158 = tmp331*tmp864;
      const real_t tmp1159 = tmp390*tmp871;
      const real_t tmp1160 = tmp448*tmp878;
      const real_t tmp1161 = tmp507*tmp885;
      const real_t tmp1162 = tmp565*tmp892;
      const real_t tmp1163 = tmp624*tmp899;
      const real_t tmp1164 = tmp683*tmp906;
      const real_t tmp1165 = tmp1154*tmp914 + tmp1155*tmp921 + tmp1156*tmp928 + tmp1157*tmp935 + tmp1158*tmp942 + tmp1159*tmp949 + tmp1160*tmp956 + tmp1161*tmp963 + tmp1162*tmp970 + tmp1163*tmp977 + tmp1164*tmp984;
      const real_t tmp1166 = tmp1006*tmp1156 + tmp1013*tmp1157 + tmp1020*tmp1158 + tmp1027*tmp1159 + tmp1034*tmp1160 + tmp1041*tmp1161 + tmp1048*tmp1162 + tmp1055*tmp1163 + tmp1062*tmp1164 + tmp1154*tmp992 + tmp1155*tmp999;
      const real_t tmp1167 = tmp1064*tmp1154 + tmp1065*tmp1155 + tmp1066*tmp1156 + tmp1067*tmp1157 + tmp1068*tmp1158 + tmp1069*tmp1159 + tmp1070*tmp1160 + tmp1071*tmp1161 + tmp1072*tmp1162 + tmp1073*tmp1163 + tmp1074*tmp1164;
      const real_t tmp1168 = tmp1076*tmp1154 + tmp1077*tmp1155 + tmp1078*tmp1156 + tmp1079*tmp1157 + tmp1080*tmp1158 + tmp1081*tmp1159 + tmp1082*tmp1160 + tmp1083*tmp1161 + tmp1084*tmp1162 + tmp1085*tmp1163 + tmp1086*tmp1164;
      const real_t tmp1169 = tmp1088*tmp1154 + tmp1089*tmp1155 + tmp1090*tmp1156 + tmp1091*tmp1157 + tmp1092*tmp1158 + tmp1093*tmp1159 + tmp1094*tmp1160 + tmp1095*tmp1161 + tmp1096*tmp1162 + tmp1097*tmp1163 + tmp1098*tmp1164;
      const real_t tmp1170 = tmp914*tmp95;
      const real_t tmp1171 = tmp154*tmp921;
      const real_t tmp1172 = tmp213*tmp928;
      const real_t tmp1173 = tmp272*tmp935;
      const real_t tmp1174 = tmp331*tmp942;
      const real_t tmp1175 = tmp390*tmp949;
      const real_t tmp1176 = tmp448*tmp956;
      const real_t tmp1177 = tmp507*tmp963;
      const real_t tmp1178 = tmp565*tmp970;
      const real_t tmp1179 = tmp624*tmp977;
      const real_t tmp1180 = tmp683*tmp984;
      const real_t tmp1181 = tmp1006*tmp1172 + tmp1013*tmp1173 + tmp1020*tmp1174 + tmp1027*tmp1175 + tmp1034*tmp1176 + tmp1041*tmp1177 + tmp1048*tmp1178 + tmp1055*tmp1179 + tmp1062*tmp1180 + tmp1170*tmp992 + tmp1171*tmp999;
      const real_t tmp1182 = tmp1064*tmp1170 + tmp1065*tmp1171 + tmp1066*tmp1172 + tmp1067*tmp1173 + tmp1068*tmp1174 + tmp1069*tmp1175 + tmp1070*tmp1176 + tmp1071*tmp1177 + tmp1072*tmp1178 + tmp1073*tmp1179 + tmp1074*tmp1180;
      const real_t tmp1183 = tmp1076*tmp1170 + tmp1077*tmp1171 + tmp1078*tmp1172 + tmp1079*tmp1173 + tmp1080*tmp1174 + tmp1081*tmp1175 + tmp1082*tmp1176 + tmp1083*tmp1177 + tmp1084*tmp1178 + tmp1085*tmp1179 + tmp1086*tmp1180;
      const real_t tmp1184 = tmp1088*tmp1170 + tmp1089*tmp1171 + tmp1090*tmp1172 + tmp1091*tmp1173 + tmp1092*tmp1174 + tmp1093*tmp1175 + tmp1094*tmp1176 + tmp1095*tmp1177 + tmp1096*tmp1178 + tmp1097*tmp1179 + tmp1098*tmp1180;
      const real_t tmp1185 = tmp95*tmp992;
      const real_t tmp1186 = tmp154*tmp999;
      const real_t tmp1187 = tmp1006*tmp213;
      const real_t tmp1188 = tmp1013*tmp272;
      const real_t tmp1189 = tmp1020*tmp331;
      const real_t tmp1190 = tmp1027*tmp390;
      const real_t tmp1191 = tmp1034*tmp448;
      const real_t tmp1192 = tmp1041*tmp507;
      const real_t tmp1193 = tmp1048*tmp565;
      const real_t tmp1194 = tmp1055*tmp624;
      const real_t tmp1195 = tmp1062*tmp683;
      const real_t tmp1196 = tmp1064*tmp1185 + tmp1065*tmp1186 + tmp1066*tmp1187 + tmp1067*tmp1188 + tmp1068*tmp1189 + tmp1069*tmp1190 + tmp1070*tmp1191 + tmp1071*tmp1192 + tmp1072*tmp1193 + tmp1073*tmp1194 + tmp1074*tmp1195;
      const real_t tmp1197 = tmp1076*tmp1185 + tmp1077*tmp1186 + tmp1078*tmp1187 + tmp1079*tmp1188 + tmp1080*tmp1189 + tmp1081*tmp1190 + tmp1082*tmp1191 + tmp1083*tmp1192 + tmp1084*tmp1193 + tmp1085*tmp1194 + tmp1086*tmp1195;
      const real_t tmp1198 = tmp1088*tmp1185 + tmp1089*tmp1186 + tmp1090*tmp1187 + tmp1091*tmp1188 + tmp1092*tmp1189 + tmp1093*tmp1190 + tmp1094*tmp1191 + tmp1095*tmp1192 + tmp1096*tmp1193 + tmp1097*tmp1194 + tmp1098*tmp1195;
      const real_t tmp1199 = tmp1064*tmp95;
      const real_t tmp1200 = tmp1065*tmp154;
      const real_t tmp1201 = tmp1066*tmp213;
      const real_t tmp1202 = tmp1067*tmp272;
      const real_t tmp1203 = tmp1068*tmp331;
      const real_t tmp1204 = tmp1069*tmp390;
      const real_t tmp1205 = tmp1070*tmp448;
      const real_t tmp1206 = tmp1071*tmp507;
      const real_t tmp1207 = tmp1072*tmp565;
      const real_t tmp1208 = tmp1073*tmp624;
      const real_t tmp1209 = tmp1074*tmp683;
      const real_t tmp1210 = tmp1076*tmp1199 + tmp1077*tmp1200 + tmp1078*tmp1201 + tmp1079*tmp1202 + tmp1080*tmp1203 + tmp1081*tmp1204 + tmp1082*tmp1205 + tmp1083*tmp1206 + tmp1084*tmp1207 + tmp1085*tmp1208 + tmp1086*tmp1209;
      const real_t tmp1211 = tmp1088*tmp1199 + tmp1089*tmp1200 + tmp1090*tmp1201 + tmp1091*tmp1202 + tmp1092*tmp1203 + tmp1093*tmp1204 + tmp1094*tmp1205 + tmp1095*tmp1206 + tmp1096*tmp1207 + tmp1097*tmp1208 + tmp1098*tmp1209;
      const real_t tmp1212 = tmp1076*tmp1088*tmp95 + tmp1077*tmp1089*tmp154 + tmp1078*tmp1090*tmp213 + tmp1079*tmp1091*tmp272 + tmp1080*tmp1092*tmp331 + tmp1081*tmp1093*tmp390 + tmp1082*tmp1094*tmp448 + tmp1083*tmp1095*tmp507 + tmp1084*tmp1096*tmp565 + tmp1085*tmp1097*tmp624 + tmp1086*tmp1098*tmp683;
      elMat(0,0) = (tmp152*tmp152)*tmp154 + (tmp211*tmp211)*tmp213 + (tmp270*tmp270)*tmp272 + (tmp329*tmp329)*tmp331 + (tmp388*tmp388)*tmp390 + (tmp446*tmp446)*tmp448 + (tmp505*tmp505)*tmp507 + (tmp563*tmp563)*tmp565 + (tmp622*tmp622)*tmp624 + (tmp681*tmp681)*tmp683 + (tmp80*tmp80)*tmp95;
      elMat(0,1) = tmp739;
      elMat(0,2) = tmp784;
      elMat(0,3) = tmp829;
      elMat(0,4) = tmp907;
      elMat(0,5) = tmp985;
      elMat(0,6) = tmp1063;
      elMat(0,7) = tmp1075;
      elMat(0,8) = tmp1087;
      elMat(0,9) = tmp1099;
      elMat(1,0) = tmp739;
      elMat(1,1) = 0.037219583297525005*tmp153*((tmp689 + tmp690 + tmp691)*(tmp689 + tmp690 + tmp691)) + 0.0045943902008678305*tmp212*((-tmp694 - tmp695 - tmp696)*(-tmp694 - tmp695 - tmp696)) + 0.014283301548104272*tmp271*((-tmp699 - tmp700 - tmp701)*(-tmp699 - tmp700 - tmp701)) + 0.013796193481113352*tmp330*((tmp704 + tmp705 + tmp706)*(tmp704 + tmp705 + tmp706)) + 4.8761828730592834e-5*tmp389*((-tmp709 - tmp710 - tmp711)*(-tmp709 - tmp710 - tmp711)) + 0.0029534107130029623*tmp447*((-tmp714 - tmp715 - tmp716)*(-tmp714 - tmp715 - tmp716)) + 0.0034950831555120051*tmp506*((-tmp719 - tmp720 - tmp721)*(-tmp719 - tmp720 - tmp721)) + 0.0074669907750075657*tmp564*((tmp724 + tmp725 + tmp726)*(tmp724 + tmp725 + tmp726)) + 0.0045790687541742052*tmp623*((tmp729 + tmp730 + tmp731)*(tmp729 + tmp730 + tmp731)) + 0.0049348228869215667*tmp682*((-tmp734 - tmp735 - tmp736)*(-tmp734 - tmp735 - tmp736)) + 0.0066283933590405826*tmp94*((-tmp684 - tmp685 - tmp686)*(-tmp684 - tmp685 - tmp686));
      elMat(1,2) = tmp1111;
      elMat(1,3) = tmp1112;
      elMat(1,4) = tmp1113;
      elMat(1,5) = tmp1114;
      elMat(1,6) = tmp1115;
      elMat(1,7) = tmp1116;
      elMat(1,8) = tmp1117;
      elMat(1,9) = tmp1118;
      elMat(2,0) = tmp784;
      elMat(2,1) = tmp1111;
      elMat(2,2) = 0.0041896184318688011*tmp153*((-tmp744 - tmp745 - tmp746)*(-tmp744 - tmp745 - tmp746)) + 0.00059357957291040944*tmp212*((-tmp748 - tmp749 - tmp750)*(-tmp748 - tmp749 - tmp750)) + 0.0018454274370523743*tmp271*((tmp752 + tmp753 + tmp754)*(tmp752 + tmp753 + tmp754)) + 0.0088280769572306687*tmp330*((-tmp756 - tmp757 - tmp758)*(-tmp756 - tmp757 - tmp758)) + 0.0015290432292318914*tmp389*((tmp760 + tmp761 + tmp762)*(tmp760 + tmp761 + tmp762)) + 0.016846816776252868*tmp447*((tmp764 + tmp765 + tmp766)*(tmp764 + tmp765 + tmp766)) + 0.012302708284563781*tmp506*((-tmp768 - tmp769 - tmp770)*(-tmp768 - tmp769 - tmp770)) + 0.0062007927684986511*tmp564*((tmp772 + tmp773 + tmp774)*(tmp772 + tmp773 + tmp774)) + 0.0061810561113638651*tmp623*((-tmp776 - tmp777 - tmp778)*(-tmp776 - tmp777 - tmp778)) + 0.035644922028420657*tmp682*((tmp780 + tmp781 + tmp782)*(tmp780 + tmp781 + tmp782)) + 0.0058379584026061167*tmp94*((-tmp740 - tmp741 - tmp742)*(-tmp740 - tmp741 - tmp742));
      elMat(2,3) = tmp1130;
      elMat(2,4) = tmp1131;
      elMat(2,5) = tmp1132;
      elMat(2,6) = tmp1133;
      elMat(2,7) = tmp1134;
      elMat(2,8) = tmp1135;
      elMat(2,9) = tmp1136;
      elMat(3,0) = tmp829;
      elMat(3,1) = tmp1112;
      elMat(3,2) = tmp1130;
      elMat(3,3) = 0.0048770035506619522*tmp153*((-tmp789 - tmp790 - tmp791)*(-tmp789 - tmp790 - tmp791)) + 0.0058513999949692348*tmp212*((-tmp793 - tmp794 - tmp795)*(-tmp793 - tmp794 - tmp795)) + 0.0013554088123775279*tmp271*((tmp797 + tmp798 + tmp799)*(tmp797 + tmp798 + tmp799)) + 0.0044547429951894962*tmp330*((tmp801 + tmp802 + tmp803)*(tmp801 + tmp802 + tmp803)) + 0.0078281425960120346*tmp389*((-tmp805 - tmp806 - tmp807)*(-tmp805 - tmp806 - tmp807)) + 0.0013060387755518797*tmp447*((tmp809 + tmp810 + tmp811)*(tmp809 + tmp810 + tmp811)) + 0.00067598897915320424*tmp506*((tmp813 + tmp814 + tmp815)*(tmp813 + tmp814 + tmp815)) + 0.0067259489183500616*tmp564*((-tmp817 - tmp818 - tmp819)*(-tmp817 - tmp818 - tmp819)) + 0.0065354897387926289*tmp623*((-tmp821 - tmp822 - tmp823)*(-tmp821 - tmp822 - tmp823)) + 0.0068165310458643833*tmp682*((-tmp825 - tmp826 - tmp827)*(-tmp825 - tmp826 - tmp827)) + 0.053573304593077624*tmp94*((tmp785 + tmp786 + tmp787)*(tmp785 + tmp786 + tmp787));
      elMat(3,4) = tmp1148;
      elMat(3,5) = tmp1149;
      elMat(3,6) = tmp1150;
      elMat(3,7) = tmp1151;
      elMat(3,8) = tmp1152;
      elMat(3,9) = tmp1153;
      elMat(4,0) = tmp907;
      elMat(4,1) = tmp1113;
      elMat(4,2) = tmp1131;
      elMat(4,3) = tmp1148;
      elMat(4,4) = tmp154*(tmp843*tmp843) + tmp213*(tmp850*tmp850) + tmp272*(tmp857*tmp857) + tmp331*(tmp864*tmp864) + tmp390*(tmp871*tmp871) + tmp448*(tmp878*tmp878) + tmp507*(tmp885*tmp885) + tmp565*(tmp892*tmp892) + tmp624*(tmp899*tmp899) + tmp683*(tmp906*tmp906) + (tmp836*tmp836)*tmp95;
      elMat(4,5) = tmp1165;
      elMat(4,6) = tmp1166;
      elMat(4,7) = tmp1167;
      elMat(4,8) = tmp1168;
      elMat(4,9) = tmp1169;
      elMat(5,0) = tmp985;
      elMat(5,1) = tmp1114;
      elMat(5,2) = tmp1132;
      elMat(5,3) = tmp1149;
      elMat(5,4) = tmp1165;
      elMat(5,5) = tmp154*(tmp921*tmp921) + tmp213*(tmp928*tmp928) + tmp272*(tmp935*tmp935) + tmp331*(tmp942*tmp942) + tmp390*(tmp949*tmp949) + tmp448*(tmp956*tmp956) + tmp507*(tmp963*tmp963) + tmp565*(tmp970*tmp970) + tmp624*(tmp977*tmp977) + tmp683*(tmp984*tmp984) + (tmp914*tmp914)*tmp95;
      elMat(5,6) = tmp1181;
      elMat(5,7) = tmp1182;
      elMat(5,8) = tmp1183;
      elMat(5,9) = tmp1184;
      elMat(6,0) = tmp1063;
      elMat(6,1) = tmp1115;
      elMat(6,2) = tmp1133;
      elMat(6,3) = tmp1150;
      elMat(6,4) = tmp1166;
      elMat(6,5) = tmp1181;
      elMat(6,6) = (tmp1006*tmp1006)*tmp213 + (tmp1013*tmp1013)*tmp272 + (tmp1020*tmp1020)*tmp331 + (tmp1027*tmp1027)*tmp390 + (tmp1034*tmp1034)*tmp448 + (tmp1041*tmp1041)*tmp507 + (tmp1048*tmp1048)*tmp565 + (tmp1055*tmp1055)*tmp624 + (tmp1062*tmp1062)*tmp683 + tmp154*(tmp999*tmp999) + tmp95*(tmp992*tmp992);
      elMat(6,7) = tmp1196;
      elMat(6,8) = tmp1197;
      elMat(6,9) = tmp1198;
      elMat(7,0) = tmp1075;
      elMat(7,1) = tmp1116;
      elMat(7,2) = tmp1134;
      elMat(7,3) = tmp1151;
      elMat(7,4) = tmp1167;
      elMat(7,5) = tmp1182;
      elMat(7,6) = tmp1196;
      elMat(7,7) = (tmp1064*tmp1064)*tmp95 + (tmp1065*tmp1065)*tmp154 + (tmp1066*tmp1066)*tmp213 + (tmp1067*tmp1067)*tmp272 + (tmp1068*tmp1068)*tmp331 + (tmp1069*tmp1069)*tmp390 + (tmp1070*tmp1070)*tmp448 + (tmp1071*tmp1071)*tmp507 + (tmp1072*tmp1072)*tmp565 + (tmp1073*tmp1073)*tmp624 + (tmp1074*tmp1074)*tmp683;
      elMat(7,8) = tmp1210;
      elMat(7,9) = tmp1211;
      elMat(8,0) = tmp1087;
      elMat(8,1) = tmp1117;
      elMat(8,2) = tmp1135;
      elMat(8,3) = tmp1152;
      elMat(8,4) = tmp1168;
      elMat(8,5) = tmp1183;
      elMat(8,6) = tmp1197;
      elMat(8,7) = tmp1210;
      elMat(8,8) = (tmp1076*tmp1076)*tmp95 + (tmp1077*tmp1077)*tmp154 + (tmp1078*tmp1078)*tmp213 + (tmp1079*tmp1079)*tmp272 + (tmp1080*tmp1080)*tmp331 + (tmp1081*tmp1081)*tmp390 + (tmp1082*tmp1082)*tmp448 + (tmp1083*tmp1083)*tmp507 + (tmp1084*tmp1084)*tmp565 + (tmp1085*tmp1085)*tmp624 + (tmp1086*tmp1086)*tmp683;
      elMat(8,9) = tmp1212;
      elMat(9,0) = tmp1099;
      elMat(9,1) = tmp1118;
      elMat(9,2) = tmp1136;
      elMat(9,3) = tmp1153;
      elMat(9,4) = tmp1169;
      elMat(9,5) = tmp1184;
      elMat(9,6) = tmp1198;
      elMat(9,7) = tmp1211;
      elMat(9,8) = tmp1212;
      elMat(9,9) = (tmp1088*tmp1088)*tmp95 + (tmp1089*tmp1089)*tmp154 + (tmp1090*tmp1090)*tmp213 + (tmp1091*tmp1091)*tmp272 + (tmp1092*tmp1092)*tmp331 + (tmp1093*tmp1093)*tmp390 + (tmp1094*tmp1094)*tmp448 + (tmp1095*tmp1095)*tmp507 + (tmp1096*tmp1096)*tmp565 + (tmp1097*tmp1097)*tmp624 + (tmp1098*tmp1098)*tmp683;
   }

   void p2_advection_u_p2_supg_blending_q4_ElementwiseOperator::integrateRow0( const std::array< Point3D, 4 >& coords, Matrix< real_t, 1, 10 >& elMat ) const   {
      Matrix3r J_B_1;
      geometryMap_->evalDF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), J_B_1);
      Matrix3r J_B_2;
      geometryMap_->evalDF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), J_B_2);
      Matrix3r J_B_3;
      geometryMap_->evalDF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), J_B_3);
      Matrix3r J_B_4;
      geometryMap_->evalDF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), J_B_4);
      Matrix3r J_B_5;
      geometryMap_->evalDF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), J_B_5);
      Matrix3r J_B_6;
      geometryMap_->evalDF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), J_B_6);
      Matrix3r J_B_7;
      geometryMap_->evalDF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), J_B_7);
      Matrix3r J_B_8;
      geometryMap_->evalDF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), J_B_8);
      Matrix3r J_B_9;
      geometryMap_->evalDF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), J_B_9);
      Matrix3r J_B_10;
      geometryMap_->evalDF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), J_B_10);
      Matrix3r J_B_11;
      geometryMap_->evalDF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), J_B_11);
      Point3D B_1;
      geometryMap_->evalF(Point3D(0.11180076739738332*coords[0][0] + 0.097204644587583267*coords[1][0] + 0.10660417256199362*coords[2][0] + 0.6843904154530398*coords[3][0], 0.11180076739738332*coords[0][1] + 0.097204644587583267*coords[1][1] + 0.10660417256199362*coords[2][1] + 0.6843904154530398*coords[3][1], 0.11180076739738332*coords[0][2] + 0.097204644587583267*coords[1][2] + 0.10660417256199362*coords[2][2] + 0.6843904154530398*coords[3][2]), B_1);
      Point3D B_2;
      geometryMap_->evalF(Point3D(0.32329398483747895*coords[0][0] + 0.02956949520647989*coords[1][0] + 0.32923295974264682*coords[2][0] + 0.31790356021339439*coords[3][0], 0.32329398483747895*coords[0][1] + 0.02956949520647989*coords[1][1] + 0.32923295974264682*coords[2][1] + 0.31790356021339439*coords[3][1], 0.32329398483747895*coords[0][2] + 0.02956949520647989*coords[1][2] + 0.32923295974264682*coords[2][2] + 0.31790356021339439*coords[3][2]), B_2);
      Point3D B_3;
      geometryMap_->evalF(Point3D(0.10962240533194151*coords[0][0] + 0.43271023904776851*coords[1][0] + 0.10384411641099289*coords[2][0] + 0.35382323920929709*coords[3][0], 0.10962240533194151*coords[0][1] + 0.43271023904776851*coords[1][1] + 0.10384411641099289*coords[2][1] + 0.35382323920929709*coords[3][1], 0.10962240533194151*coords[0][2] + 0.43271023904776851*coords[1][2] + 0.10384411641099289*coords[2][2] + 0.35382323920929709*coords[3][2]), B_3);
      Point3D B_4;
      geometryMap_->evalF(Point3D(0.3284732067220385*coords[0][0] + 0.24027666492807276*coords[1][0] + 0.30444840243449695*coords[2][0] + 0.12680172591539179*coords[3][0], 0.3284732067220385*coords[0][1] + 0.24027666492807276*coords[1][1] + 0.30444840243449695*coords[2][1] + 0.12680172591539179*coords[3][1], 0.3284732067220385*coords[0][2] + 0.24027666492807276*coords[1][2] + 0.30444840243449695*coords[2][2] + 0.12680172591539179*coords[3][2]), B_4);
      Point3D B_5;
      geometryMap_->evalF(Point3D(0.0023910074574391427*coords[0][0] + 0.12941137378891016*coords[1][0] + 0.53800720391618584*coords[2][0] + 0.33019041483746481*coords[3][0], 0.0023910074574391427*coords[0][1] + 0.12941137378891016*coords[1][1] + 0.53800720391618584*coords[2][1] + 0.33019041483746481*coords[3][1], 0.0023910074574391427*coords[0][2] + 0.12941137378891016*coords[1][2] + 0.53800720391618584*coords[2][2] + 0.33019041483746481*coords[3][2]), B_5);
      Point3D B_6;
      geometryMap_->evalF(Point3D(0.56297276014304598*coords[0][0] + 0.12154199133392796*coords[1][0] + 0.008991260093335729*coords[2][0] + 0.30649398842969033*coords[3][0], 0.56297276014304598*coords[0][1] + 0.12154199133392796*coords[1][1] + 0.008991260093335729*coords[2][1] + 0.30649398842969033*coords[3][1], 0.56297276014304598*coords[0][2] + 0.12154199133392796*coords[1][2] + 0.008991260093335729*coords[2][2] + 0.30649398842969033*coords[3][2]), B_6);
      Point3D B_7;
      geometryMap_->evalF(Point3D(0.056824017127933668*coords[0][0] + 0.45076587609127672*coords[1][0] + 0.43295349048135567*coords[2][0] + 0.05945661629943394*coords[3][0], 0.056824017127933668*coords[0][1] + 0.45076587609127672*coords[1][1] + 0.43295349048135567*coords[2][1] + 0.05945661629943394*coords[3][1], 0.056824017127933668*coords[0][2] + 0.45076587609127672*coords[1][2] + 0.43295349048135567*coords[2][2] + 0.05945661629943394*coords[3][2]), B_7);
      Point3D B_8;
      geometryMap_->evalF(Point3D(0.47961101102565518*coords[0][0] + 0.41926631387951319*coords[1][0] + 0.053341239535745211*coords[2][0] + 0.047781435559086427*coords[3][0], 0.47961101102565518*coords[0][1] + 0.41926631387951319*coords[1][1] + 0.053341239535745211*coords[2][1] + 0.047781435559086427*coords[3][1], 0.47961101102565518*coords[0][2] + 0.41926631387951319*coords[1][2] + 0.053341239535745211*coords[2][2] + 0.047781435559086427*coords[3][2]), B_8);
      Point3D B_9;
      geometryMap_->evalF(Point3D(0.15636389323939504*coords[0][0] + 0.067223294893383301*coords[1][0] + 0.74122888209362303*coords[2][0] + 0.035183929773598632*coords[3][0], 0.15636389323939504*coords[0][1] + 0.067223294893383301*coords[1][1] + 0.74122888209362303*coords[2][1] + 0.035183929773598632*coords[3][1], 0.15636389323939504*coords[0][2] + 0.067223294893383301*coords[1][2] + 0.74122888209362303*coords[2][2] + 0.035183929773598632*coords[3][2]), B_9);
      Point3D B_10;
      geometryMap_->evalF(Point3D(0.097987203649279098*coords[0][0] + 0.7525085070096551*coords[1][0] + 0.08140491840285935*coords[2][0] + 0.068099370938206449*coords[3][0], 0.097987203649279098*coords[0][1] + 0.7525085070096551*coords[1][1] + 0.08140491840285935*coords[2][1] + 0.068099370938206449*coords[3][1], 0.097987203649279098*coords[0][2] + 0.7525085070096551*coords[1][2] + 0.08140491840285935*coords[2][2] + 0.068099370938206449*coords[3][2]), B_10);
      Point3D B_11;
      geometryMap_->evalF(Point3D(0.77125473269537637*coords[0][0] + 0.040490506727590303*coords[1][0] + 0.17469405869723076*coords[2][0] + 0.013560701879802628*coords[3][0], 0.77125473269537637*coords[0][1] + 0.040490506727590303*coords[1][1] + 0.17469405869723076*coords[2][1] + 0.013560701879802628*coords[3][1], 0.77125473269537637*coords[0][2] + 0.040490506727590303*coords[1][2] + 0.17469405869723076*coords[2][2] + 0.013560701879802628*coords[3][2]), B_11);
      real_t ScalarCoeff0_1 = advection_supg_scaling_(Point3D(B_1[0], B_1[1], B_1[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_2 = advection_supg_scaling_(Point3D(B_2[0], B_2[1], B_2[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_3 = advection_supg_scaling_(Point3D(B_3[0], B_3[1], B_3[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_4 = advection_supg_scaling_(Point3D(B_4[0], B_4[1], B_4[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_5 = advection_supg_scaling_(Point3D(B_5[0], B_5[1], B_5[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_6 = advection_supg_scaling_(Point3D(B_6[0], B_6[1], B_6[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_7 = advection_supg_scaling_(Point3D(B_7[0], B_7[1], B_7[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_8 = advection_supg_scaling_(Point3D(B_8[0], B_8[1], B_8[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_9 = advection_supg_scaling_(Point3D(B_9[0], B_9[1], B_9[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_10 = advection_supg_scaling_(Point3D(B_10[0], B_10[1], B_10[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      real_t ScalarCoeff0_11 = advection_supg_scaling_(Point3D(B_11[0], B_11[1], B_11[2]), std::pow(((-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])*(-1.0/8.0*DoFValues_[0] - 1.0/8.0*DoFValues_[1] - 1.0/8.0*DoFValues_[2] - 1.0/8.0*DoFValues_[3] + (1.0/4.0)*DoFValues_[4] + (1.0/4.0)*DoFValues_[5] + (1.0/4.0)*DoFValues_[6] + (1.0/4.0)*DoFValues_[7] + (1.0/4.0)*DoFValues_[8] + (1.0/4.0)*DoFValues_[9])) + ((-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])*(-1.0/8.0*DoFValues_[10] - 1.0/8.0*DoFValues_[11] - 1.0/8.0*DoFValues_[12] - 1.0/8.0*DoFValues_[13] + (1.0/4.0)*DoFValues_[14] + (1.0/4.0)*DoFValues_[15] + (1.0/4.0)*DoFValues_[16] + (1.0/4.0)*DoFValues_[17] + (1.0/4.0)*DoFValues_[18] + (1.0/4.0)*DoFValues_[19])) + ((-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])*(-1.0/8.0*DoFValues_[20] - 1.0/8.0*DoFValues_[21] - 1.0/8.0*DoFValues_[22] - 1.0/8.0*DoFValues_[23] + (1.0/4.0)*DoFValues_[24] + (1.0/4.0)*DoFValues_[25] + (1.0/4.0)*DoFValues_[26] + (1.0/4.0)*DoFValues_[27] + (1.0/4.0)*DoFValues_[28] + (1.0/4.0)*DoFValues_[29])), 1.0/2.0));
      const real_t tmp0 = -0.086801944216095439*DoFValues_[20] - 0.078307158728786505*DoFValues_[21] - 0.083875273346738985*DoFValues_[22] + 0.25239006607492903*DoFValues_[23] + 0.29183549579492141*DoFValues_[24] + 0.26610370837304476*DoFValues_[25] + 0.04144968282176794*DoFValues_[26] + 0.30606149458825532*DoFValues_[27] + 0.04767371320077584*DoFValues_[28] + 0.043470215437926847*DoFValues_[29];
      const real_t tmp1 = J_B_1(0, 0)*J_B_1(1, 1);
      const real_t tmp2 = J_B_1(0, 1)*J_B_1(1, 0);
      const real_t tmp3 = tmp1 - tmp2;
      const real_t tmp4 = -coords[0][0] + coords[1][0];
      const real_t tmp5 = -coords[0][1] + coords[2][1];
      const real_t tmp6 = tmp4*tmp5;
      const real_t tmp7 = -coords[0][0] + coords[2][0];
      const real_t tmp8 = -coords[0][1] + coords[1][1];
      const real_t tmp9 = tmp7*tmp8;
      const real_t tmp10 = tmp6 - tmp9;
      const real_t tmp11 = -coords[0][2] + coords[3][2];
      const real_t tmp12 = -coords[0][1] + coords[3][1];
      const real_t tmp13 = -coords[0][2] + coords[1][2];
      const real_t tmp14 = -coords[0][0] + coords[3][0];
      const real_t tmp15 = -coords[0][2] + coords[2][2];
      const real_t tmp16 = tmp15*tmp8;
      const real_t tmp17 = tmp12*tmp4;
      const real_t tmp18 = tmp13*tmp14;
      const real_t tmp19 = 1.0 / (tmp11*tmp6 - tmp11*tmp9 + tmp12*tmp13*tmp7 + tmp14*tmp16 - tmp15*tmp17 - tmp18*tmp5);
      const real_t tmp20 = J_B_1(0, 1)*J_B_1(1, 2);
      const real_t tmp21 = J_B_1(0, 0)*J_B_1(1, 2);
      const real_t tmp22 = J_B_1(0, 2)*J_B_1(1, 1);
      const real_t tmp23 = tmp1*J_B_1(2, 2) - tmp2*J_B_1(2, 2) + tmp20*J_B_1(2, 0) - tmp21*J_B_1(2, 1) - tmp22*J_B_1(2, 0) + J_B_1(0, 2)*J_B_1(1, 0)*J_B_1(2, 1);
      const real_t tmp24 = 1.0 / (tmp23);
      const real_t tmp25 = tmp19*tmp24;
      const real_t tmp26 = tmp10*tmp25;
      const real_t tmp27 = tmp26*tmp3;
      const real_t tmp28 = tmp14*tmp8 - tmp17;
      const real_t tmp29 = tmp25*tmp28;
      const real_t tmp30 = tmp29*tmp3;
      const real_t tmp31 = -tmp21 + J_B_1(0, 2)*J_B_1(1, 0);
      const real_t tmp32 = tmp13*tmp7 - tmp15*tmp4;
      const real_t tmp33 = tmp25*tmp32;
      const real_t tmp34 = tmp31*tmp33;
      const real_t tmp35 = tmp11*tmp4 - tmp18;
      const real_t tmp36 = tmp25*tmp35;
      const real_t tmp37 = tmp31*tmp36;
      const real_t tmp38 = tmp12*tmp7 - tmp14*tmp5;
      const real_t tmp39 = tmp25*tmp38;
      const real_t tmp40 = tmp3*tmp39;
      const real_t tmp41 = -tmp11*tmp7 + tmp14*tmp15;
      const real_t tmp42 = tmp25*tmp41;
      const real_t tmp43 = tmp31*tmp42;
      const real_t tmp44 = tmp20 - tmp22;
      const real_t tmp45 = -tmp13*tmp5 + tmp16;
      const real_t tmp46 = tmp25*tmp45;
      const real_t tmp47 = tmp44*tmp46;
      const real_t tmp48 = -tmp11*tmp8 + tmp12*tmp13;
      const real_t tmp49 = tmp25*tmp48;
      const real_t tmp50 = tmp44*tmp49;
      const real_t tmp51 = tmp11*tmp5 - tmp12*tmp15;
      const real_t tmp52 = tmp25*tmp51;
      const real_t tmp53 = tmp44*tmp52;
      const real_t tmp54 = -0.086801944216095439*DoFValues_[10] - 0.078307158728786505*DoFValues_[11] - 0.083875273346738985*DoFValues_[12] + 0.25239006607492903*DoFValues_[13] + 0.29183549579492141*DoFValues_[14] + 0.26610370837304476*DoFValues_[15] + 0.04144968282176794*DoFValues_[16] + 0.30606149458825532*DoFValues_[17] + 0.04767371320077584*DoFValues_[18] + 0.043470215437926847*DoFValues_[19];
      const real_t tmp55 = -J_B_1(0, 0)*J_B_1(2, 1) + J_B_1(0, 1)*J_B_1(2, 0);
      const real_t tmp56 = tmp26*tmp55;
      const real_t tmp57 = tmp29*tmp55;
      const real_t tmp58 = J_B_1(0, 0)*J_B_1(2, 2) - J_B_1(0, 2)*J_B_1(2, 0);
      const real_t tmp59 = tmp33*tmp58;
      const real_t tmp60 = tmp36*tmp58;
      const real_t tmp61 = tmp39*tmp55;
      const real_t tmp62 = tmp42*tmp58;
      const real_t tmp63 = -J_B_1(0, 1)*J_B_1(2, 2) + J_B_1(0, 2)*J_B_1(2, 1);
      const real_t tmp64 = tmp46*tmp63;
      const real_t tmp65 = tmp49*tmp63;
      const real_t tmp66 = tmp52*tmp63;
      const real_t tmp67 = -0.086801944216095439*DoFValues_[0] - 0.078307158728786505*DoFValues_[1] - 0.083875273346738985*DoFValues_[2] + 0.25239006607492903*DoFValues_[3] + 0.29183549579492141*DoFValues_[4] + 0.26610370837304476*DoFValues_[5] + 0.04144968282176794*DoFValues_[6] + 0.30606149458825532*DoFValues_[7] + 0.04767371320077584*DoFValues_[8] + 0.043470215437926847*DoFValues_[9];
      const real_t tmp68 = J_B_1(1, 0)*J_B_1(2, 1) - J_B_1(1, 1)*J_B_1(2, 0);
      const real_t tmp69 = tmp26*tmp68;
      const real_t tmp70 = tmp29*tmp68;
      const real_t tmp71 = -J_B_1(1, 0)*J_B_1(2, 2) + J_B_1(1, 2)*J_B_1(2, 0);
      const real_t tmp72 = tmp33*tmp71;
      const real_t tmp73 = tmp36*tmp71;
      const real_t tmp74 = tmp39*tmp68;
      const real_t tmp75 = tmp42*tmp71;
      const real_t tmp76 = J_B_1(1, 1)*J_B_1(2, 2) - J_B_1(1, 2)*J_B_1(2, 1);
      const real_t tmp77 = tmp46*tmp76;
      const real_t tmp78 = tmp49*tmp76;
      const real_t tmp79 = tmp52*tmp76;
      const real_t tmp80 = tmp0*(0.55279693041046674*tmp27 + 0.55279693041046674*tmp30 + 0.55279693041046674*tmp34 + 0.55279693041046674*tmp37 + 0.55279693041046674*tmp40 + 0.55279693041046674*tmp43 + 0.55279693041046674*tmp47 + 0.55279693041046674*tmp50 + 0.55279693041046674*tmp53) + tmp54*(0.55279693041046674*tmp56 + 0.55279693041046674*tmp57 + 0.55279693041046674*tmp59 + 0.55279693041046674*tmp60 + 0.55279693041046674*tmp61 + 0.55279693041046674*tmp62 + 0.55279693041046674*tmp64 + 0.55279693041046674*tmp65 + 0.55279693041046674*tmp66) + tmp67*(0.55279693041046674*tmp69 + 0.55279693041046674*tmp70 + 0.55279693041046674*tmp72 + 0.55279693041046674*tmp73 + 0.55279693041046674*tmp74 + 0.55279693041046674*tmp75 + 0.55279693041046674*tmp77 + 0.55279693041046674*tmp78 + 0.55279693041046674*tmp79);
      const real_t tmp81 = coords[0][0]*coords[1][1];
      const real_t tmp82 = coords[0][0]*coords[1][2];
      const real_t tmp83 = coords[2][1]*coords[3][2];
      const real_t tmp84 = coords[0][1]*coords[1][0];
      const real_t tmp85 = coords[0][1]*coords[1][2];
      const real_t tmp86 = coords[2][2]*coords[3][0];
      const real_t tmp87 = coords[0][2]*coords[1][0];
      const real_t tmp88 = coords[0][2]*coords[1][1];
      const real_t tmp89 = coords[2][0]*coords[3][1];
      const real_t tmp90 = coords[2][2]*coords[3][1];
      const real_t tmp91 = coords[2][0]*coords[3][2];
      const real_t tmp92 = coords[2][1]*coords[3][0];
      const real_t tmp93 = std::abs(coords[0][0]*tmp83 - coords[0][0]*tmp90 + coords[0][1]*tmp86 - coords[0][1]*tmp91 + coords[0][2]*tmp89 - coords[0][2]*tmp92 - coords[1][0]*tmp83 + coords[1][0]*tmp90 - coords[1][1]*tmp86 + coords[1][1]*tmp91 - coords[1][2]*tmp89 + coords[1][2]*tmp92 + coords[2][0]*tmp85 - coords[2][0]*tmp88 - coords[2][1]*tmp82 + coords[2][1]*tmp87 + coords[2][2]*tmp81 - coords[2][2]*tmp84 - coords[3][0]*tmp85 + coords[3][0]*tmp88 + coords[3][1]*tmp82 - coords[3][1]*tmp87 - coords[3][2]*tmp81 + coords[3][2]*tmp84);
      const real_t tmp94 = 0.017744672359248353*tmp93*std::abs(tmp23)*ScalarCoeff0_1;
      const real_t tmp95 = -0.07878421949126832*DoFValues_[20] + 0.3800295992341452*DoFValues_[21] - 0.068151396922506977*DoFValues_[22] - 0.058824322293847577*DoFValues_[23] + 0.02217449493804299*DoFValues_[24] + 0.20498142381202572*DoFValues_[25] + 0.24503157444231394*DoFValues_[26] + 0.026691467714039335*DoFValues_[27] + 0.031906561270375708*DoFValues_[28] + 0.29494481729668015*DoFValues_[29];
      const real_t tmp96 = J_B_10(0, 0)*J_B_10(1, 1);
      const real_t tmp97 = J_B_10(0, 1)*J_B_10(1, 0);
      const real_t tmp98 = tmp96 - tmp97;
      const real_t tmp99 = J_B_10(0, 1)*J_B_10(1, 2);
      const real_t tmp100 = J_B_10(0, 0)*J_B_10(1, 2);
      const real_t tmp101 = J_B_10(0, 2)*J_B_10(1, 1);
      const real_t tmp102 = -tmp100*J_B_10(2, 1) - tmp101*J_B_10(2, 0) + tmp96*J_B_10(2, 2) - tmp97*J_B_10(2, 2) + tmp99*J_B_10(2, 0) + J_B_10(0, 2)*J_B_10(1, 0)*J_B_10(2, 1);
      const real_t tmp103 = 1.0 / (tmp102);
      const real_t tmp104 = tmp103*tmp19;
      const real_t tmp105 = tmp10*tmp104;
      const real_t tmp106 = tmp105*tmp98;
      const real_t tmp107 = tmp104*tmp28;
      const real_t tmp108 = tmp107*tmp98;
      const real_t tmp109 = -tmp100 + J_B_10(0, 2)*J_B_10(1, 0);
      const real_t tmp110 = tmp104*tmp32;
      const real_t tmp111 = tmp109*tmp110;
      const real_t tmp112 = tmp104*tmp35;
      const real_t tmp113 = tmp109*tmp112;
      const real_t tmp114 = tmp104*tmp38;
      const real_t tmp115 = tmp114*tmp98;
      const real_t tmp116 = tmp104*tmp41;
      const real_t tmp117 = tmp109*tmp116;
      const real_t tmp118 = -tmp101 + tmp99;
      const real_t tmp119 = tmp104*tmp45;
      const real_t tmp120 = tmp118*tmp119;
      const real_t tmp121 = tmp104*tmp48;
      const real_t tmp122 = tmp118*tmp121;
      const real_t tmp123 = tmp104*tmp51;
      const real_t tmp124 = tmp118*tmp123;
      const real_t tmp125 = -0.07878421949126832*DoFValues_[10] + 0.3800295992341452*DoFValues_[11] - 0.068151396922506977*DoFValues_[12] - 0.058824322293847577*DoFValues_[13] + 0.02217449493804299*DoFValues_[14] + 0.20498142381202572*DoFValues_[15] + 0.24503157444231394*DoFValues_[16] + 0.026691467714039335*DoFValues_[17] + 0.031906561270375708*DoFValues_[18] + 0.29494481729668015*DoFValues_[19];
      const real_t tmp126 = -J_B_10(0, 0)*J_B_10(2, 1) + J_B_10(0, 1)*J_B_10(2, 0);
      const real_t tmp127 = tmp105*tmp126;
      const real_t tmp128 = tmp107*tmp126;
      const real_t tmp129 = J_B_10(0, 0)*J_B_10(2, 2) - J_B_10(0, 2)*J_B_10(2, 0);
      const real_t tmp130 = tmp110*tmp129;
      const real_t tmp131 = tmp112*tmp129;
      const real_t tmp132 = tmp114*tmp126;
      const real_t tmp133 = tmp116*tmp129;
      const real_t tmp134 = -J_B_10(0, 1)*J_B_10(2, 2) + J_B_10(0, 2)*J_B_10(2, 1);
      const real_t tmp135 = tmp119*tmp134;
      const real_t tmp136 = tmp121*tmp134;
      const real_t tmp137 = tmp123*tmp134;
      const real_t tmp138 = -0.07878421949126832*DoFValues_[0] + 0.3800295992341452*DoFValues_[1] - 0.068151396922506977*DoFValues_[2] - 0.058824322293847577*DoFValues_[3] + 0.02217449493804299*DoFValues_[4] + 0.20498142381202572*DoFValues_[5] + 0.24503157444231394*DoFValues_[6] + 0.026691467714039335*DoFValues_[7] + 0.031906561270375708*DoFValues_[8] + 0.29494481729668015*DoFValues_[9];
      const real_t tmp139 = J_B_10(1, 0)*J_B_10(2, 1) - J_B_10(1, 1)*J_B_10(2, 0);
      const real_t tmp140 = tmp105*tmp139;
      const real_t tmp141 = tmp107*tmp139;
      const real_t tmp142 = -J_B_10(1, 0)*J_B_10(2, 2) + J_B_10(1, 2)*J_B_10(2, 0);
      const real_t tmp143 = tmp110*tmp142;
      const real_t tmp144 = tmp112*tmp142;
      const real_t tmp145 = tmp114*tmp139;
      const real_t tmp146 = tmp116*tmp142;
      const real_t tmp147 = J_B_10(1, 1)*J_B_10(2, 2) - J_B_10(1, 2)*J_B_10(2, 1);
      const real_t tmp148 = tmp119*tmp147;
      const real_t tmp149 = tmp121*tmp147;
      const real_t tmp150 = tmp123*tmp147;
      const real_t tmp151 = tmp125*(0.60805118540288361*tmp127 + 0.60805118540288361*tmp128 + 0.60805118540288361*tmp130 + 0.60805118540288361*tmp131 + 0.60805118540288361*tmp132 + 0.60805118540288361*tmp133 + 0.60805118540288361*tmp135 + 0.60805118540288361*tmp136 + 0.60805118540288361*tmp137) + tmp138*(0.60805118540288361*tmp140 + 0.60805118540288361*tmp141 + 0.60805118540288361*tmp143 + 0.60805118540288361*tmp144 + 0.60805118540288361*tmp145 + 0.60805118540288361*tmp146 + 0.60805118540288361*tmp148 + 0.60805118540288361*tmp149 + 0.60805118540288361*tmp150) + tmp95*(0.60805118540288361*tmp106 + 0.60805118540288361*tmp108 + 0.60805118540288361*tmp111 + 0.60805118540288361*tmp113 + 0.60805118540288361*tmp115 + 0.60805118540288361*tmp117 + 0.60805118540288361*tmp120 + 0.60805118540288361*tmp122 + 0.60805118540288361*tmp124);
      const real_t tmp152 = 0.0092122281926561439*tmp93*std::abs(tmp102)*ScalarCoeff0_10;
      const real_t tmp153 = 0.41841299271465621*DoFValues_[20] - 0.03721154445747623*DoFValues_[21] - 0.11365803040900775*DoFValues_[22] - 0.013192916608856863*DoFValues_[23] + 0.009475896200663551*DoFValues_[24] + 0.002196318762779979*DoFValues_[25] + 0.028293803835801108*DoFValues_[26] + 0.041835022013875456*DoFValues_[27] + 0.53893447817601237*DoFValues_[28] + 0.12491397977155198*DoFValues_[29];
      const real_t tmp154 = J_B_11(0, 0)*J_B_11(1, 1);
      const real_t tmp155 = J_B_11(0, 1)*J_B_11(1, 0);
      const real_t tmp156 = tmp154 - tmp155;
      const real_t tmp157 = J_B_11(0, 1)*J_B_11(1, 2);
      const real_t tmp158 = J_B_11(0, 0)*J_B_11(1, 2);
      const real_t tmp159 = J_B_11(0, 2)*J_B_11(1, 1);
      const real_t tmp160 = tmp154*J_B_11(2, 2) - tmp155*J_B_11(2, 2) + tmp157*J_B_11(2, 0) - tmp158*J_B_11(2, 1) - tmp159*J_B_11(2, 0) + J_B_11(0, 2)*J_B_11(1, 0)*J_B_11(2, 1);
      const real_t tmp161 = 1.0 / (tmp160);
      const real_t tmp162 = tmp161*tmp19;
      const real_t tmp163 = tmp10*tmp162;
      const real_t tmp164 = tmp156*tmp163;
      const real_t tmp165 = tmp162*tmp28;
      const real_t tmp166 = tmp156*tmp165;
      const real_t tmp167 = -tmp158 + J_B_11(0, 2)*J_B_11(1, 0);
      const real_t tmp168 = tmp162*tmp32;
      const real_t tmp169 = tmp167*tmp168;
      const real_t tmp170 = tmp162*tmp35;
      const real_t tmp171 = tmp167*tmp170;
      const real_t tmp172 = tmp162*tmp38;
      const real_t tmp173 = tmp156*tmp172;
      const real_t tmp174 = tmp162*tmp41;
      const real_t tmp175 = tmp167*tmp174;
      const real_t tmp176 = tmp157 - tmp159;
      const real_t tmp177 = tmp162*tmp45;
      const real_t tmp178 = tmp176*tmp177;
      const real_t tmp179 = tmp162*tmp48;
      const real_t tmp180 = tmp176*tmp179;
      const real_t tmp181 = tmp162*tmp51;
      const real_t tmp182 = tmp176*tmp181;
      const real_t tmp183 = 0.41841299271465621*DoFValues_[10] - 0.03721154445747623*DoFValues_[11] - 0.11365803040900775*DoFValues_[12] - 0.013192916608856863*DoFValues_[13] + 0.009475896200663551*DoFValues_[14] + 0.002196318762779979*DoFValues_[15] + 0.028293803835801108*DoFValues_[16] + 0.041835022013875456*DoFValues_[17] + 0.53893447817601237*DoFValues_[18] + 0.12491397977155198*DoFValues_[19];
      const real_t tmp184 = -J_B_11(0, 0)*J_B_11(2, 1) + J_B_11(0, 1)*J_B_11(2, 0);
      const real_t tmp185 = tmp163*tmp184;
      const real_t tmp186 = tmp165*tmp184;
      const real_t tmp187 = J_B_11(0, 0)*J_B_11(2, 2) - J_B_11(0, 2)*J_B_11(2, 0);
      const real_t tmp188 = tmp168*tmp187;
      const real_t tmp189 = tmp170*tmp187;
      const real_t tmp190 = tmp172*tmp184;
      const real_t tmp191 = tmp174*tmp187;
      const real_t tmp192 = -J_B_11(0, 1)*J_B_11(2, 2) + J_B_11(0, 2)*J_B_11(2, 1);
      const real_t tmp193 = tmp177*tmp192;
      const real_t tmp194 = tmp179*tmp192;
      const real_t tmp195 = tmp181*tmp192;
      const real_t tmp196 = 0.41841299271465621*DoFValues_[0] - 0.03721154445747623*DoFValues_[1] - 0.11365803040900775*DoFValues_[2] - 0.013192916608856863*DoFValues_[3] + 0.009475896200663551*DoFValues_[4] + 0.002196318762779979*DoFValues_[5] + 0.028293803835801108*DoFValues_[6] + 0.041835022013875456*DoFValues_[7] + 0.53893447817601237*DoFValues_[8] + 0.12491397977155198*DoFValues_[9];
      const real_t tmp197 = J_B_11(1, 0)*J_B_11(2, 1) - J_B_11(1, 1)*J_B_11(2, 0);
      const real_t tmp198 = tmp163*tmp197;
      const real_t tmp199 = tmp165*tmp197;
      const real_t tmp200 = -J_B_11(1, 0)*J_B_11(2, 2) + J_B_11(1, 2)*J_B_11(2, 0);
      const real_t tmp201 = tmp168*tmp200;
      const real_t tmp202 = tmp170*tmp200;
      const real_t tmp203 = tmp172*tmp197;
      const real_t tmp204 = tmp174*tmp200;
      const real_t tmp205 = J_B_11(1, 1)*J_B_11(2, 2) - J_B_11(1, 2)*J_B_11(2, 1);
      const real_t tmp206 = tmp177*tmp205;
      const real_t tmp207 = tmp179*tmp205;
      const real_t tmp208 = tmp181*tmp205;
      const real_t tmp209 = tmp153*(-2.0850189307815055*tmp164 - 2.0850189307815055*tmp166 - 2.0850189307815055*tmp169 - 2.0850189307815055*tmp171 - 2.0850189307815055*tmp173 - 2.0850189307815055*tmp175 - 2.0850189307815055*tmp178 - 2.0850189307815055*tmp180 - 2.0850189307815055*tmp182) + tmp183*(-2.0850189307815055*tmp185 - 2.0850189307815055*tmp186 - 2.0850189307815055*tmp188 - 2.0850189307815055*tmp189 - 2.0850189307815055*tmp190 - 2.0850189307815055*tmp191 - 2.0850189307815055*tmp193 - 2.0850189307815055*tmp194 - 2.0850189307815055*tmp195) + tmp196*(-2.0850189307815055*tmp198 - 2.0850189307815055*tmp199 - 2.0850189307815055*tmp201 - 2.0850189307815055*tmp202 - 2.0850189307815055*tmp203 - 2.0850189307815055*tmp204 - 2.0850189307815055*tmp206 - 2.0850189307815055*tmp207 - 2.0850189307815055*tmp208);
      const real_t tmp210 = 0.0065418484874733311*tmp93*std::abs(tmp160)*ScalarCoeff0_11;
      const real_t tmp211 = -0.11425598357328687*DoFValues_[20] - 0.027820785112947815*DoFValues_[21] - 0.11244427618084021*DoFValues_[22] - 0.11577821302069184*DoFValues_[23] + 0.41865732016712232*DoFValues_[24] + 0.037600991199411425*DoFValues_[25] + 0.038941009699701525*DoFValues_[26] + 0.41110523510163882*DoFValues_[27] + 0.42575614198015033*DoFValues_[28] + 0.038238559739742467*DoFValues_[29];
      const real_t tmp212 = J_B_2(0, 0)*J_B_2(1, 1);
      const real_t tmp213 = J_B_2(0, 1)*J_B_2(1, 0);
      const real_t tmp214 = tmp212 - tmp213;
      const real_t tmp215 = J_B_2(0, 1)*J_B_2(1, 2);
      const real_t tmp216 = J_B_2(0, 0)*J_B_2(1, 2);
      const real_t tmp217 = J_B_2(0, 2)*J_B_2(1, 1);
      const real_t tmp218 = tmp212*J_B_2(2, 2) - tmp213*J_B_2(2, 2) + tmp215*J_B_2(2, 0) - tmp216*J_B_2(2, 1) - tmp217*J_B_2(2, 0) + J_B_2(0, 2)*J_B_2(1, 0)*J_B_2(2, 1);
      const real_t tmp219 = 1.0 / (tmp218);
      const real_t tmp220 = tmp19*tmp219;
      const real_t tmp221 = tmp10*tmp220;
      const real_t tmp222 = tmp214*tmp221;
      const real_t tmp223 = tmp220*tmp28;
      const real_t tmp224 = tmp214*tmp223;
      const real_t tmp225 = -tmp216 + J_B_2(0, 2)*J_B_2(1, 0);
      const real_t tmp226 = tmp220*tmp32;
      const real_t tmp227 = tmp225*tmp226;
      const real_t tmp228 = tmp220*tmp35;
      const real_t tmp229 = tmp225*tmp228;
      const real_t tmp230 = tmp220*tmp38;
      const real_t tmp231 = tmp214*tmp230;
      const real_t tmp232 = tmp220*tmp41;
      const real_t tmp233 = tmp225*tmp232;
      const real_t tmp234 = tmp215 - tmp217;
      const real_t tmp235 = tmp220*tmp45;
      const real_t tmp236 = tmp234*tmp235;
      const real_t tmp237 = tmp220*tmp48;
      const real_t tmp238 = tmp234*tmp237;
      const real_t tmp239 = tmp220*tmp51;
      const real_t tmp240 = tmp234*tmp239;
      const real_t tmp241 = -0.11425598357328687*DoFValues_[10] - 0.027820785112947815*DoFValues_[11] - 0.11244427618084021*DoFValues_[12] - 0.11577821302069184*DoFValues_[13] + 0.41865732016712232*DoFValues_[14] + 0.037600991199411425*DoFValues_[15] + 0.038941009699701525*DoFValues_[16] + 0.41110523510163882*DoFValues_[17] + 0.42575614198015033*DoFValues_[18] + 0.038238559739742467*DoFValues_[19];
      const real_t tmp242 = -J_B_2(0, 0)*J_B_2(2, 1) + J_B_2(0, 1)*J_B_2(2, 0);
      const real_t tmp243 = tmp221*tmp242;
      const real_t tmp244 = tmp223*tmp242;
      const real_t tmp245 = J_B_2(0, 0)*J_B_2(2, 2) - J_B_2(0, 2)*J_B_2(2, 0);
      const real_t tmp246 = tmp226*tmp245;
      const real_t tmp247 = tmp228*tmp245;
      const real_t tmp248 = tmp230*tmp242;
      const real_t tmp249 = tmp232*tmp245;
      const real_t tmp250 = -J_B_2(0, 1)*J_B_2(2, 2) + J_B_2(0, 2)*J_B_2(2, 1);
      const real_t tmp251 = tmp235*tmp250;
      const real_t tmp252 = tmp237*tmp250;
      const real_t tmp253 = tmp239*tmp250;
      const real_t tmp254 = -0.11425598357328687*DoFValues_[0] - 0.027820785112947815*DoFValues_[1] - 0.11244427618084021*DoFValues_[2] - 0.11577821302069184*DoFValues_[3] + 0.41865732016712232*DoFValues_[4] + 0.037600991199411425*DoFValues_[5] + 0.038941009699701525*DoFValues_[6] + 0.41110523510163882*DoFValues_[7] + 0.42575614198015033*DoFValues_[8] + 0.038238559739742467*DoFValues_[9];
      const real_t tmp255 = J_B_2(1, 0)*J_B_2(2, 1) - J_B_2(1, 1)*J_B_2(2, 0);
      const real_t tmp256 = tmp221*tmp255;
      const real_t tmp257 = tmp223*tmp255;
      const real_t tmp258 = -J_B_2(1, 0)*J_B_2(2, 2) + J_B_2(1, 2)*J_B_2(2, 0);
      const real_t tmp259 = tmp226*tmp258;
      const real_t tmp260 = tmp228*tmp258;
      const real_t tmp261 = tmp230*tmp255;
      const real_t tmp262 = tmp232*tmp258;
      const real_t tmp263 = J_B_2(1, 1)*J_B_2(2, 2) - J_B_2(1, 2)*J_B_2(2, 1);
      const real_t tmp264 = tmp235*tmp263;
      const real_t tmp265 = tmp237*tmp263;
      const real_t tmp266 = tmp239*tmp263;
      const real_t tmp267 = tmp211*(-0.29317593934991559*tmp222 - 0.29317593934991559*tmp224 - 0.29317593934991559*tmp227 - 0.29317593934991559*tmp229 - 0.29317593934991559*tmp231 - 0.29317593934991559*tmp233 - 0.29317593934991559*tmp236 - 0.29317593934991559*tmp238 - 0.29317593934991559*tmp240) + tmp241*(-0.29317593934991559*tmp243 - 0.29317593934991559*tmp244 - 0.29317593934991559*tmp246 - 0.29317593934991559*tmp247 - 0.29317593934991559*tmp248 - 0.29317593934991559*tmp249 - 0.29317593934991559*tmp251 - 0.29317593934991559*tmp252 - 0.29317593934991559*tmp253) + tmp254*(-0.29317593934991559*tmp256 - 0.29317593934991559*tmp257 - 0.29317593934991559*tmp259 - 0.29317593934991559*tmp260 - 0.29317593934991559*tmp261 - 0.29317593934991559*tmp262 - 0.29317593934991559*tmp264 - 0.29317593934991559*tmp265 - 0.29317593934991559*tmp266);
      const real_t tmp268 = 0.018372372071416232*tmp93*std::abs(tmp218)*ScalarCoeff0_2;
      const real_t tmp269 = -0.085588261830420675*DoFValues_[20] - 0.058233937094214573*DoFValues_[21] - 0.082276915384633206*DoFValues_[22] - 0.10344147000017816*DoFValues_[23] + 0.14696984656545933*DoFValues_[24] + 0.61241175367564293*DoFValues_[25] + 0.17973764974362014*DoFValues_[26] + 0.15514781817784826*DoFValues_[27] + 0.045534567282172728*DoFValues_[28] + 0.18973894886470313*DoFValues_[29];
      const real_t tmp270 = J_B_3(0, 0)*J_B_3(1, 1);
      const real_t tmp271 = J_B_3(0, 1)*J_B_3(1, 0);
      const real_t tmp272 = tmp270 - tmp271;
      const real_t tmp273 = J_B_3(0, 1)*J_B_3(1, 2);
      const real_t tmp274 = J_B_3(0, 0)*J_B_3(1, 2);
      const real_t tmp275 = J_B_3(0, 2)*J_B_3(1, 1);
      const real_t tmp276 = tmp270*J_B_3(2, 2) - tmp271*J_B_3(2, 2) + tmp273*J_B_3(2, 0) - tmp274*J_B_3(2, 1) - tmp275*J_B_3(2, 0) + J_B_3(0, 2)*J_B_3(1, 0)*J_B_3(2, 1);
      const real_t tmp277 = 1.0 / (tmp276);
      const real_t tmp278 = tmp19*tmp277;
      const real_t tmp279 = tmp10*tmp278;
      const real_t tmp280 = tmp272*tmp279;
      const real_t tmp281 = tmp278*tmp28;
      const real_t tmp282 = tmp272*tmp281;
      const real_t tmp283 = -tmp274 + J_B_3(0, 2)*J_B_3(1, 0);
      const real_t tmp284 = tmp278*tmp32;
      const real_t tmp285 = tmp283*tmp284;
      const real_t tmp286 = tmp278*tmp35;
      const real_t tmp287 = tmp283*tmp286;
      const real_t tmp288 = tmp278*tmp38;
      const real_t tmp289 = tmp272*tmp288;
      const real_t tmp290 = tmp278*tmp41;
      const real_t tmp291 = tmp283*tmp290;
      const real_t tmp292 = tmp273 - tmp275;
      const real_t tmp293 = tmp278*tmp45;
      const real_t tmp294 = tmp292*tmp293;
      const real_t tmp295 = tmp278*tmp48;
      const real_t tmp296 = tmp292*tmp295;
      const real_t tmp297 = tmp278*tmp51;
      const real_t tmp298 = tmp292*tmp297;
      const real_t tmp299 = -0.085588261830420675*DoFValues_[10] - 0.058233937094214573*DoFValues_[11] - 0.082276915384633206*DoFValues_[12] - 0.10344147000017816*DoFValues_[13] + 0.14696984656545933*DoFValues_[14] + 0.61241175367564293*DoFValues_[15] + 0.17973764974362014*DoFValues_[16] + 0.15514781817784826*DoFValues_[17] + 0.045534567282172728*DoFValues_[18] + 0.18973894886470313*DoFValues_[19];
      const real_t tmp300 = -J_B_3(0, 0)*J_B_3(2, 1) + J_B_3(0, 1)*J_B_3(2, 0);
      const real_t tmp301 = tmp279*tmp300;
      const real_t tmp302 = tmp281*tmp300;
      const real_t tmp303 = J_B_3(0, 0)*J_B_3(2, 2) - J_B_3(0, 2)*J_B_3(2, 0);
      const real_t tmp304 = tmp284*tmp303;
      const real_t tmp305 = tmp286*tmp303;
      const real_t tmp306 = tmp288*tmp300;
      const real_t tmp307 = tmp290*tmp303;
      const real_t tmp308 = -J_B_3(0, 1)*J_B_3(2, 2) + J_B_3(0, 2)*J_B_3(2, 1);
      const real_t tmp309 = tmp293*tmp308;
      const real_t tmp310 = tmp295*tmp308;
      const real_t tmp311 = tmp297*tmp308;
      const real_t tmp312 = -0.085588261830420675*DoFValues_[0] - 0.058233937094214573*DoFValues_[1] - 0.082276915384633206*DoFValues_[2] - 0.10344147000017816*DoFValues_[3] + 0.14696984656545933*DoFValues_[4] + 0.61241175367564293*DoFValues_[5] + 0.17973764974362014*DoFValues_[6] + 0.15514781817784826*DoFValues_[7] + 0.045534567282172728*DoFValues_[8] + 0.18973894886470313*DoFValues_[9];
      const real_t tmp313 = J_B_3(1, 0)*J_B_3(2, 1) - J_B_3(1, 1)*J_B_3(2, 0);
      const real_t tmp314 = tmp279*tmp313;
      const real_t tmp315 = tmp281*tmp313;
      const real_t tmp316 = -J_B_3(1, 0)*J_B_3(2, 2) + J_B_3(1, 2)*J_B_3(2, 0);
      const real_t tmp317 = tmp284*tmp316;
      const real_t tmp318 = tmp286*tmp316;
      const real_t tmp319 = tmp288*tmp313;
      const real_t tmp320 = tmp290*tmp316;
      const real_t tmp321 = J_B_3(1, 1)*J_B_3(2, 2) - J_B_3(1, 2)*J_B_3(2, 1);
      const real_t tmp322 = tmp293*tmp321;
      const real_t tmp323 = tmp295*tmp321;
      const real_t tmp324 = tmp297*tmp321;
      const real_t tmp325 = tmp269*(0.56151037867223397*tmp280 + 0.56151037867223397*tmp282 + 0.56151037867223397*tmp285 + 0.56151037867223397*tmp287 + 0.56151037867223397*tmp289 + 0.56151037867223397*tmp291 + 0.56151037867223397*tmp294 + 0.56151037867223397*tmp296 + 0.56151037867223397*tmp298) + tmp299*(0.56151037867223397*tmp301 + 0.56151037867223397*tmp302 + 0.56151037867223397*tmp304 + 0.56151037867223397*tmp305 + 0.56151037867223397*tmp306 + 0.56151037867223397*tmp307 + 0.56151037867223397*tmp309 + 0.56151037867223397*tmp310 + 0.56151037867223397*tmp311) + tmp312*(0.56151037867223397*tmp314 + 0.56151037867223397*tmp315 + 0.56151037867223397*tmp317 + 0.56151037867223397*tmp318 + 0.56151037867223397*tmp319 + 0.56151037867223397*tmp320 + 0.56151037867223397*tmp322 + 0.56151037867223397*tmp323 + 0.56151037867223397*tmp324);
      const real_t tmp326 = 0.02582935266937442*tmp93*std::abs(tmp276)*ScalarCoeff0_3;
      const real_t tmp327 = -0.1126839116535204*DoFValues_[20] - 0.12481091351015806*DoFValues_[21] - 0.11907074294466213*DoFValues_[22] - 0.094644370525147514*DoFValues_[23] + 0.15441833152351192*DoFValues_[24] + 0.12186998324029566*DoFValues_[25] + 0.29260738711856271*DoFValues_[26] + 0.16660387811727101*DoFValues_[27] + 0.40001257211624353*DoFValues_[28] + 0.31569778651760327*DoFValues_[29];
      const real_t tmp328 = J_B_4(0, 0)*J_B_4(1, 1);
      const real_t tmp329 = J_B_4(0, 1)*J_B_4(1, 0);
      const real_t tmp330 = tmp328 - tmp329;
      const real_t tmp331 = J_B_4(0, 1)*J_B_4(1, 2);
      const real_t tmp332 = J_B_4(0, 0)*J_B_4(1, 2);
      const real_t tmp333 = J_B_4(0, 2)*J_B_4(1, 1);
      const real_t tmp334 = tmp328*J_B_4(2, 2) - tmp329*J_B_4(2, 2) + tmp331*J_B_4(2, 0) - tmp332*J_B_4(2, 1) - tmp333*J_B_4(2, 0) + J_B_4(0, 2)*J_B_4(1, 0)*J_B_4(2, 1);
      const real_t tmp335 = 1.0 / (tmp334);
      const real_t tmp336 = tmp19*tmp335;
      const real_t tmp337 = tmp10*tmp336;
      const real_t tmp338 = tmp330*tmp337;
      const real_t tmp339 = tmp28*tmp336;
      const real_t tmp340 = tmp330*tmp339;
      const real_t tmp341 = -tmp332 + J_B_4(0, 2)*J_B_4(1, 0);
      const real_t tmp342 = tmp32*tmp336;
      const real_t tmp343 = tmp341*tmp342;
      const real_t tmp344 = tmp336*tmp35;
      const real_t tmp345 = tmp341*tmp344;
      const real_t tmp346 = tmp336*tmp38;
      const real_t tmp347 = tmp330*tmp346;
      const real_t tmp348 = tmp336*tmp41;
      const real_t tmp349 = tmp341*tmp348;
      const real_t tmp350 = tmp331 - tmp333;
      const real_t tmp351 = tmp336*tmp45;
      const real_t tmp352 = tmp350*tmp351;
      const real_t tmp353 = tmp336*tmp48;
      const real_t tmp354 = tmp350*tmp353;
      const real_t tmp355 = tmp336*tmp51;
      const real_t tmp356 = tmp350*tmp355;
      const real_t tmp357 = -0.1126839116535204*DoFValues_[10] - 0.12481091351015806*DoFValues_[11] - 0.11907074294466213*DoFValues_[12] - 0.094644370525147514*DoFValues_[13] + 0.15441833152351192*DoFValues_[14] + 0.12186998324029566*DoFValues_[15] + 0.29260738711856271*DoFValues_[16] + 0.16660387811727101*DoFValues_[17] + 0.40001257211624353*DoFValues_[18] + 0.31569778651760327*DoFValues_[19];
      const real_t tmp358 = -J_B_4(0, 0)*J_B_4(2, 1) + J_B_4(0, 1)*J_B_4(2, 0);
      const real_t tmp359 = tmp337*tmp358;
      const real_t tmp360 = tmp339*tmp358;
      const real_t tmp361 = J_B_4(0, 0)*J_B_4(2, 2) - J_B_4(0, 2)*J_B_4(2, 0);
      const real_t tmp362 = tmp342*tmp361;
      const real_t tmp363 = tmp344*tmp361;
      const real_t tmp364 = tmp346*tmp358;
      const real_t tmp365 = tmp348*tmp361;
      const real_t tmp366 = -J_B_4(0, 1)*J_B_4(2, 2) + J_B_4(0, 2)*J_B_4(2, 1);
      const real_t tmp367 = tmp351*tmp366;
      const real_t tmp368 = tmp353*tmp366;
      const real_t tmp369 = tmp355*tmp366;
      const real_t tmp370 = -0.1126839116535204*DoFValues_[0] - 0.12481091351015806*DoFValues_[1] - 0.11907074294466213*DoFValues_[2] - 0.094644370525147514*DoFValues_[3] + 0.15441833152351192*DoFValues_[4] + 0.12186998324029566*DoFValues_[5] + 0.29260738711856271*DoFValues_[6] + 0.16660387811727101*DoFValues_[7] + 0.40001257211624353*DoFValues_[8] + 0.31569778651760327*DoFValues_[9];
      const real_t tmp371 = J_B_4(1, 0)*J_B_4(2, 1) - J_B_4(1, 1)*J_B_4(2, 0);
      const real_t tmp372 = tmp337*tmp371;
      const real_t tmp373 = tmp339*tmp371;
      const real_t tmp374 = -J_B_4(1, 0)*J_B_4(2, 2) + J_B_4(1, 2)*J_B_4(2, 0);
      const real_t tmp375 = tmp342*tmp374;
      const real_t tmp376 = tmp344*tmp374;
      const real_t tmp377 = tmp346*tmp371;
      const real_t tmp378 = tmp348*tmp374;
      const real_t tmp379 = J_B_4(1, 1)*J_B_4(2, 2) - J_B_4(1, 2)*J_B_4(2, 1);
      const real_t tmp380 = tmp351*tmp379;
      const real_t tmp381 = tmp353*tmp379;
      const real_t tmp382 = tmp355*tmp379;
      const real_t tmp383 = tmp327*(-0.31389282688815401*tmp338 - 0.31389282688815401*tmp340 - 0.31389282688815401*tmp343 - 0.31389282688815401*tmp345 - 0.31389282688815401*tmp347 - 0.31389282688815401*tmp349 - 0.31389282688815401*tmp352 - 0.31389282688815401*tmp354 - 0.31389282688815401*tmp356) + tmp357*(-0.31389282688815401*tmp359 - 0.31389282688815401*tmp360 - 0.31389282688815401*tmp362 - 0.31389282688815401*tmp363 - 0.31389282688815401*tmp364 - 0.31389282688815401*tmp365 - 0.31389282688815401*tmp367 - 0.31389282688815401*tmp368 - 0.31389282688815401*tmp369) + tmp370*(-0.31389282688815401*tmp372 - 0.31389282688815401*tmp373 - 0.31389282688815401*tmp375 - 0.31389282688815401*tmp376 - 0.31389282688815401*tmp377 - 0.31389282688815401*tmp378 - 0.31389282688815401*tmp380 - 0.31389282688815401*tmp381 - 0.31389282688815401*tmp382);
      const real_t tmp384 = 0.032235135341605672*tmp93*std::abs(tmp334)*ScalarCoeff0_4;
      const real_t tmp385 = -0.0023795736241157134*DoFValues_[20] - 0.095916766457044111*DoFValues_[21] + 0.040896299015238904*DoFValues_[22] - 0.11213899473639061*DoFValues_[23] + 0.71057928738651965*DoFValues_[24] + 0.17092158078418584*DoFValues_[25] + 0.27849700546849571*DoFValues_[26] + 0.0031579509770052099*DoFValues_[27] + 0.0051455169468783276*DoFValues_[28] + 0.0012376942392269142*DoFValues_[29];
      const real_t tmp386 = J_B_5(0, 0)*J_B_5(1, 1);
      const real_t tmp387 = J_B_5(0, 1)*J_B_5(1, 0);
      const real_t tmp388 = tmp386 - tmp387;
      const real_t tmp389 = J_B_5(0, 1)*J_B_5(1, 2);
      const real_t tmp390 = J_B_5(0, 0)*J_B_5(1, 2);
      const real_t tmp391 = J_B_5(0, 2)*J_B_5(1, 1);
      const real_t tmp392 = tmp386*J_B_5(2, 2) - tmp387*J_B_5(2, 2) + tmp389*J_B_5(2, 0) - tmp390*J_B_5(2, 1) - tmp391*J_B_5(2, 0) + J_B_5(0, 2)*J_B_5(1, 0)*J_B_5(2, 1);
      const real_t tmp393 = tmp19/tmp392;
      const real_t tmp394 = tmp10*tmp393;
      const real_t tmp395 = tmp388*tmp394;
      const real_t tmp396 = tmp28*tmp393;
      const real_t tmp397 = tmp388*tmp396;
      const real_t tmp398 = -tmp390 + J_B_5(0, 2)*J_B_5(1, 0);
      const real_t tmp399 = tmp32*tmp393;
      const real_t tmp400 = tmp398*tmp399;
      const real_t tmp401 = tmp35*tmp393;
      const real_t tmp402 = tmp398*tmp401;
      const real_t tmp403 = tmp38*tmp393;
      const real_t tmp404 = tmp388*tmp403;
      const real_t tmp405 = tmp393*tmp41;
      const real_t tmp406 = tmp398*tmp405;
      const real_t tmp407 = tmp389 - tmp391;
      const real_t tmp408 = tmp393*tmp45;
      const real_t tmp409 = tmp407*tmp408;
      const real_t tmp410 = tmp393*tmp48;
      const real_t tmp411 = tmp407*tmp410;
      const real_t tmp412 = tmp393*tmp51;
      const real_t tmp413 = tmp407*tmp412;
      const real_t tmp414 = -0.0023795736241157134*DoFValues_[10] - 0.095916766457044111*DoFValues_[11] + 0.040896299015238904*DoFValues_[12] - 0.11213899473639061*DoFValues_[13] + 0.71057928738651965*DoFValues_[14] + 0.17092158078418584*DoFValues_[15] + 0.27849700546849571*DoFValues_[16] + 0.0031579509770052099*DoFValues_[17] + 0.0051455169468783276*DoFValues_[18] + 0.0012376942392269142*DoFValues_[19];
      const real_t tmp415 = -J_B_5(0, 0)*J_B_5(2, 1) + J_B_5(0, 1)*J_B_5(2, 0);
      const real_t tmp416 = tmp394*tmp415;
      const real_t tmp417 = tmp396*tmp415;
      const real_t tmp418 = J_B_5(0, 0)*J_B_5(2, 2) - J_B_5(0, 2)*J_B_5(2, 0);
      const real_t tmp419 = tmp399*tmp418;
      const real_t tmp420 = tmp401*tmp418;
      const real_t tmp421 = tmp403*tmp415;
      const real_t tmp422 = tmp405*tmp418;
      const real_t tmp423 = -J_B_5(0, 1)*J_B_5(2, 2) + J_B_5(0, 2)*J_B_5(2, 1);
      const real_t tmp424 = tmp408*tmp423;
      const real_t tmp425 = tmp410*tmp423;
      const real_t tmp426 = tmp412*tmp423;
      const real_t tmp427 = -0.0023795736241157134*DoFValues_[0] - 0.095916766457044111*DoFValues_[1] + 0.040896299015238904*DoFValues_[2] - 0.11213899473639061*DoFValues_[3] + 0.71057928738651965*DoFValues_[4] + 0.17092158078418584*DoFValues_[5] + 0.27849700546849571*DoFValues_[6] + 0.0031579509770052099*DoFValues_[7] + 0.0051455169468783276*DoFValues_[8] + 0.0012376942392269142*DoFValues_[9];
      const real_t tmp428 = J_B_5(1, 0)*J_B_5(2, 1) - J_B_5(1, 1)*J_B_5(2, 0);
      const real_t tmp429 = tmp394*tmp428;
      const real_t tmp430 = tmp396*tmp428;
      const real_t tmp431 = -J_B_5(1, 0)*J_B_5(2, 2) + J_B_5(1, 2)*J_B_5(2, 0);
      const real_t tmp432 = tmp399*tmp431;
      const real_t tmp433 = tmp401*tmp431;
      const real_t tmp434 = tmp403*tmp428;
      const real_t tmp435 = tmp405*tmp431;
      const real_t tmp436 = J_B_5(1, 1)*J_B_5(2, 2) - J_B_5(1, 2)*J_B_5(2, 1);
      const real_t tmp437 = tmp408*tmp436;
      const real_t tmp438 = tmp410*tmp436;
      const real_t tmp439 = tmp412*tmp436;
      const real_t tmp440 = tmp385*(0.99043597017024343*tmp395 + 0.99043597017024343*tmp397 + 0.99043597017024343*tmp400 + 0.99043597017024343*tmp402 + 0.99043597017024343*tmp404 + 0.99043597017024343*tmp406 + 0.99043597017024343*tmp409 + 0.99043597017024343*tmp411 + 0.99043597017024343*tmp413) + tmp414*(0.99043597017024343*tmp416 + 0.99043597017024343*tmp417 + 0.99043597017024343*tmp419 + 0.99043597017024343*tmp420 + 0.99043597017024343*tmp421 + 0.99043597017024343*tmp422 + 0.99043597017024343*tmp424 + 0.99043597017024343*tmp425 + 0.99043597017024343*tmp426) + tmp427*(0.99043597017024343*tmp429 + 0.99043597017024343*tmp430 + 0.99043597017024343*tmp432 + 0.99043597017024343*tmp433 + 0.99043597017024343*tmp434 + 0.99043597017024343*tmp435 + 0.99043597017024343*tmp437 + 0.99043597017024343*tmp438 + 0.99043597017024343*tmp439);
      const real_t tmp441 = 0.012693785874259733*tmp93*std::abs(tmp392)*ScalarCoeff0_5;
      const real_t tmp442 = 0.070903897183113185*DoFValues_[20] - 0.091997080019094721*DoFValues_[21] - 0.0088295745772037065*DoFValues_[22] - 0.11861685854261203*DoFValues_[23] + 0.01102306866806071*DoFValues_[24] + 0.14900755874248975*DoFValues_[25] + 0.0043712626253812137*DoFValues_[26] + 0.69019106653405426*DoFValues_[27] + 0.020247338047636947*DoFValues_[28] + 0.27369932133817437*DoFValues_[29];
      const real_t tmp443 = J_B_6(0, 0)*J_B_6(1, 1);
      const real_t tmp444 = J_B_6(0, 1)*J_B_6(1, 0);
      const real_t tmp445 = tmp443 - tmp444;
      const real_t tmp446 = J_B_6(0, 1)*J_B_6(1, 2);
      const real_t tmp447 = J_B_6(0, 0)*J_B_6(1, 2);
      const real_t tmp448 = J_B_6(0, 2)*J_B_6(1, 1);
      const real_t tmp449 = tmp443*J_B_6(2, 2) - tmp444*J_B_6(2, 2) + tmp446*J_B_6(2, 0) - tmp447*J_B_6(2, 1) - tmp448*J_B_6(2, 0) + J_B_6(0, 2)*J_B_6(1, 0)*J_B_6(2, 1);
      const real_t tmp450 = 1.0 / (tmp449);
      const real_t tmp451 = tmp19*tmp450;
      const real_t tmp452 = tmp10*tmp451;
      const real_t tmp453 = tmp445*tmp452;
      const real_t tmp454 = tmp28*tmp451;
      const real_t tmp455 = tmp445*tmp454;
      const real_t tmp456 = -tmp447 + J_B_6(0, 2)*J_B_6(1, 0);
      const real_t tmp457 = tmp32*tmp451;
      const real_t tmp458 = tmp456*tmp457;
      const real_t tmp459 = tmp35*tmp451;
      const real_t tmp460 = tmp456*tmp459;
      const real_t tmp461 = tmp38*tmp451;
      const real_t tmp462 = tmp445*tmp461;
      const real_t tmp463 = tmp41*tmp451;
      const real_t tmp464 = tmp456*tmp463;
      const real_t tmp465 = tmp446 - tmp448;
      const real_t tmp466 = tmp45*tmp451;
      const real_t tmp467 = tmp465*tmp466;
      const real_t tmp468 = tmp451*tmp48;
      const real_t tmp469 = tmp465*tmp468;
      const real_t tmp470 = tmp451*tmp51;
      const real_t tmp471 = tmp465*tmp470;
      const real_t tmp472 = 0.070903897183113185*DoFValues_[10] - 0.091997080019094721*DoFValues_[11] - 0.0088295745772037065*DoFValues_[12] - 0.11861685854261203*DoFValues_[13] + 0.01102306866806071*DoFValues_[14] + 0.14900755874248975*DoFValues_[15] + 0.0043712626253812137*DoFValues_[16] + 0.69019106653405426*DoFValues_[17] + 0.020247338047636947*DoFValues_[18] + 0.27369932133817437*DoFValues_[19];
      const real_t tmp473 = -J_B_6(0, 0)*J_B_6(2, 1) + J_B_6(0, 1)*J_B_6(2, 0);
      const real_t tmp474 = tmp452*tmp473;
      const real_t tmp475 = tmp454*tmp473;
      const real_t tmp476 = J_B_6(0, 0)*J_B_6(2, 2) - J_B_6(0, 2)*J_B_6(2, 0);
      const real_t tmp477 = tmp457*tmp476;
      const real_t tmp478 = tmp459*tmp476;
      const real_t tmp479 = tmp461*tmp473;
      const real_t tmp480 = tmp463*tmp476;
      const real_t tmp481 = -J_B_6(0, 1)*J_B_6(2, 2) + J_B_6(0, 2)*J_B_6(2, 1);
      const real_t tmp482 = tmp466*tmp481;
      const real_t tmp483 = tmp468*tmp481;
      const real_t tmp484 = tmp470*tmp481;
      const real_t tmp485 = 0.070903897183113185*DoFValues_[0] - 0.091997080019094721*DoFValues_[1] - 0.0088295745772037065*DoFValues_[2] - 0.11861685854261203*DoFValues_[3] + 0.01102306866806071*DoFValues_[4] + 0.14900755874248975*DoFValues_[5] + 0.0043712626253812137*DoFValues_[6] + 0.69019106653405426*DoFValues_[7] + 0.020247338047636947*DoFValues_[8] + 0.27369932133817437*DoFValues_[9];
      const real_t tmp486 = J_B_6(1, 0)*J_B_6(2, 1) - J_B_6(1, 1)*J_B_6(2, 0);
      const real_t tmp487 = tmp452*tmp486;
      const real_t tmp488 = tmp454*tmp486;
      const real_t tmp489 = -J_B_6(1, 0)*J_B_6(2, 2) + J_B_6(1, 2)*J_B_6(2, 0);
      const real_t tmp490 = tmp457*tmp489;
      const real_t tmp491 = tmp459*tmp489;
      const real_t tmp492 = tmp461*tmp486;
      const real_t tmp493 = tmp463*tmp489;
      const real_t tmp494 = J_B_6(1, 1)*J_B_6(2, 2) - J_B_6(1, 2)*J_B_6(2, 1);
      const real_t tmp495 = tmp466*tmp494;
      const real_t tmp496 = tmp468*tmp494;
      const real_t tmp497 = tmp470*tmp494;
      const real_t tmp498 = tmp442*(-1.2518910405721839*tmp453 - 1.2518910405721839*tmp455 - 1.2518910405721839*tmp458 - 1.2518910405721839*tmp460 - 1.2518910405721839*tmp462 - 1.2518910405721839*tmp464 - 1.2518910405721839*tmp467 - 1.2518910405721839*tmp469 - 1.2518910405721839*tmp471) + tmp472*(-1.2518910405721839*tmp474 - 1.2518910405721839*tmp475 - 1.2518910405721839*tmp477 - 1.2518910405721839*tmp478 - 1.2518910405721839*tmp479 - 1.2518910405721839*tmp480 - 1.2518910405721839*tmp482 - 1.2518910405721839*tmp483 - 1.2518910405721839*tmp484) + tmp485*(-1.2518910405721839*tmp487 - 1.2518910405721839*tmp488 - 1.2518910405721839*tmp490 - 1.2518910405721839*tmp491 - 1.2518910405721839*tmp492 - 1.2518910405721839*tmp493 - 1.2518910405721839*tmp495 - 1.2518910405721839*tmp496 - 1.2518910405721839*tmp497);
      const real_t tmp499 = 0.013237780011337553*tmp93*std::abs(tmp449)*ScalarCoeff0_6;
      const real_t tmp500 = -0.050366079282822225*DoFValues_[20] - 0.044386125994604245*DoFValues_[21] - 0.058056040641376996*DoFValues_[22] - 0.05238643785587771*DoFValues_[23] + 0.10296779823620235*DoFValues_[24] + 0.10720405494254889*DoFValues_[25] + 0.78064263777441811*DoFValues_[26] + 0.013514255131872058*DoFValues_[27] + 0.098408626234844879*DoFValues_[28] + 0.10245731145479493*DoFValues_[29];
      const real_t tmp501 = J_B_7(0, 0)*J_B_7(1, 1);
      const real_t tmp502 = J_B_7(0, 1)*J_B_7(1, 0);
      const real_t tmp503 = tmp501 - tmp502;
      const real_t tmp504 = J_B_7(0, 1)*J_B_7(1, 2);
      const real_t tmp505 = J_B_7(0, 0)*J_B_7(1, 2);
      const real_t tmp506 = J_B_7(0, 2)*J_B_7(1, 1);
      const real_t tmp507 = tmp501*J_B_7(2, 2) - tmp502*J_B_7(2, 2) + tmp504*J_B_7(2, 0) - tmp505*J_B_7(2, 1) - tmp506*J_B_7(2, 0) + J_B_7(0, 2)*J_B_7(1, 0)*J_B_7(2, 1);
      const real_t tmp508 = tmp19/tmp507;
      const real_t tmp509 = tmp10*tmp508;
      const real_t tmp510 = tmp503*tmp509;
      const real_t tmp511 = tmp28*tmp508;
      const real_t tmp512 = tmp503*tmp511;
      const real_t tmp513 = -tmp505 + J_B_7(0, 2)*J_B_7(1, 0);
      const real_t tmp514 = tmp32*tmp508;
      const real_t tmp515 = tmp513*tmp514;
      const real_t tmp516 = tmp35*tmp508;
      const real_t tmp517 = tmp513*tmp516;
      const real_t tmp518 = tmp38*tmp508;
      const real_t tmp519 = tmp503*tmp518;
      const real_t tmp520 = tmp41*tmp508;
      const real_t tmp521 = tmp513*tmp520;
      const real_t tmp522 = tmp504 - tmp506;
      const real_t tmp523 = tmp45*tmp508;
      const real_t tmp524 = tmp522*tmp523;
      const real_t tmp525 = tmp48*tmp508;
      const real_t tmp526 = tmp522*tmp525;
      const real_t tmp527 = tmp508*tmp51;
      const real_t tmp528 = tmp522*tmp527;
      const real_t tmp529 = -0.050366079282822225*DoFValues_[10] - 0.044386125994604245*DoFValues_[11] - 0.058056040641376996*DoFValues_[12] - 0.05238643785587771*DoFValues_[13] + 0.10296779823620235*DoFValues_[14] + 0.10720405494254889*DoFValues_[15] + 0.78064263777441811*DoFValues_[16] + 0.013514255131872058*DoFValues_[17] + 0.098408626234844879*DoFValues_[18] + 0.10245731145479493*DoFValues_[19];
      const real_t tmp530 = -J_B_7(0, 0)*J_B_7(2, 1) + J_B_7(0, 1)*J_B_7(2, 0);
      const real_t tmp531 = tmp509*tmp530;
      const real_t tmp532 = tmp511*tmp530;
      const real_t tmp533 = J_B_7(0, 0)*J_B_7(2, 2) - J_B_7(0, 2)*J_B_7(2, 0);
      const real_t tmp534 = tmp514*tmp533;
      const real_t tmp535 = tmp516*tmp533;
      const real_t tmp536 = tmp518*tmp530;
      const real_t tmp537 = tmp520*tmp533;
      const real_t tmp538 = -J_B_7(0, 1)*J_B_7(2, 2) + J_B_7(0, 2)*J_B_7(2, 1);
      const real_t tmp539 = tmp523*tmp538;
      const real_t tmp540 = tmp525*tmp538;
      const real_t tmp541 = tmp527*tmp538;
      const real_t tmp542 = -0.050366079282822225*DoFValues_[0] - 0.044386125994604245*DoFValues_[1] - 0.058056040641376996*DoFValues_[2] - 0.05238643785587771*DoFValues_[3] + 0.10296779823620235*DoFValues_[4] + 0.10720405494254889*DoFValues_[5] + 0.78064263777441811*DoFValues_[6] + 0.013514255131872058*DoFValues_[7] + 0.098408626234844879*DoFValues_[8] + 0.10245731145479493*DoFValues_[9];
      const real_t tmp543 = J_B_7(1, 0)*J_B_7(2, 1) - J_B_7(1, 1)*J_B_7(2, 0);
      const real_t tmp544 = tmp509*tmp543;
      const real_t tmp545 = tmp511*tmp543;
      const real_t tmp546 = -J_B_7(1, 0)*J_B_7(2, 2) + J_B_7(1, 2)*J_B_7(2, 0);
      const real_t tmp547 = tmp514*tmp546;
      const real_t tmp548 = tmp516*tmp546;
      const real_t tmp549 = tmp518*tmp543;
      const real_t tmp550 = tmp520*tmp546;
      const real_t tmp551 = J_B_7(1, 1)*J_B_7(2, 2) - J_B_7(1, 2)*J_B_7(2, 1);
      const real_t tmp552 = tmp523*tmp551;
      const real_t tmp553 = tmp525*tmp551;
      const real_t tmp554 = tmp527*tmp551;
      const real_t tmp555 = tmp500*(0.77270393148826533*tmp510 + 0.77270393148826533*tmp512 + 0.77270393148826533*tmp515 + 0.77270393148826533*tmp517 + 0.77270393148826533*tmp519 + 0.77270393148826533*tmp521 + 0.77270393148826533*tmp524 + 0.77270393148826533*tmp526 + 0.77270393148826533*tmp528) + tmp529*(0.77270393148826533*tmp531 + 0.77270393148826533*tmp532 + 0.77270393148826533*tmp534 + 0.77270393148826533*tmp535 + 0.77270393148826533*tmp536 + 0.77270393148826533*tmp537 + 0.77270393148826533*tmp539 + 0.77270393148826533*tmp540 + 0.77270393148826533*tmp541) + tmp542*(0.77270393148826533*tmp544 + 0.77270393148826533*tmp545 + 0.77270393148826533*tmp547 + 0.77270393148826533*tmp548 + 0.77270393148826533*tmp549 + 0.77270393148826533*tmp550 + 0.77270393148826533*tmp552 + 0.77270393148826533*tmp553 + 0.77270393148826533*tmp554);
      const real_t tmp556 = 0.011578327656272565*tmp93*std::abs(tmp507)*ScalarCoeff0_7;
      const real_t tmp557 = -0.019557567231552921*DoFValues_[20] - 0.067697829971284249*DoFValues_[21] - 0.047650663865325717*DoFValues_[22] - 0.043215304390912167*DoFValues_[23] + 0.010194883998076013*DoFValues_[24] + 0.080132585434918649*DoFValues_[25] + 0.089456739511664204*DoFValues_[26] + 0.091666010467002526*DoFValues_[27] + 0.10233218329240164*DoFValues_[28] + 0.80433896275501204*DoFValues_[29];
      const real_t tmp558 = J_B_8(0, 0)*J_B_8(1, 1);
      const real_t tmp559 = J_B_8(0, 1)*J_B_8(1, 0);
      const real_t tmp560 = tmp558 - tmp559;
      const real_t tmp561 = J_B_8(0, 1)*J_B_8(1, 2);
      const real_t tmp562 = J_B_8(0, 0)*J_B_8(1, 2);
      const real_t tmp563 = J_B_8(0, 2)*J_B_8(1, 1);
      const real_t tmp564 = tmp558*J_B_8(2, 2) - tmp559*J_B_8(2, 2) + tmp561*J_B_8(2, 0) - tmp562*J_B_8(2, 1) - tmp563*J_B_8(2, 0) + J_B_8(0, 2)*J_B_8(1, 0)*J_B_8(2, 1);
      const real_t tmp565 = 1.0 / (tmp564);
      const real_t tmp566 = tmp19*tmp565;
      const real_t tmp567 = tmp10*tmp566;
      const real_t tmp568 = tmp560*tmp567;
      const real_t tmp569 = tmp28*tmp566;
      const real_t tmp570 = tmp560*tmp569;
      const real_t tmp571 = -tmp562 + J_B_8(0, 2)*J_B_8(1, 0);
      const real_t tmp572 = tmp32*tmp566;
      const real_t tmp573 = tmp571*tmp572;
      const real_t tmp574 = tmp35*tmp566;
      const real_t tmp575 = tmp571*tmp574;
      const real_t tmp576 = tmp38*tmp566;
      const real_t tmp577 = tmp560*tmp576;
      const real_t tmp578 = tmp41*tmp566;
      const real_t tmp579 = tmp571*tmp578;
      const real_t tmp580 = tmp561 - tmp563;
      const real_t tmp581 = tmp45*tmp566;
      const real_t tmp582 = tmp580*tmp581;
      const real_t tmp583 = tmp48*tmp566;
      const real_t tmp584 = tmp580*tmp583;
      const real_t tmp585 = tmp51*tmp566;
      const real_t tmp586 = tmp580*tmp585;
      const real_t tmp587 = -0.019557567231552921*DoFValues_[10] - 0.067697829971284249*DoFValues_[11] - 0.047650663865325717*DoFValues_[12] - 0.043215304390912167*DoFValues_[13] + 0.010194883998076013*DoFValues_[14] + 0.080132585434918649*DoFValues_[15] + 0.089456739511664204*DoFValues_[16] + 0.091666010467002526*DoFValues_[17] + 0.10233218329240164*DoFValues_[18] + 0.80433896275501204*DoFValues_[19];
      const real_t tmp588 = -J_B_8(0, 0)*J_B_8(2, 1) + J_B_8(0, 1)*J_B_8(2, 0);
      const real_t tmp589 = tmp567*tmp588;
      const real_t tmp590 = tmp569*tmp588;
      const real_t tmp591 = J_B_8(0, 0)*J_B_8(2, 2) - J_B_8(0, 2)*J_B_8(2, 0);
      const real_t tmp592 = tmp572*tmp591;
      const real_t tmp593 = tmp574*tmp591;
      const real_t tmp594 = tmp576*tmp588;
      const real_t tmp595 = tmp578*tmp591;
      const real_t tmp596 = -J_B_8(0, 1)*J_B_8(2, 2) + J_B_8(0, 2)*J_B_8(2, 1);
      const real_t tmp597 = tmp581*tmp596;
      const real_t tmp598 = tmp583*tmp596;
      const real_t tmp599 = tmp585*tmp596;
      const real_t tmp600 = -0.019557567231552921*DoFValues_[0] - 0.067697829971284249*DoFValues_[1] - 0.047650663865325717*DoFValues_[2] - 0.043215304390912167*DoFValues_[3] + 0.010194883998076013*DoFValues_[4] + 0.080132585434918649*DoFValues_[5] + 0.089456739511664204*DoFValues_[6] + 0.091666010467002526*DoFValues_[7] + 0.10233218329240164*DoFValues_[8] + 0.80433896275501204*DoFValues_[9];
      const real_t tmp601 = J_B_8(1, 0)*J_B_8(2, 1) - J_B_8(1, 1)*J_B_8(2, 0);
      const real_t tmp602 = tmp567*tmp601;
      const real_t tmp603 = tmp569*tmp601;
      const real_t tmp604 = -J_B_8(1, 0)*J_B_8(2, 2) + J_B_8(1, 2)*J_B_8(2, 0);
      const real_t tmp605 = tmp572*tmp604;
      const real_t tmp606 = tmp574*tmp604;
      const real_t tmp607 = tmp576*tmp601;
      const real_t tmp608 = tmp578*tmp604;
      const real_t tmp609 = J_B_8(1, 1)*J_B_8(2, 2) - J_B_8(1, 2)*J_B_8(2, 1);
      const real_t tmp610 = tmp581*tmp609;
      const real_t tmp611 = tmp583*tmp609;
      const real_t tmp612 = tmp585*tmp609;
      const real_t tmp613 = tmp557*(-0.9184440441026207*tmp568 - 0.9184440441026207*tmp570 - 0.9184440441026207*tmp573 - 0.9184440441026207*tmp575 - 0.9184440441026207*tmp577 - 0.9184440441026207*tmp579 - 0.9184440441026207*tmp582 - 0.9184440441026207*tmp584 - 0.9184440441026207*tmp586) + tmp587*(-0.9184440441026207*tmp589 - 0.9184440441026207*tmp590 - 0.9184440441026207*tmp592 - 0.9184440441026207*tmp593 - 0.9184440441026207*tmp594 - 0.9184440441026207*tmp595 - 0.9184440441026207*tmp597 - 0.9184440441026207*tmp598 - 0.9184440441026207*tmp599) + tmp600*(-0.9184440441026207*tmp602 - 0.9184440441026207*tmp603 - 0.9184440441026207*tmp605 - 0.9184440441026207*tmp606 - 0.9184440441026207*tmp607 - 0.9184440441026207*tmp608 - 0.9184440441026207*tmp610 - 0.9184440441026207*tmp611 - 0.9184440441026207*tmp612);
      const real_t tmp614 = 0.0099888641910932489*tmp93*std::abs(tmp564)*ScalarCoeff0_8;
      const real_t tmp615 = -0.10746455902143294*DoFValues_[20] - 0.058185352140737757*DoFValues_[21] + 0.35761162920590117*DoFValues_[22] - 0.032708111944971592*DoFValues_[23] + 0.10431737973498022*DoFValues_[24] + 0.0094607187467148392*DoFValues_[25] + 0.19931139089788985*DoFValues_[26] + 0.022005984955445396*DoFValues_[27] + 0.46360573514257358*DoFValues_[28] + 0.042045184423637423*DoFValues_[29];
      const real_t tmp616 = J_B_9(0, 0)*J_B_9(1, 1);
      const real_t tmp617 = J_B_9(0, 1)*J_B_9(1, 0);
      const real_t tmp618 = tmp616 - tmp617;
      const real_t tmp619 = J_B_9(0, 1)*J_B_9(1, 2);
      const real_t tmp620 = J_B_9(0, 0)*J_B_9(1, 2);
      const real_t tmp621 = J_B_9(0, 2)*J_B_9(1, 1);
      const real_t tmp622 = tmp616*J_B_9(2, 2) - tmp617*J_B_9(2, 2) + tmp619*J_B_9(2, 0) - tmp620*J_B_9(2, 1) - tmp621*J_B_9(2, 0) + J_B_9(0, 2)*J_B_9(1, 0)*J_B_9(2, 1);
      const real_t tmp623 = 1.0 / (tmp622);
      const real_t tmp624 = tmp19*tmp623;
      const real_t tmp625 = tmp10*tmp624;
      const real_t tmp626 = tmp618*tmp625;
      const real_t tmp627 = tmp28*tmp624;
      const real_t tmp628 = tmp618*tmp627;
      const real_t tmp629 = -tmp620 + J_B_9(0, 2)*J_B_9(1, 0);
      const real_t tmp630 = tmp32*tmp624;
      const real_t tmp631 = tmp629*tmp630;
      const real_t tmp632 = tmp35*tmp624;
      const real_t tmp633 = tmp629*tmp632;
      const real_t tmp634 = tmp38*tmp624;
      const real_t tmp635 = tmp618*tmp634;
      const real_t tmp636 = tmp41*tmp624;
      const real_t tmp637 = tmp629*tmp636;
      const real_t tmp638 = tmp619 - tmp621;
      const real_t tmp639 = tmp45*tmp624;
      const real_t tmp640 = tmp638*tmp639;
      const real_t tmp641 = tmp48*tmp624;
      const real_t tmp642 = tmp638*tmp641;
      const real_t tmp643 = tmp51*tmp624;
      const real_t tmp644 = tmp638*tmp643;
      const real_t tmp645 = -0.10746455902143294*DoFValues_[10] - 0.058185352140737757*DoFValues_[11] + 0.35761162920590117*DoFValues_[12] - 0.032708111944971592*DoFValues_[13] + 0.10431737973498022*DoFValues_[14] + 0.0094607187467148392*DoFValues_[15] + 0.19931139089788985*DoFValues_[16] + 0.022005984955445396*DoFValues_[17] + 0.46360573514257358*DoFValues_[18] + 0.042045184423637423*DoFValues_[19];
      const real_t tmp646 = -J_B_9(0, 0)*J_B_9(2, 1) + J_B_9(0, 1)*J_B_9(2, 0);
      const real_t tmp647 = tmp625*tmp646;
      const real_t tmp648 = tmp627*tmp646;
      const real_t tmp649 = J_B_9(0, 0)*J_B_9(2, 2) - J_B_9(0, 2)*J_B_9(2, 0);
      const real_t tmp650 = tmp630*tmp649;
      const real_t tmp651 = tmp632*tmp649;
      const real_t tmp652 = tmp634*tmp646;
      const real_t tmp653 = tmp636*tmp649;
      const real_t tmp654 = -J_B_9(0, 1)*J_B_9(2, 2) + J_B_9(0, 2)*J_B_9(2, 1);
      const real_t tmp655 = tmp639*tmp654;
      const real_t tmp656 = tmp641*tmp654;
      const real_t tmp657 = tmp643*tmp654;
      const real_t tmp658 = -0.10746455902143294*DoFValues_[0] - 0.058185352140737757*DoFValues_[1] + 0.35761162920590117*DoFValues_[2] - 0.032708111944971592*DoFValues_[3] + 0.10431737973498022*DoFValues_[4] + 0.0094607187467148392*DoFValues_[5] + 0.19931139089788985*DoFValues_[6] + 0.022005984955445396*DoFValues_[7] + 0.46360573514257358*DoFValues_[8] + 0.042045184423637423*DoFValues_[9];
      const real_t tmp659 = J_B_9(1, 0)*J_B_9(2, 1) - J_B_9(1, 1)*J_B_9(2, 0);
      const real_t tmp660 = tmp625*tmp659;
      const real_t tmp661 = tmp627*tmp659;
      const real_t tmp662 = -J_B_9(1, 0)*J_B_9(2, 2) + J_B_9(1, 2)*J_B_9(2, 0);
      const real_t tmp663 = tmp630*tmp662;
      const real_t tmp664 = tmp632*tmp662;
      const real_t tmp665 = tmp634*tmp659;
      const real_t tmp666 = tmp636*tmp662;
      const real_t tmp667 = J_B_9(1, 1)*J_B_9(2, 2) - J_B_9(1, 2)*J_B_9(2, 1);
      const real_t tmp668 = tmp639*tmp667;
      const real_t tmp669 = tmp641*tmp667;
      const real_t tmp670 = tmp643*tmp667;
      const real_t tmp671 = tmp615*(0.37454442704241986*tmp626 + 0.37454442704241986*tmp628 + 0.37454442704241986*tmp631 + 0.37454442704241986*tmp633 + 0.37454442704241986*tmp635 + 0.37454442704241986*tmp637 + 0.37454442704241986*tmp640 + 0.37454442704241986*tmp642 + 0.37454442704241986*tmp644) + tmp645*(0.37454442704241986*tmp647 + 0.37454442704241986*tmp648 + 0.37454442704241986*tmp650 + 0.37454442704241986*tmp651 + 0.37454442704241986*tmp652 + 0.37454442704241986*tmp653 + 0.37454442704241986*tmp655 + 0.37454442704241986*tmp656 + 0.37454442704241986*tmp657) + tmp658*(0.37454442704241986*tmp660 + 0.37454442704241986*tmp661 + 0.37454442704241986*tmp663 + 0.37454442704241986*tmp664 + 0.37454442704241986*tmp665 + 0.37454442704241986*tmp666 + 0.37454442704241986*tmp668 + 0.37454442704241986*tmp669 + 0.37454442704241986*tmp670);
      const real_t tmp672 = 0.0092322998119293981*tmp93*std::abs(tmp622)*ScalarCoeff0_9;
      const real_t tmp673 = tmp80*tmp94;
      const real_t tmp674 = tmp151*tmp152;
      const real_t tmp675 = tmp209*tmp210;
      const real_t tmp676 = tmp267*tmp268;
      const real_t tmp677 = tmp325*tmp326;
      const real_t tmp678 = tmp383*tmp384;
      const real_t tmp679 = tmp440*tmp441;
      const real_t tmp680 = tmp498*tmp499;
      const real_t tmp681 = tmp555*tmp556;
      const real_t tmp682 = tmp613*tmp614;
      const real_t tmp683 = tmp671*tmp672;
      const real_t tmp684 = 2.7375616618121592*tmp30 + 2.7375616618121592*tmp37 + 2.7375616618121592*tmp50;
      const real_t tmp685 = 0.42641669024797446*tmp27 + 0.42641669024797446*tmp34 + 0.42641669024797446*tmp47;
      const real_t tmp686 = 2.7375616618121592*tmp57 + 2.7375616618121592*tmp60 + 2.7375616618121592*tmp65;
      const real_t tmp687 = 0.42641669024797446*tmp56 + 0.42641669024797446*tmp59 + 0.42641669024797446*tmp64;
      const real_t tmp688 = 2.7375616618121592*tmp70 + 2.7375616618121592*tmp73 + 2.7375616618121592*tmp78;
      const real_t tmp689 = 0.42641669024797446*tmp69 + 0.42641669024797446*tmp72 + 0.42641669024797446*tmp77;
      const real_t tmp690 = 0.2723974837528258*tmp108 + 0.2723974837528258*tmp113 + 0.2723974837528258*tmp122;
      const real_t tmp691 = 0.3256196736114374*tmp106 + 0.3256196736114374*tmp111 + 0.3256196736114374*tmp120;
      const real_t tmp692 = 0.2723974837528258*tmp128 + 0.2723974837528258*tmp131 + 0.2723974837528258*tmp136;
      const real_t tmp693 = 0.3256196736114374*tmp127 + 0.3256196736114374*tmp130 + 0.3256196736114374*tmp135;
      const real_t tmp694 = 0.2723974837528258*tmp141 + 0.2723974837528258*tmp144 + 0.2723974837528258*tmp149;
      const real_t tmp695 = 0.3256196736114374*tmp140 + 0.3256196736114374*tmp143 + 0.3256196736114374*tmp148;
      const real_t tmp696 = 0.054242807519210512*tmp166 + 0.054242807519210512*tmp171 + 0.054242807519210512*tmp180;
      const real_t tmp697 = 0.69877623478892303*tmp164 + 0.69877623478892303*tmp169 + 0.69877623478892303*tmp178;
      const real_t tmp698 = 0.054242807519210512*tmp186 + 0.054242807519210512*tmp189 + 0.054242807519210512*tmp194;
      const real_t tmp699 = 0.69877623478892303*tmp185 + 0.69877623478892303*tmp188 + 0.69877623478892303*tmp193;
      const real_t tmp700 = 0.054242807519210512*tmp199 + 0.054242807519210512*tmp202 + 0.054242807519210512*tmp207;
      const real_t tmp701 = 0.69877623478892303*tmp198 + 0.69877623478892303*tmp201 + 0.69877623478892303*tmp206;
      const real_t tmp702 = 1.2716142408535775*tmp224 + 1.2716142408535775*tmp229 + 1.2716142408535775*tmp238;
      const real_t tmp703 = 1.3169318389705873*tmp222 + 1.3169318389705873*tmp227 + 1.3169318389705873*tmp236;
      const real_t tmp704 = 1.2716142408535775*tmp244 + 1.2716142408535775*tmp247 + 1.2716142408535775*tmp252;
      const real_t tmp705 = 1.3169318389705873*tmp243 + 1.3169318389705873*tmp246 + 1.3169318389705873*tmp251;
      const real_t tmp706 = 1.2716142408535775*tmp257 + 1.2716142408535775*tmp260 + 1.2716142408535775*tmp265;
      const real_t tmp707 = 1.3169318389705873*tmp256 + 1.3169318389705873*tmp259 + 1.3169318389705873*tmp264;
      const real_t tmp708 = 1.4152929568371884*tmp282 + 1.4152929568371884*tmp287 + 1.4152929568371884*tmp296;
      const real_t tmp709 = 0.41537646564397157*tmp280 + 0.41537646564397157*tmp285 + 0.41537646564397157*tmp294;
      const real_t tmp710 = 1.4152929568371884*tmp302 + 1.4152929568371884*tmp305 + 1.4152929568371884*tmp310;
      const real_t tmp711 = 0.41537646564397157*tmp301 + 0.41537646564397157*tmp304 + 0.41537646564397157*tmp309;
      const real_t tmp712 = 1.4152929568371884*tmp315 + 1.4152929568371884*tmp318 + 1.4152929568371884*tmp323;
      const real_t tmp713 = 0.41537646564397157*tmp314 + 0.41537646564397157*tmp317 + 0.41537646564397157*tmp322;
      const real_t tmp714 = 0.50720690366156718*tmp340 + 0.50720690366156718*tmp345 + 0.50720690366156718*tmp354;
      const real_t tmp715 = 1.2177936097379878*tmp338 + 1.2177936097379878*tmp343 + 1.2177936097379878*tmp352;
      const real_t tmp716 = 0.50720690366156718*tmp360 + 0.50720690366156718*tmp363 + 0.50720690366156718*tmp368;
      const real_t tmp717 = 1.2177936097379878*tmp359 + 1.2177936097379878*tmp362 + 1.2177936097379878*tmp367;
      const real_t tmp718 = 0.50720690366156718*tmp373 + 0.50720690366156718*tmp376 + 0.50720690366156718*tmp381;
      const real_t tmp719 = 1.2177936097379878*tmp372 + 1.2177936097379878*tmp375 + 1.2177936097379878*tmp380;
      const real_t tmp720 = 1.3207616593498592*tmp397 + 1.3207616593498592*tmp402 + 1.3207616593498592*tmp411;
      const real_t tmp721 = 2.1520288156647434*tmp395 + 2.1520288156647434*tmp400 + 2.1520288156647434*tmp409;
      const real_t tmp722 = 1.3207616593498592*tmp417 + 1.3207616593498592*tmp420 + 1.3207616593498592*tmp425;
      const real_t tmp723 = 2.1520288156647434*tmp416 + 2.1520288156647434*tmp419 + 2.1520288156647434*tmp424;
      const real_t tmp724 = 1.3207616593498592*tmp430 + 1.3207616593498592*tmp433 + 1.3207616593498592*tmp438;
      const real_t tmp725 = 2.1520288156647434*tmp429 + 2.1520288156647434*tmp432 + 2.1520288156647434*tmp437;
      const real_t tmp726 = 1.2259759537187613*tmp455 + 1.2259759537187613*tmp460 + 1.2259759537187613*tmp469;
      const real_t tmp727 = 0.035965040373342916*tmp453 + 0.035965040373342916*tmp458 + 0.035965040373342916*tmp467;
      const real_t tmp728 = 1.2259759537187613*tmp475 + 1.2259759537187613*tmp478 + 1.2259759537187613*tmp483;
      const real_t tmp729 = 0.035965040373342916*tmp474 + 0.035965040373342916*tmp477 + 0.035965040373342916*tmp482;
      const real_t tmp730 = 1.2259759537187613*tmp488 + 1.2259759537187613*tmp491 + 1.2259759537187613*tmp496;
      const real_t tmp731 = 0.035965040373342916*tmp487 + 0.035965040373342916*tmp490 + 0.035965040373342916*tmp495;
      const real_t tmp732 = 0.23782646519773576*tmp512 + 0.23782646519773576*tmp517 + 0.23782646519773576*tmp526;
      const real_t tmp733 = 1.7318139619254227*tmp510 + 1.7318139619254227*tmp515 + 1.7318139619254227*tmp524;
      const real_t tmp734 = 0.23782646519773576*tmp532 + 0.23782646519773576*tmp535 + 0.23782646519773576*tmp540;
      const real_t tmp735 = 1.7318139619254227*tmp531 + 1.7318139619254227*tmp534 + 1.7318139619254227*tmp539;
      const real_t tmp736 = 0.23782646519773576*tmp545 + 0.23782646519773576*tmp548 + 0.23782646519773576*tmp553;
      const real_t tmp737 = 1.7318139619254227*tmp544 + 1.7318139619254227*tmp547 + 1.7318139619254227*tmp552;
      const real_t tmp738 = 0.19112574223634571*tmp570 + 0.19112574223634571*tmp575 + 0.19112574223634571*tmp584;
      const real_t tmp739 = 0.21336495814298084*tmp568 + 0.21336495814298084*tmp573 + 0.21336495814298084*tmp582;
      const real_t tmp740 = 0.19112574223634571*tmp590 + 0.19112574223634571*tmp593 + 0.19112574223634571*tmp598;
      const real_t tmp741 = 0.21336495814298084*tmp589 + 0.21336495814298084*tmp592 + 0.21336495814298084*tmp597;
      const real_t tmp742 = 0.19112574223634571*tmp603 + 0.19112574223634571*tmp606 + 0.19112574223634571*tmp611;
      const real_t tmp743 = 0.21336495814298084*tmp602 + 0.21336495814298084*tmp605 + 0.21336495814298084*tmp610;
      const real_t tmp744 = 0.14073571909439453*tmp628 + 0.14073571909439453*tmp633 + 0.14073571909439453*tmp642;
      const real_t tmp745 = 2.9649155283744921*tmp626 + 2.9649155283744921*tmp631 + 2.9649155283744921*tmp640;
      const real_t tmp746 = 0.14073571909439453*tmp648 + 0.14073571909439453*tmp651 + 0.14073571909439453*tmp656;
      const real_t tmp747 = 2.9649155283744921*tmp647 + 2.9649155283744921*tmp650 + 2.9649155283744921*tmp655;
      const real_t tmp748 = 0.14073571909439453*tmp661 + 0.14073571909439453*tmp664 + 0.14073571909439453*tmp669;
      const real_t tmp749 = 2.9649155283744921*tmp660 + 2.9649155283744921*tmp663 + 2.9649155283744921*tmp668;
      const real_t tmp750 = 2.7375616618121592*tmp40 + 2.7375616618121592*tmp43 + 2.7375616618121592*tmp53;
      const real_t tmp751 = 0.38881857835033307*tmp27 + 0.38881857835033307*tmp34 + 0.38881857835033307*tmp47;
      const real_t tmp752 = 2.7375616618121592*tmp61 + 2.7375616618121592*tmp62 + 2.7375616618121592*tmp66;
      const real_t tmp753 = 0.38881857835033307*tmp56 + 0.38881857835033307*tmp59 + 0.38881857835033307*tmp64;
      const real_t tmp754 = 2.7375616618121592*tmp74 + 2.7375616618121592*tmp75 + 2.7375616618121592*tmp79;
      const real_t tmp755 = 0.38881857835033307*tmp69 + 0.38881857835033307*tmp72 + 0.38881857835033307*tmp77;
      const real_t tmp756 = 0.2723974837528258*tmp115 + 0.2723974837528258*tmp117 + 0.2723974837528258*tmp124;
      const real_t tmp757 = 3.0100340280386204*tmp106 + 3.0100340280386204*tmp111 + 3.0100340280386204*tmp120;
      const real_t tmp758 = 0.2723974837528258*tmp132 + 0.2723974837528258*tmp133 + 0.2723974837528258*tmp137;
      const real_t tmp759 = 3.0100340280386204*tmp127 + 3.0100340280386204*tmp130 + 3.0100340280386204*tmp135;
      const real_t tmp760 = 0.2723974837528258*tmp145 + 0.2723974837528258*tmp146 + 0.2723974837528258*tmp150;
      const real_t tmp761 = 3.0100340280386204*tmp140 + 3.0100340280386204*tmp143 + 3.0100340280386204*tmp148;
      const real_t tmp762 = 0.054242807519210512*tmp173 + 0.054242807519210512*tmp175 + 0.054242807519210512*tmp182;
      const real_t tmp763 = 0.16196202691036121*tmp164 + 0.16196202691036121*tmp169 + 0.16196202691036121*tmp178;
      const real_t tmp764 = 0.054242807519210512*tmp190 + 0.054242807519210512*tmp191 + 0.054242807519210512*tmp195;
      const real_t tmp765 = 0.16196202691036121*tmp185 + 0.16196202691036121*tmp188 + 0.16196202691036121*tmp193;
      const real_t tmp766 = 0.054242807519210512*tmp203 + 0.054242807519210512*tmp204 + 0.054242807519210512*tmp208;
      const real_t tmp767 = 0.16196202691036121*tmp198 + 0.16196202691036121*tmp201 + 0.16196202691036121*tmp206;
      const real_t tmp768 = 1.2716142408535775*tmp231 + 1.2716142408535775*tmp233 + 1.2716142408535775*tmp240;
      const real_t tmp769 = 0.11827798082591956*tmp222 + 0.11827798082591956*tmp227 + 0.11827798082591956*tmp236;
      const real_t tmp770 = 1.2716142408535775*tmp248 + 1.2716142408535775*tmp249 + 1.2716142408535775*tmp253;
      const real_t tmp771 = 0.11827798082591956*tmp243 + 0.11827798082591956*tmp246 + 0.11827798082591956*tmp251;
      const real_t tmp772 = 1.2716142408535775*tmp261 + 1.2716142408535775*tmp262 + 1.2716142408535775*tmp266;
      const real_t tmp773 = 0.11827798082591956*tmp256 + 0.11827798082591956*tmp259 + 0.11827798082591956*tmp264;
      const real_t tmp774 = 1.4152929568371884*tmp289 + 1.4152929568371884*tmp291 + 1.4152929568371884*tmp298;
      const real_t tmp775 = 1.730840956191074*tmp280 + 1.730840956191074*tmp285 + 1.730840956191074*tmp294;
      const real_t tmp776 = 1.4152929568371884*tmp306 + 1.4152929568371884*tmp307 + 1.4152929568371884*tmp311;
      const real_t tmp777 = 1.730840956191074*tmp301 + 1.730840956191074*tmp304 + 1.730840956191074*tmp309;
      const real_t tmp778 = 1.4152929568371884*tmp319 + 1.4152929568371884*tmp320 + 1.4152929568371884*tmp324;
      const real_t tmp779 = 1.730840956191074*tmp314 + 1.730840956191074*tmp317 + 1.730840956191074*tmp322;
      const real_t tmp780 = 0.50720690366156718*tmp347 + 0.50720690366156718*tmp349 + 0.50720690366156718*tmp356;
      const real_t tmp781 = 0.96110665971229103*tmp338 + 0.96110665971229103*tmp343 + 0.96110665971229103*tmp352;
      const real_t tmp782 = 0.50720690366156718*tmp364 + 0.50720690366156718*tmp365 + 0.50720690366156718*tmp369;
      const real_t tmp783 = 0.96110665971229103*tmp359 + 0.96110665971229103*tmp362 + 0.96110665971229103*tmp367;
      const real_t tmp784 = 0.50720690366156718*tmp377 + 0.50720690366156718*tmp378 + 0.50720690366156718*tmp382;
      const real_t tmp785 = 0.96110665971229103*tmp372 + 0.96110665971229103*tmp375 + 0.96110665971229103*tmp380;
      const real_t tmp786 = 1.3207616593498592*tmp404 + 1.3207616593498592*tmp406 + 1.3207616593498592*tmp413;
      const real_t tmp787 = 0.51764549515564062*tmp395 + 0.51764549515564062*tmp400 + 0.51764549515564062*tmp409;
      const real_t tmp788 = 1.3207616593498592*tmp421 + 1.3207616593498592*tmp422 + 1.3207616593498592*tmp426;
      const real_t tmp789 = 0.51764549515564062*tmp416 + 0.51764549515564062*tmp419 + 0.51764549515564062*tmp424;
      const real_t tmp790 = 1.3207616593498592*tmp434 + 1.3207616593498592*tmp435 + 1.3207616593498592*tmp439;
      const real_t tmp791 = 0.51764549515564062*tmp429 + 0.51764549515564062*tmp432 + 0.51764549515564062*tmp437;
      const real_t tmp792 = 1.2259759537187613*tmp462 + 1.2259759537187613*tmp464 + 1.2259759537187613*tmp471;
      const real_t tmp793 = 0.48616796533571183*tmp453 + 0.48616796533571183*tmp458 + 0.48616796533571183*tmp467;
      const real_t tmp794 = 1.2259759537187613*tmp479 + 1.2259759537187613*tmp480 + 1.2259759537187613*tmp484;
      const real_t tmp795 = 0.48616796533571183*tmp474 + 0.48616796533571183*tmp477 + 0.48616796533571183*tmp482;
      const real_t tmp796 = 1.2259759537187613*tmp492 + 1.2259759537187613*tmp493 + 1.2259759537187613*tmp497;
      const real_t tmp797 = 0.48616796533571183*tmp487 + 0.48616796533571183*tmp490 + 0.48616796533571183*tmp495;
      const real_t tmp798 = 0.23782646519773576*tmp519 + 0.23782646519773576*tmp521 + 0.23782646519773576*tmp528;
      const real_t tmp799 = 1.8030635043651069*tmp510 + 1.8030635043651069*tmp515 + 1.8030635043651069*tmp524;
      const real_t tmp800 = 0.23782646519773576*tmp536 + 0.23782646519773576*tmp537 + 0.23782646519773576*tmp541;
      const real_t tmp801 = 1.8030635043651069*tmp531 + 1.8030635043651069*tmp534 + 1.8030635043651069*tmp539;
      const real_t tmp802 = 0.23782646519773576*tmp549 + 0.23782646519773576*tmp550 + 0.23782646519773576*tmp554;
      const real_t tmp803 = 1.8030635043651069*tmp544 + 1.8030635043651069*tmp547 + 1.8030635043651069*tmp552;
      const real_t tmp804 = 0.19112574223634571*tmp577 + 0.19112574223634571*tmp579 + 0.19112574223634571*tmp586;
      const real_t tmp805 = 1.6770652555180527*tmp568 + 1.6770652555180527*tmp573 + 1.6770652555180527*tmp582;
      const real_t tmp806 = 0.19112574223634571*tmp594 + 0.19112574223634571*tmp595 + 0.19112574223634571*tmp599;
      const real_t tmp807 = 1.6770652555180527*tmp589 + 1.6770652555180527*tmp592 + 1.6770652555180527*tmp597;
      const real_t tmp808 = 0.19112574223634571*tmp607 + 0.19112574223634571*tmp608 + 0.19112574223634571*tmp612;
      const real_t tmp809 = 1.6770652555180527*tmp602 + 1.6770652555180527*tmp605 + 1.6770652555180527*tmp610;
      const real_t tmp810 = 0.14073571909439453*tmp635 + 0.14073571909439453*tmp637 + 0.14073571909439453*tmp644;
      const real_t tmp811 = 0.2688931795735332*tmp626 + 0.2688931795735332*tmp631 + 0.2688931795735332*tmp640;
      const real_t tmp812 = 0.14073571909439453*tmp652 + 0.14073571909439453*tmp653 + 0.14073571909439453*tmp657;
      const real_t tmp813 = 0.2688931795735332*tmp647 + 0.2688931795735332*tmp650 + 0.2688931795735332*tmp655;
      const real_t tmp814 = 0.14073571909439453*tmp665 + 0.14073571909439453*tmp666 + 0.14073571909439453*tmp670;
      const real_t tmp815 = 0.2688931795735332*tmp660 + 0.2688931795735332*tmp663 + 0.2688931795735332*tmp668;
      const real_t tmp816 = 0.42641669024797446*tmp40 + 0.42641669024797446*tmp43 + 0.42641669024797446*tmp53;
      const real_t tmp817 = 0.38881857835033307*tmp30 + 0.38881857835033307*tmp37 + 0.38881857835033307*tmp50;
      const real_t tmp818 = 0.42641669024797446*tmp61 + 0.42641669024797446*tmp62 + 0.42641669024797446*tmp66;
      const real_t tmp819 = 0.38881857835033307*tmp57 + 0.38881857835033307*tmp60 + 0.38881857835033307*tmp65;
      const real_t tmp820 = 0.42641669024797446*tmp74 + 0.42641669024797446*tmp75 + 0.42641669024797446*tmp79;
      const real_t tmp821 = 0.38881857835033307*tmp70 + 0.38881857835033307*tmp73 + 0.38881857835033307*tmp78;
      const real_t tmp822 = 0.3256196736114374*tmp115 + 0.3256196736114374*tmp117 + 0.3256196736114374*tmp124;
      const real_t tmp823 = 3.0100340280386204*tmp108 + 3.0100340280386204*tmp113 + 3.0100340280386204*tmp122;
      const real_t tmp824 = 0.3256196736114374*tmp132 + 0.3256196736114374*tmp133 + 0.3256196736114374*tmp137;
      const real_t tmp825 = 3.0100340280386204*tmp128 + 3.0100340280386204*tmp131 + 3.0100340280386204*tmp136;
      const real_t tmp826 = 0.3256196736114374*tmp145 + 0.3256196736114374*tmp146 + 0.3256196736114374*tmp150;
      const real_t tmp827 = 3.0100340280386204*tmp141 + 3.0100340280386204*tmp144 + 3.0100340280386204*tmp149;
      const real_t tmp828 = 0.69877623478892303*tmp173 + 0.69877623478892303*tmp175 + 0.69877623478892303*tmp182;
      const real_t tmp829 = 0.16196202691036121*tmp166 + 0.16196202691036121*tmp171 + 0.16196202691036121*tmp180;
      const real_t tmp830 = 0.69877623478892303*tmp190 + 0.69877623478892303*tmp191 + 0.69877623478892303*tmp195;
      const real_t tmp831 = 0.16196202691036121*tmp186 + 0.16196202691036121*tmp189 + 0.16196202691036121*tmp194;
      const real_t tmp832 = 0.69877623478892303*tmp203 + 0.69877623478892303*tmp204 + 0.69877623478892303*tmp208;
      const real_t tmp833 = 0.16196202691036121*tmp199 + 0.16196202691036121*tmp202 + 0.16196202691036121*tmp207;
      const real_t tmp834 = 1.3169318389705873*tmp231 + 1.3169318389705873*tmp233 + 1.3169318389705873*tmp240;
      const real_t tmp835 = 0.11827798082591956*tmp224 + 0.11827798082591956*tmp229 + 0.11827798082591956*tmp238;
      const real_t tmp836 = 1.3169318389705873*tmp248 + 1.3169318389705873*tmp249 + 1.3169318389705873*tmp253;
      const real_t tmp837 = 0.11827798082591956*tmp244 + 0.11827798082591956*tmp247 + 0.11827798082591956*tmp252;
      const real_t tmp838 = 1.3169318389705873*tmp261 + 1.3169318389705873*tmp262 + 1.3169318389705873*tmp266;
      const real_t tmp839 = 0.11827798082591956*tmp257 + 0.11827798082591956*tmp260 + 0.11827798082591956*tmp265;
      const real_t tmp840 = 0.41537646564397157*tmp289 + 0.41537646564397157*tmp291 + 0.41537646564397157*tmp298;
      const real_t tmp841 = 1.730840956191074*tmp282 + 1.730840956191074*tmp287 + 1.730840956191074*tmp296;
      const real_t tmp842 = 0.41537646564397157*tmp306 + 0.41537646564397157*tmp307 + 0.41537646564397157*tmp311;
      const real_t tmp843 = 1.730840956191074*tmp302 + 1.730840956191074*tmp305 + 1.730840956191074*tmp310;
      const real_t tmp844 = 0.41537646564397157*tmp319 + 0.41537646564397157*tmp320 + 0.41537646564397157*tmp324;
      const real_t tmp845 = 1.730840956191074*tmp315 + 1.730840956191074*tmp318 + 1.730840956191074*tmp323;
      const real_t tmp846 = 1.2177936097379878*tmp347 + 1.2177936097379878*tmp349 + 1.2177936097379878*tmp356;
      const real_t tmp847 = 0.96110665971229103*tmp340 + 0.96110665971229103*tmp345 + 0.96110665971229103*tmp354;
      const real_t tmp848 = 1.2177936097379878*tmp364 + 1.2177936097379878*tmp365 + 1.2177936097379878*tmp369;
      const real_t tmp849 = 0.96110665971229103*tmp360 + 0.96110665971229103*tmp363 + 0.96110665971229103*tmp368;
      const real_t tmp850 = 1.2177936097379878*tmp377 + 1.2177936097379878*tmp378 + 1.2177936097379878*tmp382;
      const real_t tmp851 = 0.96110665971229103*tmp373 + 0.96110665971229103*tmp376 + 0.96110665971229103*tmp381;
      const real_t tmp852 = 2.1520288156647434*tmp404 + 2.1520288156647434*tmp406 + 2.1520288156647434*tmp413;
      const real_t tmp853 = 0.51764549515564062*tmp397 + 0.51764549515564062*tmp402 + 0.51764549515564062*tmp411;
      const real_t tmp854 = 2.1520288156647434*tmp421 + 2.1520288156647434*tmp422 + 2.1520288156647434*tmp426;
      const real_t tmp855 = 0.51764549515564062*tmp417 + 0.51764549515564062*tmp420 + 0.51764549515564062*tmp425;
      const real_t tmp856 = 2.1520288156647434*tmp434 + 2.1520288156647434*tmp435 + 2.1520288156647434*tmp439;
      const real_t tmp857 = 0.51764549515564062*tmp430 + 0.51764549515564062*tmp433 + 0.51764549515564062*tmp438;
      const real_t tmp858 = 0.035965040373342916*tmp462 + 0.035965040373342916*tmp464 + 0.035965040373342916*tmp471;
      const real_t tmp859 = 0.48616796533571183*tmp455 + 0.48616796533571183*tmp460 + 0.48616796533571183*tmp469;
      const real_t tmp860 = 0.035965040373342916*tmp479 + 0.035965040373342916*tmp480 + 0.035965040373342916*tmp484;
      const real_t tmp861 = 0.48616796533571183*tmp475 + 0.48616796533571183*tmp478 + 0.48616796533571183*tmp483;
      const real_t tmp862 = 0.035965040373342916*tmp492 + 0.035965040373342916*tmp493 + 0.035965040373342916*tmp497;
      const real_t tmp863 = 0.48616796533571183*tmp488 + 0.48616796533571183*tmp491 + 0.48616796533571183*tmp496;
      const real_t tmp864 = 1.7318139619254227*tmp519 + 1.7318139619254227*tmp521 + 1.7318139619254227*tmp528;
      const real_t tmp865 = 1.8030635043651069*tmp512 + 1.8030635043651069*tmp517 + 1.8030635043651069*tmp526;
      const real_t tmp866 = 1.7318139619254227*tmp536 + 1.7318139619254227*tmp537 + 1.7318139619254227*tmp541;
      const real_t tmp867 = 1.8030635043651069*tmp532 + 1.8030635043651069*tmp535 + 1.8030635043651069*tmp540;
      const real_t tmp868 = 1.7318139619254227*tmp549 + 1.7318139619254227*tmp550 + 1.7318139619254227*tmp554;
      const real_t tmp869 = 1.8030635043651069*tmp545 + 1.8030635043651069*tmp548 + 1.8030635043651069*tmp553;
      const real_t tmp870 = 0.21336495814298084*tmp577 + 0.21336495814298084*tmp579 + 0.21336495814298084*tmp586;
      const real_t tmp871 = 1.6770652555180527*tmp570 + 1.6770652555180527*tmp575 + 1.6770652555180527*tmp584;
      const real_t tmp872 = 0.21336495814298084*tmp594 + 0.21336495814298084*tmp595 + 0.21336495814298084*tmp599;
      const real_t tmp873 = 1.6770652555180527*tmp590 + 1.6770652555180527*tmp593 + 1.6770652555180527*tmp598;
      const real_t tmp874 = 0.21336495814298084*tmp607 + 0.21336495814298084*tmp608 + 0.21336495814298084*tmp612;
      const real_t tmp875 = 1.6770652555180527*tmp603 + 1.6770652555180527*tmp606 + 1.6770652555180527*tmp611;
      const real_t tmp876 = 2.9649155283744921*tmp635 + 2.9649155283744921*tmp637 + 2.9649155283744921*tmp644;
      const real_t tmp877 = 0.2688931795735332*tmp628 + 0.2688931795735332*tmp633 + 0.2688931795735332*tmp642;
      const real_t tmp878 = 2.9649155283744921*tmp652 + 2.9649155283744921*tmp653 + 2.9649155283744921*tmp657;
      const real_t tmp879 = 0.2688931795735332*tmp648 + 0.2688931795735332*tmp651 + 0.2688931795735332*tmp656;
      const real_t tmp880 = 2.9649155283744921*tmp665 + 2.9649155283744921*tmp666 + 2.9649155283744921*tmp670;
      const real_t tmp881 = 0.2688931795735332*tmp661 + 0.2688931795735332*tmp664 + 0.2688931795735332*tmp669;
      elMat(0,0) = (tmp151*tmp151)*tmp152 + (tmp209*tmp209)*tmp210 + (tmp267*tmp267)*tmp268 + (tmp325*tmp325)*tmp326 + (tmp383*tmp383)*tmp384 + (tmp440*tmp440)*tmp441 + (tmp498*tmp498)*tmp499 + (tmp555*tmp555)*tmp556 + (tmp613*tmp613)*tmp614 + (tmp671*tmp671)*tmp672 + (tmp80*tmp80)*tmp94;
      elMat(0,1) = tmp673*(-0.61118142164966693*tmp0*(tmp40 + tmp43 + tmp53) - 0.61118142164966693*tmp54*(tmp61 + tmp62 + tmp66) - 0.61118142164966693*tmp67*(tmp74 + tmp75 + tmp79)) + tmp674*(2.0100340280386204*tmp125*(tmp132 + tmp133 + tmp137) + 2.0100340280386204*tmp138*(tmp145 + tmp146 + tmp150) + 2.0100340280386204*tmp95*(tmp115 + tmp117 + tmp124)) + tmp675*(-0.83803797308963879*tmp153*(tmp173 + tmp175 + tmp182) - 0.83803797308963879*tmp183*(tmp190 + tmp191 + tmp195) - 0.83803797308963879*tmp196*(tmp203 + tmp204 + tmp208)) + tmp676*(-0.88172201917408044*tmp211*(tmp231 + tmp233 + tmp240) - 0.88172201917408044*tmp241*(tmp248 + tmp249 + tmp253) - 0.88172201917408044*tmp254*(tmp261 + tmp262 + tmp266)) + tmp677*(0.73084095619107403*tmp269*(tmp289 + tmp291 + tmp298) + 0.73084095619107403*tmp299*(tmp306 + tmp307 + tmp311) + 0.73084095619107403*tmp312*(tmp319 + tmp320 + tmp324)) + tmp678*(-0.038893340287708966*tmp327*(tmp347 + tmp349 + tmp356) - 0.038893340287708966*tmp357*(tmp364 + tmp365 + tmp369) - 0.038893340287708966*tmp370*(tmp377 + tmp378 + tmp382)) + tmp679*(-0.48235450484435938*tmp385*(tmp404 + tmp406 + tmp413) - 0.48235450484435938*tmp414*(tmp421 + tmp422 + tmp426) - 0.48235450484435938*tmp427*(tmp434 + tmp435 + tmp439)) + tmp680*(-0.51383203466428817*tmp442*(tmp462 + tmp464 + tmp471) - 0.51383203466428817*tmp472*(tmp479 + tmp480 + tmp484) - 0.51383203466428817*tmp485*(tmp492 + tmp493 + tmp497)) + tmp681*(0.80306350436510687*tmp500*(tmp519 + tmp521 + tmp528) + 0.80306350436510687*tmp529*(tmp536 + tmp537 + tmp541) + 0.80306350436510687*tmp542*(tmp549 + tmp550 + tmp554)) + tmp682*(0.67706525551805274*tmp557*(tmp577 + tmp579 + tmp586) + 0.67706525551805274*tmp587*(tmp594 + tmp595 + tmp599) + 0.67706525551805274*tmp600*(tmp607 + tmp608 + tmp612)) + tmp683*(-0.7311068204264668*tmp615*(tmp635 + tmp637 + tmp644) - 0.7311068204264668*tmp645*(tmp652 + tmp653 + tmp657) - 0.7311068204264668*tmp658*(tmp665 + tmp666 + tmp670));
      elMat(0,2) = tmp673*(-0.57358330975202554*tmp0*(tmp30 + tmp37 + tmp50) - 0.57358330975202554*tmp54*(tmp57 + tmp60 + tmp65) - 0.57358330975202554*tmp67*(tmp70 + tmp73 + tmp78)) + tmp674*(-0.6743803263885626*tmp125*(tmp128 + tmp131 + tmp136) - 0.6743803263885626*tmp138*(tmp141 + tmp144 + tmp149) - 0.6743803263885626*tmp95*(tmp108 + tmp113 + tmp122)) + tmp675*(-0.30122376521107697*tmp153*(tmp166 + tmp171 + tmp180) - 0.30122376521107697*tmp183*(tmp186 + tmp189 + tmp194) - 0.30122376521107697*tmp196*(tmp199 + tmp202 + tmp207)) + tmp676*(0.3169318389705873*tmp211*(tmp224 + tmp229 + tmp238) + 0.3169318389705873*tmp241*(tmp244 + tmp247 + tmp252) + 0.3169318389705873*tmp254*(tmp257 + tmp260 + tmp265)) + tmp677*(-0.58462353435602843*tmp269*(tmp282 + tmp287 + tmp296) - 0.58462353435602843*tmp299*(tmp302 + tmp305 + tmp310) - 0.58462353435602843*tmp312*(tmp315 + tmp318 + tmp323)) + tmp678*(0.21779360973798778*tmp327*(tmp340 + tmp345 + tmp354) + 0.21779360973798778*tmp357*(tmp360 + tmp363 + tmp368) + 0.21779360973798778*tmp370*(tmp373 + tmp376 + tmp381)) + tmp679*(1.1520288156647434*tmp385*(tmp397 + tmp402 + tmp411) + 1.1520288156647434*tmp414*(tmp417 + tmp420 + tmp425) + 1.1520288156647434*tmp427*(tmp430 + tmp433 + tmp438)) + tmp680*(-0.96403495962665708*tmp442*(tmp455 + tmp460 + tmp469) - 0.96403495962665708*tmp472*(tmp475 + tmp478 + tmp483) - 0.96403495962665708*tmp485*(tmp488 + tmp491 + tmp496)) + tmp681*(0.7318139619254227*tmp500*(tmp512 + tmp517 + tmp526) + 0.7318139619254227*tmp529*(tmp532 + tmp535 + tmp540) + 0.7318139619254227*tmp542*(tmp545 + tmp548 + tmp553)) + tmp682*(-0.78663504185701916*tmp557*(tmp570 + tmp575 + tmp584) - 0.78663504185701916*tmp587*(tmp590 + tmp593 + tmp598) - 0.78663504185701916*tmp600*(tmp603 + tmp606 + tmp611)) + tmp683*(1.9649155283744921*tmp615*(tmp628 + tmp633 + tmp642) + 1.9649155283744921*tmp645*(tmp648 + tmp651 + tmp656) + 1.9649155283744921*tmp658*(tmp661 + tmp664 + tmp669));
      elMat(0,3) = tmp673*(1.7375616618121592*tmp0*(tmp27 + tmp34 + tmp47) + 1.7375616618121592*tmp54*(tmp56 + tmp59 + tmp64) + 1.7375616618121592*tmp67*(tmp69 + tmp72 + tmp77)) + tmp674*(-0.7276025162471742*tmp125*(tmp127 + tmp130 + tmp135) - 0.7276025162471742*tmp138*(tmp140 + tmp143 + tmp148) - 0.7276025162471742*tmp95*(tmp106 + tmp111 + tmp120)) + tmp675*(-0.94575719248078949*tmp153*(tmp164 + tmp169 + tmp178) - 0.94575719248078949*tmp183*(tmp185 + tmp188 + tmp193) - 0.94575719248078949*tmp196*(tmp198 + tmp201 + tmp206)) + tmp676*(0.27161424085357755*tmp211*(tmp222 + tmp227 + tmp236) + 0.27161424085357755*tmp241*(tmp243 + tmp246 + tmp251) + 0.27161424085357755*tmp254*(tmp256 + tmp259 + tmp264)) + tmp677*(0.41529295683718837*tmp269*(tmp280 + tmp285 + tmp294) + 0.41529295683718837*tmp299*(tmp301 + tmp304 + tmp309) + 0.41529295683718837*tmp312*(tmp314 + tmp317 + tmp322)) + tmp678*(-0.49279309633843282*tmp327*(tmp338 + tmp343 + tmp352) - 0.49279309633843282*tmp357*(tmp359 + tmp362 + tmp367) - 0.49279309633843282*tmp370*(tmp372 + tmp375 + tmp380)) + tmp679*(0.32076165934985923*tmp385*(tmp395 + tmp400 + tmp409) + 0.32076165934985923*tmp414*(tmp416 + tmp419 + tmp424) + 0.32076165934985923*tmp427*(tmp429 + tmp432 + tmp437)) + tmp680*(0.22597595371876134*tmp442*(tmp453 + tmp458 + tmp467) + 0.22597595371876134*tmp472*(tmp474 + tmp477 + tmp482) + 0.22597595371876134*tmp485*(tmp487 + tmp490 + tmp495)) + tmp681*(-0.76217353480226424*tmp500*(tmp510 + tmp515 + tmp524) - 0.76217353480226424*tmp529*(tmp531 + tmp534 + tmp539) - 0.76217353480226424*tmp542*(tmp544 + tmp547 + tmp552)) + tmp682*(-0.80887425776365429*tmp557*(tmp568 + tmp573 + tmp582) - 0.80887425776365429*tmp587*(tmp589 + tmp592 + tmp597) - 0.80887425776365429*tmp600*(tmp602 + tmp605 + tmp610)) + tmp683*(-0.85926428090560547*tmp615*(tmp626 + tmp631 + tmp640) - 0.85926428090560547*tmp645*(tmp647 + tmp650 + tmp655) - 0.85926428090560547*tmp658*(tmp660 + tmp663 + tmp668));
      elMat(0,4) = tmp673*(tmp0*(tmp684 + tmp685) + tmp54*(tmp686 + tmp687) + tmp67*(tmp688 + tmp689)) + tmp674*(tmp125*(tmp692 + tmp693) + tmp138*(tmp694 + tmp695) + tmp95*(tmp690 + tmp691)) + tmp675*(tmp153*(tmp696 + tmp697) + tmp183*(tmp698 + tmp699) + tmp196*(tmp700 + tmp701)) + tmp676*(tmp211*(tmp702 + tmp703) + tmp241*(tmp704 + tmp705) + tmp254*(tmp706 + tmp707)) + tmp677*(tmp269*(tmp708 + tmp709) + tmp299*(tmp710 + tmp711) + tmp312*(tmp712 + tmp713)) + tmp678*(tmp327*(tmp714 + tmp715) + tmp357*(tmp716 + tmp717) + tmp370*(tmp718 + tmp719)) + tmp679*(tmp385*(tmp720 + tmp721) + tmp414*(tmp722 + tmp723) + tmp427*(tmp724 + tmp725)) + tmp680*(tmp442*(tmp726 + tmp727) + tmp472*(tmp728 + tmp729) + tmp485*(tmp730 + tmp731)) + tmp681*(tmp500*(tmp732 + tmp733) + tmp529*(tmp734 + tmp735) + tmp542*(tmp736 + tmp737)) + tmp682*(tmp557*(tmp738 + tmp739) + tmp587*(tmp740 + tmp741) + tmp600*(tmp742 + tmp743)) + tmp683*(tmp615*(tmp744 + tmp745) + tmp645*(tmp746 + tmp747) + tmp658*(tmp748 + tmp749));
      elMat(0,5) = tmp673*(tmp0*(tmp750 + tmp751) + tmp54*(tmp752 + tmp753) + tmp67*(tmp754 + tmp755)) + tmp674*(tmp125*(tmp758 + tmp759) + tmp138*(tmp760 + tmp761) + tmp95*(tmp756 + tmp757)) + tmp675*(tmp153*(tmp762 + tmp763) + tmp183*(tmp764 + tmp765) + tmp196*(tmp766 + tmp767)) + tmp676*(tmp211*(tmp768 + tmp769) + tmp241*(tmp770 + tmp771) + tmp254*(tmp772 + tmp773)) + tmp677*(tmp269*(tmp774 + tmp775) + tmp299*(tmp776 + tmp777) + tmp312*(tmp778 + tmp779)) + tmp678*(tmp327*(tmp780 + tmp781) + tmp357*(tmp782 + tmp783) + tmp370*(tmp784 + tmp785)) + tmp679*(tmp385*(tmp786 + tmp787) + tmp414*(tmp788 + tmp789) + tmp427*(tmp790 + tmp791)) + tmp680*(tmp442*(tmp792 + tmp793) + tmp472*(tmp794 + tmp795) + tmp485*(tmp796 + tmp797)) + tmp681*(tmp500*(tmp798 + tmp799) + tmp529*(tmp800 + tmp801) + tmp542*(tmp802 + tmp803)) + tmp682*(tmp557*(tmp804 + tmp805) + tmp587*(tmp806 + tmp807) + tmp600*(tmp808 + tmp809)) + tmp683*(tmp615*(tmp810 + tmp811) + tmp645*(tmp812 + tmp813) + tmp658*(tmp814 + tmp815));
      elMat(0,6) = tmp673*(tmp0*(tmp816 + tmp817) + tmp54*(tmp818 + tmp819) + tmp67*(tmp820 + tmp821)) + tmp674*(tmp125*(tmp824 + tmp825) + tmp138*(tmp826 + tmp827) + tmp95*(tmp822 + tmp823)) + tmp675*(tmp153*(tmp828 + tmp829) + tmp183*(tmp830 + tmp831) + tmp196*(tmp832 + tmp833)) + tmp676*(tmp211*(tmp834 + tmp835) + tmp241*(tmp836 + tmp837) + tmp254*(tmp838 + tmp839)) + tmp677*(tmp269*(tmp840 + tmp841) + tmp299*(tmp842 + tmp843) + tmp312*(tmp844 + tmp845)) + tmp678*(tmp327*(tmp846 + tmp847) + tmp357*(tmp848 + tmp849) + tmp370*(tmp850 + tmp851)) + tmp679*(tmp385*(tmp852 + tmp853) + tmp414*(tmp854 + tmp855) + tmp427*(tmp856 + tmp857)) + tmp680*(tmp442*(tmp858 + tmp859) + tmp472*(tmp860 + tmp861) + tmp485*(tmp862 + tmp863)) + tmp681*(tmp500*(tmp864 + tmp865) + tmp529*(tmp866 + tmp867) + tmp542*(tmp868 + tmp869)) + tmp682*(tmp557*(tmp870 + tmp871) + tmp587*(tmp872 + tmp873) + tmp600*(tmp874 + tmp875)) + tmp683*(tmp615*(tmp876 + tmp877) + tmp645*(tmp878 + tmp879) + tmp658*(tmp880 + tmp881));
      elMat(0,7) = tmp673*(tmp0*(-2.2903585922226259*tmp27 - 2.2903585922226259*tmp34 - 2.2903585922226259*tmp47 - tmp684 - tmp750) + tmp54*(-2.2903585922226259*tmp56 - 2.2903585922226259*tmp59 - 2.2903585922226259*tmp64 - tmp686 - tmp752) + tmp67*(-tmp688 - 2.2903585922226259*tmp69 - 2.2903585922226259*tmp72 - tmp754 - 2.2903585922226259*tmp77)) + tmp674*(tmp125*(0.11955133084429059*tmp10*tmp103*tmp126*tmp19 + 0.11955133084429059*tmp103*tmp129*tmp19*tmp32 + 0.11955133084429059*tmp103*tmp134*tmp19*tmp45 - tmp692 - tmp758) + tmp138*(0.11955133084429059*tmp10*tmp103*tmp139*tmp19 + 0.11955133084429059*tmp103*tmp142*tmp19*tmp32 + 0.11955133084429059*tmp103*tmp147*tmp19*tmp45 - tmp694 - tmp760) + tmp95*(0.11955133084429059*tmp10*tmp103*tmp19*tmp98 + 0.11955133084429059*tmp103*tmp109*tmp19*tmp32 + 0.11955133084429059*tmp103*tmp118*tmp19*tmp45 - tmp690 - tmp756)) + tmp675*(tmp153*(3.030776123262295*tmp10*tmp156*tmp161*tmp19 + 3.030776123262295*tmp161*tmp167*tmp19*tmp32 + 3.030776123262295*tmp161*tmp176*tmp19*tmp45 - tmp696 - tmp762) + tmp183*(3.030776123262295*tmp10*tmp161*tmp184*tmp19 + 3.030776123262295*tmp161*tmp187*tmp19*tmp32 + 3.030776123262295*tmp161*tmp19*tmp192*tmp45 - tmp698 - tmp764) + tmp196*(3.030776123262295*tmp10*tmp161*tmp19*tmp197 + 3.030776123262295*tmp161*tmp19*tmp200*tmp32 + 3.030776123262295*tmp161*tmp19*tmp205*tmp45 - tmp700 - tmp766)) + tmp676*(tmp211*(0.021561698496338266*tmp10*tmp19*tmp214*tmp219 + 0.021561698496338266*tmp19*tmp219*tmp225*tmp32 + 0.021561698496338266*tmp19*tmp219*tmp234*tmp45 - tmp702 - tmp768) + tmp241*(0.021561698496338266*tmp10*tmp19*tmp219*tmp242 + 0.021561698496338266*tmp19*tmp219*tmp245*tmp32 + 0.021561698496338266*tmp19*tmp219*tmp250*tmp45 - tmp704 - tmp770) + tmp254*(0.021561698496338266*tmp10*tmp19*tmp219*tmp255 + 0.021561698496338266*tmp19*tmp219*tmp258*tmp32 + 0.021561698496338266*tmp19*tmp219*tmp263*tmp45 - tmp706 - tmp772)) + tmp677*(tmp269*(-0.97680333550942233*tmp280 - 0.97680333550942233*tmp285 - 0.97680333550942233*tmp294 - tmp708 - tmp774) + tmp299*(-0.97680333550942233*tmp301 - 0.97680333550942233*tmp304 - 0.97680333550942233*tmp309 - tmp710 - tmp776) + tmp312*(-0.97680333550942233*tmp314 - 0.97680333550942233*tmp317 - 0.97680333550942233*tmp322 - tmp712 - tmp778)) + tmp678*(tmp327*(0.80668592322658683*tmp10*tmp19*tmp330*tmp335 + 0.80668592322658683*tmp19*tmp32*tmp335*tmp341 + 0.80668592322658683*tmp19*tmp335*tmp350*tmp45 - tmp714 - tmp780) + tmp357*(0.80668592322658683*tmp10*tmp19*tmp335*tmp358 + 0.80668592322658683*tmp19*tmp32*tmp335*tmp361 + 0.80668592322658683*tmp19*tmp335*tmp366*tmp45 - tmp716 - tmp782) + tmp370*(0.80668592322658683*tmp10*tmp19*tmp335*tmp371 + 0.80668592322658683*tmp19*tmp32*tmp335*tmp374 + 0.80668592322658683*tmp19*tmp335*tmp379*tmp45 - tmp718 - tmp784)) + tmp679*(tmp385*(-1.3111976295201027*tmp395 - 1.3111976295201027*tmp400 - 1.3111976295201027*tmp409 - tmp720 - tmp786) + tmp414*(-1.3111976295201027*tmp416 - 1.3111976295201027*tmp419 - 1.3111976295201027*tmp424 - tmp722 - tmp788) + tmp427*(-1.3111976295201027*tmp429 - 1.3111976295201027*tmp432 - 1.3111976295201027*tmp437 - tmp724 - tmp790)) + tmp680*(tmp442*(1.0259150868534226*tmp10*tmp19*tmp445*tmp450 + 1.0259150868534226*tmp19*tmp32*tmp450*tmp456 + 1.0259150868534226*tmp19*tmp45*tmp450*tmp465 - tmp726 - tmp792) + tmp472*(1.0259150868534226*tmp10*tmp19*tmp450*tmp473 + 1.0259150868534226*tmp19*tmp32*tmp450*tmp476 + 1.0259150868534226*tmp19*tmp45*tmp450*tmp481 - tmp728 - tmp794) + tmp485*(1.0259150868534226*tmp10*tmp19*tmp450*tmp486 + 1.0259150868534226*tmp19*tmp32*tmp450*tmp489 + 1.0259150868534226*tmp19*tmp45*tmp450*tmp494 - tmp730 - tmp796)) + tmp681*(tmp500*(-0.010530396686001087*tmp510 - 0.010530396686001087*tmp515 - 0.010530396686001087*tmp524 - tmp732 - tmp798) + tmp529*(-0.010530396686001087*tmp531 - 0.010530396686001087*tmp534 - 0.010530396686001087*tmp539 - tmp734 - tmp800) + tmp542*(-0.010530396686001087*tmp544 - 0.010530396686001087*tmp547 - 0.010530396686001087*tmp552 - tmp736 - tmp802)) + tmp682*(tmp557*(1.727318301866275*tmp10*tmp19*tmp560*tmp565 + 1.727318301866275*tmp19*tmp32*tmp565*tmp571 + 1.727318301866275*tmp19*tmp45*tmp565*tmp580 - tmp738 - tmp804) + tmp587*(1.727318301866275*tmp10*tmp19*tmp565*tmp588 + 1.727318301866275*tmp19*tmp32*tmp565*tmp591 + 1.727318301866275*tmp19*tmp45*tmp565*tmp596 - tmp740 - tmp806) + tmp600*(1.727318301866275*tmp10*tmp19*tmp565*tmp601 + 1.727318301866275*tmp19*tmp32*tmp565*tmp604 + 1.727318301866275*tmp19*tmp45*tmp565*tmp609 - tmp742 - tmp808)) + tmp683*(tmp615*(0.48471985386318561*tmp10*tmp19*tmp618*tmp623 + 0.48471985386318561*tmp19*tmp32*tmp623*tmp629 + 0.48471985386318561*tmp19*tmp45*tmp623*tmp638 - tmp744 - tmp810) + tmp645*(0.48471985386318561*tmp10*tmp19*tmp623*tmp646 + 0.48471985386318561*tmp19*tmp32*tmp623*tmp649 + 0.48471985386318561*tmp19*tmp45*tmp623*tmp654 - tmp746 - tmp812) + tmp658*(0.48471985386318561*tmp10*tmp19*tmp623*tmp659 + 0.48471985386318561*tmp19*tmp32*tmp623*tmp662 + 0.48471985386318561*tmp19*tmp45*tmp623*tmp667 - tmp748 - tmp814));
      elMat(0,8) = tmp673*(tmp0*(0.020786379341558803*tmp19*tmp24*tmp28*tmp3 + 0.020786379341558803*tmp19*tmp24*tmp31*tmp35 + 0.020786379341558803*tmp19*tmp24*tmp44*tmp48 - tmp685 - tmp816) + tmp54*(0.020786379341558803*tmp19*tmp24*tmp28*tmp55 + 0.020786379341558803*tmp19*tmp24*tmp35*tmp58 + 0.020786379341558803*tmp19*tmp24*tmp48*tmp63 - tmp687 - tmp818) + tmp67*(0.020786379341558803*tmp19*tmp24*tmp28*tmp68 + 0.020786379341558803*tmp19*tmp24*tmp35*tmp71 + 0.020786379341558803*tmp19*tmp24*tmp48*tmp76 - tmp689 - tmp820)) + tmp674*(tmp125*(0.066329140985678992*tmp103*tmp126*tmp19*tmp28 + 0.066329140985678992*tmp103*tmp129*tmp19*tmp35 + 0.066329140985678992*tmp103*tmp134*tmp19*tmp48 - tmp693 - tmp824) + tmp138*(0.066329140985678992*tmp103*tmp139*tmp19*tmp28 + 0.066329140985678992*tmp103*tmp142*tmp19*tmp35 + 0.066329140985678992*tmp103*tmp147*tmp19*tmp48 - tmp695 - tmp826) + tmp95*(0.066329140985678992*tmp103*tmp109*tmp19*tmp35 + 0.066329140985678992*tmp103*tmp118*tmp19*tmp48 + 0.066329140985678992*tmp103*tmp19*tmp28*tmp98 - tmp691 - tmp822)) + tmp675*(tmp153*(2.3862426959925824*tmp156*tmp161*tmp19*tmp28 + 2.3862426959925824*tmp161*tmp167*tmp19*tmp35 + 2.3862426959925824*tmp161*tmp176*tmp19*tmp48 - tmp697 - tmp828) + tmp183*(2.3862426959925824*tmp161*tmp184*tmp19*tmp28 + 2.3862426959925824*tmp161*tmp187*tmp19*tmp35 + 2.3862426959925824*tmp161*tmp19*tmp192*tmp48 - tmp699 - tmp830) + tmp196*(2.3862426959925824*tmp161*tmp19*tmp197*tmp28 + 2.3862426959925824*tmp161*tmp19*tmp200*tmp35 + 2.3862426959925824*tmp161*tmp19*tmp205*tmp48 - tmp701 - tmp832)) + tmp676*(tmp211*(-0.023755899620671705*tmp224 - 0.023755899620671705*tmp229 - 0.023755899620671705*tmp238 - tmp703 - tmp834) + tmp241*(-0.023755899620671705*tmp244 - 0.023755899620671705*tmp247 - 0.023755899620671705*tmp252 - tmp705 - tmp836) + tmp254*(-0.023755899620671705*tmp257 - 0.023755899620671705*tmp260 - 0.023755899620671705*tmp265 - tmp707 - tmp838)) + tmp677*(tmp269*(0.023113155683794462*tmp19*tmp272*tmp277*tmp28 + 0.023113155683794462*tmp19*tmp277*tmp283*tmp35 + 0.023113155683794462*tmp19*tmp277*tmp292*tmp48 - tmp709 - tmp840) + tmp299*(0.023113155683794462*tmp19*tmp277*tmp28*tmp300 + 0.023113155683794462*tmp19*tmp277*tmp303*tmp35 + 0.023113155683794462*tmp19*tmp277*tmp308*tmp48 - tmp711 - tmp842) + tmp312*(0.023113155683794462*tmp19*tmp277*tmp28*tmp313 + 0.023113155683794462*tmp19*tmp277*tmp316*tmp35 + 0.023113155683794462*tmp19*tmp277*tmp321*tmp48 - tmp713 - tmp844)) + tmp678*(tmp327*(0.096099217150166227*tmp19*tmp28*tmp330*tmp335 + 0.096099217150166227*tmp19*tmp335*tmp341*tmp35 + 0.096099217150166227*tmp19*tmp335*tmp350*tmp48 - tmp715 - tmp846) + tmp357*(0.096099217150166227*tmp19*tmp28*tmp335*tmp358 + 0.096099217150166227*tmp19*tmp335*tmp35*tmp361 + 0.096099217150166227*tmp19*tmp335*tmp366*tmp48 - tmp717 - tmp848) + tmp370*(0.096099217150166227*tmp19*tmp28*tmp335*tmp371 + 0.096099217150166227*tmp19*tmp335*tmp35*tmp374 + 0.096099217150166227*tmp19*tmp335*tmp379*tmp48 - tmp719 - tmp850)) + tmp679*(tmp385*(-2.1424647858349868*tmp397 - 2.1424647858349868*tmp402 - 2.1424647858349868*tmp411 - tmp721 - tmp852) + tmp414*(-2.1424647858349868*tmp417 - 2.1424647858349868*tmp420 - 2.1424647858349868*tmp425 - tmp723 - tmp854) + tmp427*(-2.1424647858349868*tmp430 - 2.1424647858349868*tmp433 - 2.1424647858349868*tmp438 - tmp725 - tmp856)) + tmp680*(tmp442*(2.215926000198841*tmp19*tmp28*tmp445*tmp450 + 2.215926000198841*tmp19*tmp35*tmp450*tmp456 + 2.215926000198841*tmp19*tmp450*tmp465*tmp48 - tmp727 - tmp858) + tmp472*(2.215926000198841*tmp19*tmp28*tmp450*tmp473 + 2.215926000198841*tmp19*tmp35*tmp450*tmp476 + 2.215926000198841*tmp19*tmp450*tmp48*tmp481 - tmp729 - tmp860) + tmp485*(2.215926000198841*tmp19*tmp28*tmp450*tmp486 + 2.215926000198841*tmp19*tmp35*tmp450*tmp489 + 2.215926000198841*tmp19*tmp450*tmp48*tmp494 - tmp731 - tmp862)) + tmp681*(tmp500*(-1.504517893413688*tmp512 - 1.504517893413688*tmp517 - 1.504517893413688*tmp526 - tmp733 - tmp864) + tmp529*(-1.504517893413688*tmp532 - 1.504517893413688*tmp535 - 1.504517893413688*tmp540 - tmp735 - tmp866) + tmp542*(-1.504517893413688*tmp545 - 1.504517893413688*tmp548 - 1.504517893413688*tmp553 - tmp737 - tmp868)) + tmp682*(tmp557*(1.7050790859596399*tmp19*tmp28*tmp560*tmp565 + 1.7050790859596399*tmp19*tmp35*tmp565*tmp571 + 1.7050790859596399*tmp19*tmp48*tmp565*tmp580 - tmp739 - tmp870) + tmp587*(1.7050790859596399*tmp19*tmp28*tmp565*tmp588 + 1.7050790859596399*tmp19*tmp35*tmp565*tmp591 + 1.7050790859596399*tmp19*tmp48*tmp565*tmp596 - tmp741 - tmp872) + tmp600*(1.7050790859596399*tmp19*tmp28*tmp565*tmp601 + 1.7050790859596399*tmp19*tmp35*tmp565*tmp604 + 1.7050790859596399*tmp19*tmp48*tmp565*tmp609 - tmp743 - tmp874)) + tmp683*(tmp615*(-2.339459955416912*tmp628 - 2.339459955416912*tmp633 - 2.339459955416912*tmp642 - tmp745 - tmp876) + tmp645*(-2.339459955416912*tmp648 - 2.339459955416912*tmp651 - 2.339459955416912*tmp656 - tmp747 - tmp878) + tmp658*(-2.339459955416912*tmp661 - 2.339459955416912*tmp664 - 2.339459955416912*tmp669 - tmp749 - tmp880));
      elMat(0,9) = tmp673*(tmp0*(0.058384491239200198*tmp19*tmp24*tmp3*tmp38 + 0.058384491239200198*tmp19*tmp24*tmp31*tmp41 + 0.058384491239200198*tmp19*tmp24*tmp44*tmp51 - tmp751 - tmp817) + tmp54*(0.058384491239200198*tmp19*tmp24*tmp38*tmp55 + 0.058384491239200198*tmp19*tmp24*tmp41*tmp58 + 0.058384491239200198*tmp19*tmp24*tmp51*tmp63 - tmp753 - tmp819) + tmp67*(0.058384491239200198*tmp19*tmp24*tmp38*tmp68 + 0.058384491239200198*tmp19*tmp24*tmp41*tmp71 + 0.058384491239200198*tmp19*tmp24*tmp51*tmp76 - tmp755 - tmp821)) + tmp674*(tmp125*(-2.6180852134415042*tmp132 - 2.6180852134415042*tmp133 - 2.6180852134415042*tmp137 - tmp759 - tmp825) + tmp138*(-2.6180852134415042*tmp145 - 2.6180852134415042*tmp146 - 2.6180852134415042*tmp150 - tmp761 - tmp827) + tmp95*(-2.6180852134415042*tmp115 - 2.6180852134415042*tmp117 - 2.6180852134415042*tmp124 - tmp757 - tmp823)) + tmp675*(tmp153*(2.923056903871144*tmp156*tmp161*tmp19*tmp38 + 2.923056903871144*tmp161*tmp167*tmp19*tmp41 + 2.923056903871144*tmp161*tmp176*tmp19*tmp51 - tmp763 - tmp829) + tmp183*(2.923056903871144*tmp161*tmp184*tmp19*tmp38 + 2.923056903871144*tmp161*tmp187*tmp19*tmp41 + 2.923056903871144*tmp161*tmp19*tmp192*tmp51 - tmp765 - tmp831) + tmp196*(2.923056903871144*tmp161*tmp19*tmp197*tmp38 + 2.923056903871144*tmp161*tmp19*tmp200*tmp41 + 2.923056903871144*tmp161*tmp19*tmp205*tmp51 - tmp767 - tmp833)) + tmp676*(tmp211*(1.1748979585239958*tmp19*tmp214*tmp219*tmp38 + 1.1748979585239958*tmp19*tmp219*tmp225*tmp41 + 1.1748979585239958*tmp19*tmp219*tmp234*tmp51 - tmp769 - tmp835) + tmp241*(1.1748979585239958*tmp19*tmp219*tmp242*tmp38 + 1.1748979585239958*tmp19*tmp219*tmp245*tmp41 + 1.1748979585239958*tmp19*tmp219*tmp250*tmp51 - tmp771 - tmp837) + tmp254*(1.1748979585239958*tmp19*tmp219*tmp255*tmp38 + 1.1748979585239958*tmp19*tmp219*tmp258*tmp41 + 1.1748979585239958*tmp19*tmp219*tmp263*tmp51 - tmp773 - tmp839)) + tmp677*(tmp269*(-1.292351334863308*tmp289 - 1.292351334863308*tmp291 - 1.292351334863308*tmp298 - tmp775 - tmp841) + tmp299*(-1.292351334863308*tmp306 - 1.292351334863308*tmp307 - 1.292351334863308*tmp311 - tmp777 - tmp843) + tmp312*(-1.292351334863308*tmp319 - 1.292351334863308*tmp320 - 1.292351334863308*tmp324 - tmp779 - tmp845)) + tmp678*(tmp327*(0.35278616717586297*tmp19*tmp330*tmp335*tmp38 + 0.35278616717586297*tmp19*tmp335*tmp341*tmp41 + 0.35278616717586297*tmp19*tmp335*tmp350*tmp51 - tmp781 - tmp847) + tmp357*(0.35278616717586297*tmp19*tmp335*tmp358*tmp38 + 0.35278616717586297*tmp19*tmp335*tmp361*tmp41 + 0.35278616717586297*tmp19*tmp335*tmp366*tmp51 - tmp783 - tmp849) + tmp370*(0.35278616717586297*tmp19*tmp335*tmp371*tmp38 + 0.35278616717586297*tmp19*tmp335*tmp374*tmp41 + 0.35278616717586297*tmp19*tmp335*tmp379*tmp51 - tmp785 - tmp851)) + tmp679*(tmp385*(-0.50808146532588383*tmp404 - 0.50808146532588383*tmp406 - 0.50808146532588383*tmp413 - tmp787 - tmp853) + tmp414*(-0.50808146532588383*tmp421 - 0.50808146532588383*tmp422 - 0.50808146532588383*tmp426 - tmp789 - tmp855) + tmp427*(-0.50808146532588383*tmp434 - 0.50808146532588383*tmp435 - 0.50808146532588383*tmp439 - tmp791 - tmp857)) + tmp680*(tmp442*(1.7657230752364721*tmp19*tmp38*tmp445*tmp450 + 1.7657230752364721*tmp19*tmp41*tmp450*tmp456 + 1.7657230752364721*tmp19*tmp450*tmp465*tmp51 - tmp793 - tmp859) + tmp472*(1.7657230752364721*tmp19*tmp38*tmp450*tmp473 + 1.7657230752364721*tmp19*tmp41*tmp450*tmp476 + 1.7657230752364721*tmp19*tmp450*tmp481*tmp51 - tmp795 - tmp861) + tmp485*(1.7657230752364721*tmp19*tmp38*tmp450*tmp486 + 1.7657230752364721*tmp19*tmp41*tmp450*tmp489 + 1.7657230752364721*tmp19*tmp450*tmp494*tmp51 - tmp797 - tmp863)) + tmp681*(tmp500*(-1.5757674358533722*tmp519 - 1.5757674358533722*tmp521 - 1.5757674358533722*tmp528 - tmp799 - tmp865) + tmp529*(-1.5757674358533722*tmp536 - 1.5757674358533722*tmp537 - 1.5757674358533722*tmp541 - tmp801 - tmp867) + tmp542*(-1.5757674358533722*tmp549 - 1.5757674358533722*tmp550 - 1.5757674358533722*tmp554 - tmp803 - tmp869)) + tmp682*(tmp557*(0.24137878858456796*tmp19*tmp38*tmp560*tmp565 + 0.24137878858456796*tmp19*tmp41*tmp565*tmp571 + 0.24137878858456796*tmp19*tmp51*tmp565*tmp580 - tmp805 - tmp871) + tmp587*(0.24137878858456796*tmp19*tmp38*tmp565*tmp588 + 0.24137878858456796*tmp19*tmp41*tmp565*tmp591 + 0.24137878858456796*tmp19*tmp51*tmp565*tmp596 - tmp807 - tmp873) + tmp600*(0.24137878858456796*tmp19*tmp38*tmp565*tmp601 + 0.24137878858456796*tmp19*tmp41*tmp565*tmp604 + 0.24137878858456796*tmp19*tmp51*tmp565*tmp609 - tmp809 - tmp875)) + tmp683*(tmp615*(0.35656239338404694*tmp19*tmp38*tmp618*tmp623 + 0.35656239338404694*tmp19*tmp41*tmp623*tmp629 + 0.35656239338404694*tmp19*tmp51*tmp623*tmp638 - tmp811 - tmp877) + tmp645*(0.35656239338404694*tmp19*tmp38*tmp623*tmp646 + 0.35656239338404694*tmp19*tmp41*tmp623*tmp649 + 0.35656239338404694*tmp19*tmp51*tmp623*tmp654 - tmp813 - tmp879) + tmp658*(0.35656239338404694*tmp19*tmp38*tmp623*tmp659 + 0.35656239338404694*tmp19*tmp41*tmp623*tmp662 + 0.35656239338404694*tmp19*tmp51*tmp623*tmp667 - tmp815 - tmp881));
   }

} // namespace hyteg